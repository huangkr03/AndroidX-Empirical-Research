perfetto.protos.TestConfig
<perfetto.protos.TestConfig: perfetto.protos.TestConfig$Companion Companion>
<perfetto.protos.TestConfig: java.lang.Integer message_count>
<perfetto.protos.TestConfig: java.lang.Integer max_messages_per_second>
<perfetto.protos.TestConfig: java.lang.Integer seed>
<perfetto.protos.TestConfig: java.lang.Integer message_size>
<perfetto.protos.TestConfig: java.lang.Boolean send_batch_on_register>
<perfetto.protos.TestConfig: perfetto.protos.TestConfig$DummyFields dummy_fields>
<perfetto.protos.TestConfig: com.squareup.wire.ProtoAdapter ADAPTER>
<perfetto.protos.TestConfig: long serialVersionUID>
    public void <init>(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Boolean, perfetto.protos.TestConfig$DummyFields, okio.ByteString)
    {
        perfetto.protos.TestConfig r0;
        java.lang.Integer r1, r2, r3, r4;
        java.lang.Boolean r5;
        perfetto.protos.TestConfig$DummyFields r6;
        okio.ByteString r7;
        com.squareup.wire.ProtoAdapter $r8;

        r0 := @this: perfetto.protos.TestConfig;

        r1 := @parameter0: java.lang.Integer;

        r2 := @parameter1: java.lang.Integer;

        r3 := @parameter2: java.lang.Integer;

        r4 := @parameter3: java.lang.Integer;

        r5 := @parameter4: java.lang.Boolean;

        r6 := @parameter5: perfetto.protos.TestConfig$DummyFields;

        r7 := @parameter6: okio.ByteString;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r7, "unknownFields");

        $r8 = <perfetto.protos.TestConfig: com.squareup.wire.ProtoAdapter ADAPTER>;

        specialinvoke r0.<com.squareup.wire.Message: void <init>(com.squareup.wire.ProtoAdapter,okio.ByteString)>($r8, r7);

        r0.<perfetto.protos.TestConfig: java.lang.Integer message_count> = r1;

        r0.<perfetto.protos.TestConfig: java.lang.Integer max_messages_per_second> = r2;

        r0.<perfetto.protos.TestConfig: java.lang.Integer seed> = r3;

        r0.<perfetto.protos.TestConfig: java.lang.Integer message_size> = r4;

        r0.<perfetto.protos.TestConfig: java.lang.Boolean send_batch_on_register> = r5;

        r0.<perfetto.protos.TestConfig: perfetto.protos.TestConfig$DummyFields dummy_fields> = r6;

        return;
    }

    public void <init>(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Boolean, perfetto.protos.TestConfig$DummyFields, okio.ByteString, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.TestConfig r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        java.lang.Integer r2, r3, r4, r5;
        java.lang.Boolean r6;
        perfetto.protos.TestConfig$DummyFields r7;
        okio.ByteString r8;

        r0 := @this: perfetto.protos.TestConfig;

        r2 := @parameter0: java.lang.Integer;

        r3 := @parameter1: java.lang.Integer;

        r4 := @parameter2: java.lang.Integer;

        r5 := @parameter3: java.lang.Integer;

        r6 := @parameter4: java.lang.Boolean;

        r7 := @parameter5: perfetto.protos.TestConfig$DummyFields;

        r8 := @parameter6: okio.ByteString;

        i0 := @parameter7: int;

        r1 := @parameter8: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r2 = null;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r3 = null;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        r4 = null;

     label3:
        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        r5 = null;

     label4:
        $i5 = i0 & 16;

        if $i5 == 0 goto label5;

        r6 = null;

     label5:
        $i6 = i0 & 32;

        if $i6 == 0 goto label6;

        r7 = null;

     label6:
        $i7 = i0 & 64;

        if $i7 == 0 goto label7;

        r8 = <okio.ByteString: okio.ByteString EMPTY>;

     label7:
        specialinvoke r0.<perfetto.protos.TestConfig: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,perfetto.protos.TestConfig$DummyFields,okio.ByteString)>(r2, r3, r4, r5, r6, r7, r8);

        return;
    }

    public final java.lang.Integer getMessage_count()
    {
        perfetto.protos.TestConfig r0;
        java.lang.Integer $r1;

        r0 := @this: perfetto.protos.TestConfig;

        $r1 = r0.<perfetto.protos.TestConfig: java.lang.Integer message_count>;

        return $r1;
    }

    public final java.lang.Integer getMax_messages_per_second()
    {
        perfetto.protos.TestConfig r0;
        java.lang.Integer $r1;

        r0 := @this: perfetto.protos.TestConfig;

        $r1 = r0.<perfetto.protos.TestConfig: java.lang.Integer max_messages_per_second>;

        return $r1;
    }

    public final java.lang.Integer getSeed()
    {
        perfetto.protos.TestConfig r0;
        java.lang.Integer $r1;

        r0 := @this: perfetto.protos.TestConfig;

        $r1 = r0.<perfetto.protos.TestConfig: java.lang.Integer seed>;

        return $r1;
    }

    public final java.lang.Integer getMessage_size()
    {
        perfetto.protos.TestConfig r0;
        java.lang.Integer $r1;

        r0 := @this: perfetto.protos.TestConfig;

        $r1 = r0.<perfetto.protos.TestConfig: java.lang.Integer message_size>;

        return $r1;
    }

    public final java.lang.Boolean getSend_batch_on_register()
    {
        perfetto.protos.TestConfig r0;
        java.lang.Boolean $r1;

        r0 := @this: perfetto.protos.TestConfig;

        $r1 = r0.<perfetto.protos.TestConfig: java.lang.Boolean send_batch_on_register>;

        return $r1;
    }

    public final perfetto.protos.TestConfig$DummyFields getDummy_fields()
    {
        perfetto.protos.TestConfig r0;
        perfetto.protos.TestConfig$DummyFields $r1;

        r0 := @this: perfetto.protos.TestConfig;

        $r1 = r0.<perfetto.protos.TestConfig: perfetto.protos.TestConfig$DummyFields dummy_fields>;

        return $r1;
    }

    public java.lang.Void newBuilder()
    {
        perfetto.protos.TestConfig r0;
        java.lang.AssertionError $r1;

        r0 := @this: perfetto.protos.TestConfig;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;
    }

    public boolean equals(java.lang.Object)
    {
        perfetto.protos.TestConfig r0, $r3, $r5, $r8, $r11, $r14, $r17, $r20;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        okio.ByteString $r2, $r4;
        java.lang.Integer $r6, $r7, $r9, $r10, $r12, $r13, $r15, $r16;
        java.lang.Boolean $r18, $r19;
        perfetto.protos.TestConfig$DummyFields $r21, $r22;

        r0 := @this: perfetto.protos.TestConfig;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof perfetto.protos.TestConfig;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<perfetto.protos.TestConfig: okio.ByteString unknownFields()>();

        $r3 = (perfetto.protos.TestConfig) r1;

        $r4 = virtualinvoke $r3.<perfetto.protos.TestConfig: okio.ByteString unknownFields()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r4);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $r7 = r0.<perfetto.protos.TestConfig: java.lang.Integer message_count>;

        $r5 = (perfetto.protos.TestConfig) r1;

        $r6 = $r5.<perfetto.protos.TestConfig: java.lang.Integer message_count>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, $r6);

        if $z2 != 0 goto label4;

        return 0;

     label4:
        $r10 = r0.<perfetto.protos.TestConfig: java.lang.Integer max_messages_per_second>;

        $r8 = (perfetto.protos.TestConfig) r1;

        $r9 = $r8.<perfetto.protos.TestConfig: java.lang.Integer max_messages_per_second>;

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r10, $r9);

        if $z3 != 0 goto label5;

        return 0;

     label5:
        $r13 = r0.<perfetto.protos.TestConfig: java.lang.Integer seed>;

        $r11 = (perfetto.protos.TestConfig) r1;

        $r12 = $r11.<perfetto.protos.TestConfig: java.lang.Integer seed>;

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r13, $r12);

        if $z4 != 0 goto label6;

        return 0;

     label6:
        $r16 = r0.<perfetto.protos.TestConfig: java.lang.Integer message_size>;

        $r14 = (perfetto.protos.TestConfig) r1;

        $r15 = $r14.<perfetto.protos.TestConfig: java.lang.Integer message_size>;

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r16, $r15);

        if $z5 != 0 goto label7;

        return 0;

     label7:
        $r19 = r0.<perfetto.protos.TestConfig: java.lang.Boolean send_batch_on_register>;

        $r17 = (perfetto.protos.TestConfig) r1;

        $r18 = $r17.<perfetto.protos.TestConfig: java.lang.Boolean send_batch_on_register>;

        $z6 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r19, $r18);

        if $z6 != 0 goto label8;

        return 0;

     label8:
        $r22 = r0.<perfetto.protos.TestConfig: perfetto.protos.TestConfig$DummyFields dummy_fields>;

        $r20 = (perfetto.protos.TestConfig) r1;

        $r21 = $r20.<perfetto.protos.TestConfig: perfetto.protos.TestConfig$DummyFields dummy_fields>;

        $z7 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r22, $r21);

        if $z7 != 0 goto label9;

        return 0;

     label9:
        return 1;
    }

    public int hashCode()
    {
        perfetto.protos.TestConfig r0;
        okio.ByteString $r1;
        java.lang.Integer $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, $i8, i9, $i10, i11, $i12, i13, $i14, i15, $i16, i17, $i18;
        java.lang.Boolean $r6;
        perfetto.protos.TestConfig$DummyFields $r7;

        r0 := @this: perfetto.protos.TestConfig;

        i6 = r0.<perfetto.protos.TestConfig: int hashCode>;

        if i6 != 0 goto label13;

        $r1 = virtualinvoke r0.<perfetto.protos.TestConfig: okio.ByteString unknownFields()>();

        i7 = virtualinvoke $r1.<okio.ByteString: int hashCode()>();

        $i0 = i7 * 37;

        $r2 = r0.<perfetto.protos.TestConfig: java.lang.Integer message_count>;

        if $r2 != null goto label01;

        $i8 = 0;

        goto label02;

     label01:
        $i8 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

     label02:
        i9 = $i0 + $i8;

        $i1 = i9 * 37;

        $r3 = r0.<perfetto.protos.TestConfig: java.lang.Integer max_messages_per_second>;

        if $r3 != null goto label03;

        $i10 = 0;

        goto label04;

     label03:
        $i10 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

     label04:
        i11 = $i1 + $i10;

        $i2 = i11 * 37;

        $r4 = r0.<perfetto.protos.TestConfig: java.lang.Integer seed>;

        if $r4 != null goto label05;

        $i12 = 0;

        goto label06;

     label05:
        $i12 = virtualinvoke $r4.<java.lang.Object: int hashCode()>();

     label06:
        i13 = $i2 + $i12;

        $i3 = i13 * 37;

        $r5 = r0.<perfetto.protos.TestConfig: java.lang.Integer message_size>;

        if $r5 != null goto label07;

        $i14 = 0;

        goto label08;

     label07:
        $i14 = virtualinvoke $r5.<java.lang.Object: int hashCode()>();

     label08:
        i15 = $i3 + $i14;

        $i4 = i15 * 37;

        $r6 = r0.<perfetto.protos.TestConfig: java.lang.Boolean send_batch_on_register>;

        if $r6 != null goto label09;

        $i16 = 0;

        goto label10;

     label09:
        $i16 = virtualinvoke $r6.<java.lang.Object: int hashCode()>();

     label10:
        i17 = $i4 + $i16;

        $i5 = i17 * 37;

        $r7 = r0.<perfetto.protos.TestConfig: perfetto.protos.TestConfig$DummyFields dummy_fields>;

        if $r7 != null goto label11;

        $i18 = 0;

        goto label12;

     label11:
        $i18 = virtualinvoke $r7.<java.lang.Object: int hashCode()>();

     label12:
        i6 = $i5 + $i18;

        r0.<perfetto.protos.TestConfig: int hashCode> = i6;

     label13:
        return i6;
    }

    public java.lang.String toString()
    {
        perfetto.protos.TestConfig r0;
        java.util.List r1;
        java.util.ArrayList $r2;
        java.lang.Integer $r3, $r4, $r5, $r6, $r20, $r23, $r26, $r29;
        java.lang.Boolean $r7, $r17;
        perfetto.protos.TestConfig$DummyFields $r8, $r14;
        java.lang.CharSequence $r9, $r10, $r11;
        java.lang.Iterable $r12;
        java.lang.String $r13, $r16, $r19, $r22, $r25, $r28, $r31;
        java.util.Collection $r15, $r18, $r21, $r24, $r27, $r30;

        r0 := @this: perfetto.protos.TestConfig;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r1 = (java.util.List) $r2;

        $r3 = r0.<perfetto.protos.TestConfig: java.lang.Integer message_count>;

        if $r3 == null goto label1;

        $r30 = (java.util.Collection) r1;

        $r29 = r0.<perfetto.protos.TestConfig: java.lang.Integer message_count>;

        $r31 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("message_count=", $r29);

        interfaceinvoke $r30.<java.util.Collection: boolean add(java.lang.Object)>($r31);

     label1:
        $r4 = r0.<perfetto.protos.TestConfig: java.lang.Integer max_messages_per_second>;

        if $r4 == null goto label2;

        $r27 = (java.util.Collection) r1;

        $r26 = r0.<perfetto.protos.TestConfig: java.lang.Integer max_messages_per_second>;

        $r28 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("max_messages_per_second=", $r26);

        interfaceinvoke $r27.<java.util.Collection: boolean add(java.lang.Object)>($r28);

     label2:
        $r5 = r0.<perfetto.protos.TestConfig: java.lang.Integer seed>;

        if $r5 == null goto label3;

        $r24 = (java.util.Collection) r1;

        $r23 = r0.<perfetto.protos.TestConfig: java.lang.Integer seed>;

        $r25 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("seed=", $r23);

        interfaceinvoke $r24.<java.util.Collection: boolean add(java.lang.Object)>($r25);

     label3:
        $r6 = r0.<perfetto.protos.TestConfig: java.lang.Integer message_size>;

        if $r6 == null goto label4;

        $r21 = (java.util.Collection) r1;

        $r20 = r0.<perfetto.protos.TestConfig: java.lang.Integer message_size>;

        $r22 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("message_size=", $r20);

        interfaceinvoke $r21.<java.util.Collection: boolean add(java.lang.Object)>($r22);

     label4:
        $r7 = r0.<perfetto.protos.TestConfig: java.lang.Boolean send_batch_on_register>;

        if $r7 == null goto label5;

        $r18 = (java.util.Collection) r1;

        $r17 = r0.<perfetto.protos.TestConfig: java.lang.Boolean send_batch_on_register>;

        $r19 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("send_batch_on_register=", $r17);

        interfaceinvoke $r18.<java.util.Collection: boolean add(java.lang.Object)>($r19);

     label5:
        $r8 = r0.<perfetto.protos.TestConfig: perfetto.protos.TestConfig$DummyFields dummy_fields>;

        if $r8 == null goto label6;

        $r15 = (java.util.Collection) r1;

        $r14 = r0.<perfetto.protos.TestConfig: perfetto.protos.TestConfig$DummyFields dummy_fields>;

        $r16 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("dummy_fields=", $r14);

        interfaceinvoke $r15.<java.util.Collection: boolean add(java.lang.Object)>($r16);

     label6:
        $r12 = (java.lang.Iterable) r1;

        $r11 = (java.lang.CharSequence) ", ";

        $r10 = (java.lang.CharSequence) "TestConfig{";

        $r9 = (java.lang.CharSequence) "}";

        $r13 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r12, $r11, $r10, $r9, 0, null, null, 56, null);

        return $r13;
    }

    public final perfetto.protos.TestConfig copy(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Boolean, perfetto.protos.TestConfig$DummyFields, okio.ByteString)
    {
        perfetto.protos.TestConfig r0, $r8;
        java.lang.Integer r1, r2, r3, r4;
        java.lang.Boolean r5;
        perfetto.protos.TestConfig$DummyFields r6;
        okio.ByteString r7;

        r0 := @this: perfetto.protos.TestConfig;

        r1 := @parameter0: java.lang.Integer;

        r2 := @parameter1: java.lang.Integer;

        r3 := @parameter2: java.lang.Integer;

        r4 := @parameter3: java.lang.Integer;

        r5 := @parameter4: java.lang.Boolean;

        r6 := @parameter5: perfetto.protos.TestConfig$DummyFields;

        r7 := @parameter6: okio.ByteString;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r7, "unknownFields");

        $r8 = new perfetto.protos.TestConfig;

        specialinvoke $r8.<perfetto.protos.TestConfig: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,perfetto.protos.TestConfig$DummyFields,okio.ByteString)>(r1, r2, r3, r4, r5, r6, r7);

        return $r8;
    }

    public static perfetto.protos.TestConfig copy$default(perfetto.protos.TestConfig, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Boolean, perfetto.protos.TestConfig$DummyFields, okio.ByteString, int, java.lang.Object)
    {
        perfetto.protos.TestConfig r0, $r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.Object r1;
        java.lang.Integer r3, r4, r5, r6;
        java.lang.Boolean r7;
        perfetto.protos.TestConfig$DummyFields r8;
        okio.ByteString r9;

        r0 := @parameter0: perfetto.protos.TestConfig;

        r3 := @parameter1: java.lang.Integer;

        r4 := @parameter2: java.lang.Integer;

        r5 := @parameter3: java.lang.Integer;

        r6 := @parameter4: java.lang.Integer;

        r7 := @parameter5: java.lang.Boolean;

        r8 := @parameter6: perfetto.protos.TestConfig$DummyFields;

        r9 := @parameter7: okio.ByteString;

        i0 := @parameter8: int;

        r1 := @parameter9: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r3 = r0.<perfetto.protos.TestConfig: java.lang.Integer message_count>;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r4 = r0.<perfetto.protos.TestConfig: java.lang.Integer max_messages_per_second>;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        r5 = r0.<perfetto.protos.TestConfig: java.lang.Integer seed>;

     label3:
        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        r6 = r0.<perfetto.protos.TestConfig: java.lang.Integer message_size>;

     label4:
        $i5 = i0 & 16;

        if $i5 == 0 goto label5;

        r7 = r0.<perfetto.protos.TestConfig: java.lang.Boolean send_batch_on_register>;

     label5:
        $i6 = i0 & 32;

        if $i6 == 0 goto label6;

        r8 = r0.<perfetto.protos.TestConfig: perfetto.protos.TestConfig$DummyFields dummy_fields>;

     label6:
        $i7 = i0 & 64;

        if $i7 == 0 goto label7;

        r9 = virtualinvoke r0.<perfetto.protos.TestConfig: okio.ByteString unknownFields()>();

     label7:
        $r2 = virtualinvoke r0.<perfetto.protos.TestConfig: perfetto.protos.TestConfig copy(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,perfetto.protos.TestConfig$DummyFields,okio.ByteString)>(r3, r4, r5, r6, r7, r8, r9);

        return $r2;
    }

    public void <init>()
    {
        perfetto.protos.TestConfig r0;

        r0 := @this: perfetto.protos.TestConfig;

        specialinvoke r0.<perfetto.protos.TestConfig: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,perfetto.protos.TestConfig$DummyFields,okio.ByteString,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, null, null, null, null, null, null, 127, null);

        return;
    }

    public volatile com.squareup.wire.Message$Builder newBuilder()
    {
        perfetto.protos.TestConfig r0;
        java.lang.Void $r1;
        com.squareup.wire.Message$Builder $r2;

        r0 := @this: perfetto.protos.TestConfig;

        $r1 = virtualinvoke r0.<perfetto.protos.TestConfig: java.lang.Void newBuilder()>();

        $r2 = (com.squareup.wire.Message$Builder) $r1;

        return $r2;
    }

    static void <clinit>()
    {
        com.squareup.wire.FieldEncoding r0;
        kotlin.reflect.KClass r1;
        com.squareup.wire.Syntax r2;
        perfetto.protos.TestConfig$Companion $r3;
        perfetto.protos.TestConfig$Companion$ADAPTER$1 $r4;
        com.squareup.wire.ProtoAdapter $r5;

        $r3 = new perfetto.protos.TestConfig$Companion;

        specialinvoke $r3.<perfetto.protos.TestConfig$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <perfetto.protos.TestConfig: perfetto.protos.TestConfig$Companion Companion> = $r3;

        r0 = <com.squareup.wire.FieldEncoding: com.squareup.wire.FieldEncoding LENGTH_DELIMITED>;

        r1 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Lperfetto/protos/TestConfig;");

        r2 = <com.squareup.wire.Syntax: com.squareup.wire.Syntax PROTO_2>;

        $r4 = new perfetto.protos.TestConfig$Companion$ADAPTER$1;

        specialinvoke $r4.<perfetto.protos.TestConfig$Companion$ADAPTER$1: void <init>(com.squareup.wire.FieldEncoding,kotlin.reflect.KClass,com.squareup.wire.Syntax)>(r0, r1, r2);

        $r5 = (com.squareup.wire.ProtoAdapter) $r4;

        <perfetto.protos.TestConfig: com.squareup.wire.ProtoAdapter ADAPTER> = $r5;

        return;
    }

perfetto.protos.TestConfig$Companion$ADAPTER$1
    void <init>(com.squareup.wire.FieldEncoding, kotlin.reflect.KClass, com.squareup.wire.Syntax)
    {
        perfetto.protos.TestConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.FieldEncoding $r1;
        kotlin.reflect.KClass $r2;
        com.squareup.wire.Syntax $r3;

        r0 := @this: perfetto.protos.TestConfig$Companion$ADAPTER$1;

        $r1 := @parameter0: com.squareup.wire.FieldEncoding;

        $r2 := @parameter1: kotlin.reflect.KClass;

        $r3 := @parameter2: com.squareup.wire.Syntax;

        specialinvoke r0.<com.squareup.wire.ProtoAdapter: void <init>(com.squareup.wire.FieldEncoding,kotlin.reflect.KClass,java.lang.String,com.squareup.wire.Syntax,java.lang.Object)>($r1, $r2, "type.googleapis.com/perfetto.protos.TestConfig", $r3, null);

        return;
    }

    public int encodedSize(perfetto.protos.TestConfig)
    {
        perfetto.protos.TestConfig$Companion$ADAPTER$1 r0;
        perfetto.protos.TestConfig r1;
        okio.ByteString $r2;
        com.squareup.wire.ProtoAdapter $r3, $r5, $r7, $r9, $r11, $r13;
        java.lang.Integer $r4, $r6, $r8, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9, i10, i11, i12;
        java.lang.Boolean $r12;
        perfetto.protos.TestConfig$DummyFields $r14;

        r0 := @this: perfetto.protos.TestConfig$Companion$ADAPTER$1;

        r1 := @parameter0: perfetto.protos.TestConfig;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = virtualinvoke r1.<perfetto.protos.TestConfig: okio.ByteString unknownFields()>();

        i6 = virtualinvoke $r2.<okio.ByteString: int size()>();

        $r3 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r4 = virtualinvoke r1.<perfetto.protos.TestConfig: java.lang.Integer getMessage_count()>();

        $i0 = virtualinvoke $r3.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(1, $r4);

        i7 = i6 + $i0;

        $r5 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r6 = virtualinvoke r1.<perfetto.protos.TestConfig: java.lang.Integer getMax_messages_per_second()>();

        $i1 = virtualinvoke $r5.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(2, $r6);

        i8 = i7 + $i1;

        $r7 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r8 = virtualinvoke r1.<perfetto.protos.TestConfig: java.lang.Integer getSeed()>();

        $i2 = virtualinvoke $r7.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(3, $r8);

        i9 = i8 + $i2;

        $r9 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r10 = virtualinvoke r1.<perfetto.protos.TestConfig: java.lang.Integer getMessage_size()>();

        $i3 = virtualinvoke $r9.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(4, $r10);

        i10 = i9 + $i3;

        $r11 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r12 = virtualinvoke r1.<perfetto.protos.TestConfig: java.lang.Boolean getSend_batch_on_register()>();

        $i4 = virtualinvoke $r11.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(5, $r12);

        i11 = i10 + $i4;

        $r13 = <perfetto.protos.TestConfig$DummyFields: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r14 = virtualinvoke r1.<perfetto.protos.TestConfig: perfetto.protos.TestConfig$DummyFields getDummy_fields()>();

        $i5 = virtualinvoke $r13.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(6, $r14);

        i12 = i11 + $i5;

        return i12;
    }

    public void encode(com.squareup.wire.ProtoWriter, perfetto.protos.TestConfig)
    {
        perfetto.protos.TestConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoWriter r1;
        perfetto.protos.TestConfig r2;
        com.squareup.wire.ProtoAdapter $r3, $r5, $r7, $r9, $r11, $r13;
        java.lang.Integer $r4, $r6, $r8, $r10;
        java.lang.Boolean $r12;
        perfetto.protos.TestConfig$DummyFields $r14;
        okio.ByteString $r15;

        r0 := @this: perfetto.protos.TestConfig$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoWriter;

        r2 := @parameter1: perfetto.protos.TestConfig;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "writer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "value");

        $r3 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r4 = virtualinvoke r2.<perfetto.protos.TestConfig: java.lang.Integer getMessage_count()>();

        virtualinvoke $r3.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 1, $r4);

        $r5 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r6 = virtualinvoke r2.<perfetto.protos.TestConfig: java.lang.Integer getMax_messages_per_second()>();

        virtualinvoke $r5.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 2, $r6);

        $r7 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r8 = virtualinvoke r2.<perfetto.protos.TestConfig: java.lang.Integer getSeed()>();

        virtualinvoke $r7.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 3, $r8);

        $r9 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r10 = virtualinvoke r2.<perfetto.protos.TestConfig: java.lang.Integer getMessage_size()>();

        virtualinvoke $r9.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 4, $r10);

        $r11 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r12 = virtualinvoke r2.<perfetto.protos.TestConfig: java.lang.Boolean getSend_batch_on_register()>();

        virtualinvoke $r11.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 5, $r12);

        $r13 = <perfetto.protos.TestConfig$DummyFields: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r14 = virtualinvoke r2.<perfetto.protos.TestConfig: perfetto.protos.TestConfig$DummyFields getDummy_fields()>();

        virtualinvoke $r13.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 6, $r14);

        $r15 = virtualinvoke r2.<perfetto.protos.TestConfig: okio.ByteString unknownFields()>();

        virtualinvoke r1.<com.squareup.wire.ProtoWriter: void writeBytes(okio.ByteString)>($r15);

        return;
    }

    public perfetto.protos.TestConfig decode(com.squareup.wire.ProtoReader)
    {
        perfetto.protos.TestConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoReader r1, r3;
        okio.ByteString r2;
        long l0;
        int i1, i2;
        com.squareup.wire.ProtoAdapter $r4, $r5, $r6, $r7, $r8, $r9;
        perfetto.protos.TestConfig $r10;
        perfetto.protos.TestConfig$DummyFields $r11;
        java.lang.Boolean $r12;
        java.lang.Integer $r13, $r14, $r15, $r16;
        java.lang.Object r17, r18, r19, r20, r21, r22;

        r0 := @this: perfetto.protos.TestConfig$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoReader;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "reader");

        r17 = null;

        r18 = null;

        r19 = null;

        r20 = null;

        r21 = null;

        r22 = null;

        r3 = r1;

        l0 = virtualinvoke r3.<com.squareup.wire.ProtoReader: long beginMessage()>();

     label01:
        i1 = virtualinvoke r3.<com.squareup.wire.ProtoReader: int nextTag()>();

        if i1 != -1 goto label02;

        goto label11;

     label02:
        i2 = i1;

        tableswitch(i2)
        {
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label07;
            case 6: goto label08;
            default: goto label09;
        };

     label03:
        $r9 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        r17 = virtualinvoke $r9.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label10;

     label04:
        $r8 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        r18 = virtualinvoke $r8.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label10;

     label05:
        $r7 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        r19 = virtualinvoke $r7.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label10;

     label06:
        $r6 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        r20 = virtualinvoke $r6.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label10;

     label07:
        $r5 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        r21 = virtualinvoke $r5.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label10;

     label08:
        $r4 = <perfetto.protos.TestConfig$DummyFields: com.squareup.wire.ProtoAdapter ADAPTER>;

        r22 = virtualinvoke $r4.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label10;

     label09:
        virtualinvoke r1.<com.squareup.wire.ProtoReader: void readUnknownField(int)>(i2);

     label10:
        goto label01;

     label11:
        r2 = virtualinvoke r3.<com.squareup.wire.ProtoReader: okio.ByteString endMessageAndGetUnknownFields(long)>(l0);

        $r10 = new perfetto.protos.TestConfig;

        $r16 = (java.lang.Integer) r17;

        $r15 = (java.lang.Integer) r18;

        $r14 = (java.lang.Integer) r19;

        $r13 = (java.lang.Integer) r20;

        $r12 = (java.lang.Boolean) r21;

        $r11 = (perfetto.protos.TestConfig$DummyFields) r22;

        specialinvoke $r10.<perfetto.protos.TestConfig: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,perfetto.protos.TestConfig$DummyFields,okio.ByteString)>($r16, $r15, $r14, $r13, $r12, $r11, r2);

        return $r10;
    }

    public perfetto.protos.TestConfig redact(perfetto.protos.TestConfig)
    {
        perfetto.protos.TestConfig$Companion$ADAPTER$1 r0;
        perfetto.protos.TestConfig r1, r5, $r10, $r11;
        perfetto.protos.TestConfig$DummyFields r2, r4, r6, $r7, $r12;
        com.squareup.wire.ProtoAdapter r3;
        java.lang.Object $r8;
        okio.ByteString $r9;

        r0 := @this: perfetto.protos.TestConfig$Companion$ADAPTER$1;

        r1 := @parameter0: perfetto.protos.TestConfig;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r11 = r1;

        $r7 = virtualinvoke r1.<perfetto.protos.TestConfig: perfetto.protos.TestConfig$DummyFields getDummy_fields()>();

        if $r7 != null goto label1;

        $r12 = null;

        goto label2;

     label1:
        r2 = $r7;

        r3 = <perfetto.protos.TestConfig$DummyFields: com.squareup.wire.ProtoAdapter ADAPTER>;

        r4 = r2;

        r5 = r1;

        $r8 = virtualinvoke r3.<com.squareup.wire.ProtoAdapter: java.lang.Object redact(java.lang.Object)>(r4);

        r6 = (perfetto.protos.TestConfig$DummyFields) $r8;

        $r11 = r5;

        $r12 = r6;

     label2:
        $r9 = <okio.ByteString: okio.ByteString EMPTY>;

        $r10 = staticinvoke <perfetto.protos.TestConfig: perfetto.protos.TestConfig copy$default(perfetto.protos.TestConfig,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,perfetto.protos.TestConfig$DummyFields,okio.ByteString,int,java.lang.Object)>($r11, null, null, null, null, null, $r12, $r9, 31, null);

        return $r10;
    }

    public volatile int encodedSize(java.lang.Object)
    {
        perfetto.protos.TestConfig$Companion$ADAPTER$1 r0;
        java.lang.Object r1;
        perfetto.protos.TestConfig $r2;
        int $i0;

        r0 := @this: perfetto.protos.TestConfig$Companion$ADAPTER$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (perfetto.protos.TestConfig) r1;

        $i0 = virtualinvoke r0.<perfetto.protos.TestConfig$Companion$ADAPTER$1: int encodedSize(perfetto.protos.TestConfig)>($r2);

        return $i0;
    }

    public volatile void encode(com.squareup.wire.ProtoWriter, java.lang.Object)
    {
        perfetto.protos.TestConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoWriter r1;
        java.lang.Object r2;
        perfetto.protos.TestConfig $r3;

        r0 := @this: perfetto.protos.TestConfig$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoWriter;

        r2 := @parameter1: java.lang.Object;

        $r3 = (perfetto.protos.TestConfig) r2;

        virtualinvoke r0.<perfetto.protos.TestConfig$Companion$ADAPTER$1: void encode(com.squareup.wire.ProtoWriter,perfetto.protos.TestConfig)>(r1, $r3);

        return;
    }

    public volatile java.lang.Object decode(com.squareup.wire.ProtoReader)
    {
        perfetto.protos.TestConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoReader r1;
        perfetto.protos.TestConfig $r2;

        r0 := @this: perfetto.protos.TestConfig$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoReader;

        $r2 = virtualinvoke r0.<perfetto.protos.TestConfig$Companion$ADAPTER$1: perfetto.protos.TestConfig decode(com.squareup.wire.ProtoReader)>(r1);

        return $r2;
    }

    public volatile java.lang.Object redact(java.lang.Object)
    {
        perfetto.protos.TestConfig$Companion$ADAPTER$1 r0;
        java.lang.Object r1;
        perfetto.protos.TestConfig $r2, $r3;

        r0 := @this: perfetto.protos.TestConfig$Companion$ADAPTER$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (perfetto.protos.TestConfig) r1;

        $r3 = virtualinvoke r0.<perfetto.protos.TestConfig$Companion$ADAPTER$1: perfetto.protos.TestConfig redact(perfetto.protos.TestConfig)>($r2);

        return $r3;
    }

perfetto.protos.TestConfig$Companion
    private void <init>()
    {
        perfetto.protos.TestConfig$Companion r0;

        r0 := @this: perfetto.protos.TestConfig$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.TestConfig$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: perfetto.protos.TestConfig$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<perfetto.protos.TestConfig$Companion: void <init>()>();

        return;
    }

perfetto.protos.TestConfig$DummyFields$Companion$ADAPTER$1
    void <init>(com.squareup.wire.FieldEncoding, kotlin.reflect.KClass, com.squareup.wire.Syntax)
    {
        perfetto.protos.TestConfig$DummyFields$Companion$ADAPTER$1 r0;
        com.squareup.wire.FieldEncoding $r1;
        kotlin.reflect.KClass $r2;
        com.squareup.wire.Syntax $r3;

        r0 := @this: perfetto.protos.TestConfig$DummyFields$Companion$ADAPTER$1;

        $r1 := @parameter0: com.squareup.wire.FieldEncoding;

        $r2 := @parameter1: kotlin.reflect.KClass;

        $r3 := @parameter2: com.squareup.wire.Syntax;

        specialinvoke r0.<com.squareup.wire.ProtoAdapter: void <init>(com.squareup.wire.FieldEncoding,kotlin.reflect.KClass,java.lang.String,com.squareup.wire.Syntax,java.lang.Object)>($r1, $r2, "type.googleapis.com/perfetto.protos.TestConfig.DummyFields", $r3, null);

        return;
    }

    public int encodedSize(perfetto.protos.TestConfig$DummyFields)
    {
        perfetto.protos.TestConfig$DummyFields$Companion$ADAPTER$1 r0;
        perfetto.protos.TestConfig$DummyFields r1;
        okio.ByteString $r2, $r30;
        com.squareup.wire.ProtoAdapter $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29;
        java.lang.Integer $r4, $r6, $r16, $r18, $r26;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28;
        java.lang.Long $r8, $r10, $r12, $r14, $r24;
        java.lang.Double $r20;
        java.lang.Float $r22;
        java.lang.String $r28;

        r0 := @this: perfetto.protos.TestConfig$DummyFields$Companion$ADAPTER$1;

        r1 := @parameter0: perfetto.protos.TestConfig$DummyFields;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = virtualinvoke r1.<perfetto.protos.TestConfig$DummyFields: okio.ByteString unknownFields()>();

        i14 = virtualinvoke $r2.<okio.ByteString: int size()>();

        $r3 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r4 = virtualinvoke r1.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer getField_uint32()>();

        $i0 = virtualinvoke $r3.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(1, $r4);

        i15 = i14 + $i0;

        $r5 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter INT32>;

        $r6 = virtualinvoke r1.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer getField_int32()>();

        $i1 = virtualinvoke $r5.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(2, $r6);

        i16 = i15 + $i1;

        $r7 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT64>;

        $r8 = virtualinvoke r1.<perfetto.protos.TestConfig$DummyFields: java.lang.Long getField_uint64()>();

        $i2 = virtualinvoke $r7.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(3, $r8);

        i17 = i16 + $i2;

        $r9 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter INT64>;

        $r10 = virtualinvoke r1.<perfetto.protos.TestConfig$DummyFields: java.lang.Long getField_int64()>();

        $i3 = virtualinvoke $r9.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(4, $r10);

        i18 = i17 + $i3;

        $r11 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter FIXED64>;

        $r12 = virtualinvoke r1.<perfetto.protos.TestConfig$DummyFields: java.lang.Long getField_fixed64()>();

        $i4 = virtualinvoke $r11.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(5, $r12);

        i19 = i18 + $i4;

        $r13 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter SFIXED64>;

        $r14 = virtualinvoke r1.<perfetto.protos.TestConfig$DummyFields: java.lang.Long getField_sfixed64()>();

        $i5 = virtualinvoke $r13.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(6, $r14);

        i20 = i19 + $i5;

        $r15 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter FIXED32>;

        $r16 = virtualinvoke r1.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer getField_fixed32()>();

        $i6 = virtualinvoke $r15.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(7, $r16);

        i21 = i20 + $i6;

        $r17 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter SFIXED32>;

        $r18 = virtualinvoke r1.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer getField_sfixed32()>();

        $i7 = virtualinvoke $r17.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(8, $r18);

        i22 = i21 + $i7;

        $r19 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter DOUBLE>;

        $r20 = virtualinvoke r1.<perfetto.protos.TestConfig$DummyFields: java.lang.Double getField_double()>();

        $i8 = virtualinvoke $r19.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(9, $r20);

        i23 = i22 + $i8;

        $r21 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter FLOAT>;

        $r22 = virtualinvoke r1.<perfetto.protos.TestConfig$DummyFields: java.lang.Float getField_float()>();

        $i9 = virtualinvoke $r21.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(10, $r22);

        i24 = i23 + $i9;

        $r23 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter SINT64>;

        $r24 = virtualinvoke r1.<perfetto.protos.TestConfig$DummyFields: java.lang.Long getField_sint64()>();

        $i10 = virtualinvoke $r23.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(11, $r24);

        i25 = i24 + $i10;

        $r25 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter SINT32>;

        $r26 = virtualinvoke r1.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer getField_sint32()>();

        $i11 = virtualinvoke $r25.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(12, $r26);

        i26 = i25 + $i11;

        $r27 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        $r28 = virtualinvoke r1.<perfetto.protos.TestConfig$DummyFields: java.lang.String getField_string()>();

        $i12 = virtualinvoke $r27.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(13, $r28);

        i27 = i26 + $i12;

        $r29 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BYTES>;

        $r30 = virtualinvoke r1.<perfetto.protos.TestConfig$DummyFields: okio.ByteString getField_bytes()>();

        $i13 = virtualinvoke $r29.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(14, $r30);

        i28 = i27 + $i13;

        return i28;
    }

    public void encode(com.squareup.wire.ProtoWriter, perfetto.protos.TestConfig$DummyFields)
    {
        perfetto.protos.TestConfig$DummyFields$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoWriter r1;
        perfetto.protos.TestConfig$DummyFields r2;
        com.squareup.wire.ProtoAdapter $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29;
        java.lang.Integer $r4, $r6, $r16, $r18, $r26;
        java.lang.Long $r8, $r10, $r12, $r14, $r24;
        java.lang.Double $r20;
        java.lang.Float $r22;
        java.lang.String $r28;
        okio.ByteString $r30, $r31;

        r0 := @this: perfetto.protos.TestConfig$DummyFields$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoWriter;

        r2 := @parameter1: perfetto.protos.TestConfig$DummyFields;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "writer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "value");

        $r3 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r4 = virtualinvoke r2.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer getField_uint32()>();

        virtualinvoke $r3.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 1, $r4);

        $r5 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter INT32>;

        $r6 = virtualinvoke r2.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer getField_int32()>();

        virtualinvoke $r5.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 2, $r6);

        $r7 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT64>;

        $r8 = virtualinvoke r2.<perfetto.protos.TestConfig$DummyFields: java.lang.Long getField_uint64()>();

        virtualinvoke $r7.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 3, $r8);

        $r9 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter INT64>;

        $r10 = virtualinvoke r2.<perfetto.protos.TestConfig$DummyFields: java.lang.Long getField_int64()>();

        virtualinvoke $r9.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 4, $r10);

        $r11 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter FIXED64>;

        $r12 = virtualinvoke r2.<perfetto.protos.TestConfig$DummyFields: java.lang.Long getField_fixed64()>();

        virtualinvoke $r11.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 5, $r12);

        $r13 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter SFIXED64>;

        $r14 = virtualinvoke r2.<perfetto.protos.TestConfig$DummyFields: java.lang.Long getField_sfixed64()>();

        virtualinvoke $r13.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 6, $r14);

        $r15 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter FIXED32>;

        $r16 = virtualinvoke r2.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer getField_fixed32()>();

        virtualinvoke $r15.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 7, $r16);

        $r17 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter SFIXED32>;

        $r18 = virtualinvoke r2.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer getField_sfixed32()>();

        virtualinvoke $r17.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 8, $r18);

        $r19 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter DOUBLE>;

        $r20 = virtualinvoke r2.<perfetto.protos.TestConfig$DummyFields: java.lang.Double getField_double()>();

        virtualinvoke $r19.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 9, $r20);

        $r21 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter FLOAT>;

        $r22 = virtualinvoke r2.<perfetto.protos.TestConfig$DummyFields: java.lang.Float getField_float()>();

        virtualinvoke $r21.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 10, $r22);

        $r23 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter SINT64>;

        $r24 = virtualinvoke r2.<perfetto.protos.TestConfig$DummyFields: java.lang.Long getField_sint64()>();

        virtualinvoke $r23.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 11, $r24);

        $r25 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter SINT32>;

        $r26 = virtualinvoke r2.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer getField_sint32()>();

        virtualinvoke $r25.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 12, $r26);

        $r27 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        $r28 = virtualinvoke r2.<perfetto.protos.TestConfig$DummyFields: java.lang.String getField_string()>();

        virtualinvoke $r27.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 13, $r28);

        $r29 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BYTES>;

        $r30 = virtualinvoke r2.<perfetto.protos.TestConfig$DummyFields: okio.ByteString getField_bytes()>();

        virtualinvoke $r29.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 14, $r30);

        $r31 = virtualinvoke r2.<perfetto.protos.TestConfig$DummyFields: okio.ByteString unknownFields()>();

        virtualinvoke r1.<com.squareup.wire.ProtoWriter: void writeBytes(okio.ByteString)>($r31);

        return;
    }

    public perfetto.protos.TestConfig$DummyFields decode(com.squareup.wire.ProtoReader)
    {
        perfetto.protos.TestConfig$DummyFields$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoReader r1, r3;
        okio.ByteString r2, $r19;
        long l0;
        int i1, i2;
        com.squareup.wire.ProtoAdapter $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        perfetto.protos.TestConfig$DummyFields $r18;
        java.lang.String $r20;
        java.lang.Integer $r21, $r25, $r26, $r31, $r32;
        java.lang.Long $r22, $r27, $r28, $r29, $r30;
        java.lang.Float $r23;
        java.lang.Double $r24;
        java.lang.Object r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44, r45, r46;

        r0 := @this: perfetto.protos.TestConfig$DummyFields$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoReader;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "reader");

        r33 = null;

        r34 = null;

        r35 = null;

        r36 = null;

        r37 = null;

        r38 = null;

        r39 = null;

        r40 = null;

        r41 = null;

        r42 = null;

        r43 = null;

        r44 = null;

        r45 = null;

        r46 = null;

        r3 = r1;

        l0 = virtualinvoke r3.<com.squareup.wire.ProtoReader: long beginMessage()>();

     label01:
        i1 = virtualinvoke r3.<com.squareup.wire.ProtoReader: int nextTag()>();

        if i1 != -1 goto label02;

        goto label19;

     label02:
        i2 = i1;

        tableswitch(i2)
        {
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label07;
            case 6: goto label08;
            case 7: goto label09;
            case 8: goto label10;
            case 9: goto label11;
            case 10: goto label12;
            case 11: goto label13;
            case 12: goto label14;
            case 13: goto label15;
            case 14: goto label16;
            default: goto label17;
        };

     label03:
        $r17 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        r33 = virtualinvoke $r17.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label18;

     label04:
        $r16 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter INT32>;

        r34 = virtualinvoke $r16.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label18;

     label05:
        $r15 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT64>;

        r35 = virtualinvoke $r15.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label18;

     label06:
        $r14 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter INT64>;

        r36 = virtualinvoke $r14.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label18;

     label07:
        $r13 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter FIXED64>;

        r37 = virtualinvoke $r13.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label18;

     label08:
        $r12 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter SFIXED64>;

        r38 = virtualinvoke $r12.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label18;

     label09:
        $r11 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter FIXED32>;

        r39 = virtualinvoke $r11.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label18;

     label10:
        $r10 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter SFIXED32>;

        r40 = virtualinvoke $r10.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label18;

     label11:
        $r9 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter DOUBLE>;

        r41 = virtualinvoke $r9.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label18;

     label12:
        $r8 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter FLOAT>;

        r42 = virtualinvoke $r8.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label18;

     label13:
        $r7 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter SINT64>;

        r43 = virtualinvoke $r7.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label18;

     label14:
        $r6 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter SINT32>;

        r44 = virtualinvoke $r6.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label18;

     label15:
        $r5 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        r45 = virtualinvoke $r5.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label18;

     label16:
        $r4 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BYTES>;

        r46 = virtualinvoke $r4.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label18;

     label17:
        virtualinvoke r1.<com.squareup.wire.ProtoReader: void readUnknownField(int)>(i2);

     label18:
        goto label01;

     label19:
        r2 = virtualinvoke r3.<com.squareup.wire.ProtoReader: okio.ByteString endMessageAndGetUnknownFields(long)>(l0);

        $r18 = new perfetto.protos.TestConfig$DummyFields;

        $r32 = (java.lang.Integer) r33;

        $r31 = (java.lang.Integer) r34;

        $r30 = (java.lang.Long) r35;

        $r29 = (java.lang.Long) r36;

        $r28 = (java.lang.Long) r37;

        $r27 = (java.lang.Long) r38;

        $r26 = (java.lang.Integer) r39;

        $r25 = (java.lang.Integer) r40;

        $r24 = (java.lang.Double) r41;

        $r23 = (java.lang.Float) r42;

        $r22 = (java.lang.Long) r43;

        $r21 = (java.lang.Integer) r44;

        $r20 = (java.lang.String) r45;

        $r19 = (okio.ByteString) r46;

        specialinvoke $r18.<perfetto.protos.TestConfig$DummyFields: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Integer,java.lang.Integer,java.lang.Double,java.lang.Float,java.lang.Long,java.lang.Integer,java.lang.String,okio.ByteString,okio.ByteString)>($r32, $r31, $r30, $r29, $r28, $r27, $r26, $r25, $r24, $r23, $r22, $r21, $r20, $r19, r2);

        return $r18;
    }

    public perfetto.protos.TestConfig$DummyFields redact(perfetto.protos.TestConfig$DummyFields)
    {
        perfetto.protos.TestConfig$DummyFields$Companion$ADAPTER$1 r0;
        perfetto.protos.TestConfig$DummyFields r1, $r3;
        okio.ByteString $r2;

        r0 := @this: perfetto.protos.TestConfig$DummyFields$Companion$ADAPTER$1;

        r1 := @parameter0: perfetto.protos.TestConfig$DummyFields;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = <okio.ByteString: okio.ByteString EMPTY>;

        $r3 = staticinvoke <perfetto.protos.TestConfig$DummyFields: perfetto.protos.TestConfig$DummyFields copy$default(perfetto.protos.TestConfig$DummyFields,java.lang.Integer,java.lang.Integer,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Integer,java.lang.Integer,java.lang.Double,java.lang.Float,java.lang.Long,java.lang.Integer,java.lang.String,okio.ByteString,okio.ByteString,int,java.lang.Object)>(r1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, $r2, 16383, null);

        return $r3;
    }

    public volatile int encodedSize(java.lang.Object)
    {
        perfetto.protos.TestConfig$DummyFields$Companion$ADAPTER$1 r0;
        java.lang.Object r1;
        perfetto.protos.TestConfig$DummyFields $r2;
        int $i0;

        r0 := @this: perfetto.protos.TestConfig$DummyFields$Companion$ADAPTER$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (perfetto.protos.TestConfig$DummyFields) r1;

        $i0 = virtualinvoke r0.<perfetto.protos.TestConfig$DummyFields$Companion$ADAPTER$1: int encodedSize(perfetto.protos.TestConfig$DummyFields)>($r2);

        return $i0;
    }

    public volatile void encode(com.squareup.wire.ProtoWriter, java.lang.Object)
    {
        perfetto.protos.TestConfig$DummyFields$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoWriter r1;
        java.lang.Object r2;
        perfetto.protos.TestConfig$DummyFields $r3;

        r0 := @this: perfetto.protos.TestConfig$DummyFields$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoWriter;

        r2 := @parameter1: java.lang.Object;

        $r3 = (perfetto.protos.TestConfig$DummyFields) r2;

        virtualinvoke r0.<perfetto.protos.TestConfig$DummyFields$Companion$ADAPTER$1: void encode(com.squareup.wire.ProtoWriter,perfetto.protos.TestConfig$DummyFields)>(r1, $r3);

        return;
    }

    public volatile java.lang.Object decode(com.squareup.wire.ProtoReader)
    {
        perfetto.protos.TestConfig$DummyFields$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoReader r1;
        perfetto.protos.TestConfig$DummyFields $r2;

        r0 := @this: perfetto.protos.TestConfig$DummyFields$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoReader;

        $r2 = virtualinvoke r0.<perfetto.protos.TestConfig$DummyFields$Companion$ADAPTER$1: perfetto.protos.TestConfig$DummyFields decode(com.squareup.wire.ProtoReader)>(r1);

        return $r2;
    }

    public volatile java.lang.Object redact(java.lang.Object)
    {
        perfetto.protos.TestConfig$DummyFields$Companion$ADAPTER$1 r0;
        java.lang.Object r1;
        perfetto.protos.TestConfig$DummyFields $r2, $r3;

        r0 := @this: perfetto.protos.TestConfig$DummyFields$Companion$ADAPTER$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (perfetto.protos.TestConfig$DummyFields) r1;

        $r3 = virtualinvoke r0.<perfetto.protos.TestConfig$DummyFields$Companion$ADAPTER$1: perfetto.protos.TestConfig$DummyFields redact(perfetto.protos.TestConfig$DummyFields)>($r2);

        return $r3;
    }

perfetto.protos.TestConfig$DummyFields$Companion
    private void <init>()
    {
        perfetto.protos.TestConfig$DummyFields$Companion r0;

        r0 := @this: perfetto.protos.TestConfig$DummyFields$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.TestConfig$DummyFields$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: perfetto.protos.TestConfig$DummyFields$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<perfetto.protos.TestConfig$DummyFields$Companion: void <init>()>();

        return;
    }

perfetto.protos.TestConfig$DummyFields
<perfetto.protos.TestConfig$DummyFields: perfetto.protos.TestConfig$DummyFields$Companion Companion>
<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_uint32>
<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_int32>
<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_uint64>
<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_int64>
<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_fixed64>
<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_sfixed64>
<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_fixed32>
<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_sfixed32>
<perfetto.protos.TestConfig$DummyFields: java.lang.Double field_double>
<perfetto.protos.TestConfig$DummyFields: java.lang.Float field_float>
<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_sint64>
<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_sint32>
<perfetto.protos.TestConfig$DummyFields: java.lang.String field_string>
<perfetto.protos.TestConfig$DummyFields: okio.ByteString field_bytes>
<perfetto.protos.TestConfig$DummyFields: com.squareup.wire.ProtoAdapter ADAPTER>
<perfetto.protos.TestConfig$DummyFields: long serialVersionUID>
    public void <init>(java.lang.Integer, java.lang.Integer, java.lang.Long, java.lang.Long, java.lang.Long, java.lang.Long, java.lang.Integer, java.lang.Integer, java.lang.Double, java.lang.Float, java.lang.Long, java.lang.Integer, java.lang.String, okio.ByteString, okio.ByteString)
    {
        perfetto.protos.TestConfig$DummyFields r0;
        java.lang.Integer r1, r2, r7, r8, r12;
        java.lang.Long r3, r4, r5, r6, r11;
        java.lang.Double r9;
        java.lang.Float r10;
        java.lang.String r13;
        okio.ByteString r14, r15;
        com.squareup.wire.ProtoAdapter $r16;

        r0 := @this: perfetto.protos.TestConfig$DummyFields;

        r1 := @parameter0: java.lang.Integer;

        r2 := @parameter1: java.lang.Integer;

        r3 := @parameter2: java.lang.Long;

        r4 := @parameter3: java.lang.Long;

        r5 := @parameter4: java.lang.Long;

        r6 := @parameter5: java.lang.Long;

        r7 := @parameter6: java.lang.Integer;

        r8 := @parameter7: java.lang.Integer;

        r9 := @parameter8: java.lang.Double;

        r10 := @parameter9: java.lang.Float;

        r11 := @parameter10: java.lang.Long;

        r12 := @parameter11: java.lang.Integer;

        r13 := @parameter12: java.lang.String;

        r14 := @parameter13: okio.ByteString;

        r15 := @parameter14: okio.ByteString;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r15, "unknownFields");

        $r16 = <perfetto.protos.TestConfig$DummyFields: com.squareup.wire.ProtoAdapter ADAPTER>;

        specialinvoke r0.<com.squareup.wire.Message: void <init>(com.squareup.wire.ProtoAdapter,okio.ByteString)>($r16, r15);

        r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_uint32> = r1;

        r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_int32> = r2;

        r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_uint64> = r3;

        r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_int64> = r4;

        r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_fixed64> = r5;

        r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_sfixed64> = r6;

        r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_fixed32> = r7;

        r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_sfixed32> = r8;

        r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Double field_double> = r9;

        r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Float field_float> = r10;

        r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_sint64> = r11;

        r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_sint32> = r12;

        r0.<perfetto.protos.TestConfig$DummyFields: java.lang.String field_string> = r13;

        r0.<perfetto.protos.TestConfig$DummyFields: okio.ByteString field_bytes> = r14;

        return;
    }

    public void <init>(java.lang.Integer, java.lang.Integer, java.lang.Long, java.lang.Long, java.lang.Long, java.lang.Long, java.lang.Integer, java.lang.Integer, java.lang.Double, java.lang.Float, java.lang.Long, java.lang.Integer, java.lang.String, okio.ByteString, okio.ByteString, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.TestConfig$DummyFields r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        java.lang.Integer r2, r3, r8, r9, r13;
        java.lang.Long r4, r5, r6, r7, r12;
        java.lang.Double r10;
        java.lang.Float r11;
        java.lang.String r14;
        okio.ByteString r15, r16;

        r0 := @this: perfetto.protos.TestConfig$DummyFields;

        r2 := @parameter0: java.lang.Integer;

        r3 := @parameter1: java.lang.Integer;

        r4 := @parameter2: java.lang.Long;

        r5 := @parameter3: java.lang.Long;

        r6 := @parameter4: java.lang.Long;

        r7 := @parameter5: java.lang.Long;

        r8 := @parameter6: java.lang.Integer;

        r9 := @parameter7: java.lang.Integer;

        r10 := @parameter8: java.lang.Double;

        r11 := @parameter9: java.lang.Float;

        r12 := @parameter10: java.lang.Long;

        r13 := @parameter11: java.lang.Integer;

        r14 := @parameter12: java.lang.String;

        r15 := @parameter13: okio.ByteString;

        r16 := @parameter14: okio.ByteString;

        i0 := @parameter15: int;

        r1 := @parameter16: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label01;

        r2 = null;

     label01:
        $i2 = i0 & 2;

        if $i2 == 0 goto label02;

        r3 = null;

     label02:
        $i3 = i0 & 4;

        if $i3 == 0 goto label03;

        r4 = null;

     label03:
        $i4 = i0 & 8;

        if $i4 == 0 goto label04;

        r5 = null;

     label04:
        $i5 = i0 & 16;

        if $i5 == 0 goto label05;

        r6 = null;

     label05:
        $i6 = i0 & 32;

        if $i6 == 0 goto label06;

        r7 = null;

     label06:
        $i7 = i0 & 64;

        if $i7 == 0 goto label07;

        r8 = null;

     label07:
        $i8 = i0 & 128;

        if $i8 == 0 goto label08;

        r9 = null;

     label08:
        $i9 = i0 & 256;

        if $i9 == 0 goto label09;

        r10 = null;

     label09:
        $i10 = i0 & 512;

        if $i10 == 0 goto label10;

        r11 = null;

     label10:
        $i11 = i0 & 1024;

        if $i11 == 0 goto label11;

        r12 = null;

     label11:
        $i12 = i0 & 2048;

        if $i12 == 0 goto label12;

        r13 = null;

     label12:
        $i13 = i0 & 4096;

        if $i13 == 0 goto label13;

        r14 = null;

     label13:
        $i14 = i0 & 8192;

        if $i14 == 0 goto label14;

        r15 = null;

     label14:
        $i15 = i0 & 16384;

        if $i15 == 0 goto label15;

        r16 = <okio.ByteString: okio.ByteString EMPTY>;

     label15:
        specialinvoke r0.<perfetto.protos.TestConfig$DummyFields: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Integer,java.lang.Integer,java.lang.Double,java.lang.Float,java.lang.Long,java.lang.Integer,java.lang.String,okio.ByteString,okio.ByteString)>(r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16);

        return;
    }

    public final java.lang.Integer getField_uint32()
    {
        perfetto.protos.TestConfig$DummyFields r0;
        java.lang.Integer $r1;

        r0 := @this: perfetto.protos.TestConfig$DummyFields;

        $r1 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_uint32>;

        return $r1;
    }

    public final java.lang.Integer getField_int32()
    {
        perfetto.protos.TestConfig$DummyFields r0;
        java.lang.Integer $r1;

        r0 := @this: perfetto.protos.TestConfig$DummyFields;

        $r1 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_int32>;

        return $r1;
    }

    public final java.lang.Long getField_uint64()
    {
        perfetto.protos.TestConfig$DummyFields r0;
        java.lang.Long $r1;

        r0 := @this: perfetto.protos.TestConfig$DummyFields;

        $r1 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_uint64>;

        return $r1;
    }

    public final java.lang.Long getField_int64()
    {
        perfetto.protos.TestConfig$DummyFields r0;
        java.lang.Long $r1;

        r0 := @this: perfetto.protos.TestConfig$DummyFields;

        $r1 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_int64>;

        return $r1;
    }

    public final java.lang.Long getField_fixed64()
    {
        perfetto.protos.TestConfig$DummyFields r0;
        java.lang.Long $r1;

        r0 := @this: perfetto.protos.TestConfig$DummyFields;

        $r1 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_fixed64>;

        return $r1;
    }

    public final java.lang.Long getField_sfixed64()
    {
        perfetto.protos.TestConfig$DummyFields r0;
        java.lang.Long $r1;

        r0 := @this: perfetto.protos.TestConfig$DummyFields;

        $r1 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_sfixed64>;

        return $r1;
    }

    public final java.lang.Integer getField_fixed32()
    {
        perfetto.protos.TestConfig$DummyFields r0;
        java.lang.Integer $r1;

        r0 := @this: perfetto.protos.TestConfig$DummyFields;

        $r1 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_fixed32>;

        return $r1;
    }

    public final java.lang.Integer getField_sfixed32()
    {
        perfetto.protos.TestConfig$DummyFields r0;
        java.lang.Integer $r1;

        r0 := @this: perfetto.protos.TestConfig$DummyFields;

        $r1 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_sfixed32>;

        return $r1;
    }

    public final java.lang.Double getField_double()
    {
        perfetto.protos.TestConfig$DummyFields r0;
        java.lang.Double $r1;

        r0 := @this: perfetto.protos.TestConfig$DummyFields;

        $r1 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Double field_double>;

        return $r1;
    }

    public final java.lang.Float getField_float()
    {
        perfetto.protos.TestConfig$DummyFields r0;
        java.lang.Float $r1;

        r0 := @this: perfetto.protos.TestConfig$DummyFields;

        $r1 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Float field_float>;

        return $r1;
    }

    public final java.lang.Long getField_sint64()
    {
        perfetto.protos.TestConfig$DummyFields r0;
        java.lang.Long $r1;

        r0 := @this: perfetto.protos.TestConfig$DummyFields;

        $r1 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_sint64>;

        return $r1;
    }

    public final java.lang.Integer getField_sint32()
    {
        perfetto.protos.TestConfig$DummyFields r0;
        java.lang.Integer $r1;

        r0 := @this: perfetto.protos.TestConfig$DummyFields;

        $r1 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_sint32>;

        return $r1;
    }

    public final java.lang.String getField_string()
    {
        perfetto.protos.TestConfig$DummyFields r0;
        java.lang.String $r1;

        r0 := @this: perfetto.protos.TestConfig$DummyFields;

        $r1 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.String field_string>;

        return $r1;
    }

    public final okio.ByteString getField_bytes()
    {
        perfetto.protos.TestConfig$DummyFields r0;
        okio.ByteString $r1;

        r0 := @this: perfetto.protos.TestConfig$DummyFields;

        $r1 = r0.<perfetto.protos.TestConfig$DummyFields: okio.ByteString field_bytes>;

        return $r1;
    }

    public java.lang.Void newBuilder()
    {
        perfetto.protos.TestConfig$DummyFields r0;
        java.lang.AssertionError $r1;

        r0 := @this: perfetto.protos.TestConfig$DummyFields;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;
    }

    public boolean equals(java.lang.Object)
    {
        perfetto.protos.TestConfig$DummyFields r0, $r3, $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r26, $r29, $r32, $r35, $r38, $r41, $r44;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        okio.ByteString $r2, $r4, $r45, $r46;
        java.lang.Integer $r6, $r7, $r9, $r10, $r24, $r25, $r27, $r28, $r39, $r40;
        java.lang.Long $r12, $r13, $r15, $r16, $r18, $r19, $r21, $r22, $r36, $r37;
        java.lang.Double $r30, $r31;
        java.lang.Float $r33, $r34;
        java.lang.String $r42, $r43;

        r0 := @this: perfetto.protos.TestConfig$DummyFields;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label01;

        return 1;

     label01:
        $z0 = r1 instanceof perfetto.protos.TestConfig$DummyFields;

        if $z0 != 0 goto label02;

        return 0;

     label02:
        $r2 = virtualinvoke r0.<perfetto.protos.TestConfig$DummyFields: okio.ByteString unknownFields()>();

        $r3 = (perfetto.protos.TestConfig$DummyFields) r1;

        $r4 = virtualinvoke $r3.<perfetto.protos.TestConfig$DummyFields: okio.ByteString unknownFields()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r4);

        if $z1 != 0 goto label03;

        return 0;

     label03:
        $r7 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_uint32>;

        $r5 = (perfetto.protos.TestConfig$DummyFields) r1;

        $r6 = $r5.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_uint32>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, $r6);

        if $z2 != 0 goto label04;

        return 0;

     label04:
        $r10 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_int32>;

        $r8 = (perfetto.protos.TestConfig$DummyFields) r1;

        $r9 = $r8.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_int32>;

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r10, $r9);

        if $z3 != 0 goto label05;

        return 0;

     label05:
        $r13 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_uint64>;

        $r11 = (perfetto.protos.TestConfig$DummyFields) r1;

        $r12 = $r11.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_uint64>;

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r13, $r12);

        if $z4 != 0 goto label06;

        return 0;

     label06:
        $r16 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_int64>;

        $r14 = (perfetto.protos.TestConfig$DummyFields) r1;

        $r15 = $r14.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_int64>;

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r16, $r15);

        if $z5 != 0 goto label07;

        return 0;

     label07:
        $r19 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_fixed64>;

        $r17 = (perfetto.protos.TestConfig$DummyFields) r1;

        $r18 = $r17.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_fixed64>;

        $z6 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r19, $r18);

        if $z6 != 0 goto label08;

        return 0;

     label08:
        $r22 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_sfixed64>;

        $r20 = (perfetto.protos.TestConfig$DummyFields) r1;

        $r21 = $r20.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_sfixed64>;

        $z7 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r22, $r21);

        if $z7 != 0 goto label09;

        return 0;

     label09:
        $r25 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_fixed32>;

        $r23 = (perfetto.protos.TestConfig$DummyFields) r1;

        $r24 = $r23.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_fixed32>;

        $z8 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r25, $r24);

        if $z8 != 0 goto label10;

        return 0;

     label10:
        $r28 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_sfixed32>;

        $r26 = (perfetto.protos.TestConfig$DummyFields) r1;

        $r27 = $r26.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_sfixed32>;

        $z9 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r28, $r27);

        if $z9 != 0 goto label11;

        return 0;

     label11:
        $r31 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Double field_double>;

        $r29 = (perfetto.protos.TestConfig$DummyFields) r1;

        $r30 = $r29.<perfetto.protos.TestConfig$DummyFields: java.lang.Double field_double>;

        $z10 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Double,java.lang.Double)>($r31, $r30);

        if $z10 != 0 goto label12;

        return 0;

     label12:
        $r34 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Float field_float>;

        $r32 = (perfetto.protos.TestConfig$DummyFields) r1;

        $r33 = $r32.<perfetto.protos.TestConfig$DummyFields: java.lang.Float field_float>;

        $z11 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Float,java.lang.Float)>($r34, $r33);

        if $z11 != 0 goto label13;

        return 0;

     label13:
        $r37 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_sint64>;

        $r35 = (perfetto.protos.TestConfig$DummyFields) r1;

        $r36 = $r35.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_sint64>;

        $z12 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r37, $r36);

        if $z12 != 0 goto label14;

        return 0;

     label14:
        $r40 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_sint32>;

        $r38 = (perfetto.protos.TestConfig$DummyFields) r1;

        $r39 = $r38.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_sint32>;

        $z13 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r40, $r39);

        if $z13 != 0 goto label15;

        return 0;

     label15:
        $r43 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.String field_string>;

        $r41 = (perfetto.protos.TestConfig$DummyFields) r1;

        $r42 = $r41.<perfetto.protos.TestConfig$DummyFields: java.lang.String field_string>;

        $z14 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r43, $r42);

        if $z14 != 0 goto label16;

        return 0;

     label16:
        $r46 = r0.<perfetto.protos.TestConfig$DummyFields: okio.ByteString field_bytes>;

        $r44 = (perfetto.protos.TestConfig$DummyFields) r1;

        $r45 = $r44.<perfetto.protos.TestConfig$DummyFields: okio.ByteString field_bytes>;

        $z15 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r46, $r45);

        if $z15 != 0 goto label17;

        return 0;

     label17:
        return 1;
    }

    public int hashCode()
    {
        perfetto.protos.TestConfig$DummyFields r0;
        okio.ByteString $r1, $r15;
        java.lang.Integer $r2, $r3, $r8, $r9, $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, $i16, i17, $i18, i19, $i20, i21, $i22, i23, $i24, i25, $i26, i27, $i28, i29, $i30, i31, $i32, i33, $i34, i35, $i36, i37, $i38, i39, $i40, i41, $i42;
        java.lang.Long $r4, $r5, $r6, $r7, $r12;
        java.lang.Double $r10;
        java.lang.Float $r11;
        java.lang.String $r14;

        r0 := @this: perfetto.protos.TestConfig$DummyFields;

        i14 = r0.<perfetto.protos.TestConfig$DummyFields: int hashCode>;

        if i14 != 0 goto label29;

        $r1 = virtualinvoke r0.<perfetto.protos.TestConfig$DummyFields: okio.ByteString unknownFields()>();

        i15 = virtualinvoke $r1.<okio.ByteString: int hashCode()>();

        $i0 = i15 * 37;

        $r2 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_uint32>;

        if $r2 != null goto label01;

        $i16 = 0;

        goto label02;

     label01:
        $i16 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

     label02:
        i17 = $i0 + $i16;

        $i1 = i17 * 37;

        $r3 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_int32>;

        if $r3 != null goto label03;

        $i18 = 0;

        goto label04;

     label03:
        $i18 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

     label04:
        i19 = $i1 + $i18;

        $i2 = i19 * 37;

        $r4 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_uint64>;

        if $r4 != null goto label05;

        $i20 = 0;

        goto label06;

     label05:
        $i20 = virtualinvoke $r4.<java.lang.Object: int hashCode()>();

     label06:
        i21 = $i2 + $i20;

        $i3 = i21 * 37;

        $r5 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_int64>;

        if $r5 != null goto label07;

        $i22 = 0;

        goto label08;

     label07:
        $i22 = virtualinvoke $r5.<java.lang.Object: int hashCode()>();

     label08:
        i23 = $i3 + $i22;

        $i4 = i23 * 37;

        $r6 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_fixed64>;

        if $r6 != null goto label09;

        $i24 = 0;

        goto label10;

     label09:
        $i24 = virtualinvoke $r6.<java.lang.Object: int hashCode()>();

     label10:
        i25 = $i4 + $i24;

        $i5 = i25 * 37;

        $r7 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_sfixed64>;

        if $r7 != null goto label11;

        $i26 = 0;

        goto label12;

     label11:
        $i26 = virtualinvoke $r7.<java.lang.Object: int hashCode()>();

     label12:
        i27 = $i5 + $i26;

        $i6 = i27 * 37;

        $r8 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_fixed32>;

        if $r8 != null goto label13;

        $i28 = 0;

        goto label14;

     label13:
        $i28 = virtualinvoke $r8.<java.lang.Object: int hashCode()>();

     label14:
        i29 = $i6 + $i28;

        $i7 = i29 * 37;

        $r9 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_sfixed32>;

        if $r9 != null goto label15;

        $i30 = 0;

        goto label16;

     label15:
        $i30 = virtualinvoke $r9.<java.lang.Object: int hashCode()>();

     label16:
        i31 = $i7 + $i30;

        $i8 = i31 * 37;

        $r10 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Double field_double>;

        if $r10 != null goto label17;

        $i32 = 0;

        goto label18;

     label17:
        $i32 = virtualinvoke $r10.<java.lang.Object: int hashCode()>();

     label18:
        i33 = $i8 + $i32;

        $i9 = i33 * 37;

        $r11 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Float field_float>;

        if $r11 != null goto label19;

        $i34 = 0;

        goto label20;

     label19:
        $i34 = virtualinvoke $r11.<java.lang.Object: int hashCode()>();

     label20:
        i35 = $i9 + $i34;

        $i10 = i35 * 37;

        $r12 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_sint64>;

        if $r12 != null goto label21;

        $i36 = 0;

        goto label22;

     label21:
        $i36 = virtualinvoke $r12.<java.lang.Object: int hashCode()>();

     label22:
        i37 = $i10 + $i36;

        $i11 = i37 * 37;

        $r13 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_sint32>;

        if $r13 != null goto label23;

        $i38 = 0;

        goto label24;

     label23:
        $i38 = virtualinvoke $r13.<java.lang.Object: int hashCode()>();

     label24:
        i39 = $i11 + $i38;

        $i12 = i39 * 37;

        $r14 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.String field_string>;

        if $r14 != null goto label25;

        $i40 = 0;

        goto label26;

     label25:
        $i40 = virtualinvoke $r14.<java.lang.Object: int hashCode()>();

     label26:
        i41 = $i12 + $i40;

        $i13 = i41 * 37;

        $r15 = r0.<perfetto.protos.TestConfig$DummyFields: okio.ByteString field_bytes>;

        if $r15 != null goto label27;

        $i42 = 0;

        goto label28;

     label27:
        $i42 = virtualinvoke $r15.<java.lang.Object: int hashCode()>();

     label28:
        i14 = $i13 + $i42;

        r0.<perfetto.protos.TestConfig$DummyFields: int hashCode> = i14;

     label29:
        return i14;
    }

    public java.lang.String toString()
    {
        perfetto.protos.TestConfig$DummyFields r0;
        java.util.List r1;
        java.util.ArrayList $r2;
        java.lang.Integer $r3, $r4, $r9, $r10, $r14, $r29, $r41, $r44, $r59, $r62;
        java.lang.Long $r5, $r6, $r7, $r8, $r13, $r32, $r47, $r50, $r53, $r56;
        java.lang.Double $r11, $r38;
        java.lang.Float $r12, $r35;
        java.lang.String $r15, $r21, $r24, $r25, $r27, $r28, $r31, $r34, $r37, $r40, $r43, $r46, $r49, $r52, $r55, $r58, $r61, $r64;
        okio.ByteString $r16, $r22;
        java.lang.CharSequence $r17, $r18, $r19;
        java.lang.Iterable $r20;
        java.util.Collection $r23, $r26, $r30, $r33, $r36, $r39, $r42, $r45, $r48, $r51, $r54, $r57, $r60, $r63;

        r0 := @this: perfetto.protos.TestConfig$DummyFields;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r1 = (java.util.List) $r2;

        $r3 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_uint32>;

        if $r3 == null goto label01;

        $r63 = (java.util.Collection) r1;

        $r62 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_uint32>;

        $r64 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("field_uint32=", $r62);

        interfaceinvoke $r63.<java.util.Collection: boolean add(java.lang.Object)>($r64);

     label01:
        $r4 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_int32>;

        if $r4 == null goto label02;

        $r60 = (java.util.Collection) r1;

        $r59 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_int32>;

        $r61 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("field_int32=", $r59);

        interfaceinvoke $r60.<java.util.Collection: boolean add(java.lang.Object)>($r61);

     label02:
        $r5 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_uint64>;

        if $r5 == null goto label03;

        $r57 = (java.util.Collection) r1;

        $r56 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_uint64>;

        $r58 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("field_uint64=", $r56);

        interfaceinvoke $r57.<java.util.Collection: boolean add(java.lang.Object)>($r58);

     label03:
        $r6 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_int64>;

        if $r6 == null goto label04;

        $r54 = (java.util.Collection) r1;

        $r53 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_int64>;

        $r55 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("field_int64=", $r53);

        interfaceinvoke $r54.<java.util.Collection: boolean add(java.lang.Object)>($r55);

     label04:
        $r7 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_fixed64>;

        if $r7 == null goto label05;

        $r51 = (java.util.Collection) r1;

        $r50 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_fixed64>;

        $r52 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("field_fixed64=", $r50);

        interfaceinvoke $r51.<java.util.Collection: boolean add(java.lang.Object)>($r52);

     label05:
        $r8 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_sfixed64>;

        if $r8 == null goto label06;

        $r48 = (java.util.Collection) r1;

        $r47 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_sfixed64>;

        $r49 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("field_sfixed64=", $r47);

        interfaceinvoke $r48.<java.util.Collection: boolean add(java.lang.Object)>($r49);

     label06:
        $r9 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_fixed32>;

        if $r9 == null goto label07;

        $r45 = (java.util.Collection) r1;

        $r44 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_fixed32>;

        $r46 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("field_fixed32=", $r44);

        interfaceinvoke $r45.<java.util.Collection: boolean add(java.lang.Object)>($r46);

     label07:
        $r10 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_sfixed32>;

        if $r10 == null goto label08;

        $r42 = (java.util.Collection) r1;

        $r41 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_sfixed32>;

        $r43 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("field_sfixed32=", $r41);

        interfaceinvoke $r42.<java.util.Collection: boolean add(java.lang.Object)>($r43);

     label08:
        $r11 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Double field_double>;

        if $r11 == null goto label09;

        $r39 = (java.util.Collection) r1;

        $r38 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Double field_double>;

        $r40 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("field_double=", $r38);

        interfaceinvoke $r39.<java.util.Collection: boolean add(java.lang.Object)>($r40);

     label09:
        $r12 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Float field_float>;

        if $r12 == null goto label10;

        $r36 = (java.util.Collection) r1;

        $r35 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Float field_float>;

        $r37 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("field_float=", $r35);

        interfaceinvoke $r36.<java.util.Collection: boolean add(java.lang.Object)>($r37);

     label10:
        $r13 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_sint64>;

        if $r13 == null goto label11;

        $r33 = (java.util.Collection) r1;

        $r32 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_sint64>;

        $r34 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("field_sint64=", $r32);

        interfaceinvoke $r33.<java.util.Collection: boolean add(java.lang.Object)>($r34);

     label11:
        $r14 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_sint32>;

        if $r14 == null goto label12;

        $r30 = (java.util.Collection) r1;

        $r29 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_sint32>;

        $r31 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("field_sint32=", $r29);

        interfaceinvoke $r30.<java.util.Collection: boolean add(java.lang.Object)>($r31);

     label12:
        $r15 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.String field_string>;

        if $r15 == null goto label13;

        $r26 = (java.util.Collection) r1;

        $r25 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.String field_string>;

        $r27 = staticinvoke <com.squareup.wire.internal.Internal: java.lang.String sanitize(java.lang.String)>($r25);

        $r28 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("field_string=", $r27);

        interfaceinvoke $r26.<java.util.Collection: boolean add(java.lang.Object)>($r28);

     label13:
        $r16 = r0.<perfetto.protos.TestConfig$DummyFields: okio.ByteString field_bytes>;

        if $r16 == null goto label14;

        $r23 = (java.util.Collection) r1;

        $r22 = r0.<perfetto.protos.TestConfig$DummyFields: okio.ByteString field_bytes>;

        $r24 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("field_bytes=", $r22);

        interfaceinvoke $r23.<java.util.Collection: boolean add(java.lang.Object)>($r24);

     label14:
        $r20 = (java.lang.Iterable) r1;

        $r19 = (java.lang.CharSequence) ", ";

        $r18 = (java.lang.CharSequence) "DummyFields{";

        $r17 = (java.lang.CharSequence) "}";

        $r21 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r20, $r19, $r18, $r17, 0, null, null, 56, null);

        return $r21;
    }

    public final perfetto.protos.TestConfig$DummyFields copy(java.lang.Integer, java.lang.Integer, java.lang.Long, java.lang.Long, java.lang.Long, java.lang.Long, java.lang.Integer, java.lang.Integer, java.lang.Double, java.lang.Float, java.lang.Long, java.lang.Integer, java.lang.String, okio.ByteString, okio.ByteString)
    {
        perfetto.protos.TestConfig$DummyFields r0, $r16;
        java.lang.Integer r1, r2, r7, r8, r12;
        java.lang.Long r3, r4, r5, r6, r11;
        java.lang.Double r9;
        java.lang.Float r10;
        java.lang.String r13;
        okio.ByteString r14, r15;

        r0 := @this: perfetto.protos.TestConfig$DummyFields;

        r1 := @parameter0: java.lang.Integer;

        r2 := @parameter1: java.lang.Integer;

        r3 := @parameter2: java.lang.Long;

        r4 := @parameter3: java.lang.Long;

        r5 := @parameter4: java.lang.Long;

        r6 := @parameter5: java.lang.Long;

        r7 := @parameter6: java.lang.Integer;

        r8 := @parameter7: java.lang.Integer;

        r9 := @parameter8: java.lang.Double;

        r10 := @parameter9: java.lang.Float;

        r11 := @parameter10: java.lang.Long;

        r12 := @parameter11: java.lang.Integer;

        r13 := @parameter12: java.lang.String;

        r14 := @parameter13: okio.ByteString;

        r15 := @parameter14: okio.ByteString;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r15, "unknownFields");

        $r16 = new perfetto.protos.TestConfig$DummyFields;

        specialinvoke $r16.<perfetto.protos.TestConfig$DummyFields: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Integer,java.lang.Integer,java.lang.Double,java.lang.Float,java.lang.Long,java.lang.Integer,java.lang.String,okio.ByteString,okio.ByteString)>(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15);

        return $r16;
    }

    public static perfetto.protos.TestConfig$DummyFields copy$default(perfetto.protos.TestConfig$DummyFields, java.lang.Integer, java.lang.Integer, java.lang.Long, java.lang.Long, java.lang.Long, java.lang.Long, java.lang.Integer, java.lang.Integer, java.lang.Double, java.lang.Float, java.lang.Long, java.lang.Integer, java.lang.String, okio.ByteString, okio.ByteString, int, java.lang.Object)
    {
        perfetto.protos.TestConfig$DummyFields r0, $r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.lang.Object r1;
        java.lang.Integer r3, r4, r9, r10, r14;
        java.lang.Long r5, r6, r7, r8, r13;
        java.lang.Double r11;
        java.lang.Float r12;
        java.lang.String r15;
        okio.ByteString r16, r17;

        r0 := @parameter0: perfetto.protos.TestConfig$DummyFields;

        r3 := @parameter1: java.lang.Integer;

        r4 := @parameter2: java.lang.Integer;

        r5 := @parameter3: java.lang.Long;

        r6 := @parameter4: java.lang.Long;

        r7 := @parameter5: java.lang.Long;

        r8 := @parameter6: java.lang.Long;

        r9 := @parameter7: java.lang.Integer;

        r10 := @parameter8: java.lang.Integer;

        r11 := @parameter9: java.lang.Double;

        r12 := @parameter10: java.lang.Float;

        r13 := @parameter11: java.lang.Long;

        r14 := @parameter12: java.lang.Integer;

        r15 := @parameter13: java.lang.String;

        r16 := @parameter14: okio.ByteString;

        r17 := @parameter15: okio.ByteString;

        i0 := @parameter16: int;

        r1 := @parameter17: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label01;

        r3 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_uint32>;

     label01:
        $i2 = i0 & 2;

        if $i2 == 0 goto label02;

        r4 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_int32>;

     label02:
        $i3 = i0 & 4;

        if $i3 == 0 goto label03;

        r5 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_uint64>;

     label03:
        $i4 = i0 & 8;

        if $i4 == 0 goto label04;

        r6 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_int64>;

     label04:
        $i5 = i0 & 16;

        if $i5 == 0 goto label05;

        r7 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_fixed64>;

     label05:
        $i6 = i0 & 32;

        if $i6 == 0 goto label06;

        r8 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_sfixed64>;

     label06:
        $i7 = i0 & 64;

        if $i7 == 0 goto label07;

        r9 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_fixed32>;

     label07:
        $i8 = i0 & 128;

        if $i8 == 0 goto label08;

        r10 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_sfixed32>;

     label08:
        $i9 = i0 & 256;

        if $i9 == 0 goto label09;

        r11 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Double field_double>;

     label09:
        $i10 = i0 & 512;

        if $i10 == 0 goto label10;

        r12 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Float field_float>;

     label10:
        $i11 = i0 & 1024;

        if $i11 == 0 goto label11;

        r13 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Long field_sint64>;

     label11:
        $i12 = i0 & 2048;

        if $i12 == 0 goto label12;

        r14 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Integer field_sint32>;

     label12:
        $i13 = i0 & 4096;

        if $i13 == 0 goto label13;

        r15 = r0.<perfetto.protos.TestConfig$DummyFields: java.lang.String field_string>;

     label13:
        $i14 = i0 & 8192;

        if $i14 == 0 goto label14;

        r16 = r0.<perfetto.protos.TestConfig$DummyFields: okio.ByteString field_bytes>;

     label14:
        $i15 = i0 & 16384;

        if $i15 == 0 goto label15;

        r17 = virtualinvoke r0.<perfetto.protos.TestConfig$DummyFields: okio.ByteString unknownFields()>();

     label15:
        $r2 = virtualinvoke r0.<perfetto.protos.TestConfig$DummyFields: perfetto.protos.TestConfig$DummyFields copy(java.lang.Integer,java.lang.Integer,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Integer,java.lang.Integer,java.lang.Double,java.lang.Float,java.lang.Long,java.lang.Integer,java.lang.String,okio.ByteString,okio.ByteString)>(r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17);

        return $r2;
    }

    public void <init>()
    {
        perfetto.protos.TestConfig$DummyFields r0;

        r0 := @this: perfetto.protos.TestConfig$DummyFields;

        specialinvoke r0.<perfetto.protos.TestConfig$DummyFields: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Integer,java.lang.Integer,java.lang.Double,java.lang.Float,java.lang.Long,java.lang.Integer,java.lang.String,okio.ByteString,okio.ByteString,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 32767, null);

        return;
    }

    public volatile com.squareup.wire.Message$Builder newBuilder()
    {
        perfetto.protos.TestConfig$DummyFields r0;
        java.lang.Void $r1;
        com.squareup.wire.Message$Builder $r2;

        r0 := @this: perfetto.protos.TestConfig$DummyFields;

        $r1 = virtualinvoke r0.<perfetto.protos.TestConfig$DummyFields: java.lang.Void newBuilder()>();

        $r2 = (com.squareup.wire.Message$Builder) $r1;

        return $r2;
    }

    static void <clinit>()
    {
        com.squareup.wire.FieldEncoding r0;
        kotlin.reflect.KClass r1;
        com.squareup.wire.Syntax r2;
        perfetto.protos.TestConfig$DummyFields$Companion $r3;
        perfetto.protos.TestConfig$DummyFields$Companion$ADAPTER$1 $r4;
        com.squareup.wire.ProtoAdapter $r5;

        $r3 = new perfetto.protos.TestConfig$DummyFields$Companion;

        specialinvoke $r3.<perfetto.protos.TestConfig$DummyFields$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <perfetto.protos.TestConfig$DummyFields: perfetto.protos.TestConfig$DummyFields$Companion Companion> = $r3;

        r0 = <com.squareup.wire.FieldEncoding: com.squareup.wire.FieldEncoding LENGTH_DELIMITED>;

        r1 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Lperfetto/protos/TestConfig$DummyFields;");

        r2 = <com.squareup.wire.Syntax: com.squareup.wire.Syntax PROTO_2>;

        $r4 = new perfetto.protos.TestConfig$DummyFields$Companion$ADAPTER$1;

        specialinvoke $r4.<perfetto.protos.TestConfig$DummyFields$Companion$ADAPTER$1: void <init>(com.squareup.wire.FieldEncoding,kotlin.reflect.KClass,com.squareup.wire.Syntax)>(r0, r1, r2);

        $r5 = (com.squareup.wire.ProtoAdapter) $r4;

        <perfetto.protos.TestConfig$DummyFields: com.squareup.wire.ProtoAdapter ADAPTER> = $r5;

        return;
    }

