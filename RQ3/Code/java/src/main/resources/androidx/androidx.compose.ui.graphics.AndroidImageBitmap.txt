androidx.compose.ui.graphics.AndroidImageBitmap
<androidx.compose.ui.graphics.AndroidImageBitmap: android.graphics.Bitmap bitmap>
    public void <init>(android.graphics.Bitmap)
    {
        androidx.compose.ui.graphics.AndroidImageBitmap r0;
        android.graphics.Bitmap r1;

        r0 := @this: androidx.compose.ui.graphics.AndroidImageBitmap;

        r1 := @parameter0: android.graphics.Bitmap;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "bitmap");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.graphics.AndroidImageBitmap: android.graphics.Bitmap bitmap> = r1;

        return;
    }

    public final android.graphics.Bitmap getBitmap$ui_graphics_release()
    {
        androidx.compose.ui.graphics.AndroidImageBitmap r0;
        android.graphics.Bitmap $r1;

        r0 := @this: androidx.compose.ui.graphics.AndroidImageBitmap;

        $r1 = r0.<androidx.compose.ui.graphics.AndroidImageBitmap: android.graphics.Bitmap bitmap>;

        return $r1;
    }

    public int getWidth()
    {
        androidx.compose.ui.graphics.AndroidImageBitmap r0;
        android.graphics.Bitmap $r1;
        int $i0;

        r0 := @this: androidx.compose.ui.graphics.AndroidImageBitmap;

        $r1 = r0.<androidx.compose.ui.graphics.AndroidImageBitmap: android.graphics.Bitmap bitmap>;

        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int getWidth()>();

        return $i0;
    }

    public int getHeight()
    {
        androidx.compose.ui.graphics.AndroidImageBitmap r0;
        android.graphics.Bitmap $r1;
        int $i0;

        r0 := @this: androidx.compose.ui.graphics.AndroidImageBitmap;

        $r1 = r0.<androidx.compose.ui.graphics.AndroidImageBitmap: android.graphics.Bitmap bitmap>;

        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int getHeight()>();

        return $i0;
    }

    public int getConfig-_sVssgQ()
    {
        androidx.compose.ui.graphics.AndroidImageBitmap r0;
        android.graphics.Bitmap $r1;
        android.graphics.Bitmap$Config $r2;
        int $i0;

        r0 := @this: androidx.compose.ui.graphics.AndroidImageBitmap;

        $r1 = r0.<androidx.compose.ui.graphics.AndroidImageBitmap: android.graphics.Bitmap bitmap>;

        $r2 = virtualinvoke $r1.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "bitmap.config");

        $i0 = staticinvoke <androidx.compose.ui.graphics.AndroidImageBitmap_androidKt: int toImageConfig(android.graphics.Bitmap$Config)>($r2);

        return $i0;
    }

    public androidx.compose.ui.graphics.colorspace.ColorSpace getColorSpace()
    {
        androidx.compose.ui.graphics.AndroidImageBitmap r0;
        androidx.compose.ui.graphics.Api26Bitmap $r1;
        int $i0;
        androidx.compose.ui.graphics.colorspace.ColorSpaces $r2;
        androidx.compose.ui.graphics.colorspace.Rgb $r3;
        android.graphics.Bitmap $r4;
        androidx.compose.ui.graphics.colorspace.ColorSpace $r5;

        r0 := @this: androidx.compose.ui.graphics.AndroidImageBitmap;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label1;

        $r1 = <androidx.compose.ui.graphics.Api26Bitmap: androidx.compose.ui.graphics.Api26Bitmap INSTANCE>;

        $r4 = r0.<androidx.compose.ui.graphics.AndroidImageBitmap: android.graphics.Bitmap bitmap>;

        $r5 = staticinvoke <androidx.compose.ui.graphics.Api26Bitmap: androidx.compose.ui.graphics.colorspace.ColorSpace composeColorSpace$ui_graphics_release(android.graphics.Bitmap)>($r4);

        goto label2;

     label1:
        $r2 = <androidx.compose.ui.graphics.colorspace.ColorSpaces: androidx.compose.ui.graphics.colorspace.ColorSpaces INSTANCE>;

        $r3 = virtualinvoke $r2.<androidx.compose.ui.graphics.colorspace.ColorSpaces: androidx.compose.ui.graphics.colorspace.Rgb getSrgb()>();

        $r5 = (androidx.compose.ui.graphics.colorspace.ColorSpace) $r3;

     label2:
        return $r5;
    }

    public void readPixels(int[], int, int, int, int, int, int)
    {
        androidx.compose.ui.graphics.AndroidImageBitmap r0;
        int[] r1;
        int i0, i1, i2, i3, i4, i5, $i6;
        android.graphics.Bitmap r2, r3, $r8;
        androidx.compose.ui.graphics.ImageBitmap $r4;
        android.graphics.Bitmap$Config $r5, $r6, $r7;
        boolean z0;

        r0 := @this: androidx.compose.ui.graphics.AndroidImageBitmap;

        r1 := @parameter0: int[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "buffer");

        $r4 = (androidx.compose.ui.graphics.ImageBitmap) r0;

        r2 = staticinvoke <androidx.compose.ui.graphics.AndroidImageBitmap_androidKt: android.graphics.Bitmap asAndroidBitmap(androidx.compose.ui.graphics.ImageBitmap)>($r4);

        z0 = 0;

        $i6 = <android.os.Build$VERSION: int SDK_INT>;

        if $i6 < 26 goto label1;

        $r5 = virtualinvoke r2.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        $r6 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config HARDWARE>;

        if $r5 == $r6 goto label2;

     label1:
        $r8 = r2;

        goto label3;

     label2:
        z0 = 1;

        $r7 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r8 = virtualinvoke r2.<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>($r7, 0);

     label3:
        r3 = $r8;

        virtualinvoke r3.<android.graphics.Bitmap: void getPixels(int[],int,int,int,int,int,int)>(r1, i4, i5, i0, i1, i2, i3);

        if z0 == 0 goto label4;

        virtualinvoke r3.<android.graphics.Bitmap: void recycle()>();

     label4:
        return;
    }

    public boolean getHasAlpha()
    {
        androidx.compose.ui.graphics.AndroidImageBitmap r0;
        android.graphics.Bitmap $r1;
        boolean $z0;

        r0 := @this: androidx.compose.ui.graphics.AndroidImageBitmap;

        $r1 = r0.<androidx.compose.ui.graphics.AndroidImageBitmap: android.graphics.Bitmap bitmap>;

        $z0 = virtualinvoke $r1.<android.graphics.Bitmap: boolean hasAlpha()>();

        return $z0;
    }

    public void prepareToDraw()
    {
        androidx.compose.ui.graphics.AndroidImageBitmap r0;
        android.graphics.Bitmap $r1;

        r0 := @this: androidx.compose.ui.graphics.AndroidImageBitmap;

        $r1 = r0.<androidx.compose.ui.graphics.AndroidImageBitmap: android.graphics.Bitmap bitmap>;

        virtualinvoke $r1.<android.graphics.Bitmap: void prepareToDraw()>();

        return;
    }

