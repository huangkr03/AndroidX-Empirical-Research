io.grpc.internal.MessageFramer
<io.grpc.internal.MessageFramer: io.grpc.internal.WritableBuffer buffer>
<io.grpc.internal.MessageFramer: io.grpc.internal.WritableBufferAllocator bufferAllocator>
<io.grpc.internal.MessageFramer: boolean closed>
<io.grpc.internal.MessageFramer: io.grpc.Compressor compressor>
<io.grpc.internal.MessageFramer: int currentMessageSeqNo>
<io.grpc.internal.MessageFramer: long currentMessageWireSize>
<io.grpc.internal.MessageFramer: java.nio.ByteBuffer headerScratch>
<io.grpc.internal.MessageFramer: int maxOutboundMessageSize>
<io.grpc.internal.MessageFramer: boolean messageCompression>
<io.grpc.internal.MessageFramer: int messagesBuffered>
<io.grpc.internal.MessageFramer: io.grpc.internal.MessageFramer$OutputStreamAdapter outputStreamAdapter>
<io.grpc.internal.MessageFramer: io.grpc.internal.MessageFramer$Sink sink>
<io.grpc.internal.MessageFramer: io.grpc.internal.StatsTraceContext statsTraceCtx>
    public void <init>(io.grpc.internal.MessageFramer$Sink, io.grpc.internal.WritableBufferAllocator, io.grpc.internal.StatsTraceContext)
    {
        io.grpc.internal.MessageFramer $r0;
        io.grpc.internal.WritableBufferAllocator $r1;
        io.grpc.internal.StatsTraceContext $r2;
        io.grpc.internal.MessageFramer$Sink $r3;
        io.grpc.Codec $r4;
        io.grpc.internal.MessageFramer$OutputStreamAdapter $r5;
        java.nio.ByteBuffer $r6;
        java.lang.Object $r7;

        $r0 := @this: io.grpc.internal.MessageFramer;

        $r3 := @parameter0: io.grpc.internal.MessageFramer$Sink;

        $r1 := @parameter1: io.grpc.internal.WritableBufferAllocator;

        $r2 := @parameter2: io.grpc.internal.StatsTraceContext;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<io.grpc.internal.MessageFramer: int maxOutboundMessageSize> = -1;

        $r4 = <io.grpc.Codec$Identity: io.grpc.Codec NONE>;

        $r0.<io.grpc.internal.MessageFramer: io.grpc.Compressor compressor> = $r4;

        $r0.<io.grpc.internal.MessageFramer: boolean messageCompression> = 1;

        $r5 = new io.grpc.internal.MessageFramer$OutputStreamAdapter;

        specialinvoke $r5.<io.grpc.internal.MessageFramer$OutputStreamAdapter: void <init>(io.grpc.internal.MessageFramer,io.grpc.internal.MessageFramer$1)>($r0, null);

        $r0.<io.grpc.internal.MessageFramer: io.grpc.internal.MessageFramer$OutputStreamAdapter outputStreamAdapter> = $r5;

        $r6 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(5);

        $r0.<io.grpc.internal.MessageFramer: java.nio.ByteBuffer headerScratch> = $r6;

        $r0.<io.grpc.internal.MessageFramer: int currentMessageSeqNo> = -1;

        $r7 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r3, "sink");

        $r3 = (io.grpc.internal.MessageFramer$Sink) $r7;

        $r0.<io.grpc.internal.MessageFramer: io.grpc.internal.MessageFramer$Sink sink> = $r3;

        $r7 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "bufferAllocator");

        $r1 = (io.grpc.internal.WritableBufferAllocator) $r7;

        $r0.<io.grpc.internal.MessageFramer: io.grpc.internal.WritableBufferAllocator bufferAllocator> = $r1;

        $r7 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r2, "statsTraceCtx");

        $r2 = (io.grpc.internal.StatsTraceContext) $r7;

        $r0.<io.grpc.internal.MessageFramer: io.grpc.internal.StatsTraceContext statsTraceCtx> = $r2;

        return;
    }

    static void access$400(io.grpc.internal.MessageFramer, byte[], int, int)
    {
        io.grpc.internal.MessageFramer $r0;
        byte[] $r1;
        int $i0, $i1;

        $r0 := @parameter0: io.grpc.internal.MessageFramer;

        $r1 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        specialinvoke $r0.<io.grpc.internal.MessageFramer: void writeRaw(byte[],int,int)>($r1, $i0, $i1);

        return;
    }

    static io.grpc.internal.WritableBufferAllocator access$500(io.grpc.internal.MessageFramer)
    {
        io.grpc.internal.MessageFramer $r0;
        io.grpc.internal.WritableBufferAllocator r1;

        $r0 := @parameter0: io.grpc.internal.MessageFramer;

        r1 = $r0.<io.grpc.internal.MessageFramer: io.grpc.internal.WritableBufferAllocator bufferAllocator>;

        return r1;
    }

    private void commitToSink(boolean, boolean)
    {
        io.grpc.internal.MessageFramer $r0;
        boolean $z0, $z1;
        io.grpc.internal.WritableBuffer $r1;
        int $i0;
        io.grpc.internal.MessageFramer$Sink $r2;

        $r0 := @this: io.grpc.internal.MessageFramer;

        $z1 := @parameter0: boolean;

        $z0 := @parameter1: boolean;

        $r1 = $r0.<io.grpc.internal.MessageFramer: io.grpc.internal.WritableBuffer buffer>;

        $r0.<io.grpc.internal.MessageFramer: io.grpc.internal.WritableBuffer buffer> = null;

        $r2 = $r0.<io.grpc.internal.MessageFramer: io.grpc.internal.MessageFramer$Sink sink>;

        $i0 = $r0.<io.grpc.internal.MessageFramer: int messagesBuffered>;

        interfaceinvoke $r2.<io.grpc.internal.MessageFramer$Sink: void deliverFrame(io.grpc.internal.WritableBuffer,boolean,boolean,int)>($r1, $z1, $z0, $i0);

        $r0.<io.grpc.internal.MessageFramer: int messagesBuffered> = 0;

        return;
    }

    private int getKnownLength(java.io.InputStream) throws java.io.IOException
    {
        io.grpc.internal.MessageFramer $r0;
        int $i0;
        java.io.InputStream $r1;
        boolean $z0;

        $r0 := @this: io.grpc.internal.MessageFramer;

        $r1 := @parameter0: java.io.InputStream;

        $z0 = $r1 instanceof io.grpc.KnownLength;

        if $z0 != 0 goto label2;

        $z0 = $r1 instanceof java.io.ByteArrayInputStream;

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return -1;

     label2:
        $i0 = virtualinvoke $r1.<java.io.InputStream: int available()>();

        return $i0;
    }

    private void releaseBuffer()
    {
        io.grpc.internal.MessageFramer $r0;
        io.grpc.internal.WritableBuffer $r1;

        $r0 := @this: io.grpc.internal.MessageFramer;

        $r1 = $r0.<io.grpc.internal.MessageFramer: io.grpc.internal.WritableBuffer buffer>;

        if $r1 == null goto label1;

        interfaceinvoke $r1.<io.grpc.internal.WritableBuffer: void release()>();

        $r0.<io.grpc.internal.MessageFramer: io.grpc.internal.WritableBuffer buffer> = null;

     label1:
        return;
    }

    private void verifyNotClosed()
    {
        io.grpc.internal.MessageFramer $r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        $r0 := @this: io.grpc.internal.MessageFramer;

        $z0 = virtualinvoke $r0.<io.grpc.internal.MessageFramer: boolean isClosed()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Framer already closed");

        throw $r1;
    }

    private void writeBufferChain(io.grpc.internal.MessageFramer$BufferChainOutputStream, boolean)
    {
        io.grpc.internal.MessageFramer $r0;
        io.grpc.internal.MessageFramer$BufferChainOutputStream $r1;
        boolean $z0;
        int $i0, $i2, $i3;
        java.nio.ByteBuffer $r2;
        java.nio.Buffer $r3;
        byte $b1;
        io.grpc.internal.WritableBufferAllocator $r4;
        io.grpc.internal.WritableBuffer $r5;
        byte[] $r6;
        io.grpc.internal.MessageFramer$Sink $r7;
        java.util.List $r8;
        java.lang.Object $r9;
        long $l4;

        $r0 := @this: io.grpc.internal.MessageFramer;

        $r1 := @parameter0: io.grpc.internal.MessageFramer$BufferChainOutputStream;

        $z0 := @parameter1: boolean;

        $i0 = staticinvoke <io.grpc.internal.MessageFramer$BufferChainOutputStream: int access$200(io.grpc.internal.MessageFramer$BufferChainOutputStream)>($r1);

        $r2 = $r0.<io.grpc.internal.MessageFramer: java.nio.ByteBuffer headerScratch>;

        $r3 = virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        $r2 = (java.nio.ByteBuffer) $r3;

        $r2 = $r0.<io.grpc.internal.MessageFramer: java.nio.ByteBuffer headerScratch>;

        if $z0 == 0 goto label1;

        $b1 = 1;

        goto label2;

     label1:
        $b1 = 0;

     label2:
        $r2 = virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b1);

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i0);

        $r4 = $r0.<io.grpc.internal.MessageFramer: io.grpc.internal.WritableBufferAllocator bufferAllocator>;

        $r5 = interfaceinvoke $r4.<io.grpc.internal.WritableBufferAllocator: io.grpc.internal.WritableBuffer allocate(int)>(5);

        $r2 = $r0.<io.grpc.internal.MessageFramer: java.nio.ByteBuffer headerScratch>;

        $r6 = virtualinvoke $r2.<java.nio.ByteBuffer: byte[] array()>();

        $r2 = $r0.<io.grpc.internal.MessageFramer: java.nio.ByteBuffer headerScratch>;

        $i2 = virtualinvoke $r2.<java.nio.ByteBuffer: int position()>();

        interfaceinvoke $r5.<io.grpc.internal.WritableBuffer: void write(byte[],int,int)>($r6, 0, $i2);

        if $i0 != 0 goto label3;

        $r0.<io.grpc.internal.MessageFramer: io.grpc.internal.WritableBuffer buffer> = $r5;

        return;

     label3:
        $r7 = $r0.<io.grpc.internal.MessageFramer: io.grpc.internal.MessageFramer$Sink sink>;

        $i2 = $r0.<io.grpc.internal.MessageFramer: int messagesBuffered>;

        $i2 = $i2 + -1;

        interfaceinvoke $r7.<io.grpc.internal.MessageFramer$Sink: void deliverFrame(io.grpc.internal.WritableBuffer,boolean,boolean,int)>($r5, 0, 0, $i2);

        $r0.<io.grpc.internal.MessageFramer: int messagesBuffered> = 1;

        $r8 = staticinvoke <io.grpc.internal.MessageFramer$BufferChainOutputStream: java.util.List access$300(io.grpc.internal.MessageFramer$BufferChainOutputStream)>($r1);

        $i2 = 0;

     label4:
        $i3 = interfaceinvoke $r8.<java.util.List: int size()>();

        $i3 = $i3 + -1;

        if $i2 >= $i3 goto label5;

        $r7 = $r0.<io.grpc.internal.MessageFramer: io.grpc.internal.MessageFramer$Sink sink>;

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>($i2);

        $r5 = (io.grpc.internal.WritableBuffer) $r9;

        interfaceinvoke $r7.<io.grpc.internal.MessageFramer$Sink: void deliverFrame(io.grpc.internal.WritableBuffer,boolean,boolean,int)>($r5, 0, 0, 0);

        $i2 = $i2 + 1;

        goto label4;

     label5:
        $i2 = interfaceinvoke $r8.<java.util.List: int size()>();

        $i2 = $i2 + -1;

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>($i2);

        $r5 = (io.grpc.internal.WritableBuffer) $r9;

        $r0.<io.grpc.internal.MessageFramer: io.grpc.internal.WritableBuffer buffer> = $r5;

        $l4 = (long) $i0;

        $r0.<io.grpc.internal.MessageFramer: long currentMessageWireSize> = $l4;

        return;
    }

    private int writeCompressed(java.io.InputStream, int) throws java.io.IOException
    {
        io.grpc.internal.MessageFramer $r0;
        java.io.InputStream $r1;
        int $i0, $i1;
        io.grpc.internal.MessageFramer$BufferChainOutputStream $r2, r11;
        io.grpc.Compressor $r3;
        java.io.OutputStream $r4;
        io.grpc.Status $r5;
        java.util.Locale $r6;
        java.lang.Object[] $r7;
        java.lang.Integer $r8;
        java.lang.String $r9;
        io.grpc.StatusRuntimeException $r10;
        java.lang.Throwable r12;

        $r0 := @this: io.grpc.internal.MessageFramer;

        $r1 := @parameter0: java.io.InputStream;

        $i0 := @parameter1: int;

        r11 = new io.grpc.internal.MessageFramer$BufferChainOutputStream;

        $r2 = r11;

        specialinvoke r11.<io.grpc.internal.MessageFramer$BufferChainOutputStream: void <init>(io.grpc.internal.MessageFramer,io.grpc.internal.MessageFramer$1)>($r0, null);

        $r3 = $r0.<io.grpc.internal.MessageFramer: io.grpc.Compressor compressor>;

        $r4 = interfaceinvoke $r3.<io.grpc.Compressor: java.io.OutputStream compress(java.io.OutputStream)>($r2);

        $i0 = staticinvoke <io.grpc.internal.MessageFramer: int writeToOutputStream(java.io.InputStream,java.io.OutputStream)>($r1, $r4);

        virtualinvoke $r4.<java.io.OutputStream: void close()>();

        $i1 = $r0.<io.grpc.internal.MessageFramer: int maxOutboundMessageSize>;

        if $i1 < 0 goto label2;

        if $i0 > $i1 goto label1;

        goto label2;

     label1:
        $r5 = <io.grpc.Status: io.grpc.Status RESOURCE_EXHAUSTED>;

        $r6 = <java.util.Locale: java.util.Locale US>;

        $r7 = newarray (java.lang.Object)[2];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r7[0] = $r8;

        $i0 = $r0.<io.grpc.internal.MessageFramer: int maxOutboundMessageSize>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r7[1] = $r8;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r6, "message too large %d > %d", $r7);

        $r5 = virtualinvoke $r5.<io.grpc.Status: io.grpc.Status withDescription(java.lang.String)>($r9);

        $r10 = virtualinvoke $r5.<io.grpc.Status: io.grpc.StatusRuntimeException asRuntimeException()>();

        r12 = (java.lang.Throwable) $r10;

        throw r12;

     label2:
        specialinvoke $r0.<io.grpc.internal.MessageFramer: void writeBufferChain(io.grpc.internal.MessageFramer$BufferChainOutputStream,boolean)>($r2, 1);

        return $i0;
    }

    private int writeKnownLengthUncompressed(java.io.InputStream, int) throws java.io.IOException
    {
        io.grpc.internal.MessageFramer $r0;
        java.io.InputStream $r1;
        int $i0, $i1;
        io.grpc.Status $r2;
        java.util.Locale $r3;
        java.lang.Object[] $r4;
        java.lang.Integer $r5;
        java.lang.String $r6;
        io.grpc.StatusRuntimeException $r7;
        java.nio.ByteBuffer $r8;
        java.nio.Buffer $r9;
        io.grpc.internal.WritableBuffer $r10;
        io.grpc.internal.WritableBufferAllocator $r11;
        byte[] $r12;
        io.grpc.internal.MessageFramer$OutputStreamAdapter $r13;
        java.lang.Throwable r14;

        $r0 := @this: io.grpc.internal.MessageFramer;

        $r1 := @parameter0: java.io.InputStream;

        $i0 := @parameter1: int;

        $i1 = $r0.<io.grpc.internal.MessageFramer: int maxOutboundMessageSize>;

        if $i1 < 0 goto label2;

        if $i0 > $i1 goto label1;

        goto label2;

     label1:
        $r2 = <io.grpc.Status: io.grpc.Status RESOURCE_EXHAUSTED>;

        $r3 = <java.util.Locale: java.util.Locale US>;

        $r4 = newarray (java.lang.Object)[2];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4[0] = $r5;

        $i0 = $r0.<io.grpc.internal.MessageFramer: int maxOutboundMessageSize>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4[1] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r3, "message too large %d > %d", $r4);

        $r2 = virtualinvoke $r2.<io.grpc.Status: io.grpc.Status withDescription(java.lang.String)>($r6);

        $r7 = virtualinvoke $r2.<io.grpc.Status: io.grpc.StatusRuntimeException asRuntimeException()>();

        r14 = (java.lang.Throwable) $r7;

        throw r14;

     label2:
        $r8 = $r0.<io.grpc.internal.MessageFramer: java.nio.ByteBuffer headerScratch>;

        $r9 = virtualinvoke $r8.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        $r8 = (java.nio.ByteBuffer) $r9;

        $r8 = $r0.<io.grpc.internal.MessageFramer: java.nio.ByteBuffer headerScratch>;

        $r8 = virtualinvoke $r8.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(0);

        virtualinvoke $r8.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i0);

        $r10 = $r0.<io.grpc.internal.MessageFramer: io.grpc.internal.WritableBuffer buffer>;

        if $r10 != null goto label3;

        $r11 = $r0.<io.grpc.internal.MessageFramer: io.grpc.internal.WritableBufferAllocator bufferAllocator>;

        $r8 = $r0.<io.grpc.internal.MessageFramer: java.nio.ByteBuffer headerScratch>;

        $i1 = virtualinvoke $r8.<java.nio.ByteBuffer: int position()>();

        $i0 = $i1 + $i0;

        $r10 = interfaceinvoke $r11.<io.grpc.internal.WritableBufferAllocator: io.grpc.internal.WritableBuffer allocate(int)>($i0);

        $r0.<io.grpc.internal.MessageFramer: io.grpc.internal.WritableBuffer buffer> = $r10;

     label3:
        $r8 = $r0.<io.grpc.internal.MessageFramer: java.nio.ByteBuffer headerScratch>;

        $r12 = virtualinvoke $r8.<java.nio.ByteBuffer: byte[] array()>();

        $r8 = $r0.<io.grpc.internal.MessageFramer: java.nio.ByteBuffer headerScratch>;

        $i0 = virtualinvoke $r8.<java.nio.ByteBuffer: int position()>();

        specialinvoke $r0.<io.grpc.internal.MessageFramer: void writeRaw(byte[],int,int)>($r12, 0, $i0);

        $r13 = $r0.<io.grpc.internal.MessageFramer: io.grpc.internal.MessageFramer$OutputStreamAdapter outputStreamAdapter>;

        $i0 = staticinvoke <io.grpc.internal.MessageFramer: int writeToOutputStream(java.io.InputStream,java.io.OutputStream)>($r1, $r13);

        return $i0;
    }

    private void writeRaw(byte[], int, int)
    {
        io.grpc.internal.MessageFramer $r0;
        byte[] $r1;
        io.grpc.internal.WritableBuffer $r2;
        int $i0, $i1, $i2;
        io.grpc.internal.WritableBufferAllocator $r3;

        $r0 := @this: io.grpc.internal.MessageFramer;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

     label1:
        if $i1 <= 0 goto label4;

        $r2 = $r0.<io.grpc.internal.MessageFramer: io.grpc.internal.WritableBuffer buffer>;

        if $r2 == null goto label2;

        $i2 = interfaceinvoke $r2.<io.grpc.internal.WritableBuffer: int writableBytes()>();

        if $i2 != 0 goto label2;

        specialinvoke $r0.<io.grpc.internal.MessageFramer: void commitToSink(boolean,boolean)>(0, 0);

     label2:
        $r2 = $r0.<io.grpc.internal.MessageFramer: io.grpc.internal.WritableBuffer buffer>;

        if $r2 != null goto label3;

        $r3 = $r0.<io.grpc.internal.MessageFramer: io.grpc.internal.WritableBufferAllocator bufferAllocator>;

        $r2 = interfaceinvoke $r3.<io.grpc.internal.WritableBufferAllocator: io.grpc.internal.WritableBuffer allocate(int)>($i1);

        $r0.<io.grpc.internal.MessageFramer: io.grpc.internal.WritableBuffer buffer> = $r2;

     label3:
        $r2 = $r0.<io.grpc.internal.MessageFramer: io.grpc.internal.WritableBuffer buffer>;

        $i2 = interfaceinvoke $r2.<io.grpc.internal.WritableBuffer: int writableBytes()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

        $r2 = $r0.<io.grpc.internal.MessageFramer: io.grpc.internal.WritableBuffer buffer>;

        interfaceinvoke $r2.<io.grpc.internal.WritableBuffer: void write(byte[],int,int)>($r1, $i0, $i2);

        $i0 = $i0 + $i2;

        $i1 = $i1 - $i2;

        goto label1;

     label4:
        return;
    }

    private static int writeToOutputStream(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
    {
        byte $b0;
        java.io.InputStream $r0;
        java.io.OutputStream $r1;
        boolean $z0;
        io.grpc.Drainable $r2;
        int $i1;
        long $l2;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.io.OutputStream;

        $z0 = $r0 instanceof io.grpc.Drainable;

        if $z0 == 0 goto label1;

        $r2 = (io.grpc.Drainable) $r0;

        $i1 = interfaceinvoke $r2.<io.grpc.Drainable: int drainTo(java.io.OutputStream)>($r1);

        return $i1;

     label1:
        $l2 = staticinvoke <com.google.common.io.ByteStreams: long copy(java.io.InputStream,java.io.OutputStream)>($r0, $r1);

        $b0 = $l2 cmp 2147483647L;

        if $b0 > 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,long)>($z0, "Message size overflow: %s", $l2);

        $i1 = (int) $l2;

        return $i1;
    }

    private int writeUncompressed(java.io.InputStream, int) throws java.io.IOException
    {
        io.grpc.internal.MessageFramer $r0;
        java.io.InputStream $r1;
        int $i0, $i2;
        long $l1;
        io.grpc.internal.MessageFramer$BufferChainOutputStream $r2, r9;
        io.grpc.Status $r3;
        java.util.Locale $r4;
        java.lang.Object[] $r5;
        java.lang.Integer $r6;
        java.lang.String $r7;
        io.grpc.StatusRuntimeException $r8;
        java.lang.Throwable r10;

        $r0 := @this: io.grpc.internal.MessageFramer;

        $r1 := @parameter0: java.io.InputStream;

        $i0 := @parameter1: int;

        if $i0 == -1 goto label1;

        $l1 = (long) $i0;

        $r0.<io.grpc.internal.MessageFramer: long currentMessageWireSize> = $l1;

        $i0 = specialinvoke $r0.<io.grpc.internal.MessageFramer: int writeKnownLengthUncompressed(java.io.InputStream,int)>($r1, $i0);

        return $i0;

     label1:
        r9 = new io.grpc.internal.MessageFramer$BufferChainOutputStream;

        $r2 = r9;

        specialinvoke r9.<io.grpc.internal.MessageFramer$BufferChainOutputStream: void <init>(io.grpc.internal.MessageFramer,io.grpc.internal.MessageFramer$1)>($r0, null);

        $i0 = staticinvoke <io.grpc.internal.MessageFramer: int writeToOutputStream(java.io.InputStream,java.io.OutputStream)>($r1, $r2);

        $i2 = $r0.<io.grpc.internal.MessageFramer: int maxOutboundMessageSize>;

        if $i2 < 0 goto label3;

        if $i0 > $i2 goto label2;

        goto label3;

     label2:
        $r3 = <io.grpc.Status: io.grpc.Status RESOURCE_EXHAUSTED>;

        $r4 = <java.util.Locale: java.util.Locale US>;

        $r5 = newarray (java.lang.Object)[2];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[0] = $r6;

        $i0 = $r0.<io.grpc.internal.MessageFramer: int maxOutboundMessageSize>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[1] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r4, "message too large %d > %d", $r5);

        $r3 = virtualinvoke $r3.<io.grpc.Status: io.grpc.Status withDescription(java.lang.String)>($r7);

        $r8 = virtualinvoke $r3.<io.grpc.Status: io.grpc.StatusRuntimeException asRuntimeException()>();

        r10 = (java.lang.Throwable) $r8;

        throw r10;

     label3:
        specialinvoke $r0.<io.grpc.internal.MessageFramer: void writeBufferChain(io.grpc.internal.MessageFramer$BufferChainOutputStream,boolean)>($r2, 0);

        return $i0;
    }

    public void close()
    {
        io.grpc.internal.MessageFramer $r0;
        boolean $z0;
        io.grpc.internal.WritableBuffer $r1;
        int $i0;

        $r0 := @this: io.grpc.internal.MessageFramer;

        $z0 = virtualinvoke $r0.<io.grpc.internal.MessageFramer: boolean isClosed()>();

        if $z0 != 0 goto label2;

        $r0.<io.grpc.internal.MessageFramer: boolean closed> = 1;

        $r1 = $r0.<io.grpc.internal.MessageFramer: io.grpc.internal.WritableBuffer buffer>;

        if $r1 == null goto label1;

        $i0 = interfaceinvoke $r1.<io.grpc.internal.WritableBuffer: int readableBytes()>();

        if $i0 != 0 goto label1;

        specialinvoke $r0.<io.grpc.internal.MessageFramer: void releaseBuffer()>();

     label1:
        specialinvoke $r0.<io.grpc.internal.MessageFramer: void commitToSink(boolean,boolean)>(1, 1);

     label2:
        return;
    }

    public void flush()
    {
        io.grpc.internal.MessageFramer $r0;
        int $i0;
        io.grpc.internal.WritableBuffer $r1;

        $r0 := @this: io.grpc.internal.MessageFramer;

        $r1 = $r0.<io.grpc.internal.MessageFramer: io.grpc.internal.WritableBuffer buffer>;

        if $r1 == null goto label1;

        $i0 = interfaceinvoke $r1.<io.grpc.internal.WritableBuffer: int readableBytes()>();

        if $i0 <= 0 goto label1;

        specialinvoke $r0.<io.grpc.internal.MessageFramer: void commitToSink(boolean,boolean)>(0, 1);

     label1:
        return;
    }

    public boolean isClosed()
    {
        io.grpc.internal.MessageFramer $r0;
        boolean z0;

        $r0 := @this: io.grpc.internal.MessageFramer;

        z0 = $r0.<io.grpc.internal.MessageFramer: boolean closed>;

        return z0;
    }

    public volatile io.grpc.internal.Framer setCompressor(io.grpc.Compressor)
    {
        io.grpc.internal.MessageFramer $r0;
        io.grpc.Compressor $r1;

        $r0 := @this: io.grpc.internal.MessageFramer;

        $r1 := @parameter0: io.grpc.Compressor;

        $r0 = virtualinvoke $r0.<io.grpc.internal.MessageFramer: io.grpc.internal.MessageFramer setCompressor(io.grpc.Compressor)>($r1);

        return $r0;
    }

    public io.grpc.internal.MessageFramer setCompressor(io.grpc.Compressor)
    {
        io.grpc.internal.MessageFramer $r0;
        java.lang.Object $r1;
        io.grpc.Compressor $r2;

        $r0 := @this: io.grpc.internal.MessageFramer;

        $r2 := @parameter0: io.grpc.Compressor;

        $r1 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r2, "Can\'t pass an empty compressor");

        $r2 = (io.grpc.Compressor) $r1;

        $r0.<io.grpc.internal.MessageFramer: io.grpc.Compressor compressor> = $r2;

        return $r0;
    }

    public void setMaxOutboundMessageSize(int)
    {
        io.grpc.internal.MessageFramer $r0;
        int $i0, $i1;
        boolean $z0;

        $r0 := @this: io.grpc.internal.MessageFramer;

        $i0 := @parameter0: int;

        $i1 = $r0.<io.grpc.internal.MessageFramer: int maxOutboundMessageSize>;

        if $i1 != -1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "max size already set");

        $r0.<io.grpc.internal.MessageFramer: int maxOutboundMessageSize> = $i0;

        return;
    }

    public void writePayload(java.io.InputStream)
    {
        io.grpc.internal.MessageFramer $r0;
        long $l0, $l3;
        java.io.InputStream $r1;
        int $i1, $i2;
        io.grpc.internal.StatsTraceContext $r2;
        boolean $z0;
        io.grpc.Compressor $r3;
        io.grpc.Codec $r4;
        java.lang.Object[] $r5;
        java.lang.Integer $r6;
        java.lang.String $r7;
        io.grpc.Status $r8;
        io.grpc.StatusRuntimeException $r9;
        java.lang.Throwable $r10, $r11;

        $r0 := @this: io.grpc.internal.MessageFramer;

        $r1 := @parameter0: java.io.InputStream;

        specialinvoke $r0.<io.grpc.internal.MessageFramer: void verifyNotClosed()>();

        $i1 = $r0.<io.grpc.internal.MessageFramer: int messagesBuffered>;

        $i1 = $i1 + 1;

        $r0.<io.grpc.internal.MessageFramer: int messagesBuffered> = $i1;

        $i1 = $r0.<io.grpc.internal.MessageFramer: int currentMessageSeqNo>;

        $i1 = $i1 + 1;

        $r0.<io.grpc.internal.MessageFramer: int currentMessageSeqNo> = $i1;

        $r0.<io.grpc.internal.MessageFramer: long currentMessageWireSize> = 0L;

        $r2 = $r0.<io.grpc.internal.MessageFramer: io.grpc.internal.StatsTraceContext statsTraceCtx>;

        virtualinvoke $r2.<io.grpc.internal.StatsTraceContext: void outboundMessage(int)>($i1);

        $z0 = $r0.<io.grpc.internal.MessageFramer: boolean messageCompression>;

        if $z0 == 0 goto label01;

        $r3 = $r0.<io.grpc.internal.MessageFramer: io.grpc.Compressor compressor>;

        $r4 = <io.grpc.Codec$Identity: io.grpc.Codec NONE>;

        if $r3 == $r4 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        $i1 = specialinvoke $r0.<io.grpc.internal.MessageFramer: int getKnownLength(java.io.InputStream)>($r1);

     label03:
        if $i1 == 0 goto label06;

        if $z0 == 0 goto label06;

     label04:
        $i2 = specialinvoke $r0.<io.grpc.internal.MessageFramer: int writeCompressed(java.io.InputStream,int)>($r1, $i1);

     label05:
        goto label07;

     label06:
        $i2 = specialinvoke $r0.<io.grpc.internal.MessageFramer: int writeUncompressed(java.io.InputStream,int)>($r1, $i1);

     label07:
        if $i1 == -1 goto label09;

        if $i2 != $i1 goto label08;

        goto label09;

     label08:
        $r5 = newarray (java.lang.Object)[2];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r5[0] = $r6;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r5[1] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Message length inaccurate %s != %s", $r5);

        $r8 = <io.grpc.Status: io.grpc.Status INTERNAL>;

        $r8 = virtualinvoke $r8.<io.grpc.Status: io.grpc.Status withDescription(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<io.grpc.Status: io.grpc.StatusRuntimeException asRuntimeException()>();

        $r10 = (java.lang.Throwable) $r9;

        throw $r10;

     label09:
        $r2 = $r0.<io.grpc.internal.MessageFramer: io.grpc.internal.StatsTraceContext statsTraceCtx>;

        $l0 = (long) $i2;

        virtualinvoke $r2.<io.grpc.internal.StatsTraceContext: void outboundUncompressedSize(long)>($l0);

        $r2 = $r0.<io.grpc.internal.MessageFramer: io.grpc.internal.StatsTraceContext statsTraceCtx>;

        $l3 = $r0.<io.grpc.internal.MessageFramer: long currentMessageWireSize>;

        virtualinvoke $r2.<io.grpc.internal.StatsTraceContext: void outboundWireSize(long)>($l3);

        $r2 = $r0.<io.grpc.internal.MessageFramer: io.grpc.internal.StatsTraceContext statsTraceCtx>;

        $i1 = $r0.<io.grpc.internal.MessageFramer: int currentMessageSeqNo>;

        $l3 = $r0.<io.grpc.internal.MessageFramer: long currentMessageWireSize>;

        virtualinvoke $r2.<io.grpc.internal.StatsTraceContext: void outboundMessageSent(int,long,long)>($i1, $l3, $l0);

        return;

     label10:
        $r10 := @caughtexception;

        $r8 = <io.grpc.Status: io.grpc.Status INTERNAL>;

        $r8 = virtualinvoke $r8.<io.grpc.Status: io.grpc.Status withDescription(java.lang.String)>("Failed to frame message");

        $r8 = virtualinvoke $r8.<io.grpc.Status: io.grpc.Status withCause(java.lang.Throwable)>($r10);

        $r9 = virtualinvoke $r8.<io.grpc.Status: io.grpc.StatusRuntimeException asRuntimeException()>();

        $r10 = (java.lang.Throwable) $r9;

        throw $r10;

     label11:
        $r11 := @caughtexception;

        $r8 = <io.grpc.Status: io.grpc.Status INTERNAL>;

        $r8 = virtualinvoke $r8.<io.grpc.Status: io.grpc.Status withDescription(java.lang.String)>("Failed to frame message");

        $r8 = virtualinvoke $r8.<io.grpc.Status: io.grpc.Status withCause(java.lang.Throwable)>($r11);

        $r9 = virtualinvoke $r8.<io.grpc.Status: io.grpc.StatusRuntimeException asRuntimeException()>();

        $r10 = (java.lang.Throwable) $r9;

        throw $r10;

        catch java.io.IOException from label02 to label03 with label11;
        catch java.io.IOException from label04 to label05 with label11;
        catch java.io.IOException from label06 to label07 with label11;
        catch java.lang.RuntimeException from label02 to label03 with label10;
        catch java.lang.RuntimeException from label04 to label05 with label10;
        catch java.lang.RuntimeException from label06 to label07 with label10;
    }

io.grpc.internal.MessageFramer$1
io.grpc.internal.MessageFramer$BufferChainOutputStream
<io.grpc.internal.MessageFramer$BufferChainOutputStream: java.util.List bufferList>
<io.grpc.internal.MessageFramer$BufferChainOutputStream: io.grpc.internal.WritableBuffer current>
<io.grpc.internal.MessageFramer$BufferChainOutputStream: io.grpc.internal.MessageFramer this$0>
    private void <init>(io.grpc.internal.MessageFramer)
    {
        io.grpc.internal.MessageFramer$BufferChainOutputStream $r0;
        io.grpc.internal.MessageFramer $r1;
        java.util.ArrayList r2;
        java.util.List r3;

        $r0 := @this: io.grpc.internal.MessageFramer$BufferChainOutputStream;

        $r1 := @parameter0: io.grpc.internal.MessageFramer;

        $r0.<io.grpc.internal.MessageFramer$BufferChainOutputStream: io.grpc.internal.MessageFramer this$0> = $r1;

        specialinvoke $r0.<java.io.OutputStream: void <init>()>();

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        r3 = (java.util.List) r2;

        $r0.<io.grpc.internal.MessageFramer$BufferChainOutputStream: java.util.List bufferList> = r3;

        return;
    }

    void <init>(io.grpc.internal.MessageFramer, io.grpc.internal.MessageFramer$1)
    {
        io.grpc.internal.MessageFramer$BufferChainOutputStream $r0;
        io.grpc.internal.MessageFramer $r1;
        io.grpc.internal.MessageFramer$1 $r2;

        $r0 := @this: io.grpc.internal.MessageFramer$BufferChainOutputStream;

        $r1 := @parameter0: io.grpc.internal.MessageFramer;

        $r2 := @parameter1: io.grpc.internal.MessageFramer$1;

        specialinvoke $r0.<io.grpc.internal.MessageFramer$BufferChainOutputStream: void <init>(io.grpc.internal.MessageFramer)>($r1);

        return;
    }

    static int access$200(io.grpc.internal.MessageFramer$BufferChainOutputStream)
    {
        int $i0;
        io.grpc.internal.MessageFramer$BufferChainOutputStream $r0;

        $r0 := @parameter0: io.grpc.internal.MessageFramer$BufferChainOutputStream;

        $i0 = specialinvoke $r0.<io.grpc.internal.MessageFramer$BufferChainOutputStream: int readableBytes()>();

        return $i0;
    }

    static java.util.List access$300(io.grpc.internal.MessageFramer$BufferChainOutputStream)
    {
        io.grpc.internal.MessageFramer$BufferChainOutputStream $r0;
        java.util.List r1;

        $r0 := @parameter0: io.grpc.internal.MessageFramer$BufferChainOutputStream;

        r1 = $r0.<io.grpc.internal.MessageFramer$BufferChainOutputStream: java.util.List bufferList>;

        return r1;
    }

    private int readableBytes()
    {
        io.grpc.internal.MessageFramer$BufferChainOutputStream $r0;
        java.util.List $r1;
        java.util.Iterator $r2;
        int $i0, $i1;
        boolean $z0;
        java.lang.Object $r3;
        io.grpc.internal.WritableBuffer $r4;

        $r0 := @this: io.grpc.internal.MessageFramer$BufferChainOutputStream;

        $r1 = $r0.<io.grpc.internal.MessageFramer$BufferChainOutputStream: java.util.List bufferList>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        $i0 = 0;

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (io.grpc.internal.WritableBuffer) $r3;

        $i1 = interfaceinvoke $r4.<io.grpc.internal.WritableBuffer: int readableBytes()>();

        $i0 = $i0 + $i1;

        goto label1;

     label2:
        return $i0;
    }

    public void write(int) throws java.io.IOException
    {
        io.grpc.internal.MessageFramer$BufferChainOutputStream $r0;
        byte[] $r1;
        int $i0, $i1;
        io.grpc.internal.WritableBuffer $r2;
        byte $b2;

        $r0 := @this: io.grpc.internal.MessageFramer$BufferChainOutputStream;

        $i1 := @parameter0: int;

        $r2 = $r0.<io.grpc.internal.MessageFramer$BufferChainOutputStream: io.grpc.internal.WritableBuffer current>;

        if $r2 == null goto label1;

        $i0 = interfaceinvoke $r2.<io.grpc.internal.WritableBuffer: int writableBytes()>();

        if $i0 <= 0 goto label1;

        $r2 = $r0.<io.grpc.internal.MessageFramer$BufferChainOutputStream: io.grpc.internal.WritableBuffer current>;

        $b2 = (byte) $i1;

        interfaceinvoke $r2.<io.grpc.internal.WritableBuffer: void write(byte)>($b2);

        return;

     label1:
        $r1 = newarray (byte)[1];

        $b2 = (byte) $i1;

        $r1[0] = $b2;

        virtualinvoke $r0.<io.grpc.internal.MessageFramer$BufferChainOutputStream: void write(byte[],int,int)>($r1, 0, 1);

        return;
    }

    public void write(byte[], int, int)
    {
        io.grpc.internal.MessageFramer$BufferChainOutputStream $r0;
        byte[] $r1;
        int $i0, $i1, $i2;
        io.grpc.internal.WritableBuffer $r2;
        io.grpc.internal.MessageFramer $r3;
        io.grpc.internal.WritableBufferAllocator $r4;
        java.util.List $r5;

        $r0 := @this: io.grpc.internal.MessageFramer$BufferChainOutputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = $r0.<io.grpc.internal.MessageFramer$BufferChainOutputStream: io.grpc.internal.WritableBuffer current>;

        if $r2 != null goto label1;

        $r3 = $r0.<io.grpc.internal.MessageFramer$BufferChainOutputStream: io.grpc.internal.MessageFramer this$0>;

        $r4 = staticinvoke <io.grpc.internal.MessageFramer: io.grpc.internal.WritableBufferAllocator access$500(io.grpc.internal.MessageFramer)>($r3);

        $r2 = interfaceinvoke $r4.<io.grpc.internal.WritableBufferAllocator: io.grpc.internal.WritableBuffer allocate(int)>($i1);

        $r0.<io.grpc.internal.MessageFramer$BufferChainOutputStream: io.grpc.internal.WritableBuffer current> = $r2;

        $r5 = $r0.<io.grpc.internal.MessageFramer$BufferChainOutputStream: java.util.List bufferList>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r2);

     label1:
        if $i1 <= 0 goto label4;

        $r2 = $r0.<io.grpc.internal.MessageFramer$BufferChainOutputStream: io.grpc.internal.WritableBuffer current>;

        $i2 = interfaceinvoke $r2.<io.grpc.internal.WritableBuffer: int writableBytes()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

        if $i2 != 0 goto label2;

        $r2 = $r0.<io.grpc.internal.MessageFramer$BufferChainOutputStream: io.grpc.internal.WritableBuffer current>;

        $i2 = interfaceinvoke $r2.<io.grpc.internal.WritableBuffer: int readableBytes()>();

        $i2 = $i2 + $i2;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i2);

        $r3 = $r0.<io.grpc.internal.MessageFramer$BufferChainOutputStream: io.grpc.internal.MessageFramer this$0>;

        $r4 = staticinvoke <io.grpc.internal.MessageFramer: io.grpc.internal.WritableBufferAllocator access$500(io.grpc.internal.MessageFramer)>($r3);

        $r2 = interfaceinvoke $r4.<io.grpc.internal.WritableBufferAllocator: io.grpc.internal.WritableBuffer allocate(int)>($i2);

        $r0.<io.grpc.internal.MessageFramer$BufferChainOutputStream: io.grpc.internal.WritableBuffer current> = $r2;

        $r5 = $r0.<io.grpc.internal.MessageFramer$BufferChainOutputStream: java.util.List bufferList>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r2);

        goto label3;

     label2:
        $r2 = $r0.<io.grpc.internal.MessageFramer$BufferChainOutputStream: io.grpc.internal.WritableBuffer current>;

        interfaceinvoke $r2.<io.grpc.internal.WritableBuffer: void write(byte[],int,int)>($r1, $i0, $i2);

        $i0 = $i0 + $i2;

        $i1 = $i1 - $i2;

     label3:
        goto label1;

     label4:
        return;
    }

io.grpc.internal.MessageFramer$OutputStreamAdapter
<io.grpc.internal.MessageFramer$OutputStreamAdapter: io.grpc.internal.MessageFramer this$0>
    private void <init>(io.grpc.internal.MessageFramer)
    {
        io.grpc.internal.MessageFramer$OutputStreamAdapter $r0;
        io.grpc.internal.MessageFramer $r1;

        $r0 := @this: io.grpc.internal.MessageFramer$OutputStreamAdapter;

        $r1 := @parameter0: io.grpc.internal.MessageFramer;

        $r0.<io.grpc.internal.MessageFramer$OutputStreamAdapter: io.grpc.internal.MessageFramer this$0> = $r1;

        specialinvoke $r0.<java.io.OutputStream: void <init>()>();

        return;
    }

    void <init>(io.grpc.internal.MessageFramer, io.grpc.internal.MessageFramer$1)
    {
        io.grpc.internal.MessageFramer$OutputStreamAdapter $r0;
        io.grpc.internal.MessageFramer $r1;
        io.grpc.internal.MessageFramer$1 $r2;

        $r0 := @this: io.grpc.internal.MessageFramer$OutputStreamAdapter;

        $r1 := @parameter0: io.grpc.internal.MessageFramer;

        $r2 := @parameter1: io.grpc.internal.MessageFramer$1;

        specialinvoke $r0.<io.grpc.internal.MessageFramer$OutputStreamAdapter: void <init>(io.grpc.internal.MessageFramer)>($r1);

        return;
    }

    public void write(int)
    {
        io.grpc.internal.MessageFramer$OutputStreamAdapter $r0;
        byte[] $r1;
        int $i0;
        byte $b1;

        $r0 := @this: io.grpc.internal.MessageFramer$OutputStreamAdapter;

        $i0 := @parameter0: int;

        $r1 = newarray (byte)[1];

        $b1 = (byte) $i0;

        $r1[0] = $b1;

        virtualinvoke $r0.<io.grpc.internal.MessageFramer$OutputStreamAdapter: void write(byte[],int,int)>($r1, 0, 1);

        return;
    }

    public void write(byte[], int, int)
    {
        io.grpc.internal.MessageFramer$OutputStreamAdapter $r0;
        byte[] $r1;
        int $i0, $i1;
        io.grpc.internal.MessageFramer $r2;

        $r0 := @this: io.grpc.internal.MessageFramer$OutputStreamAdapter;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = $r0.<io.grpc.internal.MessageFramer$OutputStreamAdapter: io.grpc.internal.MessageFramer this$0>;

        staticinvoke <io.grpc.internal.MessageFramer: void access$400(io.grpc.internal.MessageFramer,byte[],int,int)>($r2, $r1, $i0, $i1);

        return;
    }

io.grpc.internal.MessageFramer$Sink
<io.grpc.internal.MessageFramer$Sink: void deliverFrame(io.grpc.internal.WritableBuffer,boolean,boolean,int)>
