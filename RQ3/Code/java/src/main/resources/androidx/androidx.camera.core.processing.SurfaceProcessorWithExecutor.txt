androidx.camera.core.processing.SurfaceProcessorWithExecutor
<androidx.camera.core.processing.SurfaceProcessorWithExecutor: androidx.camera.core.SurfaceProcessor mSurfaceProcessor>
<androidx.camera.core.processing.SurfaceProcessorWithExecutor: java.util.concurrent.Executor mExecutor>
    public void <init>(androidx.camera.core.SurfaceProcessor, java.util.concurrent.Executor)
    {
        androidx.camera.core.processing.SurfaceProcessorWithExecutor r0;
        androidx.camera.core.SurfaceProcessor r1;
        java.util.concurrent.Executor r2;
        boolean $z0, $z1;

        r0 := @this: androidx.camera.core.processing.SurfaceProcessorWithExecutor;

        r1 := @parameter0: androidx.camera.core.SurfaceProcessor;

        r2 := @parameter1: java.util.concurrent.Executor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = r1 instanceof androidx.camera.core.processing.SurfaceProcessorInternal;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.core.util.Preconditions: void checkState(boolean,java.lang.String)>($z1, "SurfaceProcessorInternal should always be thread safe. Do not wrap.");

        r0.<androidx.camera.core.processing.SurfaceProcessorWithExecutor: androidx.camera.core.SurfaceProcessor mSurfaceProcessor> = r1;

        r0.<androidx.camera.core.processing.SurfaceProcessorWithExecutor: java.util.concurrent.Executor mExecutor> = r2;

        return;
    }

    public androidx.camera.core.SurfaceProcessor getProcessor()
    {
        androidx.camera.core.processing.SurfaceProcessorWithExecutor r0;
        androidx.camera.core.SurfaceProcessor $r1;

        r0 := @this: androidx.camera.core.processing.SurfaceProcessorWithExecutor;

        $r1 = r0.<androidx.camera.core.processing.SurfaceProcessorWithExecutor: androidx.camera.core.SurfaceProcessor mSurfaceProcessor>;

        return $r1;
    }

    public java.util.concurrent.Executor getExecutor()
    {
        androidx.camera.core.processing.SurfaceProcessorWithExecutor r0;
        java.util.concurrent.Executor $r1;

        r0 := @this: androidx.camera.core.processing.SurfaceProcessorWithExecutor;

        $r1 = r0.<androidx.camera.core.processing.SurfaceProcessorWithExecutor: java.util.concurrent.Executor mExecutor>;

        return $r1;
    }

    public void onInputSurface(androidx.camera.core.SurfaceRequest)
    {
        androidx.camera.core.processing.SurfaceProcessorWithExecutor r0;
        androidx.camera.core.SurfaceRequest r1;
        java.util.concurrent.Executor $r2;
        java.lang.Runnable $r3;

        r0 := @this: androidx.camera.core.processing.SurfaceProcessorWithExecutor;

        r1 := @parameter0: androidx.camera.core.SurfaceRequest;

        $r2 = r0.<androidx.camera.core.processing.SurfaceProcessorWithExecutor: java.util.concurrent.Executor mExecutor>;

        $r3 = dynamicinvoke "run" <java.lang.Runnable (androidx.camera.core.processing.SurfaceProcessorWithExecutor,androidx.camera.core.SurfaceRequest)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.core.processing.SurfaceProcessorWithExecutor: void lambda$onInputSurface$0(androidx.camera.core.SurfaceRequest)>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public void onOutputSurface(androidx.camera.core.SurfaceOutput)
    {
        androidx.camera.core.processing.SurfaceProcessorWithExecutor r0;
        androidx.camera.core.SurfaceOutput r1;
        java.util.concurrent.Executor $r2;
        java.lang.Runnable $r3;

        r0 := @this: androidx.camera.core.processing.SurfaceProcessorWithExecutor;

        r1 := @parameter0: androidx.camera.core.SurfaceOutput;

        $r2 = r0.<androidx.camera.core.processing.SurfaceProcessorWithExecutor: java.util.concurrent.Executor mExecutor>;

        $r3 = dynamicinvoke "run" <java.lang.Runnable (androidx.camera.core.processing.SurfaceProcessorWithExecutor,androidx.camera.core.SurfaceOutput)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.core.processing.SurfaceProcessorWithExecutor: void lambda$onOutputSurface$1(androidx.camera.core.SurfaceOutput)>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public void release()
    {
        androidx.camera.core.processing.SurfaceProcessorWithExecutor r0;

        r0 := @this: androidx.camera.core.processing.SurfaceProcessorWithExecutor;

        return;
    }

    private void lambda$onOutputSurface$1(androidx.camera.core.SurfaceOutput)
    {
        androidx.camera.core.processing.SurfaceProcessorWithExecutor r0;
        androidx.camera.core.SurfaceOutput r1;
        androidx.camera.core.SurfaceProcessor $r2;

        r0 := @this: androidx.camera.core.processing.SurfaceProcessorWithExecutor;

        r1 := @parameter0: androidx.camera.core.SurfaceOutput;

        $r2 = r0.<androidx.camera.core.processing.SurfaceProcessorWithExecutor: androidx.camera.core.SurfaceProcessor mSurfaceProcessor>;

        interfaceinvoke $r2.<androidx.camera.core.SurfaceProcessor: void onOutputSurface(androidx.camera.core.SurfaceOutput)>(r1);

        return;
    }

    private void lambda$onInputSurface$0(androidx.camera.core.SurfaceRequest)
    {
        androidx.camera.core.processing.SurfaceProcessorWithExecutor r0;
        androidx.camera.core.SurfaceRequest r1;
        androidx.camera.core.SurfaceProcessor $r2;

        r0 := @this: androidx.camera.core.processing.SurfaceProcessorWithExecutor;

        r1 := @parameter0: androidx.camera.core.SurfaceRequest;

        $r2 = r0.<androidx.camera.core.processing.SurfaceProcessorWithExecutor: androidx.camera.core.SurfaceProcessor mSurfaceProcessor>;

        interfaceinvoke $r2.<androidx.camera.core.SurfaceProcessor: void onInputSurface(androidx.camera.core.SurfaceRequest)>(r1);

        return;
    }

