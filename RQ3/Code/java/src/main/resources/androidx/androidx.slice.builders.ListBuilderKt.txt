androidx.slice.builders.ListBuilderKt
    public static final androidx.slice.Slice list(android.content.Context, android.net.Uri, long, kotlin.jvm.functions.Function1)
    {
        android.content.Context r0;
        android.net.Uri r1;
        long l0;
        kotlin.jvm.functions.Function1 r2;
        androidx.slice.builders.ListBuilderDsl r3, $r4;
        boolean z1, z2;
        androidx.slice.Slice $r6;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        l0 := @parameter2: long;

        r2 := @parameter3: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "uri");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "addRows");

        $r4 = new androidx.slice.builders.ListBuilderDsl;

        specialinvoke $r4.<androidx.slice.builders.ListBuilderDsl: void <init>(android.content.Context,android.net.Uri,long)>(r0, r1, l0);

        r3 = $r4;

        z1 = 0;

        z2 = 0;

        interfaceinvoke r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r3);

        $r6 = virtualinvoke r3.<androidx.slice.builders.ListBuilderDsl: androidx.slice.Slice build()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "ListBuilderDsl(context, \u2026ply { addRows() }.build()");

        return $r6;
    }

    public static final androidx.slice.builders.ListBuilder header(androidx.slice.builders.ListBuilderDsl, kotlin.jvm.functions.Function1)
    {
        androidx.slice.builders.ListBuilderDsl $r0, r3;
        kotlin.jvm.functions.Function1 r1;
        androidx.slice.builders.HeaderBuilderDsl r2, $r5;
        boolean z1, z2;
        kotlin.Unit r4;
        androidx.slice.builders.ListBuilder$HeaderBuilder $r7;
        androidx.slice.builders.ListBuilder $r8;

        $r0 := @parameter0: androidx.slice.builders.ListBuilderDsl;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$header");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "buildHeader");

        $r5 = new androidx.slice.builders.HeaderBuilderDsl;

        specialinvoke $r5.<androidx.slice.builders.HeaderBuilderDsl: void <init>()>();

        r2 = $r5;

        z1 = 0;

        z2 = 0;

        r3 = $r0;

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r2);

        r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r7 = (androidx.slice.builders.ListBuilder$HeaderBuilder) r2;

        $r8 = virtualinvoke r3.<androidx.slice.builders.ListBuilderDsl: androidx.slice.builders.ListBuilder setHeader(androidx.slice.builders.ListBuilder$HeaderBuilder)>($r7);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "setHeader(HeaderBuilderD\u2026.apply { buildHeader() })");

        return $r8;
    }

    public static final androidx.slice.builders.ListBuilder gridRow(androidx.slice.builders.ListBuilderDsl, kotlin.jvm.functions.Function1)
    {
        androidx.slice.builders.ListBuilderDsl $r0, r3;
        kotlin.jvm.functions.Function1 r1;
        androidx.slice.builders.GridRowBuilderDsl r2, $r5;
        boolean z1, z2;
        kotlin.Unit r4;
        androidx.slice.builders.GridRowBuilder $r7;
        androidx.slice.builders.ListBuilder $r8;

        $r0 := @parameter0: androidx.slice.builders.ListBuilderDsl;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$gridRow");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "buildGrid");

        $r5 = new androidx.slice.builders.GridRowBuilderDsl;

        specialinvoke $r5.<androidx.slice.builders.GridRowBuilderDsl: void <init>()>();

        r2 = $r5;

        z1 = 0;

        z2 = 0;

        r3 = $r0;

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r2);

        r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r7 = (androidx.slice.builders.GridRowBuilder) r2;

        $r8 = virtualinvoke r3.<androidx.slice.builders.ListBuilderDsl: androidx.slice.builders.ListBuilder addGridRow(androidx.slice.builders.GridRowBuilder)>($r7);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "addGridRow(GridRowBuilde\u2026().apply { buildGrid() })");

        return $r8;
    }

    public static final androidx.slice.builders.ListBuilder row(androidx.slice.builders.ListBuilderDsl, kotlin.jvm.functions.Function1)
    {
        androidx.slice.builders.ListBuilderDsl $r0, r3;
        kotlin.jvm.functions.Function1 r1;
        androidx.slice.builders.RowBuilderDsl r2, $r5;
        boolean z1, z2;
        kotlin.Unit r4;
        androidx.slice.builders.ListBuilder$RowBuilder $r7;
        androidx.slice.builders.ListBuilder $r8;

        $r0 := @parameter0: androidx.slice.builders.ListBuilderDsl;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$row");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "buildRow");

        $r5 = new androidx.slice.builders.RowBuilderDsl;

        specialinvoke $r5.<androidx.slice.builders.RowBuilderDsl: void <init>()>();

        r2 = $r5;

        z1 = 0;

        z2 = 0;

        r3 = $r0;

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r2);

        r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r7 = (androidx.slice.builders.ListBuilder$RowBuilder) r2;

        $r8 = virtualinvoke r3.<androidx.slice.builders.ListBuilderDsl: androidx.slice.builders.ListBuilder addRow(androidx.slice.builders.ListBuilder$RowBuilder)>($r7);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "addRow(RowBuilderDsl().apply { buildRow() })");

        return $r8;
    }

    public static final androidx.slice.builders.ListBuilder seeMoreRow(androidx.slice.builders.ListBuilderDsl, kotlin.jvm.functions.Function1)
    {
        androidx.slice.builders.ListBuilderDsl $r0, r3;
        kotlin.jvm.functions.Function1 r1;
        androidx.slice.builders.RowBuilderDsl r2, $r5;
        boolean z1, z2;
        kotlin.Unit r4;
        androidx.slice.builders.ListBuilder$RowBuilder $r7;
        androidx.slice.builders.ListBuilder $r8;

        $r0 := @parameter0: androidx.slice.builders.ListBuilderDsl;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$seeMoreRow");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "buildRow");

        $r5 = new androidx.slice.builders.RowBuilderDsl;

        specialinvoke $r5.<androidx.slice.builders.RowBuilderDsl: void <init>()>();

        r2 = $r5;

        z1 = 0;

        z2 = 0;

        r3 = $r0;

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r2);

        r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r7 = (androidx.slice.builders.ListBuilder$RowBuilder) r2;

        $r8 = virtualinvoke r3.<androidx.slice.builders.ListBuilderDsl: androidx.slice.builders.ListBuilder setSeeMoreRow(androidx.slice.builders.ListBuilder$RowBuilder)>($r7);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "setSeeMoreRow(RowBuilder\u2026l().apply { buildRow() })");

        return $r8;
    }

    public static final androidx.slice.builders.ListBuilder inputRange(androidx.slice.builders.ListBuilderDsl, kotlin.jvm.functions.Function1)
    {
        androidx.slice.builders.ListBuilderDsl $r0, r3;
        kotlin.jvm.functions.Function1 r1;
        androidx.slice.builders.InputRangeBuilderDsl r2, $r5;
        boolean z1, z2;
        kotlin.Unit r4;
        androidx.slice.builders.ListBuilder$InputRangeBuilder $r7;
        androidx.slice.builders.ListBuilder $r8;

        $r0 := @parameter0: androidx.slice.builders.ListBuilderDsl;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$inputRange");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "buildInputRange");

        $r5 = new androidx.slice.builders.InputRangeBuilderDsl;

        specialinvoke $r5.<androidx.slice.builders.InputRangeBuilderDsl: void <init>()>();

        r2 = $r5;

        z1 = 0;

        z2 = 0;

        r3 = $r0;

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r2);

        r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r7 = (androidx.slice.builders.ListBuilder$InputRangeBuilder) r2;

        $r8 = virtualinvoke r3.<androidx.slice.builders.ListBuilderDsl: androidx.slice.builders.ListBuilder addInputRange(androidx.slice.builders.ListBuilder$InputRangeBuilder)>($r7);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "addInputRange(InputRange\u2026ly { buildInputRange() })");

        return $r8;
    }

    public static final androidx.slice.builders.ListBuilder range(androidx.slice.builders.ListBuilderDsl, kotlin.jvm.functions.Function1)
    {
        androidx.slice.builders.ListBuilderDsl $r0, r3;
        kotlin.jvm.functions.Function1 r1;
        androidx.slice.builders.RangeBuilderDsl r2, $r5;
        boolean z1, z2;
        kotlin.Unit r4;
        androidx.slice.builders.ListBuilder$RangeBuilder $r7;
        androidx.slice.builders.ListBuilder $r8;

        $r0 := @parameter0: androidx.slice.builders.ListBuilderDsl;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$range");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "buildRange");

        $r5 = new androidx.slice.builders.RangeBuilderDsl;

        specialinvoke $r5.<androidx.slice.builders.RangeBuilderDsl: void <init>()>();

        r2 = $r5;

        z1 = 0;

        z2 = 0;

        r3 = $r0;

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r2);

        r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r7 = (androidx.slice.builders.ListBuilder$RangeBuilder) r2;

        $r8 = virtualinvoke r3.<androidx.slice.builders.ListBuilderDsl: androidx.slice.builders.ListBuilder addRange(androidx.slice.builders.ListBuilder$RangeBuilder)>($r7);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "addRange(RangeBuilderDsl().apply { buildRange() })");

        return $r8;
    }

    public static final androidx.slice.builders.SliceAction tapSliceAction(android.app.PendingIntent, androidx.core.graphics.drawable.IconCompat, int, java.lang.CharSequence)
    {
        android.app.PendingIntent r0;
        androidx.core.graphics.drawable.IconCompat r1;
        int i0;
        java.lang.CharSequence r2;
        androidx.slice.builders.SliceAction $r3;

        r0 := @parameter0: android.app.PendingIntent;

        r1 := @parameter1: androidx.core.graphics.drawable.IconCompat;

        i0 := @parameter2: int;

        r2 := @parameter3: java.lang.CharSequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "pendingIntent");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "icon");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "title");

        $r3 = new androidx.slice.builders.SliceAction;

        specialinvoke $r3.<androidx.slice.builders.SliceAction: void <init>(android.app.PendingIntent,androidx.core.graphics.drawable.IconCompat,int,java.lang.CharSequence)>(r0, r1, i0, r2);

        return $r3;
    }

    public static androidx.slice.builders.SliceAction tapSliceAction$default(android.app.PendingIntent, androidx.core.graphics.drawable.IconCompat, int, java.lang.CharSequence, int, java.lang.Object)
    {
        android.app.PendingIntent r0;
        androidx.core.graphics.drawable.IconCompat r1;
        java.lang.CharSequence r2;
        int i0, $i1, i2;
        java.lang.Object r3;
        androidx.slice.builders.SliceAction $r4;

        r0 := @parameter0: android.app.PendingIntent;

        r1 := @parameter1: androidx.core.graphics.drawable.IconCompat;

        i2 := @parameter2: int;

        r2 := @parameter3: java.lang.CharSequence;

        i0 := @parameter4: int;

        r3 := @parameter5: java.lang.Object;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        i2 = 0;

     label1:
        $r4 = staticinvoke <androidx.slice.builders.ListBuilderKt: androidx.slice.builders.SliceAction tapSliceAction(android.app.PendingIntent,androidx.core.graphics.drawable.IconCompat,int,java.lang.CharSequence)>(r0, r1, i2, r2);

        return $r4;
    }

    public static final androidx.slice.builders.SliceAction toggleSliceAction(android.app.PendingIntent, androidx.core.graphics.drawable.IconCompat, java.lang.CharSequence, boolean)
    {
        android.app.PendingIntent r0;
        androidx.core.graphics.drawable.IconCompat r1, r3, r4;
        java.lang.CharSequence r2;
        boolean z0, z1, z2;
        androidx.slice.builders.SliceAction $r5;

        r0 := @parameter0: android.app.PendingIntent;

        r1 := @parameter1: androidx.core.graphics.drawable.IconCompat;

        r2 := @parameter2: java.lang.CharSequence;

        z0 := @parameter3: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "pendingIntent");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "title");

        if r1 == null goto label1;

        r3 = r1;

        z1 = 0;

        z2 = 0;

        r4 = r3;

        $r5 = new androidx.slice.builders.SliceAction;

        specialinvoke $r5.<androidx.slice.builders.SliceAction: void <init>(android.app.PendingIntent,androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,boolean)>(r0, r4, r2, z0);

        goto label2;

     label1:
        $r5 = new androidx.slice.builders.SliceAction;

        specialinvoke $r5.<androidx.slice.builders.SliceAction: void <init>(android.app.PendingIntent,java.lang.CharSequence,boolean)>(r0, r2, z0);

     label2:
        return $r5;
    }

    public static androidx.slice.builders.SliceAction toggleSliceAction$default(android.app.PendingIntent, androidx.core.graphics.drawable.IconCompat, java.lang.CharSequence, boolean, int, java.lang.Object)
    {
        android.app.PendingIntent r0;
        java.lang.CharSequence r1;
        boolean z0;
        int i0, $i1;
        java.lang.Object r2;
        androidx.slice.builders.SliceAction $r3;
        androidx.core.graphics.drawable.IconCompat r4;

        r0 := @parameter0: android.app.PendingIntent;

        r4 := @parameter1: androidx.core.graphics.drawable.IconCompat;

        r1 := @parameter2: java.lang.CharSequence;

        z0 := @parameter3: boolean;

        i0 := @parameter4: int;

        r2 := @parameter5: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r4 = (androidx.core.graphics.drawable.IconCompat) null;

     label1:
        $r3 = staticinvoke <androidx.slice.builders.ListBuilderKt: androidx.slice.builders.SliceAction toggleSliceAction(android.app.PendingIntent,androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,boolean)>(r0, r4, r1, z0);

        return $r3;
    }

