org.junit.runners.model.FrameworkField
<org.junit.runners.model.FrameworkField: java.lang.reflect.Field field>
    void <init>(java.lang.reflect.Field)
    {
        org.junit.runners.model.FrameworkField $r0;
        java.lang.reflect.Field $r1;
        java.lang.NullPointerException $r2;

        $r0 := @this: org.junit.runners.model.FrameworkField;

        $r1 := @parameter0: java.lang.reflect.Field;

        specialinvoke $r0.<org.junit.runners.model.FrameworkMember: void <init>()>();

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("FrameworkField cannot be created without an underlying field.");

        throw $r2;

     label1:
        $r0.<org.junit.runners.model.FrameworkField: java.lang.reflect.Field field> = $r1;

        return;
    }

    public java.lang.Object get(java.lang.Object) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException
    {
        org.junit.runners.model.FrameworkField $r0;
        java.lang.Object $r1;
        java.lang.reflect.Field $r2;

        $r0 := @this: org.junit.runners.model.FrameworkField;

        $r1 := @parameter0: java.lang.Object;

        $r2 = $r0.<org.junit.runners.model.FrameworkField: java.lang.reflect.Field field>;

        $r1 = virtualinvoke $r2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r1);

        return $r1;
    }

    public java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)
    {
        org.junit.runners.model.FrameworkField $r0;
        java.lang.Class $r1;
        java.lang.'annotation'.Annotation $r2;
        java.lang.reflect.Field $r3;

        $r0 := @this: org.junit.runners.model.FrameworkField;

        $r1 := @parameter0: java.lang.Class;

        $r3 = $r0.<org.junit.runners.model.FrameworkField: java.lang.reflect.Field field>;

        $r2 = virtualinvoke $r3.<java.lang.reflect.Field: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>($r1);

        return $r2;
    }

    public java.lang.'annotation'.Annotation[] getAnnotations()
    {
        org.junit.runners.model.FrameworkField $r0;
        java.lang.'annotation'.Annotation[] $r1;
        java.lang.reflect.Field $r2;

        $r0 := @this: org.junit.runners.model.FrameworkField;

        $r2 = $r0.<org.junit.runners.model.FrameworkField: java.lang.reflect.Field field>;

        $r1 = virtualinvoke $r2.<java.lang.reflect.Field: java.lang.'annotation'.Annotation[] getAnnotations()>();

        return $r1;
    }

    public java.lang.Class getDeclaringClass()
    {
        org.junit.runners.model.FrameworkField $r0;
        java.lang.Class $r1;
        java.lang.reflect.Field $r2;

        $r0 := @this: org.junit.runners.model.FrameworkField;

        $r2 = $r0.<org.junit.runners.model.FrameworkField: java.lang.reflect.Field field>;

        $r1 = virtualinvoke $r2.<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>();

        return $r1;
    }

    public java.lang.reflect.Field getField()
    {
        org.junit.runners.model.FrameworkField $r0;
        java.lang.reflect.Field r1;

        $r0 := @this: org.junit.runners.model.FrameworkField;

        r1 = $r0.<org.junit.runners.model.FrameworkField: java.lang.reflect.Field field>;

        return r1;
    }

    protected int getModifiers()
    {
        org.junit.runners.model.FrameworkField $r0;
        int $i0;
        java.lang.reflect.Field $r1;

        $r0 := @this: org.junit.runners.model.FrameworkField;

        $r1 = $r0.<org.junit.runners.model.FrameworkField: java.lang.reflect.Field field>;

        $i0 = virtualinvoke $r1.<java.lang.reflect.Field: int getModifiers()>();

        return $i0;
    }

    public java.lang.String getName()
    {
        org.junit.runners.model.FrameworkField $r0;
        java.lang.reflect.Field $r1;
        java.lang.String $r2;

        $r0 := @this: org.junit.runners.model.FrameworkField;

        $r1 = virtualinvoke $r0.<org.junit.runners.model.FrameworkField: java.lang.reflect.Field getField()>();

        $r2 = virtualinvoke $r1.<java.lang.reflect.Field: java.lang.String getName()>();

        return $r2;
    }

    public java.lang.Class getType()
    {
        org.junit.runners.model.FrameworkField $r0;
        java.lang.Class $r1;
        java.lang.reflect.Field $r2;

        $r0 := @this: org.junit.runners.model.FrameworkField;

        $r2 = $r0.<org.junit.runners.model.FrameworkField: java.lang.reflect.Field field>;

        $r1 = virtualinvoke $r2.<java.lang.reflect.Field: java.lang.Class getType()>();

        return $r1;
    }

    public boolean isShadowedBy(org.junit.runners.model.FrameworkField)
    {
        org.junit.runners.model.FrameworkField $r0, $r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        $r0 := @this: org.junit.runners.model.FrameworkField;

        $r1 := @parameter0: org.junit.runners.model.FrameworkField;

        $r2 = virtualinvoke $r1.<org.junit.runners.model.FrameworkField: java.lang.String getName()>();

        $r3 = virtualinvoke $r0.<org.junit.runners.model.FrameworkField: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z0;
    }

    public volatile boolean isShadowedBy(org.junit.runners.model.FrameworkMember)
    {
        org.junit.runners.model.FrameworkField $r0, $r2;
        boolean $z0;
        org.junit.runners.model.FrameworkMember $r1;

        $r0 := @this: org.junit.runners.model.FrameworkField;

        $r1 := @parameter0: org.junit.runners.model.FrameworkMember;

        $r2 = (org.junit.runners.model.FrameworkField) $r1;

        $z0 = virtualinvoke $r0.<org.junit.runners.model.FrameworkField: boolean isShadowedBy(org.junit.runners.model.FrameworkField)>($r2);

        return $z0;
    }

    public java.lang.String toString()
    {
        org.junit.runners.model.FrameworkField $r0;
        java.lang.String $r1;
        java.lang.reflect.Field $r2;

        $r0 := @this: org.junit.runners.model.FrameworkField;

        $r2 = $r0.<org.junit.runners.model.FrameworkField: java.lang.reflect.Field field>;

        $r1 = virtualinvoke $r2.<java.lang.reflect.Field: java.lang.String toString()>();

        return $r1;
    }

