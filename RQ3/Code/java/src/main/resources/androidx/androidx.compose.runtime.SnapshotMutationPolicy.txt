androidx.compose.runtime.SnapshotMutationPolicy
<androidx.compose.runtime.SnapshotMutationPolicy: boolean equivalent(java.lang.Object,java.lang.Object)>
    public java.lang.Object merge(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        androidx.compose.runtime.SnapshotMutationPolicy r0;
        java.lang.Object r1, r2, r3;

        r0 := @this: androidx.compose.runtime.SnapshotMutationPolicy;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        return null;
    }

    public static java.lang.Object access$merge$jd(androidx.compose.runtime.SnapshotMutationPolicy, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        androidx.compose.runtime.SnapshotMutationPolicy $r0;
        java.lang.Object r1, r2, r3, $r4;

        $r0 := @parameter0: androidx.compose.runtime.SnapshotMutationPolicy;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        $r4 = specialinvoke $r0.<androidx.compose.runtime.SnapshotMutationPolicy: java.lang.Object merge(java.lang.Object,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        return $r4;
    }

androidx.compose.runtime.SnapshotMutationPolicy$DefaultImpls
    public static java.lang.Object merge(androidx.compose.runtime.SnapshotMutationPolicy, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        androidx.compose.runtime.SnapshotMutationPolicy $r0;
        java.lang.Object r1, r2, r3, $r4;

        $r0 := @parameter0: androidx.compose.runtime.SnapshotMutationPolicy;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        $r4 = staticinvoke <androidx.compose.runtime.SnapshotMutationPolicy: java.lang.Object access$merge$jd(androidx.compose.runtime.SnapshotMutationPolicy,java.lang.Object,java.lang.Object,java.lang.Object)>($r0, r1, r2, r3);

        return $r4;
    }

