androidx.car.app.Screen
<androidx.car.app.Screen: androidx.car.app.CarContext mCarContext>
<androidx.car.app.Screen: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry>
<androidx.car.app.Screen: androidx.car.app.OnScreenResultListener mOnScreenResultListener>
<androidx.car.app.Screen: java.lang.Object mResult>
<androidx.car.app.Screen: java.lang.String mMarker>
<androidx.car.app.Screen: androidx.car.app.model.TemplateWrapper mTemplateWrapper>
<androidx.car.app.Screen: boolean mUseLastTemplateId>
    protected void <init>(androidx.car.app.CarContext)
    {
        androidx.car.app.Screen r0;
        androidx.car.app.CarContext r1, $r5;
        androidx.lifecycle.LifecycleRegistry $r2;
        androidx.car.app.OnScreenResultListener $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.car.app.Screen;

        r1 := @parameter0: androidx.car.app.CarContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new androidx.lifecycle.LifecycleRegistry;

        specialinvoke $r2.<androidx.lifecycle.LifecycleRegistry: void <init>(androidx.lifecycle.LifecycleOwner)>(r0);

        r0.<androidx.car.app.Screen: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry> = $r2;

        $r3 = dynamicinvoke "onScreenResult" <androidx.car.app.OnScreenResultListener ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.car.app.Screen: void lambda$new$0(java.lang.Object)>, methodtype: void __METHODTYPE__(java.lang.Object));

        r0.<androidx.car.app.Screen: androidx.car.app.OnScreenResultListener mOnScreenResultListener> = $r3;

        $r4 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r5 = (androidx.car.app.CarContext) $r4;

        r0.<androidx.car.app.Screen: androidx.car.app.CarContext mCarContext> = $r5;

        return;
    }

    public final void invalidate()
    {
        androidx.car.app.Screen r0;
        androidx.lifecycle.Lifecycle $r1;
        androidx.lifecycle.Lifecycle$State $r2, $r3;
        boolean $z0;
        androidx.car.app.CarContext $r4;
        java.lang.Object $r5;
        androidx.car.app.AppManager $r6;

        r0 := @this: androidx.car.app.Screen;

        $r1 = virtualinvoke r0.<androidx.car.app.Screen: androidx.lifecycle.Lifecycle getLifecycle()>();

        $r2 = virtualinvoke $r1.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r3 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State STARTED>;

        $z0 = virtualinvoke $r2.<androidx.lifecycle.Lifecycle$State: boolean isAtLeast(androidx.lifecycle.Lifecycle$State)>($r3);

        if $z0 == 0 goto label1;

        $r4 = r0.<androidx.car.app.Screen: androidx.car.app.CarContext mCarContext>;

        $r5 = virtualinvoke $r4.<androidx.car.app.CarContext: java.lang.Object getCarService(java.lang.Class)>(class "Landroidx/car/app/AppManager;");

        $r6 = (androidx.car.app.AppManager) $r5;

        virtualinvoke $r6.<androidx.car.app.AppManager: void invalidate()>();

     label1:
        return;
    }

    public final void finish()
    {
        androidx.car.app.Screen r0;
        androidx.car.app.CarContext $r1;
        java.lang.Object $r2;
        androidx.car.app.ScreenManager $r3;

        r0 := @this: androidx.car.app.Screen;

        $r1 = r0.<androidx.car.app.Screen: androidx.car.app.CarContext mCarContext>;

        $r2 = virtualinvoke $r1.<androidx.car.app.CarContext: java.lang.Object getCarService(java.lang.Class)>(class "Landroidx/car/app/ScreenManager;");

        $r3 = (androidx.car.app.ScreenManager) $r2;

        virtualinvoke $r3.<androidx.car.app.ScreenManager: void remove(androidx.car.app.Screen)>(r0);

        return;
    }

    public void setResult(java.lang.Object)
    {
        androidx.car.app.Screen r0;
        java.lang.Object r1;

        r0 := @this: androidx.car.app.Screen;

        r1 := @parameter0: java.lang.Object;

        r0.<androidx.car.app.Screen: java.lang.Object mResult> = r1;

        return;
    }

    public java.lang.Object getResultInternal()
    {
        androidx.car.app.Screen r0;
        java.lang.Object $r1;

        r0 := @this: androidx.car.app.Screen;

        $r1 = r0.<androidx.car.app.Screen: java.lang.Object mResult>;

        return $r1;
    }

    public void setMarker(java.lang.String)
    {
        androidx.car.app.Screen r0;
        java.lang.String r1;

        r0 := @this: androidx.car.app.Screen;

        r1 := @parameter0: java.lang.String;

        r0.<androidx.car.app.Screen: java.lang.String mMarker> = r1;

        return;
    }

    public java.lang.String getMarker()
    {
        androidx.car.app.Screen r0;
        java.lang.String $r1;

        r0 := @this: androidx.car.app.Screen;

        $r1 = r0.<androidx.car.app.Screen: java.lang.String mMarker>;

        return $r1;
    }

    public final androidx.lifecycle.Lifecycle getLifecycle()
    {
        androidx.car.app.Screen r0;
        androidx.lifecycle.LifecycleRegistry $r1;

        r0 := @this: androidx.car.app.Screen;

        $r1 = r0.<androidx.car.app.Screen: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry>;

        return $r1;
    }

    public final androidx.car.app.CarContext getCarContext()
    {
        androidx.car.app.Screen r0;
        androidx.car.app.CarContext $r1;

        r0 := @this: androidx.car.app.Screen;

        $r1 = r0.<androidx.car.app.Screen: androidx.car.app.CarContext mCarContext>;

        return $r1;
    }

    public final androidx.car.app.ScreenManager getScreenManager()
    {
        androidx.car.app.Screen r0;
        androidx.car.app.CarContext $r1;
        java.lang.Object $r2;
        androidx.car.app.ScreenManager $r3;

        r0 := @this: androidx.car.app.Screen;

        $r1 = r0.<androidx.car.app.Screen: androidx.car.app.CarContext mCarContext>;

        $r2 = virtualinvoke $r1.<androidx.car.app.CarContext: java.lang.Object getCarService(java.lang.Class)>(class "Landroidx/car/app/ScreenManager;");

        $r3 = (androidx.car.app.ScreenManager) $r2;

        return $r3;
    }

<androidx.car.app.Screen: androidx.car.app.model.Template onGetTemplate()>
    void setOnScreenResultListener(androidx.car.app.OnScreenResultListener)
    {
        androidx.car.app.Screen r0;
        androidx.car.app.OnScreenResultListener r1;

        r0 := @this: androidx.car.app.Screen;

        r1 := @parameter0: androidx.car.app.OnScreenResultListener;

        r0.<androidx.car.app.Screen: androidx.car.app.OnScreenResultListener mOnScreenResultListener> = r1;

        return;
    }

    public void dispatchLifecycleEvent(androidx.lifecycle.Lifecycle$Event)
    {
        androidx.car.app.Screen r0;
        androidx.lifecycle.Lifecycle$Event r1;
        java.lang.Runnable $r2;

        r0 := @this: androidx.car.app.Screen;

        r1 := @parameter0: androidx.lifecycle.Lifecycle$Event;

        $r2 = dynamicinvoke "run" <java.lang.Runnable (androidx.car.app.Screen,androidx.lifecycle.Lifecycle$Event)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.car.app.Screen: void lambda$dispatchLifecycleEvent$1(androidx.lifecycle.Lifecycle$Event)>, methodtype: void __METHODTYPE__());

        staticinvoke <androidx.car.app.utils.ThreadUtils: void runOnMain(java.lang.Runnable)>($r2);

        return;
    }

    androidx.car.app.model.TemplateWrapper getTemplateWrapper()
    {
        androidx.car.app.Screen r0;
        androidx.car.app.model.Template r1;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;
        java.lang.String $r7, $r12;
        androidx.car.app.model.TemplateWrapper $r8, $r10, r13;
        java.lang.Object $r9;
        androidx.car.app.model.TemplateInfo $r11;

        r0 := @this: androidx.car.app.Screen;

        r1 = virtualinvoke r0.<androidx.car.app.Screen: androidx.car.app.model.Template onGetTemplate()>();

        $z0 = r0.<androidx.car.app.Screen: boolean mUseLastTemplateId>;

        if $z0 == 0 goto label1;

        $r8 = r0.<androidx.car.app.Screen: androidx.car.app.model.TemplateWrapper mTemplateWrapper>;

        $r9 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r8);

        $r10 = (androidx.car.app.model.TemplateWrapper) $r9;

        $r11 = staticinvoke <androidx.car.app.Screen: androidx.car.app.model.TemplateInfo getLastTemplateInfo(androidx.car.app.model.TemplateWrapper)>($r10);

        $r12 = virtualinvoke $r11.<androidx.car.app.model.TemplateInfo: java.lang.String getTemplateId()>();

        r13 = staticinvoke <androidx.car.app.model.TemplateWrapper: androidx.car.app.model.TemplateWrapper wrap(androidx.car.app.model.Template,java.lang.String)>(r1, $r12);

        goto label2;

     label1:
        r13 = staticinvoke <androidx.car.app.model.TemplateWrapper: androidx.car.app.model.TemplateWrapper wrap(androidx.car.app.model.Template)>(r1);

     label2:
        r0.<androidx.car.app.Screen: boolean mUseLastTemplateId> = 0;

        r0.<androidx.car.app.Screen: androidx.car.app.model.TemplateWrapper mTemplateWrapper> = r13;

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("CarApp", 3);

        if $z1 == 0 goto label3;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Returning ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from screen ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CarApp", $r7);

     label3:
        return r13;
    }

    androidx.car.app.model.TemplateInfo getLastTemplateInfo()
    {
        androidx.car.app.Screen r0;
        androidx.car.app.model.TemplateWrapper $r1, $r3, $r6, $r9;
        androidx.car.app.model.TemplateInfo $r2;
        androidx.car.app.model.Template $r4, $r8;
        java.lang.Class $r5;
        java.lang.String $r7;

        r0 := @this: androidx.car.app.Screen;

        $r1 = r0.<androidx.car.app.Screen: androidx.car.app.model.TemplateWrapper mTemplateWrapper>;

        if $r1 != null goto label1;

        $r8 = virtualinvoke r0.<androidx.car.app.Screen: androidx.car.app.model.Template onGetTemplate()>();

        $r9 = staticinvoke <androidx.car.app.model.TemplateWrapper: androidx.car.app.model.TemplateWrapper wrap(androidx.car.app.model.Template)>($r8);

        r0.<androidx.car.app.Screen: androidx.car.app.model.TemplateWrapper mTemplateWrapper> = $r9;

     label1:
        $r2 = new androidx.car.app.model.TemplateInfo;

        $r3 = r0.<androidx.car.app.Screen: androidx.car.app.model.TemplateWrapper mTemplateWrapper>;

        $r4 = virtualinvoke $r3.<androidx.car.app.model.TemplateWrapper: androidx.car.app.model.Template getTemplate()>();

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = r0.<androidx.car.app.Screen: androidx.car.app.model.TemplateWrapper mTemplateWrapper>;

        $r7 = virtualinvoke $r6.<androidx.car.app.model.TemplateWrapper: java.lang.String getId()>();

        specialinvoke $r2.<androidx.car.app.model.TemplateInfo: void <init>(java.lang.Class,java.lang.String)>($r5, $r7);

        return $r2;
    }

    private static androidx.car.app.model.TemplateInfo getLastTemplateInfo(androidx.car.app.model.TemplateWrapper)
    {
        androidx.car.app.model.TemplateWrapper r0;
        androidx.car.app.model.TemplateInfo $r1;
        androidx.car.app.model.Template $r2;
        java.lang.Class $r3;
        java.lang.String $r4;

        r0 := @parameter0: androidx.car.app.model.TemplateWrapper;

        $r1 = new androidx.car.app.model.TemplateInfo;

        $r2 = virtualinvoke r0.<androidx.car.app.model.TemplateWrapper: androidx.car.app.model.Template getTemplate()>();

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r0.<androidx.car.app.model.TemplateWrapper: java.lang.String getId()>();

        specialinvoke $r1.<androidx.car.app.model.TemplateInfo: void <init>(java.lang.Class,java.lang.String)>($r3, $r4);

        return $r1;
    }

    void setUseLastTemplateId(boolean)
    {
        androidx.car.app.Screen r0;
        boolean z0;

        r0 := @this: androidx.car.app.Screen;

        z0 := @parameter0: boolean;

        r0.<androidx.car.app.Screen: boolean mUseLastTemplateId> = z0;

        return;
    }

    private void lambda$dispatchLifecycleEvent$1(androidx.lifecycle.Lifecycle$Event)
    {
        androidx.car.app.Screen r0;
        androidx.lifecycle.Lifecycle$Event r1, $r5;
        androidx.lifecycle.Lifecycle$State r2, $r4;
        androidx.lifecycle.LifecycleRegistry $r3, $r6;
        boolean $z0;
        java.lang.Object $r7;
        androidx.car.app.OnScreenResultListener $r8;

        r0 := @this: androidx.car.app.Screen;

        r1 := @parameter0: androidx.lifecycle.Lifecycle$Event;

        $r3 = r0.<androidx.car.app.Screen: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry>;

        r2 = virtualinvoke $r3.<androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r4 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State INITIALIZED>;

        $z0 = virtualinvoke r2.<androidx.lifecycle.Lifecycle$State: boolean isAtLeast(androidx.lifecycle.Lifecycle$State)>($r4);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r5 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY>;

        if r1 != $r5 goto label2;

        $r8 = r0.<androidx.car.app.Screen: androidx.car.app.OnScreenResultListener mOnScreenResultListener>;

        $r7 = r0.<androidx.car.app.Screen: java.lang.Object mResult>;

        interfaceinvoke $r8.<androidx.car.app.OnScreenResultListener: void onScreenResult(java.lang.Object)>($r7);

     label2:
        $r6 = r0.<androidx.car.app.Screen: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry>;

        virtualinvoke $r6.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>(r1);

        return;
    }

    private static void lambda$new$0(java.lang.Object)
    {
        java.lang.Object r0;

        r0 := @parameter0: java.lang.Object;

        return;
    }

