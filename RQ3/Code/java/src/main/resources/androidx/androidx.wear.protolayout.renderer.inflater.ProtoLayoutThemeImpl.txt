androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl
<androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl: java.util.Map mVariantToFontSet>
<androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl: android.content.res.Resources$Theme mTheme>
<androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl: int mFallbackTextAppearanceAttrId>
    public static androidx.wear.protolayout.renderer.ProtoLayoutTheme defaultTheme(android.content.Context)
    {
        android.content.Context r0;
        androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl $r1;
        android.content.res.Resources $r2;
        int $i0;

        r0 := @parameter0: android.content.Context;

        $r1 = new androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl;

        $r2 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = <androidx.wear.protolayout.renderer.R$style: int ProtoLayoutBaseTheme>;

        specialinvoke $r1.<androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl: void <init>(android.content.res.Resources,int)>($r2, $i0);

        return $r1;
    }

    public static androidx.wear.protolayout.renderer.ProtoLayoutTheme defaultTheme(android.content.res.Resources)
    {
        android.content.res.Resources r0;
        androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl $r1;
        int $i0;

        r0 := @parameter0: android.content.res.Resources;

        $r1 = new androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl;

        $i0 = <androidx.wear.protolayout.renderer.R$style: int ProtoLayoutBaseTheme>;

        specialinvoke $r1.<androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl: void <init>(android.content.res.Resources,int)>(r0, $i0);

        return $r1;
    }

    public void <init>(android.content.Context, int)
    {
        androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl r0;
        android.content.Context r1;
        int i0, $i1;
        android.content.res.Resources $r2;

        r0 := @this: androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i1 = <androidx.wear.protolayout.renderer.R$attr: int protoLayoutFallbackTextAppearance>;

        specialinvoke r0.<androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl: void <init>(android.content.res.Resources,int,int)>($r2, i0, $i1);

        return;
    }

    public void <init>(android.content.res.Resources, int)
    {
        androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl r0;
        android.content.res.Resources r1;
        int i0, $i1;

        r0 := @this: androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl;

        r1 := @parameter0: android.content.res.Resources;

        i0 := @parameter1: int;

        $i1 = <androidx.wear.protolayout.renderer.R$attr: int protoLayoutFallbackTextAppearance>;

        specialinvoke r0.<androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl: void <init>(android.content.res.Resources,int,int)>(r1, i0, $i1);

        return;
    }

    public void <init>(android.content.res.Resources, int, int)
    {
        androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl r0;
        android.content.res.Resources r1;
        int i0, i1, $i2, $i3, $i4, $i5;
        android.content.res.TypedArray r2;
        androidx.collection.ArrayMap $r3;
        android.content.res.Resources$Theme $r4, $r5, $r7, $r11, $r16;
        int[] $r6;
        java.util.Map $r8, $r13;
        java.lang.Integer $r9, $r14;
        androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl$FontSetImpl $r10, $r15;

        r0 := @this: androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl;

        r1 := @parameter0: android.content.res.Resources;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new androidx.collection.ArrayMap;

        specialinvoke $r3.<androidx.collection.ArrayMap: void <init>()>();

        r0.<androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl: java.util.Map mVariantToFontSet> = $r3;

        $r4 = virtualinvoke r1.<android.content.res.Resources: android.content.res.Resources$Theme newTheme()>();

        r0.<androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl: android.content.res.Resources$Theme mTheme> = $r4;

        $r5 = r0.<androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl: android.content.res.Resources$Theme mTheme>;

        virtualinvoke $r5.<android.content.res.Resources$Theme: void applyStyle(int,boolean)>(i0, 1);

        r0.<androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl: int mFallbackTextAppearanceAttrId> = i1;

        $r7 = r0.<androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl: android.content.res.Resources$Theme mTheme>;

        $r6 = <androidx.wear.protolayout.renderer.R$styleable: int[] ProtoLayoutTheme>;

        r2 = virtualinvoke $r7.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(int[])>($r6);

        $r8 = r0.<androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl: java.util.Map mVariantToFontSet>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r10 = new androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl$FontSetImpl;

        $r11 = r0.<androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl: android.content.res.Resources$Theme mTheme>;

        $i2 = <androidx.wear.protolayout.renderer.R$styleable: int ProtoLayoutTheme_protoLayoutTitleFont>;

        $i3 = virtualinvoke r2.<android.content.res.TypedArray: int getResourceId(int,int)>($i2, -1);

        specialinvoke $r10.<androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl$FontSetImpl: void <init>(android.content.res.Resources$Theme,int)>($r11, $i3);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r10);

        $r13 = r0.<androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl: java.util.Map mVariantToFontSet>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r15 = new androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl$FontSetImpl;

        $r16 = r0.<androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl: android.content.res.Resources$Theme mTheme>;

        $i4 = <androidx.wear.protolayout.renderer.R$styleable: int ProtoLayoutTheme_protoLayoutBodyFont>;

        $i5 = virtualinvoke r2.<android.content.res.TypedArray: int getResourceId(int,int)>($i4, -1);

        specialinvoke $r15.<androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl$FontSetImpl: void <init>(android.content.res.Resources$Theme,int)>($r16, $i5);

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r15);

        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    public androidx.wear.protolayout.renderer.ProtoLayoutTheme$FontSet getFontSet(int)
    {
        androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl r0;
        int i0;
        androidx.wear.protolayout.renderer.ProtoLayoutTheme$FontSet r1, $r5, $r10;
        java.util.Map $r2, $r7;
        java.lang.Integer $r3, $r8;
        java.lang.Object $r4, $r6, $r9;

        r0 := @this: androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl;

        i0 := @parameter0: int;

        $r2 = r0.<androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl: java.util.Map mVariantToFontSet>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (androidx.wear.protolayout.renderer.ProtoLayoutTheme$FontSet) $r4;

        $r6 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r5);

        r1 = (androidx.wear.protolayout.renderer.ProtoLayoutTheme$FontSet) $r6;

        $r7 = r0.<androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl: java.util.Map mVariantToFontSet>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r9 = interfaceinvoke $r7.<java.util.Map: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>($r8, r1);

        $r10 = (androidx.wear.protolayout.renderer.ProtoLayoutTheme$FontSet) $r9;

        return $r10;
    }

    public android.content.res.Resources$Theme getTheme()
    {
        androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl r0;
        android.content.res.Resources$Theme $r1;

        r0 := @this: androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl;

        $r1 = r0.<androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl: android.content.res.Resources$Theme mTheme>;

        return $r1;
    }

    public int getFallbackTextAppearanceResId()
    {
        androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl r0;
        int $i0;

        r0 := @this: androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl;

        $i0 = r0.<androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl: int mFallbackTextAppearanceAttrId>;

        return $i0;
    }

androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl$FontSetImpl
<androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl$FontSetImpl: android.graphics.Typeface mNormalFont>
<androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl$FontSetImpl: android.graphics.Typeface mMediumFont>
<androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl$FontSetImpl: android.graphics.Typeface mBoldFont>
    void <init>(android.content.res.Resources$Theme, int)
    {
        androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl$FontSetImpl r0;
        android.content.res.Resources$Theme r1;
        int i0, $i1, $i2, $i3;
        android.content.res.TypedArray r2;
        int[] $r3;
        android.graphics.Typeface $r4, $r5, $r6;

        r0 := @this: androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl$FontSetImpl;

        r1 := @parameter0: android.content.res.Resources$Theme;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = <androidx.wear.protolayout.renderer.R$styleable: int[] ProtoLayoutFontSet>;

        r2 = virtualinvoke r1.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(int,int[])>(i0, $r3);

        $i1 = <androidx.wear.protolayout.renderer.R$styleable: int ProtoLayoutFontSet_protoLayoutNormalFont>;

        $r4 = staticinvoke <androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl$FontSetImpl: android.graphics.Typeface loadTypeface(android.content.res.TypedArray,int)>(r2, $i1);

        r0.<androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl$FontSetImpl: android.graphics.Typeface mNormalFont> = $r4;

        $i2 = <androidx.wear.protolayout.renderer.R$styleable: int ProtoLayoutFontSet_protoLayoutMediumFont>;

        $r5 = staticinvoke <androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl$FontSetImpl: android.graphics.Typeface loadTypeface(android.content.res.TypedArray,int)>(r2, $i2);

        r0.<androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl$FontSetImpl: android.graphics.Typeface mMediumFont> = $r5;

        $i3 = <androidx.wear.protolayout.renderer.R$styleable: int ProtoLayoutFontSet_protoLayoutBoldFont>;

        $r6 = staticinvoke <androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl$FontSetImpl: android.graphics.Typeface loadTypeface(android.content.res.TypedArray,int)>(r2, $i3);

        r0.<androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl$FontSetImpl: android.graphics.Typeface mBoldFont> = $r6;

        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private static android.graphics.Typeface loadTypeface(android.content.res.TypedArray, int)
    {
        android.content.res.TypedArray r0;
        int i0, i1, $i2;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5, $r6, $r7, $r9;
        java.lang.Object $r8, $r13;
        android.graphics.Typeface $r10, $r11, $r12, $r14;

        r0 := @parameter0: android.content.res.TypedArray;

        i0 := @parameter1: int;

        i1 = virtualinvoke r0.<android.content.res.TypedArray: int getType(int)>(i0);

        $i2 = virtualinvoke r0.<android.content.res.TypedArray: int getResourceId(int,int)>(i0, -1);

        if $i2 == -1 goto label1;

        $r11 = virtualinvoke r0.<android.content.res.TypedArray: android.graphics.Typeface getFont(int)>(i0);

        if $r11 == null goto label1;

        $r12 = virtualinvoke r0.<android.content.res.TypedArray: android.graphics.Typeface getFont(int)>(i0);

        $r13 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r12);

        $r14 = (android.graphics.Typeface) $r13;

        return $r14;

     label1:
        if i1 != 3 goto label2;

        $r6 = virtualinvoke r0.<android.content.res.TypedArray: java.lang.String getString(int)>(i0);

        if $r6 == null goto label2;

        $r7 = virtualinvoke r0.<android.content.res.TypedArray: java.lang.String getString(int)>(i0);

        $r8 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r7);

        $r9 = (java.lang.String) $r8;

        $r10 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(java.lang.String,int)>($r9, 0);

        return $r10;

     label2:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown resource value type ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;
    }

    public android.graphics.Typeface getNormalFont()
    {
        androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl$FontSetImpl r0;
        android.graphics.Typeface $r1;

        r0 := @this: androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl$FontSetImpl;

        $r1 = r0.<androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl$FontSetImpl: android.graphics.Typeface mNormalFont>;

        return $r1;
    }

    public android.graphics.Typeface getMediumFont()
    {
        androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl$FontSetImpl r0;
        android.graphics.Typeface $r1;

        r0 := @this: androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl$FontSetImpl;

        $r1 = r0.<androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl$FontSetImpl: android.graphics.Typeface mMediumFont>;

        return $r1;
    }

    public android.graphics.Typeface getBoldFont()
    {
        androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl$FontSetImpl r0;
        android.graphics.Typeface $r1;

        r0 := @this: androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl$FontSetImpl;

        $r1 = r0.<androidx.wear.protolayout.renderer.inflater.ProtoLayoutThemeImpl$FontSetImpl: android.graphics.Typeface mBoldFont>;

        return $r1;
    }

