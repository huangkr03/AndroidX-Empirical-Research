androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep
<androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep: androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep$Companion Companion>
<androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep: java.util.List annotationProcessors>
<androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep: java.util.Map processorOptions>
<androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep: java.lang.String name>
<androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep: java.lang.String JAVA_SRC_OUT_FOLDER_NAME>
<androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep: java.lang.String KOTLIN_SRC_OUT_FOLDER_NAME>
<androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep: java.lang.String RESOURCES_OUT_FOLDER_NAME>
<androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep: java.lang.String CLASS_OUT_FOLDER_NAME>
    public void <init>(java.util.List, java.util.Map)
    {
        androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep r0;
        java.util.List r1;
        java.util.Map r2;

        r0 := @this: androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.Map;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationProcessors");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "processorOptions");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep: java.util.List annotationProcessors> = r1;

        r0.<androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep: java.util.Map processorOptions> = r2;

        r0.<androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep: java.lang.String name> = "kapt";

        return;
    }

    public java.lang.String getName()
    {
        androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep r0;
        java.lang.String $r1;

        r0 := @this: androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep;

        $r1 = r0.<androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep: java.lang.String name>;

        return $r1;
    }

    private final org.jetbrains.kotlin.base.kapt3.KaptOptions$Builder createKaptArgs(java.io.File, java.util.List)
    {
        androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep r0;
        java.io.File r1, $r10, $r11, $r12, r32, r33;
        java.util.List r2, r5, $r18, $r19, $r21;
        org.jetbrains.kotlin.base.kapt3.KaptOptions$Builder r3, r4, $r9;
        java.lang.Object r6, r39;
        javax.'annotation'.processing.Processor r7;
        java.util.Collection r8, $r22, r35;
        java.lang.String $r13, $r26, $r27, $r30, r40;
        java.util.Map $r15, $r16, $r25, $r31;
        org.jetbrains.kotlin.base.kapt3.AptMode $r17;
        java.util.ArrayList $r20;
        int $i0;
        boolean $z3, $z6, z10;
        java.util.Set $r23;
        org.jetbrains.kotlin.base.kapt3.KaptFlag $r24;
        java.lang.Class $r29;
        java.lang.Iterable $r34, $r37;
        java.util.Iterator $r36, $r38;

        r0 := @this: androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.util.List;

        $r9 = new org.jetbrains.kotlin.base.kapt3.KaptOptions$Builder;

        specialinvoke $r9.<org.jetbrains.kotlin.base.kapt3.KaptOptions$Builder: void <init>()>();

        r3 = $r9;

        r4 = r3;

        $r10 = staticinvoke <kotlin.io.FilesKt: java.io.File resolve(java.io.File,java.lang.String)>(r1, "kapt-stubs");

        virtualinvoke r4.<org.jetbrains.kotlin.base.kapt3.KaptOptions$Builder: void setStubsOutputDir(java.io.File)>($r10);

        $r11 = staticinvoke <kotlin.io.FilesKt: java.io.File resolve(java.io.File,java.lang.String)>(r1, "kapt-java-src-out");

        virtualinvoke r4.<org.jetbrains.kotlin.base.kapt3.KaptOptions$Builder: void setSourcesOutputDir(java.io.File)>($r11);

        $r12 = staticinvoke <kotlin.io.FilesKt: java.io.File resolve(java.io.File,java.lang.String)>(r1, "kapt-classes-out");

        virtualinvoke r4.<org.jetbrains.kotlin.base.kapt3.KaptOptions$Builder: void setClassesOutputDir(java.io.File)>($r12);

        virtualinvoke r4.<org.jetbrains.kotlin.base.kapt3.KaptOptions$Builder: void setProjectBaseDir(java.io.File)>(r1);

        $r31 = virtualinvoke r4.<org.jetbrains.kotlin.base.kapt3.KaptOptions$Builder: java.util.Map getProcessingOptions()>();

        r32 = staticinvoke <kotlin.io.FilesKt: java.io.File resolve(java.io.File,java.lang.String)>(r1, "kapt-kotlin-src-out");

        r33 = r32;

        virtualinvoke r33.<java.io.File: boolean mkdirs()>();

        $r13 = virtualinvoke r32.<java.io.File: java.lang.String getCanonicalPath()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r13, "workingDir.resolve(KOTLI\u2026           .canonicalPath");

        interfaceinvoke $r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("kapt.kotlin.generated", $r13);

        $r15 = virtualinvoke r4.<org.jetbrains.kotlin.base.kapt3.KaptOptions$Builder: java.util.Map getProcessingOptions()>();

        $r16 = r0.<androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep: java.util.Map processorOptions>;

        interfaceinvoke $r15.<java.util.Map: void putAll(java.util.Map)>($r16);

        $r17 = <org.jetbrains.kotlin.base.kapt3.AptMode: org.jetbrains.kotlin.base.kapt3.AptMode STUBS_AND_APT>;

        virtualinvoke r4.<org.jetbrains.kotlin.base.kapt3.KaptOptions$Builder: void setMode(org.jetbrains.kotlin.base.kapt3.AptMode)>($r17);

        $r18 = virtualinvoke r4.<org.jetbrains.kotlin.base.kapt3.KaptOptions$Builder: java.util.List getProcessors()>();

        $r19 = r0.<androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep: java.util.List annotationProcessors>;

        $r34 = (java.lang.Iterable) $r19;

        r5 = $r18;

        $r20 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r34, 10);

        specialinvoke $r20.<java.util.ArrayList: void <init>(int)>($i0);

        r35 = (java.util.Collection) $r20;

        z10 = 0;

        $r36 = interfaceinvoke $r34.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke $r36.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        r6 = interfaceinvoke $r36.<java.util.Iterator: java.lang.Object next()>();

        r7 = (javax.'annotation'.processing.Processor) r6;

        r8 = r35;

        $r29 = virtualinvoke r7.<java.lang.Object: java.lang.Class getClass()>();

        $r30 = virtualinvoke $r29.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>($r30);

        goto label1;

     label2:
        $r21 = (java.util.List) r35;

        $r22 = (java.util.Collection) $r21;

        interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>($r22);

        $r23 = virtualinvoke r4.<org.jetbrains.kotlin.base.kapt3.KaptOptions$Builder: java.util.Set getFlags()>();

        $r24 = <org.jetbrains.kotlin.base.kapt3.KaptFlag: org.jetbrains.kotlin.base.kapt3.KaptFlag MAP_DIAGNOSTIC_LOCATIONS>;

        interfaceinvoke $r23.<java.util.Set: boolean add(java.lang.Object)>($r24);

        $r37 = (java.lang.Iterable) r2;

        $r38 = interfaceinvoke $r37.<java.lang.Iterable: java.util.Iterator iterator()>();

     label3:
        $z6 = interfaceinvoke $r38.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label4;

        r39 = interfaceinvoke $r38.<java.util.Iterator: java.lang.Object next()>();

        r40 = (java.lang.String) r39;

        $r25 = virtualinvoke r4.<org.jetbrains.kotlin.base.kapt3.KaptOptions$Builder: java.util.Map getJavacOptions()>();

        $r26 = staticinvoke <kotlin.text.StringsKt: java.lang.String substringBefore$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>(r40, "=", null, 2, null);

        $r27 = staticinvoke <kotlin.text.StringsKt: java.lang.String substringAfter(java.lang.String,java.lang.String,java.lang.String)>(r40, "=", "");

        interfaceinvoke $r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r26, $r27);

        goto label3;

     label4:
        return r3;
    }

    public androidx.room.compiler.processing.util.compiler.steps.CompilationStepResult execute(java.io.File, androidx.room.compiler.processing.util.compiler.steps.CompilationStepArguments)
    {
        androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep r0;
        java.io.File r1, $r10, $r17, $r19, $r30, $r33;
        androidx.room.compiler.processing.util.compiler.steps.CompilationStepArguments r2, $r41;
        androidx.room.compiler.processing.util.compiler.DiagnosticsMessageCollector r3, $r8;
        androidx.room.compiler.processing.util.compiler.KotlinCliRunner$KotlinCliResult r4;
        java.util.List r5, r6, $r7, $r12, $r13, $r16, $r21, $r23, $r25, $r26, $r29, $r31, $r37, $r40, r45;
        boolean $z0, $z1;
        androidx.room.compiler.processing.util.compiler.KotlinCliRunner $r9;
        androidx.room.compiler.processing.util.compiler.TestKapt3Registrar $r11;
        org.jetbrains.kotlin.base.kapt3.KaptOptions$Builder $r14;
        org.jetbrains.kotlin.cli.common.messages.MessageCollector $r15;
        androidx.room.compiler.processing.util.compiler.SourceSet $r18, $r20;
        java.util.Collection $r22, $r28, $r32, $r39;
        java.lang.Iterable $r24, $r27, $r38;
        androidx.room.compiler.processing.util.compiler.steps.CompilationStepResult $r34, $r43;
        org.jetbrains.kotlin.cli.common.ExitCode $r35, $r36;
        androidx.room.compiler.processing.util.compiler.steps.CompilationStepResult$Companion $r42;
        androidx.room.compiler.processing.util.compiler.SourceSet[] r44;

        r0 := @this: androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: androidx.room.compiler.processing.util.compiler.steps.CompilationStepArguments;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "workingDir");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "arguments");

        $r7 = r0.<androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep: java.util.List annotationProcessors>;

        $z0 = interfaceinvoke $r7.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r42 = <androidx.room.compiler.processing.util.compiler.steps.CompilationStepResult: androidx.room.compiler.processing.util.compiler.steps.CompilationStepResult$Companion Companion>;

        $r43 = virtualinvoke $r42.<androidx.room.compiler.processing.util.compiler.steps.CompilationStepResult$Companion: androidx.room.compiler.processing.util.compiler.steps.CompilationStepResult skip(androidx.room.compiler.processing.util.compiler.steps.CompilationStepArguments)>(r2);

        return $r43;

     label1:
        $r8 = new androidx.room.compiler.processing.util.compiler.DiagnosticsMessageCollector;

        specialinvoke $r8.<androidx.room.compiler.processing.util.compiler.DiagnosticsMessageCollector: void <init>()>();

        r3 = $r8;

        $r9 = <androidx.room.compiler.processing.util.compiler.KotlinCliRunner: androidx.room.compiler.processing.util.compiler.KotlinCliRunner INSTANCE>;

        $r10 = staticinvoke <kotlin.io.FilesKt: java.io.File resolve(java.io.File,java.lang.String)>(r1, "class-out");

        $r11 = new androidx.room.compiler.processing.util.compiler.TestKapt3Registrar;

        $r12 = r0.<androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep: java.util.List annotationProcessors>;

        $r13 = virtualinvoke r2.<androidx.room.compiler.processing.util.compiler.steps.CompilationStepArguments: java.util.List getJavacArguments()>();

        $r14 = specialinvoke r0.<androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep: org.jetbrains.kotlin.base.kapt3.KaptOptions$Builder createKaptArgs(java.io.File,java.util.List)>(r1, $r13);

        $r15 = (org.jetbrains.kotlin.cli.common.messages.MessageCollector) r3;

        specialinvoke $r11.<androidx.room.compiler.processing.util.compiler.TestKapt3Registrar: void <init>(java.util.List,org.jetbrains.kotlin.base.kapt3.KaptOptions$Builder,org.jetbrains.kotlin.cli.common.messages.MessageCollector)>($r12, $r14, $r15);

        $r16 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r11);

        r4 = virtualinvoke $r9.<androidx.room.compiler.processing.util.compiler.KotlinCliRunner: androidx.room.compiler.processing.util.compiler.KotlinCliRunner$KotlinCliResult runKotlinCli(androidx.room.compiler.processing.util.compiler.steps.CompilationStepArguments,java.io.File,java.util.List)>(r2, $r10, $r16);

        r44 = newarray (androidx.room.compiler.processing.util.compiler.SourceSet)[2];

        $r17 = staticinvoke <kotlin.io.FilesKt: java.io.File resolve(java.io.File,java.lang.String)>(r1, "kapt-java-src-out");

        $r18 = staticinvoke <androidx.room.compiler.processing.util.compiler.SourceSetKt: androidx.room.compiler.processing.util.compiler.SourceSet toSourceSet(java.io.File)>($r17);

        r44[0] = $r18;

        $r19 = staticinvoke <kotlin.io.FilesKt: java.io.File resolve(java.io.File,java.lang.String)>(r1, "kapt-kotlin-src-out");

        $r20 = staticinvoke <androidx.room.compiler.processing.util.compiler.SourceSetKt: androidx.room.compiler.processing.util.compiler.SourceSet toSourceSet(java.io.File)>($r19);

        r44[1] = $r20;

        r5 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOfNotNull(java.lang.Object[])>(r44);

        $r21 = virtualinvoke r4.<androidx.room.compiler.processing.util.compiler.KotlinCliRunner$KotlinCliResult: java.util.List getDiagnostics()>();

        $r22 = (java.util.Collection) $r21;

        $r23 = virtualinvoke r3.<androidx.room.compiler.processing.util.compiler.DiagnosticsMessageCollector: java.util.List getDiagnostics()>();

        $r24 = (java.lang.Iterable) $r23;

        $r25 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Iterable)>($r22, $r24);

        $r26 = virtualinvoke r2.<androidx.room.compiler.processing.util.compiler.steps.CompilationStepArguments: java.util.List getSourceSets()>();

        $r28 = (java.util.Collection) $r26;

        $r27 = (java.lang.Iterable) r5;

        $r29 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Iterable)>($r28, $r27);

        r45 = staticinvoke <androidx.room.compiler.processing.util.compiler.steps.KotlinCompilationStepKt: java.util.List resolveDiagnostics(java.util.List,java.util.List)>($r25, $r29);

        $r30 = virtualinvoke r4.<androidx.room.compiler.processing.util.compiler.KotlinCliRunner$KotlinCliResult: java.io.File getCompiledClasspath()>();

        $r31 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r30);

        $r32 = (java.util.Collection) $r31;

        $r33 = staticinvoke <kotlin.io.FilesKt: java.io.File resolve(java.io.File,java.lang.String)>(r1, "kapt-classes-out");

        r6 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Object)>($r32, $r33);

        $r34 = new androidx.room.compiler.processing.util.compiler.steps.CompilationStepResult;

        $r35 = virtualinvoke r4.<androidx.room.compiler.processing.util.compiler.KotlinCliRunner$KotlinCliResult: org.jetbrains.kotlin.cli.common.ExitCode getExitCode()>();

        $r36 = <org.jetbrains.kotlin.cli.common.ExitCode: org.jetbrains.kotlin.cli.common.ExitCode OK>;

        if $r35 != $r36 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        $r37 = virtualinvoke r2.<androidx.room.compiler.processing.util.compiler.steps.CompilationStepArguments: java.util.List getSourceSets()>();

        $r39 = (java.util.Collection) $r37;

        $r38 = (java.lang.Iterable) r5;

        $r40 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Iterable)>($r39, $r38);

        $r41 = staticinvoke <androidx.room.compiler.processing.util.compiler.steps.CompilationStepArguments: androidx.room.compiler.processing.util.compiler.steps.CompilationStepArguments copy$default(androidx.room.compiler.processing.util.compiler.steps.CompilationStepArguments,java.util.List,java.util.List,boolean,java.util.List,java.util.List,int,java.lang.Object)>(r2, $r40, null, 0, null, null, 30, null);

        specialinvoke $r34.<androidx.room.compiler.processing.util.compiler.steps.CompilationStepResult: void <init>(boolean,java.util.List,java.util.List,androidx.room.compiler.processing.util.compiler.steps.CompilationStepArguments,java.util.List)>($z1, r5, r45, $r41, r6);

        return $r34;
    }

    static void <clinit>()
    {
        androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep$Companion $r0;

        $r0 = new androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep$Companion;

        specialinvoke $r0.<androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep: androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep$Companion Companion> = $r0;

        return;
    }

androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep$Companion
    private void <init>()
    {
        androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep$Companion r0;

        r0 := @this: androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep$Companion: void <init>()>();

        return;
    }

