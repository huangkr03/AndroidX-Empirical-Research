androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser: org.xmlpull.v1.XmlPullParserFactory xmlParserFactory>
    public void <init>()
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser r0;
        java.lang.Throwable r1, $r3;
        org.xmlpull.v1.XmlPullParserFactory $r2;
        java.lang.RuntimeException $r4;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

     label1:
        $r2 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();

        r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser: org.xmlpull.v1.XmlPullParserFactory xmlParserFactory> = $r2;

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Couldn\'t create XmlPullParserFactory instance", r1);

        throw $r4;

     label4:
        return;

        catch org.xmlpull.v1.XmlPullParserException from label1 to label2 with label3;
    }

    public androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest parse(android.net.Uri, java.io.InputStream) throws java.io.IOException
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser r0;
        android.net.Uri r1;
        java.io.InputStream r2;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser r3, r13;
        org.xmlpull.v1.XmlPullParserFactory $r4;
        java.lang.String $r6;
        java.lang.Object $r7;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest $r8;
        java.lang.Throwable $r9, r12, r14;
        androidx.media3.common.ParserException $r10;
        org.xmlpull.v1.XmlPullParser r11;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.io.InputStream;

     label1:
        $r4 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser: org.xmlpull.v1.XmlPullParserFactory xmlParserFactory>;

        r11 = virtualinvoke $r4.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r11.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r2, null);

        r13 = new androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser;

        $r6 = virtualinvoke r1.<android.net.Uri: java.lang.String toString()>();

        specialinvoke r13.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: void <init>(androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser,java.lang.String)>(null, $r6);

        r3 = r13;

        $r7 = virtualinvoke r3.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: java.lang.Object parse(org.xmlpull.v1.XmlPullParser)>(r11);

        $r8 = (androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest) $r7;

     label2:
        return $r8;

     label3:
        $r9 := @caughtexception;

        r12 = $r9;

        $r10 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedManifest(java.lang.String,java.lang.Throwable)>(null, r12);

        r14 = (java.lang.Throwable) $r10;

        throw r14;

        catch org.xmlpull.v1.XmlPullParserException from label1 to label2 with label3;
    }

    public volatile java.lang.Object parse(android.net.Uri, java.io.InputStream) throws java.io.IOException
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser r0;
        android.net.Uri r1;
        java.io.InputStream r2;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest $r3;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.io.InputStream;

        $r3 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest parse(android.net.Uri,java.io.InputStream)>(r1, r2);

        return $r3;
    }

androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser: java.lang.String baseUri>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser: java.lang.String tag>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser parent>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser: java.util.List normalizedAttributes>
    public void <init>(androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser, java.lang.String, java.lang.String)
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser r0, r1;
        java.lang.String r2, r3;
        java.util.LinkedList $r4;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser;

        r1 := @parameter0: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser parent> = r1;

        r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser: java.lang.String baseUri> = r2;

        r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser: java.lang.String tag> = r3;

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser: java.util.List normalizedAttributes> = $r4;

        return;
    }

    public final java.lang.Object parse(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser r0, r2;
        org.xmlpull.v1.XmlPullParser r1;
        int i0, i2;
        boolean $z0, $z1, $z2, z3;
        java.lang.Object $r3, $r6;
        java.lang.String $r4, $r5, r7, r8;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        z3 = 0;

        i2 = 0;

     label01:
        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        tableswitch(i0)
        {
            case 1: goto label11;
            case 2: goto label02;
            case 3: goto label09;
            case 4: goto label08;
            default: goto label12;
        };

     label02:
        r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r4 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser: java.lang.String tag>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z1 == 0 goto label03;

        z3 = 1;

        virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser: void parseStartTag(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label12;

     label03:
        if z3 == 0 goto label12;

        if i2 <= 0 goto label04;

        i2 = i2 + 1;

        goto label12;

     label04:
        $z2 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser: boolean handleChildInline(java.lang.String)>(r7);

        if $z2 == 0 goto label05;

        virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser: void parseStartTag(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label12;

     label05:
        $r5 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser: java.lang.String baseUri>;

        r2 = specialinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser newChildParser(androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser,java.lang.String,java.lang.String)>(r0, r7, $r5);

        if r2 != null goto label06;

        i2 = 1;

        goto label07;

     label06:
        $r6 = virtualinvoke r2.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser: java.lang.Object parse(org.xmlpull.v1.XmlPullParser)>(r1);

        virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser: void addChild(java.lang.Object)>($r6);

     label07:
        goto label12;

     label08:
        if z3 == 0 goto label12;

        if i2 != 0 goto label12;

        virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser: void parseText(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label12;

     label09:
        if z3 == 0 goto label12;

        if i2 <= 0 goto label10;

        i2 = i2 + -1;

        goto label12;

     label10:
        r8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser: void parseEndTag(org.xmlpull.v1.XmlPullParser)>(r1);

        $z0 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser: boolean handleChildInline(java.lang.String)>(r8);

        if $z0 != 0 goto label12;

        $r3 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser: java.lang.Object build()>();

        return $r3;

     label11:
        return null;

     label12:
        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label01;
    }

    private androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser newChildParser(androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser, java.lang.String, java.lang.String)
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser r0, r1;
        java.lang.String r2, r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser $r7;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser $r8;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser $r9;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser;

        r1 := @parameter0: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = "QualityLevel";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        $r9 = new androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser;

        specialinvoke $r9.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser: void <init>(androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser,java.lang.String)>(r1, r3);

        return $r9;

     label1:
        $r5 = "Protection";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label2;

        $r8 = new androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser;

        specialinvoke $r8.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser: void <init>(androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser,java.lang.String)>(r1, r3);

        return $r8;

     label2:
        $r6 = "StreamIndex";

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label3;

        $r7 = new androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser;

        specialinvoke $r7.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: void <init>(androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser,java.lang.String)>(r1, r3);

        return $r7;

     label3:
        return null;
    }

    protected final void putNormalizedAttribute(java.lang.String, java.lang.Object)
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.util.List $r3;
        android.util.Pair $r4;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser: java.util.List normalizedAttributes>;

        $r4 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>(r1, r2);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        return;
    }

    protected final java.lang.Object getNormalizedAttribute(java.lang.String)
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser r0, $r4, $r5;
        java.lang.String r1, $r9;
        android.util.Pair r2;
        java.util.List $r3, $r6;
        int $i0, i1;
        java.lang.Object $r7, $r8, $r10, $r11;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser;

        r1 := @parameter0: java.lang.String;

        i1 = 0;

     label1:
        $r3 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser: java.util.List normalizedAttributes>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r6 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser: java.util.List normalizedAttributes>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1);

        r2 = (android.util.Pair) $r7;

        $r8 = r2.<android.util.Pair: java.lang.Object first>;

        $r9 = (java.lang.String) $r8;

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r10 = r2.<android.util.Pair: java.lang.Object second>;

        return $r10;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r4 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser parent>;

        if $r4 != null goto label4;

        $r11 = null;

        goto label5;

     label4:
        $r5 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser parent>;

        $r11 = virtualinvoke $r5.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser: java.lang.Object getNormalizedAttribute(java.lang.String)>(r1);

     label5:
        return $r11;
    }

    protected boolean handleChildInline(java.lang.String)
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser r0;
        java.lang.String r1;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser;

        r1 := @parameter0: java.lang.String;

        return 0;
    }

    protected void parseStartTag(org.xmlpull.v1.XmlPullParser) throws androidx.media3.common.ParserException
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser r0;
        org.xmlpull.v1.XmlPullParser r1;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        return;
    }

    protected void parseText(org.xmlpull.v1.XmlPullParser)
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser r0;
        org.xmlpull.v1.XmlPullParser r1;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        return;
    }

    protected void parseEndTag(org.xmlpull.v1.XmlPullParser)
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser r0;
        org.xmlpull.v1.XmlPullParser r1;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        return;
    }

    protected void addChild(java.lang.Object)
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser r0;
        java.lang.Object r1;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser;

        r1 := @parameter0: java.lang.Object;

        return;
    }

<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser: java.lang.Object build()>
    protected final java.lang.String parseRequiredString(org.xmlpull.v1.XmlPullParser, java.lang.String) throws androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$MissingFieldException
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r3;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$MissingFieldException r5;
        java.lang.Throwable r6;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.lang.String;

        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r2);

        if r3 == null goto label1;

        return r3;

     label1:
        r5 = new androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$MissingFieldException;

        specialinvoke r5.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$MissingFieldException: void <init>(java.lang.String)>(r2);

        r6 = (java.lang.Throwable) r5;

        throw r6;
    }

    protected final int parseInt(org.xmlpull.v1.XmlPullParser, java.lang.String, int) throws androidx.media3.common.ParserException
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r3;
        int i0, $i1;
        java.lang.Throwable r4, $r5, r7;
        androidx.media3.common.ParserException $r6;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r2);

        if r3 == null goto label4;

     label1:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

     label2:
        return $i1;

     label3:
        $r5 := @caughtexception;

        r4 = $r5;

        $r6 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedManifest(java.lang.String,java.lang.Throwable)>(null, r4);

        r7 = (java.lang.Throwable) $r6;

        throw r7;

     label4:
        return i0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    protected final int parseRequiredInt(org.xmlpull.v1.XmlPullParser, java.lang.String) throws androidx.media3.common.ParserException
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r3;
        java.lang.Throwable r4, $r6, r9, r10;
        int $i0;
        androidx.media3.common.ParserException $r7;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$MissingFieldException r8;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.lang.String;

        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r2);

        if r3 == null goto label4;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

     label2:
        return $i0;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

        $r7 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedManifest(java.lang.String,java.lang.Throwable)>(null, r4);

        r9 = (java.lang.Throwable) $r7;

        throw r9;

     label4:
        r8 = new androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$MissingFieldException;

        specialinvoke r8.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$MissingFieldException: void <init>(java.lang.String)>(r2);

        r10 = (java.lang.Throwable) r8;

        throw r10;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    protected final long parseLong(org.xmlpull.v1.XmlPullParser, java.lang.String, long) throws androidx.media3.common.ParserException
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r3;
        long l0, $l1;
        java.lang.Throwable r4, $r5, r7;
        androidx.media3.common.ParserException $r6;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r2);

        if r3 == null goto label4;

     label1:
        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r3);

     label2:
        return $l1;

     label3:
        $r5 := @caughtexception;

        r4 = $r5;

        $r6 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedManifest(java.lang.String,java.lang.Throwable)>(null, r4);

        r7 = (java.lang.Throwable) $r6;

        throw r7;

     label4:
        return l0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    protected final long parseRequiredLong(org.xmlpull.v1.XmlPullParser, java.lang.String) throws androidx.media3.common.ParserException
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r3;
        java.lang.Throwable r4, $r6, r9, r10;
        long $l0;
        androidx.media3.common.ParserException $r7;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$MissingFieldException r8;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.lang.String;

        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r2);

        if r3 == null goto label4;

     label1:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r3);

     label2:
        return $l0;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

        $r7 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedManifest(java.lang.String,java.lang.Throwable)>(null, r4);

        r9 = (java.lang.Throwable) $r7;

        throw r9;

     label4:
        r8 = new androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$MissingFieldException;

        specialinvoke r8.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$MissingFieldException: void <init>(java.lang.String)>(r2);

        r10 = (java.lang.Throwable) r8;

        throw r10;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    protected final boolean parseBoolean(org.xmlpull.v1.XmlPullParser, java.lang.String, boolean)
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r3;
        boolean z0, $z1;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r2);

        if r3 == null goto label1;

        $z1 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r3);

        return $z1;

     label1:
        return z0;
    }

androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$MissingFieldException
    public void <init>(java.lang.String)
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$MissingFieldException r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$MissingFieldException;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing required field: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<androidx.media3.common.ParserException: void <init>(java.lang.String,java.lang.Throwable,boolean,int)>($r5, null, 1, 4);

        return;
    }

androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser: java.lang.String TAG>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser: java.lang.String TAG_PROTECTION_HEADER>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser: java.lang.String KEY_SYSTEM_ID>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser: int INITIALIZATION_VECTOR_SIZE>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser: boolean inProtectionHeader>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser: java.util.UUID uuid>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser: byte[] initData>
    public void <init>(androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser, java.lang.String)
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser r0;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser r1;
        java.lang.String r2;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser;

        r1 := @parameter0: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser: void <init>(androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser,java.lang.String,java.lang.String)>(r1, r2, "Protection");

        return;
    }

    public boolean handleChildInline(java.lang.String)
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser r0;
        java.lang.String r1, $r2;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser;

        r1 := @parameter0: java.lang.String;

        $r2 = "ProtectionHeader";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    public void parseStartTag(org.xmlpull.v1.XmlPullParser)
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String $r2, $r3, r5, r6;
        boolean $z0;
        java.util.UUID $r4;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r2 = "ProtectionHeader";

        $r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser: boolean inProtectionHeader> = 1;

        r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "SystemID");

        r6 = staticinvoke <androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser: java.lang.String stripCurlyBraces(java.lang.String)>(r5);

        $r4 = staticinvoke <java.util.UUID: java.util.UUID fromString(java.lang.String)>(r6);

        r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser: java.util.UUID uuid> = $r4;

     label1:
        return;
    }

    public void parseText(org.xmlpull.v1.XmlPullParser)
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        boolean $z0;
        java.lang.String $r2;
        byte[] $r3;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $z0 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser: boolean inProtectionHeader>;

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        $r3 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r2, 0);

        r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser: byte[] initData> = $r3;

     label1:
        return;
    }

    public void parseEndTag(org.xmlpull.v1.XmlPullParser)
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r2 = "ProtectionHeader";

        $r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser: boolean inProtectionHeader> = 0;

     label1:
        return;
    }

    public java.lang.Object build()
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser r0;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$ProtectionElement $r1;
        byte[] $r2, $r5, $r6;
        java.util.UUID $r3, $r4;
        androidx.media3.extractor.mp4.TrackEncryptionBox[] $r7;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser;

        $r1 = new androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$ProtectionElement;

        $r4 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser: java.util.UUID uuid>;

        $r3 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser: java.util.UUID uuid>;

        $r2 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser: byte[] initData>;

        $r5 = staticinvoke <androidx.media3.extractor.mp4.PsshAtomUtil: byte[] buildPsshAtom(java.util.UUID,byte[])>($r3, $r2);

        $r6 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser: byte[] initData>;

        $r7 = staticinvoke <androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser: androidx.media3.extractor.mp4.TrackEncryptionBox[] buildTrackEncryptionBoxes(byte[])>($r6);

        specialinvoke $r1.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$ProtectionElement: void <init>(java.util.UUID,byte[],androidx.media3.extractor.mp4.TrackEncryptionBox[])>($r4, $r5, $r7);

        return $r1;
    }

    private static androidx.media3.extractor.mp4.TrackEncryptionBox[] buildTrackEncryptionBoxes(byte[])
    {
        byte[] r0, $r3;
        androidx.media3.extractor.mp4.TrackEncryptionBox[] $r1;
        androidx.media3.extractor.mp4.TrackEncryptionBox $r2;

        r0 := @parameter0: byte[];

        $r1 = newarray (androidx.media3.extractor.mp4.TrackEncryptionBox)[1];

        $r2 = new androidx.media3.extractor.mp4.TrackEncryptionBox;

        $r3 = staticinvoke <androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser: byte[] getProtectionElementKeyId(byte[])>(r0);

        specialinvoke $r2.<androidx.media3.extractor.mp4.TrackEncryptionBox: void <init>(boolean,java.lang.String,int,byte[],int,int,byte[])>(1, null, 8, $r3, 0, 0, null);

        $r1[0] = $r2;

        return $r1;
    }

    private static byte[] getProtectionElementKeyId(byte[])
    {
        byte[] r0, r3;
        java.lang.StringBuilder r1, $r4;
        java.lang.String r2, r6;
        int $i0, $i1, $i2, $i3, i6;
        byte $b4;
        char $c5;

        r0 := @parameter0: byte[];

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r1 = $r4;

        i6 = 0;

     label1:
        $i0 = lengthof r0;

        if i6 >= $i0 goto label2;

        $b4 = r0[i6];

        $c5 = (char) $b4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        i6 = i6 + 2;

        goto label1;

     label2:
        r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = virtualinvoke r6.<java.lang.String: int indexOf(java.lang.String)>("<KID>");

        $i2 = $i1 + 5;

        $i3 = virtualinvoke r6.<java.lang.String: int indexOf(java.lang.String)>("</KID>");

        r2 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>($i2, $i3);

        r3 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>(r2, 0);

        staticinvoke <androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser: void swap(byte[],int,int)>(r3, 0, 3);

        staticinvoke <androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser: void swap(byte[],int,int)>(r3, 1, 2);

        staticinvoke <androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser: void swap(byte[],int,int)>(r3, 4, 5);

        staticinvoke <androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser: void swap(byte[],int,int)>(r3, 6, 7);

        return r3;
    }

    private static void swap(byte[], int, int)
    {
        byte[] r0;
        int i0, i1;
        byte b2, $b3;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        b2 = r0[i0];

        $b3 = r0[i1];

        r0[i0] = $b3;

        r0[i1] = b2;

        return;
    }

    private static java.lang.String stripCurlyBraces(java.lang.String)
    {
        char $c0, $c3;
        int $i1, $i2, $i4, $i5;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        if $c0 != 123 goto label1;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i2);

        if $c3 != 125 goto label1;

        $i4 = virtualinvoke r0.<java.lang.String: int length()>();

        $i5 = $i4 - 1;

        r0 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(1, $i5);

     label1:
        return r0;
    }

androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser: java.lang.String TAG>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser: java.lang.String KEY_INDEX>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser: java.lang.String KEY_BITRATE>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser: java.lang.String KEY_CODEC_PRIVATE_DATA>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser: java.lang.String KEY_SAMPLING_RATE>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser: java.lang.String KEY_CHANNELS>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser: java.lang.String KEY_FOUR_CC>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser: java.lang.String KEY_TYPE>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser: java.lang.String KEY_SUB_TYPE>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser: java.lang.String KEY_LANGUAGE>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser: java.lang.String KEY_NAME>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser: java.lang.String KEY_MAX_WIDTH>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser: java.lang.String KEY_MAX_HEIGHT>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser: androidx.media3.common.Format format>
    public void <init>(androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser, java.lang.String)
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser r0;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser r1;
        java.lang.String r2;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser;

        r1 := @parameter0: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser: void <init>(androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser,java.lang.String,java.lang.String)>(r1, r2, "QualityLevel");

        return;
    }

    public void parseStartTag(org.xmlpull.v1.XmlPullParser) throws androidx.media3.common.ParserException
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        androidx.media3.common.Format$Builder r2, $r3, $r15, $r16, $r17, $r22, $r23, $r24, $r27, $r29, $r32, $r33, $r34, $r37;
        int i0, $i1, $i2, $i3, i4, i5, $i8;
        java.lang.String $r4, $r10, $r12, $r14, r19, r25, r26, $r28, $r31, $r36;
        java.lang.Object $r5, $r8, $r30, $r35;
        java.lang.Integer $r6;
        boolean $z0, $z1, $z2, $z3;
        byte[] $r13;
        java.util.List r20, r21;
        short s6;
        byte b7;
        androidx.media3.common.Format $r38;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r3 = new androidx.media3.common.Format$Builder;

        specialinvoke $r3.<androidx.media3.common.Format$Builder: void <init>()>();

        r2 = $r3;

        $r4 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser: java.lang.String parseRequiredString(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "FourCC");

        r19 = staticinvoke <androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser: java.lang.String fourCCToMimeType(java.lang.String)>($r4);

        $r5 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser: java.lang.Object getNormalizedAttribute(java.lang.String)>("Type");

        $r6 = (java.lang.Integer) $r5;

        i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        if i0 != 2 goto label01;

        $r14 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "CodecPrivateData");

        r20 = staticinvoke <androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser: java.util.List buildCodecSpecificData(java.lang.String)>($r14);

        $r15 = virtualinvoke r2.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setContainerMimeType(java.lang.String)>("video/mp4");

        $i2 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser: int parseRequiredInt(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "MaxWidth");

        $r16 = virtualinvoke $r15.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setWidth(int)>($i2);

        $i3 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser: int parseRequiredInt(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "MaxHeight");

        $r17 = virtualinvoke $r16.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setHeight(int)>($i3);

        virtualinvoke $r17.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setInitializationData(java.util.List)>(r20);

        goto label12;

     label01:
        if i0 != 1 goto label04;

        if r19 != null goto label02;

        r19 = "audio/mp4a-latm";

     label02:
        i4 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser: int parseRequiredInt(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "Channels");

        i5 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser: int parseRequiredInt(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "SamplingRate");

        $r10 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "CodecPrivateData");

        r21 = staticinvoke <androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser: java.util.List buildCodecSpecificData(java.lang.String)>($r10);

        $z2 = interfaceinvoke r21.<java.util.List: boolean isEmpty()>();

        if $z2 == 0 goto label03;

        $r12 = "audio/mp4a-latm";

        $z3 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r19);

        if $z3 == 0 goto label03;

        $r13 = staticinvoke <androidx.media3.extractor.AacUtil: byte[] buildAacLcAudioSpecificConfig(int,int)>(i5, i4);

        r21 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r13);

     label03:
        $r22 = virtualinvoke r2.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setContainerMimeType(java.lang.String)>("audio/mp4");

        $r23 = virtualinvoke $r22.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setChannelCount(int)>(i4);

        $r24 = virtualinvoke $r23.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSampleRate(int)>(i5);

        virtualinvoke $r24.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setInitializationData(java.util.List)>(r21);

        goto label12;

     label04:
        if i0 != 3 goto label11;

        s6 = 0;

        $r8 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser: java.lang.Object getNormalizedAttribute(java.lang.String)>("Subtype");

        r25 = (java.lang.String) $r8;

        if r25 == null goto label10;

        r26 = r25;

        b7 = -1;

        $i1 = virtualinvoke r26.<java.lang.String: int hashCode()>();

        lookupswitch($i1)
        {
            case 2061026: goto label05;
            case 2094737: goto label06;
            default: goto label07;
        };

     label05:
        $z1 = virtualinvoke r26.<java.lang.String: boolean equals(java.lang.Object)>("CAPT");

        if $z1 == 0 goto label07;

        b7 = 0;

        goto label07;

     label06:
        $z0 = virtualinvoke r26.<java.lang.String: boolean equals(java.lang.Object)>("DESC");

        if $z0 == 0 goto label07;

        b7 = 1;

     label07:
        lookupswitch(b7)
        {
            case 0: goto label08;
            case 1: goto label09;
            default: goto label10;
        };

     label08:
        s6 = 64;

        goto label10;

     label09:
        s6 = 1024;

        goto label10;

     label10:
        $r27 = virtualinvoke r2.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setContainerMimeType(java.lang.String)>("application/mp4");

        virtualinvoke $r27.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setRoleFlags(int)>(s6);

        goto label12;

     label11:
        virtualinvoke r2.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setContainerMimeType(java.lang.String)>("application/mp4");

     label12:
        $r28 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "Index");

        $r29 = virtualinvoke r2.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setId(java.lang.String)>($r28);

        $r30 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser: java.lang.Object getNormalizedAttribute(java.lang.String)>("Name");

        $r31 = (java.lang.String) $r30;

        $r32 = virtualinvoke $r29.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setLabel(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSampleMimeType(java.lang.String)>(r19);

        $i8 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser: int parseRequiredInt(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "Bitrate");

        $r34 = virtualinvoke $r33.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setAverageBitrate(int)>($i8);

        $r35 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser: java.lang.Object getNormalizedAttribute(java.lang.String)>("Language");

        $r36 = (java.lang.String) $r35;

        $r37 = virtualinvoke $r34.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setLanguage(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<androidx.media3.common.Format$Builder: androidx.media3.common.Format build()>();

        r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser: androidx.media3.common.Format format> = $r38;

        return;
    }

    public java.lang.Object build()
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser r0;
        androidx.media3.common.Format $r1;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser;

        $r1 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser: androidx.media3.common.Format format>;

        return $r1;
    }

    private static java.util.List buildCodecSpecificData(java.lang.String)
    {
        java.lang.String r0;
        java.util.ArrayList r1, $r4;
        byte[] r2;
        byte[][] r3;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = $r4;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 != 0 goto label2;

        r2 = staticinvoke <androidx.media3.common.util.Util: byte[] getBytesFromHexString(java.lang.String)>(r0);

        r3 = staticinvoke <androidx.media3.common.util.CodecSpecificDataUtil: byte[][] splitNalUnits(byte[])>(r2);

        if r3 != null goto label1;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        goto label2;

     label1:
        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>(r1, r3);

     label2:
        return r1;
    }

    private static java.lang.String fourCCToMimeType(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("H264");

        if $z0 != 0 goto label01;

        $z1 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("X264");

        if $z1 != 0 goto label01;

        $z2 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("AVC1");

        if $z2 != 0 goto label01;

        $z3 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("DAVC");

        if $z3 == 0 goto label02;

     label01:
        return "video/avc";

     label02:
        $z4 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("AAC");

        if $z4 != 0 goto label03;

        $z5 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("AACL");

        if $z5 != 0 goto label03;

        $z6 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("AACH");

        if $z6 != 0 goto label03;

        $z7 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("AACP");

        if $z7 == 0 goto label04;

     label03:
        return "audio/mp4a-latm";

     label04:
        $z8 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("TTML");

        if $z8 != 0 goto label05;

        $z9 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("DFXP");

        if $z9 == 0 goto label06;

     label05:
        return "application/ttml+xml";

     label06:
        $z10 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("ac-3");

        if $z10 != 0 goto label07;

        $z11 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("dac3");

        if $z11 == 0 goto label08;

     label07:
        return "audio/ac3";

     label08:
        $z12 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("ec-3");

        if $z12 != 0 goto label09;

        $z13 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("dec3");

        if $z13 == 0 goto label10;

     label09:
        return "audio/eac3";

     label10:
        $z14 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("dtsc");

        if $z14 == 0 goto label11;

        return "audio/vnd.dts";

     label11:
        $z15 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("dtsh");

        if $z15 != 0 goto label12;

        $z16 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("dtsl");

        if $z16 == 0 goto label13;

     label12:
        return "audio/vnd.dts.hd";

     label13:
        $z17 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("dtse");

        if $z17 == 0 goto label14;

        return "audio/vnd.dts.hd;profile=lbr";

     label14:
        $z18 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("opus");

        if $z18 == 0 goto label15;

        return "audio/opus";

     label15:
        return null;
    }

androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: java.lang.String TAG>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: java.lang.String KEY_MAJOR_VERSION>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: java.lang.String KEY_MINOR_VERSION>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: java.lang.String KEY_TIME_SCALE>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: java.lang.String KEY_DVR_WINDOW_LENGTH>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: java.lang.String KEY_DURATION>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: java.lang.String KEY_LOOKAHEAD_COUNT>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: java.lang.String KEY_IS_LIVE>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: java.util.List streamElements>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: int majorVersion>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: int minorVersion>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: long timescale>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: long duration>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: long dvrWindowLength>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: int lookAheadCount>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: boolean isLive>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$ProtectionElement protectionElement>
    public void <init>(androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser, java.lang.String)
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser r0;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser r1;
        java.lang.String r2;
        java.util.LinkedList $r3;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser;

        r1 := @parameter0: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser: void <init>(androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser,java.lang.String,java.lang.String)>(r1, r2, "SmoothStreamingMedia");

        r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: int lookAheadCount> = -1;

        r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$ProtectionElement protectionElement> = null;

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: java.util.List streamElements> = $r3;

        return;
    }

    public void parseStartTag(org.xmlpull.v1.XmlPullParser) throws androidx.media3.common.ParserException
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        int $i0, $i1, $i5;
        long $l2, $l3, $l4, $l6;
        boolean $z0;
        java.lang.Long $r2;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $i0 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: int parseRequiredInt(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "MajorVersion");

        r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: int majorVersion> = $i0;

        $i1 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: int parseRequiredInt(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "MinorVersion");

        r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: int minorVersion> = $i1;

        $l2 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: long parseLong(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "TimeScale", 10000000L);

        r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: long timescale> = $l2;

        $l3 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: long parseRequiredLong(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "Duration");

        r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: long duration> = $l3;

        $l4 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: long parseLong(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "DVRWindowLength", 0L);

        r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: long dvrWindowLength> = $l4;

        $i5 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: int parseInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r1, "LookaheadCount", -1);

        r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: int lookAheadCount> = $i5;

        $z0 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: boolean parseBoolean(org.xmlpull.v1.XmlPullParser,java.lang.String,boolean)>(r1, "IsLive", 0);

        r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: boolean isLive> = $z0;

        $l6 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: long timescale>;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);

        virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: void putNormalizedAttribute(java.lang.String,java.lang.Object)>("TimeScale", $r2);

        return;
    }

    public void addChild(java.lang.Object)
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser r0;
        java.lang.Object r1;
        boolean $z0, $z1, $z3;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$ProtectionElement $r2, $r3;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement $r4;
        java.util.List $r5;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement;

        if $z0 == 0 goto label1;

        $r5 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: java.util.List streamElements>;

        $r4 = (androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement) r1;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label4;

     label1:
        $z1 = r1 instanceof androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$ProtectionElement;

        if $z1 == 0 goto label4;

        $r2 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$ProtectionElement protectionElement>;

        if $r2 != null goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z3);

        $r3 = (androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$ProtectionElement) r1;

        r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$ProtectionElement protectionElement> = $r3;

     label4:
        return;
    }

    public java.lang.Object build()
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser r0;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement[] r1, r3;
        androidx.media3.common.DrmInitData r2, $r12;
        int i0, i1, $i2, $i3, $i7, $i8, i9, i10, $i11;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement r4;
        androidx.media3.common.Format[] r5;
        java.util.List $r6, $r7;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$ProtectionElement $r9, $r11, $r15, $r16;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest $r10;
        boolean $z0;
        long $l4, $l5, $l6;
        androidx.media3.common.DrmInitData$SchemeData[] $r13;
        androidx.media3.common.DrmInitData$SchemeData $r14;
        byte[] $r17;
        java.util.UUID $r18;
        androidx.media3.common.Format $r19, $r22;
        androidx.media3.common.Format$Builder $r20, $r21;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser;

        $r6 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: java.util.List streamElements>;

        $i2 = interfaceinvoke $r6.<java.util.List: int size()>();

        r1 = newarray (androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement)[$i2];

        $r7 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: java.util.List streamElements>;

        interfaceinvoke $r7.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r1);

        $r9 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$ProtectionElement protectionElement>;

        if $r9 == null goto label5;

        $r12 = new androidx.media3.common.DrmInitData;

        $r13 = newarray (androidx.media3.common.DrmInitData$SchemeData)[1];

        $r14 = new androidx.media3.common.DrmInitData$SchemeData;

        $r15 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$ProtectionElement protectionElement>;

        $r18 = $r15.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$ProtectionElement: java.util.UUID uuid>;

        $r16 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$ProtectionElement protectionElement>;

        $r17 = $r16.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$ProtectionElement: byte[] data>;

        specialinvoke $r14.<androidx.media3.common.DrmInitData$SchemeData: void <init>(java.util.UUID,java.lang.String,byte[])>($r18, "video/mp4", $r17);

        $r13[0] = $r14;

        specialinvoke $r12.<androidx.media3.common.DrmInitData: void <init>(androidx.media3.common.DrmInitData$SchemeData[])>($r13);

        r2 = $r12;

        r3 = r1;

        i0 = lengthof r3;

        i9 = 0;

     label1:
        if i9 >= i0 goto label5;

        r4 = r3[i9];

        i1 = r4.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement: int type>;

        if i1 == 2 goto label2;

        if i1 != 1 goto label4;

     label2:
        r5 = r4.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement: androidx.media3.common.Format[] formats>;

        i10 = 0;

     label3:
        $i11 = lengthof r5;

        if i10 >= $i11 goto label4;

        $r19 = r5[i10];

        $r20 = virtualinvoke $r19.<androidx.media3.common.Format: androidx.media3.common.Format$Builder buildUpon()>();

        $r21 = virtualinvoke $r20.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setDrmInitData(androidx.media3.common.DrmInitData)>(r2);

        $r22 = virtualinvoke $r21.<androidx.media3.common.Format$Builder: androidx.media3.common.Format build()>();

        r5[i10] = $r22;

        i10 = i10 + 1;

        goto label3;

     label4:
        i9 = i9 + 1;

        goto label1;

     label5:
        $r10 = new androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest;

        $i8 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: int majorVersion>;

        $i7 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: int minorVersion>;

        $l6 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: long timescale>;

        $l5 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: long duration>;

        $l4 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: long dvrWindowLength>;

        $i3 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: int lookAheadCount>;

        $z0 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: boolean isLive>;

        $r11 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$ProtectionElement protectionElement>;

        specialinvoke $r10.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest: void <init>(int,int,long,long,long,int,boolean,androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$ProtectionElement,androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement[])>($i8, $i7, $l6, $l5, $l4, $i3, $z0, $r11, r1);

        return $r10;
    }

androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String TAG>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String TAG_STREAM_FRAGMENT>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String KEY_TYPE>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String KEY_TYPE_AUDIO>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String KEY_TYPE_VIDEO>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String KEY_TYPE_TEXT>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String KEY_SUB_TYPE>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String KEY_NAME>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String KEY_URL>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String KEY_MAX_WIDTH>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String KEY_MAX_HEIGHT>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String KEY_DISPLAY_WIDTH>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String KEY_DISPLAY_HEIGHT>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String KEY_LANGUAGE>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String KEY_TIME_SCALE>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String KEY_FRAGMENT_DURATION>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String KEY_FRAGMENT_START_TIME>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String KEY_FRAGMENT_REPEAT_COUNT>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String baseUri>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.util.List formats>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: int type>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String subType>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: long timescale>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String name>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String url>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: int maxWidth>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: int maxHeight>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: int displayWidth>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: int displayHeight>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String language>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.util.ArrayList startTimes>
<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: long lastChunkDuration>
    public void <init>(androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser, java.lang.String)
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser r0;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser r1;
        java.lang.String r2;
        java.util.LinkedList $r3;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser;

        r1 := @parameter0: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser: void <init>(androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser,java.lang.String,java.lang.String)>(r1, r2, "StreamIndex");

        r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String baseUri> = r2;

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.util.List formats> = $r3;

        return;
    }

    public boolean handleChildInline(java.lang.String)
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser r0;
        java.lang.String r1, $r2;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser;

        r1 := @parameter0: java.lang.String;

        $r2 = "c";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    public void parseStartTag(org.xmlpull.v1.XmlPullParser) throws androidx.media3.common.ParserException
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r2 = "c";

        $r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        specialinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: void parseStreamFragmentStartTag(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label2;

     label1:
        specialinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: void parseStreamElementStartTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label2:
        return;
    }

    private void parseStreamFragmentStartTag(org.xmlpull.v1.XmlPullParser) throws androidx.media3.common.ParserException
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        long l0, $l2, $l3, $l4, $l5, $l6, $l8, $l11, $l12, l14, $l16, $l19;
        java.util.ArrayList $r2, $r3, $r7, $r10;
        byte $b1, $b7, $b9, $b17, $b20;
        java.lang.Long $r4, $r9, $r11;
        androidx.media3.common.ParserException $r5, $r6;
        int $i10, i13, i15, i18;
        java.lang.Object $r8;
        java.lang.Throwable r12, r13;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r2 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.util.ArrayList startTimes>;

        i13 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        l14 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: long parseLong(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "t", -9223372036854775807L);

        $b1 = l14 cmp -9223372036854775807L;

        if $b1 != 0 goto label3;

        if i13 != 0 goto label1;

        l14 = 0L;

        goto label3;

     label1:
        $l8 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: long lastChunkDuration>;

        $b9 = $l8 cmp -1L;

        if $b9 == 0 goto label2;

        $r7 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.util.ArrayList startTimes>;

        $i10 = i13 - 1;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>($i10);

        $r9 = (java.lang.Long) $r8;

        $l11 = virtualinvoke $r9.<java.lang.Long: long longValue()>();

        $l12 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: long lastChunkDuration>;

        l14 = $l11 + $l12;

        goto label3;

     label2:
        $r6 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedManifest(java.lang.String,java.lang.Throwable)>("Unable to infer start time", null);

        r12 = (java.lang.Throwable) $r6;

        throw r12;

     label3:
        i15 = i13 + 1;

        $r10 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.util.ArrayList startTimes>;

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l14);

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

        $l16 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: long parseLong(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "d", -9223372036854775807L);

        r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: long lastChunkDuration> = $l16;

        l0 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: long parseLong(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "r", 1L);

        $b17 = l0 cmp 1L;

        if $b17 <= 0 goto label4;

        $l6 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: long lastChunkDuration>;

        $b7 = $l6 cmp -9223372036854775807L;

        if $b7 != 0 goto label4;

        $r5 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedManifest(java.lang.String,java.lang.Throwable)>("Repeated chunk with unspecified duration", null);

        r13 = (java.lang.Throwable) $r5;

        throw r13;

     label4:
        i18 = 1;

     label5:
        $l19 = (long) i18;

        $b20 = $l19 cmp l0;

        if $b20 >= 0 goto label6;

        i15 = i15 + 1;

        $r3 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.util.ArrayList startTimes>;

        $l3 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: long lastChunkDuration>;

        $l2 = (long) i18;

        $l4 = $l3 * $l2;

        $l5 = l14 + $l4;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        i18 = i18 + 1;

        goto label5;

     label6:
        return;
    }

    private void parseStreamElementStartTag(org.xmlpull.v1.XmlPullParser) throws androidx.media3.common.ParserException
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.Integer $r2;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r13;
        long $l8, $l9, $l11;
        byte $b10;
        java.util.ArrayList $r10;
        java.lang.Object $r11;
        java.lang.Long $r12;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $i0 = specialinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: int parseType(org.xmlpull.v1.XmlPullParser)>(r1);

        r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: int type> = $i0;

        $i1 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: int type>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: void putNormalizedAttribute(java.lang.String,java.lang.Object)>("Type", $r2);

        $i2 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: int type>;

        if $i2 != 3 goto label1;

        $r13 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String parseRequiredString(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "Subtype");

        r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String subType> = $r13;

        goto label2;

     label1:
        $r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "Subtype");

        r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String subType> = $r3;

     label2:
        $r4 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String subType>;

        virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: void putNormalizedAttribute(java.lang.String,java.lang.Object)>("Subtype", $r4);

        $r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "Name");

        r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String name> = $r5;

        $r6 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String name>;

        virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: void putNormalizedAttribute(java.lang.String,java.lang.Object)>("Name", $r6);

        $r7 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String parseRequiredString(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "Url");

        r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String url> = $r7;

        $i3 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: int parseInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r1, "MaxWidth", -1);

        r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: int maxWidth> = $i3;

        $i4 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: int parseInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r1, "MaxHeight", -1);

        r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: int maxHeight> = $i4;

        $i5 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: int parseInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r1, "DisplayWidth", -1);

        r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: int displayWidth> = $i5;

        $i6 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: int parseInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r1, "DisplayHeight", -1);

        r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: int displayHeight> = $i6;

        $r8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "Language");

        r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String language> = $r8;

        $r9 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String language>;

        virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: void putNormalizedAttribute(java.lang.String,java.lang.Object)>("Language", $r9);

        $i7 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: int parseInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r1, "TimeScale", -1);

        $l8 = (long) $i7;

        r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: long timescale> = $l8;

        $l9 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: long timescale>;

        $b10 = $l9 cmp -1L;

        if $b10 != 0 goto label3;

        $r11 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.Object getNormalizedAttribute(java.lang.String)>("TimeScale");

        $r12 = (java.lang.Long) $r11;

        $l11 = virtualinvoke $r12.<java.lang.Long: long longValue()>();

        r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: long timescale> = $l11;

     label3:
        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.util.ArrayList startTimes> = $r10;

        return;
    }

    private int parseType(org.xmlpull.v1.XmlPullParser) throws androidx.media3.common.ParserException
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, $r4, $r5, $r6, $r11;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r8, $r9, $r10, r13;
        androidx.media3.common.ParserException $r12;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$MissingFieldException r14;
        java.lang.Throwable r15, r16;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "Type");

        if r2 == null goto label4;

        $r4 = "audio";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r5 = "video";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z1 == 0 goto label2;

        return 2;

     label2:
        $r6 = "text";

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z2 == 0 goto label3;

        return 3;

     label3:
        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid key value[");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedManifest(java.lang.String,java.lang.Throwable)>($r11, null);

        r15 = (java.lang.Throwable) $r12;

        throw r15;

     label4:
        r14 = new androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$MissingFieldException;

        specialinvoke r14.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$MissingFieldException: void <init>(java.lang.String)>("Type");

        r16 = (java.lang.Throwable) r14;

        throw r16;
    }

    public void addChild(java.lang.Object)
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser r0;
        java.lang.Object r1;
        boolean $z0;
        androidx.media3.common.Format $r2;
        java.util.List $r3;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof androidx.media3.common.Format;

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.util.List formats>;

        $r2 = (androidx.media3.common.Format) r1;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2);

     label1:
        return;
    }

    public java.lang.Object build()
    {
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser r0;
        androidx.media3.common.Format[] r1;
        java.util.List $r2, $r3;
        int $i0, $i2, $i3, $i4, $i5, $i7;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement $r5;
        long $l1, $l6;
        java.util.ArrayList $r6;
        java.lang.String $r7, $r8, $r9, $r10, $r11;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser;

        $r2 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.util.List formats>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        r1 = newarray (androidx.media3.common.Format)[$i0];

        $r3 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.util.List formats>;

        interfaceinvoke $r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r1);

        $r5 = new androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement;

        $r11 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String baseUri>;

        $r10 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String url>;

        $i7 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: int type>;

        $r9 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String subType>;

        $l6 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: long timescale>;

        $r8 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String name>;

        $i5 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: int maxWidth>;

        $i4 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: int maxHeight>;

        $i3 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: int displayWidth>;

        $i2 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: int displayHeight>;

        $r7 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.lang.String language>;

        $r6 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: java.util.ArrayList startTimes>;

        $l1 = r0.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser: long lastChunkDuration>;

        specialinvoke $r5.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement: void <init>(java.lang.String,java.lang.String,int,java.lang.String,long,java.lang.String,int,int,int,int,java.lang.String,androidx.media3.common.Format[],java.util.List,long)>($r11, $r10, $i7, $r9, $l6, $r8, $i5, $i4, $i3, $i2, $r7, r1, $r6, $l1);

        return $r5;
    }

