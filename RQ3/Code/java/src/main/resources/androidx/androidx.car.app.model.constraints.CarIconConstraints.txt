androidx.car.app.model.constraints.CarIconConstraints
<androidx.car.app.model.constraints.CarIconConstraints: androidx.car.app.model.constraints.CarIconConstraints UNCONSTRAINED>
<androidx.car.app.model.constraints.CarIconConstraints: androidx.car.app.model.constraints.CarIconConstraints DEFAULT>
<androidx.car.app.model.constraints.CarIconConstraints: int[] mAllowedTypes>
    private static androidx.car.app.model.constraints.CarIconConstraints create(int[])
    {
        int[] r0;
        androidx.car.app.model.constraints.CarIconConstraints $r1;

        r0 := @parameter0: int[];

        $r1 = new androidx.car.app.model.constraints.CarIconConstraints;

        specialinvoke $r1.<androidx.car.app.model.constraints.CarIconConstraints: void <init>(int[])>(r0);

        return $r1;
    }

    public void validateOrThrow(androidx.car.app.model.CarIcon)
    {
        androidx.car.app.model.constraints.CarIconConstraints r0;
        androidx.car.app.model.CarIcon r1;
        androidx.core.graphics.drawable.IconCompat r2;
        int $i0;
        java.lang.IllegalStateException $r4;

        r0 := @this: androidx.car.app.model.constraints.CarIconConstraints;

        r1 := @parameter0: androidx.car.app.model.CarIcon;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<androidx.car.app.model.CarIcon: int getType()>();

        if $i0 == 1 goto label2;

     label1:
        return;

     label2:
        r2 = virtualinvoke r1.<androidx.car.app.model.CarIcon: androidx.core.graphics.drawable.IconCompat getIcon()>();

        if r2 != null goto label3;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Custom icon does not have a backing IconCompat");

        throw $r4;

     label3:
        virtualinvoke r0.<androidx.car.app.model.constraints.CarIconConstraints: androidx.core.graphics.drawable.IconCompat checkSupportedIcon(androidx.core.graphics.drawable.IconCompat)>(r2);

        return;
    }

    public androidx.core.graphics.drawable.IconCompat checkSupportedIcon(androidx.core.graphics.drawable.IconCompat)
    {
        androidx.car.app.model.constraints.CarIconConstraints r0;
        androidx.core.graphics.drawable.IconCompat r1;
        int i0, i1, i2, i3;
        int[] r2;
        java.lang.IllegalArgumentException $r3, $r11;
        java.lang.StringBuilder $r4, $r5, $r6, $r12, $r13, $r14;
        java.lang.String $r7, $r8, $r10, $r15;
        android.net.Uri $r9;
        boolean $z0;

        r0 := @this: androidx.car.app.model.constraints.CarIconConstraints;

        r1 := @parameter0: androidx.core.graphics.drawable.IconCompat;

        i0 = virtualinvoke r1.<androidx.core.graphics.drawable.IconCompat: int getType()>();

        r2 = r0.<androidx.car.app.model.constraints.CarIconConstraints: int[] mAllowedTypes>;

        i1 = lengthof r2;

        i3 = 0;

     label1:
        if i3 >= i1 goto label4;

        i2 = r2[i3];

        if i0 != i2 goto label3;

        if i0 != 4 goto label2;

        $r8 = "content";

        $r9 = virtualinvoke r1.<androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>();

        $r10 = virtualinvoke $r9.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r10);

        if $z0 != 0 goto label2;

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported URI scheme for: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r11;

     label2:
        return r1;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Custom icon type is not allowed: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;
    }

    private void <init>(int[])
    {
        androidx.car.app.model.constraints.CarIconConstraints r0;
        int[] r1;

        r0 := @this: androidx.car.app.model.constraints.CarIconConstraints;

        r1 := @parameter0: int[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.car.app.model.constraints.CarIconConstraints: int[] mAllowedTypes> = r1;

        return;
    }

    static void <clinit>()
    {
        int[] $r0, $r2;
        androidx.car.app.model.constraints.CarIconConstraints $r1, $r3;

        $r0 = newarray (int)[3];

        $r0[0] = 1;

        $r0[1] = 2;

        $r0[2] = 4;

        $r1 = staticinvoke <androidx.car.app.model.constraints.CarIconConstraints: androidx.car.app.model.constraints.CarIconConstraints create(int[])>($r0);

        <androidx.car.app.model.constraints.CarIconConstraints: androidx.car.app.model.constraints.CarIconConstraints UNCONSTRAINED> = $r1;

        $r2 = newarray (int)[2];

        $r2[0] = 1;

        $r2[1] = 2;

        $r3 = staticinvoke <androidx.car.app.model.constraints.CarIconConstraints: androidx.car.app.model.constraints.CarIconConstraints create(int[])>($r2);

        <androidx.car.app.model.constraints.CarIconConstraints: androidx.car.app.model.constraints.CarIconConstraints DEFAULT> = $r3;

        return;
    }

