androidx.autofill.inline.VersionUtils
<androidx.autofill.inline.VersionUtils: java.lang.String KEY_INLINE_UI_VERSIONS>
    public static boolean isVersionSupported(java.lang.String)
    {
        java.lang.String r0;
        java.util.Set $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <androidx.autofill.inline.UiVersions: java.util.Set getUiVersions()>();

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>(r0);

        return $z0;
    }

    public static java.util.List getSupportedVersions(android.os.Bundle)
    {
        android.os.Bundle r0;
        java.util.ArrayList r1, r2, $r5;
        java.util.Iterator r3;
        java.lang.String r4;
        boolean $z0, $z1;
        java.lang.Object $r6;

        r0 := @parameter0: android.os.Bundle;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r1 = $r5;

        r2 = virtualinvoke r0.<android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String)>("androidx.autofill.inline.ui.version:key");

        if r2 == null goto label3;

        r3 = virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r6;

        $z1 = staticinvoke <androidx.autofill.inline.VersionUtils: boolean isVersionSupported(java.lang.String)>(r4);

        if $z1 == 0 goto label2;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r4);

     label2:
        goto label1;

     label3:
        return r1;
    }

    public static void writeSupportedVersions(android.os.Bundle)
    {
        android.os.Bundle r0;
        java.util.ArrayList $r1;
        java.util.Set $r2;

        r0 := @parameter0: android.os.Bundle;

        $r1 = new java.util.ArrayList;

        $r2 = staticinvoke <androidx.autofill.inline.UiVersions: java.util.Set getUiVersions()>();

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        virtualinvoke r0.<android.os.Bundle: void putStringArrayList(java.lang.String,java.util.ArrayList)>("androidx.autofill.inline.ui.version:key", $r1);

        return;
    }

    public static void writeStylesToBundle(java.util.List, android.os.Bundle)
    {
        java.util.List r0;
        android.os.Bundle r1, $r9;
        java.util.ArrayList r2, $r6;
        java.util.Iterator r3;
        androidx.autofill.inline.UiVersions$Style r4;
        java.lang.String r5, $r8;
        boolean $z0;
        java.lang.Object $r7;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: android.os.Bundle;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r2 = $r6;

        r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.autofill.inline.UiVersions$Style) $r7;

        r5 = interfaceinvoke r4.<androidx.autofill.inline.UiVersions$Style: java.lang.String getVersion()>();

        $r8 = interfaceinvoke r4.<androidx.autofill.inline.UiVersions$Style: java.lang.String getVersion()>();

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        $r9 = interfaceinvoke r4.<androidx.autofill.inline.UiVersions$Style: android.os.Bundle getBundle()>();

        virtualinvoke r1.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>(r5, $r9);

        goto label1;

     label2:
        virtualinvoke r1.<android.os.Bundle: void putStringArrayList(java.lang.String,java.util.ArrayList)>("androidx.autofill.inline.ui.version:key", r2);

        return;
    }

    public static android.os.Bundle readStyleByVersion(android.os.Bundle, java.lang.String)
    {
        android.os.Bundle r0, $r2;
        java.lang.String r1;

        r0 := @parameter0: android.os.Bundle;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>(r1);

        return $r2;
    }

    private void <init>()
    {
        androidx.autofill.inline.VersionUtils r0;

        r0 := @this: androidx.autofill.inline.VersionUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

