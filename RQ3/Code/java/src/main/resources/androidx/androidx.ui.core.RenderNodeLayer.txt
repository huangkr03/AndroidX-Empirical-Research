androidx.ui.core.RenderNodeLayer
<androidx.ui.core.RenderNodeLayer: androidx.ui.core.AndroidComposeView ownerView>
<androidx.ui.core.RenderNodeLayer: androidx.ui.core.DrawLayerModifier drawLayerModifier>
<androidx.ui.core.RenderNodeLayer: kotlin.jvm.functions.Function1 drawBlock>
<androidx.ui.core.RenderNodeLayer: kotlin.jvm.functions.Function0 invalidateParentLayer>
<androidx.ui.core.RenderNodeLayer: boolean isDirty>
<androidx.ui.core.RenderNodeLayer: androidx.ui.core.OutlineResolver outlineResolver>
<androidx.ui.core.RenderNodeLayer: boolean isDestroyed>
<androidx.ui.core.RenderNodeLayer: android.graphics.Matrix cacheMatrix>
<androidx.ui.core.RenderNodeLayer: boolean drawnWithZ>
<androidx.ui.core.RenderNodeLayer: long transformOrigin>
<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>
    public void <init>(androidx.ui.core.AndroidComposeView, androidx.ui.core.DrawLayerModifier, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function0)
    {
        androidx.ui.core.RenderNodeLayer r0, r6;
        androidx.ui.core.AndroidComposeView r1, $r9;
        androidx.ui.core.DrawLayerModifier r2;
        kotlin.jvm.functions.Function1 r3;
        kotlin.jvm.functions.Function0 r4;
        android.graphics.RenderNode r5, r7, $r12;
        boolean z0, z1;
        androidx.ui.core.OutlineResolver $r8;
        androidx.ui.unit.Density $r10;
        androidx.ui.core.TransformOrigin$Companion $r11;
        long $l0;
        java.lang.String $r13;

        r0 := @this: androidx.ui.core.RenderNodeLayer;

        r1 := @parameter0: androidx.ui.core.AndroidComposeView;

        r2 := @parameter1: androidx.ui.core.DrawLayerModifier;

        r3 := @parameter2: kotlin.jvm.functions.Function1;

        r4 := @parameter3: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "ownerView");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "drawLayerModifier");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "drawBlock");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "invalidateParentLayer");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.ui.core.RenderNodeLayer: androidx.ui.core.AndroidComposeView ownerView> = r1;

        r0.<androidx.ui.core.RenderNodeLayer: androidx.ui.core.DrawLayerModifier drawLayerModifier> = r2;

        r0.<androidx.ui.core.RenderNodeLayer: kotlin.jvm.functions.Function1 drawBlock> = r3;

        r0.<androidx.ui.core.RenderNodeLayer: kotlin.jvm.functions.Function0 invalidateParentLayer> = r4;

        $r8 = new androidx.ui.core.OutlineResolver;

        $r9 = virtualinvoke r0.<androidx.ui.core.RenderNodeLayer: androidx.ui.core.AndroidComposeView getOwnerView()>();

        $r10 = virtualinvoke $r9.<androidx.ui.core.AndroidComposeView: androidx.ui.unit.Density getDensity()>();

        specialinvoke $r8.<androidx.ui.core.OutlineResolver: void <init>(androidx.ui.unit.Density)>($r10);

        r0.<androidx.ui.core.RenderNodeLayer: androidx.ui.core.OutlineResolver outlineResolver> = $r8;

        $r11 = <androidx.ui.core.TransformOrigin: androidx.ui.core.TransformOrigin$Companion Companion>;

        $l0 = virtualinvoke $r11.<androidx.ui.core.TransformOrigin$Companion: long getCenter()>();

        r0.<androidx.ui.core.RenderNodeLayer: long transformOrigin> = $l0;

        $r12 = new android.graphics.RenderNode;

        $r13 = (java.lang.String) null;

        specialinvoke $r12.<android.graphics.RenderNode: void <init>(java.lang.String)>($r13);

        r5 = $r12;

        r6 = r0;

        z0 = 0;

        z1 = 0;

        virtualinvoke r5.<android.graphics.RenderNode: boolean setHasOverlappingRendering(boolean)>(1);

        r7 = r5;

        r6.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode> = r7;

        return;
    }

    public final androidx.ui.core.AndroidComposeView getOwnerView()
    {
        androidx.ui.core.RenderNodeLayer r0;
        androidx.ui.core.AndroidComposeView $r1;

        r0 := @this: androidx.ui.core.RenderNodeLayer;

        $r1 = r0.<androidx.ui.core.RenderNodeLayer: androidx.ui.core.AndroidComposeView ownerView>;

        return $r1;
    }

    public final androidx.ui.core.DrawLayerModifier getDrawLayerModifier()
    {
        androidx.ui.core.RenderNodeLayer r0;
        androidx.ui.core.DrawLayerModifier $r1;

        r0 := @this: androidx.ui.core.RenderNodeLayer;

        $r1 = r0.<androidx.ui.core.RenderNodeLayer: androidx.ui.core.DrawLayerModifier drawLayerModifier>;

        return $r1;
    }

    public final kotlin.jvm.functions.Function1 getDrawBlock()
    {
        androidx.ui.core.RenderNodeLayer r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.ui.core.RenderNodeLayer;

        $r1 = r0.<androidx.ui.core.RenderNodeLayer: kotlin.jvm.functions.Function1 drawBlock>;

        return $r1;
    }

    public final kotlin.jvm.functions.Function0 getInvalidateParentLayer()
    {
        androidx.ui.core.RenderNodeLayer r0;
        kotlin.jvm.functions.Function0 $r1;

        r0 := @this: androidx.ui.core.RenderNodeLayer;

        $r1 = r0.<androidx.ui.core.RenderNodeLayer: kotlin.jvm.functions.Function0 invalidateParentLayer>;

        return $r1;
    }

    public long getLayerId()
    {
        androidx.ui.core.RenderNodeLayer r0;
        android.graphics.RenderNode $r1;
        long $l0;

        r0 := @this: androidx.ui.core.RenderNodeLayer;

        $r1 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        $l0 = virtualinvoke $r1.<android.graphics.RenderNode: long getUniqueId()>();

        return $l0;
    }

    public void updateLayerProperties()
    {
        androidx.ui.core.RenderNodeLayer r0;
        boolean z0, z1, z2, $z3, $z18, $z19, $z20, $z21, $z22, $z23, $z24;
        androidx.ui.core.DrawLayerModifier $r1, $r8, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r35, $r37, $r39;
        long $l0, $l2, $l4;
        android.graphics.RenderNode $r2, $r3, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r31, $r32, $r33, $r34, $r36, $r41, $r42, $r45;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16;
        byte $b1;
        kotlin.jvm.functions.Function0 $r4;
        androidx.ui.core.OutlineResolver $r6, $r10, $r38, $r43;
        androidx.ui.graphics.Path $r7, $r11;
        androidx.ui.graphics.Shape $r9, $r40;
        int $i3, $i5;
        android.graphics.Outline $r44;

        r0 := @this: androidx.ui.core.RenderNodeLayer;

        $r1 = virtualinvoke r0.<androidx.ui.core.RenderNodeLayer: androidx.ui.core.DrawLayerModifier getDrawLayerModifier()>();

        $l0 = interfaceinvoke $r1.<androidx.ui.core.DrawLayerModifier: long getTransformOrigin()>();

        r0.<androidx.ui.core.RenderNodeLayer: long transformOrigin> = $l0;

        $r2 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        $z3 = virtualinvoke $r2.<android.graphics.RenderNode: boolean getClipToOutline()>();

        if $z3 == 0 goto label1;

        $r10 = r0.<androidx.ui.core.RenderNodeLayer: androidx.ui.core.OutlineResolver outlineResolver>;

        $r11 = virtualinvoke $r10.<androidx.ui.core.OutlineResolver: androidx.ui.graphics.Path getClipPath()>();

        if $r11 == null goto label1;

        $z18 = 1;

        goto label2;

     label1:
        $z18 = 0;

     label2:
        z0 = $z18;

        $r12 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        $r13 = virtualinvoke r0.<androidx.ui.core.RenderNodeLayer: androidx.ui.core.DrawLayerModifier getDrawLayerModifier()>();

        $f1 = interfaceinvoke $r13.<androidx.ui.core.DrawLayerModifier: float getScaleX()>();

        virtualinvoke $r12.<android.graphics.RenderNode: boolean setScaleX(float)>($f1);

        $r14 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        $r15 = virtualinvoke r0.<androidx.ui.core.RenderNodeLayer: androidx.ui.core.DrawLayerModifier getDrawLayerModifier()>();

        $f2 = interfaceinvoke $r15.<androidx.ui.core.DrawLayerModifier: float getScaleY()>();

        virtualinvoke $r14.<android.graphics.RenderNode: boolean setScaleY(float)>($f2);

        $r16 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        $r17 = virtualinvoke r0.<androidx.ui.core.RenderNodeLayer: androidx.ui.core.DrawLayerModifier getDrawLayerModifier()>();

        $f3 = interfaceinvoke $r17.<androidx.ui.core.DrawLayerModifier: float getAlpha()>();

        virtualinvoke $r16.<android.graphics.RenderNode: boolean setAlpha(float)>($f3);

        $r18 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        $r19 = virtualinvoke r0.<androidx.ui.core.RenderNodeLayer: androidx.ui.core.DrawLayerModifier getDrawLayerModifier()>();

        $f4 = interfaceinvoke $r19.<androidx.ui.core.DrawLayerModifier: float getTranslationX()>();

        virtualinvoke $r18.<android.graphics.RenderNode: boolean setTranslationX(float)>($f4);

        $r20 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        $r21 = virtualinvoke r0.<androidx.ui.core.RenderNodeLayer: androidx.ui.core.DrawLayerModifier getDrawLayerModifier()>();

        $f5 = interfaceinvoke $r21.<androidx.ui.core.DrawLayerModifier: float getTranslationY()>();

        virtualinvoke $r20.<android.graphics.RenderNode: boolean setTranslationY(float)>($f5);

        $r22 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        $r23 = virtualinvoke r0.<androidx.ui.core.RenderNodeLayer: androidx.ui.core.DrawLayerModifier getDrawLayerModifier()>();

        $f6 = interfaceinvoke $r23.<androidx.ui.core.DrawLayerModifier: float getShadowElevation()>();

        virtualinvoke $r22.<android.graphics.RenderNode: boolean setElevation(float)>($f6);

        $r24 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        $r25 = virtualinvoke r0.<androidx.ui.core.RenderNodeLayer: androidx.ui.core.DrawLayerModifier getDrawLayerModifier()>();

        $f7 = interfaceinvoke $r25.<androidx.ui.core.DrawLayerModifier: float getRotationZ()>();

        virtualinvoke $r24.<android.graphics.RenderNode: boolean setRotationZ(float)>($f7);

        $r26 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        $r27 = virtualinvoke r0.<androidx.ui.core.RenderNodeLayer: androidx.ui.core.DrawLayerModifier getDrawLayerModifier()>();

        $f8 = interfaceinvoke $r27.<androidx.ui.core.DrawLayerModifier: float getRotationX()>();

        virtualinvoke $r26.<android.graphics.RenderNode: boolean setRotationX(float)>($f8);

        $r28 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        $r29 = virtualinvoke r0.<androidx.ui.core.RenderNodeLayer: androidx.ui.core.DrawLayerModifier getDrawLayerModifier()>();

        $f9 = interfaceinvoke $r29.<androidx.ui.core.DrawLayerModifier: float getRotationY()>();

        virtualinvoke $r28.<android.graphics.RenderNode: boolean setRotationY(float)>($f9);

        $r30 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        $l2 = r0.<androidx.ui.core.RenderNodeLayer: long transformOrigin>;

        $f10 = staticinvoke <androidx.ui.core.TransformOrigin: float getPivotFractionX-impl(long)>($l2);

        $r31 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        $i3 = virtualinvoke $r31.<android.graphics.RenderNode: int getWidth()>();

        $f11 = (float) $i3;

        $f12 = $f10 * $f11;

        virtualinvoke $r30.<android.graphics.RenderNode: boolean setPivotX(float)>($f12);

        $r32 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        $l4 = r0.<androidx.ui.core.RenderNodeLayer: long transformOrigin>;

        $f13 = staticinvoke <androidx.ui.core.TransformOrigin: float getPivotFractionY-impl(long)>($l4);

        $r33 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        $i5 = virtualinvoke $r33.<android.graphics.RenderNode: int getHeight()>();

        $f14 = (float) $i5;

        $f15 = $f13 * $f14;

        virtualinvoke $r32.<android.graphics.RenderNode: boolean setPivotY(float)>($f15);

        $r34 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        $r35 = virtualinvoke r0.<androidx.ui.core.RenderNodeLayer: androidx.ui.core.DrawLayerModifier getDrawLayerModifier()>();

        $z19 = interfaceinvoke $r35.<androidx.ui.core.DrawLayerModifier: boolean getClipToOutline()>();

        if $z19 == 0 goto label3;

        $r8 = virtualinvoke r0.<androidx.ui.core.RenderNodeLayer: androidx.ui.core.DrawLayerModifier getDrawLayerModifier()>();

        $r9 = interfaceinvoke $r8.<androidx.ui.core.DrawLayerModifier: androidx.ui.graphics.Shape getOutlineShape()>();

        if $r9 == null goto label3;

        $z20 = 1;

        goto label4;

     label3:
        $z20 = 0;

     label4:
        virtualinvoke $r34.<android.graphics.RenderNode: boolean setClipToOutline(boolean)>($z20);

        $r36 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        $r37 = virtualinvoke r0.<androidx.ui.core.RenderNodeLayer: androidx.ui.core.DrawLayerModifier getDrawLayerModifier()>();

        $z21 = interfaceinvoke $r37.<androidx.ui.core.DrawLayerModifier: boolean getClipToBounds()>();

        virtualinvoke $r36.<android.graphics.RenderNode: boolean setClipToBounds(boolean)>($z21);

        $r38 = r0.<androidx.ui.core.RenderNodeLayer: androidx.ui.core.OutlineResolver outlineResolver>;

        $r39 = virtualinvoke r0.<androidx.ui.core.RenderNodeLayer: androidx.ui.core.DrawLayerModifier getDrawLayerModifier()>();

        $r40 = interfaceinvoke $r39.<androidx.ui.core.DrawLayerModifier: androidx.ui.graphics.Shape getOutlineShape()>();

        $r41 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        $f16 = virtualinvoke $r41.<android.graphics.RenderNode: float getAlpha()>();

        z1 = virtualinvoke $r38.<androidx.ui.core.OutlineResolver: boolean update(androidx.ui.graphics.Shape,float)>($r40, $f16);

        $r42 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        $r43 = r0.<androidx.ui.core.RenderNodeLayer: androidx.ui.core.OutlineResolver outlineResolver>;

        $r44 = virtualinvoke $r43.<androidx.ui.core.OutlineResolver: android.graphics.Outline getOutline()>();

        virtualinvoke $r42.<android.graphics.RenderNode: boolean setOutline(android.graphics.Outline)>($r44);

        $r45 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        $z22 = virtualinvoke $r45.<android.graphics.RenderNode: boolean getClipToOutline()>();

        if $z22 == 0 goto label5;

        $r6 = r0.<androidx.ui.core.RenderNodeLayer: androidx.ui.core.OutlineResolver outlineResolver>;

        $r7 = virtualinvoke $r6.<androidx.ui.core.OutlineResolver: androidx.ui.graphics.Path getClipPath()>();

        if $r7 == null goto label5;

        $z23 = 1;

        goto label6;

     label5:
        $z23 = 0;

     label6:
        z2 = $z23;

        if z0 != z2 goto label7;

        if z2 == 0 goto label8;

        if z1 == 0 goto label8;

     label7:
        virtualinvoke r0.<androidx.ui.core.RenderNodeLayer: void invalidate()>();

     label8:
        $z24 = r0.<androidx.ui.core.RenderNodeLayer: boolean drawnWithZ>;

        if $z24 != 0 goto label9;

        $r3 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        $f0 = virtualinvoke $r3.<android.graphics.RenderNode: float getElevation()>();

        $b1 = $f0 cmpl 0.0F;

        if $b1 <= 0 goto label9;

        $r4 = virtualinvoke r0.<androidx.ui.core.RenderNodeLayer: kotlin.jvm.functions.Function0 getInvalidateParentLayer()>();

        interfaceinvoke $r4.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

     label9:
        return;
    }

    public void resize(androidx.ui.unit.IntPxSize)
    {
        androidx.ui.core.RenderNodeLayer r0;
        androidx.ui.unit.IntPxSize r1, r15, r17;
        int i0, $i10, $i11, $i12, $i13, $i14, $i15, $i18, $i19, $i23, $i25, i26, $i28, i29, $i30, $i31;
        long l1, l2, l3, l4, l5, $l6, $l7, $l8, $l9, $l16, $l17, $l20, $l21, l22, l24, $l27;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        boolean z1, z2, $z5, z10, z13;
        androidx.ui.core.OutlineResolver r2, $r12;
        androidx.ui.unit.PxSize r3, $r11;
        android.graphics.RenderNode $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r13;
        android.graphics.Outline $r14;

        r0 := @this: androidx.ui.core.RenderNodeLayer;

        r1 := @parameter0: androidx.ui.unit.IntPxSize;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "size");

        r15 = r1;

        l22 = virtualinvoke r15.<androidx.ui.unit.IntPxSize: long getValue()>();

        $l6 = l22 >> 32;

        $i23 = (int) $l6;

        i0 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i23);

        z10 = 0;

        l24 = virtualinvoke r1.<androidx.ui.unit.IntPxSize: long getValue()>();

        $l7 = l24 & 4294967295L;

        $i25 = (int) $l7;

        i26 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i25);

        $r4 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        $l8 = r0.<androidx.ui.core.RenderNodeLayer: long transformOrigin>;

        $f2 = staticinvoke <androidx.ui.core.TransformOrigin: float getPivotFractionX-impl(long)>($l8);

        $f3 = (float) i0;

        $f4 = $f2 * $f3;

        virtualinvoke $r4.<android.graphics.RenderNode: boolean setPivotX(float)>($f4);

        $r5 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        $l9 = r0.<androidx.ui.core.RenderNodeLayer: long transformOrigin>;

        $f5 = staticinvoke <androidx.ui.core.TransformOrigin: float getPivotFractionY-impl(long)>($l9);

        $f6 = (float) i26;

        $f7 = $f5 * $f6;

        virtualinvoke $r5.<android.graphics.RenderNode: boolean setPivotY(float)>($f7);

        $r7 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        $r6 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        $i10 = virtualinvoke $r6.<android.graphics.RenderNode: int getLeft()>();

        $r8 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        $i11 = virtualinvoke $r8.<android.graphics.RenderNode: int getTop()>();

        $r9 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        $i12 = virtualinvoke $r9.<android.graphics.RenderNode: int getLeft()>();

        $i13 = $i12 + i0;

        $r10 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        $i14 = virtualinvoke $r10.<android.graphics.RenderNode: int getTop()>();

        $i15 = $i14 + i26;

        $z5 = virtualinvoke $r7.<android.graphics.RenderNode: boolean setPosition(int,int,int,int)>($i10, $i11, $i13, $i15);

        if $z5 == 0 goto label1;

        r2 = r0.<androidx.ui.core.RenderNodeLayer: androidx.ui.core.OutlineResolver outlineResolver>;

        z13 = 0;

        r17 = r1;

        $l27 = virtualinvoke r17.<androidx.ui.unit.IntPxSize: long getValue()>();

        $l16 = $l27 >> 32;

        $i28 = (int) $l16;

        i29 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i28);

        l1 = virtualinvoke r1.<androidx.ui.unit.IntPxSize: long getValue()>();

        $l17 = l1 & 4294967295L;

        $i30 = (int) $l17;

        $i31 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i30);

        $f8 = (float) i29;

        $f10 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f8);

        $f9 = (float) $i31;

        $f11 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f9);

        f0 = $f10;

        z1 = 0;

        $i18 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f0);

        l2 = (long) $i18;

        f1 = $f11;

        z2 = 0;

        $i19 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f1);

        l3 = (long) $i19;

        $l21 = l2 << 32;

        $l20 = l3 & 4294967295L;

        l4 = $l21 | $l20;

        l5 = l4;

        $r11 = new androidx.ui.unit.PxSize;

        specialinvoke $r11.<androidx.ui.unit.PxSize: void <init>(long)>(l5);

        r3 = $r11;

        virtualinvoke r2.<androidx.ui.core.OutlineResolver: void update(androidx.ui.unit.PxSize)>(r3);

        $r13 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        $r12 = r0.<androidx.ui.core.RenderNodeLayer: androidx.ui.core.OutlineResolver outlineResolver>;

        $r14 = virtualinvoke $r12.<androidx.ui.core.OutlineResolver: android.graphics.Outline getOutline()>();

        virtualinvoke $r13.<android.graphics.RenderNode: boolean setOutline(android.graphics.Outline)>($r14);

        virtualinvoke r0.<androidx.ui.core.RenderNodeLayer: void invalidate()>();

     label1:
        return;
    }

    public void move(androidx.ui.unit.IntPxPosition)
    {
        androidx.ui.core.RenderNodeLayer r0;
        androidx.ui.unit.IntPxPosition r1, r4, r6;
        long $l0, $l3, l6, l9;
        android.graphics.RenderNode $r2, $r3, r5, r7;
        int $i1, $i2, $i4, $i5, $i7, i8, $i10, i11;

        r0 := @this: androidx.ui.core.RenderNodeLayer;

        r1 := @parameter0: androidx.ui.unit.IntPxPosition;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "position");

        r4 = r1;

        r5 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        l6 = virtualinvoke r4.<androidx.ui.unit.IntPxPosition: long getValue()>();

        $l0 = l6 >> 32;

        $i7 = (int) $l0;

        i8 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i7);

        $r2 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        $i1 = virtualinvoke $r2.<android.graphics.RenderNode: int getLeft()>();

        $i2 = i8 - $i1;

        virtualinvoke r5.<android.graphics.RenderNode: boolean offsetLeftAndRight(int)>($i2);

        r6 = r1;

        r7 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        l9 = virtualinvoke r6.<androidx.ui.unit.IntPxPosition: long getValue()>();

        $l3 = l9 & 4294967295L;

        $i10 = (int) $l3;

        i11 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i10);

        $r3 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        $i4 = virtualinvoke $r3.<android.graphics.RenderNode: int getTop()>();

        $i5 = i11 - $i4;

        virtualinvoke r7.<android.graphics.RenderNode: boolean offsetTopAndBottom(int)>($i5);

        return;
    }

    public void invalidate()
    {
        androidx.ui.core.RenderNodeLayer r0;
        androidx.ui.core.AndroidComposeView r1, $r3;
        java.util.Collection r2;
        boolean z0, $z1, $z2;
        java.util.List $r4;

        r0 := @this: androidx.ui.core.RenderNodeLayer;

        $z1 = r0.<androidx.ui.core.RenderNodeLayer: boolean isDirty>;

        if $z1 != 0 goto label1;

        $z2 = r0.<androidx.ui.core.RenderNodeLayer: boolean isDestroyed>;

        if $z2 != 0 goto label1;

        $r3 = virtualinvoke r0.<androidx.ui.core.RenderNodeLayer: androidx.ui.core.AndroidComposeView getOwnerView()>();

        virtualinvoke $r3.<androidx.ui.core.AndroidComposeView: void invalidate()>();

        r1 = virtualinvoke r0.<androidx.ui.core.RenderNodeLayer: androidx.ui.core.AndroidComposeView getOwnerView()>();

        $r4 = virtualinvoke r1.<androidx.ui.core.AndroidComposeView: java.util.List getDirtyLayers$ui_platform_release()>();

        r2 = (java.util.Collection) $r4;

        z0 = 0;

        interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>(r0);

        r0.<androidx.ui.core.RenderNodeLayer: boolean isDirty> = 1;

     label1:
        return;
    }

    public void drawLayer(androidx.ui.graphics.Canvas)
    {
        androidx.ui.core.RenderNodeLayer r0;
        androidx.ui.graphics.Canvas r1;
        android.graphics.Canvas r2;
        boolean $z0, $z1, $z2, $z3;
        kotlin.jvm.functions.Function1 $r3;
        android.graphics.RenderNode $r5, $r6;
        float $f0;
        byte $b0;

        r0 := @this: androidx.ui.core.RenderNodeLayer;

        r1 := @parameter0: androidx.ui.graphics.Canvas;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "canvas");

        r2 = interfaceinvoke r1.<androidx.ui.graphics.Canvas: android.graphics.Canvas getNativeCanvas()>();

        $z0 = virtualinvoke r2.<android.graphics.Canvas: boolean isHardwareAccelerated()>();

        if $z0 == 0 goto label4;

        virtualinvoke r0.<androidx.ui.core.RenderNodeLayer: void updateDisplayList()>();

        $r5 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        $f0 = virtualinvoke $r5.<android.graphics.RenderNode: float getElevation()>();

        $b0 = $f0 cmpl 0.0F;

        if $b0 <= 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        r0.<androidx.ui.core.RenderNodeLayer: boolean drawnWithZ> = $z3;

        $z1 = r0.<androidx.ui.core.RenderNodeLayer: boolean drawnWithZ>;

        if $z1 == 0 goto label3;

        interfaceinvoke r1.<androidx.ui.graphics.Canvas: void enableZ()>();

     label3:
        $r6 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        virtualinvoke r2.<android.graphics.Canvas: void drawRenderNode(android.graphics.RenderNode)>($r6);

        $z2 = r0.<androidx.ui.core.RenderNodeLayer: boolean drawnWithZ>;

        if $z2 == 0 goto label5;

        interfaceinvoke r1.<androidx.ui.graphics.Canvas: void disableZ()>();

        goto label5;

     label4:
        $r3 = virtualinvoke r0.<androidx.ui.core.RenderNodeLayer: kotlin.jvm.functions.Function1 getDrawBlock()>();

        interfaceinvoke $r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

     label5:
        r0.<androidx.ui.core.RenderNodeLayer: boolean isDirty> = 0;

        return;
    }

    public void updateDisplayList()
    {
        androidx.ui.core.RenderNodeLayer r0;
        android.graphics.RecordingCanvas r1, r13;
        androidx.ui.graphics.Path r2;
        boolean z0, $z1, $z2, $z3, $z4;
        android.graphics.RenderNode $r3, $r6, $r11, $r12;
        android.graphics.Canvas $r4;
        androidx.ui.core.OutlineResolver $r5;
        androidx.ui.core.AndroidComposeView $r7;
        androidx.ui.core.RenderNodeLayer$updateDisplayList$1 $r8;
        androidx.ui.core.OwnedLayer $r9;
        kotlin.jvm.functions.Function0 $r10;
        androidx.ui.graphics.Canvas r14;

        r0 := @this: androidx.ui.core.RenderNodeLayer;

        $z1 = r0.<androidx.ui.core.RenderNodeLayer: boolean isDirty>;

        if $z1 != 0 goto label1;

        $r12 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        $z3 = virtualinvoke $r12.<android.graphics.RenderNode: boolean hasDisplayList()>();

        if $z3 != 0 goto label6;

     label1:
        r0.<androidx.ui.core.RenderNodeLayer: boolean isDirty> = 0;

        $r3 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        r13 = virtualinvoke $r3.<android.graphics.RenderNode: android.graphics.RecordingCanvas beginRecording()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r13, "renderNode.beginRecording()");

        r1 = r13;

        $r4 = (android.graphics.Canvas) r1;

        r14 = staticinvoke <androidx.ui.graphics.AndroidCanvasKt: androidx.ui.graphics.Canvas Canvas(android.graphics.Canvas)>($r4);

        $r5 = r0.<androidx.ui.core.RenderNodeLayer: androidx.ui.core.OutlineResolver outlineResolver>;

        r2 = virtualinvoke $r5.<androidx.ui.core.OutlineResolver: androidx.ui.graphics.Path getClipPath()>();

        $r6 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        $z2 = virtualinvoke $r6.<android.graphics.RenderNode: boolean getClipToOutline()>();

        if $z2 == 0 goto label2;

        if r2 == null goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        z0 = $z4;

        if z0 == 0 goto label4;

        interfaceinvoke r14.<androidx.ui.graphics.Canvas: void save()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r2);

        interfaceinvoke r14.<androidx.ui.graphics.Canvas: void clipPath(androidx.ui.graphics.Path)>(r2);

     label4:
        $r7 = virtualinvoke r0.<androidx.ui.core.RenderNodeLayer: androidx.ui.core.AndroidComposeView getOwnerView()>();

        $r9 = (androidx.ui.core.OwnedLayer) r0;

        $r8 = new androidx.ui.core.RenderNodeLayer$updateDisplayList$1;

        specialinvoke $r8.<androidx.ui.core.RenderNodeLayer$updateDisplayList$1: void <init>(androidx.ui.core.RenderNodeLayer,androidx.ui.graphics.Canvas)>(r0, r14);

        $r10 = (kotlin.jvm.functions.Function0) $r8;

        virtualinvoke $r7.<androidx.ui.core.AndroidComposeView: void observeLayerModelReads(androidx.ui.core.OwnedLayer,kotlin.jvm.functions.Function0)>($r9, $r10);

        if z0 == 0 goto label5;

        interfaceinvoke r14.<androidx.ui.graphics.Canvas: void restore()>();

     label5:
        $r11 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        virtualinvoke $r11.<android.graphics.RenderNode: void endRecording()>();

     label6:
        return;
    }

    public void destroy()
    {
        androidx.ui.core.RenderNodeLayer r0;
        androidx.ui.core.AndroidComposeView r1;
        java.util.Collection r2;
        boolean z0;
        java.util.List $r3;

        r0 := @this: androidx.ui.core.RenderNodeLayer;

        r0.<androidx.ui.core.RenderNodeLayer: boolean isDestroyed> = 1;

        r1 = virtualinvoke r0.<androidx.ui.core.RenderNodeLayer: androidx.ui.core.AndroidComposeView getOwnerView()>();

        $r3 = virtualinvoke r1.<androidx.ui.core.AndroidComposeView: java.util.List getDirtyLayers$ui_platform_release()>();

        r2 = (java.util.Collection) $r3;

        z0 = 0;

        interfaceinvoke r2.<java.util.Collection: boolean remove(java.lang.Object)>(r0);

        return;
    }

    public android.graphics.Matrix getMatrix()
    {
        androidx.ui.core.RenderNodeLayer r0;
        android.graphics.Matrix r1, r2, r3, r4, $r6, $r7;
        boolean z0, z1;
        android.graphics.RenderNode $r5;

        r0 := @this: androidx.ui.core.RenderNodeLayer;

        r2 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.Matrix cacheMatrix>;

        if r2 != null goto label1;

        $r6 = new android.graphics.Matrix;

        specialinvoke $r6.<android.graphics.Matrix: void <init>()>();

        r3 = $r6;

        z0 = 0;

        z1 = 0;

        r4 = r3;

        r0.<androidx.ui.core.RenderNodeLayer: android.graphics.Matrix cacheMatrix> = r4;

        $r7 = r3;

        goto label2;

     label1:
        $r7 = r2;

     label2:
        r1 = $r7;

        $r5 = r0.<androidx.ui.core.RenderNodeLayer: android.graphics.RenderNode renderNode>;

        virtualinvoke $r5.<android.graphics.RenderNode: void getMatrix(android.graphics.Matrix)>(r1);

        return r1;
    }

androidx.ui.core.RenderNodeLayer$updateDisplayList$1$1
<androidx.ui.core.RenderNodeLayer$updateDisplayList$1$1: androidx.ui.core.RenderNodeLayer $this>
<androidx.ui.core.RenderNodeLayer$updateDisplayList$1$1: androidx.ui.graphics.Canvas $this$1>
    void <init>(androidx.ui.core.RenderNodeLayer, androidx.ui.graphics.Canvas)
    {
        androidx.ui.core.RenderNodeLayer$updateDisplayList$1$1 r0;
        androidx.ui.core.RenderNodeLayer $r1;
        androidx.ui.graphics.Canvas $r2;

        r0 := @this: androidx.ui.core.RenderNodeLayer$updateDisplayList$1$1;

        $r1 := @parameter0: androidx.ui.core.RenderNodeLayer;

        $r2 := @parameter1: androidx.ui.graphics.Canvas;

        r0.<androidx.ui.core.RenderNodeLayer$updateDisplayList$1$1: androidx.ui.core.RenderNodeLayer $this> = $r1;

        r0.<androidx.ui.core.RenderNodeLayer$updateDisplayList$1$1: androidx.ui.graphics.Canvas $this$1> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.ui.core.RenderNodeLayer$updateDisplayList$1$1 r0;
        androidx.ui.core.RenderNodeLayer $r1;
        kotlin.jvm.functions.Function1 $r2;
        androidx.ui.graphics.Canvas $r3;

        r0 := @this: androidx.ui.core.RenderNodeLayer$updateDisplayList$1$1;

        $r1 = r0.<androidx.ui.core.RenderNodeLayer$updateDisplayList$1$1: androidx.ui.core.RenderNodeLayer $this>;

        $r2 = virtualinvoke $r1.<androidx.ui.core.RenderNodeLayer: kotlin.jvm.functions.Function1 getDrawBlock()>();

        $r3 = r0.<androidx.ui.core.RenderNodeLayer$updateDisplayList$1$1: androidx.ui.graphics.Canvas $this$1>;

        interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.ui.core.RenderNodeLayer$updateDisplayList$1$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.ui.core.RenderNodeLayer$updateDisplayList$1$1;

        virtualinvoke r0.<androidx.ui.core.RenderNodeLayer$updateDisplayList$1$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.ui.core.RenderNodeLayer$updateDisplayList$1
<androidx.ui.core.RenderNodeLayer$updateDisplayList$1: androidx.ui.core.RenderNodeLayer $this>
<androidx.ui.core.RenderNodeLayer$updateDisplayList$1: androidx.ui.graphics.Canvas $uiCanvas>
    void <init>(androidx.ui.core.RenderNodeLayer, androidx.ui.graphics.Canvas)
    {
        androidx.ui.core.RenderNodeLayer$updateDisplayList$1 r0;
        androidx.ui.core.RenderNodeLayer $r1;
        androidx.ui.graphics.Canvas $r2;

        r0 := @this: androidx.ui.core.RenderNodeLayer$updateDisplayList$1;

        $r1 := @parameter0: androidx.ui.core.RenderNodeLayer;

        $r2 := @parameter1: androidx.ui.graphics.Canvas;

        r0.<androidx.ui.core.RenderNodeLayer$updateDisplayList$1: androidx.ui.core.RenderNodeLayer $this> = $r1;

        r0.<androidx.ui.core.RenderNodeLayer$updateDisplayList$1: androidx.ui.graphics.Canvas $uiCanvas> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.ui.core.RenderNodeLayer$updateDisplayList$1 r0;
        androidx.ui.core.RenderNodeLayer $r1;
        kotlin.jvm.functions.Function1 $r2;
        androidx.ui.graphics.Canvas $r3;

        r0 := @this: androidx.ui.core.RenderNodeLayer$updateDisplayList$1;

        $r1 = r0.<androidx.ui.core.RenderNodeLayer$updateDisplayList$1: androidx.ui.core.RenderNodeLayer $this>;

        $r2 = virtualinvoke $r1.<androidx.ui.core.RenderNodeLayer: kotlin.jvm.functions.Function1 getDrawBlock()>();

        $r3 = r0.<androidx.ui.core.RenderNodeLayer$updateDisplayList$1: androidx.ui.graphics.Canvas $uiCanvas>;

        interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.ui.core.RenderNodeLayer$updateDisplayList$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.ui.core.RenderNodeLayer$updateDisplayList$1;

        virtualinvoke r0.<androidx.ui.core.RenderNodeLayer$updateDisplayList$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

