androidx.compose.ui.focus.FocusModifier
<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusModifier$Companion Companion>
<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusModifier parent>
<androidx.compose.ui.focus.FocusModifier: androidx.compose.runtime.collection.MutableVector children>
<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusStateImpl focusState>
<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusModifier focusedChild>
<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusEventModifierLocal focusEventListener>
<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.input.focus.FocusAwareInputModifier rotaryScrollParent>
<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.modifier.ModifierLocalReadScope modifierLocalReadScope>
<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.layout.BeyondBoundsLayout beyondBoundsLayoutParent>
<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusPropertiesModifier focusPropertiesModifier>
<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusProperties focusProperties>
<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusRequesterModifierLocal focusRequester>
<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.node.NodeCoordinator coordinator>
<androidx.compose.ui.focus.FocusModifier: boolean focusRequestedOnPlaced>
<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.input.key.KeyInputModifier keyInputModifier>
<androidx.compose.ui.focus.FocusModifier: androidx.compose.runtime.collection.MutableVector keyInputChildren>
<androidx.compose.ui.focus.FocusModifier: kotlin.jvm.functions.Function1 RefreshFocusProperties>
    public void <init>(androidx.compose.ui.focus.FocusStateImpl, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.focus.FocusModifier r0;
        androidx.compose.ui.focus.FocusStateImpl r1;
        kotlin.jvm.functions.Function1 r2;
        androidx.compose.runtime.collection.MutableVector $r3, $r7;
        androidx.compose.ui.focus.FocusModifier[] $r4;
        androidx.compose.ui.focus.FocusPropertiesImpl $r5;
        androidx.compose.ui.focus.FocusProperties $r6;
        androidx.compose.ui.input.key.KeyInputModifier[] $r8;
        byte b0, b1;

        r0 := @this: androidx.compose.ui.focus.FocusModifier;

        r1 := @parameter0: androidx.compose.ui.focus.FocusStateImpl;

        r2 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "initialFocus");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "inspectorInfo");

        specialinvoke r0.<androidx.compose.ui.platform.InspectorValueInfo: void <init>(kotlin.jvm.functions.Function1)>(r2);

        b0 = 16;

        $r3 = new androidx.compose.runtime.collection.MutableVector;

        $r4 = newarray (androidx.compose.ui.focus.FocusModifier)[b0];

        specialinvoke $r3.<androidx.compose.runtime.collection.MutableVector: void <init>(java.lang.Object[],int)>($r4, 0);

        r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.runtime.collection.MutableVector children> = $r3;

        r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusStateImpl focusState> = r1;

        $r5 = new androidx.compose.ui.focus.FocusPropertiesImpl;

        specialinvoke $r5.<androidx.compose.ui.focus.FocusPropertiesImpl: void <init>()>();

        $r6 = (androidx.compose.ui.focus.FocusProperties) $r5;

        r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusProperties focusProperties> = $r6;

        b1 = 16;

        $r7 = new androidx.compose.runtime.collection.MutableVector;

        $r8 = newarray (androidx.compose.ui.input.key.KeyInputModifier)[b1];

        specialinvoke $r7.<androidx.compose.runtime.collection.MutableVector: void <init>(java.lang.Object[],int)>($r8, 0);

        r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.runtime.collection.MutableVector keyInputChildren> = $r7;

        return;
    }

    public void <init>(androidx.compose.ui.focus.FocusStateImpl, kotlin.jvm.functions.Function1, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.ui.focus.FocusModifier r0;
        androidx.compose.ui.focus.FocusStateImpl r1;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r2;
        kotlin.jvm.functions.Function1 r3;

        r0 := @this: androidx.compose.ui.focus.FocusModifier;

        r1 := @parameter0: androidx.compose.ui.focus.FocusStateImpl;

        r3 := @parameter1: kotlin.jvm.functions.Function1;

        i0 := @parameter2: int;

        r2 := @parameter3: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r3 = staticinvoke <androidx.compose.ui.platform.InspectableValueKt: kotlin.jvm.functions.Function1 getNoInspectorInfo()>();

     label1:
        specialinvoke r0.<androidx.compose.ui.focus.FocusModifier: void <init>(androidx.compose.ui.focus.FocusStateImpl,kotlin.jvm.functions.Function1)>(r1, r3);

        return;
    }

    public final androidx.compose.ui.focus.FocusModifier getParent()
    {
        androidx.compose.ui.focus.FocusModifier r0, $r1;

        r0 := @this: androidx.compose.ui.focus.FocusModifier;

        $r1 = r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusModifier parent>;

        return $r1;
    }

    public final void setParent(androidx.compose.ui.focus.FocusModifier)
    {
        androidx.compose.ui.focus.FocusModifier r0, r1;

        r0 := @this: androidx.compose.ui.focus.FocusModifier;

        r1 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusModifier parent> = r1;

        return;
    }

    public final androidx.compose.runtime.collection.MutableVector getChildren()
    {
        androidx.compose.ui.focus.FocusModifier r0;
        androidx.compose.runtime.collection.MutableVector $r1;

        r0 := @this: androidx.compose.ui.focus.FocusModifier;

        $r1 = r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.runtime.collection.MutableVector children>;

        return $r1;
    }

    public final androidx.compose.ui.focus.FocusStateImpl getFocusState()
    {
        androidx.compose.ui.focus.FocusModifier r0;
        androidx.compose.ui.focus.FocusStateImpl $r1;

        r0 := @this: androidx.compose.ui.focus.FocusModifier;

        $r1 = r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusStateImpl focusState>;

        return $r1;
    }

    public final void setFocusState(androidx.compose.ui.focus.FocusStateImpl)
    {
        androidx.compose.ui.focus.FocusModifier r0;
        androidx.compose.ui.focus.FocusStateImpl r1;

        r0 := @this: androidx.compose.ui.focus.FocusModifier;

        r1 := @parameter0: androidx.compose.ui.focus.FocusStateImpl;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusStateImpl focusState> = r1;

        staticinvoke <androidx.compose.ui.focus.FocusTransactionsKt: void sendOnFocusEvent(androidx.compose.ui.focus.FocusModifier)>(r0);

        return;
    }

    public final androidx.compose.ui.focus.FocusModifier getFocusedChild()
    {
        androidx.compose.ui.focus.FocusModifier r0, $r1;

        r0 := @this: androidx.compose.ui.focus.FocusModifier;

        $r1 = r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusModifier focusedChild>;

        return $r1;
    }

    public final void setFocusedChild(androidx.compose.ui.focus.FocusModifier)
    {
        androidx.compose.ui.focus.FocusModifier r0, r1;

        r0 := @this: androidx.compose.ui.focus.FocusModifier;

        r1 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusModifier focusedChild> = r1;

        return;
    }

    public final androidx.compose.ui.focus.FocusEventModifierLocal getFocusEventListener()
    {
        androidx.compose.ui.focus.FocusModifier r0;
        androidx.compose.ui.focus.FocusEventModifierLocal $r1;

        r0 := @this: androidx.compose.ui.focus.FocusModifier;

        $r1 = r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusEventModifierLocal focusEventListener>;

        return $r1;
    }

    public final void setFocusEventListener(androidx.compose.ui.focus.FocusEventModifierLocal)
    {
        androidx.compose.ui.focus.FocusModifier r0;
        androidx.compose.ui.focus.FocusEventModifierLocal r1;

        r0 := @this: androidx.compose.ui.focus.FocusModifier;

        r1 := @parameter0: androidx.compose.ui.focus.FocusEventModifierLocal;

        r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusEventModifierLocal focusEventListener> = r1;

        return;
    }

    private static void getRotaryScrollParent$annotations()
    {
        return;
    }

    public final androidx.compose.ui.modifier.ModifierLocalReadScope getModifierLocalReadScope()
    {
        androidx.compose.ui.focus.FocusModifier r0;
        androidx.compose.ui.modifier.ModifierLocalReadScope $r1;

        r0 := @this: androidx.compose.ui.focus.FocusModifier;

        $r1 = r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.modifier.ModifierLocalReadScope modifierLocalReadScope>;

        if $r1 == null goto label1;

        return $r1;

     label1:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("modifierLocalReadScope");

        return null;
    }

    public final void setModifierLocalReadScope(androidx.compose.ui.modifier.ModifierLocalReadScope)
    {
        androidx.compose.ui.focus.FocusModifier r0;
        androidx.compose.ui.modifier.ModifierLocalReadScope r1;

        r0 := @this: androidx.compose.ui.focus.FocusModifier;

        r1 := @parameter0: androidx.compose.ui.modifier.ModifierLocalReadScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.modifier.ModifierLocalReadScope modifierLocalReadScope> = r1;

        return;
    }

    public final androidx.compose.ui.layout.BeyondBoundsLayout getBeyondBoundsLayoutParent()
    {
        androidx.compose.ui.focus.FocusModifier r0;
        androidx.compose.ui.layout.BeyondBoundsLayout $r1;

        r0 := @this: androidx.compose.ui.focus.FocusModifier;

        $r1 = r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.layout.BeyondBoundsLayout beyondBoundsLayoutParent>;

        return $r1;
    }

    public final void setBeyondBoundsLayoutParent(androidx.compose.ui.layout.BeyondBoundsLayout)
    {
        androidx.compose.ui.focus.FocusModifier r0;
        androidx.compose.ui.layout.BeyondBoundsLayout r1;

        r0 := @this: androidx.compose.ui.focus.FocusModifier;

        r1 := @parameter0: androidx.compose.ui.layout.BeyondBoundsLayout;

        r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.layout.BeyondBoundsLayout beyondBoundsLayoutParent> = r1;

        return;
    }

    public final androidx.compose.ui.focus.FocusPropertiesModifier getFocusPropertiesModifier()
    {
        androidx.compose.ui.focus.FocusModifier r0;
        androidx.compose.ui.focus.FocusPropertiesModifier $r1;

        r0 := @this: androidx.compose.ui.focus.FocusModifier;

        $r1 = r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusPropertiesModifier focusPropertiesModifier>;

        return $r1;
    }

    public final void setFocusPropertiesModifier(androidx.compose.ui.focus.FocusPropertiesModifier)
    {
        androidx.compose.ui.focus.FocusModifier r0;
        androidx.compose.ui.focus.FocusPropertiesModifier r1;

        r0 := @this: androidx.compose.ui.focus.FocusModifier;

        r1 := @parameter0: androidx.compose.ui.focus.FocusPropertiesModifier;

        r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusPropertiesModifier focusPropertiesModifier> = r1;

        return;
    }

    public final androidx.compose.ui.focus.FocusProperties getFocusProperties()
    {
        androidx.compose.ui.focus.FocusModifier r0;
        androidx.compose.ui.focus.FocusProperties $r1;

        r0 := @this: androidx.compose.ui.focus.FocusModifier;

        $r1 = r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusProperties focusProperties>;

        return $r1;
    }

    public final androidx.compose.ui.focus.FocusRequesterModifierLocal getFocusRequester()
    {
        androidx.compose.ui.focus.FocusModifier r0;
        androidx.compose.ui.focus.FocusRequesterModifierLocal $r1;

        r0 := @this: androidx.compose.ui.focus.FocusModifier;

        $r1 = r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusRequesterModifierLocal focusRequester>;

        return $r1;
    }

    public final void setFocusRequester(androidx.compose.ui.focus.FocusRequesterModifierLocal)
    {
        androidx.compose.ui.focus.FocusModifier r0;
        androidx.compose.ui.focus.FocusRequesterModifierLocal r1;

        r0 := @this: androidx.compose.ui.focus.FocusModifier;

        r1 := @parameter0: androidx.compose.ui.focus.FocusRequesterModifierLocal;

        r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusRequesterModifierLocal focusRequester> = r1;

        return;
    }

    public final androidx.compose.ui.node.NodeCoordinator getCoordinator()
    {
        androidx.compose.ui.focus.FocusModifier r0;
        androidx.compose.ui.node.NodeCoordinator $r1;

        r0 := @this: androidx.compose.ui.focus.FocusModifier;

        $r1 = r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.node.NodeCoordinator coordinator>;

        return $r1;
    }

    public final void setCoordinator(androidx.compose.ui.node.NodeCoordinator)
    {
        androidx.compose.ui.focus.FocusModifier r0;
        androidx.compose.ui.node.NodeCoordinator r1;

        r0 := @this: androidx.compose.ui.focus.FocusModifier;

        r1 := @parameter0: androidx.compose.ui.node.NodeCoordinator;

        r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.node.NodeCoordinator coordinator> = r1;

        return;
    }

    public final boolean getFocusRequestedOnPlaced()
    {
        androidx.compose.ui.focus.FocusModifier r0;
        boolean $z0;

        r0 := @this: androidx.compose.ui.focus.FocusModifier;

        $z0 = r0.<androidx.compose.ui.focus.FocusModifier: boolean focusRequestedOnPlaced>;

        return $z0;
    }

    public final void setFocusRequestedOnPlaced(boolean)
    {
        androidx.compose.ui.focus.FocusModifier r0;
        boolean z0;

        r0 := @this: androidx.compose.ui.focus.FocusModifier;

        z0 := @parameter0: boolean;

        r0.<androidx.compose.ui.focus.FocusModifier: boolean focusRequestedOnPlaced> = z0;

        return;
    }

    public final androidx.compose.ui.input.key.KeyInputModifier getKeyInputModifier()
    {
        androidx.compose.ui.focus.FocusModifier r0;
        androidx.compose.ui.input.key.KeyInputModifier $r1;

        r0 := @this: androidx.compose.ui.focus.FocusModifier;

        $r1 = r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.input.key.KeyInputModifier keyInputModifier>;

        return $r1;
    }

    public final androidx.compose.runtime.collection.MutableVector getKeyInputChildren()
    {
        androidx.compose.ui.focus.FocusModifier r0;
        androidx.compose.runtime.collection.MutableVector $r1;

        r0 := @this: androidx.compose.ui.focus.FocusModifier;

        $r1 = r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.runtime.collection.MutableVector keyInputChildren>;

        return $r1;
    }

    public void onModifierLocalsUpdated(androidx.compose.ui.modifier.ModifierLocalReadScope)
    {
        androidx.compose.ui.focus.FocusModifier r0, $r9, r19, r20, $r21, $r23, r28, r35;
        androidx.compose.ui.modifier.ModifierLocalReadScope r1;
        androidx.compose.ui.node.NodeCoordinator r3;
        androidx.compose.ui.node.LayoutNode r4;
        androidx.compose.ui.node.Owner r5;
        androidx.compose.ui.focus.FocusManager r6;
        androidx.compose.ui.modifier.ProvidableModifierLocal $r7, $r24, $r31, $r38, $r42, $r46, $r50;
        androidx.compose.ui.modifier.ModifierLocal $r8, $r25, $r32, $r39, $r43, $r47, $r51;
        boolean $z1, $z6, $z8;
        androidx.compose.ui.focus.FocusRequesterModifierLocal $r10, r34, $r36, $r37;
        androidx.compose.ui.focus.FocusEventModifierLocal $r12, r27, $r29, $r30;
        androidx.compose.runtime.collection.MutableVector $r14, $r15;
        int[] $r16;
        androidx.compose.ui.focus.FocusStateImpl $r17;
        int $i0, $i1;
        java.lang.Object r18, r26, r33, $r40, $r44, $r48, $r52;
        androidx.compose.ui.input.focus.FocusAwareInputModifier $r41;
        androidx.compose.ui.layout.BeyondBoundsLayout $r45;
        androidx.compose.ui.input.key.KeyInputModifier $r49;
        androidx.compose.ui.focus.FocusPropertiesModifier $r53;

        r0 := @this: androidx.compose.ui.focus.FocusModifier;

        r1 := @parameter0: androidx.compose.ui.modifier.ModifierLocalReadScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "scope");

        virtualinvoke r0.<androidx.compose.ui.focus.FocusModifier: void setModifierLocalReadScope(androidx.compose.ui.modifier.ModifierLocalReadScope)>(r1);

        $r7 = staticinvoke <androidx.compose.ui.focus.FocusModifierKt: androidx.compose.ui.modifier.ProvidableModifierLocal getModifierLocalParentFocusModifier()>();

        $r8 = (androidx.compose.ui.modifier.ModifierLocal) $r7;

        r18 = interfaceinvoke r1.<androidx.compose.ui.modifier.ModifierLocalReadScope: java.lang.Object getCurrent(androidx.compose.ui.modifier.ModifierLocal)>($r8);

        r19 = (androidx.compose.ui.focus.FocusModifier) r18;

        r20 = r0;

        $r9 = r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusModifier parent>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r19, $r9);

        if $z1 != 0 goto label4;

        if r19 != null goto label2;

        $r17 = r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusStateImpl focusState>;

        $r16 = <androidx.compose.ui.focus.FocusModifier$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke $r17.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        $i1 = $r16[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label2;
            case 4: goto label2;
            case 5: goto label2;
            case 6: goto label2;
            default: goto label2;
        };

     label1:
        r3 = r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.node.NodeCoordinator coordinator>;

        if r3 == null goto label2;

        r4 = virtualinvoke r3.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.LayoutNode getLayoutNode()>();

        if r4 == null goto label2;

        r5 = virtualinvoke r4.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.Owner getOwner$ui_release()>();

        if r5 == null goto label2;

        r6 = interfaceinvoke r5.<androidx.compose.ui.node.Owner: androidx.compose.ui.focus.FocusManager getFocusManager()>();

        if r6 == null goto label2;

        interfaceinvoke r6.<androidx.compose.ui.focus.FocusManager: void clearFocus(boolean)>(1);

        goto label2;

     label2:
        $r21 = r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusModifier parent>;

        if $r21 == null goto label3;

        $r15 = $r21.<androidx.compose.ui.focus.FocusModifier: androidx.compose.runtime.collection.MutableVector children>;

        if $r15 == null goto label3;

        virtualinvoke $r15.<androidx.compose.runtime.collection.MutableVector: boolean remove(java.lang.Object)>(r0);

        goto label3;

     label3:
        if r19 == null goto label4;

        $r14 = r19.<androidx.compose.ui.focus.FocusModifier: androidx.compose.runtime.collection.MutableVector children>;

        if $r14 == null goto label4;

        virtualinvoke $r14.<androidx.compose.runtime.collection.MutableVector: boolean add(java.lang.Object)>(r0);

        goto label4;

     label4:
        $r23 = (androidx.compose.ui.focus.FocusModifier) r18;

        r20.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusModifier parent> = $r23;

        $r24 = staticinvoke <androidx.compose.ui.focus.FocusEventModifierKt: androidx.compose.ui.modifier.ProvidableModifierLocal getModifierLocalFocusEvent()>();

        $r25 = (androidx.compose.ui.modifier.ModifierLocal) $r24;

        r26 = interfaceinvoke r1.<androidx.compose.ui.modifier.ModifierLocalReadScope: java.lang.Object getCurrent(androidx.compose.ui.modifier.ModifierLocal)>($r25);

        r27 = (androidx.compose.ui.focus.FocusEventModifierLocal) r26;

        r28 = r0;

        $r29 = r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusEventModifierLocal focusEventListener>;

        $z6 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r27, $r29);

        if $z6 != 0 goto label6;

        $r12 = r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusEventModifierLocal focusEventListener>;

        if $r12 == null goto label5;

        virtualinvoke $r12.<androidx.compose.ui.focus.FocusEventModifierLocal: void removeFocusModifier(androidx.compose.ui.focus.FocusModifier)>(r0);

        goto label5;

     label5:
        if r27 == null goto label6;

        virtualinvoke r27.<androidx.compose.ui.focus.FocusEventModifierLocal: void addFocusModifier(androidx.compose.ui.focus.FocusModifier)>(r0);

        goto label6;

     label6:
        $r30 = (androidx.compose.ui.focus.FocusEventModifierLocal) r26;

        r28.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusEventModifierLocal focusEventListener> = $r30;

        $r31 = staticinvoke <androidx.compose.ui.focus.FocusRequesterModifierKt: androidx.compose.ui.modifier.ProvidableModifierLocal getModifierLocalFocusRequester()>();

        $r32 = (androidx.compose.ui.modifier.ModifierLocal) $r31;

        r33 = interfaceinvoke r1.<androidx.compose.ui.modifier.ModifierLocalReadScope: java.lang.Object getCurrent(androidx.compose.ui.modifier.ModifierLocal)>($r32);

        r34 = (androidx.compose.ui.focus.FocusRequesterModifierLocal) r33;

        r35 = r0;

        $r36 = r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusRequesterModifierLocal focusRequester>;

        $z8 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r34, $r36);

        if $z8 != 0 goto label8;

        $r10 = r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusRequesterModifierLocal focusRequester>;

        if $r10 == null goto label7;

        virtualinvoke $r10.<androidx.compose.ui.focus.FocusRequesterModifierLocal: void removeFocusModifier(androidx.compose.ui.focus.FocusModifier)>(r0);

        goto label7;

     label7:
        if r34 == null goto label8;

        virtualinvoke r34.<androidx.compose.ui.focus.FocusRequesterModifierLocal: void addFocusModifier(androidx.compose.ui.focus.FocusModifier)>(r0);

        goto label8;

     label8:
        $r37 = (androidx.compose.ui.focus.FocusRequesterModifierLocal) r33;

        r35.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusRequesterModifierLocal focusRequester> = $r37;

        $r38 = staticinvoke <androidx.compose.ui.input.rotary.RotaryInputModifierKt: androidx.compose.ui.modifier.ProvidableModifierLocal getModifierLocalRotaryScrollParent()>();

        $r39 = (androidx.compose.ui.modifier.ModifierLocal) $r38;

        $r40 = interfaceinvoke r1.<androidx.compose.ui.modifier.ModifierLocalReadScope: java.lang.Object getCurrent(androidx.compose.ui.modifier.ModifierLocal)>($r39);

        $r41 = (androidx.compose.ui.input.focus.FocusAwareInputModifier) $r40;

        r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.input.focus.FocusAwareInputModifier rotaryScrollParent> = $r41;

        $r42 = staticinvoke <androidx.compose.ui.layout.BeyondBoundsLayoutKt: androidx.compose.ui.modifier.ProvidableModifierLocal getModifierLocalBeyondBoundsLayout()>();

        $r43 = (androidx.compose.ui.modifier.ModifierLocal) $r42;

        $r44 = interfaceinvoke r1.<androidx.compose.ui.modifier.ModifierLocalReadScope: java.lang.Object getCurrent(androidx.compose.ui.modifier.ModifierLocal)>($r43);

        $r45 = (androidx.compose.ui.layout.BeyondBoundsLayout) $r44;

        r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.layout.BeyondBoundsLayout beyondBoundsLayoutParent> = $r45;

        $r46 = staticinvoke <androidx.compose.ui.input.key.KeyInputModifierKt: androidx.compose.ui.modifier.ProvidableModifierLocal getModifierLocalKeyInput()>();

        $r47 = (androidx.compose.ui.modifier.ModifierLocal) $r46;

        $r48 = interfaceinvoke r1.<androidx.compose.ui.modifier.ModifierLocalReadScope: java.lang.Object getCurrent(androidx.compose.ui.modifier.ModifierLocal)>($r47);

        $r49 = (androidx.compose.ui.input.key.KeyInputModifier) $r48;

        r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.input.key.KeyInputModifier keyInputModifier> = $r49;

        $r50 = staticinvoke <androidx.compose.ui.focus.FocusPropertiesKt: androidx.compose.ui.modifier.ProvidableModifierLocal getModifierLocalFocusProperties()>();

        $r51 = (androidx.compose.ui.modifier.ModifierLocal) $r50;

        $r52 = interfaceinvoke r1.<androidx.compose.ui.modifier.ModifierLocalReadScope: java.lang.Object getCurrent(androidx.compose.ui.modifier.ModifierLocal)>($r51);

        $r53 = (androidx.compose.ui.focus.FocusPropertiesModifier) $r52;

        r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusPropertiesModifier focusPropertiesModifier> = $r53;

        staticinvoke <androidx.compose.ui.focus.FocusPropertiesKt: void refreshFocusProperties(androidx.compose.ui.focus.FocusModifier)>(r0);

        return;
    }

    public final boolean propagateRotaryEvent(androidx.compose.ui.input.rotary.RotaryScrollEvent)
    {
        androidx.compose.ui.focus.FocusModifier r0;
        androidx.compose.ui.input.rotary.RotaryScrollEvent r1;
        androidx.compose.ui.input.focus.FocusAwareInputModifier $r2;
        androidx.compose.ui.input.focus.FocusDirectedInputEvent $r3;
        boolean $z0;

        r0 := @this: androidx.compose.ui.focus.FocusModifier;

        r1 := @parameter0: androidx.compose.ui.input.rotary.RotaryScrollEvent;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "event");

        $r2 = r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.input.focus.FocusAwareInputModifier rotaryScrollParent>;

        if $r2 == null goto label1;

        $r3 = (androidx.compose.ui.input.focus.FocusDirectedInputEvent) r1;

        $z0 = virtualinvoke $r2.<androidx.compose.ui.input.focus.FocusAwareInputModifier: boolean propagateFocusAwareEvent(androidx.compose.ui.input.focus.FocusDirectedInputEvent)>($r3);

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isValid()
    {
        androidx.compose.ui.focus.FocusModifier r0, $r1;
        boolean $z0;

        r0 := @this: androidx.compose.ui.focus.FocusModifier;

        $r1 = r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusModifier parent>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public androidx.compose.ui.modifier.ProvidableModifierLocal getKey()
    {
        androidx.compose.ui.focus.FocusModifier r0;
        androidx.compose.ui.modifier.ProvidableModifierLocal $r1;

        r0 := @this: androidx.compose.ui.focus.FocusModifier;

        $r1 = staticinvoke <androidx.compose.ui.focus.FocusModifierKt: androidx.compose.ui.modifier.ProvidableModifierLocal getModifierLocalParentFocusModifier()>();

        return $r1;
    }

    public androidx.compose.ui.focus.FocusModifier getValue()
    {
        androidx.compose.ui.focus.FocusModifier r0;

        r0 := @this: androidx.compose.ui.focus.FocusModifier;

        return r0;
    }

    public void onPlaced(androidx.compose.ui.layout.LayoutCoordinates)
    {
        androidx.compose.ui.focus.FocusModifier r0;
        androidx.compose.ui.layout.LayoutCoordinates r1;
        boolean z0, $z1, $z2;
        androidx.compose.ui.node.NodeCoordinator $r2, $r3;

        r0 := @this: androidx.compose.ui.focus.FocusModifier;

        r1 := @parameter0: androidx.compose.ui.layout.LayoutCoordinates;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "coordinates");

        $r2 = r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.node.NodeCoordinator coordinator>;

        if $r2 != null goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z0 = $z2;

        $r3 = (androidx.compose.ui.node.NodeCoordinator) r1;

        r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.node.NodeCoordinator coordinator> = $r3;

        if z0 == 0 goto label3;

        staticinvoke <androidx.compose.ui.focus.FocusPropertiesKt: void refreshFocusProperties(androidx.compose.ui.focus.FocusModifier)>(r0);

     label3:
        $z1 = r0.<androidx.compose.ui.focus.FocusModifier: boolean focusRequestedOnPlaced>;

        if $z1 == 0 goto label4;

        r0.<androidx.compose.ui.focus.FocusModifier: boolean focusRequestedOnPlaced> = 0;

        staticinvoke <androidx.compose.ui.focus.FocusTransactionsKt: void requestFocus(androidx.compose.ui.focus.FocusModifier)>(r0);

     label4:
        return;
    }

    public volatile java.lang.Object getValue()
    {
        androidx.compose.ui.focus.FocusModifier r0, $r1;

        r0 := @this: androidx.compose.ui.focus.FocusModifier;

        $r1 = virtualinvoke r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusModifier getValue()>();

        return $r1;
    }

    public static final kotlin.jvm.functions.Function1 access$getRefreshFocusProperties$cp()
    {
        kotlin.jvm.functions.Function1 $r0;

        $r0 = <androidx.compose.ui.focus.FocusModifier: kotlin.jvm.functions.Function1 RefreshFocusProperties>;

        return $r0;
    }

    static void <clinit>()
    {
        androidx.compose.ui.focus.FocusModifier$Companion $r0;
        androidx.compose.ui.focus.FocusModifier$Companion$RefreshFocusProperties$1 $r1;
        kotlin.jvm.functions.Function1 $r2;

        $r0 = new androidx.compose.ui.focus.FocusModifier$Companion;

        specialinvoke $r0.<androidx.compose.ui.focus.FocusModifier$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusModifier$Companion Companion> = $r0;

        $r1 = <androidx.compose.ui.focus.FocusModifier$Companion$RefreshFocusProperties$1: androidx.compose.ui.focus.FocusModifier$Companion$RefreshFocusProperties$1 INSTANCE>;

        $r2 = (kotlin.jvm.functions.Function1) $r1;

        <androidx.compose.ui.focus.FocusModifier: kotlin.jvm.functions.Function1 RefreshFocusProperties> = $r2;

        return;
    }

androidx.compose.ui.focus.FocusModifier$Companion$RefreshFocusProperties$1
<androidx.compose.ui.focus.FocusModifier$Companion$RefreshFocusProperties$1: androidx.compose.ui.focus.FocusModifier$Companion$RefreshFocusProperties$1 INSTANCE>
    void <init>()
    {
        androidx.compose.ui.focus.FocusModifier$Companion$RefreshFocusProperties$1 r0;

        r0 := @this: androidx.compose.ui.focus.FocusModifier$Companion$RefreshFocusProperties$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.compose.ui.focus.FocusModifier)
    {
        androidx.compose.ui.focus.FocusModifier$Companion$RefreshFocusProperties$1 r0;
        androidx.compose.ui.focus.FocusModifier r1;

        r0 := @this: androidx.compose.ui.focus.FocusModifier$Companion$RefreshFocusProperties$1;

        r1 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "focusModifier");

        staticinvoke <androidx.compose.ui.focus.FocusPropertiesKt: void refreshFocusProperties(androidx.compose.ui.focus.FocusModifier)>(r1);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.ui.focus.FocusModifier$Companion$RefreshFocusProperties$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.focus.FocusModifier $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.compose.ui.focus.FocusModifier$Companion$RefreshFocusProperties$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.focus.FocusModifier) r1;

        virtualinvoke r0.<androidx.compose.ui.focus.FocusModifier$Companion$RefreshFocusProperties$1: void invoke(androidx.compose.ui.focus.FocusModifier)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

    static void <clinit>()
    {
        androidx.compose.ui.focus.FocusModifier$Companion$RefreshFocusProperties$1 $r0;

        $r0 = new androidx.compose.ui.focus.FocusModifier$Companion$RefreshFocusProperties$1;

        specialinvoke $r0.<androidx.compose.ui.focus.FocusModifier$Companion$RefreshFocusProperties$1: void <init>()>();

        <androidx.compose.ui.focus.FocusModifier$Companion$RefreshFocusProperties$1: androidx.compose.ui.focus.FocusModifier$Companion$RefreshFocusProperties$1 INSTANCE> = $r0;

        return;
    }

androidx.compose.ui.focus.FocusModifier$Companion
    private void <init>()
    {
        androidx.compose.ui.focus.FocusModifier$Companion r0;

        r0 := @this: androidx.compose.ui.focus.FocusModifier$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final kotlin.jvm.functions.Function1 getRefreshFocusProperties()
    {
        androidx.compose.ui.focus.FocusModifier$Companion r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.compose.ui.focus.FocusModifier$Companion;

        $r1 = staticinvoke <androidx.compose.ui.focus.FocusModifier: kotlin.jvm.functions.Function1 access$getRefreshFocusProperties$cp()>();

        return $r1;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.ui.focus.FocusModifier$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.compose.ui.focus.FocusModifier$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.ui.focus.FocusModifier$Companion: void <init>()>();

        return;
    }

androidx.compose.ui.focus.FocusModifier$WhenMappings
<androidx.compose.ui.focus.FocusModifier$WhenMappings: int[] $EnumSwitchMapping$0>
    static void <clinit>()
    {
        int[] r0;
        androidx.compose.ui.focus.FocusStateImpl[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        androidx.compose.ui.focus.FocusStateImpl $r2, $r3, $r4, $r5, $r6, $r7;

        $r1 = staticinvoke <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl[] values()>();

        $i0 = lengthof $r1;

        r0 = newarray (int)[$i0];

        $r2 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Active>;

        $i1 = virtualinvoke $r2.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        r0[$i1] = 1;

        $r3 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Captured>;

        $i2 = virtualinvoke $r3.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        r0[$i2] = 2;

        $r4 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl ActiveParent>;

        $i3 = virtualinvoke $r4.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        r0[$i3] = 3;

        $r5 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl DeactivatedParent>;

        $i4 = virtualinvoke $r5.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        r0[$i4] = 4;

        $r6 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Deactivated>;

        $i5 = virtualinvoke $r6.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        r0[$i5] = 5;

        $r7 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Inactive>;

        $i6 = virtualinvoke $r7.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        r0[$i6] = 6;

        <androidx.compose.ui.focus.FocusModifier$WhenMappings: int[] $EnumSwitchMapping$0> = r0;

        return;
    }

