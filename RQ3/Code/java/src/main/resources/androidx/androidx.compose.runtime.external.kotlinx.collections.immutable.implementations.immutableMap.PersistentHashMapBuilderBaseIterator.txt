androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder builder>
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: java.lang.Object lastIteratedKey>
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: boolean nextWasInvoked>
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: int expectedModCount>
    public void <init>(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder, androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator[])
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder r1, $r4;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator[] r2;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode $r3;
        int $i0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator;

        r1 := @parameter0: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder;

        r2 := @parameter1: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "builder");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "path");

        $r3 = virtualinvoke r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode getNode$runtime_release()>();

        specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: void <init>(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode,androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator[])>($r3, r2);

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder builder> = r1;

        $r4 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder builder>;

        $i0 = virtualinvoke $r4.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: int getModCount$runtime_release()>();

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: int expectedModCount> = $i0;

        return;
    }

    public java.lang.Object next()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator r0;
        java.lang.Object $r1, $r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator;

        specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: void checkForComodification()>();

        $r1 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: java.lang.Object currentKey()>();

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: java.lang.Object lastIteratedKey> = $r1;

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: boolean nextWasInvoked> = 1;

        $r2 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: java.lang.Object next()>();

        return $r2;
    }

    public void remove()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator r0;
        java.lang.Object r1, r12, r15;
        boolean $z0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder $r2, $r5, $r6, $r9;
        java.util.Map $r3, $r7, r13, r14;
        int $i0, $i1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode $r10;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator;

        specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: void checkNextWasInvoked()>();

        $z0 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        r12 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: java.lang.Object currentKey()>();

        $r6 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder builder>;

        r13 = (java.util.Map) $r6;

        r1 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: java.lang.Object lastIteratedKey>;

        $r7 = staticinvoke <kotlin.jvm.internal.TypeIntrinsics: java.util.Map asMutableMap(java.lang.Object)>(r13);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        if r12 == null goto label1;

        $i1 = virtualinvoke r12.<java.lang.Object: int hashCode()>();

        goto label2;

     label1:
        $i1 = 0;

     label2:
        $r9 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder builder>;

        $r10 = virtualinvoke $r9.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode getNode$runtime_release()>();

        specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: void resetPath(int,androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode,java.lang.Object,int)>($i1, $r10, r12, 0);

        goto label4;

     label3:
        $r2 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder builder>;

        r14 = (java.util.Map) $r2;

        r15 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: java.lang.Object lastIteratedKey>;

        $r3 = staticinvoke <kotlin.jvm.internal.TypeIntrinsics: java.util.Map asMutableMap(java.lang.Object)>(r14);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r15);

     label4:
        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: java.lang.Object lastIteratedKey> = null;

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: boolean nextWasInvoked> = 0;

        $r5 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder builder>;

        $i0 = virtualinvoke $r5.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: int getModCount$runtime_release()>();

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: int expectedModCount> = $i0;

        return;
    }

    public final void setValue(java.lang.Object, java.lang.Object)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator r0;
        java.lang.Object r1, r2, r3;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder $r4, $r5, $r8, $r9, $r12;
        boolean $z0, $z1;
        java.util.Map $r6, $r10;
        int $i0, $i1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode $r13;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder builder>;

        $z0 = virtualinvoke $r4.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        return;

     label1:
        $z1 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        r3 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: java.lang.Object currentKey()>();

        $r9 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder builder>;

        $r10 = (java.util.Map) $r9;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        if r3 == null goto label2;

        $i1 = virtualinvoke r3.<java.lang.Object: int hashCode()>();

        goto label3;

     label2:
        $i1 = 0;

     label3:
        $r12 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder builder>;

        $r13 = virtualinvoke $r12.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode getNode$runtime_release()>();

        specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: void resetPath(int,androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode,java.lang.Object,int)>($i1, $r13, r3, 0);

        goto label5;

     label4:
        $r5 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder builder>;

        $r6 = (java.util.Map) $r5;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

     label5:
        $r8 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder builder>;

        $i0 = virtualinvoke $r8.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: int getModCount$runtime_release()>();

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: int expectedModCount> = $i0;

        return;
    }

    private final void resetPath(int, androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode, java.lang.Object, int)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode r1, r3;
        java.lang.Object r2, $r16;
        boolean $z0, $z1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator[] $r4, $r7, $r10, $r14, $r17;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator $r5, $r8, $r11, $r15, $r18;
        java.lang.Object[] $r6, $r9, $r12, $r13;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode;

        r2 := @parameter2: java.lang.Object;

        i1 := @parameter3: int;

        i2 = i1 * 5;

        if i2 <= 30 goto label3;

        $r10 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator[] getPath()>();

        $r11 = $r10[i1];

        $r12 = virtualinvoke r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode: java.lang.Object[] getBuffer$runtime_release()>();

        $r13 = virtualinvoke r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode: java.lang.Object[] getBuffer$runtime_release()>();

        $i10 = lengthof $r13;

        virtualinvoke $r11.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator: void reset(java.lang.Object[],int,int)>($r12, $i10, 0);

     label1:
        $r14 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator[] getPath()>();

        $r15 = $r14[i1];

        $r16 = virtualinvoke $r15.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator: java.lang.Object currentKey()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r16, r2);

        if $z1 != 0 goto label2;

        $r17 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator[] getPath()>();

        $r18 = $r17[i1];

        virtualinvoke $r18.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator: void moveToNextKey()>();

        goto label1;

     label2:
        virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: void setPathLastIndex(int)>(i1);

        return;

     label3:
        $i4 = staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeKt: int indexSegment(int,int)>(i0, i2);

        i3 = 1 << $i4;

        $z0 = virtualinvoke r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode: boolean hasEntryAt$runtime_release(int)>(i3);

        if $z0 == 0 goto label4;

        i11 = virtualinvoke r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode: int entryKeyIndex$runtime_release(int)>(i3);

        $r7 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator[] getPath()>();

        $r8 = $r7[i1];

        $r9 = virtualinvoke r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode: java.lang.Object[] getBuffer$runtime_release()>();

        $i8 = virtualinvoke r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode: int entryCount$runtime_release()>();

        $i9 = 2 * $i8;

        virtualinvoke $r8.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator: void reset(java.lang.Object[],int,int)>($r9, $i9, i11);

        virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: void setPathLastIndex(int)>(i1);

        return;

     label4:
        i12 = virtualinvoke r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode: int nodeIndex$runtime_release(int)>(i3);

        r3 = virtualinvoke r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode nodeAtIndex$runtime_release(int)>(i12);

        $r4 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator[] getPath()>();

        $r5 = $r4[i1];

        $r6 = virtualinvoke r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode: java.lang.Object[] getBuffer$runtime_release()>();

        $i5 = virtualinvoke r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode: int entryCount$runtime_release()>();

        $i6 = 2 * $i5;

        virtualinvoke $r5.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator: void reset(java.lang.Object[],int,int)>($r6, $i6, i12);

        $i7 = i1 + 1;

        specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: void resetPath(int,androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode,java.lang.Object,int)>(i0, r3, r2, $i7);

        return;
    }

    private final void checkNextWasInvoked()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator r0;
        boolean $z0;
        java.lang.IllegalStateException r2;
        java.lang.Throwable r3;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator;

        $z0 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: boolean nextWasInvoked>;

        if $z0 != 0 goto label1;

        r2 = new java.lang.IllegalStateException;

        specialinvoke r2.<java.lang.IllegalStateException: void <init>()>();

        r3 = (java.lang.Throwable) r2;

        throw r3;

     label1:
        return;
    }

    private final void checkForComodification()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder $r1;
        int $i0, $i1;
        java.util.ConcurrentModificationException $r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator;

        $r1 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder builder>;

        $i0 = virtualinvoke $r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: int getModCount$runtime_release()>();

        $i1 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderBaseIterator: int expectedModCount>;

        if $i0 == $i1 goto label1;

        $r2 = new java.util.ConcurrentModificationException;

        specialinvoke $r2.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r2;

     label1:
        return;
    }

