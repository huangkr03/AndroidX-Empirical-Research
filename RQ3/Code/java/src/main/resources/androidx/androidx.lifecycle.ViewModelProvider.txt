androidx.lifecycle.ViewModelProvider
<androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModelStore store>
<androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModelProvider$Factory factory>
<androidx.lifecycle.ViewModelProvider: androidx.lifecycle.viewmodel.CreationExtras defaultCreationExtras>
    public void <init>(androidx.lifecycle.ViewModelStore, androidx.lifecycle.ViewModelProvider$Factory, androidx.lifecycle.viewmodel.CreationExtras)
    {
        androidx.lifecycle.ViewModelProvider r0;
        androidx.lifecycle.ViewModelStore r1;
        androidx.lifecycle.ViewModelProvider$Factory r2;
        androidx.lifecycle.viewmodel.CreationExtras r3;

        r0 := @this: androidx.lifecycle.ViewModelProvider;

        r1 := @parameter0: androidx.lifecycle.ViewModelStore;

        r2 := @parameter1: androidx.lifecycle.ViewModelProvider$Factory;

        r3 := @parameter2: androidx.lifecycle.viewmodel.CreationExtras;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "store");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "factory");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "defaultCreationExtras");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModelStore store> = r1;

        r0.<androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModelProvider$Factory factory> = r2;

        r0.<androidx.lifecycle.ViewModelProvider: androidx.lifecycle.viewmodel.CreationExtras defaultCreationExtras> = r3;

        return;
    }

    public void <init>(androidx.lifecycle.ViewModelStore, androidx.lifecycle.ViewModelProvider$Factory, androidx.lifecycle.viewmodel.CreationExtras, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.lifecycle.ViewModelProvider r0;
        androidx.lifecycle.ViewModelStore r1;
        androidx.lifecycle.ViewModelProvider$Factory r2;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r3;
        androidx.lifecycle.viewmodel.CreationExtras$Empty $r4;
        androidx.lifecycle.viewmodel.CreationExtras r5;

        r0 := @this: androidx.lifecycle.ViewModelProvider;

        r1 := @parameter0: androidx.lifecycle.ViewModelStore;

        r2 := @parameter1: androidx.lifecycle.ViewModelProvider$Factory;

        r5 := @parameter2: androidx.lifecycle.viewmodel.CreationExtras;

        i0 := @parameter3: int;

        r3 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        $r4 = <androidx.lifecycle.viewmodel.CreationExtras$Empty: androidx.lifecycle.viewmodel.CreationExtras$Empty INSTANCE>;

        r5 = (androidx.lifecycle.viewmodel.CreationExtras) $r4;

     label1:
        specialinvoke r0.<androidx.lifecycle.ViewModelProvider: void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory,androidx.lifecycle.viewmodel.CreationExtras)>(r1, r2, r5);

        return;
    }

    public void <init>(androidx.lifecycle.ViewModelStoreOwner)
    {
        androidx.lifecycle.ViewModelProvider r0;
        androidx.lifecycle.ViewModelStoreOwner r1;
        androidx.lifecycle.ViewModelStore $r2;
        androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion $r3;
        androidx.lifecycle.ViewModelProvider$Factory $r4;
        androidx.lifecycle.viewmodel.CreationExtras $r5;

        r0 := @this: androidx.lifecycle.ViewModelProvider;

        r1 := @parameter0: androidx.lifecycle.ViewModelStoreOwner;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "owner");

        $r2 = interfaceinvoke r1.<androidx.lifecycle.ViewModelStoreOwner: androidx.lifecycle.ViewModelStore getViewModelStore()>();

        $r3 = <androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion Companion>;

        $r4 = virtualinvoke $r3.<androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion: androidx.lifecycle.ViewModelProvider$Factory defaultFactory$lifecycle_viewmodel_release(androidx.lifecycle.ViewModelStoreOwner)>(r1);

        $r5 = staticinvoke <androidx.lifecycle.ViewModelProviderGetKt: androidx.lifecycle.viewmodel.CreationExtras defaultCreationExtras(androidx.lifecycle.ViewModelStoreOwner)>(r1);

        specialinvoke r0.<androidx.lifecycle.ViewModelProvider: void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory,androidx.lifecycle.viewmodel.CreationExtras)>($r2, $r4, $r5);

        return;
    }

    public void <init>(androidx.lifecycle.ViewModelStoreOwner, androidx.lifecycle.ViewModelProvider$Factory)
    {
        androidx.lifecycle.ViewModelProvider r0;
        androidx.lifecycle.ViewModelStoreOwner r1;
        androidx.lifecycle.ViewModelProvider$Factory r2;
        androidx.lifecycle.ViewModelStore $r3;
        androidx.lifecycle.viewmodel.CreationExtras $r4;

        r0 := @this: androidx.lifecycle.ViewModelProvider;

        r1 := @parameter0: androidx.lifecycle.ViewModelStoreOwner;

        r2 := @parameter1: androidx.lifecycle.ViewModelProvider$Factory;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "owner");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "factory");

        $r3 = interfaceinvoke r1.<androidx.lifecycle.ViewModelStoreOwner: androidx.lifecycle.ViewModelStore getViewModelStore()>();

        $r4 = staticinvoke <androidx.lifecycle.ViewModelProviderGetKt: androidx.lifecycle.viewmodel.CreationExtras defaultCreationExtras(androidx.lifecycle.ViewModelStoreOwner)>(r1);

        specialinvoke r0.<androidx.lifecycle.ViewModelProvider: void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory,androidx.lifecycle.viewmodel.CreationExtras)>($r3, r2, $r4);

        return;
    }

    public androidx.lifecycle.ViewModel get(java.lang.Class)
    {
        androidx.lifecycle.ViewModelProvider r0;
        java.lang.Class r1;
        java.lang.String r2, r3, $r7;
        java.lang.StringBuilder $r4, $r5, $r6;
        androidx.lifecycle.ViewModel $r8;
        java.lang.IllegalArgumentException $r9;

        r0 := @this: androidx.lifecycle.ViewModelProvider;

        r1 := @parameter0: java.lang.Class;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "modelClass");

        r3 = virtualinvoke r1.<java.lang.Class: java.lang.String getCanonicalName()>();

        if r3 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Local and anonymous classes can not be ViewModels");

        throw $r9;

     label1:
        r2 = r3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("androidx.lifecycle.ViewModelProvider.DefaultKey:");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke r0.<androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>($r7, r1);

        return $r8;
    }

    public androidx.lifecycle.ViewModel get(java.lang.String, java.lang.Class)
    {
        androidx.lifecycle.ViewModelProvider r0;
        java.lang.String r1;
        java.lang.Class r2;
        androidx.lifecycle.ViewModel r3, r16, r18, r19;
        androidx.lifecycle.viewmodel.MutableCreationExtras r4, $r6;
        androidx.lifecycle.ViewModelStore $r5, $r11;
        boolean $z1, $z2;
        androidx.lifecycle.viewmodel.CreationExtras $r7, $r9;
        androidx.lifecycle.viewmodel.CreationExtras$Key $r8;
        androidx.lifecycle.ViewModelProvider$Factory $r10, $r13, r14;
        java.lang.Throwable $r12, r17;
        androidx.lifecycle.ViewModelProvider$OnRequeryFactory $r15;

        r0 := @this: androidx.lifecycle.ViewModelProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "modelClass");

        $r5 = r0.<androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModelStore store>;

        r3 = virtualinvoke $r5.<androidx.lifecycle.ViewModelStore: androidx.lifecycle.ViewModel get(java.lang.String)>(r1);

        $z1 = virtualinvoke r2.<java.lang.Class: boolean isInstance(java.lang.Object)>(r3);

        if $z1 == 0 goto label4;

        r14 = r0.<androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModelProvider$Factory factory>;

        $z2 = r14 instanceof androidx.lifecycle.ViewModelProvider$OnRequeryFactory;

        if $z2 == 0 goto label1;

        $r15 = (androidx.lifecycle.ViewModelProvider$OnRequeryFactory) r14;

        goto label2;

     label1:
        $r15 = null;

     label2:
        if $r15 == null goto label3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r3);

        virtualinvoke $r15.<androidx.lifecycle.ViewModelProvider$OnRequeryFactory: void onRequery(androidx.lifecycle.ViewModel)>(r3);

        goto label3;

     label3:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r3, "null cannot be cast to non-null type T of androidx.lifecycle.ViewModelProvider.get");

        return r3;

     label4:
        if r3 == null goto label5;

     label5:
        $r6 = new androidx.lifecycle.viewmodel.MutableCreationExtras;

        $r7 = r0.<androidx.lifecycle.ViewModelProvider: androidx.lifecycle.viewmodel.CreationExtras defaultCreationExtras>;

        specialinvoke $r6.<androidx.lifecycle.viewmodel.MutableCreationExtras: void <init>(androidx.lifecycle.viewmodel.CreationExtras)>($r7);

        r4 = $r6;

        $r8 = <androidx.lifecycle.ViewModelProvider$NewInstanceFactory: androidx.lifecycle.viewmodel.CreationExtras$Key VIEW_MODEL_KEY>;

        virtualinvoke r4.<androidx.lifecycle.viewmodel.MutableCreationExtras: void set(androidx.lifecycle.viewmodel.CreationExtras$Key,java.lang.Object)>($r8, r1);

     label6:
        $r10 = r0.<androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModelProvider$Factory factory>;

        $r9 = (androidx.lifecycle.viewmodel.CreationExtras) r4;

        r16 = interfaceinvoke $r10.<androidx.lifecycle.ViewModelProvider$Factory: androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras)>(r2, $r9);

     label7:
        goto label9;

     label8:
        $r12 := @caughtexception;

        r17 = $r12;

        $r13 = r0.<androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModelProvider$Factory factory>;

        r16 = interfaceinvoke $r13.<androidx.lifecycle.ViewModelProvider$Factory: androidx.lifecycle.ViewModel create(java.lang.Class)>(r2);

     label9:
        r18 = r16;

        r19 = r18;

        $r11 = r0.<androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModelStore store>;

        virtualinvoke $r11.<androidx.lifecycle.ViewModelStore: void put(java.lang.String,androidx.lifecycle.ViewModel)>(r1, r19);

        return r18;

        catch java.lang.AbstractMethodError from label6 to label7 with label8;
    }

    public void <init>(androidx.lifecycle.ViewModelStore, androidx.lifecycle.ViewModelProvider$Factory)
    {
        androidx.lifecycle.ViewModelProvider r0;
        androidx.lifecycle.ViewModelStore r1;
        androidx.lifecycle.ViewModelProvider$Factory r2;

        r0 := @this: androidx.lifecycle.ViewModelProvider;

        r1 := @parameter0: androidx.lifecycle.ViewModelStore;

        r2 := @parameter1: androidx.lifecycle.ViewModelProvider$Factory;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "store");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "factory");

        specialinvoke r0.<androidx.lifecycle.ViewModelProvider: void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory,androidx.lifecycle.viewmodel.CreationExtras,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, r2, null, 4, null);

        return;
    }

androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion$ApplicationKeyImpl
<androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion$ApplicationKeyImpl: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion$ApplicationKeyImpl INSTANCE>
    private void <init>()
    {
        androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion$ApplicationKeyImpl r0;

        r0 := @this: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion$ApplicationKeyImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion$ApplicationKeyImpl $r0;

        $r0 = new androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion$ApplicationKeyImpl;

        specialinvoke $r0.<androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion$ApplicationKeyImpl: void <init>()>();

        <androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion$ApplicationKeyImpl: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion$ApplicationKeyImpl INSTANCE> = $r0;

        return;
    }

androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion
    private void <init>()
    {
        androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion r0;

        r0 := @this: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.lifecycle.ViewModelProvider$Factory defaultFactory$lifecycle_viewmodel_release(androidx.lifecycle.ViewModelStoreOwner)
    {
        androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion r0;
        androidx.lifecycle.ViewModelStoreOwner r1;
        boolean $z0;
        androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion $r2;
        androidx.lifecycle.ViewModelProvider$NewInstanceFactory $r3;
        androidx.lifecycle.HasDefaultViewModelProviderFactory $r4;
        androidx.lifecycle.ViewModelProvider$Factory $r5;

        r0 := @this: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion;

        r1 := @parameter0: androidx.lifecycle.ViewModelStoreOwner;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "owner");

        $z0 = r1 instanceof androidx.lifecycle.HasDefaultViewModelProviderFactory;

        if $z0 == 0 goto label1;

        $r4 = (androidx.lifecycle.HasDefaultViewModelProviderFactory) r1;

        $r5 = interfaceinvoke $r4.<androidx.lifecycle.HasDefaultViewModelProviderFactory: androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory()>();

        goto label2;

     label1:
        $r2 = <androidx.lifecycle.ViewModelProvider$NewInstanceFactory: androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion Companion>;

        $r3 = virtualinvoke $r2.<androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion: androidx.lifecycle.ViewModelProvider$NewInstanceFactory getInstance()>();

        $r5 = (androidx.lifecycle.ViewModelProvider$Factory) $r3;

     label2:
        return $r5;
    }

    public final androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory getInstance(android.app.Application)
    {
        androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion r0;
        android.app.Application r1;
        androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory $r2, $r3, $r4;

        r0 := @this: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion;

        r1 := @parameter0: android.app.Application;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "application");

        $r2 = staticinvoke <androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory access$getSInstance$cp()>();

        if $r2 != null goto label1;

        $r4 = new androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory;

        specialinvoke $r4.<androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: void <init>(android.app.Application)>(r1);

        staticinvoke <androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: void access$setSInstance$cp(androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory)>($r4);

     label1:
        $r3 = staticinvoke <androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory access$getSInstance$cp()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r3);

        return $r3;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion: void <init>()>();

        return;
    }

androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory
<androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion Companion>
<androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: android.app.Application application>
<androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: java.lang.String DEFAULT_KEY>
<androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory sInstance>
<androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: androidx.lifecycle.viewmodel.CreationExtras$Key APPLICATION_KEY>
    private void <init>(android.app.Application, int)
    {
        androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory r0;
        android.app.Application r1;
        int i0;

        r0 := @this: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory;

        r1 := @parameter0: android.app.Application;

        i0 := @parameter1: int;

        specialinvoke r0.<androidx.lifecycle.ViewModelProvider$NewInstanceFactory: void <init>()>();

        r0.<androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: android.app.Application application> = r1;

        return;
    }

    public void <init>()
    {
        androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory r0;

        r0 := @this: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory;

        specialinvoke r0.<androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: void <init>(android.app.Application,int)>(null, 0);

        return;
    }

    public void <init>(android.app.Application)
    {
        androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory r0;
        android.app.Application r1;

        r0 := @this: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory;

        r1 := @parameter0: android.app.Application;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "application");

        specialinvoke r0.<androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: void <init>(android.app.Application,int)>(r1, 0);

        return;
    }

    public androidx.lifecycle.ViewModel create(java.lang.Class, androidx.lifecycle.viewmodel.CreationExtras)
    {
        androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory r0;
        java.lang.Class r1, $r7;
        androidx.lifecycle.viewmodel.CreationExtras r2;
        android.app.Application r3, $r4;
        androidx.lifecycle.viewmodel.CreationExtras$Key $r5;
        java.lang.Object $r6;
        boolean $z0;
        java.lang.IllegalArgumentException $r8;
        androidx.lifecycle.ViewModel $r9;

        r0 := @this: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: androidx.lifecycle.viewmodel.CreationExtras;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "modelClass");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "extras");

        $r4 = r0.<androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: android.app.Application application>;

        if $r4 == null goto label1;

        $r9 = virtualinvoke r0.<androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class)>(r1);

        goto label4;

     label1:
        $r5 = <androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: androidx.lifecycle.viewmodel.CreationExtras$Key APPLICATION_KEY>;

        $r6 = virtualinvoke r2.<androidx.lifecycle.viewmodel.CreationExtras: java.lang.Object get(androidx.lifecycle.viewmodel.CreationExtras$Key)>($r5);

        r3 = (android.app.Application) $r6;

        if r3 == null goto label2;

        $r9 = specialinvoke r0.<androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class,android.app.Application)>(r1, r3);

        goto label4;

     label2:
        $r7 = class "Landroidx/lifecycle/AndroidViewModel;";

        $z0 = virtualinvoke $r7.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1);

        if $z0 == 0 goto label3;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("CreationExtras must have an application by `APPLICATION_KEY`");

        throw $r8;

     label3:
        $r9 = specialinvoke r0.<androidx.lifecycle.ViewModelProvider$NewInstanceFactory: androidx.lifecycle.ViewModel create(java.lang.Class)>(r1);

     label4:
        return $r9;
    }

    public androidx.lifecycle.ViewModel create(java.lang.Class)
    {
        androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory r0;
        java.lang.Class r1;
        android.app.Application $r2, $r3;
        androidx.lifecycle.ViewModel $r4;
        java.lang.UnsupportedOperationException $r5;

        r0 := @this: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory;

        r1 := @parameter0: java.lang.Class;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "modelClass");

        $r2 = r0.<androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: android.app.Application application>;

        if $r2 != null goto label1;

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("AndroidViewModelFactory constructed with empty constructor works only with create(modelClass: Class<T>, extras: CreationExtras).");

        throw $r5;

     label1:
        $r3 = r0.<androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: android.app.Application application>;

        $r4 = specialinvoke r0.<androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class,android.app.Application)>(r1, $r3);

        return $r4;
    }

    private final androidx.lifecycle.ViewModel create(java.lang.Class, android.app.Application)
    {
        androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory r0;
        java.lang.Class r1, $r3;
        android.app.Application r2;
        boolean $z0;
        java.lang.reflect.Constructor $r4;
        java.lang.Object $r5;
        java.lang.Throwable $r6, $r12, $r13, $r19, $r20, $r26, $r27, $r33, r37, r38, r39, r40;
        java.lang.RuntimeException $r7, $r14, $r21, $r28;
        java.lang.StringBuilder $r8, $r9, $r10, $r15, $r16, $r17, $r22, $r23, $r24, $r29, $r30, $r31;
        java.lang.String $r11, $r18, $r25, $r32;
        java.lang.Class[] r34;
        java.lang.Object[] r35;
        androidx.lifecycle.ViewModel r36, $r41;

        r0 := @this: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: android.app.Application;

        $r3 = class "Landroidx/lifecycle/AndroidViewModel;";

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1);

        if $z0 == 0 goto label8;

     label1:
        r34 = newarray (java.lang.Class)[1];

        r34[0] = class "Landroid/app/Application;";

        $r4 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>(r34);

        r35 = newarray (java.lang.Object)[1];

        r35[0] = r2;

        $r5 = virtualinvoke $r4.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(r35);

        r36 = (androidx.lifecycle.ViewModel) $r5;

     label2:
        goto label7;

     label3:
        $r6 := @caughtexception;

        r37 = $r6;

        $r7 = new java.lang.RuntimeException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create an instance of ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = (java.lang.Throwable) r37;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r11, $r12);

        throw $r7;

     label4:
        $r27 := @caughtexception;

        r38 = $r27;

        $r28 = new java.lang.RuntimeException;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create an instance of ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        $r33 = (java.lang.Throwable) r38;

        specialinvoke $r28.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r32, $r33);

        throw $r28;

     label5:
        $r13 := @caughtexception;

        r39 = $r13;

        $r14 = new java.lang.RuntimeException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create an instance of ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = (java.lang.Throwable) r39;

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r18, $r19);

        throw $r14;

     label6:
        $r20 := @caughtexception;

        r40 = $r20;

        $r21 = new java.lang.RuntimeException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create an instance of ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $r26 = (java.lang.Throwable) r40;

        specialinvoke $r21.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r25, $r26);

        throw $r21;

     label7:
        $r41 = r36;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r36, "{\n                try {\n\u2026          }\n            }");

        goto label9;

     label8:
        $r41 = specialinvoke r0.<androidx.lifecycle.ViewModelProvider$NewInstanceFactory: androidx.lifecycle.ViewModel create(java.lang.Class)>(r1);

     label9:
        return $r41;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.InstantiationException from label1 to label2 with label5;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label6;
    }

    public static final androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory getInstance(android.app.Application)
    {
        android.app.Application r0;
        androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion $r1;
        androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory $r2;

        r0 := @parameter0: android.app.Application;

        $r1 = <androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory getInstance(android.app.Application)>(r0);

        return $r2;
    }

    public static final androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory access$getSInstance$cp()
    {
        androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory $r0;

        $r0 = <androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory sInstance>;

        return $r0;
    }

    public static final void access$setSInstance$cp(androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory)
    {
        androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory r0;

        r0 := @parameter0: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory;

        <androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory sInstance> = r0;

        return;
    }

    static void <clinit>()
    {
        androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion $r0;
        androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion$ApplicationKeyImpl $r1;
        androidx.lifecycle.viewmodel.CreationExtras$Key $r2;

        $r0 = new androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion;

        specialinvoke $r0.<androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion Companion> = $r0;

        $r1 = <androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion$ApplicationKeyImpl: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion$ApplicationKeyImpl INSTANCE>;

        $r2 = (androidx.lifecycle.viewmodel.CreationExtras$Key) $r1;

        <androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: androidx.lifecycle.viewmodel.CreationExtras$Key APPLICATION_KEY> = $r2;

        return;
    }

androidx.lifecycle.ViewModelProvider$Factory$Companion
<androidx.lifecycle.ViewModelProvider$Factory$Companion: androidx.lifecycle.ViewModelProvider$Factory$Companion $$INSTANCE>
    private void <init>()
    {
        androidx.lifecycle.ViewModelProvider$Factory$Companion r0;

        r0 := @this: androidx.lifecycle.ViewModelProvider$Factory$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final transient androidx.lifecycle.ViewModelProvider$Factory 'from'(androidx.lifecycle.viewmodel.ViewModelInitializer[])
    {
        androidx.lifecycle.ViewModelProvider$Factory$Companion r0;
        androidx.lifecycle.viewmodel.ViewModelInitializer[] r1, $r4;
        androidx.lifecycle.viewmodel.InitializerViewModelFactory $r2;
        int $i0;
        java.lang.Object[] $r3;
        androidx.lifecycle.ViewModelProvider$Factory $r5;

        r0 := @this: androidx.lifecycle.ViewModelProvider$Factory$Companion;

        r1 := @parameter0: androidx.lifecycle.viewmodel.ViewModelInitializer[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "initializers");

        $r2 = new androidx.lifecycle.viewmodel.InitializerViewModelFactory;

        $i0 = lengthof r1;

        $r3 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r1, $i0);

        $r4 = (androidx.lifecycle.viewmodel.ViewModelInitializer[]) $r3;

        specialinvoke $r2.<androidx.lifecycle.viewmodel.InitializerViewModelFactory: void <init>(androidx.lifecycle.viewmodel.ViewModelInitializer[])>($r4);

        $r5 = (androidx.lifecycle.ViewModelProvider$Factory) $r2;

        return $r5;
    }

    static void <clinit>()
    {
        androidx.lifecycle.ViewModelProvider$Factory$Companion $r0;

        $r0 = new androidx.lifecycle.ViewModelProvider$Factory$Companion;

        specialinvoke $r0.<androidx.lifecycle.ViewModelProvider$Factory$Companion: void <init>()>();

        <androidx.lifecycle.ViewModelProvider$Factory$Companion: androidx.lifecycle.ViewModelProvider$Factory$Companion $$INSTANCE> = $r0;

        return;
    }

androidx.lifecycle.ViewModelProvider$Factory
<androidx.lifecycle.ViewModelProvider$Factory: androidx.lifecycle.ViewModelProvider$Factory$Companion Companion>
    public androidx.lifecycle.ViewModel create(java.lang.Class)
    {
        androidx.lifecycle.ViewModelProvider$Factory r0;
        java.lang.Class r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: androidx.lifecycle.ViewModelProvider$Factory;

        r1 := @parameter0: java.lang.Class;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "modelClass");

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Factory.create(String) is unsupported.  This Factory requires `CreationExtras` to be passed into `create` method.");

        throw $r2;
    }

    public androidx.lifecycle.ViewModel create(java.lang.Class, androidx.lifecycle.viewmodel.CreationExtras)
    {
        androidx.lifecycle.ViewModelProvider$Factory r0;
        java.lang.Class r1;
        androidx.lifecycle.viewmodel.CreationExtras r2;
        androidx.lifecycle.ViewModel $r3;

        r0 := @this: androidx.lifecycle.ViewModelProvider$Factory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: androidx.lifecycle.viewmodel.CreationExtras;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "modelClass");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "extras");

        $r3 = interfaceinvoke r0.<androidx.lifecycle.ViewModelProvider$Factory: androidx.lifecycle.ViewModel create(java.lang.Class)>(r1);

        return $r3;
    }

    public static transient androidx.lifecycle.ViewModelProvider$Factory 'from'(androidx.lifecycle.viewmodel.ViewModelInitializer[])
    {
        androidx.lifecycle.viewmodel.ViewModelInitializer[] r0;
        androidx.lifecycle.ViewModelProvider$Factory$Companion $r1;
        androidx.lifecycle.ViewModelProvider$Factory $r2;

        r0 := @parameter0: androidx.lifecycle.viewmodel.ViewModelInitializer[];

        $r1 = <androidx.lifecycle.ViewModelProvider$Factory: androidx.lifecycle.ViewModelProvider$Factory$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.lifecycle.ViewModelProvider$Factory$Companion: androidx.lifecycle.ViewModelProvider$Factory 'from'(androidx.lifecycle.viewmodel.ViewModelInitializer[])>(r0);

        return $r2;
    }

    static void <clinit>()
    {
        androidx.lifecycle.ViewModelProvider$Factory$Companion $r0;

        $r0 = <androidx.lifecycle.ViewModelProvider$Factory$Companion: androidx.lifecycle.ViewModelProvider$Factory$Companion $$INSTANCE>;

        <androidx.lifecycle.ViewModelProvider$Factory: androidx.lifecycle.ViewModelProvider$Factory$Companion Companion> = $r0;

        return;
    }

androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion$ViewModelKeyImpl
<androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion$ViewModelKeyImpl: androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion$ViewModelKeyImpl INSTANCE>
    private void <init>()
    {
        androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion$ViewModelKeyImpl r0;

        r0 := @this: androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion$ViewModelKeyImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion$ViewModelKeyImpl $r0;

        $r0 = new androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion$ViewModelKeyImpl;

        specialinvoke $r0.<androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion$ViewModelKeyImpl: void <init>()>();

        <androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion$ViewModelKeyImpl: androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion$ViewModelKeyImpl INSTANCE> = $r0;

        return;
    }

androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion
    private void <init>()
    {
        androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion r0;

        r0 := @this: androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.lifecycle.ViewModelProvider$NewInstanceFactory getInstance()
    {
        androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion r0;
        androidx.lifecycle.ViewModelProvider$NewInstanceFactory $r1, $r2, $r3;

        r0 := @this: androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion;

        $r1 = staticinvoke <androidx.lifecycle.ViewModelProvider$NewInstanceFactory: androidx.lifecycle.ViewModelProvider$NewInstanceFactory access$getSInstance$cp()>();

        if $r1 != null goto label1;

        $r3 = new androidx.lifecycle.ViewModelProvider$NewInstanceFactory;

        specialinvoke $r3.<androidx.lifecycle.ViewModelProvider$NewInstanceFactory: void <init>()>();

        staticinvoke <androidx.lifecycle.ViewModelProvider$NewInstanceFactory: void access$setSInstance$cp(androidx.lifecycle.ViewModelProvider$NewInstanceFactory)>($r3);

     label1:
        $r2 = staticinvoke <androidx.lifecycle.ViewModelProvider$NewInstanceFactory: androidx.lifecycle.ViewModelProvider$NewInstanceFactory access$getSInstance$cp()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r2);

        return $r2;
    }

    public static void getInstance$annotations()
    {
        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion: void <init>()>();

        return;
    }

androidx.lifecycle.ViewModelProvider$NewInstanceFactory
<androidx.lifecycle.ViewModelProvider$NewInstanceFactory: androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion Companion>
<androidx.lifecycle.ViewModelProvider$NewInstanceFactory: androidx.lifecycle.ViewModelProvider$NewInstanceFactory sInstance>
<androidx.lifecycle.ViewModelProvider$NewInstanceFactory: androidx.lifecycle.viewmodel.CreationExtras$Key VIEW_MODEL_KEY>
    public void <init>()
    {
        androidx.lifecycle.ViewModelProvider$NewInstanceFactory r0;

        r0 := @this: androidx.lifecycle.ViewModelProvider$NewInstanceFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.lifecycle.ViewModel create(java.lang.Class)
    {
        androidx.lifecycle.ViewModelProvider$NewInstanceFactory r0;
        java.lang.Class r1;
        androidx.lifecycle.ViewModel r2;
        java.lang.Class[] $r3;
        java.lang.reflect.Constructor $r4;
        java.lang.Object[] $r5;
        java.lang.Object $r6;
        java.lang.Throwable $r7, $r13, $r14, $r20, $r21, $r27, r28, r29, r30;
        java.lang.RuntimeException $r8, $r15, $r22;
        java.lang.StringBuilder $r9, $r10, $r11, $r16, $r17, $r18, $r23, $r24, $r25;
        java.lang.String $r12, $r19, $r26;

        r0 := @this: androidx.lifecycle.ViewModelProvider$NewInstanceFactory;

        r1 := @parameter0: java.lang.Class;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "modelClass");

     label1:
        $r3 = newarray (java.lang.Class)[0];

        $r4 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r3);

        $r5 = newarray (java.lang.Object)[0];

        $r6 = virtualinvoke $r4.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r5);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "{\n                modelC\u2026wInstance()\n            }");

        r2 = (androidx.lifecycle.ViewModel) $r6;

     label2:
        goto label6;

     label3:
        $r14 := @caughtexception;

        r28 = $r14;

        $r15 = new java.lang.RuntimeException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create an instance of ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = (java.lang.Throwable) r28;

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r19, $r20);

        throw $r15;

     label4:
        $r21 := @caughtexception;

        r29 = $r21;

        $r22 = new java.lang.RuntimeException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create an instance of ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        $r27 = (java.lang.Throwable) r29;

        specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r26, $r27);

        throw $r22;

     label5:
        $r7 := @caughtexception;

        r30 = $r7;

        $r8 = new java.lang.RuntimeException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create an instance of ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = (java.lang.Throwable) r30;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r12, $r13);

        throw $r8;

     label6:
        return r2;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
        catch java.lang.InstantiationException from label1 to label2 with label4;
        catch java.lang.IllegalAccessException from label1 to label2 with label5;
    }

    public static final androidx.lifecycle.ViewModelProvider$NewInstanceFactory getInstance()
    {
        androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion $r0;
        androidx.lifecycle.ViewModelProvider$NewInstanceFactory $r1;

        $r0 = <androidx.lifecycle.ViewModelProvider$NewInstanceFactory: androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion Companion>;

        $r1 = virtualinvoke $r0.<androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion: androidx.lifecycle.ViewModelProvider$NewInstanceFactory getInstance()>();

        return $r1;
    }

    public static final androidx.lifecycle.ViewModelProvider$NewInstanceFactory access$getSInstance$cp()
    {
        androidx.lifecycle.ViewModelProvider$NewInstanceFactory $r0;

        $r0 = <androidx.lifecycle.ViewModelProvider$NewInstanceFactory: androidx.lifecycle.ViewModelProvider$NewInstanceFactory sInstance>;

        return $r0;
    }

    public static final void access$setSInstance$cp(androidx.lifecycle.ViewModelProvider$NewInstanceFactory)
    {
        androidx.lifecycle.ViewModelProvider$NewInstanceFactory r0;

        r0 := @parameter0: androidx.lifecycle.ViewModelProvider$NewInstanceFactory;

        <androidx.lifecycle.ViewModelProvider$NewInstanceFactory: androidx.lifecycle.ViewModelProvider$NewInstanceFactory sInstance> = r0;

        return;
    }

    static void <clinit>()
    {
        androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion $r0;
        androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion$ViewModelKeyImpl $r1;
        androidx.lifecycle.viewmodel.CreationExtras$Key $r2;

        $r0 = new androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion;

        specialinvoke $r0.<androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.lifecycle.ViewModelProvider$NewInstanceFactory: androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion Companion> = $r0;

        $r1 = <androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion$ViewModelKeyImpl: androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion$ViewModelKeyImpl INSTANCE>;

        $r2 = (androidx.lifecycle.viewmodel.CreationExtras$Key) $r1;

        <androidx.lifecycle.ViewModelProvider$NewInstanceFactory: androidx.lifecycle.viewmodel.CreationExtras$Key VIEW_MODEL_KEY> = $r2;

        return;
    }

androidx.lifecycle.ViewModelProvider$OnRequeryFactory
    public void <init>()
    {
        androidx.lifecycle.ViewModelProvider$OnRequeryFactory r0;

        r0 := @this: androidx.lifecycle.ViewModelProvider$OnRequeryFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onRequery(androidx.lifecycle.ViewModel)
    {
        androidx.lifecycle.ViewModelProvider$OnRequeryFactory r0;
        androidx.lifecycle.ViewModel r1;

        r0 := @this: androidx.lifecycle.ViewModelProvider$OnRequeryFactory;

        r1 := @parameter0: androidx.lifecycle.ViewModel;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "viewModel");

        return;
    }

