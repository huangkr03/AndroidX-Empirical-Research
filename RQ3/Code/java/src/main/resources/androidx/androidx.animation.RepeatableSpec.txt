androidx.animation.RepeatableSpec
<androidx.animation.RepeatableSpec: long duration>
<androidx.animation.RepeatableSpec: long iterationCount>
<androidx.animation.RepeatableSpec: androidx.animation.DurationBasedAnimationSpec animation>
    private final long repetitionPlayTime(long)
    {
        androidx.animation.RepeatableSpec r0;
        long l0, l1, l2, l3, $l4, $l5, $l6, $l7, $l8;
        boolean z0;

        r0 := @this: androidx.animation.RepeatableSpec;

        l0 := @parameter0: long;

        $l4 = r0.<androidx.animation.RepeatableSpec: long duration>;

        l2 = l0 / $l4;

        $l5 = r0.<androidx.animation.RepeatableSpec: long iterationCount>;

        l3 = $l5 - 1L;

        z0 = 0;

        l1 = staticinvoke <java.lang.Math: long min(long,long)>(l2, l3);

        $l6 = r0.<androidx.animation.RepeatableSpec: long duration>;

        $l7 = l1 * $l6;

        $l8 = l0 - $l7;

        return $l8;
    }

    private final androidx.animation.AnimationVector repetitionStartVelocity(long, androidx.animation.AnimationVector, androidx.animation.AnimationVector, androidx.animation.AnimationVector)
    {
        androidx.animation.RepeatableSpec r0;
        long l0, $l1, $l3;
        androidx.animation.AnimationVector r1, r2, r3, $r4;
        byte $b2;

        r0 := @this: androidx.animation.RepeatableSpec;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.animation.AnimationVector;

        r2 := @parameter2: androidx.animation.AnimationVector;

        r3 := @parameter3: androidx.animation.AnimationVector;

        $l1 = r0.<androidx.animation.RepeatableSpec: long duration>;

        $b2 = l0 cmp $l1;

        if $b2 <= 0 goto label1;

        $l3 = r0.<androidx.animation.RepeatableSpec: long duration>;

        $r4 = virtualinvoke r0.<androidx.animation.RepeatableSpec: androidx.animation.AnimationVector getVelocity(long,androidx.animation.AnimationVector,androidx.animation.AnimationVector,androidx.animation.AnimationVector)>($l3, r1, r2, r3);

        goto label2;

     label1:
        $r4 = r2;

     label2:
        return $r4;
    }

    public androidx.animation.AnimationVector getValue(long, androidx.animation.AnimationVector, androidx.animation.AnimationVector, androidx.animation.AnimationVector)
    {
        androidx.animation.RepeatableSpec r0;
        long l0, $l1;
        androidx.animation.AnimationVector r1, r2, r3, $r5, $r6;
        androidx.animation.DurationBasedAnimationSpec $r4;

        r0 := @this: androidx.animation.RepeatableSpec;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.animation.AnimationVector;

        r2 := @parameter2: androidx.animation.AnimationVector;

        r3 := @parameter3: androidx.animation.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "start");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "end");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "startVelocity");

        $r4 = r0.<androidx.animation.RepeatableSpec: androidx.animation.DurationBasedAnimationSpec animation>;

        $l1 = specialinvoke r0.<androidx.animation.RepeatableSpec: long repetitionPlayTime(long)>(l0);

        $r5 = specialinvoke r0.<androidx.animation.RepeatableSpec: androidx.animation.AnimationVector repetitionStartVelocity(long,androidx.animation.AnimationVector,androidx.animation.AnimationVector,androidx.animation.AnimationVector)>(l0, r1, r3, r2);

        $r6 = interfaceinvoke $r4.<androidx.animation.DurationBasedAnimationSpec: androidx.animation.AnimationVector getValue(long,androidx.animation.AnimationVector,androidx.animation.AnimationVector,androidx.animation.AnimationVector)>($l1, r1, r2, $r5);

        return $r6;
    }

    public androidx.animation.AnimationVector getVelocity(long, androidx.animation.AnimationVector, androidx.animation.AnimationVector, androidx.animation.AnimationVector)
    {
        androidx.animation.RepeatableSpec r0;
        long l0, $l1;
        androidx.animation.AnimationVector r1, r2, r3, $r5, $r6;
        androidx.animation.DurationBasedAnimationSpec $r4;

        r0 := @this: androidx.animation.RepeatableSpec;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.animation.AnimationVector;

        r2 := @parameter2: androidx.animation.AnimationVector;

        r3 := @parameter3: androidx.animation.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "start");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "end");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "startVelocity");

        $r4 = r0.<androidx.animation.RepeatableSpec: androidx.animation.DurationBasedAnimationSpec animation>;

        $l1 = specialinvoke r0.<androidx.animation.RepeatableSpec: long repetitionPlayTime(long)>(l0);

        $r5 = specialinvoke r0.<androidx.animation.RepeatableSpec: androidx.animation.AnimationVector repetitionStartVelocity(long,androidx.animation.AnimationVector,androidx.animation.AnimationVector,androidx.animation.AnimationVector)>(l0, r1, r3, r2);

        $r6 = interfaceinvoke $r4.<androidx.animation.DurationBasedAnimationSpec: androidx.animation.AnimationVector getVelocity(long,androidx.animation.AnimationVector,androidx.animation.AnimationVector,androidx.animation.AnimationVector)>($l1, r1, r2, $r5);

        return $r6;
    }

    public long getDurationMillis(androidx.animation.AnimationVector, androidx.animation.AnimationVector, androidx.animation.AnimationVector)
    {
        androidx.animation.RepeatableSpec r0;
        androidx.animation.AnimationVector r1, r2, r3;
        long $l0, $l1, $l2;

        r0 := @this: androidx.animation.RepeatableSpec;

        r1 := @parameter0: androidx.animation.AnimationVector;

        r2 := @parameter1: androidx.animation.AnimationVector;

        r3 := @parameter2: androidx.animation.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "start");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "end");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "startVelocity");

        $l1 = r0.<androidx.animation.RepeatableSpec: long iterationCount>;

        $l0 = r0.<androidx.animation.RepeatableSpec: long duration>;

        $l2 = $l1 * $l0;

        return $l2;
    }

    public void <init>(long, androidx.animation.DurationBasedAnimationSpec)
    {
        androidx.animation.RepeatableSpec r0;
        long l0, $l1, $l3, $l4, $l5;
        androidx.animation.DurationBasedAnimationSpec r1, $r2, $r3;
        byte $b2;
        java.lang.IllegalArgumentException $r4;
        java.lang.Throwable $r5;

        r0 := @this: androidx.animation.RepeatableSpec;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.animation.DurationBasedAnimationSpec;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "animation");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.animation.RepeatableSpec: long iterationCount> = l0;

        r0.<androidx.animation.RepeatableSpec: androidx.animation.DurationBasedAnimationSpec animation> = r1;

        $l1 = r0.<androidx.animation.RepeatableSpec: long iterationCount>;

        $b2 = $l1 cmp 1L;

        if $b2 >= 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Iterations count can\'t be less than 1");

        $r5 = (java.lang.Throwable) $r4;

        throw $r5;

     label1:
        $r2 = r0.<androidx.animation.RepeatableSpec: androidx.animation.DurationBasedAnimationSpec animation>;

        $l3 = interfaceinvoke $r2.<androidx.animation.DurationBasedAnimationSpec: long getDelay()>();

        $r3 = r0.<androidx.animation.RepeatableSpec: androidx.animation.DurationBasedAnimationSpec animation>;

        $l4 = interfaceinvoke $r3.<androidx.animation.DurationBasedAnimationSpec: long getDuration()>();

        $l5 = $l3 + $l4;

        r0.<androidx.animation.RepeatableSpec: long duration> = $l5;

        return;
    }

    public androidx.animation.AnimationVector getEndVelocity(androidx.animation.AnimationVector, androidx.animation.AnimationVector, androidx.animation.AnimationVector)
    {
        androidx.animation.RepeatableSpec r0;
        androidx.animation.AnimationVector r1, r2, r3, $r4;

        r0 := @this: androidx.animation.RepeatableSpec;

        r1 := @parameter0: androidx.animation.AnimationVector;

        r2 := @parameter1: androidx.animation.AnimationVector;

        r3 := @parameter2: androidx.animation.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "start");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "end");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "startVelocity");

        $r4 = staticinvoke <androidx.animation.AnimationSpec$DefaultImpls: androidx.animation.AnimationVector getEndVelocity(androidx.animation.AnimationSpec,androidx.animation.AnimationVector,androidx.animation.AnimationVector,androidx.animation.AnimationVector)>(r0, r1, r2, r3);

        return $r4;
    }

