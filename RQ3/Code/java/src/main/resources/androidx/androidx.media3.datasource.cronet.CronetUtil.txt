androidx.media3.datasource.cronet.CronetUtil
<androidx.media3.datasource.cronet.CronetUtil: java.lang.String TAG>
    public static org.chromium.net.CronetEngine buildCronetEngine(android.content.Context)
    {
        android.content.Context r0;
        org.chromium.net.CronetEngine $r1;

        r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <androidx.media3.datasource.cronet.CronetUtil: org.chromium.net.CronetEngine buildCronetEngine(android.content.Context,java.lang.String,boolean)>(r0, null, 0);

        return $r1;
    }

    public static org.chromium.net.CronetEngine buildCronetEngine(android.content.Context, java.lang.String, boolean)
    {
        android.content.Context r0;
        java.lang.String r1, r3, $r15, $r21, $r24;
        boolean z0, $z1, $z2;
        java.util.ArrayList r2, $r5;
        org.chromium.net.CronetEngine r4;
        java.util.List $r6;
        int $i0, $i1, i2, i3;
        androidx.media3.datasource.cronet.CronetUtil$CronetProviderComparator $r7, r27;
        java.lang.Object $r8, $r10, $r18, $r22;
        org.chromium.net.CronetProvider $r9, $r11, $r19, $r23;
        java.lang.StringBuilder $r12, $r13, $r14;
        java.lang.Throwable $r25, $r26, r29, r30;
        org.chromium.net.CronetEngine$Builder r28;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r5 = new java.util.ArrayList;

        $r6 = staticinvoke <org.chromium.net.CronetProvider: java.util.List getAllProviders(android.content.Context)>(r0);

        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r6);

        r2 = $r5;

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        i2 = $i0 - 1;

     label01:
        if i2 < 0 goto label04;

        $r18 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i2);

        $r19 = (org.chromium.net.CronetProvider) $r18;

        $z1 = virtualinvoke $r19.<org.chromium.net.CronetProvider: boolean isEnabled()>();

        if $z1 == 0 goto label02;

        $r21 = "Fallback-Cronet-Provider";

        $r22 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i2);

        $r23 = (org.chromium.net.CronetProvider) $r22;

        $r24 = virtualinvoke $r23.<org.chromium.net.CronetProvider: java.lang.String getName()>();

        $z2 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>($r24);

        if $z2 == 0 goto label03;

     label02:
        interfaceinvoke r2.<java.util.List: java.lang.Object remove(int)>(i2);

     label03:
        i2 = i2 + -1;

        goto label01;

     label04:
        $r7 = new androidx.media3.datasource.cronet.CronetUtil$CronetProviderComparator;

        specialinvoke $r7.<androidx.media3.datasource.cronet.CronetUtil$CronetProviderComparator: void <init>(boolean)>(z0);

        r27 = $r7;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r2, r27);

        i3 = 0;

     label05:
        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        if i3 >= $i1 goto label12;

        $r8 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i3);

        $r9 = (org.chromium.net.CronetProvider) $r8;

        r3 = virtualinvoke $r9.<org.chromium.net.CronetProvider: java.lang.String getName()>();

     label06:
        $r10 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i3);

        $r11 = (org.chromium.net.CronetProvider) $r10;

        r28 = virtualinvoke $r11.<org.chromium.net.CronetProvider: org.chromium.net.CronetEngine$Builder createBuilder()>();

        if r1 == null goto label07;

        virtualinvoke r28.<org.chromium.net.CronetEngine$Builder: org.chromium.net.CronetEngine$Builder setUserAgent(java.lang.String)>(r1);

     label07:
        r4 = virtualinvoke r28.<org.chromium.net.CronetEngine$Builder: org.chromium.net.CronetEngine build()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CronetEngine built using ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void d(java.lang.String,java.lang.String)>("CronetUtil", $r15);

     label08:
        return r4;

     label09:
        $r26 := @caughtexception;

        r29 = $r26;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("CronetUtil", "Failed to build CronetEngine. Please check that the process has android.permission.ACCESS_NETWORK_STATE.");

        goto label11;

     label10:
        $r25 := @caughtexception;

        r30 = $r25;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("CronetUtil", "Failed to link Cronet binaries. Please check that native Cronet binaries arebundled into your app.");

     label11:
        i3 = i3 + 1;

        goto label05;

     label12:
        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("CronetUtil", "CronetEngine could not be built.");

        return null;

        catch java.lang.SecurityException from label06 to label08 with label09;
        catch java.lang.UnsatisfiedLinkError from label06 to label08 with label10;
    }

    private void <init>()
    {
        androidx.media3.datasource.cronet.CronetUtil r0;

        r0 := @this: androidx.media3.datasource.cronet.CronetUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.media3.datasource.cronet.CronetUtil$CronetProviderComparator
<androidx.media3.datasource.cronet.CronetUtil$CronetProviderComparator: java.lang.String GOOGLE_PLAY_SERVICES_PROVIDER_NAME>
<androidx.media3.datasource.cronet.CronetUtil$CronetProviderComparator: boolean preferGooglePlayServices>
    public void <init>(boolean)
    {
        androidx.media3.datasource.cronet.CronetUtil$CronetProviderComparator r0;
        boolean z0;

        r0 := @this: androidx.media3.datasource.cronet.CronetUtil$CronetProviderComparator;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.datasource.cronet.CronetUtil$CronetProviderComparator: boolean preferGooglePlayServices> = z0;

        return;
    }

    public int compare(org.chromium.net.CronetProvider, org.chromium.net.CronetProvider)
    {
        androidx.media3.datasource.cronet.CronetUtil$CronetProviderComparator r0;
        org.chromium.net.CronetProvider r1, r2;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.String $r3, $r4;

        r0 := @this: androidx.media3.datasource.cronet.CronetUtil$CronetProviderComparator;

        r1 := @parameter0: org.chromium.net.CronetProvider;

        r2 := @parameter1: org.chromium.net.CronetProvider;

        $i1 = specialinvoke r0.<androidx.media3.datasource.cronet.CronetUtil$CronetProviderComparator: int getPriority(org.chromium.net.CronetProvider)>(r1);

        $i2 = specialinvoke r0.<androidx.media3.datasource.cronet.CronetUtil$CronetProviderComparator: int getPriority(org.chromium.net.CronetProvider)>(r2);

        i0 = $i1 - $i2;

        if i0 == 0 goto label1;

        return i0;

     label1:
        $r3 = virtualinvoke r1.<org.chromium.net.CronetProvider: java.lang.String getVersion()>();

        $r4 = virtualinvoke r2.<org.chromium.net.CronetProvider: java.lang.String getVersion()>();

        $i3 = staticinvoke <androidx.media3.datasource.cronet.CronetUtil$CronetProviderComparator: int compareVersionStrings(java.lang.String,java.lang.String)>($r3, $r4);

        $i4 = neg $i3;

        return $i4;
    }

    private int getPriority(org.chromium.net.CronetProvider)
    {
        androidx.media3.datasource.cronet.CronetUtil$CronetProviderComparator r0;
        org.chromium.net.CronetProvider r1;
        java.lang.String r2, $r3, $r4;
        boolean $z0, $z1, $z2;
        byte $b0;

        r0 := @this: androidx.media3.datasource.cronet.CronetUtil$CronetProviderComparator;

        r1 := @parameter0: org.chromium.net.CronetProvider;

        r2 = virtualinvoke r1.<org.chromium.net.CronetProvider: java.lang.String getName()>();

        $r3 = "App-Packaged-Cronet-Provider";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r4 = "Google-Play-Services-Cronet-Provider";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label4;

        $z2 = r0.<androidx.media3.datasource.cronet.CronetUtil$CronetProviderComparator: boolean preferGooglePlayServices>;

        if $z2 == 0 goto label2;

        $b0 = 0;

        goto label3;

     label2:
        $b0 = 2;

     label3:
        return $b0;

     label4:
        return 3;
    }

    private static int compareVersionStrings(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r4, $r5, $r6, $r7;
        java.lang.String[] r2, r3;
        int i0, i1, $i2, $i3, $i4, i5, i6;
        boolean $z0;
        java.lang.Throwable $r8, r9;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        if r1 != null goto label2;

     label1:
        return 0;

     label2:
        r2 = staticinvoke <androidx.media3.common.util.Util: java.lang.String[] split(java.lang.String,java.lang.String)>(r0, "\\.");

        r3 = staticinvoke <androidx.media3.common.util.Util: java.lang.String[] split(java.lang.String,java.lang.String)>(r1, "\\.");

        $i3 = lengthof r2;

        $i2 = lengthof r3;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i2);

        i5 = 0;

     label3:
        if i5 >= i0 goto label8;

        $r5 = r2[i5];

        $r4 = r3[i5];

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label7;

     label4:
        $r6 = r2[i5];

        i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

        $r7 = r3[i5];

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

        $i4 = i6 - i1;

     label5:
        return $i4;

     label6:
        $r8 := @caughtexception;

        r9 = $r8;

        return 0;

     label7:
        i5 = i5 + 1;

        goto label3;

     label8:
        return 0;

        catch java.lang.NumberFormatException from label4 to label5 with label6;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        androidx.media3.datasource.cronet.CronetUtil$CronetProviderComparator r0;
        java.lang.Object r1, r2;
        org.chromium.net.CronetProvider $r3, $r4;
        int $i0;

        r0 := @this: androidx.media3.datasource.cronet.CronetUtil$CronetProviderComparator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.chromium.net.CronetProvider) r1;

        $r3 = (org.chromium.net.CronetProvider) r2;

        $i0 = virtualinvoke r0.<androidx.media3.datasource.cronet.CronetUtil$CronetProviderComparator: int compare(org.chromium.net.CronetProvider,org.chromium.net.CronetProvider)>($r4, $r3);

        return $i0;
    }

