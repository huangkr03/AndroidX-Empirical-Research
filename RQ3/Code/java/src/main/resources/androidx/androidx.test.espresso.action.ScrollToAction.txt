androidx.test.espresso.action.ScrollToAction
<androidx.test.espresso.action.ScrollToAction: java.lang.String TAG>
    public java.lang.String getDescription()
    {
        androidx.test.espresso.action.ScrollToAction r0;

        r0 := @this: androidx.test.espresso.action.ScrollToAction;

        return "scroll to";
    }

    public org.hamcrest.Matcher getConstraints()
    {
        androidx.test.espresso.action.ScrollToAction r0;
        androidx.test.espresso.matcher.ViewMatchers$Visibility $r1;
        org.hamcrest.Matcher $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r11;
        org.hamcrest.core.AnyOf $r9;

        r0 := @this: androidx.test.espresso.action.ScrollToAction;

        $r1 = <androidx.test.espresso.matcher.ViewMatchers$Visibility: androidx.test.espresso.matcher.ViewMatchers$Visibility VISIBLE>;

        $r2 = staticinvoke <androidx.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher withEffectiveVisibility(androidx.test.espresso.matcher.ViewMatchers$Visibility)>($r1);

        $r3 = staticinvoke <androidx.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher isAssignableFrom(java.lang.Class)>(class "Landroid/widget/ScrollView;");

        $r4 = staticinvoke <androidx.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher isAssignableFrom(java.lang.Class)>(class "Landroid/widget/HorizontalScrollView;");

        $r5 = staticinvoke <androidx.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher isAssignableFrom(java.lang.Class)>(class "Landroid/widget/ListView;");

        $r6 = staticinvoke <androidx.test.espresso.action.ScrollToAction: org.hamcrest.Matcher isAssignableFromClassName(java.lang.String)>("androidx.core.widget.NestedScrollView");

        $r7 = staticinvoke <androidx.test.espresso.action.ScrollToAction: org.hamcrest.Matcher isAssignableFromClassName(java.lang.String)>("androidx.recyclerview.widget.RecyclerView");

        $r8 = staticinvoke <androidx.test.espresso.action.ScrollToAction: org.hamcrest.Matcher isAssignableFromClassName(java.lang.String)>("androidx.recyclerview.widget.RecyclerView");

        $r9 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.core.AnyOf anyOf(org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher)>($r3, $r4, $r5, $r6, $r7, $r8);

        $r10 = staticinvoke <androidx.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher isDescendantOfA(org.hamcrest.Matcher)>($r9);

        $r11 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher allOf(org.hamcrest.Matcher,org.hamcrest.Matcher)>($r2, $r10);

        return $r11;
    }

    private static org.hamcrest.Matcher isAssignableFromClassName(java.lang.String)
    {
        java.lang.Throwable $r0;
        java.lang.String r1;
        java.lang.Class r2;
        org.hamcrest.Matcher r3, r6;
        androidx.test.espresso.action.ScrollToAction$1 r4, r5;

        r1 := @parameter0: java.lang.String;

     label1:
        r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r1);

     label2:
        r3 = staticinvoke <androidx.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher isAssignableFrom(java.lang.Class)>(r2);

     label3:
        return r3;

     label4:
        $r0 := @caughtexception;

        r5 = new androidx.test.espresso.action.ScrollToAction$1;

        r4 = r5;

        specialinvoke r5.<androidx.test.espresso.action.ScrollToAction$1: void <init>()>();

        r6 = (org.hamcrest.Matcher) r4;

        return r6;

        catch java.lang.ClassNotFoundException from label1 to label2 with label4;
        catch java.lang.ClassNotFoundException from label2 to label3 with label4;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Landroidx/test/espresso/action/ScrollToAction;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <androidx.test.espresso.action.ScrollToAction: java.lang.String TAG> = $r1;

        return;
    }

    public void <init>()
    {
        androidx.test.espresso.action.ScrollToAction r0;

        r0 := @this: androidx.test.espresso.action.ScrollToAction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void perform(androidx.test.espresso.UiController, android.view.View)
    {
        android.view.View r0;
        android.graphics.Rect r1, r16;
        org.hamcrest.Matcher $r2, $r3;
        boolean $z0, $z1, $z2;
        androidx.test.espresso.PerformException$Builder $r4, r10, r12, r14, r17;
        androidx.test.espresso.PerformException $r5;
        java.lang.String $r6, $r7, r11, r13;
        androidx.test.espresso.action.ScrollToAction r8;
        androidx.test.espresso.UiController r9;
        java.lang.RuntimeException r15, r18;
        java.lang.Throwable r19;

        r8 := @this: androidx.test.espresso.action.ScrollToAction;

        r9 := @parameter0: androidx.test.espresso.UiController;

        r0 := @parameter1: android.view.View;

        $r2 = staticinvoke <androidx.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher isDisplayingAtLeast(int)>(90);

        $z0 = interfaceinvoke $r2.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r7 = <androidx.test.espresso.action.ScrollToAction: java.lang.String TAG>;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r7, "View is already displayed. Returning.");

        return;

     label1:
        r16 = new android.graphics.Rect;

        r1 = r16;

        specialinvoke r16.<android.graphics.Rect: void <init>()>();

        virtualinvoke r0.<android.view.View: void getDrawingRect(android.graphics.Rect)>(r1);

        $z1 = virtualinvoke r0.<android.view.View: boolean requestRectangleOnScreen(android.graphics.Rect,boolean)>(r1, 1);

        if $z1 != 0 goto label2;

        $r6 = <androidx.test.espresso.action.ScrollToAction: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r6, "Scrolling to view was requested, but none of the parents scrolled.");

     label2:
        interfaceinvoke r9.<androidx.test.espresso.UiController: void loopMainThreadUntilIdle()>();

        $r3 = staticinvoke <androidx.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher isDisplayingAtLeast(int)>(90);

        $z2 = interfaceinvoke $r3.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>(r0);

        if $z2 != 0 goto label3;

        r17 = new androidx.test.espresso.PerformException$Builder;

        r10 = r17;

        specialinvoke r17.<androidx.test.espresso.PerformException$Builder: void <init>()>();

        r11 = virtualinvoke r8.<androidx.test.espresso.action.ScrollToAction: java.lang.String getDescription()>();

        r12 = virtualinvoke r10.<androidx.test.espresso.PerformException$Builder: androidx.test.espresso.PerformException$Builder withActionDescription(java.lang.String)>(r11);

        r13 = staticinvoke <androidx.test.espresso.util.HumanReadables: java.lang.String describe(android.view.View)>(r0);

        r14 = virtualinvoke r12.<androidx.test.espresso.PerformException$Builder: androidx.test.espresso.PerformException$Builder withViewDescription(java.lang.String)>(r13);

        r18 = new java.lang.RuntimeException;

        r15 = r18;

        specialinvoke r18.<java.lang.RuntimeException: void <init>(java.lang.String)>("Scrolling to view was attempted, but the view is not displayed");

        r19 = (java.lang.Throwable) r15;

        $r4 = virtualinvoke r14.<androidx.test.espresso.PerformException$Builder: androidx.test.espresso.PerformException$Builder withCause(java.lang.Throwable)>(r19);

        $r5 = virtualinvoke $r4.<androidx.test.espresso.PerformException$Builder: androidx.test.espresso.PerformException build()>();

        throw $r5;

     label3:
        return;
    }

androidx.test.espresso.action.ScrollToAction$1
    void <init>()
    {
        androidx.test.espresso.action.ScrollToAction$1 r0;

        r0 := @this: androidx.test.espresso.action.ScrollToAction$1;

        specialinvoke r0.<org.hamcrest.BaseMatcher: void <init>()>();

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        androidx.test.espresso.action.ScrollToAction$1 r0;
        org.hamcrest.Description r1;

        r0 := @this: androidx.test.espresso.action.ScrollToAction$1;

        r1 := @parameter0: org.hamcrest.Description;

        return;
    }

    public boolean matches(java.lang.Object)
    {
        androidx.test.espresso.action.ScrollToAction$1 r0;
        java.lang.Object r1;

        r0 := @this: androidx.test.espresso.action.ScrollToAction$1;

        r1 := @parameter0: java.lang.Object;

        return 0;
    }

