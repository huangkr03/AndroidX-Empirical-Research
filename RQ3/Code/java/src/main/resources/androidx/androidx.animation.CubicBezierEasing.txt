androidx.animation.CubicBezierEasing
<androidx.animation.CubicBezierEasing: float a>
<androidx.animation.CubicBezierEasing: float b>
<androidx.animation.CubicBezierEasing: float c>
<androidx.animation.CubicBezierEasing: float d>
    private final float evaluateCubic(float, float, float)
    {
        androidx.animation.CubicBezierEasing r0;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22;

        r0 := @this: androidx.animation.CubicBezierEasing;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $f3 = (float) 3;

        $f6 = $f3 * f0;

        $f4 = (float) 1;

        $f5 = $f4 - f2;

        $f9 = $f6 * $f5;

        $f7 = (float) 1;

        $f8 = $f7 - f2;

        $f10 = $f9 * $f8;

        $f18 = $f10 * f2;

        $f11 = (float) 3;

        $f14 = $f11 * f1;

        $f12 = (float) 1;

        $f13 = $f12 - f2;

        $f15 = $f14 * $f13;

        $f16 = $f15 * f2;

        $f17 = $f16 * f2;

        $f21 = $f18 + $f17;

        $f19 = f2 * f2;

        $f20 = $f19 * f2;

        $f22 = $f21 + $f20;

        return $f22;
    }

    public java.lang.Float invoke(float)
    {
        androidx.animation.CubicBezierEasing r0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, f12, f13;
        boolean z0;
        byte $b0, $b1, $b2, $b3;
        java.lang.Float $r1, $r2;

        r0 := @this: androidx.animation.CubicBezierEasing;

        f0 := @parameter0: float;

        $b0 = f0 cmpl 0.0F;

        if $b0 <= 0 goto label5;

        $b1 = f0 cmpg 1.0F;

        if $b1 >= 0 goto label5;

        f12 = 0.0F;

        f13 = 1.0F;

     label1:
        $f5 = f12 + f13;

        $f4 = (float) 2;

        f1 = $f5 / $f4;

        $f7 = r0.<androidx.animation.CubicBezierEasing: float a>;

        $f6 = r0.<androidx.animation.CubicBezierEasing: float c>;

        f2 = specialinvoke r0.<androidx.animation.CubicBezierEasing: float evaluateCubic(float,float,float)>($f7, $f6, f1);

        f3 = f0 - f2;

        z0 = 0;

        $f8 = staticinvoke <java.lang.Math: float abs(float)>(f3);

        $b2 = $f8 cmpg 0.001F;

        if $b2 >= 0 goto label2;

        $f10 = r0.<androidx.animation.CubicBezierEasing: float b>;

        $f9 = r0.<androidx.animation.CubicBezierEasing: float d>;

        $f11 = specialinvoke r0.<androidx.animation.CubicBezierEasing: float evaluateCubic(float,float,float)>($f10, $f9, f1);

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f11);

        return $r2;

     label2:
        $b3 = f2 cmpg f0;

        if $b3 >= 0 goto label3;

        f12 = f1;

        goto label4;

     label3:
        f13 = f1;

     label4:
        goto label1;

     label5:
        $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        return $r1;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.animation.CubicBezierEasing r0;
        java.lang.Object r1;
        java.lang.Number $r2;
        float $f0;
        java.lang.Float $r3;

        r0 := @this: androidx.animation.CubicBezierEasing;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Number) r1;

        $f0 = virtualinvoke $r2.<java.lang.Number: float floatValue()>();

        $r3 = virtualinvoke r0.<androidx.animation.CubicBezierEasing: java.lang.Float invoke(float)>($f0);

        return $r3;
    }

    public void <init>(float, float, float, float)
    {
        androidx.animation.CubicBezierEasing r0;
        float f0, f1, f2, f3;

        r0 := @this: androidx.animation.CubicBezierEasing;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.animation.CubicBezierEasing: float a> = f0;

        r0.<androidx.animation.CubicBezierEasing: float b> = f1;

        r0.<androidx.animation.CubicBezierEasing: float c> = f2;

        r0.<androidx.animation.CubicBezierEasing: float d> = f3;

        return;
    }

