androidx.room.compiler.processing.ksp.KspTypeParameterElement
<androidx.room.compiler.processing.ksp.KspTypeParameterElement: com.google.devtools.ksp.symbol.KSTypeParameter declaration>
<androidx.room.compiler.processing.ksp.KspTypeParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>
<androidx.room.compiler.processing.ksp.KspTypeParameterElement: kotlin.Lazy typeVariableName$delegate>
<androidx.room.compiler.processing.ksp.KspTypeParameterElement: kotlin.Lazy enclosingElement$delegate>
<androidx.room.compiler.processing.ksp.KspTypeParameterElement: kotlin.Lazy bounds$delegate>
    public void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv, com.google.devtools.ksp.symbol.KSTypeParameter)
    {
        androidx.room.compiler.processing.ksp.KspTypeParameterElement r0;
        androidx.room.compiler.processing.ksp.KspProcessingEnv r1;
        com.google.devtools.ksp.symbol.KSTypeParameter r2;
        com.google.devtools.ksp.symbol.KSAnnotated $r3, $r6;
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion $r4;
        androidx.room.compiler.processing.ksp.KspAnnotated$Companion $r5;
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter $r7;
        androidx.room.compiler.processing.ksp.KspAnnotated $r8;
        androidx.room.compiler.processing.ksp.KspTypeParameterElement$typeVariableName$2 $r9;
        kotlin.jvm.functions.Function0 $r10, $r13, $r16;
        kotlin.Lazy $r11, $r14, $r17;
        androidx.room.compiler.processing.ksp.KspTypeParameterElement$enclosingElement$2 $r12;
        androidx.room.compiler.processing.ksp.KspTypeParameterElement$bounds$2 $r15;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeParameterElement;

        r1 := @parameter0: androidx.room.compiler.processing.ksp.KspProcessingEnv;

        r2 := @parameter1: com.google.devtools.ksp.symbol.KSTypeParameter;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "declaration");

        $r3 = (com.google.devtools.ksp.symbol.KSAnnotated) r2;

        specialinvoke r0.<androidx.room.compiler.processing.ksp.KspElement: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSAnnotated)>(r1, $r3);

        r0.<androidx.room.compiler.processing.ksp.KspTypeParameterElement: com.google.devtools.ksp.symbol.KSTypeParameter declaration> = r2;

        $r5 = <androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.ksp.KspAnnotated$Companion Companion>;

        $r6 = (com.google.devtools.ksp.symbol.KSAnnotated) r2;

        $r4 = <androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion Companion>;

        $r7 = virtualinvoke $r4.<androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter getNO_USE_SITE_OR_FIELD()>();

        $r8 = virtualinvoke $r5.<androidx.room.compiler.processing.ksp.KspAnnotated$Companion: androidx.room.compiler.processing.ksp.KspAnnotated create(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSAnnotated,androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter)>(r1, $r6, $r7);

        r0.<androidx.room.compiler.processing.ksp.KspTypeParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0> = $r8;

        $r9 = new androidx.room.compiler.processing.ksp.KspTypeParameterElement$typeVariableName$2;

        specialinvoke $r9.<androidx.room.compiler.processing.ksp.KspTypeParameterElement$typeVariableName$2: void <init>(androidx.room.compiler.processing.ksp.KspTypeParameterElement)>(r0);

        $r10 = (kotlin.jvm.functions.Function0) $r9;

        $r11 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r10);

        r0.<androidx.room.compiler.processing.ksp.KspTypeParameterElement: kotlin.Lazy typeVariableName$delegate> = $r11;

        $r12 = new androidx.room.compiler.processing.ksp.KspTypeParameterElement$enclosingElement$2;

        specialinvoke $r12.<androidx.room.compiler.processing.ksp.KspTypeParameterElement$enclosingElement$2: void <init>(androidx.room.compiler.processing.ksp.KspTypeParameterElement,androidx.room.compiler.processing.ksp.KspProcessingEnv)>(r0, r1);

        $r13 = (kotlin.jvm.functions.Function0) $r12;

        $r14 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r13);

        r0.<androidx.room.compiler.processing.ksp.KspTypeParameterElement: kotlin.Lazy enclosingElement$delegate> = $r14;

        $r15 = new androidx.room.compiler.processing.ksp.KspTypeParameterElement$bounds$2;

        specialinvoke $r15.<androidx.room.compiler.processing.ksp.KspTypeParameterElement$bounds$2: void <init>(androidx.room.compiler.processing.ksp.KspTypeParameterElement,androidx.room.compiler.processing.ksp.KspProcessingEnv)>(r0, r1);

        $r16 = (kotlin.jvm.functions.Function0) $r15;

        $r17 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r16);

        r0.<androidx.room.compiler.processing.ksp.KspTypeParameterElement: kotlin.Lazy bounds$delegate> = $r17;

        return;
    }

    public com.google.devtools.ksp.symbol.KSTypeParameter getDeclaration()
    {
        androidx.room.compiler.processing.ksp.KspTypeParameterElement r0;
        com.google.devtools.ksp.symbol.KSTypeParameter $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeParameterElement;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspTypeParameterElement: com.google.devtools.ksp.symbol.KSTypeParameter declaration>;

        return $r1;
    }

    public java.util.List getAllAnnotations()
    {
        androidx.room.compiler.processing.ksp.KspTypeParameterElement r0;
        androidx.room.compiler.processing.ksp.KspAnnotated $r1;
        java.util.List $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeParameterElement;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspTypeParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $r2 = virtualinvoke $r1.<androidx.room.compiler.processing.ksp.KspAnnotated: java.util.List getAllAnnotations()>();

        return $r2;
    }

    public androidx.room.compiler.processing.XAnnotation getAnnotation(com.squareup.javapoet.ClassName)
    {
        androidx.room.compiler.processing.ksp.KspTypeParameterElement r0;
        com.squareup.javapoet.ClassName r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        androidx.room.compiler.processing.XAnnotation $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeParameterElement;

        r1 := @parameter0: com.squareup.javapoet.ClassName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationName");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspTypeParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.XAnnotation getAnnotation(com.squareup.javapoet.ClassName)>(r1);

        return $r3;
    }

    public androidx.room.compiler.processing.XAnnotationBox getAnnotation(kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspTypeParameterElement r0;
        kotlin.reflect.KClass r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        androidx.room.compiler.processing.XAnnotationBox $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeParameterElement;

        r1 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspTypeParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.XAnnotationBox getAnnotation(kotlin.reflect.KClass)>(r1);

        return $r3;
    }

    public java.util.List getAnnotations(com.squareup.javapoet.ClassName)
    {
        androidx.room.compiler.processing.ksp.KspTypeParameterElement r0;
        com.squareup.javapoet.ClassName r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeParameterElement;

        r1 := @parameter0: com.squareup.javapoet.ClassName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationName");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspTypeParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: java.util.List getAnnotations(com.squareup.javapoet.ClassName)>(r1);

        return $r3;
    }

    public java.util.List getAnnotations(kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspTypeParameterElement r0;
        kotlin.reflect.KClass r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeParameterElement;

        r1 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspTypeParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: java.util.List getAnnotations(kotlin.reflect.KClass)>(r1);

        return $r3;
    }

    public java.util.Set getAnnotationsAnnotatedWith(com.squareup.javapoet.ClassName)
    {
        androidx.room.compiler.processing.ksp.KspTypeParameterElement r0;
        com.squareup.javapoet.ClassName r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        java.util.Set $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeParameterElement;

        r1 := @parameter0: com.squareup.javapoet.ClassName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationName");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspTypeParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: java.util.Set getAnnotationsAnnotatedWith(com.squareup.javapoet.ClassName)>(r1);

        return $r3;
    }

    public transient boolean hasAllAnnotations(com.squareup.javapoet.ClassName[])
    {
        androidx.room.compiler.processing.ksp.KspTypeParameterElement r0;
        com.squareup.javapoet.ClassName[] r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeParameterElement;

        r1 := @parameter0: com.squareup.javapoet.ClassName[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspTypeParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAllAnnotations(com.squareup.javapoet.ClassName[])>(r1);

        return $z0;
    }

    public transient boolean hasAllAnnotations(kotlin.reflect.KClass[])
    {
        androidx.room.compiler.processing.ksp.KspTypeParameterElement r0;
        kotlin.reflect.KClass[] r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeParameterElement;

        r1 := @parameter0: kotlin.reflect.KClass[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspTypeParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAllAnnotations(kotlin.reflect.KClass[])>(r1);

        return $z0;
    }

    public boolean hasAllAnnotations(java.util.Collection)
    {
        androidx.room.compiler.processing.ksp.KspTypeParameterElement r0;
        java.util.Collection r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeParameterElement;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspTypeParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAllAnnotations(java.util.Collection)>(r1);

        return $z0;
    }

    public boolean hasAnnotation(com.squareup.javapoet.ClassName)
    {
        androidx.room.compiler.processing.ksp.KspTypeParameterElement r0;
        com.squareup.javapoet.ClassName r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeParameterElement;

        r1 := @parameter0: com.squareup.javapoet.ClassName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationName");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspTypeParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAnnotation(com.squareup.javapoet.ClassName)>(r1);

        return $z0;
    }

    public boolean hasAnnotation(kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspTypeParameterElement r0;
        kotlin.reflect.KClass r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeParameterElement;

        r1 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspTypeParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAnnotation(kotlin.reflect.KClass)>(r1);

        return $z0;
    }

    public boolean hasAnnotationWithPackage(java.lang.String)
    {
        androidx.room.compiler.processing.ksp.KspTypeParameterElement r0;
        java.lang.String r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeParameterElement;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "pkg");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspTypeParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAnnotationWithPackage(java.lang.String)>(r1);

        return $z0;
    }

    public transient boolean hasAnyAnnotation(com.squareup.javapoet.ClassName[])
    {
        androidx.room.compiler.processing.ksp.KspTypeParameterElement r0;
        com.squareup.javapoet.ClassName[] r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeParameterElement;

        r1 := @parameter0: com.squareup.javapoet.ClassName[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspTypeParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAnyAnnotation(com.squareup.javapoet.ClassName[])>(r1);

        return $z0;
    }

    public transient boolean hasAnyAnnotation(kotlin.reflect.KClass[])
    {
        androidx.room.compiler.processing.ksp.KspTypeParameterElement r0;
        kotlin.reflect.KClass[] r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeParameterElement;

        r1 := @parameter0: kotlin.reflect.KClass[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspTypeParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAnyAnnotation(kotlin.reflect.KClass[])>(r1);

        return $z0;
    }

    public boolean hasAnyAnnotation(java.util.Collection)
    {
        androidx.room.compiler.processing.ksp.KspTypeParameterElement r0;
        java.util.Collection r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeParameterElement;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspTypeParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAnyAnnotation(java.util.Collection)>(r1);

        return $z0;
    }

    public androidx.room.compiler.processing.XAnnotation requireAnnotation(com.squareup.javapoet.ClassName)
    {
        androidx.room.compiler.processing.ksp.KspTypeParameterElement r0;
        com.squareup.javapoet.ClassName r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        androidx.room.compiler.processing.XAnnotation $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeParameterElement;

        r1 := @parameter0: com.squareup.javapoet.ClassName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationName");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspTypeParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.XAnnotation requireAnnotation(com.squareup.javapoet.ClassName)>(r1);

        return $r3;
    }

    public androidx.room.compiler.processing.XAnnotationBox requireAnnotation(kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspTypeParameterElement r0;
        kotlin.reflect.KClass r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        androidx.room.compiler.processing.XAnnotationBox $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeParameterElement;

        r1 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspTypeParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.XAnnotationBox requireAnnotation(kotlin.reflect.KClass)>(r1);

        return $r3;
    }

    public androidx.room.compiler.processing.XAnnotationBox toAnnotationBox(kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspTypeParameterElement r0;
        kotlin.reflect.KClass r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        androidx.room.compiler.processing.XAnnotationBox $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeParameterElement;

        r1 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspTypeParameterElement: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.XAnnotationBox toAnnotationBox(kotlin.reflect.KClass)>(r1);

        return $r3;
    }

    public java.lang.String getName()
    {
        androidx.room.compiler.processing.ksp.KspTypeParameterElement r0;
        com.google.devtools.ksp.symbol.KSTypeParameter $r1;
        com.google.devtools.ksp.symbol.KSName $r2;
        java.lang.String $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeParameterElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspTypeParameterElement: com.google.devtools.ksp.symbol.KSTypeParameter getDeclaration()>();

        $r2 = interfaceinvoke $r1.<com.google.devtools.ksp.symbol.KSTypeParameter: com.google.devtools.ksp.symbol.KSName getName()>();

        $r3 = interfaceinvoke $r2.<com.google.devtools.ksp.symbol.KSName: java.lang.String asString()>();

        return $r3;
    }

    public com.squareup.javapoet.TypeVariableName getTypeVariableName()
    {
        androidx.room.compiler.processing.ksp.KspTypeParameterElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        com.squareup.javapoet.TypeVariableName $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeParameterElement;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspTypeParameterElement: kotlin.Lazy typeVariableName$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "<get-typeVariableName>(...)");

        $r3 = (com.squareup.javapoet.TypeVariableName) $r2;

        return $r3;
    }

    public androidx.room.compiler.processing.ksp.KspMemberContainer getEnclosingElement()
    {
        androidx.room.compiler.processing.ksp.KspTypeParameterElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.processing.ksp.KspMemberContainer $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeParameterElement;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspTypeParameterElement: kotlin.Lazy enclosingElement$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.processing.ksp.KspMemberContainer) $r2;

        return $r3;
    }

    public java.util.List getBounds()
    {
        androidx.room.compiler.processing.ksp.KspTypeParameterElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeParameterElement;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspTypeParameterElement: kotlin.Lazy bounds$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.util.List) $r2;

        return $r3;
    }

    public java.lang.String getFallbackLocationText()
    {
        androidx.room.compiler.processing.ksp.KspTypeParameterElement r0;
        java.lang.StringBuilder $r1, $r4, $r5, $r8;
        com.google.devtools.ksp.symbol.KSTypeParameter $r2;
        com.google.devtools.ksp.symbol.KSName $r3;
        androidx.room.compiler.processing.ksp.KspMemberContainer $r6;
        java.lang.String $r7, $r9;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeParameterElement;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspTypeParameterElement: com.google.devtools.ksp.symbol.KSTypeParameter getDeclaration()>();

        $r3 = interfaceinvoke $r2.<com.google.devtools.ksp.symbol.KSTypeParameter: com.google.devtools.ksp.symbol.KSName getName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r6 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspTypeParameterElement: androidx.room.compiler.processing.ksp.KspMemberContainer getEnclosingElement()>();

        $r7 = interfaceinvoke $r6.<androidx.room.compiler.processing.ksp.KspMemberContainer: java.lang.String getFallbackLocationText()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public androidx.room.compiler.processing.XMemberContainer getClosestMemberContainer()
    {
        androidx.room.compiler.processing.ksp.KspTypeParameterElement r0;
        androidx.room.compiler.processing.ksp.KspMemberContainer $r1;
        androidx.room.compiler.processing.XMemberContainer $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeParameterElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspTypeParameterElement: androidx.room.compiler.processing.ksp.KspMemberContainer getEnclosingElement()>();

        $r2 = interfaceinvoke $r1.<androidx.room.compiler.processing.ksp.KspMemberContainer: androidx.room.compiler.processing.XMemberContainer getClosestMemberContainer()>();

        return $r2;
    }

    public volatile com.google.devtools.ksp.symbol.KSAnnotated getDeclaration()
    {
        androidx.room.compiler.processing.ksp.KspTypeParameterElement r0;
        com.google.devtools.ksp.symbol.KSTypeParameter $r1;
        com.google.devtools.ksp.symbol.KSAnnotated $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeParameterElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspTypeParameterElement: com.google.devtools.ksp.symbol.KSTypeParameter getDeclaration()>();

        $r2 = (com.google.devtools.ksp.symbol.KSAnnotated) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XElement getEnclosingElement()
    {
        androidx.room.compiler.processing.ksp.KspTypeParameterElement r0;
        androidx.room.compiler.processing.ksp.KspMemberContainer $r1;
        androidx.room.compiler.processing.XElement $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspTypeParameterElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspTypeParameterElement: androidx.room.compiler.processing.ksp.KspMemberContainer getEnclosingElement()>();

        $r2 = (androidx.room.compiler.processing.XElement) $r1;

        return $r2;
    }

