androidx.compose.animation.core.FloatTweenSpec
<androidx.compose.animation.core.FloatTweenSpec: int duration>
<androidx.compose.animation.core.FloatTweenSpec: int delay>
<androidx.compose.animation.core.FloatTweenSpec: androidx.compose.animation.core.Easing easing>
<androidx.compose.animation.core.FloatTweenSpec: int $stable>
    public void <init>(int, int, androidx.compose.animation.core.Easing)
    {
        androidx.compose.animation.core.FloatTweenSpec r0;
        int i0, i1;
        androidx.compose.animation.core.Easing r1;

        r0 := @this: androidx.compose.animation.core.FloatTweenSpec;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: androidx.compose.animation.core.Easing;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "easing");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.animation.core.FloatTweenSpec: int duration> = i0;

        r0.<androidx.compose.animation.core.FloatTweenSpec: int delay> = i1;

        r0.<androidx.compose.animation.core.FloatTweenSpec: androidx.compose.animation.core.Easing easing> = r1;

        return;
    }

    public void <init>(int, int, androidx.compose.animation.core.Easing, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.animation.core.FloatTweenSpec r0;
        int i0, $i1, $i2, $i3, i4, i5;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        androidx.compose.animation.core.Easing r2;

        r0 := @this: androidx.compose.animation.core.FloatTweenSpec;

        i4 := @parameter0: int;

        i5 := @parameter1: int;

        r2 := @parameter2: androidx.compose.animation.core.Easing;

        i0 := @parameter3: int;

        r1 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        i4 = 300;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        i5 = 0;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        r2 = staticinvoke <androidx.compose.animation.core.EasingKt: androidx.compose.animation.core.Easing getFastOutSlowInEasing()>();

     label3:
        specialinvoke r0.<androidx.compose.animation.core.FloatTweenSpec: void <init>(int,int,androidx.compose.animation.core.Easing)>(i4, i5, r2);

        return;
    }

    public final int getDuration()
    {
        androidx.compose.animation.core.FloatTweenSpec r0;
        int $i0;

        r0 := @this: androidx.compose.animation.core.FloatTweenSpec;

        $i0 = r0.<androidx.compose.animation.core.FloatTweenSpec: int duration>;

        return $i0;
    }

    public final int getDelay()
    {
        androidx.compose.animation.core.FloatTweenSpec r0;
        int $i0;

        r0 := @this: androidx.compose.animation.core.FloatTweenSpec;

        $i0 = r0.<androidx.compose.animation.core.FloatTweenSpec: int delay>;

        return $i0;
    }

    public float getValueFromNanos(long, float, float, float)
    {
        androidx.compose.animation.core.FloatTweenSpec r0;
        long l0, l1, l2;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7, $f8, $f9;
        int $i3, $i4;
        androidx.compose.animation.core.Easing $r1;

        r0 := @this: androidx.compose.animation.core.FloatTweenSpec;

        l0 := @parameter0: long;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        l1 = l0 / 1000000L;

        l2 = specialinvoke r0.<androidx.compose.animation.core.FloatTweenSpec: long clampPlayTime(long)>(l1);

        $i3 = r0.<androidx.compose.animation.core.FloatTweenSpec: int duration>;

        if $i3 != 0 goto label1;

        $f9 = 1.0F;

        goto label2;

     label1:
        $f6 = (float) l2;

        $i4 = r0.<androidx.compose.animation.core.FloatTweenSpec: int duration>;

        $f5 = (float) $i4;

        $f9 = $f6 / $f5;

     label2:
        f3 = $f9;

        $r1 = r0.<androidx.compose.animation.core.FloatTweenSpec: androidx.compose.animation.core.Easing easing>;

        $f7 = staticinvoke <kotlin.ranges.RangesKt: float coerceIn(float,float,float)>(f3, 0.0F, 1.0F);

        f4 = interfaceinvoke $r1.<androidx.compose.animation.core.Easing: float transform(float)>($f7);

        $f8 = staticinvoke <androidx.compose.animation.core.VectorConvertersKt: float lerp(float,float,float)>(f0, f1, f4);

        return $f8;
    }

    private final long clampPlayTime(long)
    {
        androidx.compose.animation.core.FloatTweenSpec r0;
        long l0, $l2, $l4, $l5, $l6;
        int $i1, $i3;

        r0 := @this: androidx.compose.animation.core.FloatTweenSpec;

        l0 := @parameter0: long;

        $i1 = r0.<androidx.compose.animation.core.FloatTweenSpec: int delay>;

        $l2 = (long) $i1;

        $l5 = l0 - $l2;

        $i3 = r0.<androidx.compose.animation.core.FloatTweenSpec: int duration>;

        $l4 = (long) $i3;

        $l6 = staticinvoke <kotlin.ranges.RangesKt: long coerceIn(long,long,long)>($l5, 0L, $l4);

        return $l6;
    }

    public long getDurationNanos(float, float, float)
    {
        androidx.compose.animation.core.FloatTweenSpec r0;
        float f0, f1, f2;
        int $i0, $i1, $i2;
        long $l3, $l4;

        r0 := @this: androidx.compose.animation.core.FloatTweenSpec;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $i1 = r0.<androidx.compose.animation.core.FloatTweenSpec: int delay>;

        $i0 = r0.<androidx.compose.animation.core.FloatTweenSpec: int duration>;

        $i2 = $i1 + $i0;

        $l3 = (long) $i2;

        $l4 = $l3 * 1000000L;

        return $l4;
    }

    public float getVelocityFromNanos(long, float, float, float)
    {
        androidx.compose.animation.core.FloatTweenSpec r0;
        long l0, l1, l2, $l5, $l6, $l7;
        float f0, f1, f2, f3, f4, $f5, $f6;
        byte $b3, $b4;

        r0 := @this: androidx.compose.animation.core.FloatTweenSpec;

        l0 := @parameter0: long;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        l1 = l0 / 1000000L;

        l2 = specialinvoke r0.<androidx.compose.animation.core.FloatTweenSpec: long clampPlayTime(long)>(l1);

        $b3 = l2 cmp 0L;

        if $b3 >= 0 goto label1;

        return 0.0F;

     label1:
        $b4 = l2 cmp 0L;

        if $b4 != 0 goto label2;

        return f2;

     label2:
        $l5 = l2 - 1L;

        $l6 = $l5 * 1000000L;

        f3 = virtualinvoke r0.<androidx.compose.animation.core.FloatTweenSpec: float getValueFromNanos(long,float,float,float)>($l6, f0, f1, f2);

        $l7 = l2 * 1000000L;

        f4 = virtualinvoke r0.<androidx.compose.animation.core.FloatTweenSpec: float getValueFromNanos(long,float,float,float)>($l7, f0, f1, f2);

        $f5 = f4 - f3;

        $f6 = $f5 * 1000.0F;

        return $f6;
    }

    public void <init>()
    {
        androidx.compose.animation.core.FloatTweenSpec r0;

        r0 := @this: androidx.compose.animation.core.FloatTweenSpec;

        specialinvoke r0.<androidx.compose.animation.core.FloatTweenSpec: void <init>(int,int,androidx.compose.animation.core.Easing,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0, 0, null, 7, null);

        return;
    }

    static void <clinit>()
    {
        return;
    }

