androidx.compose.runtime.CompositionScopedCoroutineScopeCanceller
<androidx.compose.runtime.CompositionScopedCoroutineScopeCanceller: kotlinx.coroutines.CoroutineScope coroutineScope>
    public void <init>(kotlinx.coroutines.CoroutineScope)
    {
        androidx.compose.runtime.CompositionScopedCoroutineScopeCanceller r0;
        kotlinx.coroutines.CoroutineScope r1;

        r0 := @this: androidx.compose.runtime.CompositionScopedCoroutineScopeCanceller;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "coroutineScope");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.runtime.CompositionScopedCoroutineScopeCanceller: kotlinx.coroutines.CoroutineScope coroutineScope> = r1;

        return;
    }

    public final kotlinx.coroutines.CoroutineScope getCoroutineScope()
    {
        androidx.compose.runtime.CompositionScopedCoroutineScopeCanceller r0;
        kotlinx.coroutines.CoroutineScope $r1;

        r0 := @this: androidx.compose.runtime.CompositionScopedCoroutineScopeCanceller;

        $r1 = r0.<androidx.compose.runtime.CompositionScopedCoroutineScopeCanceller: kotlinx.coroutines.CoroutineScope coroutineScope>;

        return $r1;
    }

    public void onRemembered()
    {
        androidx.compose.runtime.CompositionScopedCoroutineScopeCanceller r0;

        r0 := @this: androidx.compose.runtime.CompositionScopedCoroutineScopeCanceller;

        return;
    }

    public void onForgotten()
    {
        androidx.compose.runtime.CompositionScopedCoroutineScopeCanceller r0;
        kotlinx.coroutines.CoroutineScope $r1;

        r0 := @this: androidx.compose.runtime.CompositionScopedCoroutineScopeCanceller;

        $r1 = r0.<androidx.compose.runtime.CompositionScopedCoroutineScopeCanceller: kotlinx.coroutines.CoroutineScope coroutineScope>;

        staticinvoke <kotlinx.coroutines.CoroutineScopeKt: void cancel$default(kotlinx.coroutines.CoroutineScope,java.util.concurrent.CancellationException,int,java.lang.Object)>($r1, null, 1, null);

        return;
    }

    public void onAbandoned()
    {
        androidx.compose.runtime.CompositionScopedCoroutineScopeCanceller r0;
        kotlinx.coroutines.CoroutineScope $r1;

        r0 := @this: androidx.compose.runtime.CompositionScopedCoroutineScopeCanceller;

        $r1 = r0.<androidx.compose.runtime.CompositionScopedCoroutineScopeCanceller: kotlinx.coroutines.CoroutineScope coroutineScope>;

        staticinvoke <kotlinx.coroutines.CoroutineScopeKt: void cancel$default(kotlinx.coroutines.CoroutineScope,java.util.concurrent.CancellationException,int,java.lang.Object)>($r1, null, 1, null);

        return;
    }

