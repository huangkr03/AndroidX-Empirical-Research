androidx.media3.exoplayer.upstream.CachedRegionTracker
<androidx.media3.exoplayer.upstream.CachedRegionTracker: java.lang.String TAG>
<androidx.media3.exoplayer.upstream.CachedRegionTracker: int NOT_CACHED>
<androidx.media3.exoplayer.upstream.CachedRegionTracker: int CACHED_TO_END>
<androidx.media3.exoplayer.upstream.CachedRegionTracker: androidx.media3.datasource.cache.Cache cache>
<androidx.media3.exoplayer.upstream.CachedRegionTracker: java.lang.String cacheKey>
<androidx.media3.exoplayer.upstream.CachedRegionTracker: androidx.media3.extractor.ChunkIndex chunkIndex>
<androidx.media3.exoplayer.upstream.CachedRegionTracker: java.util.TreeSet regions>
<androidx.media3.exoplayer.upstream.CachedRegionTracker: androidx.media3.exoplayer.upstream.CachedRegionTracker$Region lookupRegion>
    public void <init>(androidx.media3.datasource.cache.Cache, java.lang.String, androidx.media3.extractor.ChunkIndex)
    {
        androidx.media3.exoplayer.upstream.CachedRegionTracker r0, r4;
        androidx.media3.datasource.cache.Cache r1;
        java.lang.String r2;
        androidx.media3.extractor.ChunkIndex r3;
        java.util.NavigableSet r5;
        java.util.Iterator r6;
        androidx.media3.datasource.cache.CacheSpan r7;
        java.lang.Throwable r8, $r13;
        java.util.TreeSet $r9;
        androidx.media3.exoplayer.upstream.CachedRegionTracker$Region $r10;
        boolean $z0;
        java.lang.Object $r12;

        r0 := @this: androidx.media3.exoplayer.upstream.CachedRegionTracker;

        r1 := @parameter0: androidx.media3.datasource.cache.Cache;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.media3.extractor.ChunkIndex;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker: androidx.media3.datasource.cache.Cache cache> = r1;

        r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker: java.lang.String cacheKey> = r2;

        r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker: androidx.media3.extractor.ChunkIndex chunkIndex> = r3;

        $r9 = new java.util.TreeSet;

        specialinvoke $r9.<java.util.TreeSet: void <init>()>();

        r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker: java.util.TreeSet regions> = $r9;

        $r10 = new androidx.media3.exoplayer.upstream.CachedRegionTracker$Region;

        specialinvoke $r10.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: void <init>(long,long)>(0L, 0L);

        r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker: androidx.media3.exoplayer.upstream.CachedRegionTracker$Region lookupRegion> = $r10;

        r4 = r0;

        entermonitor r0;

     label1:
        r5 = interfaceinvoke r1.<androidx.media3.datasource.cache.Cache: java.util.NavigableSet addListener(java.lang.String,androidx.media3.datasource.cache.Cache$Listener)>(r2, r0);

        r6 = interfaceinvoke r5.<java.util.NavigableSet: java.util.Iterator descendingIterator()>();

     label2:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r12 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (androidx.media3.datasource.cache.CacheSpan) $r12;

        specialinvoke r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker: void mergeSpan(androidx.media3.datasource.cache.CacheSpan)>(r7);

        goto label2;

     label3:
        exitmonitor r4;

     label4:
        goto label7;

     label5:
        $r13 := @caughtexception;

        r8 = $r13;

        exitmonitor r4;

     label6:
        throw r8;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void release()
    {
        androidx.media3.exoplayer.upstream.CachedRegionTracker r0;
        java.lang.String $r1;
        androidx.media3.datasource.cache.Cache $r2;

        r0 := @this: androidx.media3.exoplayer.upstream.CachedRegionTracker;

        $r2 = r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker: androidx.media3.datasource.cache.Cache cache>;

        $r1 = r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker: java.lang.String cacheKey>;

        interfaceinvoke $r2.<androidx.media3.datasource.cache.Cache: void removeListener(java.lang.String,androidx.media3.datasource.cache.Cache$Listener)>($r1, r0);

        return;
    }

    public synchronized int getRegionEndTimeMs(long)
    {
        androidx.media3.exoplayer.upstream.CachedRegionTracker r0;
        long l0, l2, $l3, $l8, $l9, $l10, $l11, $l13, $l14, $l15, $l16, $l17, $l20, $l21, $l22, $l23;
        androidx.media3.exoplayer.upstream.CachedRegionTracker$Region r1, $r2, $r3;
        int i1, $i5, $i6, $i7, $i12, $i18, $i19;
        java.util.TreeSet $r4;
        java.lang.Object $r5;
        byte $b4, $b24;
        androidx.media3.extractor.ChunkIndex $r6, $r7, $r9, $r11, $r13, $r15, $r17;
        long[] $r8, $r10, $r14, $r16;
        int[] $r12, $r18;

        r0 := @this: androidx.media3.exoplayer.upstream.CachedRegionTracker;

        l0 := @parameter0: long;

        $r2 = r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker: androidx.media3.exoplayer.upstream.CachedRegionTracker$Region lookupRegion>;

        $r2.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: long startOffset> = l0;

        $r4 = r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker: java.util.TreeSet regions>;

        $r3 = r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker: androidx.media3.exoplayer.upstream.CachedRegionTracker$Region lookupRegion>;

        $r5 = virtualinvoke $r4.<java.util.TreeSet: java.lang.Object floor(java.lang.Object)>($r3);

        r1 = (androidx.media3.exoplayer.upstream.CachedRegionTracker$Region) $r5;

        if r1 == null goto label1;

        $l3 = r1.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: long endOffset>;

        $b4 = l0 cmp $l3;

        if $b4 > 0 goto label1;

        $i5 = r1.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: int endOffsetIndex>;

        if $i5 != -1 goto label2;

     label1:
        return -1;

     label2:
        i1 = r1.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: int endOffsetIndex>;

        $r6 = r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker: androidx.media3.extractor.ChunkIndex chunkIndex>;

        $i6 = $r6.<androidx.media3.extractor.ChunkIndex: int length>;

        $i7 = $i6 - 1;

        if i1 != $i7 goto label3;

        $l23 = r1.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: long endOffset>;

        $r15 = r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker: androidx.media3.extractor.ChunkIndex chunkIndex>;

        $r16 = $r15.<androidx.media3.extractor.ChunkIndex: long[] offsets>;

        $l21 = $r16[i1];

        $r17 = r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker: androidx.media3.extractor.ChunkIndex chunkIndex>;

        $r18 = $r17.<androidx.media3.extractor.ChunkIndex: int[] sizes>;

        $i19 = $r18[i1];

        $l20 = (long) $i19;

        $l22 = $l21 + $l20;

        $b24 = $l23 cmp $l22;

        if $b24 != 0 goto label3;

        return -2;

     label3:
        $r7 = r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker: androidx.media3.extractor.ChunkIndex chunkIndex>;

        $r8 = $r7.<androidx.media3.extractor.ChunkIndex: long[] durationsUs>;

        $l11 = $r8[i1];

        $l9 = r1.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: long endOffset>;

        $r9 = r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker: androidx.media3.extractor.ChunkIndex chunkIndex>;

        $r10 = $r9.<androidx.media3.extractor.ChunkIndex: long[] offsets>;

        $l8 = $r10[i1];

        $l10 = $l9 - $l8;

        $l14 = $l11 * $l10;

        $r11 = r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker: androidx.media3.extractor.ChunkIndex chunkIndex>;

        $r12 = $r11.<androidx.media3.extractor.ChunkIndex: int[] sizes>;

        $i12 = $r12[i1];

        $l13 = (long) $i12;

        l2 = $l14 / $l13;

        $r13 = r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker: androidx.media3.extractor.ChunkIndex chunkIndex>;

        $r14 = $r13.<androidx.media3.extractor.ChunkIndex: long[] timesUs>;

        $l15 = $r14[i1];

        $l16 = $l15 + l2;

        $l17 = $l16 / 1000L;

        $i18 = (int) $l17;

        return $i18;
    }

    public synchronized void onSpanAdded(androidx.media3.datasource.cache.Cache, androidx.media3.datasource.cache.CacheSpan)
    {
        androidx.media3.exoplayer.upstream.CachedRegionTracker r0;
        androidx.media3.datasource.cache.Cache r1;
        androidx.media3.datasource.cache.CacheSpan r2;

        r0 := @this: androidx.media3.exoplayer.upstream.CachedRegionTracker;

        r1 := @parameter0: androidx.media3.datasource.cache.Cache;

        r2 := @parameter1: androidx.media3.datasource.cache.CacheSpan;

        specialinvoke r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker: void mergeSpan(androidx.media3.datasource.cache.CacheSpan)>(r2);

        return;
    }

    public synchronized void onSpanRemoved(androidx.media3.datasource.cache.Cache, androidx.media3.datasource.cache.CacheSpan)
    {
        androidx.media3.exoplayer.upstream.CachedRegionTracker r0;
        androidx.media3.datasource.cache.Cache r1;
        androidx.media3.datasource.cache.CacheSpan r2;
        androidx.media3.exoplayer.upstream.CachedRegionTracker$Region r3, r4, $r5, $r9, $r11, r16, r17;
        int i0, $i11, $i15, $i16;
        long $l1, $l2, $l3, $l4, $l5, $l6, $l8, $l9, $l10, $l12, $l13, $l14, $l17, $l18;
        java.util.TreeSet $r6, $r8, $r10, $r14;
        java.lang.Object $r7;
        byte $b7, $b19;
        androidx.media3.extractor.ChunkIndex $r12;
        long[] $r13;

        r0 := @this: androidx.media3.exoplayer.upstream.CachedRegionTracker;

        r1 := @parameter0: androidx.media3.datasource.cache.Cache;

        r2 := @parameter1: androidx.media3.datasource.cache.CacheSpan;

        $r5 = new androidx.media3.exoplayer.upstream.CachedRegionTracker$Region;

        $l4 = r2.<androidx.media3.datasource.cache.CacheSpan: long position>;

        $l2 = r2.<androidx.media3.datasource.cache.CacheSpan: long position>;

        $l1 = r2.<androidx.media3.datasource.cache.CacheSpan: long length>;

        $l3 = $l2 + $l1;

        specialinvoke $r5.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: void <init>(long,long)>($l4, $l3);

        r3 = $r5;

        $r6 = r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker: java.util.TreeSet regions>;

        $r7 = virtualinvoke $r6.<java.util.TreeSet: java.lang.Object floor(java.lang.Object)>(r3);

        r4 = (androidx.media3.exoplayer.upstream.CachedRegionTracker$Region) $r7;

        if r4 != null goto label1;

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String)>("CachedRegionTracker", "Removed a span we were not aware of");

        return;

     label1:
        $r8 = r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker: java.util.TreeSet regions>;

        virtualinvoke $r8.<java.util.TreeSet: boolean remove(java.lang.Object)>(r4);

        $l6 = r4.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: long startOffset>;

        $l5 = r3.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: long startOffset>;

        $b7 = $l6 cmp $l5;

        if $b7 >= 0 goto label4;

        $r11 = new androidx.media3.exoplayer.upstream.CachedRegionTracker$Region;

        $l13 = r4.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: long startOffset>;

        $l12 = r3.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: long startOffset>;

        specialinvoke $r11.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: void <init>(long,long)>($l13, $l12);

        r16 = $r11;

        $r12 = r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker: androidx.media3.extractor.ChunkIndex chunkIndex>;

        $r13 = $r12.<androidx.media3.extractor.ChunkIndex: long[] offsets>;

        $l14 = r16.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: long endOffset>;

        i0 = staticinvoke <java.util.Arrays: int binarySearch(long[],long)>($r13, $l14);

        if i0 >= 0 goto label2;

        $i15 = neg i0;

        $i16 = $i15 - 2;

        goto label3;

     label2:
        $i16 = i0;

     label3:
        r16.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: int endOffsetIndex> = $i16;

        $r14 = r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker: java.util.TreeSet regions>;

        virtualinvoke $r14.<java.util.TreeSet: boolean add(java.lang.Object)>(r16);

     label4:
        $l17 = r4.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: long endOffset>;

        $l18 = r3.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: long endOffset>;

        $b19 = $l17 cmp $l18;

        if $b19 <= 0 goto label5;

        $r9 = new androidx.media3.exoplayer.upstream.CachedRegionTracker$Region;

        $l8 = r3.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: long endOffset>;

        $l10 = $l8 + 1L;

        $l9 = r4.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: long endOffset>;

        specialinvoke $r9.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: void <init>(long,long)>($l10, $l9);

        r17 = $r9;

        $i11 = r4.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: int endOffsetIndex>;

        r17.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: int endOffsetIndex> = $i11;

        $r10 = r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker: java.util.TreeSet regions>;

        virtualinvoke $r10.<java.util.TreeSet: boolean add(java.lang.Object)>(r17);

     label5:
        return;
    }

    public void onSpanTouched(androidx.media3.datasource.cache.Cache, androidx.media3.datasource.cache.CacheSpan, androidx.media3.datasource.cache.CacheSpan)
    {
        androidx.media3.exoplayer.upstream.CachedRegionTracker r0;
        androidx.media3.datasource.cache.Cache r1;
        androidx.media3.datasource.cache.CacheSpan r2, r3;

        r0 := @this: androidx.media3.exoplayer.upstream.CachedRegionTracker;

        r1 := @parameter0: androidx.media3.datasource.cache.Cache;

        r2 := @parameter1: androidx.media3.datasource.cache.CacheSpan;

        r3 := @parameter2: androidx.media3.datasource.cache.CacheSpan;

        return;
    }

    private void mergeSpan(androidx.media3.datasource.cache.CacheSpan)
    {
        androidx.media3.exoplayer.upstream.CachedRegionTracker r0;
        androidx.media3.datasource.cache.CacheSpan r1;
        androidx.media3.exoplayer.upstream.CachedRegionTracker$Region r2, r3, r4, $r5;
        boolean z0, z1;
        long $l0, $l1, $l2, $l3, $l4, $l6, $l10, $l11, $l13, $l15;
        java.util.TreeSet $r6, $r8, $r12, $r17, $r18;
        java.lang.Object $r7, $r9;
        androidx.media3.extractor.ChunkIndex $r10, $r14, $r15;
        long[] $r11, $r16;
        int $i5, $i7, $i8, $i9, $i14, $i16, i17, i18, $i19;
        byte $b12;

        r0 := @this: androidx.media3.exoplayer.upstream.CachedRegionTracker;

        r1 := @parameter0: androidx.media3.datasource.cache.CacheSpan;

        $r5 = new androidx.media3.exoplayer.upstream.CachedRegionTracker$Region;

        $l3 = r1.<androidx.media3.datasource.cache.CacheSpan: long position>;

        $l1 = r1.<androidx.media3.datasource.cache.CacheSpan: long position>;

        $l0 = r1.<androidx.media3.datasource.cache.CacheSpan: long length>;

        $l2 = $l1 + $l0;

        specialinvoke $r5.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: void <init>(long,long)>($l3, $l2);

        r2 = $r5;

        $r6 = r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker: java.util.TreeSet regions>;

        $r7 = virtualinvoke $r6.<java.util.TreeSet: java.lang.Object floor(java.lang.Object)>(r2);

        r3 = (androidx.media3.exoplayer.upstream.CachedRegionTracker$Region) $r7;

        $r8 = r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker: java.util.TreeSet regions>;

        $r9 = virtualinvoke $r8.<java.util.TreeSet: java.lang.Object ceiling(java.lang.Object)>(r2);

        r4 = (androidx.media3.exoplayer.upstream.CachedRegionTracker$Region) $r9;

        z0 = specialinvoke r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker: boolean regionsConnect(androidx.media3.exoplayer.upstream.CachedRegionTracker$Region,androidx.media3.exoplayer.upstream.CachedRegionTracker$Region)>(r3, r2);

        z1 = specialinvoke r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker: boolean regionsConnect(androidx.media3.exoplayer.upstream.CachedRegionTracker$Region,androidx.media3.exoplayer.upstream.CachedRegionTracker$Region)>(r2, r4);

        if z1 == 0 goto label3;

        if z0 == 0 goto label1;

        $l15 = r4.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: long endOffset>;

        r3.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: long endOffset> = $l15;

        $i16 = r4.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: int endOffsetIndex>;

        r3.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: int endOffsetIndex> = $i16;

        goto label2;

     label1:
        $l13 = r4.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: long endOffset>;

        r2.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: long endOffset> = $l13;

        $i14 = r4.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: int endOffsetIndex>;

        r2.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: int endOffsetIndex> = $i14;

        $r17 = r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker: java.util.TreeSet regions>;

        virtualinvoke $r17.<java.util.TreeSet: boolean add(java.lang.Object)>(r2);

     label2:
        $r18 = r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker: java.util.TreeSet regions>;

        virtualinvoke $r18.<java.util.TreeSet: boolean remove(java.lang.Object)>(r4);

        goto label9;

     label3:
        if z0 == 0 goto label6;

        $l6 = r2.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: long endOffset>;

        r3.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: long endOffset> = $l6;

        i17 = r3.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: int endOffsetIndex>;

     label4:
        $r14 = r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker: androidx.media3.extractor.ChunkIndex chunkIndex>;

        $i7 = $r14.<androidx.media3.extractor.ChunkIndex: int length>;

        $i8 = $i7 - 1;

        if i17 >= $i8 goto label5;

        $r15 = r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker: androidx.media3.extractor.ChunkIndex chunkIndex>;

        $r16 = $r15.<androidx.media3.extractor.ChunkIndex: long[] offsets>;

        $i9 = i17 + 1;

        $l11 = $r16[$i9];

        $l10 = r3.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: long endOffset>;

        $b12 = $l11 cmp $l10;

        if $b12 > 0 goto label5;

        i17 = i17 + 1;

        goto label4;

     label5:
        r3.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: int endOffsetIndex> = i17;

        goto label9;

     label6:
        $r10 = r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker: androidx.media3.extractor.ChunkIndex chunkIndex>;

        $r11 = $r10.<androidx.media3.extractor.ChunkIndex: long[] offsets>;

        $l4 = r2.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: long endOffset>;

        i18 = staticinvoke <java.util.Arrays: int binarySearch(long[],long)>($r11, $l4);

        if i18 >= 0 goto label7;

        $i5 = neg i18;

        $i19 = $i5 - 2;

        goto label8;

     label7:
        $i19 = i18;

     label8:
        r2.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: int endOffsetIndex> = $i19;

        $r12 = r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker: java.util.TreeSet regions>;

        virtualinvoke $r12.<java.util.TreeSet: boolean add(java.lang.Object)>(r2);

     label9:
        return;
    }

    private boolean regionsConnect(androidx.media3.exoplayer.upstream.CachedRegionTracker$Region, androidx.media3.exoplayer.upstream.CachedRegionTracker$Region)
    {
        androidx.media3.exoplayer.upstream.CachedRegionTracker r0;
        androidx.media3.exoplayer.upstream.CachedRegionTracker$Region r1, r2;
        long $l0, $l1;
        byte $b2;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.upstream.CachedRegionTracker;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.CachedRegionTracker$Region;

        r2 := @parameter1: androidx.media3.exoplayer.upstream.CachedRegionTracker$Region;

        if r1 == null goto label1;

        if r2 == null goto label1;

        $l1 = r1.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: long endOffset>;

        $l0 = r2.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: long startOffset>;

        $b2 = $l1 cmp $l0;

        if $b2 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

androidx.media3.exoplayer.upstream.CachedRegionTracker$Region
<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: long startOffset>
<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: long endOffset>
<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: int endOffsetIndex>
    public void <init>(long, long)
    {
        androidx.media3.exoplayer.upstream.CachedRegionTracker$Region r0;
        long l0, l1;

        r0 := @this: androidx.media3.exoplayer.upstream.CachedRegionTracker$Region;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: long startOffset> = l0;

        r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: long endOffset> = l1;

        return;
    }

    public int compareTo(androidx.media3.exoplayer.upstream.CachedRegionTracker$Region)
    {
        androidx.media3.exoplayer.upstream.CachedRegionTracker$Region r0, r1;
        long $l0, $l1;
        int $i2;

        r0 := @this: androidx.media3.exoplayer.upstream.CachedRegionTracker$Region;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.CachedRegionTracker$Region;

        $l1 = r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: long startOffset>;

        $l0 = r1.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: long startOffset>;

        $i2 = staticinvoke <androidx.media3.common.util.Util: int compareLong(long,long)>($l1, $l0);

        return $i2;
    }

    public volatile int compareTo(java.lang.Object)
    {
        androidx.media3.exoplayer.upstream.CachedRegionTracker$Region r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.upstream.CachedRegionTracker$Region;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.media3.exoplayer.upstream.CachedRegionTracker$Region) r1;

        $i0 = virtualinvoke r0.<androidx.media3.exoplayer.upstream.CachedRegionTracker$Region: int compareTo(androidx.media3.exoplayer.upstream.CachedRegionTracker$Region)>($r2);

        return $i0;
    }

