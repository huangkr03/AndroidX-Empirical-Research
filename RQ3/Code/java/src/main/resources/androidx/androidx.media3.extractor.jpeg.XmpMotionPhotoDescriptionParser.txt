androidx.media3.extractor.jpeg.XmpMotionPhotoDescriptionParser
<androidx.media3.extractor.jpeg.XmpMotionPhotoDescriptionParser: java.lang.String TAG>
<androidx.media3.extractor.jpeg.XmpMotionPhotoDescriptionParser: java.lang.String[] MOTION_PHOTO_ATTRIBUTE_NAMES>
<androidx.media3.extractor.jpeg.XmpMotionPhotoDescriptionParser: java.lang.String[] DESCRIPTION_MOTION_PHOTO_PRESENTATION_TIMESTAMP_ATTRIBUTE_NAMES>
<androidx.media3.extractor.jpeg.XmpMotionPhotoDescriptionParser: java.lang.String[] DESCRIPTION_MICRO_VIDEO_OFFSET_ATTRIBUTE_NAMES>
    public static androidx.media3.extractor.jpeg.MotionPhotoDescription parse(java.lang.String) throws java.io.IOException
    {
        java.lang.String r0;
        java.lang.Throwable r1, $r3;
        androidx.media3.extractor.jpeg.MotionPhotoDescription $r2;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <androidx.media3.extractor.jpeg.XmpMotionPhotoDescriptionParser: androidx.media3.extractor.jpeg.MotionPhotoDescription parseInternal(java.lang.String)>(r0);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MotionPhotoXmpParser", "Ignoring unexpected XMP metadata");

        return null;

        catch org.xmlpull.v1.XmlPullParserException from label1 to label2 with label3;
        catch androidx.media3.common.ParserException from label1 to label2 with label3;
        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private static androidx.media3.extractor.jpeg.MotionPhotoDescription parseInternal(java.lang.String) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.lang.String r0;
        org.xmlpull.v1.XmlPullParserFactory r1;
        org.xmlpull.v1.XmlPullParser r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        androidx.media3.common.ParserException $r5;
        long l2;
        com.google.common.collect.ImmutableList r6;
        java.io.StringReader r7;
        androidx.media3.extractor.jpeg.MotionPhotoDescription r8;
        java.lang.Throwable r9;

        r0 := @parameter0: java.lang.String;

        r1 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();

        r2 = virtualinvoke r1.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>();

        r7 = new java.io.StringReader;

        specialinvoke r7.<java.io.StringReader: void <init>(java.lang.String)>(r0);

        interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.Reader)>(r7);

        interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        $z0 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r2, "x:xmpmeta");

        if $z0 != 0 goto label1;

        $r5 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedContainer(java.lang.String,java.lang.Throwable)>("Couldn\'t find xmp metadata", null);

        r9 = (java.lang.Throwable) $r5;

        throw r9;

     label1:
        l2 = -9223372036854775807L;

        r6 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();

     label2:
        interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        $z1 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r2, "rdf:Description");

        if $z1 == 0 goto label4;

        $z5 = staticinvoke <androidx.media3.extractor.jpeg.XmpMotionPhotoDescriptionParser: boolean parseMotionPhotoFlagFromDescription(org.xmlpull.v1.XmlPullParser)>(r2);

        if $z5 != 0 goto label3;

        return null;

     label3:
        l2 = staticinvoke <androidx.media3.extractor.jpeg.XmpMotionPhotoDescriptionParser: long parseMotionPhotoPresentationTimestampUsFromDescription(org.xmlpull.v1.XmlPullParser)>(r2);

        r6 = staticinvoke <androidx.media3.extractor.jpeg.XmpMotionPhotoDescriptionParser: com.google.common.collect.ImmutableList parseMicroVideoOffsetFromDescription(org.xmlpull.v1.XmlPullParser)>(r2);

        goto label6;

     label4:
        $z2 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r2, "Container:Directory");

        if $z2 == 0 goto label5;

        r6 = staticinvoke <androidx.media3.extractor.jpeg.XmpMotionPhotoDescriptionParser: com.google.common.collect.ImmutableList parseMotionPhotoV1Directory(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String)>(r2, "Container", "Item");

        goto label6;

     label5:
        $z3 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r2, "GContainer:Directory");

        if $z3 == 0 goto label6;

        r6 = staticinvoke <androidx.media3.extractor.jpeg.XmpMotionPhotoDescriptionParser: com.google.common.collect.ImmutableList parseMotionPhotoV1Directory(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String)>(r2, "GContainer", "GContainerItem");

     label6:
        $z6 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isEndTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r2, "x:xmpmeta");

        if $z6 == 0 goto label2;

        $z4 = interfaceinvoke r6.<java.util.List: boolean isEmpty()>();

        if $z4 == 0 goto label7;

        return null;

     label7:
        r8 = new androidx.media3.extractor.jpeg.MotionPhotoDescription;

        specialinvoke r8.<androidx.media3.extractor.jpeg.MotionPhotoDescription: void <init>(long,java.util.List)>(l2, r6);

        return r8;
    }

    private static boolean parseMotionPhotoFlagFromDescription(org.xmlpull.v1.XmlPullParser)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String[] r1;
        int i0, i1, i2;
        java.lang.String r2, r3;
        boolean $z0;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 = <androidx.media3.extractor.jpeg.XmpMotionPhotoDescriptionParser: java.lang.String[] MOTION_PHOTO_ATTRIBUTE_NAMES>;

        i0 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i0 goto label5;

        r2 = r1[i2];

        r3 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: java.lang.String getAttributeValue(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, r2);

        if r3 == null goto label4;

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

        if i1 != 1 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        return 0;
    }

    private static long parseMotionPhotoPresentationTimestampUsFromDescription(org.xmlpull.v1.XmlPullParser)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String[] r1;
        int i0, i3;
        java.lang.String r2, r3;
        long l1, $l4;
        byte $b2;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 = <androidx.media3.extractor.jpeg.XmpMotionPhotoDescriptionParser: java.lang.String[] DESCRIPTION_MOTION_PHOTO_PRESENTATION_TIMESTAMP_ATTRIBUTE_NAMES>;

        i0 = lengthof r1;

        i3 = 0;

     label1:
        if i3 >= i0 goto label5;

        r2 = r1[i3];

        r3 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: java.lang.String getAttributeValue(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, r2);

        if r3 == null goto label4;

        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r3);

        $b2 = l1 cmp -1L;

        if $b2 != 0 goto label2;

        $l4 = -9223372036854775807L;

        goto label3;

     label2:
        $l4 = l1;

     label3:
        return $l4;

     label4:
        i3 = i3 + 1;

        goto label1;

     label5:
        return -9223372036854775807L;
    }

    private static com.google.common.collect.ImmutableList parseMicroVideoOffsetFromDescription(org.xmlpull.v1.XmlPullParser)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String[] r1;
        int i0, i2;
        java.lang.String r2, r3;
        long l1;
        com.google.common.collect.ImmutableList $r4, $r7;
        androidx.media3.extractor.jpeg.MotionPhotoDescription$ContainerItem $r5, $r6;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 = <androidx.media3.extractor.jpeg.XmpMotionPhotoDescriptionParser: java.lang.String[] DESCRIPTION_MICRO_VIDEO_OFFSET_ATTRIBUTE_NAMES>;

        i0 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        r2 = r1[i2];

        r3 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: java.lang.String getAttributeValue(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, r2);

        if r3 == null goto label2;

        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r3);

        $r5 = new androidx.media3.extractor.jpeg.MotionPhotoDescription$ContainerItem;

        specialinvoke $r5.<androidx.media3.extractor.jpeg.MotionPhotoDescription$ContainerItem: void <init>(java.lang.String,java.lang.String,long,long)>("image/jpeg", "Primary", 0L, 0L);

        $r6 = new androidx.media3.extractor.jpeg.MotionPhotoDescription$ContainerItem;

        specialinvoke $r6.<androidx.media3.extractor.jpeg.MotionPhotoDescription$ContainerItem: void <init>(java.lang.String,java.lang.String,long,long)>("video/mp4", "MotionPhoto", l1, 0L);

        $r7 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object)>($r5, $r6);

        return $r7;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r4 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();

        return $r4;
    }

    private static com.google.common.collect.ImmutableList parseMotionPhotoV1Directory(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, r2, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13;
        com.google.common.collect.ImmutableList$Builder r3;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r18, $r19, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32;
        boolean $z0, $z1;
        com.google.common.collect.ImmutableList $r20, $r33;
        long $l1, $l3, $l4;
        androidx.media3.extractor.jpeg.MotionPhotoDescription$ContainerItem $r36;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList$Builder builder()>();

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":Item");

        r4 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":Directory");

        r5 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        $z0 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, r4);

        if $z0 == 0 goto label8;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":Mime");

        r6 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":Semantic");

        r7 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":Length");

        r8 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":Padding");

        r9 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        r10 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: java.lang.String getAttributeValue(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, r6);

        r11 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: java.lang.String getAttributeValue(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, r7);

        r12 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: java.lang.String getAttributeValue(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, r8);

        r13 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: java.lang.String getAttributeValue(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, r9);

        if r10 == null goto label2;

        if r11 != null goto label3;

     label2:
        $r33 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();

        return $r33;

     label3:
        $r36 = new androidx.media3.extractor.jpeg.MotionPhotoDescription$ContainerItem;

        if r12 == null goto label4;

        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r12);

        $l3 = $l1;

        goto label5;

     label4:
        $l3 = 0L;

     label5:
        if r13 == null goto label6;

        $l4 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r13);

        goto label7;

     label6:
        $l4 = 0L;

     label7:
        specialinvoke $r36.<androidx.media3.extractor.jpeg.MotionPhotoDescription$ContainerItem: void <init>(java.lang.String,java.lang.String,long,long)>(r10, r11, $l3, $l4);

        virtualinvoke r3.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder add(java.lang.Object)>($r36);

     label8:
        $z1 = staticinvoke <androidx.media3.common.util.XmlPullParserUtil: boolean isEndTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, r5);

        if $z1 == 0 goto label1;

        $r20 = virtualinvoke r3.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList build()>();

        return $r20;
    }

    private void <init>()
    {
        androidx.media3.extractor.jpeg.XmpMotionPhotoDescriptionParser r0;

        r0 := @this: androidx.media3.extractor.jpeg.XmpMotionPhotoDescriptionParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0, $r1, $r2;

        $r0 = newarray (java.lang.String)[4];

        $r0[0] = "Camera:MotionPhoto";

        $r0[1] = "GCamera:MotionPhoto";

        $r0[2] = "Camera:MicroVideo";

        $r0[3] = "GCamera:MicroVideo";

        <androidx.media3.extractor.jpeg.XmpMotionPhotoDescriptionParser: java.lang.String[] MOTION_PHOTO_ATTRIBUTE_NAMES> = $r0;

        $r1 = newarray (java.lang.String)[4];

        $r1[0] = "Camera:MotionPhotoPresentationTimestampUs";

        $r1[1] = "GCamera:MotionPhotoPresentationTimestampUs";

        $r1[2] = "Camera:MicroVideoPresentationTimestampUs";

        $r1[3] = "GCamera:MicroVideoPresentationTimestampUs";

        <androidx.media3.extractor.jpeg.XmpMotionPhotoDescriptionParser: java.lang.String[] DESCRIPTION_MOTION_PHOTO_PRESENTATION_TIMESTAMP_ATTRIBUTE_NAMES> = $r1;

        $r2 = newarray (java.lang.String)[2];

        $r2[0] = "Camera:MicroVideoOffset";

        $r2[1] = "GCamera:MicroVideoOffset";

        <androidx.media3.extractor.jpeg.XmpMotionPhotoDescriptionParser: java.lang.String[] DESCRIPTION_MICRO_VIDEO_OFFSET_ATTRIBUTE_NAMES> = $r2;

        return;
    }

