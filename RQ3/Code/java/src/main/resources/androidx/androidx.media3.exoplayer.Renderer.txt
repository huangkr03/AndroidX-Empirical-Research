androidx.media3.exoplayer.Renderer
<androidx.media3.exoplayer.Renderer: int MSG_SET_VIDEO_OUTPUT>
<androidx.media3.exoplayer.Renderer: int MSG_SET_VOLUME>
<androidx.media3.exoplayer.Renderer: int MSG_SET_AUDIO_ATTRIBUTES>
<androidx.media3.exoplayer.Renderer: int MSG_SET_SCALING_MODE>
<androidx.media3.exoplayer.Renderer: int MSG_SET_CHANGE_FRAME_RATE_STRATEGY>
<androidx.media3.exoplayer.Renderer: int MSG_SET_AUX_EFFECT_INFO>
<androidx.media3.exoplayer.Renderer: int MSG_SET_VIDEO_FRAME_METADATA_LISTENER>
<androidx.media3.exoplayer.Renderer: int MSG_SET_CAMERA_MOTION_LISTENER>
<androidx.media3.exoplayer.Renderer: int MSG_SET_SKIP_SILENCE_ENABLED>
<androidx.media3.exoplayer.Renderer: int MSG_SET_AUDIO_SESSION_ID>
<androidx.media3.exoplayer.Renderer: int MSG_SET_WAKEUP_LISTENER>
<androidx.media3.exoplayer.Renderer: int MSG_SET_PREFERRED_AUDIO_DEVICE>
<androidx.media3.exoplayer.Renderer: int MSG_CUSTOM_BASE>
<androidx.media3.exoplayer.Renderer: int STATE_DISABLED>
<androidx.media3.exoplayer.Renderer: int STATE_ENABLED>
<androidx.media3.exoplayer.Renderer: int STATE_STARTED>
<androidx.media3.exoplayer.Renderer: java.lang.String getName()>
<androidx.media3.exoplayer.Renderer: int getTrackType()>
<androidx.media3.exoplayer.Renderer: androidx.media3.exoplayer.RendererCapabilities getCapabilities()>
<androidx.media3.exoplayer.Renderer: void init(int,androidx.media3.exoplayer.analytics.PlayerId)>
<androidx.media3.exoplayer.Renderer: androidx.media3.exoplayer.MediaClock getMediaClock()>
<androidx.media3.exoplayer.Renderer: int getState()>
<androidx.media3.exoplayer.Renderer: void enable(androidx.media3.exoplayer.RendererConfiguration,androidx.media3.common.Format[],androidx.media3.exoplayer.source.SampleStream,long,boolean,boolean,long,long)>
<androidx.media3.exoplayer.Renderer: void start()>
<androidx.media3.exoplayer.Renderer: void replaceStream(androidx.media3.common.Format[],androidx.media3.exoplayer.source.SampleStream,long,long)>
<androidx.media3.exoplayer.Renderer: androidx.media3.exoplayer.source.SampleStream getStream()>
<androidx.media3.exoplayer.Renderer: boolean hasReadStreamToEnd()>
<androidx.media3.exoplayer.Renderer: long getReadingPositionUs()>
<androidx.media3.exoplayer.Renderer: void setCurrentStreamFinal()>
<androidx.media3.exoplayer.Renderer: boolean isCurrentStreamFinal()>
<androidx.media3.exoplayer.Renderer: void maybeThrowStreamError()>
<androidx.media3.exoplayer.Renderer: void resetPosition(long)>
    public void setPlaybackSpeed(float, float) throws androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.exoplayer.Renderer r0;
        float f0, f1;

        r0 := @this: androidx.media3.exoplayer.Renderer;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        return;
    }

<androidx.media3.exoplayer.Renderer: void render(long,long)>
<androidx.media3.exoplayer.Renderer: boolean isReady()>
<androidx.media3.exoplayer.Renderer: boolean isEnded()>
<androidx.media3.exoplayer.Renderer: void stop()>
<androidx.media3.exoplayer.Renderer: void disable()>
<androidx.media3.exoplayer.Renderer: void reset()>
androidx.media3.exoplayer.Renderer$MessageType
androidx.media3.exoplayer.Renderer$State
androidx.media3.exoplayer.Renderer$WakeupListener
<androidx.media3.exoplayer.Renderer$WakeupListener: void onSleep()>
<androidx.media3.exoplayer.Renderer$WakeupListener: void onWakeup()>
