androidx.media3.extractor.text.webvtt.WebvttCueParser
<androidx.media3.extractor.text.webvtt.WebvttCueParser: int TEXT_ALIGNMENT_START>
<androidx.media3.extractor.text.webvtt.WebvttCueParser: int TEXT_ALIGNMENT_CENTER>
<androidx.media3.extractor.text.webvtt.WebvttCueParser: int TEXT_ALIGNMENT_END>
<androidx.media3.extractor.text.webvtt.WebvttCueParser: int TEXT_ALIGNMENT_LEFT>
<androidx.media3.extractor.text.webvtt.WebvttCueParser: int TEXT_ALIGNMENT_RIGHT>
<androidx.media3.extractor.text.webvtt.WebvttCueParser: java.util.regex.Pattern CUE_HEADER_PATTERN>
<androidx.media3.extractor.text.webvtt.WebvttCueParser: java.util.regex.Pattern CUE_SETTING_PATTERN>
<androidx.media3.extractor.text.webvtt.WebvttCueParser: char CHAR_LESS_THAN>
<androidx.media3.extractor.text.webvtt.WebvttCueParser: char CHAR_GREATER_THAN>
<androidx.media3.extractor.text.webvtt.WebvttCueParser: char CHAR_SLASH>
<androidx.media3.extractor.text.webvtt.WebvttCueParser: char CHAR_AMPERSAND>
<androidx.media3.extractor.text.webvtt.WebvttCueParser: char CHAR_SEMI_COLON>
<androidx.media3.extractor.text.webvtt.WebvttCueParser: char CHAR_SPACE>
<androidx.media3.extractor.text.webvtt.WebvttCueParser: java.lang.String ENTITY_LESS_THAN>
<androidx.media3.extractor.text.webvtt.WebvttCueParser: java.lang.String ENTITY_GREATER_THAN>
<androidx.media3.extractor.text.webvtt.WebvttCueParser: java.lang.String ENTITY_AMPERSAND>
<androidx.media3.extractor.text.webvtt.WebvttCueParser: java.lang.String ENTITY_NON_BREAK_SPACE>
<androidx.media3.extractor.text.webvtt.WebvttCueParser: java.lang.String TAG_BOLD>
<androidx.media3.extractor.text.webvtt.WebvttCueParser: java.lang.String TAG_CLASS>
<androidx.media3.extractor.text.webvtt.WebvttCueParser: java.lang.String TAG_ITALIC>
<androidx.media3.extractor.text.webvtt.WebvttCueParser: java.lang.String TAG_LANG>
<androidx.media3.extractor.text.webvtt.WebvttCueParser: java.lang.String TAG_RUBY>
<androidx.media3.extractor.text.webvtt.WebvttCueParser: java.lang.String TAG_RUBY_TEXT>
<androidx.media3.extractor.text.webvtt.WebvttCueParser: java.lang.String TAG_UNDERLINE>
<androidx.media3.extractor.text.webvtt.WebvttCueParser: java.lang.String TAG_VOICE>
<androidx.media3.extractor.text.webvtt.WebvttCueParser: int STYLE_BOLD>
<androidx.media3.extractor.text.webvtt.WebvttCueParser: int STYLE_ITALIC>
<androidx.media3.extractor.text.webvtt.WebvttCueParser: float DEFAULT_POSITION>
<androidx.media3.extractor.text.webvtt.WebvttCueParser: java.lang.String TAG>
<androidx.media3.extractor.text.webvtt.WebvttCueParser: java.util.Map DEFAULT_TEXT_COLORS>
<androidx.media3.extractor.text.webvtt.WebvttCueParser: java.util.Map DEFAULT_BACKGROUND_COLORS>
    public void <init>()
    {
        androidx.media3.extractor.text.webvtt.WebvttCueParser r0;

        r0 := @this: androidx.media3.extractor.text.webvtt.WebvttCueParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static androidx.media3.extractor.text.webvtt.WebvttCueInfo parseCue(androidx.media3.common.util.ParsableByteArray, java.util.List)
    {
        androidx.media3.common.util.ParsableByteArray r0;
        java.util.List r1;
        java.lang.String r2, r3, $r6;
        java.util.regex.Pattern $r4, $r5;
        boolean $z0, $z1;
        androidx.media3.extractor.text.webvtt.WebvttCueInfo $r7, $r8;
        java.util.regex.Matcher r9, r10;

        r0 := @parameter0: androidx.media3.common.util.ParsableByteArray;

        r1 := @parameter1: java.util.List;

        r2 = virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: java.lang.String readLine()>();

        if r2 != null goto label1;

        return null;

     label1:
        $r4 = <androidx.media3.extractor.text.webvtt.WebvttCueParser: java.util.regex.Pattern CUE_HEADER_PATTERN>;

        r9 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r2);

        $z0 = virtualinvoke r9.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label2;

        $r8 = staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser: androidx.media3.extractor.text.webvtt.WebvttCueInfo parseCue(java.lang.String,java.util.regex.Matcher,androidx.media3.common.util.ParsableByteArray,java.util.List)>(null, r9, r0, r1);

        return $r8;

     label2:
        r3 = virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: java.lang.String readLine()>();

        if r3 != null goto label3;

        return null;

     label3:
        $r5 = <androidx.media3.extractor.text.webvtt.WebvttCueParser: java.util.regex.Pattern CUE_HEADER_PATTERN>;

        r10 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r3);

        $z1 = virtualinvoke r10.<java.util.regex.Matcher: boolean matches()>();

        if $z1 == 0 goto label4;

        $r6 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();

        $r7 = staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser: androidx.media3.extractor.text.webvtt.WebvttCueInfo parseCue(java.lang.String,java.util.regex.Matcher,androidx.media3.common.util.ParsableByteArray,java.util.List)>($r6, r10, r0, r1);

        return $r7;

     label4:
        return null;
    }

    static androidx.media3.common.text.Cue$Builder parseCueSettingsList(java.lang.String)
    {
        java.lang.String r0;
        androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder r1, $r2;
        androidx.media3.common.text.Cue$Builder $r3;

        r0 := @parameter0: java.lang.String;

        $r2 = new androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder;

        specialinvoke $r2.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: void <init>()>();

        r1 = $r2;

        staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser: void parseCueSettingsList(java.lang.String,androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder)>(r0, r1);

        $r3 = virtualinvoke r1.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: androidx.media3.common.text.Cue$Builder toCueBuilder()>();

        return $r3;
    }

    static androidx.media3.common.text.Cue newCueForText(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder r1, $r2;
        androidx.media3.common.text.Cue$Builder $r3;
        androidx.media3.common.text.Cue $r4;

        r0 := @parameter0: java.lang.CharSequence;

        $r2 = new androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder;

        specialinvoke $r2.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: void <init>()>();

        r1 = $r2;

        r1.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: java.lang.CharSequence text> = r0;

        $r3 = virtualinvoke r1.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: androidx.media3.common.text.Cue$Builder toCueBuilder()>();

        $r4 = virtualinvoke $r3.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue build()>();

        return $r4;
    }

    static android.text.SpannedString parseCueText(java.lang.String, java.lang.String, java.util.List)
    {
        java.lang.String r0, r1, r6, r7, $r16, $r19, $r23;
        java.util.List r2, $r12;
        android.text.SpannableStringBuilder r3, $r8;
        java.util.ArrayDeque r4, $r9;
        java.util.ArrayList r5, $r10;
        char c0, $c7, $c10;
        int i1, i2, i3, $i4, $i5, $i6, $i8, $i9, $i11, $i12, $i13, $i15, $i16, $i17, i18, $i19, $i21, i22, $i23;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z9, $z10;
        androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag $r11, $r15, $r17, r26;
        android.text.SpannedString $r13;
        java.lang.Object $r14, $r18;
        androidx.media3.extractor.text.webvtt.WebvttCueParser$Element $r20;
        byte $b20;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.List;

        $r8 = new android.text.SpannableStringBuilder;

        specialinvoke $r8.<android.text.SpannableStringBuilder: void <init>()>();

        r3 = $r8;

        $r9 = new java.util.ArrayDeque;

        specialinvoke $r9.<java.util.ArrayDeque: void <init>()>();

        r4 = $r9;

        i18 = 0;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r5 = $r10;

     label01:
        $i19 = virtualinvoke r1.<java.lang.String: int length()>();

        if i18 >= $i19 goto label28;

        c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i18);

        lookupswitch(c0)
        {
            case 38: goto label20;
            case 60: goto label02;
            default: goto label26;
        };

     label02:
        $i4 = i18 + 1;

        $i5 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i4 < $i5 goto label03;

        i18 = i18 + 1;

        goto label27;

     label03:
        i1 = i18;

        $i6 = i1 + 1;

        $c7 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i6);

        if $c7 != 47 goto label04;

        $z9 = 1;

        goto label05;

     label04:
        $z9 = 0;

     label05:
        z0 = $z9;

        $i8 = i1 + 1;

        i18 = staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser: int findEndOfTag(java.lang.String,int)>(r1, $i8);

        $i9 = i18 - 2;

        $c10 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i9);

        if $c10 != 47 goto label06;

        $z10 = 1;

        goto label07;

     label06:
        $z10 = 0;

     label07:
        z1 = $z10;

        if z0 == 0 goto label08;

        $b20 = 2;

        goto label09;

     label08:
        $b20 = 1;

     label09:
        $i11 = i1 + $b20;

        if z1 == 0 goto label10;

        $i21 = i18 - 2;

        goto label11;

     label10:
        $i21 = i18 - 1;

     label11:
        r6 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i11, $i21);

        $r16 = virtualinvoke r6.<java.lang.String: java.lang.String trim()>();

        $z3 = virtualinvoke $r16.<java.lang.String: boolean isEmpty()>();

        if $z3 == 0 goto label12;

        goto label01;

     label12:
        r7 = staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser: java.lang.String getTagName(java.lang.String)>(r6);

        $z4 = staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser: boolean isSupportedTag(java.lang.String)>(r7);

        if $z4 != 0 goto label13;

        goto label01;

     label13:
        if z0 == 0 goto label19;

     label14:
        $z5 = virtualinvoke r4.<java.util.ArrayDeque: boolean isEmpty()>();

        if $z5 == 0 goto label15;

        goto label18;

     label15:
        $r18 = virtualinvoke r4.<java.util.ArrayDeque: java.lang.Object pop()>();

        r26 = (androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag) $r18;

        staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser: void applySpansForTag(java.lang.String,androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag,java.util.List,android.text.SpannableStringBuilder,java.util.List)>(r0, r26, r5, r3, r2);

        $z6 = virtualinvoke r4.<java.util.ArrayDeque: boolean isEmpty()>();

        if $z6 != 0 goto label16;

        $r20 = new androidx.media3.extractor.text.webvtt.WebvttCueParser$Element;

        $i13 = virtualinvoke r3.<android.text.SpannableStringBuilder: int length()>();

        specialinvoke $r20.<androidx.media3.extractor.text.webvtt.WebvttCueParser$Element: void <init>(androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag,int,androidx.media3.extractor.text.webvtt.WebvttCueParser$1)>(r26, $i13, null);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r20);

        goto label17;

     label16:
        interfaceinvoke r5.<java.util.List: void clear()>();

     label17:
        $r19 = r26.<androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag: java.lang.String name>;

        $z7 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z7 == 0 goto label14;

     label18:
        goto label27;

     label19:
        if z1 != 0 goto label27;

        $i12 = virtualinvoke r3.<android.text.SpannableStringBuilder: int length()>();

        $r17 = staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag: androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag buildStartTag(java.lang.String,int)>(r6, $i12);

        virtualinvoke r4.<java.util.ArrayDeque: void push(java.lang.Object)>($r17);

        goto label27;

     label20:
        $i15 = i18 + 1;

        i22 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(59, $i15);

        $i16 = i18 + 1;

        i2 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(32, $i16);

        if i22 != -1 goto label21;

        $i23 = i2;

        goto label23;

     label21:
        if i2 != -1 goto label22;

        $i23 = i22;

        goto label23;

     label22:
        $i23 = staticinvoke <java.lang.Math: int min(int,int)>(i22, i2);

     label23:
        i3 = $i23;

        if i3 == -1 goto label25;

        $i17 = i18 + 1;

        $r23 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i17, i3);

        staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser: void applyEntity(java.lang.String,android.text.SpannableStringBuilder)>($r23, r3);

        if i3 != i2 goto label24;

        virtualinvoke r3.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>(" ");

     label24:
        i18 = i3 + 1;

        goto label27;

     label25:
        virtualinvoke r3.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(char)>(c0);

        i18 = i18 + 1;

        goto label27;

     label26:
        virtualinvoke r3.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(char)>(c0);

        i18 = i18 + 1;

     label27:
        goto label01;

     label28:
        $z2 = virtualinvoke r4.<java.util.ArrayDeque: boolean isEmpty()>();

        if $z2 != 0 goto label29;

        $r14 = virtualinvoke r4.<java.util.ArrayDeque: java.lang.Object pop()>();

        $r15 = (androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag) $r14;

        staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser: void applySpansForTag(java.lang.String,androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag,java.util.List,android.text.SpannableStringBuilder,java.util.List)>(r0, $r15, r5, r3, r2);

        goto label28;

     label29:
        $r11 = staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag: androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag buildWholeCueVirtualTag()>();

        $r12 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser: void applySpansForTag(java.lang.String,androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag,java.util.List,android.text.SpannableStringBuilder,java.util.List)>(r0, $r11, $r12, r3, r2);

        $r13 = staticinvoke <android.text.SpannedString: android.text.SpannedString valueOf(java.lang.CharSequence)>(r3);

        return $r13;
    }

    private static androidx.media3.extractor.text.webvtt.WebvttCueInfo parseCue(java.lang.String, java.util.regex.Matcher, androidx.media3.common.util.ParsableByteArray, java.util.List)
    {
        java.lang.String r0, $r6, $r8, $r9, $r11, $r12, $r14, $r16, $r19, $r25, $r27, r30;
        java.util.regex.Matcher r1;
        androidx.media3.common.util.ParsableByteArray r2;
        java.util.List r3;
        androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder r4, $r5;
        java.lang.Object $r7, $r10, $r13;
        long $l0, $l1;
        java.lang.StringBuilder $r15, $r23, $r24, $r26, r29;
        boolean $z0;
        android.text.SpannedString $r17;
        androidx.media3.extractor.text.webvtt.WebvttCueInfo $r18;
        int $i2;
        java.lang.Throwable $r22, r28;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.regex.Matcher;

        r2 := @parameter2: androidx.media3.common.util.ParsableByteArray;

        r3 := @parameter3: java.util.List;

        $r5 = new androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder;

        specialinvoke $r5.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: void <init>()>();

        r4 = $r5;

     label1:
        $r6 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r7 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r6);

        $r8 = (java.lang.String) $r7;

        $l0 = staticinvoke <androidx.media3.extractor.text.webvtt.WebvttParserUtil: long parseTimestampUs(java.lang.String)>($r8);

        r4.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: long startTimeUs> = $l0;

        $r9 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $r10 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r9);

        $r11 = (java.lang.String) $r10;

        $l1 = staticinvoke <androidx.media3.extractor.text.webvtt.WebvttParserUtil: long parseTimestampUs(java.lang.String)>($r11);

        r4.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: long endTimeUs> = $l1;

     label2:
        goto label4;

     label3:
        $r22 := @caughtexception;

        r28 = $r22;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping cue with bad header: ");

        $r25 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("WebvttCueParser", $r27);

        return null;

     label4:
        $r12 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        $r13 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r12);

        $r14 = (java.lang.String) $r13;

        staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser: void parseCueSettingsList(java.lang.String,androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder)>($r14, r4);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        r29 = $r15;

        r30 = virtualinvoke r2.<androidx.media3.common.util.ParsableByteArray: java.lang.String readLine()>();

     label5:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r30);

        if $z0 != 0 goto label7;

        $i2 = virtualinvoke r29.<java.lang.StringBuilder: int length()>();

        if $i2 <= 0 goto label6;

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label6:
        $r19 = virtualinvoke r30.<java.lang.String: java.lang.String trim()>();

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        r30 = virtualinvoke r2.<androidx.media3.common.util.ParsableByteArray: java.lang.String readLine()>();

        goto label5;

     label7:
        $r16 = virtualinvoke r29.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser: android.text.SpannedString parseCueText(java.lang.String,java.lang.String,java.util.List)>(r0, $r16, r3);

        r4.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: java.lang.CharSequence text> = $r17;

        $r18 = virtualinvoke r4.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: androidx.media3.extractor.text.webvtt.WebvttCueInfo build()>();

        return $r18;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private static void parseCueSettingsList(java.lang.String, androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder)
    {
        java.lang.String r0, r3, r4, $r7, $r9, $r11, $r12, $r13, $r14, $r15, $r21, $r25, $r27;
        androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder r1;
        java.util.regex.Matcher r2;
        java.lang.Throwable r5, $r22;
        java.util.regex.Pattern $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Object $r8, $r10;
        java.lang.StringBuilder $r16, $r17, $r18, $r19, $r20, $r23, $r24, $r26;
        int $i0, $i1;
        float $f0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder;

        $r6 = <androidx.media3.extractor.text.webvtt.WebvttCueParser: java.util.regex.Pattern CUE_SETTING_PATTERN>;

        r2 = virtualinvoke $r6.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

     label01:
        $z0 = virtualinvoke r2.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label11;

        $r7 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r8 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r7);

        r3 = (java.lang.String) $r8;

        $r9 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $r10 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r9);

        r4 = (java.lang.String) $r10;

     label02:
        $r11 = "line";

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z1 == 0 goto label03;

        staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser: void parseLineAttribute(java.lang.String,androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder)>(r4, r1);

        goto label08;

     label03:
        $r12 = "align";

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z2 == 0 goto label04;

        $i1 = staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser: int parseTextAlignment(java.lang.String)>(r4);

        r1.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: int textAlignment> = $i1;

        goto label08;

     label04:
        $r13 = "position";

        $z3 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z3 == 0 goto label05;

        staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser: void parsePositionAttribute(java.lang.String,androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder)>(r4, r1);

        goto label08;

     label05:
        $r14 = "size";

        $z4 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z4 == 0 goto label06;

        $f0 = staticinvoke <androidx.media3.extractor.text.webvtt.WebvttParserUtil: float parsePercentage(java.lang.String)>(r4);

        r1.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: float size> = $f0;

        goto label08;

     label06:
        $r15 = "vertical";

        $z5 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z5 == 0 goto label07;

        $i0 = staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser: int parseVerticalAttribute(java.lang.String)>(r4);

        r1.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: int verticalType> = $i0;

        goto label08;

     label07:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown cue setting ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("WebvttCueParser", $r21);

     label08:
        goto label10;

     label09:
        $r22 := @caughtexception;

        r5 = $r22;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping bad cue setting: ");

        $r25 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("WebvttCueParser", $r27);

     label10:
        goto label01;

     label11:
        return;

        catch java.lang.NumberFormatException from label02 to label08 with label09;
    }

    private static void parseLineAttribute(java.lang.String, androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder)
    {
        androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder r0;
        int i0, $i1, $i2, $i3;
        boolean $z0;
        float $f0, $f1;
        java.lang.String $r1, r2;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder;

        i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(44);

        if i0 == -1 goto label1;

        $i2 = i0 + 1;

        $r1 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i2);

        $i3 = staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser: int parseLineAnchor(java.lang.String)>($r1);

        r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: int lineAnchor> = $i3;

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

     label1:
        $z0 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>("%");

        if $z0 == 0 goto label2;

        $f1 = staticinvoke <androidx.media3.extractor.text.webvtt.WebvttParserUtil: float parsePercentage(java.lang.String)>(r2);

        r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: float line> = $f1;

        r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: int lineType> = 0;

        goto label3;

     label2:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

        $f0 = (float) $i1;

        r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: float line> = $f0;

        r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: int lineType> = 1;

     label3:
        return;
    }

    private static int parseLineAnchor(java.lang.String)
    {
        java.lang.String r0, r1, $r5;
        int $i0;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r2, $r3, $r4;
        byte b1;

        r0 := @parameter0: java.lang.String;

        r1 = r0;

        b1 = -1;

        $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1364013995: goto label2;
            case -1074341483: goto label3;
            case 100571: goto label4;
            case 109757538: goto label1;
            default: goto label5;
        };

     label1:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("start");

        if $z0 == 0 goto label5;

        b1 = 0;

        goto label5;

     label2:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("center");

        if $z3 == 0 goto label5;

        b1 = 1;

        goto label5;

     label3:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("middle");

        if $z2 == 0 goto label5;

        b1 = 2;

        goto label5;

     label4:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("end");

        if $z1 == 0 goto label5;

        b1 = 3;

     label5:
        tableswitch(b1)
        {
            case 0: goto label6;
            case 1: goto label7;
            case 2: goto label7;
            case 3: goto label8;
            default: goto label9;
        };

     label6:
        return 0;

     label7:
        return 1;

     label8:
        return 2;

     label9:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid anchor value: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("WebvttCueParser", $r5);

        return -2147483648;
    }

    private static void parsePositionAttribute(java.lang.String, androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder)
    {
        androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder r0;
        int i0, $i1, $i2;
        float $f0;
        java.lang.String $r1, r2;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder;

        i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(44);

        if i0 == -1 goto label1;

        $i1 = i0 + 1;

        $r1 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i1);

        $i2 = staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser: int parsePositionAnchor(java.lang.String)>($r1);

        r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: int positionAnchor> = $i2;

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

     label1:
        $f0 = staticinvoke <androidx.media3.extractor.text.webvtt.WebvttParserUtil: float parsePercentage(java.lang.String)>(r2);

        r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: float position> = $f0;

        return;
    }

    private static int parsePositionAnchor(java.lang.String)
    {
        java.lang.String r0, r1, $r5;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuilder $r2, $r3, $r4;
        byte b1;

        r0 := @parameter0: java.lang.String;

        r1 = r0;

        b1 = -1;

        $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1842484672: goto label01;
            case -1364013995: goto label03;
            case -1276788989: goto label05;
            case -1074341483: goto label04;
            case 100571: goto label06;
            case 109757538: goto label02;
            default: goto label07;
        };

     label01:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("line-left");

        if $z5 == 0 goto label07;

        b1 = 0;

        goto label07;

     label02:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("start");

        if $z0 == 0 goto label07;

        b1 = 1;

        goto label07;

     label03:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("center");

        if $z4 == 0 goto label07;

        b1 = 2;

        goto label07;

     label04:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("middle");

        if $z2 == 0 goto label07;

        b1 = 3;

        goto label07;

     label05:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("line-right");

        if $z3 == 0 goto label07;

        b1 = 4;

        goto label07;

     label06:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("end");

        if $z1 == 0 goto label07;

        b1 = 5;

     label07:
        tableswitch(b1)
        {
            case 0: goto label08;
            case 1: goto label08;
            case 2: goto label09;
            case 3: goto label09;
            case 4: goto label10;
            case 5: goto label10;
            default: goto label11;
        };

     label08:
        return 0;

     label09:
        return 1;

     label10:
        return 2;

     label11:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid anchor value: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("WebvttCueParser", $r5);

        return -2147483648;
    }

    private static int parseVerticalAttribute(java.lang.String)
    {
        java.lang.String r0, r1, $r5;
        int $i0;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2, $r3, $r4;
        byte b1;

        r0 := @parameter0: java.lang.String;

        r1 = r0;

        b1 = -1;

        $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case 3462: goto label2;
            case 3642: goto label1;
            default: goto label3;
        };

     label1:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("rl");

        if $z0 == 0 goto label3;

        b1 = 0;

        goto label3;

     label2:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("lr");

        if $z1 == 0 goto label3;

        b1 = 1;

     label3:
        lookupswitch(b1)
        {
            case 0: goto label4;
            case 1: goto label5;
            default: goto label6;
        };

     label4:
        return 1;

     label5:
        return 2;

     label6:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid \'vertical\' value: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("WebvttCueParser", $r5);

        return -2147483648;
    }

    private static int parseTextAlignment(java.lang.String)
    {
        java.lang.String r0, r1, $r5;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuilder $r2, $r3, $r4;
        byte b1;

        r0 := @parameter0: java.lang.String;

        r1 = r0;

        b1 = -1;

        $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1364013995: goto label03;
            case -1074341483: goto label04;
            case 100571: goto label05;
            case 3317767: goto label02;
            case 108511772: goto label06;
            case 109757538: goto label01;
            default: goto label07;
        };

     label01:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("start");

        if $z0 == 0 goto label07;

        b1 = 0;

        goto label07;

     label02:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("left");

        if $z2 == 0 goto label07;

        b1 = 1;

        goto label07;

     label03:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("center");

        if $z5 == 0 goto label07;

        b1 = 2;

        goto label07;

     label04:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("middle");

        if $z4 == 0 goto label07;

        b1 = 3;

        goto label07;

     label05:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("end");

        if $z3 == 0 goto label07;

        b1 = 4;

        goto label07;

     label06:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("right");

        if $z1 == 0 goto label07;

        b1 = 5;

     label07:
        tableswitch(b1)
        {
            case 0: goto label08;
            case 1: goto label09;
            case 2: goto label10;
            case 3: goto label10;
            case 4: goto label11;
            case 5: goto label12;
            default: goto label13;
        };

     label08:
        return 1;

     label09:
        return 4;

     label10:
        return 2;

     label11:
        return 3;

     label12:
        return 5;

     label13:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid alignment value: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("WebvttCueParser", $r5);

        return 2;
    }

    private static int findEndOfTag(java.lang.String, int)
    {
        java.lang.String r0;
        int i0, i1, $i2;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(62, i0);

        if i1 != -1 goto label1;

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        goto label2;

     label1:
        $i2 = i1 + 1;

     label2:
        return $i2;
    }

    private static void applyEntity(java.lang.String, android.text.SpannableStringBuilder)
    {
        java.lang.String r0, r2, $r11;
        android.text.SpannableStringBuilder r1;
        int $i0;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;
        byte b1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.text.SpannableStringBuilder;

        r2 = r0;

        b1 = -1;

        $i0 = virtualinvoke r2.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case 3309: goto label02;
            case 3464: goto label01;
            case 96708: goto label04;
            case 3374865: goto label03;
            default: goto label05;
        };

     label01:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("lt");

        if $z2 == 0 goto label05;

        b1 = 0;

        goto label05;

     label02:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("gt");

        if $z3 == 0 goto label05;

        b1 = 1;

        goto label05;

     label03:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("nbsp");

        if $z0 == 0 goto label05;

        b1 = 2;

        goto label05;

     label04:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("amp");

        if $z1 == 0 goto label05;

        b1 = 3;

     label05:
        tableswitch(b1)
        {
            case 0: goto label06;
            case 1: goto label07;
            case 2: goto label08;
            case 3: goto label09;
            default: goto label10;
        };

     label06:
        virtualinvoke r1.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(char)>(60);

        goto label11;

     label07:
        virtualinvoke r1.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(char)>(62);

        goto label11;

     label08:
        virtualinvoke r1.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(char)>(32);

        goto label11;

     label09:
        virtualinvoke r1.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(char)>(38);

        goto label11;

     label10:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ignoring unsupported entity: \'&");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";\'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("WebvttCueParser", $r11);

     label11:
        return;
    }

    private static boolean isSupportedTag(java.lang.String)
    {
        java.lang.String r0, r1;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        byte b1;

        r0 := @parameter0: java.lang.String;

        r1 = r0;

        b1 = -1;

        $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case 98: goto label01;
            case 99: goto label02;
            case 105: goto label03;
            case 117: goto label07;
            case 118: goto label08;
            case 3650: goto label06;
            case 3314158: goto label04;
            case 3511770: goto label05;
            default: goto label09;
        };

     label01:
        $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("b");

        if $z7 == 0 goto label09;

        b1 = 0;

        goto label09;

     label02:
        $z6 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("c");

        if $z6 == 0 goto label09;

        b1 = 1;

        goto label09;

     label03:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("i");

        if $z5 == 0 goto label09;

        b1 = 2;

        goto label09;

     label04:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("lang");

        if $z1 == 0 goto label09;

        b1 = 3;

        goto label09;

     label05:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("ruby");

        if $z0 == 0 goto label09;

        b1 = 4;

        goto label09;

     label06:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("rt");

        if $z2 == 0 goto label09;

        b1 = 5;

        goto label09;

     label07:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("u");

        if $z4 == 0 goto label09;

        b1 = 6;

        goto label09;

     label08:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("v");

        if $z3 == 0 goto label09;

        b1 = 7;

     label09:
        tableswitch(b1)
        {
            case 0: goto label10;
            case 1: goto label10;
            case 2: goto label10;
            case 3: goto label10;
            case 4: goto label10;
            case 5: goto label10;
            case 6: goto label10;
            case 7: goto label10;
            default: goto label11;
        };

     label10:
        return 1;

     label11:
        return 0;
    }

    private static void applySpansForTag(java.lang.String, androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag, java.util.List, android.text.SpannableStringBuilder, java.util.List)
    {
        java.lang.String r0, r12;
        androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag r1;
        java.util.List r2, r4, r13;
        android.text.SpannableStringBuilder r3;
        int i0, i1, $i2, i4, $i5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.Object $r5;
        androidx.media3.extractor.text.webvtt.WebvttCueParser$StyleMatch $r6;
        androidx.media3.extractor.text.webvtt.WebvttCssStyle $r7;
        java.util.Set $r8;
        android.text.style.UnderlineSpan $r9;
        android.text.style.StyleSpan $r10, $r11;
        byte b3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: android.text.SpannableStringBuilder;

        r4 := @parameter4: java.util.List;

        i0 = r1.<androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag: int position>;

        i1 = virtualinvoke r3.<android.text.SpannableStringBuilder: int length()>();

        r12 = r1.<androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag: java.lang.String name>;

        b3 = -1;

        $i2 = virtualinvoke r12.<java.lang.String: int hashCode()>();

        lookupswitch($i2)
        {
            case 0: goto label08;
            case 98: goto label01;
            case 99: goto label05;
            case 105: goto label02;
            case 117: goto label04;
            case 118: goto label07;
            case 3314158: goto label06;
            case 3511770: goto label03;
            default: goto label09;
        };

     label01:
        $z6 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>("b");

        if $z6 == 0 goto label09;

        b3 = 0;

        goto label09;

     label02:
        $z4 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>("i");

        if $z4 == 0 goto label09;

        b3 = 1;

        goto label09;

     label03:
        $z0 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>("ruby");

        if $z0 == 0 goto label09;

        b3 = 2;

        goto label09;

     label04:
        $z3 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>("u");

        if $z3 == 0 goto label09;

        b3 = 3;

        goto label09;

     label05:
        $z5 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>("c");

        if $z5 == 0 goto label09;

        b3 = 4;

        goto label09;

     label06:
        $z1 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>("lang");

        if $z1 == 0 goto label09;

        b3 = 5;

        goto label09;

     label07:
        $z2 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>("v");

        if $z2 == 0 goto label09;

        b3 = 6;

        goto label09;

     label08:
        $z7 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z7 == 0 goto label09;

        b3 = 7;

     label09:
        tableswitch(b3)
        {
            case 0: goto label10;
            case 1: goto label11;
            case 2: goto label12;
            case 3: goto label13;
            case 4: goto label14;
            case 5: goto label15;
            case 6: goto label15;
            case 7: goto label15;
            default: goto label16;
        };

     label10:
        $r11 = new android.text.style.StyleSpan;

        specialinvoke $r11.<android.text.style.StyleSpan: void <init>(int)>(1);

        virtualinvoke r3.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r11, i0, i1, 33);

        goto label17;

     label11:
        $r10 = new android.text.style.StyleSpan;

        specialinvoke $r10.<android.text.style.StyleSpan: void <init>(int)>(2);

        virtualinvoke r3.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r10, i0, i1, 33);

        goto label17;

     label12:
        staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser: void applyRubySpans(android.text.SpannableStringBuilder,java.lang.String,androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag,java.util.List,java.util.List)>(r3, r0, r1, r2, r4);

        goto label17;

     label13:
        $r9 = new android.text.style.UnderlineSpan;

        specialinvoke $r9.<android.text.style.UnderlineSpan: void <init>()>();

        virtualinvoke r3.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r9, i0, i1, 33);

        goto label17;

     label14:
        $r8 = r1.<androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag: java.util.Set classes>;

        staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser: void applyDefaultColors(android.text.SpannableStringBuilder,java.util.Set,int,int)>(r3, $r8, i0, i1);

        goto label17;

     label15:
        goto label17;

     label16:
        return;

     label17:
        r13 = staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser: java.util.List getApplicableStyles(java.util.List,java.lang.String,androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag)>(r4, r0, r1);

        i4 = 0;

     label18:
        $i5 = interfaceinvoke r13.<java.util.List: int size()>();

        if i4 >= $i5 goto label19;

        $r5 = interfaceinvoke r13.<java.util.List: java.lang.Object get(int)>(i4);

        $r6 = (androidx.media3.extractor.text.webvtt.WebvttCueParser$StyleMatch) $r5;

        $r7 = $r6.<androidx.media3.extractor.text.webvtt.WebvttCueParser$StyleMatch: androidx.media3.extractor.text.webvtt.WebvttCssStyle style>;

        staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser: void applyStyleToText(android.text.SpannableStringBuilder,androidx.media3.extractor.text.webvtt.WebvttCssStyle,int,int)>(r3, $r7, i0, i1);

        i4 = i4 + 1;

        goto label18;

     label19:
        return;
    }

    private static void applyRubySpans(android.text.SpannableStringBuilder, java.lang.String, androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag, java.util.List, java.util.List)
    {
        android.text.SpannableStringBuilder r0;
        java.lang.String r1, $r10, $r14, $r20;
        androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag r2, $r13, $r16, $r17;
        java.util.List r3, r4;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12;
        java.util.ArrayList r5, $r8;
        androidx.media3.extractor.text.webvtt.WebvttCueParser$Element r6, $r12;
        java.lang.CharSequence r7;
        java.util.Comparator $r9;
        java.lang.Object $r11, $r15;
        boolean $z1;
        androidx.media3.common.text.RubySpan $r19;

        r0 := @parameter0: android.text.SpannableStringBuilder;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag;

        r3 := @parameter3: java.util.List;

        r4 := @parameter4: java.util.List;

        i0 = staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser: int getRubyPosition(java.util.List,java.lang.String,androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag)>(r4, r1, r2);

        $r8 = new java.util.ArrayList;

        $i4 = interfaceinvoke r3.<java.util.List: int size()>();

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i4);

        r5 = $r8;

        interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>(r3);

        $r9 = staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser$Element: java.util.Comparator access$100()>();

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r5, $r9);

        i10 = 0;

        i11 = r2.<androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag: int position>;

        i12 = 0;

     label1:
        $i5 = interfaceinvoke r5.<java.util.List: int size()>();

        if i12 >= $i5 goto label4;

        $r10 = "rt";

        $r11 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i12);

        $r12 = (androidx.media3.extractor.text.webvtt.WebvttCueParser$Element) $r11;

        $r13 = staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser$Element: androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag access$200(androidx.media3.extractor.text.webvtt.WebvttCueParser$Element)>($r12);

        $r14 = $r13.<androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag: java.lang.String name>;

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z1 != 0 goto label2;

        goto label3;

     label2:
        $r15 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i12);

        r6 = (androidx.media3.extractor.text.webvtt.WebvttCueParser$Element) $r15;

        $r16 = staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser$Element: androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag access$200(androidx.media3.extractor.text.webvtt.WebvttCueParser$Element)>(r6);

        $i6 = staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser: int getRubyPosition(java.util.List,java.lang.String,androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag)>(r4, r1, $r16);

        i1 = staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser: int firstKnownRubyPosition(int,int,int)>($i6, i0, 1);

        $r17 = staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser$Element: androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag access$200(androidx.media3.extractor.text.webvtt.WebvttCueParser$Element)>(r6);

        $i7 = $r17.<androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag: int position>;

        i2 = $i7 - i10;

        $i8 = staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser$Element: int access$300(androidx.media3.extractor.text.webvtt.WebvttCueParser$Element)>(r6);

        i3 = $i8 - i10;

        r7 = virtualinvoke r0.<android.text.SpannableStringBuilder: java.lang.CharSequence subSequence(int,int)>(i2, i3);

        virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder delete(int,int)>(i2, i3);

        $r19 = new androidx.media3.common.text.RubySpan;

        $r20 = interfaceinvoke r7.<java.lang.CharSequence: java.lang.String toString()>();

        specialinvoke $r19.<androidx.media3.common.text.RubySpan: void <init>(java.lang.String,int)>($r20, i1);

        virtualinvoke r0.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r19, i11, i2, 33);

        $i9 = interfaceinvoke r7.<java.lang.CharSequence: int length()>();

        i10 = i10 + $i9;

        i11 = i2;

     label3:
        i12 = i12 + 1;

        goto label1;

     label4:
        return;
    }

    private static int getRubyPosition(java.util.List, java.lang.String, androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag)
    {
        java.util.List r0, r3;
        java.lang.String r1;
        androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag r2;
        androidx.media3.extractor.text.webvtt.WebvttCssStyle r4;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r5;
        androidx.media3.extractor.text.webvtt.WebvttCueParser$StyleMatch $r6;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag;

        r3 = staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser: java.util.List getApplicableStyles(java.util.List,java.lang.String,androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag)>(r0, r1, r2);

        i3 = 0;

     label1:
        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        if i3 >= $i0 goto label3;

        $r5 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i3);

        $r6 = (androidx.media3.extractor.text.webvtt.WebvttCueParser$StyleMatch) $r5;

        r4 = $r6.<androidx.media3.extractor.text.webvtt.WebvttCueParser$StyleMatch: androidx.media3.extractor.text.webvtt.WebvttCssStyle style>;

        $i1 = virtualinvoke r4.<androidx.media3.extractor.text.webvtt.WebvttCssStyle: int getRubyPosition()>();

        if $i1 == -1 goto label2;

        $i2 = virtualinvoke r4.<androidx.media3.extractor.text.webvtt.WebvttCssStyle: int getRubyPosition()>();

        return $i2;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return -1;
    }

    private static int firstKnownRubyPosition(int, int, int)
    {
        int i0, i1, i2;
        java.lang.IllegalArgumentException $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i0 == -1 goto label1;

        return i0;

     label1:
        if i1 == -1 goto label2;

        return i1;

     label2:
        if i2 == -1 goto label3;

        return i2;

     label3:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r0;
    }

    private static void applyDefaultColors(android.text.SpannableStringBuilder, java.util.Set, int, int)
    {
        android.text.SpannableStringBuilder r0;
        java.util.Set r1;
        int i0, i1, i2, i3;
        java.util.Iterator r2;
        java.lang.String r3;
        boolean $z0, $z1, $z2;
        java.lang.Object $r4, $r8, $r12;
        java.util.Map $r5, $r6, $r7, $r11;
        java.lang.Integer $r9, $r13;
        android.text.style.BackgroundColorSpan $r10;
        android.text.style.ForegroundColorSpan $r14;

        r0 := @parameter0: android.text.SpannableStringBuilder;

        r1 := @parameter1: java.util.Set;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r4;

        $r5 = <androidx.media3.extractor.text.webvtt.WebvttCueParser: java.util.Map DEFAULT_TEXT_COLORS>;

        $z1 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r3);

        if $z1 == 0 goto label2;

        $r11 = <androidx.media3.extractor.text.webvtt.WebvttCueParser: java.util.Map DEFAULT_TEXT_COLORS>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        $r13 = (java.lang.Integer) $r12;

        i2 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        $r14 = new android.text.style.ForegroundColorSpan;

        specialinvoke $r14.<android.text.style.ForegroundColorSpan: void <init>(int)>(i2);

        virtualinvoke r0.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r14, i0, i1, 33);

        goto label3;

     label2:
        $r6 = <androidx.media3.extractor.text.webvtt.WebvttCueParser: java.util.Map DEFAULT_BACKGROUND_COLORS>;

        $z2 = interfaceinvoke $r6.<java.util.Map: boolean containsKey(java.lang.Object)>(r3);

        if $z2 == 0 goto label3;

        $r7 = <androidx.media3.extractor.text.webvtt.WebvttCueParser: java.util.Map DEFAULT_BACKGROUND_COLORS>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        $r9 = (java.lang.Integer) $r8;

        i3 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        $r10 = new android.text.style.BackgroundColorSpan;

        specialinvoke $r10.<android.text.style.BackgroundColorSpan: void <init>(int)>(i3);

        virtualinvoke r0.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r10, i0, i1, 33);

     label3:
        goto label1;

     label4:
        return;
    }

    private static void applyStyleToText(android.text.SpannableStringBuilder, androidx.media3.extractor.text.webvtt.WebvttCssStyle, int, int)
    {
        android.text.SpannableStringBuilder r0;
        androidx.media3.extractor.text.webvtt.WebvttCssStyle r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String $r2, $r8;
        android.text.style.RelativeSizeSpan $r3, $r5;
        float $f0, $f1, $f2, $f3;
        androidx.media3.common.text.HorizontalTextInVerticalContextSpan $r4;
        android.text.style.AbsoluteSizeSpan $r6;
        android.text.style.TypefaceSpan $r7;
        android.text.style.BackgroundColorSpan $r9;
        android.text.style.ForegroundColorSpan $r10;
        android.text.style.UnderlineSpan $r11;
        android.text.style.StrikethroughSpan $r12;
        android.text.style.StyleSpan $r13;

        r0 := @parameter0: android.text.SpannableStringBuilder;

        r1 := @parameter1: androidx.media3.extractor.text.webvtt.WebvttCssStyle;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        if r1 != null goto label01;

        return;

     label01:
        $i2 = virtualinvoke r1.<androidx.media3.extractor.text.webvtt.WebvttCssStyle: int getStyle()>();

        if $i2 == -1 goto label02;

        $r13 = new android.text.style.StyleSpan;

        $i7 = virtualinvoke r1.<androidx.media3.extractor.text.webvtt.WebvttCssStyle: int getStyle()>();

        specialinvoke $r13.<android.text.style.StyleSpan: void <init>(int)>($i7);

        staticinvoke <androidx.media3.common.text.SpanUtil: void addOrReplaceSpan(android.text.Spannable,java.lang.Object,int,int,int)>(r0, $r13, i0, i1, 33);

     label02:
        $z0 = virtualinvoke r1.<androidx.media3.extractor.text.webvtt.WebvttCssStyle: boolean isLinethrough()>();

        if $z0 == 0 goto label03;

        $r12 = new android.text.style.StrikethroughSpan;

        specialinvoke $r12.<android.text.style.StrikethroughSpan: void <init>()>();

        virtualinvoke r0.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r12, i0, i1, 33);

     label03:
        $z1 = virtualinvoke r1.<androidx.media3.extractor.text.webvtt.WebvttCssStyle: boolean isUnderline()>();

        if $z1 == 0 goto label04;

        $r11 = new android.text.style.UnderlineSpan;

        specialinvoke $r11.<android.text.style.UnderlineSpan: void <init>()>();

        virtualinvoke r0.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r11, i0, i1, 33);

     label04:
        $z2 = virtualinvoke r1.<androidx.media3.extractor.text.webvtt.WebvttCssStyle: boolean hasFontColor()>();

        if $z2 == 0 goto label05;

        $r10 = new android.text.style.ForegroundColorSpan;

        $i6 = virtualinvoke r1.<androidx.media3.extractor.text.webvtt.WebvttCssStyle: int getFontColor()>();

        specialinvoke $r10.<android.text.style.ForegroundColorSpan: void <init>(int)>($i6);

        staticinvoke <androidx.media3.common.text.SpanUtil: void addOrReplaceSpan(android.text.Spannable,java.lang.Object,int,int,int)>(r0, $r10, i0, i1, 33);

     label05:
        $z3 = virtualinvoke r1.<androidx.media3.extractor.text.webvtt.WebvttCssStyle: boolean hasBackgroundColor()>();

        if $z3 == 0 goto label06;

        $r9 = new android.text.style.BackgroundColorSpan;

        $i5 = virtualinvoke r1.<androidx.media3.extractor.text.webvtt.WebvttCssStyle: int getBackgroundColor()>();

        specialinvoke $r9.<android.text.style.BackgroundColorSpan: void <init>(int)>($i5);

        staticinvoke <androidx.media3.common.text.SpanUtil: void addOrReplaceSpan(android.text.Spannable,java.lang.Object,int,int,int)>(r0, $r9, i0, i1, 33);

     label06:
        $r2 = virtualinvoke r1.<androidx.media3.extractor.text.webvtt.WebvttCssStyle: java.lang.String getFontFamily()>();

        if $r2 == null goto label07;

        $r7 = new android.text.style.TypefaceSpan;

        $r8 = virtualinvoke r1.<androidx.media3.extractor.text.webvtt.WebvttCssStyle: java.lang.String getFontFamily()>();

        specialinvoke $r7.<android.text.style.TypefaceSpan: void <init>(java.lang.String)>($r8);

        staticinvoke <androidx.media3.common.text.SpanUtil: void addOrReplaceSpan(android.text.Spannable,java.lang.Object,int,int,int)>(r0, $r7, i0, i1, 33);

     label07:
        $i3 = virtualinvoke r1.<androidx.media3.extractor.text.webvtt.WebvttCssStyle: int getFontSizeUnit()>();

        tableswitch($i3)
        {
            case -1: goto label11;
            case 0: goto label11;
            case 1: goto label08;
            case 2: goto label09;
            case 3: goto label10;
            default: goto label11;
        };

     label08:
        $r6 = new android.text.style.AbsoluteSizeSpan;

        $f3 = virtualinvoke r1.<androidx.media3.extractor.text.webvtt.WebvttCssStyle: float getFontSize()>();

        $i4 = (int) $f3;

        specialinvoke $r6.<android.text.style.AbsoluteSizeSpan: void <init>(int,boolean)>($i4, 1);

        staticinvoke <androidx.media3.common.text.SpanUtil: void addOrReplaceSpan(android.text.Spannable,java.lang.Object,int,int,int)>(r0, $r6, i0, i1, 33);

        goto label11;

     label09:
        $r5 = new android.text.style.RelativeSizeSpan;

        $f2 = virtualinvoke r1.<androidx.media3.extractor.text.webvtt.WebvttCssStyle: float getFontSize()>();

        specialinvoke $r5.<android.text.style.RelativeSizeSpan: void <init>(float)>($f2);

        staticinvoke <androidx.media3.common.text.SpanUtil: void addOrReplaceSpan(android.text.Spannable,java.lang.Object,int,int,int)>(r0, $r5, i0, i1, 33);

        goto label11;

     label10:
        $r3 = new android.text.style.RelativeSizeSpan;

        $f0 = virtualinvoke r1.<androidx.media3.extractor.text.webvtt.WebvttCssStyle: float getFontSize()>();

        $f1 = $f0 / 100.0F;

        specialinvoke $r3.<android.text.style.RelativeSizeSpan: void <init>(float)>($f1);

        staticinvoke <androidx.media3.common.text.SpanUtil: void addOrReplaceSpan(android.text.Spannable,java.lang.Object,int,int,int)>(r0, $r3, i0, i1, 33);

        goto label11;

     label11:
        $z4 = virtualinvoke r1.<androidx.media3.extractor.text.webvtt.WebvttCssStyle: boolean getCombineUpright()>();

        if $z4 == 0 goto label12;

        $r4 = new androidx.media3.common.text.HorizontalTextInVerticalContextSpan;

        specialinvoke $r4.<androidx.media3.common.text.HorizontalTextInVerticalContextSpan: void <init>()>();

        virtualinvoke r0.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r4, i0, i1, 33);

     label12:
        return;
    }

    private static java.lang.String getTagName(java.lang.String)
    {
        boolean $z0, $z1;
        java.lang.String[] $r0;
        java.lang.String $r1, r2, r3;

        r2 := @parameter0: java.lang.String;

        r3 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke r3.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z1);

        $r0 = staticinvoke <androidx.media3.common.util.Util: java.lang.String[] splitAtFirst(java.lang.String,java.lang.String)>(r3, "[ \\.]");

        $r1 = $r0[0];

        return $r1;
    }

    private static java.util.List getApplicableStyles(java.util.List, java.lang.String, androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag)
    {
        java.util.List r0;
        java.lang.String r1, $r7, $r9;
        androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag r2;
        java.util.ArrayList r3, $r5;
        androidx.media3.extractor.text.webvtt.WebvttCssStyle r4;
        int i0, $i1, i2;
        java.lang.Object $r6;
        java.util.Set $r8;
        androidx.media3.extractor.text.webvtt.WebvttCueParser$StyleMatch $r10;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r3 = $r5;

        i2 = 0;

     label1:
        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        if i2 >= $i1 goto label3;

        $r6 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);

        r4 = (androidx.media3.extractor.text.webvtt.WebvttCssStyle) $r6;

        $r9 = r2.<androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag: java.lang.String name>;

        $r8 = r2.<androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag: java.util.Set classes>;

        $r7 = r2.<androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag: java.lang.String voice>;

        i0 = virtualinvoke r4.<androidx.media3.extractor.text.webvtt.WebvttCssStyle: int getSpecificityScore(java.lang.String,java.lang.String,java.util.Set,java.lang.String)>(r1, $r9, $r8, $r7);

        if i0 <= 0 goto label2;

        $r10 = new androidx.media3.extractor.text.webvtt.WebvttCueParser$StyleMatch;

        specialinvoke $r10.<androidx.media3.extractor.text.webvtt.WebvttCueParser$StyleMatch: void <init>(int,androidx.media3.extractor.text.webvtt.WebvttCssStyle)>(i0, r4);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r10);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        staticinvoke <java.util.Collections: void sort(java.util.List)>(r3);

        return r3;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0, $r1;
        java.util.HashMap $r2, $r20, r38, r39;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.lang.Integer $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r35;
        java.util.Map $r19, $r37;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^(\\S+)\\s+-->\\s+(\\S+)(.*)?$");

        <androidx.media3.extractor.text.webvtt.WebvttCueParser: java.util.regex.Pattern CUE_HEADER_PATTERN> = $r0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\\S+?):(\\S+)");

        <androidx.media3.extractor.text.webvtt.WebvttCueParser: java.util.regex.Pattern CUE_SETTING_PATTERN> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r38 = $r2;

        $i0 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>(255, 255, 255);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("white", $r3);

        $i1 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>(0, 255, 0);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("lime", $r5);

        $i2 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>(0, 255, 255);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("cyan", $r7);

        $i3 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>(255, 0, 0);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        interfaceinvoke r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("red", $r9);

        $i4 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>(255, 255, 0);

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        interfaceinvoke r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("yellow", $r11);

        $i5 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>(255, 0, 255);

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        interfaceinvoke r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("magenta", $r13);

        $i6 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>(0, 0, 255);

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        interfaceinvoke r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("blue", $r15);

        $i7 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>(0, 0, 0);

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        interfaceinvoke r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("black", $r17);

        $r19 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(r38);

        <androidx.media3.extractor.text.webvtt.WebvttCueParser: java.util.Map DEFAULT_TEXT_COLORS> = $r19;

        $r20 = new java.util.HashMap;

        specialinvoke $r20.<java.util.HashMap: void <init>()>();

        r39 = $r20;

        $i8 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>(255, 255, 255);

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        interfaceinvoke r39.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("bg_white", $r21);

        $i9 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>(0, 255, 0);

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        interfaceinvoke r39.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("bg_lime", $r23);

        $i10 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>(0, 255, 255);

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        interfaceinvoke r39.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("bg_cyan", $r25);

        $i11 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>(255, 0, 0);

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        interfaceinvoke r39.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("bg_red", $r27);

        $i12 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>(255, 255, 0);

        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        interfaceinvoke r39.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("bg_yellow", $r29);

        $i13 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>(255, 0, 255);

        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        interfaceinvoke r39.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("bg_magenta", $r31);

        $i14 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>(0, 0, 255);

        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14);

        interfaceinvoke r39.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("bg_blue", $r33);

        $i15 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>(0, 0, 0);

        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i15);

        interfaceinvoke r39.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("bg_black", $r35);

        $r37 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(r39);

        <androidx.media3.extractor.text.webvtt.WebvttCueParser: java.util.Map DEFAULT_BACKGROUND_COLORS> = $r37;

        return;
    }

androidx.media3.extractor.text.webvtt.WebvttCueParser$1
androidx.media3.extractor.text.webvtt.WebvttCueParser$Element
<androidx.media3.extractor.text.webvtt.WebvttCueParser$Element: java.util.Comparator BY_START_POSITION_ASC>
<androidx.media3.extractor.text.webvtt.WebvttCueParser$Element: androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag startTag>
<androidx.media3.extractor.text.webvtt.WebvttCueParser$Element: int endPosition>
    private void <init>(androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag, int)
    {
        androidx.media3.extractor.text.webvtt.WebvttCueParser$Element r0;
        androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag r1;
        int i0;

        r0 := @this: androidx.media3.extractor.text.webvtt.WebvttCueParser$Element;

        r1 := @parameter0: androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$Element: androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag startTag> = r1;

        r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$Element: int endPosition> = i0;

        return;
    }

    private static int lambda$static$0(androidx.media3.extractor.text.webvtt.WebvttCueParser$Element, androidx.media3.extractor.text.webvtt.WebvttCueParser$Element)
    {
        androidx.media3.extractor.text.webvtt.WebvttCueParser$Element r0, r1;
        androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag $r2, $r3;
        int $i0, $i1, $i2;

        r0 := @parameter0: androidx.media3.extractor.text.webvtt.WebvttCueParser$Element;

        r1 := @parameter1: androidx.media3.extractor.text.webvtt.WebvttCueParser$Element;

        $r2 = r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$Element: androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag startTag>;

        $i1 = $r2.<androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag: int position>;

        $r3 = r1.<androidx.media3.extractor.text.webvtt.WebvttCueParser$Element: androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag startTag>;

        $i0 = $r3.<androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag: int position>;

        $i2 = staticinvoke <java.lang.Integer: int compare(int,int)>($i1, $i0);

        return $i2;
    }

    void <init>(androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag, int, androidx.media3.extractor.text.webvtt.WebvttCueParser$1)
    {
        androidx.media3.extractor.text.webvtt.WebvttCueParser$Element r0;
        androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag r1;
        int i0;
        androidx.media3.extractor.text.webvtt.WebvttCueParser$1 r2;

        r0 := @this: androidx.media3.extractor.text.webvtt.WebvttCueParser$Element;

        r1 := @parameter0: androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag;

        i0 := @parameter1: int;

        r2 := @parameter2: androidx.media3.extractor.text.webvtt.WebvttCueParser$1;

        specialinvoke r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$Element: void <init>(androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag,int)>(r1, i0);

        return;
    }

    static java.util.Comparator access$100()
    {
        java.util.Comparator $r0;

        $r0 = <androidx.media3.extractor.text.webvtt.WebvttCueParser$Element: java.util.Comparator BY_START_POSITION_ASC>;

        return $r0;
    }

    static androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag access$200(androidx.media3.extractor.text.webvtt.WebvttCueParser$Element)
    {
        androidx.media3.extractor.text.webvtt.WebvttCueParser$Element r0;
        androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag $r1;

        r0 := @parameter0: androidx.media3.extractor.text.webvtt.WebvttCueParser$Element;

        $r1 = r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$Element: androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag startTag>;

        return $r1;
    }

    static int access$300(androidx.media3.extractor.text.webvtt.WebvttCueParser$Element)
    {
        androidx.media3.extractor.text.webvtt.WebvttCueParser$Element r0;
        int $i0;

        r0 := @parameter0: androidx.media3.extractor.text.webvtt.WebvttCueParser$Element;

        $i0 = r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$Element: int endPosition>;

        return $i0;
    }

    static void <clinit>()
    {
        java.util.Comparator $r0;

        $r0 = dynamicinvoke "compare" <java.util.Comparator ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: int __METHODTYPE__(java.lang.Object,java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.extractor.text.webvtt.WebvttCueParser$Element: int lambda$static$0(androidx.media3.extractor.text.webvtt.WebvttCueParser$Element,androidx.media3.extractor.text.webvtt.WebvttCueParser$Element)>, methodtype: int __METHODTYPE__(androidx.media3.extractor.text.webvtt.WebvttCueParser$Element,androidx.media3.extractor.text.webvtt.WebvttCueParser$Element));

        <androidx.media3.extractor.text.webvtt.WebvttCueParser$Element: java.util.Comparator BY_START_POSITION_ASC> = $r0;

        return;
    }

androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag
<androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag: java.lang.String name>
<androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag: int position>
<androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag: java.lang.String voice>
<androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag: java.util.Set classes>
    private void <init>(java.lang.String, int, java.lang.String, java.util.Set)
    {
        androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag r0;
        java.lang.String r1, r2;
        int i0;
        java.util.Set r3;

        r0 := @this: androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.util.Set;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag: int position> = i0;

        r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag: java.lang.String name> = r1;

        r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag: java.lang.String voice> = r2;

        r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag: java.util.Set classes> = r3;

        return;
    }

    public static androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag buildStartTag(java.lang.String, int)
    {
        int i0, i1, i2, $i3;
        java.lang.String[] r0;
        java.lang.String r1, $r3, $r6, r7, r8, r9;
        java.util.HashSet r2, $r4;
        boolean $z0, $z2;
        androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag $r5;

        r7 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r8 = virtualinvoke r7.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke r8.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z2);

        i1 = virtualinvoke r8.<java.lang.String: int indexOf(java.lang.String)>(" ");

        if i1 != -1 goto label3;

        r9 = "";

        goto label4;

     label3:
        $r3 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int)>(i1);

        r9 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        r8 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

     label4:
        r0 = staticinvoke <androidx.media3.common.util.Util: java.lang.String[] split(java.lang.String,java.lang.String)>(r8, "\\.");

        r1 = r0[0];

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r2 = $r4;

        i2 = 1;

     label5:
        $i3 = lengthof r0;

        if i2 >= $i3 goto label6;

        $r6 = r0[i2];

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r6);

        i2 = i2 + 1;

        goto label5;

     label6:
        $r5 = new androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag;

        specialinvoke $r5.<androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag: void <init>(java.lang.String,int,java.lang.String,java.util.Set)>(r1, i0, r9, r2);

        return $r5;
    }

    public static androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag buildWholeCueVirtualTag()
    {
        androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag $r0;
        java.util.Set $r1;

        $r0 = new androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag;

        $r1 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        specialinvoke $r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag: void <init>(java.lang.String,int,java.lang.String,java.util.Set)>("", 0, "", $r1);

        return $r0;
    }

androidx.media3.extractor.text.webvtt.WebvttCueParser$StyleMatch
<androidx.media3.extractor.text.webvtt.WebvttCueParser$StyleMatch: int score>
<androidx.media3.extractor.text.webvtt.WebvttCueParser$StyleMatch: androidx.media3.extractor.text.webvtt.WebvttCssStyle style>
    public void <init>(int, androidx.media3.extractor.text.webvtt.WebvttCssStyle)
    {
        androidx.media3.extractor.text.webvtt.WebvttCueParser$StyleMatch r0;
        int i0;
        androidx.media3.extractor.text.webvtt.WebvttCssStyle r1;

        r0 := @this: androidx.media3.extractor.text.webvtt.WebvttCueParser$StyleMatch;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.extractor.text.webvtt.WebvttCssStyle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$StyleMatch: int score> = i0;

        r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$StyleMatch: androidx.media3.extractor.text.webvtt.WebvttCssStyle style> = r1;

        return;
    }

    public int compareTo(androidx.media3.extractor.text.webvtt.WebvttCueParser$StyleMatch)
    {
        androidx.media3.extractor.text.webvtt.WebvttCueParser$StyleMatch r0, r1;
        int $i0, $i1, $i2;

        r0 := @this: androidx.media3.extractor.text.webvtt.WebvttCueParser$StyleMatch;

        r1 := @parameter0: androidx.media3.extractor.text.webvtt.WebvttCueParser$StyleMatch;

        $i1 = r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$StyleMatch: int score>;

        $i0 = r1.<androidx.media3.extractor.text.webvtt.WebvttCueParser$StyleMatch: int score>;

        $i2 = staticinvoke <java.lang.Integer: int compare(int,int)>($i1, $i0);

        return $i2;
    }

    public volatile int compareTo(java.lang.Object)
    {
        androidx.media3.extractor.text.webvtt.WebvttCueParser$StyleMatch r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: androidx.media3.extractor.text.webvtt.WebvttCueParser$StyleMatch;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.media3.extractor.text.webvtt.WebvttCueParser$StyleMatch) r1;

        $i0 = virtualinvoke r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$StyleMatch: int compareTo(androidx.media3.extractor.text.webvtt.WebvttCueParser$StyleMatch)>($r2);

        return $i0;
    }

androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder
<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: long startTimeUs>
<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: long endTimeUs>
<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: java.lang.CharSequence text>
<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: int textAlignment>
<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: float line>
<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: int lineType>
<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: int lineAnchor>
<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: float position>
<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: int positionAnchor>
<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: float size>
<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: int verticalType>
    public void <init>()
    {
        androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder r0;

        r0 := @this: androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: long startTimeUs> = 0L;

        r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: long endTimeUs> = 0L;

        r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: int textAlignment> = 2;

        r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: float line> = -3.4028235E38F;

        r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: int lineType> = 1;

        r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: int lineAnchor> = 0;

        r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: float position> = -3.4028235E38F;

        r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: int positionAnchor> = -2147483648;

        r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: float size> = 1.0F;

        r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: int verticalType> = -2147483648;

        return;
    }

    public androidx.media3.extractor.text.webvtt.WebvttCueInfo build()
    {
        androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder r0;
        androidx.media3.extractor.text.webvtt.WebvttCueInfo $r1;
        androidx.media3.common.text.Cue$Builder $r2;
        androidx.media3.common.text.Cue $r3;
        long $l0, $l1;

        r0 := @this: androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder;

        $r1 = new androidx.media3.extractor.text.webvtt.WebvttCueInfo;

        $r2 = virtualinvoke r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: androidx.media3.common.text.Cue$Builder toCueBuilder()>();

        $r3 = virtualinvoke $r2.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue build()>();

        $l1 = r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: long startTimeUs>;

        $l0 = r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: long endTimeUs>;

        specialinvoke $r1.<androidx.media3.extractor.text.webvtt.WebvttCueInfo: void <init>(androidx.media3.common.text.Cue,long,long)>($r3, $l1, $l0);

        return $r1;
    }

    public androidx.media3.common.text.Cue$Builder toCueBuilder()
    {
        androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        androidx.media3.common.text.Cue$Builder r1, $r2, $r4, $r5, $r6, $r7, $r8, $r9;
        byte $b1;
        android.text.Layout$Alignment $r3;
        java.lang.CharSequence $r10, $r11;

        r0 := @this: androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder;

        $f1 = r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: float position>;

        $b1 = $f1 cmpl -3.4028235E38F;

        if $b1 == 0 goto label1;

        $f7 = r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: float position>;

        goto label2;

     label1:
        $i2 = r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: int textAlignment>;

        $f7 = staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: float derivePosition(int)>($i2);

     label2:
        f0 = $f7;

        $i3 = r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: int positionAnchor>;

        if $i3 == -2147483648 goto label3;

        $i10 = r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: int positionAnchor>;

        goto label4;

     label3:
        $i4 = r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: int textAlignment>;

        $i10 = staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: int derivePositionAnchor(int)>($i4);

     label4:
        i0 = $i10;

        $r2 = new androidx.media3.common.text.Cue$Builder;

        specialinvoke $r2.<androidx.media3.common.text.Cue$Builder: void <init>()>();

        $i5 = r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: int textAlignment>;

        $r3 = staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: android.text.Layout$Alignment convertTextAlignment(int)>($i5);

        $r4 = virtualinvoke $r2.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue$Builder setTextAlignment(android.text.Layout$Alignment)>($r3);

        $f2 = r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: float line>;

        $i6 = r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: int lineType>;

        $f3 = staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: float computeLine(float,int)>($f2, $i6);

        $i7 = r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: int lineType>;

        $r5 = virtualinvoke $r4.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue$Builder setLine(float,int)>($f3, $i7);

        $i8 = r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: int lineAnchor>;

        $r6 = virtualinvoke $r5.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue$Builder setLineAnchor(int)>($i8);

        $r7 = virtualinvoke $r6.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue$Builder setPosition(float)>(f0);

        $r8 = virtualinvoke $r7.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue$Builder setPositionAnchor(int)>(i0);

        $f4 = r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: float size>;

        $f5 = staticinvoke <androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: float deriveMaxSize(int,float)>(i0, f0);

        $f6 = staticinvoke <java.lang.Math: float min(float,float)>($f4, $f5);

        $r9 = virtualinvoke $r8.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue$Builder setSize(float)>($f6);

        $i9 = r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: int verticalType>;

        r1 = virtualinvoke $r9.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue$Builder setVerticalType(int)>($i9);

        $r10 = r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: java.lang.CharSequence text>;

        if $r10 == null goto label5;

        $r11 = r0.<androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder: java.lang.CharSequence text>;

        virtualinvoke r1.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue$Builder setText(java.lang.CharSequence)>($r11);

     label5:
        return r1;
    }

    private static float computeLine(float, int)
    {
        float f0;
        int i0;
        byte $b1, $b2, $b3, $b4;

        f0 := @parameter0: float;

        i0 := @parameter1: int;

        $b1 = f0 cmpl -3.4028235E38F;

        if $b1 == 0 goto label2;

        if i0 != 0 goto label2;

        $b2 = f0 cmpg 0.0F;

        if $b2 < 0 goto label1;

        $b3 = f0 cmpl 1.0F;

        if $b3 <= 0 goto label2;

     label1:
        return 1.0F;

     label2:
        $b4 = f0 cmpl -3.4028235E38F;

        if $b4 == 0 goto label3;

        return f0;

     label3:
        if i0 != 0 goto label4;

        return 1.0F;

     label4:
        return -3.4028235E38F;
    }

    private static float derivePosition(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label3;
            case 2: goto label3;
            case 3: goto label3;
            case 4: goto label1;
            case 5: goto label2;
            default: goto label3;
        };

     label1:
        return 0.0F;

     label2:
        return 1.0F;

     label3:
        return 0.5F;
    }

    private static int derivePositionAnchor(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label3;
            case 3: goto label2;
            case 4: goto label1;
            case 5: goto label2;
            default: goto label3;
        };

     label1:
        return 0;

     label2:
        return 2;

     label3:
        return 1;
    }

    private static android.text.Layout$Alignment convertTextAlignment(int)
    {
        int i0;
        android.text.Layout$Alignment $r0, $r1, $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label1;
            case 5: goto label3;
            default: goto label4;
        };

     label1:
        $r2 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        return $r2;

     label2:
        $r1 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_CENTER>;

        return $r1;

     label3:
        $r0 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_OPPOSITE>;

        return $r0;

     label4:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown textAlignment: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("WebvttCueParser", $r6);

        return null;
    }

    private static float deriveMaxSize(int, float)
    {
        int i0;
        float f0, $f1, $f2, $f3, $f4;
        byte $b1;
        java.lang.IllegalStateException $r0;
        java.lang.String $r1;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        lookupswitch(i0)
        {
            case -2147483648: goto label5;
            case 0: goto label1;
            case 1: goto label3;
            case 2: goto label2;
            default: goto label5;
        };

     label1:
        $f4 = 1.0F - f0;

        return $f4;

     label2:
        return f0;

     label3:
        $b1 = f0 cmpg 0.5F;

        if $b1 > 0 goto label4;

        $f3 = f0 * 2.0F;

        return $f3;

     label4:
        $f1 = 1.0F - f0;

        $f2 = $f1 * 2.0F;

        return $f2;

     label5:
        $r0 = new java.lang.IllegalStateException;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r1);

        throw $r0;
    }

