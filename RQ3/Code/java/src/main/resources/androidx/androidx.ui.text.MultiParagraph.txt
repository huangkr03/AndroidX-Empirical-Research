androidx.ui.text.MultiParagraph
<androidx.ui.text.MultiParagraph: androidx.ui.text.MultiParagraphIntrinsics intrinsics>
<androidx.ui.text.MultiParagraph: int maxLines>
<androidx.ui.text.MultiParagraph: boolean didExceedMaxLines>
<androidx.ui.text.MultiParagraph: float width>
<androidx.ui.text.MultiParagraph: float height>
<androidx.ui.text.MultiParagraph: int lineCount>
<androidx.ui.text.MultiParagraph: java.util.List placeholderRects>
<androidx.ui.text.MultiParagraph: java.util.List paragraphInfoList>
    public void <init>(androidx.ui.text.MultiParagraphIntrinsics, int, boolean, androidx.ui.text.ParagraphConstraints)
    {
        androidx.ui.text.MultiParagraph r0, r30, r44;
        androidx.ui.text.MultiParagraphIntrinsics r1, $r10, $r12, $r14, $r25;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, $i15, $i16, i17, i18, i19, i20, $i21;
        boolean z0, $z1, $z2, z3, $z4;
        androidx.ui.text.ParagraphConstraints r2;
        java.util.List r3, $r13, $r15, $r19, $r21, $r26, r27, r43, r45, r49, $r50, r51;
        java.lang.Object r4, $r22, r35;
        androidx.ui.geometry.Rect r5, r7, r8, $r41;
        java.util.Collection r6, $r11, r33, r39, r46;
        java.util.ArrayList $r9, $r16, $r20, $r32, r47, r48;
        java.lang.Iterable $r17, r31, $r38, r42;
        androidx.ui.text.Paragraph $r18, r29;
        androidx.ui.text.ParagraphIntrinsics $r23;
        float $f0, f1, f2, f3, $f4;
        androidx.ui.text.ParagraphInfo $r24, r36;
        androidx.ui.text.ParagraphIntrinsicInfo r28;
        java.util.Iterator r34, r40;

        r0 := @this: androidx.ui.text.MultiParagraph;

        r1 := @parameter0: androidx.ui.text.MultiParagraphIntrinsics;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r2 := @parameter3: androidx.ui.text.ParagraphConstraints;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "intrinsics");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "constraints");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.ui.text.MultiParagraph: androidx.ui.text.MultiParagraphIntrinsics intrinsics> = r1;

        r0.<androidx.ui.text.MultiParagraph: int maxLines> = i0;

        f1 = 0.0F;

        i14 = 0;

        z3 = 0;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r3 = (java.util.List) $r9;

        $r10 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: androidx.ui.text.MultiParagraphIntrinsics getIntrinsics()>();

        r27 = virtualinvoke $r10.<androidx.ui.text.MultiParagraphIntrinsics: java.util.List getInfoList$ui_text_core_release()>();

        $i15 = 0;

        $r11 = (java.util.Collection) r27;

        $i1 = interfaceinvoke $r11.<java.util.Collection: int size()>();

        $i16 = $i1 + -1;

        if 0 > $i16 goto label04;

     label01:
        i17 = $i15;

        $i15 = $i15 + 1;

        $r22 = interfaceinvoke r27.<java.util.List: java.lang.Object get(int)>(i17);

        r28 = (androidx.ui.text.ParagraphIntrinsicInfo) $r22;

        $r23 = virtualinvoke r28.<androidx.ui.text.ParagraphIntrinsicInfo: androidx.ui.text.ParagraphIntrinsics getIntrinsics()>();

        $i7 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: int getMaxLines()>();

        $i8 = $i7 - i14;

        r29 = staticinvoke <androidx.ui.text.ParagraphKt: androidx.ui.text.Paragraph Paragraph(androidx.ui.text.ParagraphIntrinsics,int,boolean,androidx.ui.text.ParagraphConstraints)>($r23, $i8, z0, r2);

        f2 = f1;

        $f0 = interfaceinvoke r29.<androidx.ui.text.Paragraph: float getHeight()>();

        f3 = f1 + $f0;

        f1 = f3;

        i18 = i14;

        $i9 = interfaceinvoke r29.<androidx.ui.text.Paragraph: int getLineCount()>();

        i19 = i18 + $i9;

        i14 = i19;

        $r24 = new androidx.ui.text.ParagraphInfo;

        $i10 = virtualinvoke r28.<androidx.ui.text.ParagraphIntrinsicInfo: int getStartIndex()>();

        $i11 = virtualinvoke r28.<androidx.ui.text.ParagraphIntrinsicInfo: int getEndIndex()>();

        specialinvoke $r24.<androidx.ui.text.ParagraphInfo: void <init>(androidx.ui.text.Paragraph,int,int,int,int,float,float)>(r29, $i10, $i11, i18, i19, f2, f3);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r24);

        $z2 = interfaceinvoke r29.<androidx.ui.text.Paragraph: boolean getDidExceedMaxLines()>();

        if $z2 != 0 goto label02;

        $i12 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: int getMaxLines()>();

        if i19 != $i12 goto label03;

        $r25 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: androidx.ui.text.MultiParagraphIntrinsics getIntrinsics()>();

        $r26 = virtualinvoke $r25.<androidx.ui.text.MultiParagraphIntrinsics: java.util.List getInfoList$ui_text_core_release()>();

        $i13 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r26);

        if i17 == $i13 goto label03;

     label02:
        z3 = 1;

        goto label04;

     label03:
        if $i15 <= $i16 goto label01;

     label04:
        r0.<androidx.ui.text.MultiParagraph: float height> = f1;

        r0.<androidx.ui.text.MultiParagraph: int lineCount> = i14;

        r0.<androidx.ui.text.MultiParagraph: boolean didExceedMaxLines> = z3;

        r0.<androidx.ui.text.MultiParagraph: java.util.List paragraphInfoList> = r3;

        $f4 = virtualinvoke r2.<androidx.ui.text.ParagraphConstraints: float getWidth()>();

        r0.<androidx.ui.text.MultiParagraph: float width> = $f4;

        r30 = r0;

        r31 = (java.lang.Iterable) r3;

        $r32 = new java.util.ArrayList;

        specialinvoke $r32.<java.util.ArrayList: void <init>()>();

        r33 = (java.util.Collection) $r32;

        r34 = interfaceinvoke r31.<java.lang.Iterable: java.util.Iterator iterator()>();

     label05:
        $z4 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label10;

        r35 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>();

        r36 = (androidx.ui.text.ParagraphInfo) r35;

        $r18 = virtualinvoke r36.<androidx.ui.text.ParagraphInfo: androidx.ui.text.Paragraph getParagraph()>();

        $r19 = interfaceinvoke $r18.<androidx.ui.text.Paragraph: java.util.List getPlaceholderRects()>();

        $r38 = (java.lang.Iterable) $r19;

        $r20 = new java.util.ArrayList;

        $i6 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r38, 10);

        specialinvoke $r20.<java.util.ArrayList: void <init>(int)>($i6);

        r39 = (java.util.Collection) $r20;

        r40 = interfaceinvoke $r38.<java.lang.Iterable: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        r4 = interfaceinvoke r40.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.ui.geometry.Rect) r4;

        r6 = r39;

        r7 = r5;

        if r7 != null goto label07;

        $r41 = (androidx.ui.geometry.Rect) null;

        goto label08;

     label07:
        $r41 = virtualinvoke r36.<androidx.ui.text.ParagraphInfo: androidx.ui.geometry.Rect toGlobal(androidx.ui.geometry.Rect)>(r7);

     label08:
        r8 = $r41;

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>(r8);

        goto label06;

     label09:
        $r21 = (java.util.List) r39;

        r42 = (java.lang.Iterable) $r21;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r33, r42);

        goto label05;

     label10:
        r43 = (java.util.List) r33;

        r44 = r30;

        r45 = r43;

        $i2 = interfaceinvoke r45.<java.util.List: int size()>();

        $r12 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: androidx.ui.text.MultiParagraphIntrinsics getIntrinsics()>();

        $r13 = virtualinvoke $r12.<androidx.ui.text.MultiParagraphIntrinsics: java.util.List getPlaceholders()>();

        $i3 = interfaceinvoke $r13.<java.util.List: int size()>();

        if $i2 >= $i3 goto label13;

        $r14 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: androidx.ui.text.MultiParagraphIntrinsics getIntrinsics()>();

        $r15 = virtualinvoke $r14.<androidx.ui.text.MultiParagraphIntrinsics: java.util.List getPlaceholders()>();

        $i4 = interfaceinvoke $r15.<java.util.List: int size()>();

        $i5 = interfaceinvoke r45.<java.util.List: int size()>();

        i20 = $i4 - $i5;

        r46 = (java.util.Collection) r45;

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>(int)>(i20);

        r47 = $r16;

        $i21 = 0;

     label11:
        if $i21 >= i20 goto label12;

        r48 = r47;

        virtualinvoke r48.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

        $i21 = $i21 + 1;

        goto label11;

     label12:
        r49 = (java.util.List) r47;

        $r17 = (java.lang.Iterable) r49;

        $r50 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Iterable)>(r46, $r17);

        goto label14;

     label13:
        $r50 = r45;

     label14:
        r51 = $r50;

        r44.<androidx.ui.text.MultiParagraph: java.util.List placeholderRects> = r51;

        return;
    }

    public void <init>(androidx.ui.text.MultiParagraphIntrinsics, int, boolean, androidx.ui.text.ParagraphConstraints, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.ui.text.MultiParagraph r0;
        androidx.ui.text.MultiParagraphIntrinsics r1;
        androidx.ui.text.ParagraphConstraints r2;
        int i0, $i1, $i2, i3;
        kotlin.jvm.internal.DefaultConstructorMarker r3;
        boolean z0;

        r0 := @this: androidx.ui.text.MultiParagraph;

        r1 := @parameter0: androidx.ui.text.MultiParagraphIntrinsics;

        i3 := @parameter1: int;

        z0 := @parameter2: boolean;

        r2 := @parameter3: androidx.ui.text.ParagraphConstraints;

        i0 := @parameter4: int;

        r3 := @parameter5: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        i3 = 2147483647;

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        z0 = 0;

     label2:
        specialinvoke r0.<androidx.ui.text.MultiParagraph: void <init>(androidx.ui.text.MultiParagraphIntrinsics,int,boolean,androidx.ui.text.ParagraphConstraints)>(r1, i3, z0, r2);

        return;
    }

    public final androidx.ui.text.MultiParagraphIntrinsics getIntrinsics()
    {
        androidx.ui.text.MultiParagraph r0;
        androidx.ui.text.MultiParagraphIntrinsics $r1;

        r0 := @this: androidx.ui.text.MultiParagraph;

        $r1 = r0.<androidx.ui.text.MultiParagraph: androidx.ui.text.MultiParagraphIntrinsics intrinsics>;

        return $r1;
    }

    public final int getMaxLines()
    {
        androidx.ui.text.MultiParagraph r0;
        int $i0;

        r0 := @this: androidx.ui.text.MultiParagraph;

        $i0 = r0.<androidx.ui.text.MultiParagraph: int maxLines>;

        return $i0;
    }

    public void <init>(androidx.ui.text.AnnotatedString, androidx.ui.text.TextStyle, java.util.List, int, boolean, androidx.ui.text.ParagraphConstraints, androidx.ui.unit.Density, androidx.ui.text.font.Font$ResourceLoader)
    {
        androidx.ui.text.MultiParagraph r0;
        androidx.ui.text.AnnotatedString r1;
        androidx.ui.text.TextStyle r2;
        java.util.List r3;
        int i0;
        boolean z0;
        androidx.ui.text.ParagraphConstraints r4;
        androidx.ui.unit.Density r5;
        androidx.ui.text.font.Font$ResourceLoader r6;
        androidx.ui.text.MultiParagraphIntrinsics $r7;

        r0 := @this: androidx.ui.text.MultiParagraph;

        r1 := @parameter0: androidx.ui.text.AnnotatedString;

        r2 := @parameter1: androidx.ui.text.TextStyle;

        r3 := @parameter2: java.util.List;

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        r4 := @parameter5: androidx.ui.text.ParagraphConstraints;

        r5 := @parameter6: androidx.ui.unit.Density;

        r6 := @parameter7: androidx.ui.text.font.Font$ResourceLoader;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotatedString");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "style");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "placeholders");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "constraints");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "density");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r6, "resourceLoader");

        $r7 = new androidx.ui.text.MultiParagraphIntrinsics;

        specialinvoke $r7.<androidx.ui.text.MultiParagraphIntrinsics: void <init>(androidx.ui.text.AnnotatedString,androidx.ui.text.TextStyle,java.util.List,androidx.ui.unit.Density,androidx.ui.text.font.Font$ResourceLoader)>(r1, r2, r3, r5, r6);

        specialinvoke r0.<androidx.ui.text.MultiParagraph: void <init>(androidx.ui.text.MultiParagraphIntrinsics,int,boolean,androidx.ui.text.ParagraphConstraints)>($r7, i0, z0, r4);

        return;
    }

    public void <init>(androidx.ui.text.AnnotatedString, androidx.ui.text.TextStyle, java.util.List, int, boolean, androidx.ui.text.ParagraphConstraints, androidx.ui.unit.Density, androidx.ui.text.font.Font$ResourceLoader, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.ui.text.MultiParagraph r0;
        androidx.ui.text.AnnotatedString r1;
        androidx.ui.text.TextStyle r2;
        androidx.ui.text.ParagraphConstraints r3;
        androidx.ui.unit.Density r4;
        androidx.ui.text.font.Font$ResourceLoader r5;
        int i0, $i1, $i2, $i3, i4;
        kotlin.jvm.internal.DefaultConstructorMarker r6;
        boolean z0, z1;
        java.util.List r7;

        r0 := @this: androidx.ui.text.MultiParagraph;

        r1 := @parameter0: androidx.ui.text.AnnotatedString;

        r2 := @parameter1: androidx.ui.text.TextStyle;

        r7 := @parameter2: java.util.List;

        i4 := @parameter3: int;

        z1 := @parameter4: boolean;

        r3 := @parameter5: androidx.ui.text.ParagraphConstraints;

        r4 := @parameter6: androidx.ui.unit.Density;

        r5 := @parameter7: androidx.ui.text.font.Font$ResourceLoader;

        i0 := @parameter8: int;

        r6 := @parameter9: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        z0 = 0;

        r7 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label1:
        $i2 = i0 & 8;

        if $i2 == 0 goto label2;

        i4 = 2147483647;

     label2:
        $i3 = i0 & 16;

        if $i3 == 0 goto label3;

        z1 = 0;

     label3:
        specialinvoke r0.<androidx.ui.text.MultiParagraph: void <init>(androidx.ui.text.AnnotatedString,androidx.ui.text.TextStyle,java.util.List,int,boolean,androidx.ui.text.ParagraphConstraints,androidx.ui.unit.Density,androidx.ui.text.font.Font$ResourceLoader)>(r1, r2, r7, i4, z1, r3, r4, r5);

        return;
    }

    private final androidx.ui.text.AnnotatedString getAnnotatedString()
    {
        androidx.ui.text.MultiParagraph r0;
        androidx.ui.text.MultiParagraphIntrinsics $r1;
        androidx.ui.text.AnnotatedString $r2;

        r0 := @this: androidx.ui.text.MultiParagraph;

        $r1 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: androidx.ui.text.MultiParagraphIntrinsics getIntrinsics()>();

        $r2 = virtualinvoke $r1.<androidx.ui.text.MultiParagraphIntrinsics: androidx.ui.text.AnnotatedString getAnnotatedString()>();

        return $r2;
    }

    public final float getMinIntrinsicWidth()
    {
        androidx.ui.text.MultiParagraph r0;
        androidx.ui.text.MultiParagraphIntrinsics $r1;
        float $f0;

        r0 := @this: androidx.ui.text.MultiParagraph;

        $r1 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: androidx.ui.text.MultiParagraphIntrinsics getIntrinsics()>();

        $f0 = virtualinvoke $r1.<androidx.ui.text.MultiParagraphIntrinsics: float getMaxIntrinsicWidth()>();

        return $f0;
    }

    public final float getMaxIntrinsicWidth()
    {
        androidx.ui.text.MultiParagraph r0;
        androidx.ui.text.MultiParagraphIntrinsics $r1;
        float $f0;

        r0 := @this: androidx.ui.text.MultiParagraph;

        $r1 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: androidx.ui.text.MultiParagraphIntrinsics getIntrinsics()>();

        $f0 = virtualinvoke $r1.<androidx.ui.text.MultiParagraphIntrinsics: float getMaxIntrinsicWidth()>();

        return $f0;
    }

    public final boolean getDidExceedMaxLines()
    {
        androidx.ui.text.MultiParagraph r0;
        boolean $z0;

        r0 := @this: androidx.ui.text.MultiParagraph;

        $z0 = r0.<androidx.ui.text.MultiParagraph: boolean didExceedMaxLines>;

        return $z0;
    }

    public final float getWidth()
    {
        androidx.ui.text.MultiParagraph r0;
        float $f0;

        r0 := @this: androidx.ui.text.MultiParagraph;

        $f0 = r0.<androidx.ui.text.MultiParagraph: float width>;

        return $f0;
    }

    public final float getHeight()
    {
        androidx.ui.text.MultiParagraph r0;
        float $f0;

        r0 := @this: androidx.ui.text.MultiParagraph;

        $f0 = r0.<androidx.ui.text.MultiParagraph: float height>;

        return $f0;
    }

    public final float getFirstBaseline()
    {
        androidx.ui.text.MultiParagraph r0;
        java.util.List $r1, $r2;
        boolean $z0;
        java.lang.Object $r3;
        androidx.ui.text.ParagraphInfo $r4;
        androidx.ui.text.Paragraph $r5;
        float $f0;

        r0 := @this: androidx.ui.text.MultiParagraph;

        $r1 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $f0 = 0.0F;

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (androidx.ui.text.ParagraphInfo) $r3;

        $r5 = virtualinvoke $r4.<androidx.ui.text.ParagraphInfo: androidx.ui.text.Paragraph getParagraph()>();

        $f0 = interfaceinvoke $r5.<androidx.ui.text.Paragraph: float getFirstBaseline()>();

     label2:
        return $f0;
    }

    public final float getLastBaseline()
    {
        androidx.ui.text.MultiParagraph r0;
        androidx.ui.text.ParagraphInfo r1;
        boolean z0, z1, $z3;
        java.util.List $r3, $r4;
        java.lang.Object $r5;
        androidx.ui.text.Paragraph $r6;
        float $f0, $f1;

        r0 := @this: androidx.ui.text.MultiParagraph;

        $r3 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        $z3 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z3 == 0 goto label1;

        $f1 = 0.0F;

        goto label2;

     label1:
        $r4 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        $r5 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object last(java.util.List)>($r4);

        r1 = (androidx.ui.text.ParagraphInfo) $r5;

        z0 = 0;

        z1 = 0;

        $r6 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: androidx.ui.text.Paragraph getParagraph()>();

        $f0 = interfaceinvoke $r6.<androidx.ui.text.Paragraph: float getLastBaseline()>();

        $f1 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: float toGlobalYPosition(float)>($f0);

     label2:
        return $f1;
    }

    public final int getLineCount()
    {
        androidx.ui.text.MultiParagraph r0;
        int $i0;

        r0 := @this: androidx.ui.text.MultiParagraph;

        $i0 = r0.<androidx.ui.text.MultiParagraph: int lineCount>;

        return $i0;
    }

    public final java.util.List getPlaceholderRects()
    {
        androidx.ui.text.MultiParagraph r0;
        java.util.List $r1;

        r0 := @this: androidx.ui.text.MultiParagraph;

        $r1 = r0.<androidx.ui.text.MultiParagraph: java.util.List placeholderRects>;

        return $r1;
    }

    public final java.util.List getParagraphInfoList$ui_text_core_release()
    {
        androidx.ui.text.MultiParagraph r0;
        java.util.List $r1;

        r0 := @this: androidx.ui.text.MultiParagraph;

        $r1 = r0.<androidx.ui.text.MultiParagraph: java.util.List paragraphInfoList>;

        return $r1;
    }

    public final void paint(androidx.ui.graphics.Canvas)
    {
        androidx.ui.text.MultiParagraph r0;
        androidx.ui.graphics.Canvas r1;
        java.util.List $r2;
        int i0, i1, $i2, i3;
        java.lang.Object r3;
        androidx.ui.text.ParagraphInfo r4;
        java.util.Collection $r5;
        androidx.ui.text.Paragraph $r6, $r7;
        float $f0;

        r0 := @this: androidx.ui.text.MultiParagraph;

        r1 := @parameter0: androidx.ui.graphics.Canvas;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "canvas");

        interfaceinvoke r1.<androidx.ui.graphics.Canvas: void save()>();

        $r2 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        i3 = 0;

        $r5 = (java.util.Collection) $r2;

        $i2 = interfaceinvoke $r5.<java.util.Collection: int size()>();

        i0 = $i2 + -1;

        if i3 > i0 goto label2;

     label1:
        i1 = i3;

        i3 = i3 + 1;

        r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (androidx.ui.text.ParagraphInfo) r3;

        $r6 = virtualinvoke r4.<androidx.ui.text.ParagraphInfo: androidx.ui.text.Paragraph getParagraph()>();

        interfaceinvoke $r6.<androidx.ui.text.Paragraph: void paint(androidx.ui.graphics.Canvas)>(r1);

        $r7 = virtualinvoke r4.<androidx.ui.text.ParagraphInfo: androidx.ui.text.Paragraph getParagraph()>();

        $f0 = interfaceinvoke $r7.<androidx.ui.text.Paragraph: float getHeight()>();

        interfaceinvoke r1.<androidx.ui.graphics.Canvas: void translate(float,float)>(0.0F, $f0);

        if i3 <= i0 goto label1;

     label2:
        interfaceinvoke r1.<androidx.ui.graphics.Canvas: void restore()>();

        return;
    }

    public final androidx.ui.graphics.Path getPathForRange(int, int)
    {
        androidx.ui.text.MultiParagraph r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13;
        boolean z0, $z2, $z3, $z6, z7, z8, $z13, z15, $z16, $z18, z20;
        androidx.ui.text.ParagraphInfo $r1, r36, r41;
        kotlin.ranges.IntRange $r2;
        java.util.List $r3, $r4, $r6, $r8, $r42;
        java.lang.Iterable $r5, $r32, r37;
        java.util.ArrayList $r7, $r9, r33;
        java.util.Collection $r10, r38;
        androidx.ui.text.Paragraph $r11;
        androidx.ui.graphics.Path $r12, $r13, $r14, r31;
        java.lang.StringBuilder $r15, $r16, $r17, $r18, $r19, $r20, $r23, $r24;
        androidx.ui.text.AnnotatedString $r21, $r28;
        java.lang.String $r22, $r26, $r29, $r30;
        java.lang.IllegalArgumentException $r25;
        java.lang.Throwable $r27;
        java.util.Iterator r34, r39;
        java.lang.Object r35, $r40, r43;

        r0 := @this: androidx.ui.text.MultiParagraph;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = new kotlin.ranges.IntRange;

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(0, i1);

        $z2 = virtualinvoke $r2.<kotlin.ranges.IntRange: boolean contains(int)>(i0);

        if $z2 == 0 goto label01;

        $r28 = specialinvoke r0.<androidx.ui.text.MultiParagraph: androidx.ui.text.AnnotatedString getAnnotatedString()>();

        $r29 = virtualinvoke $r28.<androidx.ui.text.AnnotatedString: java.lang.String getText()>();

        $i9 = virtualinvoke $r29.<java.lang.String: int length()>();

        if i1 > $i9 goto label01;

        $z6 = 1;

        goto label02;

     label01:
        $z6 = 0;

     label02:
        z7 = $z6;

        z8 = 0;

        if z7 != 0 goto label03;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Start(");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") or End(");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is out of range [0..");

        $r21 = specialinvoke r0.<androidx.ui.text.MultiParagraph: androidx.ui.text.AnnotatedString getAnnotatedString()>();

        $r22 = virtualinvoke $r21.<androidx.ui.text.AnnotatedString: java.lang.String getText()>();

        $i8 = virtualinvoke $r22.<java.lang.String: int length()>();

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), or start > end!");

        $r30 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = new java.lang.IllegalArgumentException;

        $r26 = virtualinvoke $r30.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r26);

        $r27 = (java.lang.Throwable) $r25;

        throw $r27;

     label03:
        if i0 != i1 goto label04;

        $r14 = staticinvoke <androidx.ui.graphics.AndroidPathKt: androidx.ui.graphics.Path Path()>();

        return $r14;

     label04:
        $r3 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        i10 = staticinvoke <androidx.ui.text.MultiParagraphKt: int findParagraphByIndex(java.util.List,int)>($r3, i0);

        r31 = staticinvoke <androidx.ui.graphics.AndroidPathKt: androidx.ui.graphics.Path Path()>();

        $r4 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        $r5 = (java.lang.Iterable) $r4;

        $r6 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List drop(java.lang.Iterable,int)>($r5, i10);

        $r32 = (java.lang.Iterable) $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r33 = $r7;

        r34 = interfaceinvoke $r32.<java.lang.Iterable: java.util.Iterator iterator()>();

     label05:
        $z3 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label09;

        r35 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>();

        r36 = (androidx.ui.text.ParagraphInfo) r35;

        $i7 = virtualinvoke r36.<androidx.ui.text.ParagraphInfo: int getStartIndex()>();

        if $i7 >= i1 goto label06;

        $z13 = 1;

        goto label07;

     label06:
        $z13 = 0;

     label07:
        if $z13 != 0 goto label08;

        goto label09;

     label08:
        virtualinvoke r33.<java.util.ArrayList: boolean add(java.lang.Object)>(r35);

        goto label05;

     label09:
        $r8 = (java.util.List) r33;

        r37 = (java.lang.Iterable) $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r38 = (java.util.Collection) $r9;

        z15 = 0;

        r39 = interfaceinvoke r37.<java.lang.Iterable: java.util.Iterator iterator()>();

     label10:
        $z16 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>();

        if $z16 == 0 goto label13;

        $r40 = interfaceinvoke r39.<java.util.Iterator: java.lang.Object next()>();

        r41 = (androidx.ui.text.ParagraphInfo) $r40;

        $i5 = virtualinvoke r41.<androidx.ui.text.ParagraphInfo: int getStartIndex()>();

        $i6 = virtualinvoke r41.<androidx.ui.text.ParagraphInfo: int getEndIndex()>();

        if $i5 != $i6 goto label11;

        $z18 = 1;

        goto label12;

     label11:
        $z18 = 0;

     label12:
        if $z18 != 0 goto label10;

        interfaceinvoke r38.<java.util.Collection: boolean add(java.lang.Object)>($r40);

        goto label10;

     label13:
        $r42 = (java.util.List) r38;

        i11 = 0;

        $r10 = (java.util.Collection) $r42;

        $i2 = interfaceinvoke $r10.<java.util.Collection: int size()>();

        i12 = $i2 + -1;

        if i11 > i12 goto label15;

     label14:
        i13 = i11;

        i11 = i11 + 1;

        r43 = interfaceinvoke $r42.<java.util.List: java.lang.Object get(int)>(i13);

        z20 = 0;

        z0 = 0;

        $r1 = (androidx.ui.text.ParagraphInfo) r43;

        $r11 = virtualinvoke $r1.<androidx.ui.text.ParagraphInfo: androidx.ui.text.Paragraph getParagraph()>();

        $i3 = virtualinvoke $r1.<androidx.ui.text.ParagraphInfo: int toLocalIndex(int)>(i0);

        $i4 = virtualinvoke $r1.<androidx.ui.text.ParagraphInfo: int toLocalIndex(int)>(i1);

        $r12 = interfaceinvoke $r11.<androidx.ui.text.Paragraph: androidx.ui.graphics.Path getPathForRange(int,int)>($i3, $i4);

        $r13 = virtualinvoke $r1.<androidx.ui.text.ParagraphInfo: androidx.ui.graphics.Path toGlobal(androidx.ui.graphics.Path)>($r12);

        staticinvoke <androidx.ui.graphics.Path$DefaultImpls: void addPath$default(androidx.ui.graphics.Path,androidx.ui.graphics.Path,androidx.ui.geometry.Offset,int,java.lang.Object)>(r31, $r13, null, 2, null);

        if i11 <= i12 goto label14;

     label15:
        return r31;
    }

    public final int getOffsetForPosition(androidx.ui.geometry.Offset)
    {
        androidx.ui.text.MultiParagraph r0;
        androidx.ui.geometry.Offset r1, $r6;
        int i0, i2, $i5, $i6, $i7, $i8, $i9;
        androidx.ui.text.ParagraphInfo r2;
        boolean z0, z1, z3;
        byte b1, $b3, $b4;
        float $f0, $f1, $f2, $f3;
        java.util.List $r4, $r7, $r8;
        androidx.ui.text.Paragraph $r5;
        java.lang.Object $r9;

        r0 := @this: androidx.ui.text.MultiParagraph;

        r1 := @parameter0: androidx.ui.geometry.Offset;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "position");

        $f0 = virtualinvoke r1.<androidx.ui.geometry.Offset: float getY()>();

        $b3 = $f0 cmpg 0.0F;

        if $b3 > 0 goto label1;

        $i7 = 0;

        goto label3;

     label1:
        $f1 = virtualinvoke r1.<androidx.ui.geometry.Offset: float getY()>();

        $f2 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: float getHeight()>();

        $b4 = $f1 cmpl $f2;

        if $b4 < 0 goto label2;

        $r7 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        $i7 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r7);

        goto label3;

     label2:
        $r4 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        $f3 = virtualinvoke r1.<androidx.ui.geometry.Offset: float getY()>();

        $i7 = staticinvoke <androidx.ui.text.MultiParagraphKt: int findParagraphByY(java.util.List,float)>($r4, $f3);

     label3:
        i0 = $i7;

        $r8 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i0);

        r2 = (androidx.ui.text.ParagraphInfo) $r9;

        z0 = 0;

        z1 = 0;

        $i8 = virtualinvoke r2.<androidx.ui.text.ParagraphInfo: int getLength()>();

        if $i8 != 0 goto label4;

        b1 = 0;

        $i6 = virtualinvoke r2.<androidx.ui.text.ParagraphInfo: int getStartIndex()>();

        i2 = $i6 - 1;

        z3 = 0;

        $i9 = staticinvoke <java.lang.Math: int max(int,int)>(b1, i2);

        goto label5;

     label4:
        $r5 = virtualinvoke r2.<androidx.ui.text.ParagraphInfo: androidx.ui.text.Paragraph getParagraph()>();

        $r6 = virtualinvoke r2.<androidx.ui.text.ParagraphInfo: androidx.ui.geometry.Offset toLocal(androidx.ui.geometry.Offset)>(r1);

        $i5 = interfaceinvoke $r5.<androidx.ui.text.Paragraph: int getOffsetForPosition(androidx.ui.geometry.Offset)>($r6);

        $i9 = virtualinvoke r2.<androidx.ui.text.ParagraphInfo: int toGlobalIndex(int)>($i5);

     label5:
        return $i9;
    }

    public final androidx.ui.geometry.Rect getBoundingBox(int)
    {
        androidx.ui.text.MultiParagraph r0;
        int i0, i1, $i2;
        androidx.ui.text.ParagraphInfo r1;
        boolean z0, z1;
        java.util.List $r3, $r4;
        java.lang.Object $r5;
        androidx.ui.text.Paragraph $r6;
        androidx.ui.geometry.Rect $r7, $r8;

        r0 := @this: androidx.ui.text.MultiParagraph;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.ui.text.MultiParagraph: void requireIndexInRange(int)>(i0);

        $r3 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        i1 = staticinvoke <androidx.ui.text.MultiParagraphKt: int findParagraphByIndex(java.util.List,int)>($r3, i0);

        $r4 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        r1 = (androidx.ui.text.ParagraphInfo) $r5;

        z0 = 0;

        z1 = 0;

        $r6 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: androidx.ui.text.Paragraph getParagraph()>();

        $i2 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: int toLocalIndex(int)>(i0);

        $r7 = interfaceinvoke $r6.<androidx.ui.text.Paragraph: androidx.ui.geometry.Rect getBoundingBox(int)>($i2);

        $r8 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: androidx.ui.geometry.Rect toGlobal(androidx.ui.geometry.Rect)>($r7);

        return $r8;
    }

    public final float getHorizontalPosition(int, boolean)
    {
        androidx.ui.text.MultiParagraph r0;
        int i0, i1, $i2, $i3, $i4;
        boolean z0, z1, z2;
        androidx.ui.text.ParagraphInfo r1;
        androidx.ui.text.AnnotatedString $r3;
        java.util.List $r4, $r5, $r8;
        java.lang.Object $r6;
        androidx.ui.text.Paragraph $r7;
        float $f0;

        r0 := @this: androidx.ui.text.MultiParagraph;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<androidx.ui.text.MultiParagraph: void requireIndexInRangeInclusiveEnd(int)>(i0);

        $r3 = specialinvoke r0.<androidx.ui.text.MultiParagraph: androidx.ui.text.AnnotatedString getAnnotatedString()>();

        $i2 = staticinvoke <androidx.ui.text.AnnotatedStringKt: int getLength(androidx.ui.text.AnnotatedString)>($r3);

        if i0 != $i2 goto label1;

        $r8 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        $i4 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r8);

        goto label2;

     label1:
        $r4 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        $i4 = staticinvoke <androidx.ui.text.MultiParagraphKt: int findParagraphByIndex(java.util.List,int)>($r4, i0);

     label2:
        i1 = $i4;

        $r5 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i1);

        r1 = (androidx.ui.text.ParagraphInfo) $r6;

        z1 = 0;

        z2 = 0;

        $r7 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: androidx.ui.text.Paragraph getParagraph()>();

        $i3 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: int toLocalIndex(int)>(i0);

        $f0 = interfaceinvoke $r7.<androidx.ui.text.Paragraph: float getHorizontalPosition(int,boolean)>($i3, z0);

        return $f0;
    }

    public final androidx.ui.text.style.TextDirection getParagraphDirection(int)
    {
        androidx.ui.text.MultiParagraph r0;
        int i0, i1, $i2, $i3, $i4;
        androidx.ui.text.ParagraphInfo r1;
        boolean z0, z1;
        androidx.ui.text.AnnotatedString $r3;
        java.util.List $r4, $r5, $r9;
        java.lang.Object $r6;
        androidx.ui.text.Paragraph $r7;
        androidx.ui.text.style.TextDirection $r8;

        r0 := @this: androidx.ui.text.MultiParagraph;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.ui.text.MultiParagraph: void requireIndexInRangeInclusiveEnd(int)>(i0);

        $r3 = specialinvoke r0.<androidx.ui.text.MultiParagraph: androidx.ui.text.AnnotatedString getAnnotatedString()>();

        $i2 = staticinvoke <androidx.ui.text.AnnotatedStringKt: int getLength(androidx.ui.text.AnnotatedString)>($r3);

        if i0 != $i2 goto label1;

        $r9 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        $i4 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r9);

        goto label2;

     label1:
        $r4 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        $i4 = staticinvoke <androidx.ui.text.MultiParagraphKt: int findParagraphByIndex(java.util.List,int)>($r4, i0);

     label2:
        i1 = $i4;

        $r5 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i1);

        r1 = (androidx.ui.text.ParagraphInfo) $r6;

        z0 = 0;

        z1 = 0;

        $r7 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: androidx.ui.text.Paragraph getParagraph()>();

        $i3 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: int toLocalIndex(int)>(i0);

        $r8 = interfaceinvoke $r7.<androidx.ui.text.Paragraph: androidx.ui.text.style.TextDirection getParagraphDirection(int)>($i3);

        return $r8;
    }

    public final androidx.ui.text.style.TextDirection getBidiRunDirection(int)
    {
        androidx.ui.text.MultiParagraph r0;
        int i0, i1, $i2, $i3, $i4;
        androidx.ui.text.ParagraphInfo r1;
        boolean z0, z1;
        androidx.ui.text.AnnotatedString $r3;
        java.util.List $r4, $r5, $r9;
        java.lang.Object $r6;
        androidx.ui.text.Paragraph $r7;
        androidx.ui.text.style.TextDirection $r8;

        r0 := @this: androidx.ui.text.MultiParagraph;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.ui.text.MultiParagraph: void requireIndexInRangeInclusiveEnd(int)>(i0);

        $r3 = specialinvoke r0.<androidx.ui.text.MultiParagraph: androidx.ui.text.AnnotatedString getAnnotatedString()>();

        $i2 = staticinvoke <androidx.ui.text.AnnotatedStringKt: int getLength(androidx.ui.text.AnnotatedString)>($r3);

        if i0 != $i2 goto label1;

        $r9 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        $i4 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r9);

        goto label2;

     label1:
        $r4 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        $i4 = staticinvoke <androidx.ui.text.MultiParagraphKt: int findParagraphByIndex(java.util.List,int)>($r4, i0);

     label2:
        i1 = $i4;

        $r5 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i1);

        r1 = (androidx.ui.text.ParagraphInfo) $r6;

        z0 = 0;

        z1 = 0;

        $r7 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: androidx.ui.text.Paragraph getParagraph()>();

        $i3 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: int toLocalIndex(int)>(i0);

        $r8 = interfaceinvoke $r7.<androidx.ui.text.Paragraph: androidx.ui.text.style.TextDirection getBidiRunDirection(int)>($i3);

        return $r8;
    }

    public final androidx.ui.text.TextRange getWordBoundary(int)
    {
        androidx.ui.text.MultiParagraph r0;
        int i0, i1, $i2;
        androidx.ui.text.ParagraphInfo r1;
        boolean z0, z1;
        java.util.List $r3, $r4;
        java.lang.Object $r5;
        androidx.ui.text.Paragraph $r6;
        androidx.ui.text.TextRange $r7, $r8;

        r0 := @this: androidx.ui.text.MultiParagraph;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.ui.text.MultiParagraph: void requireIndexInRange(int)>(i0);

        $r3 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        i1 = staticinvoke <androidx.ui.text.MultiParagraphKt: int findParagraphByIndex(java.util.List,int)>($r3, i0);

        $r4 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        r1 = (androidx.ui.text.ParagraphInfo) $r5;

        z0 = 0;

        z1 = 0;

        $r6 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: androidx.ui.text.Paragraph getParagraph()>();

        $i2 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: int toLocalIndex(int)>(i0);

        $r7 = interfaceinvoke $r6.<androidx.ui.text.Paragraph: androidx.ui.text.TextRange getWordBoundary(int)>($i2);

        $r8 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: androidx.ui.text.TextRange toGlobal(androidx.ui.text.TextRange)>($r7);

        return $r8;
    }

    public final androidx.ui.geometry.Rect getCursorRect(int)
    {
        androidx.ui.text.MultiParagraph r0;
        int i0, i1, $i2, $i3, $i4;
        androidx.ui.text.ParagraphInfo r1;
        boolean z0, z1;
        androidx.ui.text.AnnotatedString $r3;
        java.util.List $r4, $r5, $r10;
        java.lang.Object $r6;
        androidx.ui.text.Paragraph $r7;
        androidx.ui.geometry.Rect $r8, $r9;

        r0 := @this: androidx.ui.text.MultiParagraph;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.ui.text.MultiParagraph: void requireIndexInRangeInclusiveEnd(int)>(i0);

        $r3 = specialinvoke r0.<androidx.ui.text.MultiParagraph: androidx.ui.text.AnnotatedString getAnnotatedString()>();

        $i2 = staticinvoke <androidx.ui.text.AnnotatedStringKt: int getLength(androidx.ui.text.AnnotatedString)>($r3);

        if i0 != $i2 goto label1;

        $r10 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        $i4 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r10);

        goto label2;

     label1:
        $r4 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        $i4 = staticinvoke <androidx.ui.text.MultiParagraphKt: int findParagraphByIndex(java.util.List,int)>($r4, i0);

     label2:
        i1 = $i4;

        $r5 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i1);

        r1 = (androidx.ui.text.ParagraphInfo) $r6;

        z0 = 0;

        z1 = 0;

        $r7 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: androidx.ui.text.Paragraph getParagraph()>();

        $i3 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: int toLocalIndex(int)>(i0);

        $r8 = interfaceinvoke $r7.<androidx.ui.text.Paragraph: androidx.ui.geometry.Rect getCursorRect(int)>($i3);

        $r9 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: androidx.ui.geometry.Rect toGlobal(androidx.ui.geometry.Rect)>($r8);

        return $r9;
    }

    public final int getLineForOffset(int)
    {
        androidx.ui.text.MultiParagraph r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        androidx.ui.text.ParagraphInfo r1;
        boolean z0, z1;
        androidx.ui.text.AnnotatedString $r3;
        java.util.List $r4, $r5, $r8;
        java.lang.Object $r6;
        androidx.ui.text.Paragraph $r7;

        r0 := @this: androidx.ui.text.MultiParagraph;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.ui.text.MultiParagraph: void requireIndexInRangeInclusiveEnd(int)>(i0);

        $r3 = specialinvoke r0.<androidx.ui.text.MultiParagraph: androidx.ui.text.AnnotatedString getAnnotatedString()>();

        $i2 = staticinvoke <androidx.ui.text.AnnotatedStringKt: int getLength(androidx.ui.text.AnnotatedString)>($r3);

        if i0 != $i2 goto label1;

        $r8 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        $i6 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r8);

        goto label2;

     label1:
        $r4 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        $i6 = staticinvoke <androidx.ui.text.MultiParagraphKt: int findParagraphByIndex(java.util.List,int)>($r4, i0);

     label2:
        i1 = $i6;

        $r5 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i1);

        r1 = (androidx.ui.text.ParagraphInfo) $r6;

        z0 = 0;

        z1 = 0;

        $r7 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: androidx.ui.text.Paragraph getParagraph()>();

        $i3 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: int toLocalIndex(int)>(i0);

        $i4 = interfaceinvoke $r7.<androidx.ui.text.Paragraph: int getLineForOffset(int)>($i3);

        $i5 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: int toGlobalLineIndex(int)>($i4);

        return $i5;
    }

    public final float getLineLeft(int)
    {
        androidx.ui.text.MultiParagraph r0;
        int i0, i1, $i2;
        androidx.ui.text.ParagraphInfo r1;
        boolean z0, z1;
        java.util.List $r3, $r4;
        java.lang.Object $r5;
        androidx.ui.text.Paragraph $r6;
        float $f0;

        r0 := @this: androidx.ui.text.MultiParagraph;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.ui.text.MultiParagraph: void requireLineIndexInRange(int)>(i0);

        $r3 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        i1 = staticinvoke <androidx.ui.text.MultiParagraphKt: int findParagraphByLineIndex(java.util.List,int)>($r3, i0);

        $r4 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        r1 = (androidx.ui.text.ParagraphInfo) $r5;

        z0 = 0;

        z1 = 0;

        $r6 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: androidx.ui.text.Paragraph getParagraph()>();

        $i2 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: int toLocalLineIndex(int)>(i0);

        $f0 = interfaceinvoke $r6.<androidx.ui.text.Paragraph: float getLineLeft(int)>($i2);

        return $f0;
    }

    public final float getLineRight(int)
    {
        androidx.ui.text.MultiParagraph r0;
        int i0, i1, $i2;
        androidx.ui.text.ParagraphInfo r1;
        boolean z0, z1;
        java.util.List $r3, $r4;
        java.lang.Object $r5;
        androidx.ui.text.Paragraph $r6;
        float $f0;

        r0 := @this: androidx.ui.text.MultiParagraph;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.ui.text.MultiParagraph: void requireLineIndexInRange(int)>(i0);

        $r3 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        i1 = staticinvoke <androidx.ui.text.MultiParagraphKt: int findParagraphByLineIndex(java.util.List,int)>($r3, i0);

        $r4 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        r1 = (androidx.ui.text.ParagraphInfo) $r5;

        z0 = 0;

        z1 = 0;

        $r6 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: androidx.ui.text.Paragraph getParagraph()>();

        $i2 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: int toLocalLineIndex(int)>(i0);

        $f0 = interfaceinvoke $r6.<androidx.ui.text.Paragraph: float getLineRight(int)>($i2);

        return $f0;
    }

    public final float getLineTop(int)
    {
        androidx.ui.text.MultiParagraph r0;
        int i0, i1, $i2;
        androidx.ui.text.ParagraphInfo r1;
        boolean z0, z1;
        java.util.List $r3, $r4;
        java.lang.Object $r5;
        androidx.ui.text.Paragraph $r6;
        float $f0, $f1;

        r0 := @this: androidx.ui.text.MultiParagraph;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.ui.text.MultiParagraph: void requireLineIndexInRange(int)>(i0);

        $r3 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        i1 = staticinvoke <androidx.ui.text.MultiParagraphKt: int findParagraphByLineIndex(java.util.List,int)>($r3, i0);

        $r4 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        r1 = (androidx.ui.text.ParagraphInfo) $r5;

        z0 = 0;

        z1 = 0;

        $r6 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: androidx.ui.text.Paragraph getParagraph()>();

        $i2 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: int toLocalLineIndex(int)>(i0);

        $f0 = interfaceinvoke $r6.<androidx.ui.text.Paragraph: float getLineTop(int)>($i2);

        $f1 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: float toGlobalYPosition(float)>($f0);

        return $f1;
    }

    public final float getLineBottom(int)
    {
        androidx.ui.text.MultiParagraph r0;
        int i0, i1, $i2;
        androidx.ui.text.ParagraphInfo r1;
        boolean z0, z1;
        java.util.List $r3, $r4;
        java.lang.Object $r5;
        androidx.ui.text.Paragraph $r6;
        float $f0, $f1;

        r0 := @this: androidx.ui.text.MultiParagraph;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.ui.text.MultiParagraph: void requireLineIndexInRange(int)>(i0);

        $r3 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        i1 = staticinvoke <androidx.ui.text.MultiParagraphKt: int findParagraphByLineIndex(java.util.List,int)>($r3, i0);

        $r4 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        r1 = (androidx.ui.text.ParagraphInfo) $r5;

        z0 = 0;

        z1 = 0;

        $r6 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: androidx.ui.text.Paragraph getParagraph()>();

        $i2 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: int toLocalLineIndex(int)>(i0);

        $f0 = interfaceinvoke $r6.<androidx.ui.text.Paragraph: float getLineBottom(int)>($i2);

        $f1 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: float toGlobalYPosition(float)>($f0);

        return $f1;
    }

    public final float getLineHeight(int)
    {
        androidx.ui.text.MultiParagraph r0;
        int i0, i1, $i2;
        androidx.ui.text.ParagraphInfo r1;
        boolean z0, z1;
        java.util.List $r3, $r4;
        java.lang.Object $r5;
        androidx.ui.text.Paragraph $r6;
        float $f0;

        r0 := @this: androidx.ui.text.MultiParagraph;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.ui.text.MultiParagraph: void requireLineIndexInRange(int)>(i0);

        $r3 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        i1 = staticinvoke <androidx.ui.text.MultiParagraphKt: int findParagraphByLineIndex(java.util.List,int)>($r3, i0);

        $r4 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        r1 = (androidx.ui.text.ParagraphInfo) $r5;

        z0 = 0;

        z1 = 0;

        $r6 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: androidx.ui.text.Paragraph getParagraph()>();

        $i2 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: int toLocalLineIndex(int)>(i0);

        $f0 = interfaceinvoke $r6.<androidx.ui.text.Paragraph: float getLineHeight(int)>($i2);

        return $f0;
    }

    public final float getLineWidth(int)
    {
        androidx.ui.text.MultiParagraph r0;
        int i0, i1, $i2;
        androidx.ui.text.ParagraphInfo r1;
        boolean z0, z1;
        java.util.List $r3, $r4;
        java.lang.Object $r5;
        androidx.ui.text.Paragraph $r6;
        float $f0;

        r0 := @this: androidx.ui.text.MultiParagraph;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.ui.text.MultiParagraph: void requireLineIndexInRange(int)>(i0);

        $r3 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        i1 = staticinvoke <androidx.ui.text.MultiParagraphKt: int findParagraphByLineIndex(java.util.List,int)>($r3, i0);

        $r4 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        r1 = (androidx.ui.text.ParagraphInfo) $r5;

        z0 = 0;

        z1 = 0;

        $r6 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: androidx.ui.text.Paragraph getParagraph()>();

        $i2 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: int toLocalLineIndex(int)>(i0);

        $f0 = interfaceinvoke $r6.<androidx.ui.text.Paragraph: float getLineWidth(int)>($i2);

        return $f0;
    }

    public final int getLineStart(int)
    {
        androidx.ui.text.MultiParagraph r0;
        int i0, i1, $i2, $i3, $i4;
        androidx.ui.text.ParagraphInfo r1;
        boolean z0, z1;
        java.util.List $r3, $r4;
        java.lang.Object $r5;
        androidx.ui.text.Paragraph $r6;

        r0 := @this: androidx.ui.text.MultiParagraph;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.ui.text.MultiParagraph: void requireIndexInRange(int)>(i0);

        $r3 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        i1 = staticinvoke <androidx.ui.text.MultiParagraphKt: int findParagraphByLineIndex(java.util.List,int)>($r3, i0);

        $r4 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        r1 = (androidx.ui.text.ParagraphInfo) $r5;

        z0 = 0;

        z1 = 0;

        $r6 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: androidx.ui.text.Paragraph getParagraph()>();

        $i2 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: int toLocalLineIndex(int)>(i0);

        $i3 = interfaceinvoke $r6.<androidx.ui.text.Paragraph: int getLineStart(int)>($i2);

        $i4 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: int toGlobalIndex(int)>($i3);

        return $i4;
    }

    public final int getLineEnd(int)
    {
        androidx.ui.text.MultiParagraph r0;
        int i0, i1, $i2, $i3, $i4;
        androidx.ui.text.ParagraphInfo r1;
        boolean z0, z1;
        java.util.List $r3, $r4;
        java.lang.Object $r5;
        androidx.ui.text.Paragraph $r6;

        r0 := @this: androidx.ui.text.MultiParagraph;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.ui.text.MultiParagraph: void requireIndexInRange(int)>(i0);

        $r3 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        i1 = staticinvoke <androidx.ui.text.MultiParagraphKt: int findParagraphByLineIndex(java.util.List,int)>($r3, i0);

        $r4 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        r1 = (androidx.ui.text.ParagraphInfo) $r5;

        z0 = 0;

        z1 = 0;

        $r6 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: androidx.ui.text.Paragraph getParagraph()>();

        $i2 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: int toLocalLineIndex(int)>(i0);

        $i3 = interfaceinvoke $r6.<androidx.ui.text.Paragraph: int getLineEnd(int)>($i2);

        $i4 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: int toGlobalIndex(int)>($i3);

        return $i4;
    }

    public final int getLineEllipsisOffset(int)
    {
        androidx.ui.text.MultiParagraph r0;
        int i0, i1, $i2, $i3;
        androidx.ui.text.ParagraphInfo r1;
        boolean z0, z1;
        java.util.List $r3, $r4;
        java.lang.Object $r5;
        androidx.ui.text.Paragraph $r6;

        r0 := @this: androidx.ui.text.MultiParagraph;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.ui.text.MultiParagraph: void requireIndexInRange(int)>(i0);

        $r3 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        i1 = staticinvoke <androidx.ui.text.MultiParagraphKt: int findParagraphByLineIndex(java.util.List,int)>($r3, i0);

        $r4 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        r1 = (androidx.ui.text.ParagraphInfo) $r5;

        z0 = 0;

        z1 = 0;

        $r6 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: androidx.ui.text.Paragraph getParagraph()>();

        $i2 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: int toLocalLineIndex(int)>(i0);

        $i3 = interfaceinvoke $r6.<androidx.ui.text.Paragraph: int getLineEllipsisOffset(int)>($i2);

        return $i3;
    }

    public final int getLineEllipsisCount(int)
    {
        androidx.ui.text.MultiParagraph r0;
        int i0, i1, $i2, $i3;
        androidx.ui.text.ParagraphInfo r1;
        boolean z0, z1;
        java.util.List $r3, $r4;
        java.lang.Object $r5;
        androidx.ui.text.Paragraph $r6;

        r0 := @this: androidx.ui.text.MultiParagraph;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.ui.text.MultiParagraph: void requireIndexInRange(int)>(i0);

        $r3 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        i1 = staticinvoke <androidx.ui.text.MultiParagraphKt: int findParagraphByLineIndex(java.util.List,int)>($r3, i0);

        $r4 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: java.util.List getParagraphInfoList$ui_text_core_release()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        r1 = (androidx.ui.text.ParagraphInfo) $r5;

        z0 = 0;

        z1 = 0;

        $r6 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: androidx.ui.text.Paragraph getParagraph()>();

        $i2 = virtualinvoke r1.<androidx.ui.text.ParagraphInfo: int toLocalLineIndex(int)>(i0);

        $i3 = interfaceinvoke $r6.<androidx.ui.text.Paragraph: int getLineEllipsisCount(int)>($i2);

        return $i3;
    }

    private final void requireIndexInRange(int)
    {
        androidx.ui.text.MultiParagraph r0;
        int i0, $i1;
        boolean z0, z1, z3;
        androidx.ui.text.AnnotatedString $r1, $r9;
        java.lang.String $r2, $r13, r15;
        java.lang.CharSequence $r3;
        kotlin.ranges.IntRange $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r10, $r11;
        java.lang.IllegalArgumentException $r12;
        java.lang.Throwable $r14;

        r0 := @this: androidx.ui.text.MultiParagraph;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<androidx.ui.text.MultiParagraph: androidx.ui.text.AnnotatedString getAnnotatedString()>();

        $r2 = virtualinvoke $r1.<androidx.ui.text.AnnotatedString: java.lang.String getText()>();

        $r3 = (java.lang.CharSequence) $r2;

        $r4 = staticinvoke <kotlin.text.StringsKt: kotlin.ranges.IntRange getIndices(java.lang.CharSequence)>($r3);

        z0 = virtualinvoke $r4.<kotlin.ranges.IntRange: boolean contains(int)>(i0);

        z1 = 0;

        z3 = 0;

        if z0 != 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("offset(");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is out of bounds [0, ");

        $r9 = specialinvoke r0.<androidx.ui.text.MultiParagraph: androidx.ui.text.AnnotatedString getAnnotatedString()>();

        $i1 = staticinvoke <androidx.ui.text.AnnotatedStringKt: int getLength(androidx.ui.text.AnnotatedString)>($r9);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = new java.lang.IllegalArgumentException;

        $r13 = virtualinvoke r15.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        $r14 = (java.lang.Throwable) $r12;

        throw $r14;

     label1:
        return;
    }

    private final void requireIndexInRangeInclusiveEnd(int)
    {
        androidx.ui.text.MultiParagraph r0;
        int i0, $i1, $i2;
        boolean z0, z1, z3;
        kotlin.ranges.IntRange $r1;
        androidx.ui.text.AnnotatedString $r2, $r8;
        java.lang.String $r3, $r12, r14;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r9, $r10;
        java.lang.IllegalArgumentException $r11;
        java.lang.Throwable $r13;

        r0 := @this: androidx.ui.text.MultiParagraph;

        i0 := @parameter0: int;

        $r1 = new kotlin.ranges.IntRange;

        $r2 = specialinvoke r0.<androidx.ui.text.MultiParagraph: androidx.ui.text.AnnotatedString getAnnotatedString()>();

        $r3 = virtualinvoke $r2.<androidx.ui.text.AnnotatedString: java.lang.String getText()>();

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(0, $i1);

        z0 = virtualinvoke $r1.<kotlin.ranges.IntRange: boolean contains(int)>(i0);

        z1 = 0;

        z3 = 0;

        if z0 != 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("offset(");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is out of bounds [0, ");

        $r8 = specialinvoke r0.<androidx.ui.text.MultiParagraph: androidx.ui.text.AnnotatedString getAnnotatedString()>();

        $i2 = staticinvoke <androidx.ui.text.AnnotatedStringKt: int getLength(androidx.ui.text.AnnotatedString)>($r8);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = virtualinvoke r14.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        $r13 = (java.lang.Throwable) $r11;

        throw $r13;

     label1:
        return;
    }

    private final void requireLineIndexInRange(int)
    {
        androidx.ui.text.MultiParagraph r0;
        int i0, $i1;
        boolean z0, z1, z3;
        kotlin.ranges.IntRange $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r7;
        java.lang.IllegalArgumentException $r8;
        java.lang.String $r9, r11;
        java.lang.Throwable $r10;

        r0 := @this: androidx.ui.text.MultiParagraph;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<androidx.ui.text.MultiParagraph: int getLineCount()>();

        $r1 = staticinvoke <kotlin.ranges.RangesKt: kotlin.ranges.IntRange until(int,int)>(0, $i1);

        z0 = virtualinvoke $r1.<kotlin.ranges.IntRange: boolean contains(int)>(i0);

        z1 = 0;

        z3 = 0;

        if z0 != 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lineIndex(");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is out of bounds [0, ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke r11.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        $r10 = (java.lang.Throwable) $r8;

        throw $r10;

     label1:
        return;
    }

