androidx.transition.ViewUtilsBase
<androidx.transition.ViewUtilsBase: java.lang.String TAG>
<androidx.transition.ViewUtilsBase: java.lang.reflect.Method sSetFrameMethod>
<androidx.transition.ViewUtilsBase: boolean sSetFrameFetched>
<androidx.transition.ViewUtilsBase: java.lang.reflect.Field sViewFlagsField>
<androidx.transition.ViewUtilsBase: boolean sViewFlagsFieldFetched>
<androidx.transition.ViewUtilsBase: int VISIBILITY_MASK>
<androidx.transition.ViewUtilsBase: float[] mMatrixValues>
    void <init>()
    {
        androidx.transition.ViewUtilsBase r0;

        r0 := @this: androidx.transition.ViewUtilsBase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void setTransitionAlpha(android.view.View, float)
    {
        androidx.transition.ViewUtilsBase r0;
        android.view.View r1;
        float f0, $f1, $f2;
        java.lang.Float r2;
        int $i0;
        java.lang.Object $r3;

        r0 := @this: androidx.transition.ViewUtilsBase;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        $i0 = <androidx.transition.R$id: int save_non_transition_alpha>;

        $r3 = virtualinvoke r1.<android.view.View: java.lang.Object getTag(int)>($i0);

        r2 = (java.lang.Float) $r3;

        if r2 == null goto label1;

        $f1 = virtualinvoke r2.<java.lang.Float: float floatValue()>();

        $f2 = $f1 * f0;

        virtualinvoke r1.<android.view.View: void setAlpha(float)>($f2);

        goto label2;

     label1:
        virtualinvoke r1.<android.view.View: void setAlpha(float)>(f0);

     label2:
        return;
    }

    public float getTransitionAlpha(android.view.View)
    {
        androidx.transition.ViewUtilsBase r0;
        android.view.View r1;
        java.lang.Float r2;
        int $i0;
        java.lang.Object $r3;
        float $f0, $f1, $f2, $f3;

        r0 := @this: androidx.transition.ViewUtilsBase;

        r1 := @parameter0: android.view.View;

        $i0 = <androidx.transition.R$id: int save_non_transition_alpha>;

        $r3 = virtualinvoke r1.<android.view.View: java.lang.Object getTag(int)>($i0);

        r2 = (java.lang.Float) $r3;

        if r2 == null goto label1;

        $f1 = virtualinvoke r1.<android.view.View: float getAlpha()>();

        $f2 = virtualinvoke r2.<java.lang.Float: float floatValue()>();

        $f3 = $f1 / $f2;

        return $f3;

     label1:
        $f0 = virtualinvoke r1.<android.view.View: float getAlpha()>();

        return $f0;
    }

    public void saveNonTransitionAlpha(android.view.View)
    {
        androidx.transition.ViewUtilsBase r0;
        android.view.View r1;
        int $i0, $i1;
        java.lang.Object $r2;
        float $f0;
        java.lang.Float $r3;

        r0 := @this: androidx.transition.ViewUtilsBase;

        r1 := @parameter0: android.view.View;

        $i0 = <androidx.transition.R$id: int save_non_transition_alpha>;

        $r2 = virtualinvoke r1.<android.view.View: java.lang.Object getTag(int)>($i0);

        if $r2 != null goto label1;

        $i1 = <androidx.transition.R$id: int save_non_transition_alpha>;

        $f0 = virtualinvoke r1.<android.view.View: float getAlpha()>();

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        virtualinvoke r1.<android.view.View: void setTag(int,java.lang.Object)>($i1, $r3);

     label1:
        return;
    }

    public void clearNonTransitionAlpha(android.view.View)
    {
        androidx.transition.ViewUtilsBase r0;
        android.view.View r1;
        int $i0, $i1;

        r0 := @this: androidx.transition.ViewUtilsBase;

        r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i0 != 0 goto label1;

        $i1 = <androidx.transition.R$id: int save_non_transition_alpha>;

        virtualinvoke r1.<android.view.View: void setTag(int,java.lang.Object)>($i1, null);

     label1:
        return;
    }

    public void transformMatrixToGlobal(android.view.View, android.graphics.Matrix)
    {
        androidx.transition.ViewUtilsBase r0;
        android.view.View r1, r4;
        android.graphics.Matrix r2, r5;
        android.view.ViewParent r3;
        boolean $z0, $z2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        float $f0, $f1, $f2, $f3;

        r0 := @this: androidx.transition.ViewUtilsBase;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.graphics.Matrix;

        r3 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        $z0 = r3 instanceof android.view.View;

        if $z0 == 0 goto label1;

        r4 = (android.view.View) r3;

        virtualinvoke r0.<androidx.transition.ViewUtilsBase: void transformMatrixToGlobal(android.view.View,android.graphics.Matrix)>(r4, r2);

        $i2 = virtualinvoke r4.<android.view.View: int getScrollX()>();

        $i3 = neg $i2;

        $f2 = (float) $i3;

        $i4 = virtualinvoke r4.<android.view.View: int getScrollY()>();

        $i5 = neg $i4;

        $f3 = (float) $i5;

        virtualinvoke r2.<android.graphics.Matrix: boolean preTranslate(float,float)>($f2, $f3);

     label1:
        $i0 = virtualinvoke r1.<android.view.View: int getLeft()>();

        $f0 = (float) $i0;

        $i1 = virtualinvoke r1.<android.view.View: int getTop()>();

        $f1 = (float) $i1;

        virtualinvoke r2.<android.graphics.Matrix: boolean preTranslate(float,float)>($f0, $f1);

        r5 = virtualinvoke r1.<android.view.View: android.graphics.Matrix getMatrix()>();

        $z2 = virtualinvoke r5.<android.graphics.Matrix: boolean isIdentity()>();

        if $z2 != 0 goto label2;

        virtualinvoke r2.<android.graphics.Matrix: boolean preConcat(android.graphics.Matrix)>(r5);

     label2:
        return;
    }

    public void transformMatrixToLocal(android.view.View, android.graphics.Matrix)
    {
        androidx.transition.ViewUtilsBase r0;
        android.view.View r1, r6;
        android.graphics.Matrix r2, r4, $r5, r7;
        android.view.ViewParent r3;
        boolean $z0, $z2, $z3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        float $f0, $f1, $f2, $f3;

        r0 := @this: androidx.transition.ViewUtilsBase;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.graphics.Matrix;

        r3 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        $z0 = r3 instanceof android.view.View;

        if $z0 == 0 goto label1;

        r6 = (android.view.View) r3;

        virtualinvoke r0.<androidx.transition.ViewUtilsBase: void transformMatrixToLocal(android.view.View,android.graphics.Matrix)>(r6, r2);

        $i4 = virtualinvoke r6.<android.view.View: int getScrollX()>();

        $f2 = (float) $i4;

        $i5 = virtualinvoke r6.<android.view.View: int getScrollY()>();

        $f3 = (float) $i5;

        virtualinvoke r2.<android.graphics.Matrix: boolean postTranslate(float,float)>($f2, $f3);

     label1:
        $i0 = virtualinvoke r1.<android.view.View: int getLeft()>();

        $i1 = neg $i0;

        $f0 = (float) $i1;

        $i2 = virtualinvoke r1.<android.view.View: int getTop()>();

        $i3 = neg $i2;

        $f1 = (float) $i3;

        virtualinvoke r2.<android.graphics.Matrix: boolean postTranslate(float,float)>($f0, $f1);

        r7 = virtualinvoke r1.<android.view.View: android.graphics.Matrix getMatrix()>();

        $z2 = virtualinvoke r7.<android.graphics.Matrix: boolean isIdentity()>();

        if $z2 != 0 goto label2;

        $r5 = new android.graphics.Matrix;

        specialinvoke $r5.<android.graphics.Matrix: void <init>()>();

        r4 = $r5;

        $z3 = virtualinvoke r7.<android.graphics.Matrix: boolean invert(android.graphics.Matrix)>(r4);

        if $z3 == 0 goto label2;

        virtualinvoke r2.<android.graphics.Matrix: boolean postConcat(android.graphics.Matrix)>(r4);

     label2:
        return;
    }

    public void setAnimationMatrix(android.view.View, android.graphics.Matrix)
    {
        androidx.transition.ViewUtilsBase r0;
        android.view.View r1;
        android.graphics.Matrix r2;
        float f0, f1, f2, f3, f4, f5, f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        byte $b4, $b5;
        float[] $r3, r4;

        r0 := @this: androidx.transition.ViewUtilsBase;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.graphics.Matrix;

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<android.graphics.Matrix: boolean isIdentity()>();

        if $z0 == 0 goto label2;

     label1:
        $i0 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $i1 = $i0 / 2;

        $f7 = (float) $i1;

        virtualinvoke r1.<android.view.View: void setPivotX(float)>($f7);

        $i2 = virtualinvoke r1.<android.view.View: int getHeight()>();

        $i3 = $i2 / 2;

        $f8 = (float) $i3;

        virtualinvoke r1.<android.view.View: void setPivotY(float)>($f8);

        virtualinvoke r1.<android.view.View: void setTranslationX(float)>(0.0F);

        virtualinvoke r1.<android.view.View: void setTranslationY(float)>(0.0F);

        virtualinvoke r1.<android.view.View: void setScaleX(float)>(1.0F);

        virtualinvoke r1.<android.view.View: void setScaleY(float)>(1.0F);

        virtualinvoke r1.<android.view.View: void setRotation(float)>(0.0F);

        goto label6;

     label2:
        r4 = r0.<androidx.transition.ViewUtilsBase: float[] mMatrixValues>;

        if r4 != null goto label3;

        $r3 = newarray (float)[9];

        r4 = $r3;

        r0.<androidx.transition.ViewUtilsBase: float[] mMatrixValues> = $r3;

     label3:
        virtualinvoke r2.<android.graphics.Matrix: void getValues(float[])>(r4);

        f0 = r4[3];

        $f9 = f0 * f0;

        $f10 = 1.0F - $f9;

        $d0 = (double) $f10;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f13 = (float) $d1;

        $f11 = r4[0];

        $b4 = $f11 cmpg 0.0F;

        if $b4 >= 0 goto label4;

        $b5 = -1;

        goto label5;

     label4:
        $b5 = 1;

     label5:
        $f12 = (float) $b5;

        f1 = $f13 * $f12;

        $d3 = (double) f0;

        $d2 = (double) f1;

        $d4 = staticinvoke <java.lang.Math: double atan2(double,double)>($d3, $d2);

        $d5 = staticinvoke <java.lang.Math: double toDegrees(double)>($d4);

        f2 = (float) $d5;

        $f14 = r4[0];

        f3 = $f14 / f1;

        $f15 = r4[4];

        f4 = $f15 / f1;

        f5 = r4[2];

        f6 = r4[5];

        virtualinvoke r1.<android.view.View: void setPivotX(float)>(0.0F);

        virtualinvoke r1.<android.view.View: void setPivotY(float)>(0.0F);

        virtualinvoke r1.<android.view.View: void setTranslationX(float)>(f5);

        virtualinvoke r1.<android.view.View: void setTranslationY(float)>(f6);

        virtualinvoke r1.<android.view.View: void setRotation(float)>(f2);

        virtualinvoke r1.<android.view.View: void setScaleX(float)>(f3);

        virtualinvoke r1.<android.view.View: void setScaleY(float)>(f4);

     label6:
        return;
    }

    public void setLeftTopRightBottom(android.view.View, int, int, int, int)
    {
        androidx.transition.ViewUtilsBase r0;
        android.view.View r1;
        int i0, i1, i2, i3;
        java.lang.reflect.Method $r2, $r4;
        java.lang.Object[] $r3;
        java.lang.Integer $r5, $r6, $r7, $r8;
        java.lang.Throwable $r10, $r11, $r13, r14, r15;
        java.lang.RuntimeException $r12;

        r0 := @this: androidx.transition.ViewUtilsBase;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<androidx.transition.ViewUtilsBase: void fetchSetFrame()>();

        $r2 = <androidx.transition.ViewUtilsBase: java.lang.reflect.Method sSetFrameMethod>;

        if $r2 == null goto label5;

     label1:
        $r4 = <androidx.transition.ViewUtilsBase: java.lang.reflect.Method sSetFrameMethod>;

        $r3 = newarray (java.lang.Object)[4];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3[0] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r3[1] = $r6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r3[2] = $r7;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r3[3] = $r8;

        virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r3);

     label2:
        goto label5;

     label3:
        $r10 := @caughtexception;

        r14 = $r10;

        goto label5;

     label4:
        $r11 := @caughtexception;

        r15 = $r11;

        $r12 = new java.lang.RuntimeException;

        $r13 = virtualinvoke r15.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r13);

        throw $r12;

     label5:
        return;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label4;
    }

    public void setTransitionVisibility(android.view.View, int)
    {
        androidx.transition.ViewUtilsBase r0;
        android.view.View r1;
        int i0, $i1, $i2, i4;
        boolean $z0;
        java.lang.reflect.Field $r2, $r3, $r5, $r6, $r10;
        java.lang.Class $r4;
        java.lang.Throwable $r7, $r8, r9, r11;

        r0 := @this: androidx.transition.ViewUtilsBase;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $z0 = <androidx.transition.ViewUtilsBase: boolean sViewFlagsFieldFetched>;

        if $z0 != 0 goto label5;

     label1:
        $r4 = class "Landroid/view/View;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mViewFlags");

        <androidx.transition.ViewUtilsBase: java.lang.reflect.Field sViewFlagsField> = $r5;

        $r6 = <androidx.transition.ViewUtilsBase: java.lang.reflect.Field sViewFlagsField>;

        virtualinvoke $r6.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r9 = $r8;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ViewUtilsBase", "fetchViewFlagsField: ");

     label4:
        <androidx.transition.ViewUtilsBase: boolean sViewFlagsFieldFetched> = 1;

     label5:
        $r10 = <androidx.transition.ViewUtilsBase: java.lang.reflect.Field sViewFlagsField>;

        if $r10 == null goto label9;

     label6:
        $r2 = <androidx.transition.ViewUtilsBase: java.lang.reflect.Field sViewFlagsField>;

        i4 = virtualinvoke $r2.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r1);

        $r3 = <androidx.transition.ViewUtilsBase: java.lang.reflect.Field sViewFlagsField>;

        $i1 = i4 & -13;

        $i2 = $i1 | i0;

        virtualinvoke $r3.<java.lang.reflect.Field: void setInt(java.lang.Object,int)>(r1, $i2);

     label7:
        goto label9;

     label8:
        $r7 := @caughtexception;

        r11 = $r7;

     label9:
        return;

        catch java.lang.NoSuchFieldException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label6 to label7 with label8;
    }

    private void fetchSetFrame()
    {
        androidx.transition.ViewUtilsBase r0;
        java.lang.Throwable r1, $r10;
        boolean $z0;
        java.lang.Class[] $r2;
        java.lang.Class $r3, $r4, $r5, $r6, $r7;
        java.lang.reflect.Method $r8, $r9;

        r0 := @this: androidx.transition.ViewUtilsBase;

        $z0 = <androidx.transition.ViewUtilsBase: boolean sSetFrameFetched>;

        if $z0 != 0 goto label5;

     label1:
        $r7 = class "Landroid/view/View;";

        $r2 = newarray (java.lang.Class)[4];

        $r3 = <java.lang.Integer: java.lang.Class TYPE>;

        $r2[0] = $r3;

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r2[1] = $r4;

        $r5 = <java.lang.Integer: java.lang.Class TYPE>;

        $r2[2] = $r5;

        $r6 = <java.lang.Integer: java.lang.Class TYPE>;

        $r2[3] = $r6;

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("setFrame", $r2);

        <androidx.transition.ViewUtilsBase: java.lang.reflect.Method sSetFrameMethod> = $r8;

        $r9 = <androidx.transition.ViewUtilsBase: java.lang.reflect.Method sSetFrameMethod>;

        virtualinvoke $r9.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        r1 = $r10;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewUtilsBase", "Failed to retrieve setFrame method", r1);

     label4:
        <androidx.transition.ViewUtilsBase: boolean sSetFrameFetched> = 1;

     label5:
        return;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
    }

