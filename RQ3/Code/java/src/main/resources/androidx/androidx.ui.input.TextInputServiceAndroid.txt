androidx.ui.input.TextInputServiceAndroid
<androidx.ui.input.TextInputServiceAndroid: android.view.View view>
<androidx.ui.input.TextInputServiceAndroid: boolean editorHasFocus>
<androidx.ui.input.TextInputServiceAndroid: kotlin.jvm.functions.Function1 onEditCommand>
<androidx.ui.input.TextInputServiceAndroid: kotlin.jvm.functions.Function1 onImeActionPerformed>
<androidx.ui.input.TextInputServiceAndroid: androidx.ui.input.EditorValue state>
<androidx.ui.input.TextInputServiceAndroid: androidx.ui.input.KeyboardType keyboardType>
<androidx.ui.input.TextInputServiceAndroid: androidx.ui.input.ImeAction imeAction>
<androidx.ui.input.TextInputServiceAndroid: androidx.ui.input.RecordingInputConnection ic>
<androidx.ui.input.TextInputServiceAndroid: android.view.inputmethod.InputMethodManager imm>
    public void <init>(android.view.View)
    {
        androidx.ui.input.TextInputServiceAndroid r0;
        android.view.View r1;
        androidx.ui.input.TextInputServiceAndroid$onEditCommand$1 $r2;
        kotlin.jvm.functions.Function1 $r3, $r5;
        androidx.ui.input.TextInputServiceAndroid$onImeActionPerformed$1 $r4;
        androidx.ui.input.EditorValue $r6;
        androidx.ui.text.TextRange $r7;
        androidx.ui.input.KeyboardType $r8;
        androidx.ui.input.ImeAction $r9;

        r0 := @this: androidx.ui.input.TextInputServiceAndroid;

        r1 := @parameter0: android.view.View;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "view");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.ui.input.TextInputServiceAndroid: android.view.View view> = r1;

        $r2 = new androidx.ui.input.TextInputServiceAndroid$onEditCommand$1;

        specialinvoke $r2.<androidx.ui.input.TextInputServiceAndroid$onEditCommand$1: void <init>()>();

        $r3 = (kotlin.jvm.functions.Function1) $r2;

        r0.<androidx.ui.input.TextInputServiceAndroid: kotlin.jvm.functions.Function1 onEditCommand> = $r3;

        $r4 = new androidx.ui.input.TextInputServiceAndroid$onImeActionPerformed$1;

        specialinvoke $r4.<androidx.ui.input.TextInputServiceAndroid$onImeActionPerformed$1: void <init>()>();

        $r5 = (kotlin.jvm.functions.Function1) $r4;

        r0.<androidx.ui.input.TextInputServiceAndroid: kotlin.jvm.functions.Function1 onImeActionPerformed> = $r5;

        $r6 = new androidx.ui.input.EditorValue;

        $r7 = new androidx.ui.text.TextRange;

        specialinvoke $r7.<androidx.ui.text.TextRange: void <init>(int,int)>(0, 0);

        specialinvoke $r6.<androidx.ui.input.EditorValue: void <init>(java.lang.String,androidx.ui.text.TextRange,androidx.ui.text.TextRange,int,kotlin.jvm.internal.DefaultConstructorMarker)>("", $r7, null, 4, null);

        r0.<androidx.ui.input.TextInputServiceAndroid: androidx.ui.input.EditorValue state> = $r6;

        $r8 = <androidx.ui.input.KeyboardType: androidx.ui.input.KeyboardType Text>;

        r0.<androidx.ui.input.TextInputServiceAndroid: androidx.ui.input.KeyboardType keyboardType> = $r8;

        $r9 = <androidx.ui.input.ImeAction: androidx.ui.input.ImeAction Unspecified>;

        r0.<androidx.ui.input.TextInputServiceAndroid: androidx.ui.input.ImeAction imeAction> = $r9;

        return;
    }

    public final android.view.View getView()
    {
        androidx.ui.input.TextInputServiceAndroid r0;
        android.view.View $r1;

        r0 := @this: androidx.ui.input.TextInputServiceAndroid;

        $r1 = r0.<androidx.ui.input.TextInputServiceAndroid: android.view.View view>;

        return $r1;
    }

    public final android.view.inputmethod.InputConnection createInputConnection(android.view.inputmethod.EditorInfo)
    {
        androidx.ui.input.TextInputServiceAndroid r0;
        android.view.inputmethod.EditorInfo r1;
        androidx.ui.input.RecordingInputConnection r2, r3, $r6;
        boolean z0, z1, $z3;
        androidx.ui.input.ImeAction $r4;
        androidx.ui.input.KeyboardType $r5;
        androidx.ui.input.TextInputServiceAndroid$createInputConnection$1 $r7;
        androidx.ui.input.EditorValue $r8;
        androidx.ui.input.InputEventListener $r9;
        android.view.inputmethod.InputConnection $r10, $r11;

        r0 := @this: androidx.ui.input.TextInputServiceAndroid;

        r1 := @parameter0: android.view.inputmethod.EditorInfo;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "outAttrs");

        $z3 = r0.<androidx.ui.input.TextInputServiceAndroid: boolean editorHasFocus>;

        if $z3 != 0 goto label1;

        $r11 = (android.view.inputmethod.InputConnection) null;

        return $r11;

     label1:
        $r5 = r0.<androidx.ui.input.TextInputServiceAndroid: androidx.ui.input.KeyboardType keyboardType>;

        $r4 = r0.<androidx.ui.input.TextInputServiceAndroid: androidx.ui.input.ImeAction imeAction>;

        specialinvoke r0.<androidx.ui.input.TextInputServiceAndroid: void fillEditorInfo(androidx.ui.input.KeyboardType,androidx.ui.input.ImeAction,android.view.inputmethod.EditorInfo)>($r5, $r4, r1);

        $r6 = new androidx.ui.input.RecordingInputConnection;

        $r8 = r0.<androidx.ui.input.TextInputServiceAndroid: androidx.ui.input.EditorValue state>;

        $r7 = new androidx.ui.input.TextInputServiceAndroid$createInputConnection$1;

        specialinvoke $r7.<androidx.ui.input.TextInputServiceAndroid$createInputConnection$1: void <init>(androidx.ui.input.TextInputServiceAndroid)>(r0);

        $r9 = (androidx.ui.input.InputEventListener) $r7;

        specialinvoke $r6.<androidx.ui.input.RecordingInputConnection: void <init>(androidx.ui.input.EditorValue,androidx.ui.input.InputEventListener)>($r8, $r9);

        r2 = $r6;

        z0 = 0;

        z1 = 0;

        r3 = r2;

        r0.<androidx.ui.input.TextInputServiceAndroid: androidx.ui.input.RecordingInputConnection ic> = r3;

        $r10 = (android.view.inputmethod.InputConnection) r2;

        return $r10;
    }

    public final boolean isEditorFocused()
    {
        androidx.ui.input.TextInputServiceAndroid r0;
        boolean $z0;

        r0 := @this: androidx.ui.input.TextInputServiceAndroid;

        $z0 = r0.<androidx.ui.input.TextInputServiceAndroid: boolean editorHasFocus>;

        return $z0;
    }

    public void startInput(androidx.ui.input.EditorValue, androidx.ui.input.KeyboardType, androidx.ui.input.ImeAction, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        androidx.ui.input.TextInputServiceAndroid r0;
        androidx.ui.input.EditorValue r1;
        androidx.ui.input.KeyboardType r2;
        androidx.ui.input.ImeAction r3;
        kotlin.jvm.functions.Function1 r4, r5;
        java.lang.Object r6;
        android.view.View $r7, $r10, $r11;
        android.content.Context $r8;
        android.view.inputmethod.InputMethodManager $r9;
        androidx.ui.input.TextInputServiceAndroid$startInput$1 $r12;
        java.lang.Runnable $r13;
        java.lang.NullPointerException $r14;

        r0 := @this: androidx.ui.input.TextInputServiceAndroid;

        r1 := @parameter0: androidx.ui.input.EditorValue;

        r2 := @parameter1: androidx.ui.input.KeyboardType;

        r3 := @parameter2: androidx.ui.input.ImeAction;

        r4 := @parameter3: kotlin.jvm.functions.Function1;

        r5 := @parameter4: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "initModel");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "keyboardType");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "imeAction");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "onEditCommand");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "onImeActionPerformed");

        $r7 = virtualinvoke r0.<androidx.ui.input.TextInputServiceAndroid: android.view.View getView()>();

        $r8 = virtualinvoke $r7.<android.view.View: android.content.Context getContext()>();

        r6 = virtualinvoke $r8.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("input_method");

        if r6 != null goto label1;

        $r14 = new java.lang.NullPointerException;

        specialinvoke $r14.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type android.view.inputmethod.InputMethodManager");

        throw $r14;

     label1:
        $r9 = (android.view.inputmethod.InputMethodManager) r6;

        r0.<androidx.ui.input.TextInputServiceAndroid: android.view.inputmethod.InputMethodManager imm> = $r9;

        r0.<androidx.ui.input.TextInputServiceAndroid: boolean editorHasFocus> = 1;

        r0.<androidx.ui.input.TextInputServiceAndroid: androidx.ui.input.EditorValue state> = r1;

        r0.<androidx.ui.input.TextInputServiceAndroid: androidx.ui.input.KeyboardType keyboardType> = r2;

        r0.<androidx.ui.input.TextInputServiceAndroid: androidx.ui.input.ImeAction imeAction> = r3;

        r0.<androidx.ui.input.TextInputServiceAndroid: kotlin.jvm.functions.Function1 onEditCommand> = r4;

        r0.<androidx.ui.input.TextInputServiceAndroid: kotlin.jvm.functions.Function1 onImeActionPerformed> = r5;

        $r10 = virtualinvoke r0.<androidx.ui.input.TextInputServiceAndroid: android.view.View getView()>();

        virtualinvoke $r10.<android.view.View: boolean requestFocus()>();

        $r11 = virtualinvoke r0.<androidx.ui.input.TextInputServiceAndroid: android.view.View getView()>();

        $r12 = new androidx.ui.input.TextInputServiceAndroid$startInput$1;

        specialinvoke $r12.<androidx.ui.input.TextInputServiceAndroid$startInput$1: void <init>(androidx.ui.input.TextInputServiceAndroid)>(r0);

        $r13 = (java.lang.Runnable) $r12;

        virtualinvoke $r11.<android.view.View: boolean post(java.lang.Runnable)>($r13);

        return;
    }

    public void stopInput()
    {
        androidx.ui.input.TextInputServiceAndroid r0;
        kotlin.jvm.internal.Ref$ObjectRef r1, $r6;
        androidx.ui.input.TextInputServiceAndroid$stopInput$1 $r2;
        kotlin.jvm.functions.Function1 $r3, $r5;
        androidx.ui.input.TextInputServiceAndroid$stopInput$2 $r4;
        android.view.inputmethod.InputMethodManager $r7, $r9, $r11;
        java.lang.Object $r8, $r10;
        android.view.View $r12;

        r0 := @this: androidx.ui.input.TextInputServiceAndroid;

        r0.<androidx.ui.input.TextInputServiceAndroid: boolean editorHasFocus> = 0;

        $r2 = new androidx.ui.input.TextInputServiceAndroid$stopInput$1;

        specialinvoke $r2.<androidx.ui.input.TextInputServiceAndroid$stopInput$1: void <init>()>();

        $r3 = (kotlin.jvm.functions.Function1) $r2;

        r0.<androidx.ui.input.TextInputServiceAndroid: kotlin.jvm.functions.Function1 onEditCommand> = $r3;

        $r4 = new androidx.ui.input.TextInputServiceAndroid$stopInput$2;

        specialinvoke $r4.<androidx.ui.input.TextInputServiceAndroid$stopInput$2: void <init>()>();

        $r5 = (kotlin.jvm.functions.Function1) $r4;

        r0.<androidx.ui.input.TextInputServiceAndroid: kotlin.jvm.functions.Function1 onImeActionPerformed> = $r5;

        $r6 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r6.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r1 = $r6;

        $r7 = r0.<androidx.ui.input.TextInputServiceAndroid: android.view.inputmethod.InputMethodManager imm>;

        r1.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r7;

        $r8 = r1.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r9 = (android.view.inputmethod.InputMethodManager) $r8;

        if $r9 != null goto label1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("imm");

        throw null;

     label1:
        $r10 = r1.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r11 = (android.view.inputmethod.InputMethodManager) $r10;

        $r12 = virtualinvoke r0.<androidx.ui.input.TextInputServiceAndroid: android.view.View getView()>();

        virtualinvoke $r11.<android.view.inputmethod.InputMethodManager: void restartInput(android.view.View)>($r12);

        r0.<androidx.ui.input.TextInputServiceAndroid: boolean editorHasFocus> = 0;

        return;
    }

    public void showSoftwareKeyboard()
    {
        androidx.ui.input.TextInputServiceAndroid r0;
        kotlin.jvm.internal.Ref$ObjectRef r1, $r2;
        android.view.inputmethod.InputMethodManager $r3, $r5, $r7;
        java.lang.Object $r4, $r6;
        android.view.View $r8;

        r0 := @this: androidx.ui.input.TextInputServiceAndroid;

        $r2 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r2.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r1 = $r2;

        $r3 = r0.<androidx.ui.input.TextInputServiceAndroid: android.view.inputmethod.InputMethodManager imm>;

        r1.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r3;

        $r4 = r1.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r5 = (android.view.inputmethod.InputMethodManager) $r4;

        if $r5 != null goto label1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("imm");

        throw null;

     label1:
        $r6 = r1.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r7 = (android.view.inputmethod.InputMethodManager) $r6;

        $r8 = virtualinvoke r0.<androidx.ui.input.TextInputServiceAndroid: android.view.View getView()>();

        virtualinvoke $r7.<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int)>($r8, 0);

        return;
    }

    public void hideSoftwareKeyboard()
    {
        androidx.ui.input.TextInputServiceAndroid r0;
        kotlin.jvm.internal.Ref$ObjectRef r1, $r2;
        android.view.inputmethod.InputMethodManager $r3, $r5, $r7;
        java.lang.Object $r4, $r6;
        android.view.View $r8;
        android.os.IBinder $r9;

        r0 := @this: androidx.ui.input.TextInputServiceAndroid;

        $r2 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r2.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r1 = $r2;

        $r3 = r0.<androidx.ui.input.TextInputServiceAndroid: android.view.inputmethod.InputMethodManager imm>;

        r1.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r3;

        $r4 = r1.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r5 = (android.view.inputmethod.InputMethodManager) $r4;

        if $r5 != null goto label1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("imm");

        throw null;

     label1:
        $r6 = r1.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r7 = (android.view.inputmethod.InputMethodManager) $r6;

        $r8 = virtualinvoke r0.<androidx.ui.input.TextInputServiceAndroid: android.view.View getView()>();

        $r9 = virtualinvoke $r8.<android.view.View: android.os.IBinder getWindowToken()>();

        virtualinvoke $r7.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r9, 0);

        return;
    }

    public void onStateUpdated(androidx.ui.input.EditorValue)
    {
        androidx.ui.input.TextInputServiceAndroid r0;
        androidx.ui.input.EditorValue r1, $r5;
        androidx.ui.input.RecordingInputConnection r2;
        kotlin.jvm.internal.Ref$ObjectRef r3, $r4;
        android.view.inputmethod.InputMethodManager $r6, $r8, $r10;
        java.lang.Object $r7, $r9;
        android.view.View $r11;

        r0 := @this: androidx.ui.input.TextInputServiceAndroid;

        r1 := @parameter0: androidx.ui.input.EditorValue;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "model");

        r0.<androidx.ui.input.TextInputServiceAndroid: androidx.ui.input.EditorValue state> = r1;

        r2 = r0.<androidx.ui.input.TextInputServiceAndroid: androidx.ui.input.RecordingInputConnection ic>;

        if r2 != null goto label1;

        goto label3;

     label1:
        $r5 = r0.<androidx.ui.input.TextInputServiceAndroid: androidx.ui.input.EditorValue state>;

        $r4 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r4.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r3 = $r4;

        $r6 = r0.<androidx.ui.input.TextInputServiceAndroid: android.view.inputmethod.InputMethodManager imm>;

        r3.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r6;

        $r7 = r3.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r8 = (android.view.inputmethod.InputMethodManager) $r7;

        if $r8 != null goto label2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("imm");

        throw null;

     label2:
        $r9 = r3.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r10 = (android.view.inputmethod.InputMethodManager) $r9;

        $r11 = virtualinvoke r0.<androidx.ui.input.TextInputServiceAndroid: android.view.View getView()>();

        virtualinvoke r2.<androidx.ui.input.RecordingInputConnection: void updateInputState(androidx.ui.input.EditorValue,android.view.inputmethod.InputMethodManager,android.view.View)>($r5, $r10, $r11);

     label3:
        return;
    }

    public void notifyFocusedRect(androidx.ui.geometry.Rect)
    {
        androidx.ui.input.TextInputServiceAndroid r0;
        androidx.ui.geometry.Rect r1;
        android.view.View $r2;
        android.graphics.Rect $r3;
        float $f0, $f1, $f2, $f3;
        int $i0, $i1, $i2, $i3;

        r0 := @this: androidx.ui.input.TextInputServiceAndroid;

        r1 := @parameter0: androidx.ui.geometry.Rect;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "rect");

        $r2 = virtualinvoke r0.<androidx.ui.input.TextInputServiceAndroid: android.view.View getView()>();

        $r3 = new android.graphics.Rect;

        $f0 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getLeft()>();

        $i0 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f0);

        $f1 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getTop()>();

        $i1 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f1);

        $f2 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getRight()>();

        $i2 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f2);

        $f3 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getBottom()>();

        $i3 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f3);

        specialinvoke $r3.<android.graphics.Rect: void <init>(int,int,int,int)>($i0, $i1, $i2, $i3);

        virtualinvoke $r2.<android.view.View: boolean requestRectangleOnScreen(android.graphics.Rect)>($r3);

        return;
    }

    private final void fillEditorInfo(androidx.ui.input.KeyboardType, androidx.ui.input.ImeAction, android.view.inputmethod.EditorInfo)
    {
        androidx.ui.input.TextInputServiceAndroid r0;
        androidx.ui.input.KeyboardType r1, r11;
        androidx.ui.input.ImeAction r2, r10;
        android.view.inputmethod.EditorInfo r3;
        int[] $r4, $r12;
        int $i0, $i1, $i2, i3, $i5, i6, $i7, $i8, $i9, $i10;
        java.lang.IllegalArgumentException $r5, $r7;
        java.lang.String $r6, $r8;
        byte $b4;

        r0 := @this: androidx.ui.input.TextInputServiceAndroid;

        r1 := @parameter0: androidx.ui.input.KeyboardType;

        r2 := @parameter1: androidx.ui.input.ImeAction;

        r3 := @parameter2: android.view.inputmethod.EditorInfo;

        r10 = r2;

        $r4 = <androidx.ui.input.TextInputServiceAndroid$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke r10.<androidx.ui.input.ImeAction: int ordinal()>();

        i3 = $r4[$i0];

        tableswitch(i3)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label05;
            case 6: goto label06;
            case 7: goto label07;
            case 8: goto label08;
            default: goto label09;
        };

     label01:
        $b4 = 0;

        goto label10;

     label02:
        $b4 = 1;

        goto label10;

     label03:
        $b4 = 2;

        goto label10;

     label04:
        $b4 = 5;

        goto label10;

     label05:
        $b4 = 7;

        goto label10;

     label06:
        $b4 = 3;

        goto label10;

     label07:
        $b4 = 4;

        goto label10;

     label08:
        $b4 = 6;

        goto label10;

     label09:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Unknown ImeAction: ", r2);

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label10:
        r3.<android.view.inputmethod.EditorInfo: int imeOptions> = $b4;

        r11 = r1;

        $r12 = <androidx.ui.input.TextInputServiceAndroid$WhenMappings: int[] $EnumSwitchMapping$1>;

        $i5 = virtualinvoke r11.<androidx.ui.input.KeyboardType: int ordinal()>();

        i6 = $r12[$i5];

        tableswitch(i6)
        {
            case 1: goto label11;
            case 2: goto label12;
            case 3: goto label13;
            case 4: goto label14;
            case 5: goto label15;
            case 6: goto label16;
            case 7: goto label17;
            case 8: goto label18;
            default: goto label19;
        };

     label11:
        r3.<android.view.inputmethod.EditorInfo: int inputType> = 1;

        goto label20;

     label12:
        r3.<android.view.inputmethod.EditorInfo: int inputType> = 1;

        $i1 = r3.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i2 = $i1 | -2147483648;

        r3.<android.view.inputmethod.EditorInfo: int imeOptions> = $i2;

        goto label20;

     label13:
        r3.<android.view.inputmethod.EditorInfo: int inputType> = 2;

        goto label20;

     label14:
        r3.<android.view.inputmethod.EditorInfo: int inputType> = 3;

        goto label20;

     label15:
        r3.<android.view.inputmethod.EditorInfo: int inputType> = 17;

        goto label20;

     label16:
        r3.<android.view.inputmethod.EditorInfo: int inputType> = 33;

        goto label20;

     label17:
        r3.<android.view.inputmethod.EditorInfo: int inputType> = 129;

        goto label20;

     label18:
        r3.<android.view.inputmethod.EditorInfo: int inputType> = 18;

        goto label20;

     label19:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Unknown KeyboardType: ", r1);

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label20:
        $i7 = r3.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i8 = r3.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i9 = $i7 | $i8;

        $i10 = $i9 | 33554432;

        r3.<android.view.inputmethod.EditorInfo: int imeOptions> = $i10;

        return;
    }

    public static final kotlin.jvm.functions.Function1 access$getOnEditCommand$p(androidx.ui.input.TextInputServiceAndroid)
    {
        androidx.ui.input.TextInputServiceAndroid r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @parameter0: androidx.ui.input.TextInputServiceAndroid;

        $r1 = r0.<androidx.ui.input.TextInputServiceAndroid: kotlin.jvm.functions.Function1 onEditCommand>;

        return $r1;
    }

    public static final kotlin.jvm.functions.Function1 access$getOnImeActionPerformed$p(androidx.ui.input.TextInputServiceAndroid)
    {
        androidx.ui.input.TextInputServiceAndroid r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @parameter0: androidx.ui.input.TextInputServiceAndroid;

        $r1 = r0.<androidx.ui.input.TextInputServiceAndroid: kotlin.jvm.functions.Function1 onImeActionPerformed>;

        return $r1;
    }

    public static final android.view.inputmethod.InputMethodManager access$getImm$p(androidx.ui.input.TextInputServiceAndroid)
    {
        androidx.ui.input.TextInputServiceAndroid r0;
        android.view.inputmethod.InputMethodManager $r1;

        r0 := @parameter0: androidx.ui.input.TextInputServiceAndroid;

        $r1 = r0.<androidx.ui.input.TextInputServiceAndroid: android.view.inputmethod.InputMethodManager imm>;

        return $r1;
    }

androidx.ui.input.TextInputServiceAndroid$createInputConnection$1
<androidx.ui.input.TextInputServiceAndroid$createInputConnection$1: androidx.ui.input.TextInputServiceAndroid $this>
    void <init>(androidx.ui.input.TextInputServiceAndroid)
    {
        androidx.ui.input.TextInputServiceAndroid$createInputConnection$1 r0;
        androidx.ui.input.TextInputServiceAndroid $r1;

        r0 := @this: androidx.ui.input.TextInputServiceAndroid$createInputConnection$1;

        $r1 := @parameter0: androidx.ui.input.TextInputServiceAndroid;

        r0.<androidx.ui.input.TextInputServiceAndroid$createInputConnection$1: androidx.ui.input.TextInputServiceAndroid $this> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onEditOperations(java.util.List)
    {
        androidx.ui.input.TextInputServiceAndroid$createInputConnection$1 r0;
        java.util.List r1;
        androidx.ui.input.TextInputServiceAndroid $r2;
        kotlin.jvm.functions.Function1 $r3;

        r0 := @this: androidx.ui.input.TextInputServiceAndroid$createInputConnection$1;

        r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "editOps");

        $r2 = r0.<androidx.ui.input.TextInputServiceAndroid$createInputConnection$1: androidx.ui.input.TextInputServiceAndroid $this>;

        $r3 = staticinvoke <androidx.ui.input.TextInputServiceAndroid: kotlin.jvm.functions.Function1 access$getOnEditCommand$p(androidx.ui.input.TextInputServiceAndroid)>($r2);

        interfaceinvoke $r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        return;
    }

    public void onImeAction(androidx.ui.input.ImeAction)
    {
        androidx.ui.input.TextInputServiceAndroid$createInputConnection$1 r0;
        androidx.ui.input.ImeAction r1;
        androidx.ui.input.TextInputServiceAndroid $r2;
        kotlin.jvm.functions.Function1 $r3;

        r0 := @this: androidx.ui.input.TextInputServiceAndroid$createInputConnection$1;

        r1 := @parameter0: androidx.ui.input.ImeAction;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "imeAction");

        $r2 = r0.<androidx.ui.input.TextInputServiceAndroid$createInputConnection$1: androidx.ui.input.TextInputServiceAndroid $this>;

        $r3 = staticinvoke <androidx.ui.input.TextInputServiceAndroid: kotlin.jvm.functions.Function1 access$getOnImeActionPerformed$p(androidx.ui.input.TextInputServiceAndroid)>($r2);

        interfaceinvoke $r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        return;
    }

androidx.ui.input.TextInputServiceAndroid$onEditCommand$1
    void <init>()
    {
        androidx.ui.input.TextInputServiceAndroid$onEditCommand$1 r0;

        r0 := @this: androidx.ui.input.TextInputServiceAndroid$onEditCommand$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(java.util.List)
    {
        androidx.ui.input.TextInputServiceAndroid$onEditCommand$1 r0;
        java.util.List r1;

        r0 := @this: androidx.ui.input.TextInputServiceAndroid$onEditCommand$1;

        r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.ui.input.TextInputServiceAndroid$onEditCommand$1 r0;
        java.lang.Object r1;
        java.util.List $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.ui.input.TextInputServiceAndroid$onEditCommand$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.List) r1;

        virtualinvoke r0.<androidx.ui.input.TextInputServiceAndroid$onEditCommand$1: void invoke(java.util.List)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.ui.input.TextInputServiceAndroid$onImeActionPerformed$1
    void <init>()
    {
        androidx.ui.input.TextInputServiceAndroid$onImeActionPerformed$1 r0;

        r0 := @this: androidx.ui.input.TextInputServiceAndroid$onImeActionPerformed$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.ui.input.ImeAction)
    {
        androidx.ui.input.TextInputServiceAndroid$onImeActionPerformed$1 r0;
        androidx.ui.input.ImeAction r1;

        r0 := @this: androidx.ui.input.TextInputServiceAndroid$onImeActionPerformed$1;

        r1 := @parameter0: androidx.ui.input.ImeAction;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.ui.input.TextInputServiceAndroid$onImeActionPerformed$1 r0;
        java.lang.Object r1;
        androidx.ui.input.ImeAction $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.ui.input.TextInputServiceAndroid$onImeActionPerformed$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.ui.input.ImeAction) r1;

        virtualinvoke r0.<androidx.ui.input.TextInputServiceAndroid$onImeActionPerformed$1: void invoke(androidx.ui.input.ImeAction)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.ui.input.TextInputServiceAndroid$startInput$1
<androidx.ui.input.TextInputServiceAndroid$startInput$1: androidx.ui.input.TextInputServiceAndroid $this>
    void <init>(androidx.ui.input.TextInputServiceAndroid)
    {
        androidx.ui.input.TextInputServiceAndroid$startInput$1 r0;
        androidx.ui.input.TextInputServiceAndroid $r1;

        r0 := @this: androidx.ui.input.TextInputServiceAndroid$startInput$1;

        $r1 := @parameter0: androidx.ui.input.TextInputServiceAndroid;

        r0.<androidx.ui.input.TextInputServiceAndroid$startInput$1: androidx.ui.input.TextInputServiceAndroid $this> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final void run()
    {
        androidx.ui.input.TextInputServiceAndroid$startInput$1 r0;
        kotlin.jvm.internal.Ref$ObjectRef $r1, $r2, $r5, $r8, $r12, $r17, $r18, $r21, $r24, $r28, r33, r34;
        java.lang.Object $r3, $r7, $r9, $r11, $r13, $r19, $r23, $r25, $r27, $r29;
        androidx.ui.input.TextInputServiceAndroid $r4, $r14, $r20, $r30;
        android.view.inputmethod.InputMethodManager $r6, $r10, $r15, $r22, $r26, $r31;
        android.view.View $r16, $r32;

        r0 := @this: androidx.ui.input.TextInputServiceAndroid$startInput$1;

        $r1 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r1.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r33 = $r1;

        $r2 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r2.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r33.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r2;

        $r3 = r33.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r5 = (kotlin.jvm.internal.Ref$ObjectRef) $r3;

        $r4 = r0.<androidx.ui.input.TextInputServiceAndroid$startInput$1: androidx.ui.input.TextInputServiceAndroid $this>;

        $r6 = staticinvoke <androidx.ui.input.TextInputServiceAndroid: android.view.inputmethod.InputMethodManager access$getImm$p(androidx.ui.input.TextInputServiceAndroid)>($r4);

        $r5.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r6;

        $r7 = r33.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r8 = (kotlin.jvm.internal.Ref$ObjectRef) $r7;

        $r9 = $r8.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r10 = (android.view.inputmethod.InputMethodManager) $r9;

        if $r10 != null goto label1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("imm");

        throw null;

     label1:
        $r11 = r33.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r12 = (kotlin.jvm.internal.Ref$ObjectRef) $r11;

        $r13 = $r12.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r15 = (android.view.inputmethod.InputMethodManager) $r13;

        $r14 = r0.<androidx.ui.input.TextInputServiceAndroid$startInput$1: androidx.ui.input.TextInputServiceAndroid $this>;

        $r16 = virtualinvoke $r14.<androidx.ui.input.TextInputServiceAndroid: android.view.View getView()>();

        virtualinvoke $r15.<android.view.inputmethod.InputMethodManager: void restartInput(android.view.View)>($r16);

        $r17 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r17.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r34 = $r17;

        $r18 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r18.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r34.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r18;

        $r19 = r34.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r21 = (kotlin.jvm.internal.Ref$ObjectRef) $r19;

        $r20 = r0.<androidx.ui.input.TextInputServiceAndroid$startInput$1: androidx.ui.input.TextInputServiceAndroid $this>;

        $r22 = staticinvoke <androidx.ui.input.TextInputServiceAndroid: android.view.inputmethod.InputMethodManager access$getImm$p(androidx.ui.input.TextInputServiceAndroid)>($r20);

        $r21.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r22;

        $r23 = r34.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r24 = (kotlin.jvm.internal.Ref$ObjectRef) $r23;

        $r25 = $r24.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r26 = (android.view.inputmethod.InputMethodManager) $r25;

        if $r26 != null goto label2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("imm");

        throw null;

     label2:
        $r27 = r34.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r28 = (kotlin.jvm.internal.Ref$ObjectRef) $r27;

        $r29 = $r28.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r31 = (android.view.inputmethod.InputMethodManager) $r29;

        $r30 = r0.<androidx.ui.input.TextInputServiceAndroid$startInput$1: androidx.ui.input.TextInputServiceAndroid $this>;

        $r32 = virtualinvoke $r30.<androidx.ui.input.TextInputServiceAndroid: android.view.View getView()>();

        virtualinvoke $r31.<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int)>($r32, 0);

        return;
    }

androidx.ui.input.TextInputServiceAndroid$stopInput$1
    void <init>()
    {
        androidx.ui.input.TextInputServiceAndroid$stopInput$1 r0;

        r0 := @this: androidx.ui.input.TextInputServiceAndroid$stopInput$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(java.util.List)
    {
        androidx.ui.input.TextInputServiceAndroid$stopInput$1 r0;
        java.util.List r1;

        r0 := @this: androidx.ui.input.TextInputServiceAndroid$stopInput$1;

        r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.ui.input.TextInputServiceAndroid$stopInput$1 r0;
        java.lang.Object r1;
        java.util.List $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.ui.input.TextInputServiceAndroid$stopInput$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.List) r1;

        virtualinvoke r0.<androidx.ui.input.TextInputServiceAndroid$stopInput$1: void invoke(java.util.List)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.ui.input.TextInputServiceAndroid$stopInput$2
    void <init>()
    {
        androidx.ui.input.TextInputServiceAndroid$stopInput$2 r0;

        r0 := @this: androidx.ui.input.TextInputServiceAndroid$stopInput$2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.ui.input.ImeAction)
    {
        androidx.ui.input.TextInputServiceAndroid$stopInput$2 r0;
        androidx.ui.input.ImeAction r1;

        r0 := @this: androidx.ui.input.TextInputServiceAndroid$stopInput$2;

        r1 := @parameter0: androidx.ui.input.ImeAction;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.ui.input.TextInputServiceAndroid$stopInput$2 r0;
        java.lang.Object r1;
        androidx.ui.input.ImeAction $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.ui.input.TextInputServiceAndroid$stopInput$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.ui.input.ImeAction) r1;

        virtualinvoke r0.<androidx.ui.input.TextInputServiceAndroid$stopInput$2: void invoke(androidx.ui.input.ImeAction)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.ui.input.TextInputServiceAndroid$WhenMappings
<androidx.ui.input.TextInputServiceAndroid$WhenMappings: int[] $EnumSwitchMapping$0>
<androidx.ui.input.TextInputServiceAndroid$WhenMappings: int[] $EnumSwitchMapping$1>
    public static final void <clinit>()
    {
        androidx.ui.input.ImeAction[] $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        androidx.ui.input.ImeAction $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        androidx.ui.input.KeyboardType[] $r9;
        androidx.ui.input.KeyboardType $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        int[] r18, r19;

        $r0 = staticinvoke <androidx.ui.input.ImeAction: androidx.ui.input.ImeAction[] values()>();

        $i0 = lengthof $r0;

        r18 = newarray (int)[$i0];

        $r1 = <androidx.ui.input.ImeAction: androidx.ui.input.ImeAction Unspecified>;

        $i1 = virtualinvoke $r1.<androidx.ui.input.ImeAction: int ordinal()>();

        r18[$i1] = 1;

        $r2 = <androidx.ui.input.ImeAction: androidx.ui.input.ImeAction NoAction>;

        $i2 = virtualinvoke $r2.<androidx.ui.input.ImeAction: int ordinal()>();

        r18[$i2] = 2;

        $r3 = <androidx.ui.input.ImeAction: androidx.ui.input.ImeAction Go>;

        $i3 = virtualinvoke $r3.<androidx.ui.input.ImeAction: int ordinal()>();

        r18[$i3] = 3;

        $r4 = <androidx.ui.input.ImeAction: androidx.ui.input.ImeAction Next>;

        $i4 = virtualinvoke $r4.<androidx.ui.input.ImeAction: int ordinal()>();

        r18[$i4] = 4;

        $r5 = <androidx.ui.input.ImeAction: androidx.ui.input.ImeAction Previous>;

        $i5 = virtualinvoke $r5.<androidx.ui.input.ImeAction: int ordinal()>();

        r18[$i5] = 5;

        $r6 = <androidx.ui.input.ImeAction: androidx.ui.input.ImeAction Search>;

        $i6 = virtualinvoke $r6.<androidx.ui.input.ImeAction: int ordinal()>();

        r18[$i6] = 6;

        $r7 = <androidx.ui.input.ImeAction: androidx.ui.input.ImeAction Send>;

        $i7 = virtualinvoke $r7.<androidx.ui.input.ImeAction: int ordinal()>();

        r18[$i7] = 7;

        $r8 = <androidx.ui.input.ImeAction: androidx.ui.input.ImeAction Done>;

        $i8 = virtualinvoke $r8.<androidx.ui.input.ImeAction: int ordinal()>();

        r18[$i8] = 8;

        <androidx.ui.input.TextInputServiceAndroid$WhenMappings: int[] $EnumSwitchMapping$0> = r18;

        $r9 = staticinvoke <androidx.ui.input.KeyboardType: androidx.ui.input.KeyboardType[] values()>();

        $i9 = lengthof $r9;

        r19 = newarray (int)[$i9];

        $r10 = <androidx.ui.input.KeyboardType: androidx.ui.input.KeyboardType Text>;

        $i10 = virtualinvoke $r10.<androidx.ui.input.KeyboardType: int ordinal()>();

        r19[$i10] = 1;

        $r11 = <androidx.ui.input.KeyboardType: androidx.ui.input.KeyboardType Ascii>;

        $i11 = virtualinvoke $r11.<androidx.ui.input.KeyboardType: int ordinal()>();

        r19[$i11] = 2;

        $r12 = <androidx.ui.input.KeyboardType: androidx.ui.input.KeyboardType Number>;

        $i12 = virtualinvoke $r12.<androidx.ui.input.KeyboardType: int ordinal()>();

        r19[$i12] = 3;

        $r13 = <androidx.ui.input.KeyboardType: androidx.ui.input.KeyboardType Phone>;

        $i13 = virtualinvoke $r13.<androidx.ui.input.KeyboardType: int ordinal()>();

        r19[$i13] = 4;

        $r14 = <androidx.ui.input.KeyboardType: androidx.ui.input.KeyboardType Uri>;

        $i14 = virtualinvoke $r14.<androidx.ui.input.KeyboardType: int ordinal()>();

        r19[$i14] = 5;

        $r15 = <androidx.ui.input.KeyboardType: androidx.ui.input.KeyboardType Email>;

        $i15 = virtualinvoke $r15.<androidx.ui.input.KeyboardType: int ordinal()>();

        r19[$i15] = 6;

        $r16 = <androidx.ui.input.KeyboardType: androidx.ui.input.KeyboardType Password>;

        $i16 = virtualinvoke $r16.<androidx.ui.input.KeyboardType: int ordinal()>();

        r19[$i16] = 7;

        $r17 = <androidx.ui.input.KeyboardType: androidx.ui.input.KeyboardType NumberPassword>;

        $i17 = virtualinvoke $r17.<androidx.ui.input.KeyboardType: int ordinal()>();

        r19[$i17] = 8;

        <androidx.ui.input.TextInputServiceAndroid$WhenMappings: int[] $EnumSwitchMapping$1> = r19;

        return;
    }

