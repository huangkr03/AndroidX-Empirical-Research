androidx.test.espresso.web.assertion.WebAssertion
<androidx.test.espresso.web.assertion.WebAssertion: androidx.test.espresso.web.model.Atom atom>
    public final androidx.test.espresso.ViewAssertion toViewAssertion(java.lang.Object)
    {
        androidx.test.espresso.web.assertion.WebAssertion r0;
        java.lang.Object r1, $r3;
        androidx.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion r2;

        r0 := @this: androidx.test.espresso.web.assertion.WebAssertion;

        r1 := @parameter0: java.lang.Object;

        r2 = new androidx.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion;

        $r3 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        specialinvoke r2.<androidx.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion: void <init>(java.lang.Object,androidx.test.espresso.web.assertion.WebAssertion)>($r3, r0);

        return r2;
    }

    public final androidx.test.espresso.web.model.Atom getAtom()
    {
        androidx.test.espresso.web.assertion.WebAssertion r0;
        androidx.test.espresso.web.model.Atom $r1;

        r0 := @this: androidx.test.espresso.web.assertion.WebAssertion;

        $r1 = r0.<androidx.test.espresso.web.assertion.WebAssertion: androidx.test.espresso.web.model.Atom atom>;

        return $r1;
    }

    public void <init>(androidx.test.espresso.web.model.Atom)
    {
        androidx.test.espresso.web.assertion.WebAssertion r0;
        androidx.test.espresso.web.model.Atom r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.test.espresso.web.assertion.WebAssertion;

        r1 := @parameter0: androidx.test.espresso.web.model.Atom;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (androidx.test.espresso.web.model.Atom) $r2;

        r0.<androidx.test.espresso.web.assertion.WebAssertion: androidx.test.espresso.web.model.Atom atom> = $r3;

        return;
    }

<androidx.test.espresso.web.assertion.WebAssertion: void checkResult(android.webkit.WebView,java.lang.Object)>
androidx.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion
<androidx.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion: java.lang.Object result>
<androidx.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion: androidx.test.espresso.web.assertion.WebAssertion webAssertion>
    void <init>(java.lang.Object, androidx.test.espresso.web.assertion.WebAssertion)
    {
        androidx.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion r0;
        java.lang.Object r1;
        androidx.test.espresso.web.assertion.WebAssertion r2;

        r0 := @this: androidx.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: androidx.test.espresso.web.assertion.WebAssertion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion: java.lang.Object result> = r1;

        r0.<androidx.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion: androidx.test.espresso.web.assertion.WebAssertion webAssertion> = r2;

        return;
    }

    public void check(android.view.View, androidx.test.espresso.NoMatchingViewException)
    {
        boolean $z0;
        java.lang.Object $r0;
        android.webkit.WebView $r1;
        androidx.test.espresso.web.assertion.WebAssertion $r2;
        java.lang.StringBuilder $r3, $r4, r11, r12;
        java.lang.String $r5, r10;
        androidx.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion r6;
        android.view.View r7;
        androidx.test.espresso.NoMatchingViewException r8;
        java.lang.RuntimeException r9, r13;
        java.lang.Throwable r14;

        r6 := @this: androidx.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion;

        r7 := @parameter0: android.view.View;

        r8 := @parameter1: androidx.test.espresso.NoMatchingViewException;

        if r7 != null goto label1;

        throw r8;

     label1:
        $z0 = r7 instanceof android.webkit.WebView;

        if $z0 != 0 goto label2;

        r13 = new java.lang.RuntimeException;

        r9 = r13;

        r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r7);

        r12 = new java.lang.StringBuilder;

        r11 = r12;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": is not a WebView!");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r13.<java.lang.RuntimeException: void <init>(java.lang.String)>($r5);

        r14 = (java.lang.Throwable) r9;

        throw r14;

     label2:
        $r2 = r6.<androidx.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion: androidx.test.espresso.web.assertion.WebAssertion webAssertion>;

        $r1 = (android.webkit.WebView) r7;

        $r0 = r6.<androidx.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion: java.lang.Object result>;

        virtualinvoke $r2.<androidx.test.espresso.web.assertion.WebAssertion: void checkResult(android.webkit.WebView,java.lang.Object)>($r1, $r0);

        return;
    }

