androidx.core.view.NestedScrollingChildHelper
<androidx.core.view.NestedScrollingChildHelper: android.view.ViewParent mNestedScrollingParentTouch>
<androidx.core.view.NestedScrollingChildHelper: android.view.ViewParent mNestedScrollingParentNonTouch>
<androidx.core.view.NestedScrollingChildHelper: android.view.View mView>
<androidx.core.view.NestedScrollingChildHelper: boolean mIsNestedScrollingEnabled>
<androidx.core.view.NestedScrollingChildHelper: int[] mTempNestedScrollConsumed>
    public void <init>(android.view.View)
    {
        androidx.core.view.NestedScrollingChildHelper r0;
        android.view.View r1;

        r0 := @this: androidx.core.view.NestedScrollingChildHelper;

        r1 := @parameter0: android.view.View;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.core.view.NestedScrollingChildHelper: android.view.View mView> = r1;

        return;
    }

    public void setNestedScrollingEnabled(boolean)
    {
        androidx.core.view.NestedScrollingChildHelper r0;
        boolean z0, $z1;
        android.view.View $r1;

        r0 := @this: androidx.core.view.NestedScrollingChildHelper;

        z0 := @parameter0: boolean;

        $z1 = r0.<androidx.core.view.NestedScrollingChildHelper: boolean mIsNestedScrollingEnabled>;

        if $z1 == 0 goto label1;

        $r1 = r0.<androidx.core.view.NestedScrollingChildHelper: android.view.View mView>;

        staticinvoke <androidx.core.view.ViewCompat: void stopNestedScroll(android.view.View)>($r1);

     label1:
        r0.<androidx.core.view.NestedScrollingChildHelper: boolean mIsNestedScrollingEnabled> = z0;

        return;
    }

    public boolean isNestedScrollingEnabled()
    {
        androidx.core.view.NestedScrollingChildHelper r0;
        boolean $z0;

        r0 := @this: androidx.core.view.NestedScrollingChildHelper;

        $z0 = r0.<androidx.core.view.NestedScrollingChildHelper: boolean mIsNestedScrollingEnabled>;

        return $z0;
    }

    public boolean hasNestedScrollingParent()
    {
        androidx.core.view.NestedScrollingChildHelper r0;
        boolean $z0;

        r0 := @this: androidx.core.view.NestedScrollingChildHelper;

        $z0 = virtualinvoke r0.<androidx.core.view.NestedScrollingChildHelper: boolean hasNestedScrollingParent(int)>(0);

        return $z0;
    }

    public boolean hasNestedScrollingParent(int)
    {
        androidx.core.view.NestedScrollingChildHelper r0;
        int i0;
        android.view.ViewParent $r1;
        boolean $z0;

        r0 := @this: androidx.core.view.NestedScrollingChildHelper;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<androidx.core.view.NestedScrollingChildHelper: android.view.ViewParent getNestedScrollingParentForType(int)>(i0);

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean startNestedScroll(int)
    {
        androidx.core.view.NestedScrollingChildHelper r0;
        int i0;
        boolean $z0;

        r0 := @this: androidx.core.view.NestedScrollingChildHelper;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>(i0, 0);

        return $z0;
    }

    public boolean startNestedScroll(int, int)
    {
        androidx.core.view.NestedScrollingChildHelper r0;
        int i0, i1;
        boolean $z0, $z1, $z2, $z3;
        android.view.View $r1, $r2, $r3, r5;
        android.view.ViewParent r4;

        r0 := @this: androidx.core.view.NestedScrollingChildHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = virtualinvoke r0.<androidx.core.view.NestedScrollingChildHelper: boolean hasNestedScrollingParent(int)>(i1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = virtualinvoke r0.<androidx.core.view.NestedScrollingChildHelper: boolean isNestedScrollingEnabled()>();

        if $z1 == 0 goto label5;

        $r1 = r0.<androidx.core.view.NestedScrollingChildHelper: android.view.View mView>;

        r4 = virtualinvoke $r1.<android.view.View: android.view.ViewParent getParent()>();

        r5 = r0.<androidx.core.view.NestedScrollingChildHelper: android.view.View mView>;

     label2:
        if r4 == null goto label5;

        $r2 = r0.<androidx.core.view.NestedScrollingChildHelper: android.view.View mView>;

        $z2 = staticinvoke <androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>(r4, r5, $r2, i0, i1);

        if $z2 == 0 goto label3;

        specialinvoke r0.<androidx.core.view.NestedScrollingChildHelper: void setNestedScrollingParentForType(int,android.view.ViewParent)>(i1, r4);

        $r3 = r0.<androidx.core.view.NestedScrollingChildHelper: android.view.View mView>;

        staticinvoke <androidx.core.view.ViewParentCompat: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int)>(r4, r5, $r3, i0, i1);

        return 1;

     label3:
        $z3 = r4 instanceof android.view.View;

        if $z3 == 0 goto label4;

        r5 = (android.view.View) r4;

     label4:
        r4 = interfaceinvoke r4.<android.view.ViewParent: android.view.ViewParent getParent()>();

        goto label2;

     label5:
        return 0;
    }

    public void stopNestedScroll()
    {
        androidx.core.view.NestedScrollingChildHelper r0;

        r0 := @this: androidx.core.view.NestedScrollingChildHelper;

        virtualinvoke r0.<androidx.core.view.NestedScrollingChildHelper: void stopNestedScroll(int)>(0);

        return;
    }

    public void stopNestedScroll(int)
    {
        androidx.core.view.NestedScrollingChildHelper r0;
        int i0;
        android.view.ViewParent r1;
        android.view.View $r2;

        r0 := @this: androidx.core.view.NestedScrollingChildHelper;

        i0 := @parameter0: int;

        r1 = specialinvoke r0.<androidx.core.view.NestedScrollingChildHelper: android.view.ViewParent getNestedScrollingParentForType(int)>(i0);

        if r1 == null goto label1;

        $r2 = r0.<androidx.core.view.NestedScrollingChildHelper: android.view.View mView>;

        staticinvoke <androidx.core.view.ViewParentCompat: void onStopNestedScroll(android.view.ViewParent,android.view.View,int)>(r1, $r2, i0);

        specialinvoke r0.<androidx.core.view.NestedScrollingChildHelper: void setNestedScrollingParentForType(int,android.view.ViewParent)>(i0, null);

     label1:
        return;
    }

    public boolean dispatchNestedScroll(int, int, int, int, int[])
    {
        androidx.core.view.NestedScrollingChildHelper r0;
        int i0, i1, i2, i3;
        int[] r1;
        boolean $z0;

        r0 := @this: androidx.core.view.NestedScrollingChildHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: int[];

        $z0 = specialinvoke r0.<androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[])>(i0, i1, i2, i3, r1, 0, null);

        return $z0;
    }

    public boolean dispatchNestedScroll(int, int, int, int, int[], int)
    {
        androidx.core.view.NestedScrollingChildHelper r0;
        int i0, i1, i2, i3, i4;
        int[] r1;
        boolean $z0;

        r0 := @this: androidx.core.view.NestedScrollingChildHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: int[];

        i4 := @parameter5: int;

        $z0 = specialinvoke r0.<androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[])>(i0, i1, i2, i3, r1, i4, null);

        return $z0;
    }

    public void dispatchNestedScroll(int, int, int, int, int[], int, int[])
    {
        androidx.core.view.NestedScrollingChildHelper r0;
        int i0, i1, i2, i3, i4;
        int[] r1, r2;

        r0 := @this: androidx.core.view.NestedScrollingChildHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: int[];

        i4 := @parameter5: int;

        r2 := @parameter6: int[];

        specialinvoke r0.<androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[])>(i0, i1, i2, i3, r1, i4, r2);

        return;
    }

    private boolean dispatchNestedScrollInternal(int, int, int, int, int[], int, int[])
    {
        androidx.core.view.NestedScrollingChildHelper r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, i9, i10;
        int[] r1, r6;
        android.view.ViewParent r2;
        boolean $z0;
        android.view.View $r3, $r4, $r5;

        r0 := @this: androidx.core.view.NestedScrollingChildHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: int[];

        i4 := @parameter5: int;

        r6 := @parameter6: int[];

        $z0 = virtualinvoke r0.<androidx.core.view.NestedScrollingChildHelper: boolean isNestedScrollingEnabled()>();

        if $z0 == 0 goto label7;

        r2 = specialinvoke r0.<androidx.core.view.NestedScrollingChildHelper: android.view.ViewParent getNestedScrollingParentForType(int)>(i4);

        if r2 != null goto label1;

        return 0;

     label1:
        if i0 != 0 goto label2;

        if i1 != 0 goto label2;

        if i2 != 0 goto label2;

        if i3 == 0 goto label6;

     label2:
        i9 = 0;

        i10 = 0;

        if r1 == null goto label3;

        $r5 = r0.<androidx.core.view.NestedScrollingChildHelper: android.view.View mView>;

        virtualinvoke $r5.<android.view.View: void getLocationInWindow(int[])>(r1);

        i9 = r1[0];

        i10 = r1[1];

     label3:
        if r6 != null goto label4;

        r6 = specialinvoke r0.<androidx.core.view.NestedScrollingChildHelper: int[] getTempNestedScrollConsumed()>();

        r6[0] = 0;

        r6[1] = 0;

     label4:
        $r3 = r0.<androidx.core.view.NestedScrollingChildHelper: android.view.View mView>;

        staticinvoke <androidx.core.view.ViewParentCompat: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int,int[])>(r2, $r3, i0, i1, i2, i3, i4, r6);

        if r1 == null goto label5;

        $r4 = r0.<androidx.core.view.NestedScrollingChildHelper: android.view.View mView>;

        virtualinvoke $r4.<android.view.View: void getLocationInWindow(int[])>(r1);

        $i5 = r1[0];

        $i6 = $i5 - i9;

        r1[0] = $i6;

        $i7 = r1[1];

        $i8 = $i7 - i10;

        r1[1] = $i8;

     label5:
        return 1;

     label6:
        if r1 == null goto label7;

        r1[0] = 0;

        r1[1] = 0;

     label7:
        return 0;
    }

    public boolean dispatchNestedPreScroll(int, int, int[], int[])
    {
        androidx.core.view.NestedScrollingChildHelper r0;
        int i0, i1;
        int[] r1, r2;
        boolean $z0;

        r0 := @this: androidx.core.view.NestedScrollingChildHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: int[];

        r2 := @parameter3: int[];

        $z0 = virtualinvoke r0.<androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedPreScroll(int,int,int[],int[],int)>(i0, i1, r1, r2, 0);

        return $z0;
    }

    public boolean dispatchNestedPreScroll(int, int, int[], int[], int)
    {
        androidx.core.view.NestedScrollingChildHelper r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        int[] r1, r6;
        android.view.ViewParent r2;
        boolean $z0, $z1;
        android.view.View $r3, $r4, $r5;

        r0 := @this: androidx.core.view.NestedScrollingChildHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r6 := @parameter2: int[];

        r1 := @parameter3: int[];

        i2 := @parameter4: int;

        $z0 = virtualinvoke r0.<androidx.core.view.NestedScrollingChildHelper: boolean isNestedScrollingEnabled()>();

        if $z0 == 0 goto label10;

        r2 = specialinvoke r0.<androidx.core.view.NestedScrollingChildHelper: android.view.ViewParent getNestedScrollingParentForType(int)>(i2);

        if r2 != null goto label01;

        return 0;

     label01:
        if i0 != 0 goto label02;

        if i1 == 0 goto label09;

     label02:
        i9 = 0;

        i10 = 0;

        if r1 == null goto label03;

        $r5 = r0.<androidx.core.view.NestedScrollingChildHelper: android.view.View mView>;

        virtualinvoke $r5.<android.view.View: void getLocationInWindow(int[])>(r1);

        i9 = r1[0];

        i10 = r1[1];

     label03:
        if r6 != null goto label04;

        r6 = specialinvoke r0.<androidx.core.view.NestedScrollingChildHelper: int[] getTempNestedScrollConsumed()>();

     label04:
        r6[0] = 0;

        r6[1] = 0;

        $r3 = r0.<androidx.core.view.NestedScrollingChildHelper: android.view.View mView>;

        staticinvoke <androidx.core.view.ViewParentCompat: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int)>(r2, $r3, i0, i1, r6, i2);

        if r1 == null goto label05;

        $r4 = r0.<androidx.core.view.NestedScrollingChildHelper: android.view.View mView>;

        virtualinvoke $r4.<android.view.View: void getLocationInWindow(int[])>(r1);

        $i5 = r1[0];

        $i6 = $i5 - i9;

        r1[0] = $i6;

        $i7 = r1[1];

        $i8 = $i7 - i10;

        r1[1] = $i8;

     label05:
        $i3 = r6[0];

        if $i3 != 0 goto label06;

        $i4 = r6[1];

        if $i4 == 0 goto label07;

     label06:
        $z1 = 1;

        goto label08;

     label07:
        $z1 = 0;

     label08:
        return $z1;

     label09:
        if r1 == null goto label10;

        r1[0] = 0;

        r1[1] = 0;

     label10:
        return 0;
    }

    public boolean dispatchNestedFling(float, float, boolean)
    {
        androidx.core.view.NestedScrollingChildHelper r0;
        float f0, f1;
        boolean z0, $z1, $z2;
        android.view.ViewParent r1;
        android.view.View $r2;

        r0 := @this: androidx.core.view.NestedScrollingChildHelper;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        z0 := @parameter2: boolean;

        $z1 = virtualinvoke r0.<androidx.core.view.NestedScrollingChildHelper: boolean isNestedScrollingEnabled()>();

        if $z1 == 0 goto label1;

        r1 = specialinvoke r0.<androidx.core.view.NestedScrollingChildHelper: android.view.ViewParent getNestedScrollingParentForType(int)>(0);

        if r1 == null goto label1;

        $r2 = r0.<androidx.core.view.NestedScrollingChildHelper: android.view.View mView>;

        $z2 = staticinvoke <androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>(r1, $r2, f0, f1, z0);

        return $z2;

     label1:
        return 0;
    }

    public boolean dispatchNestedPreFling(float, float)
    {
        androidx.core.view.NestedScrollingChildHelper r0;
        float f0, f1;
        android.view.ViewParent r1;
        boolean $z0, $z1;
        android.view.View $r2;

        r0 := @this: androidx.core.view.NestedScrollingChildHelper;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $z0 = virtualinvoke r0.<androidx.core.view.NestedScrollingChildHelper: boolean isNestedScrollingEnabled()>();

        if $z0 == 0 goto label1;

        r1 = specialinvoke r0.<androidx.core.view.NestedScrollingChildHelper: android.view.ViewParent getNestedScrollingParentForType(int)>(0);

        if r1 == null goto label1;

        $r2 = r0.<androidx.core.view.NestedScrollingChildHelper: android.view.View mView>;

        $z1 = staticinvoke <androidx.core.view.ViewParentCompat: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)>(r1, $r2, f0, f1);

        return $z1;

     label1:
        return 0;
    }

    public void onDetachedFromWindow()
    {
        androidx.core.view.NestedScrollingChildHelper r0;
        android.view.View $r1;

        r0 := @this: androidx.core.view.NestedScrollingChildHelper;

        $r1 = r0.<androidx.core.view.NestedScrollingChildHelper: android.view.View mView>;

        staticinvoke <androidx.core.view.ViewCompat: void stopNestedScroll(android.view.View)>($r1);

        return;
    }

    public void onStopNestedScroll(android.view.View)
    {
        androidx.core.view.NestedScrollingChildHelper r0;
        android.view.View r1, $r2;

        r0 := @this: androidx.core.view.NestedScrollingChildHelper;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.core.view.NestedScrollingChildHelper: android.view.View mView>;

        staticinvoke <androidx.core.view.ViewCompat: void stopNestedScroll(android.view.View)>($r2);

        return;
    }

    private android.view.ViewParent getNestedScrollingParentForType(int)
    {
        androidx.core.view.NestedScrollingChildHelper r0;
        int i0;
        android.view.ViewParent $r1, $r2;

        r0 := @this: androidx.core.view.NestedScrollingChildHelper;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label3;
        };

     label1:
        $r2 = r0.<androidx.core.view.NestedScrollingChildHelper: android.view.ViewParent mNestedScrollingParentTouch>;

        return $r2;

     label2:
        $r1 = r0.<androidx.core.view.NestedScrollingChildHelper: android.view.ViewParent mNestedScrollingParentNonTouch>;

        return $r1;

     label3:
        return null;
    }

    private void setNestedScrollingParentForType(int, android.view.ViewParent)
    {
        androidx.core.view.NestedScrollingChildHelper r0;
        int i0;
        android.view.ViewParent r1;

        r0 := @this: androidx.core.view.NestedScrollingChildHelper;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.ViewParent;

        lookupswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label3;
        };

     label1:
        r0.<androidx.core.view.NestedScrollingChildHelper: android.view.ViewParent mNestedScrollingParentTouch> = r1;

        goto label3;

     label2:
        r0.<androidx.core.view.NestedScrollingChildHelper: android.view.ViewParent mNestedScrollingParentNonTouch> = r1;

     label3:
        return;
    }

    private int[] getTempNestedScrollConsumed()
    {
        androidx.core.view.NestedScrollingChildHelper r0;
        int[] $r1, $r2, $r3;

        r0 := @this: androidx.core.view.NestedScrollingChildHelper;

        $r1 = r0.<androidx.core.view.NestedScrollingChildHelper: int[] mTempNestedScrollConsumed>;

        if $r1 != null goto label1;

        $r3 = newarray (int)[2];

        r0.<androidx.core.view.NestedScrollingChildHelper: int[] mTempNestedScrollConsumed> = $r3;

     label1:
        $r2 = r0.<androidx.core.view.NestedScrollingChildHelper: int[] mTempNestedScrollConsumed>;

        return $r2;
    }

