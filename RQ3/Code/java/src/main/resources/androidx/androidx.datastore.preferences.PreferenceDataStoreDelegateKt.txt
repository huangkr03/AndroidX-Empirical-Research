androidx.datastore.preferences.PreferenceDataStoreDelegateKt
    public static final kotlin.properties.ReadOnlyProperty preferencesDataStore(java.lang.String, androidx.datastore.core.handlers.ReplaceFileCorruptionHandler, kotlin.jvm.functions.Function1, kotlinx.coroutines.CoroutineScope)
    {
        java.lang.String r0;
        androidx.datastore.core.handlers.ReplaceFileCorruptionHandler r1;
        kotlin.jvm.functions.Function1 r2;
        kotlinx.coroutines.CoroutineScope r3;
        androidx.datastore.preferences.PreferenceDataStoreSingletonDelegate $r4;
        kotlin.properties.ReadOnlyProperty $r5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: androidx.datastore.core.handlers.ReplaceFileCorruptionHandler;

        r2 := @parameter2: kotlin.jvm.functions.Function1;

        r3 := @parameter3: kotlinx.coroutines.CoroutineScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "name");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "produceMigrations");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "scope");

        $r4 = new androidx.datastore.preferences.PreferenceDataStoreSingletonDelegate;

        specialinvoke $r4.<androidx.datastore.preferences.PreferenceDataStoreSingletonDelegate: void <init>(java.lang.String,androidx.datastore.core.handlers.ReplaceFileCorruptionHandler,kotlin.jvm.functions.Function1,kotlinx.coroutines.CoroutineScope)>(r0, r1, r2, r3);

        $r5 = (kotlin.properties.ReadOnlyProperty) $r4;

        return $r5;
    }

    public static kotlin.properties.ReadOnlyProperty preferencesDataStore$default(java.lang.String, androidx.datastore.core.handlers.ReplaceFileCorruptionHandler, kotlin.jvm.functions.Function1, kotlinx.coroutines.CoroutineScope, int, java.lang.Object)
    {
        java.lang.String r0;
        int i0, $i1, $i2, $i3;
        java.lang.Object r1;
        kotlin.properties.ReadOnlyProperty $r2;
        kotlinx.coroutines.Dispatchers $r3;
        kotlinx.coroutines.CoroutineDispatcher $r4;
        kotlinx.coroutines.CompletableJob $r5;
        kotlin.coroutines.CoroutineContext $r6, $r7;
        androidx.datastore.preferences.PreferenceDataStoreDelegateKt$preferencesDataStore$1 $r8;
        androidx.datastore.core.handlers.ReplaceFileCorruptionHandler r9;
        kotlin.jvm.functions.Function1 r10;
        kotlinx.coroutines.CoroutineScope r11;

        r0 := @parameter0: java.lang.String;

        r9 := @parameter1: androidx.datastore.core.handlers.ReplaceFileCorruptionHandler;

        r10 := @parameter2: kotlin.jvm.functions.Function1;

        r11 := @parameter3: kotlinx.coroutines.CoroutineScope;

        i0 := @parameter4: int;

        r1 := @parameter5: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r9 = null;

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        $r8 = <androidx.datastore.preferences.PreferenceDataStoreDelegateKt$preferencesDataStore$1: androidx.datastore.preferences.PreferenceDataStoreDelegateKt$preferencesDataStore$1 INSTANCE>;

        r10 = (kotlin.jvm.functions.Function1) $r8;

     label2:
        $i3 = i0 & 8;

        if $i3 == 0 goto label3;

        $r3 = <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.Dispatchers INSTANCE>;

        $r4 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher getIO()>();

        $r5 = staticinvoke <kotlinx.coroutines.SupervisorKt: kotlinx.coroutines.CompletableJob SupervisorJob$default(kotlinx.coroutines.Job,int,java.lang.Object)>(null, 1, null);

        $r6 = (kotlin.coroutines.CoroutineContext) $r5;

        $r7 = virtualinvoke $r4.<kotlinx.coroutines.CoroutineDispatcher: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)>($r6);

        r11 = staticinvoke <kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope CoroutineScope(kotlin.coroutines.CoroutineContext)>($r7);

     label3:
        $r2 = staticinvoke <androidx.datastore.preferences.PreferenceDataStoreDelegateKt: kotlin.properties.ReadOnlyProperty preferencesDataStore(java.lang.String,androidx.datastore.core.handlers.ReplaceFileCorruptionHandler,kotlin.jvm.functions.Function1,kotlinx.coroutines.CoroutineScope)>(r0, r9, r10, r11);

        return $r2;
    }

