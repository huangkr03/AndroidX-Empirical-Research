androidx.benchmark.perfetto.PerfettoHelper
<androidx.benchmark.perfetto.PerfettoHelper: androidx.benchmark.perfetto.PerfettoHelper$Companion Companion>
<androidx.benchmark.perfetto.PerfettoHelper: boolean unbundled>
<androidx.benchmark.perfetto.PerfettoHelper: java.lang.Integer perfettoPid>
<androidx.benchmark.perfetto.PerfettoHelper: boolean useBackgroundWait>
<androidx.benchmark.perfetto.PerfettoHelper: java.lang.String perfettoProcessName>
<androidx.benchmark.perfetto.PerfettoHelper: java.lang.String LOG_TAG>
<androidx.benchmark.perfetto.PerfettoHelper: int LOWEST_BUNDLED_VERSION_SUPPORTED>
<androidx.benchmark.perfetto.PerfettoHelper: java.lang.String PERFETTO_TMP_OUTPUT_FILE>
<androidx.benchmark.perfetto.PerfettoHelper: java.lang.String PERFETTO_TXT_PROTO_ARG>
<androidx.benchmark.perfetto.PerfettoHelper: int PERFETTO_KILL_WAIT_COUNT>
<androidx.benchmark.perfetto.PerfettoHelper: long PERFETTO_KILL_WAIT_TIME_MS>
<androidx.benchmark.perfetto.PerfettoHelper: java.lang.String UNBUNDLED_PERFETTO_ROOT_DIR>
<androidx.benchmark.perfetto.PerfettoHelper: java.lang.String UNBUNDLED_TEMP_OUTPUT_FILE>
<androidx.benchmark.perfetto.PerfettoHelper: java.util.Set SUPPORTED_64_ABIS>
<androidx.benchmark.perfetto.PerfettoHelper: java.util.Set SUPPORTED_32_ABIS>
<androidx.benchmark.perfetto.PerfettoHelper: java.lang.String TRACING_ON_PATH>
<androidx.benchmark.perfetto.PerfettoHelper: java.lang.String TRACING_ON_FALLBACK_PATH>
<androidx.benchmark.perfetto.PerfettoHelper: kotlin.Lazy unbundledPerfettoShellPath$delegate>
    public void <init>(boolean)
    {
        androidx.benchmark.perfetto.PerfettoHelper r0;
        boolean z0, $z1, $z2, $z3, $z4;
        java.lang.IllegalArgumentException $r2;
        java.lang.String $r3, $r4, $r5;
        int $i0;

        r0 := @this: androidx.benchmark.perfetto.PerfettoHelper;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.benchmark.perfetto.PerfettoHelper: boolean unbundled> = z0;

        $z1 = r0.<androidx.benchmark.perfetto.PerfettoHelper: boolean unbundled>;

        if $z1 != 0 goto label1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 29 goto label2;

     label1:
        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        if $z4 != 0 goto label4;

        $r4 = "Perfetto capture using the os version of perfetto requires API 29 or greater.";

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label4:
        $z2 = r0.<androidx.benchmark.perfetto.PerfettoHelper: boolean unbundled>;

        r0.<androidx.benchmark.perfetto.PerfettoHelper: boolean useBackgroundWait> = $z2;

        $z3 = r0.<androidx.benchmark.perfetto.PerfettoHelper: boolean unbundled>;

        if $z3 == 0 goto label5;

        $r5 = "tracebox";

        goto label6;

     label5:
        $r5 = "perfetto";

     label6:
        r0.<androidx.benchmark.perfetto.PerfettoHelper: java.lang.String perfettoProcessName> = $r5;

        return;
    }

    public void <init>(boolean, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.benchmark.perfetto.PerfettoHelper r0;
        int i0, $i1, $i2;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        boolean z0, $z1;

        r0 := @this: androidx.benchmark.perfetto.PerfettoHelper;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label3;

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 >= 29 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

     label3:
        specialinvoke r0.<androidx.benchmark.perfetto.PerfettoHelper: void <init>(boolean)>(z0);

        return;
    }

    public final java.lang.Integer getPerfettoPid()
    {
        androidx.benchmark.perfetto.PerfettoHelper r0;
        java.lang.Integer $r1;

        r0 := @this: androidx.benchmark.perfetto.PerfettoHelper;

        $r1 = r0.<androidx.benchmark.perfetto.PerfettoHelper: java.lang.Integer perfettoPid>;

        return $r1;
    }

    public final void setPerfettoPid(java.lang.Integer)
    {
        androidx.benchmark.perfetto.PerfettoHelper r0;
        java.lang.Integer r1;

        r0 := @this: androidx.benchmark.perfetto.PerfettoHelper;

        r1 := @parameter0: java.lang.Integer;

        r0.<androidx.benchmark.perfetto.PerfettoHelper: java.lang.Integer perfettoPid> = r1;

        return;
    }

    private final java.lang.IllegalStateException perfettoStartupException(java.lang.String, java.lang.Exception)
    {
        androidx.benchmark.perfetto.PerfettoHelper r0;
        java.lang.String r1, $r9, $r12, $r13;
        java.lang.Exception r2;
        java.lang.IllegalStateException $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r10, $r11;
        androidx.benchmark.DeviceInfo $r8;
        java.lang.Throwable $r14;

        r0 := @this: androidx.benchmark.perfetto.PerfettoHelper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Exception;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n            ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n            Please report a bug, and include a logcat capture of the test run and failure.\n            ");

        $r8 = <androidx.benchmark.DeviceInfo: androidx.benchmark.DeviceInfo INSTANCE>;

        $r9 = virtualinvoke $r8.<androidx.benchmark.DeviceInfo: java.lang.String getDeviceSummaryString()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n            ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = staticinvoke <kotlin.text.StringsKt: java.lang.String trimIndent(java.lang.String)>($r12);

        $r14 = (java.lang.Throwable) r2;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r13, $r14);

        return $r3;
    }

    public final void startCollecting(java.lang.String, boolean)
    {
        androidx.benchmark.perfetto.PerfettoHelper r0;
        java.lang.String r1, r2, r3, r4, r5, $r10, $r11, $r12, $r14, $r15, $r18, $r20, $r27, $r29, $r32, $r40, $r43, $r45, $r49, $r50, $r52, r53, $r54;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z7;
        java.lang.CharSequence $r6, $r16, $r17, $r19;
        int $i0, $i5;
        java.lang.Integer $r7, $r21, $r24;
        androidx.benchmark.perfetto.PerfettoHelper$Companion $r8;
        androidx.benchmark.Shell $r9, $r13, $r31, $r35;
        java.lang.StringBuilder $r22, $r23, $r25, $r26, $r34, $r36, $r37, $r38, $r39;
        java.lang.IllegalStateException $r28, $r30, $r48;
        java.lang.IllegalArgumentException $r42, $r44;
        java.lang.Throwable $r46, r55;
        java.lang.Exception $r47;

        r0 := @this: androidx.benchmark.perfetto.PerfettoHelper;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "configFilePath");

        $r6 = (java.lang.CharSequence) r1;

        $i0 = interfaceinvoke $r6.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label01;

        $z5 = 1;

        goto label02;

     label01:
        $z5 = 0;

     label02:
        if $z5 != 0 goto label03;

        $r49 = "Perfetto config cannot be empty.";

        $r44 = new java.lang.IllegalArgumentException;

        $r45 = virtualinvoke $r49.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r44.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r45);

        throw $r44;

     label03:
        $r7 = r0.<androidx.benchmark.perfetto.PerfettoHelper: java.lang.Integer perfettoPid>;

        if $r7 != null goto label04;

        $z7 = 1;

        goto label05;

     label04:
        $z7 = 0;

     label05:
        if $z7 != 0 goto label06;

        $r50 = "Perfetto instance is already running";

        $r42 = new java.lang.IllegalArgumentException;

        $r43 = virtualinvoke $r50.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r42.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r43);

        throw $r42;

     label06:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PerfettoCapture", "Cleanup perfetto before starting.");

        $r8 = <androidx.benchmark.perfetto.PerfettoHelper: androidx.benchmark.perfetto.PerfettoHelper$Companion Companion>;

        virtualinvoke $r8.<androidx.benchmark.perfetto.PerfettoHelper$Companion: void stopAllPerfettoProcesses()>();

        $z1 = r0.<androidx.benchmark.perfetto.PerfettoHelper: boolean unbundled>;

        if $z1 == 0 goto label07;

        $r31 = <androidx.benchmark.Shell: androidx.benchmark.Shell INSTANCE>;

        $r32 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("rm ", "/data/local/tmp/config.pb");

        virtualinvoke $r31.<androidx.benchmark.Shell: java.lang.String executeCommand(java.lang.String)>($r32);

        $r35 = <androidx.benchmark.Shell: androidx.benchmark.Shell INSTANCE>;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mv ");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/data/local/tmp/config.pb");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r35.<androidx.benchmark.Shell: java.lang.String executeCommand(java.lang.String)>($r40);

        $r52 = "/data/local/tmp/config.pb";

        goto label08;

     label07:
        $r52 = r1;

     label08:
        r53 = $r52;

        $r54 = specialinvoke r0.<androidx.benchmark.perfetto.PerfettoHelper: java.lang.String getPerfettoTmpOutputFilePath()>();

        $r9 = <androidx.benchmark.Shell: androidx.benchmark.Shell INSTANCE>;

        $r10 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("rm ", $r54);

        r2 = virtualinvoke $r9.<androidx.benchmark.Shell: java.lang.String executeCommand(java.lang.String)>($r10);

        $r11 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Perfetto output file cleanup - ", r2);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PerfettoCapture", $r11);

        r3 = specialinvoke r0.<androidx.benchmark.perfetto.PerfettoHelper: java.lang.String perfettoCommand(java.lang.String,boolean)>(r53, z0);

        $r12 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Starting perfetto tracing with cmd: ", r3);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PerfettoCapture", $r12);

        $r13 = <androidx.benchmark.Shell: androidx.benchmark.Shell INSTANCE>;

        $r14 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>(r3, "; echo EXITCODE=$?");

        $r15 = staticinvoke <androidx.benchmark.Shell: java.lang.String executeScript$default(androidx.benchmark.Shell,java.lang.String,java.lang.String,int,java.lang.Object)>($r13, $r14, null, 2, null);

        $r16 = (java.lang.CharSequence) $r15;

        $r17 = staticinvoke <kotlin.text.StringsKt: java.lang.CharSequence trim(java.lang.CharSequence)>($r16);

        r4 = virtualinvoke $r17.<java.lang.Object: java.lang.String toString()>();

        r5 = "\nEXITCODE=0";

        $z2 = staticinvoke <kotlin.text.StringsKt: boolean endsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)>(r4, r5, 0, 2, null);

        if $z2 != 0 goto label09;

        $r29 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Perfetto unexpected exit code, output = ", r4);

        $r30 = specialinvoke r0.<androidx.benchmark.perfetto.PerfettoHelper: java.lang.IllegalStateException perfettoStartupException(java.lang.String,java.lang.Exception)>($r29, null);

        throw $r30;

     label09:
        $r18 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Perfetto output - ", r4);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PerfettoCapture", $r18);

        $r19 = (java.lang.CharSequence) r5;

        $r20 = staticinvoke <kotlin.text.StringsKt: java.lang.String removeSuffix(java.lang.String,java.lang.CharSequence)>(r4, $r19);

        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r20);

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        r0.<androidx.benchmark.perfetto.PerfettoHelper: java.lang.Integer perfettoPid> = $r21;

     label10:
        goto label12;

     label11:
        $r46 := @caughtexception;

        r55 = $r46;

        $r47 = (java.lang.Exception) r55;

        $r48 = specialinvoke r0.<androidx.benchmark.perfetto.PerfettoHelper: java.lang.IllegalStateException perfettoStartupException(java.lang.String,java.lang.Exception)>("Unable to start perfetto tracing", $r47);

        throw $r48;

     label12:
        $z3 = virtualinvoke r0.<androidx.benchmark.perfetto.PerfettoHelper: boolean isRunning()>();

        if $z3 != 0 goto label13;

        $r28 = specialinvoke r0.<androidx.benchmark.perfetto.PerfettoHelper: java.lang.IllegalStateException perfettoStartupException(java.lang.String,java.lang.Exception)>("Perfetto tracing failed to start.", null);

        throw $r28;

     label13:
        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Perfetto tracing started successfully with pid ");

        $r24 = r0.<androidx.benchmark.perfetto.PerfettoHelper: java.lang.Integer perfettoPid>;

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PerfettoCapture", $r27);

        $z4 = r0.<androidx.benchmark.perfetto.PerfettoHelper: boolean useBackgroundWait>;

        if $z4 != 0 goto label14;

        specialinvoke r0.<androidx.benchmark.perfetto.PerfettoHelper: void checkTracingOn()>();

     label14:
        return;

        catch java.io.IOException from label06 to label10 with label11;
    }

    private final void checkTracingOn()
    {
        androidx.benchmark.perfetto.PerfettoHelper r0;
        java.lang.String r1, r2, r3, $r14, $r17, $r18, $r21, $r28, $r37, r38, r39;
        byte b0;
        long l1, l4, $l5;
        int i2, i3, i7;
        kotlin.Unit r4, $r40;
        java.lang.Throwable r5, $r32, $r33, $r35;
        androidx.benchmark.UserspaceTracing $r6, $r29, $r30, $r31, $r34, $r36;
        androidx.benchmark.Shell $r7, $r8, $r16;
        boolean $z2, $z3, $z4, $z5;
        java.lang.IllegalStateException $r9, $r15, $r22;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r23, $r24, $r25, $r26, $r27;
        java.lang.CharSequence $r19, $r20;

        r0 := @this: androidx.benchmark.perfetto.PerfettoHelper;

        r1 = "poll tracing_on";

        $r6 = <androidx.benchmark.UserspaceTracing: androidx.benchmark.UserspaceTracing INSTANCE>;

        staticinvoke <androidx.benchmark.UserspaceTracing: void beginSection$default(androidx.benchmark.UserspaceTracing,java.lang.String,long,int,java.lang.Object)>($r6, r1, 0L, 2, null);

     label01:
        $r7 = <androidx.benchmark.Shell: androidx.benchmark.Shell INSTANCE>;

        $z2 = virtualinvoke $r7.<androidx.benchmark.Shell: boolean pathExists(java.lang.String)>("/sys/kernel/tracing/tracing_on");

        if $z2 == 0 goto label02;

        $r37 = "/sys/kernel/tracing/tracing_on";

        goto label04;

     label02:
        $r8 = <androidx.benchmark.Shell: androidx.benchmark.Shell INSTANCE>;

        $z3 = virtualinvoke $r8.<androidx.benchmark.Shell: boolean pathExists(java.lang.String)>("/sys/kernel/debug/tracing/tracing_on");

        if $z3 == 0 goto label03;

        $r37 = "/sys/kernel/debug/tracing/tracing_on";

        goto label04;

     label03:
        $r9 = specialinvoke r0.<androidx.benchmark.perfetto.PerfettoHelper: java.lang.IllegalStateException perfettoStartupException(java.lang.String,java.lang.Exception)>("Unable to find path to tracing_on (e.g. /sys/kernel/tracing/tracing_on)", null);

        throw $r9;

     label04:
        r2 = $r37;

        b0 = 50;

        l1 = 100L;

        i7 = 0;

     label05:
        if i7 >= b0 goto label19;

        i2 = i7;

        i7 = i7 + 1;

        i3 = i2;

        $r16 = <androidx.benchmark.Shell: androidx.benchmark.Shell INSTANCE>;

        $r17 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("cat ", r2);

        $r18 = virtualinvoke $r16.<androidx.benchmark.Shell: java.lang.String executeCommand(java.lang.String)>($r17);

        $r19 = (java.lang.CharSequence) $r18;

        $r20 = staticinvoke <kotlin.text.StringsKt: java.lang.CharSequence trim(java.lang.CharSequence)>($r19);

        r3 = virtualinvoke $r20.<java.lang.Object: java.lang.String toString()>();

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r3, "0");

        if $z4 == 0 goto label11;

        r38 = "wait for trace to start (tracing_on == 1)";

        $r30 = <androidx.benchmark.UserspaceTracing: androidx.benchmark.UserspaceTracing INSTANCE>;

        staticinvoke <androidx.benchmark.UserspaceTracing: void beginSection$default(androidx.benchmark.UserspaceTracing,java.lang.String,long,int,java.lang.Object)>($r30, r38, 0L, 2, null);

     label06:
        staticinvoke <android.os.SystemClock: void sleep(long)>(l1);

        r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label07:
        $r31 = <androidx.benchmark.UserspaceTracing: androidx.benchmark.UserspaceTracing INSTANCE>;

        staticinvoke <androidx.benchmark.UserspaceTracing: void endSection$default(androidx.benchmark.UserspaceTracing,long,int,java.lang.Object)>($r31, 0L, 1, null);

        goto label10;

     label08:
        $r33 := @caughtexception;

        r5 = $r33;

     label09:
        $r34 = <androidx.benchmark.UserspaceTracing: androidx.benchmark.UserspaceTracing INSTANCE>;

        staticinvoke <androidx.benchmark.UserspaceTracing: void endSection$default(androidx.benchmark.UserspaceTracing,long,int,java.lang.Object)>($r34, 0L, 1, null);

        throw r5;

     label10:
        goto label18;

     label11:
        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r3, "1");

        if $z5 == 0 goto label17;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = 1, polled ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" times, capture fully started");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PerfettoCapture", $r28);

        r39 = "Perfetto - capture started successfully";

     label12:
        staticinvoke <androidx.tracing.Trace: void beginSection(java.lang.String)>(r39);

        $r40 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label13:
        staticinvoke <androidx.tracing.Trace: void endSection()>();

        goto label16;

     label14:
        $r32 := @caughtexception;

     label15:
        staticinvoke <androidx.tracing.Trace: void endSection()>();

        throw $r32;

     label16:
        $r29 = <androidx.benchmark.UserspaceTracing: androidx.benchmark.UserspaceTracing INSTANCE>;

        staticinvoke <androidx.benchmark.UserspaceTracing: void endSection$default(androidx.benchmark.UserspaceTracing,long,int,java.lang.Object)>($r29, 0L, 1, null);

        return;

     label17:
        $r21 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Saw unexpected tracing_on contents: ", r3);

        $r22 = specialinvoke r0.<androidx.benchmark.perfetto.PerfettoHelper: java.lang.IllegalStateException perfettoStartupException(java.lang.String,java.lang.Exception)>($r21, null);

        throw $r22;

     label18:
        goto label05;

     label19:
        $l5 = (long) b0;

        l4 = l1 * $l5;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: did not detect tracing on after ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l4);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = specialinvoke r0.<androidx.benchmark.perfetto.PerfettoHelper: java.lang.IllegalStateException perfettoStartupException(java.lang.String,java.lang.Exception)>($r14, null);

        throw $r15;

     label20:
        $r35 := @caughtexception;

     label21:
        $r36 = <androidx.benchmark.UserspaceTracing: androidx.benchmark.UserspaceTracing INSTANCE>;

        staticinvoke <androidx.benchmark.UserspaceTracing: void endSection$default(androidx.benchmark.UserspaceTracing,long,int,java.lang.Object)>($r36, 0L, 1, null);

        throw $r35;

        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
        catch java.lang.Throwable from label01 to label16 with label20;
        catch java.lang.Throwable from label17 to label20 with label20;
        catch java.lang.Throwable from label20 to label21 with label20;
    }

    public final boolean isRunning()
    {
        androidx.benchmark.perfetto.PerfettoHelper r0;
        java.lang.Integer r1;
        boolean z0, $z2;
        int i0;
        java.lang.Number $r2;
        java.lang.String $r3;
        androidx.benchmark.Shell $r4;

        r0 := @this: androidx.benchmark.perfetto.PerfettoHelper;

        r1 = r0.<androidx.benchmark.perfetto.PerfettoHelper: java.lang.Integer perfettoPid>;

        if r1 != null goto label1;

        $z2 = 0;

        goto label2;

     label1:
        $r2 = (java.lang.Number) r1;

        i0 = virtualinvoke $r2.<java.lang.Number: int intValue()>();

        $r4 = <androidx.benchmark.Shell: androidx.benchmark.Shell INSTANCE>;

        $r3 = r0.<androidx.benchmark.perfetto.PerfettoHelper: java.lang.String perfettoProcessName>;

        z0 = virtualinvoke $r4.<androidx.benchmark.Shell: boolean isProcessAlive(int,java.lang.String)>(i0, $r3);

        $z2 = z0;

     label2:
        return $z2;
    }

    public final void stopCollecting(java.lang.String)
    {
        androidx.benchmark.perfetto.PerfettoHelper r0;
        java.lang.String r1, $r9, r16, r19;
        java.lang.Throwable r2, $r12, $r14;
        androidx.benchmark.UserspaceTracing $r3, $r4, $r10, $r11, $r13, $r15;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        kotlin.Unit r17;

        r0 := @this: androidx.benchmark.perfetto.PerfettoHelper;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "destinationFile");

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PerfettoCapture", "Stopping perfetto.");

        r16 = "stop perfetto process";

        $r3 = <androidx.benchmark.UserspaceTracing: androidx.benchmark.UserspaceTracing INSTANCE>;

        staticinvoke <androidx.benchmark.UserspaceTracing: void beginSection$default(androidx.benchmark.UserspaceTracing,java.lang.String,long,int,java.lang.Object)>($r3, r16, 0L, 2, null);

     label01:
        specialinvoke r0.<androidx.benchmark.perfetto.PerfettoHelper: void stopPerfetto()>();

        r17 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label02:
        $r4 = <androidx.benchmark.UserspaceTracing: androidx.benchmark.UserspaceTracing INSTANCE>;

        staticinvoke <androidx.benchmark.UserspaceTracing: void endSection$default(androidx.benchmark.UserspaceTracing,long,int,java.lang.Object)>($r4, 0L, 1, null);

        goto label05;

     label03:
        $r12 := @caughtexception;

     label04:
        $r13 = <androidx.benchmark.UserspaceTracing: androidx.benchmark.UserspaceTracing INSTANCE>;

        staticinvoke <androidx.benchmark.UserspaceTracing: void endSection$default(androidx.benchmark.UserspaceTracing,long,int,java.lang.Object)>($r13, 0L, 1, null);

        throw $r12;

     label05:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Writing to ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PerfettoCapture", $r9);

        r19 = "copy trace to output dir";

        $r10 = <androidx.benchmark.UserspaceTracing: androidx.benchmark.UserspaceTracing INSTANCE>;

        staticinvoke <androidx.benchmark.UserspaceTracing: void beginSection$default(androidx.benchmark.UserspaceTracing,java.lang.String,long,int,java.lang.Object)>($r10, r19, 0L, 2, null);

     label06:
        specialinvoke r0.<androidx.benchmark.perfetto.PerfettoHelper: boolean copyFileOutput(java.lang.String)>(r1);

     label07:
        $r11 = <androidx.benchmark.UserspaceTracing: androidx.benchmark.UserspaceTracing INSTANCE>;

        staticinvoke <androidx.benchmark.UserspaceTracing: void endSection$default(androidx.benchmark.UserspaceTracing,long,int,java.lang.Object)>($r11, 0L, 1, null);

        goto label10;

     label08:
        $r14 := @caughtexception;

        r2 = $r14;

     label09:
        $r15 = <androidx.benchmark.UserspaceTracing: androidx.benchmark.UserspaceTracing INSTANCE>;

        staticinvoke <androidx.benchmark.UserspaceTracing: void endSection$default(androidx.benchmark.UserspaceTracing,long,int,java.lang.Object)>($r15, 0L, 1, null);

        throw r2;

     label10:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private final void stopPerfetto()
    {
        androidx.benchmark.perfetto.PerfettoHelper r0;
        java.lang.Integer r1;
        androidx.benchmark.Shell$ProcessPid $r2;
        androidx.benchmark.Shell $r3;
        int $i0;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5, r7, $r10, $r12;
        java.lang.Throwable $r6;
        kotlin.Unit $r8;
        boolean $z2;
        androidx.benchmark.Shell$ProcessPid[] r11;

        r0 := @this: androidx.benchmark.perfetto.PerfettoHelper;

        r1 = r0.<androidx.benchmark.perfetto.PerfettoHelper: java.lang.Integer perfettoPid>;

        r7 = "Perfetto - preparing to stop";

     label1:
        staticinvoke <androidx.tracing.Trace: void beginSection(java.lang.String)>(r7);

        $r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label2:
        staticinvoke <androidx.tracing.Trace: void endSection()>();

        goto label5;

     label3:
        $r6 := @caughtexception;

     label4:
        staticinvoke <androidx.tracing.Trace: void endSection()>();

        throw $r6;

     label5:
        if r1 == null goto label6;

        $z2 = 1;

        goto label7;

     label6:
        $z2 = 0;

     label7:
        if $z2 != 0 goto label8;

        $r10 = "Failed requirement.";

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label8:
        $r3 = <androidx.benchmark.Shell: androidx.benchmark.Shell INSTANCE>;

        r11 = newarray (androidx.benchmark.Shell$ProcessPid)[1];

        $r12 = r0.<androidx.benchmark.perfetto.PerfettoHelper: java.lang.String perfettoProcessName>;

        $r2 = new androidx.benchmark.Shell$ProcessPid;

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        specialinvoke $r2.<androidx.benchmark.Shell$ProcessPid: void <init>(java.lang.String,int)>($r12, $i0);

        r11[0] = $r2;

        virtualinvoke $r3.<androidx.benchmark.Shell: void terminateProcessesAndWait(long,int,androidx.benchmark.Shell$ProcessPid[])>(100L, 30, r11);

        r0.<androidx.benchmark.perfetto.PerfettoHelper: java.lang.Integer perfettoPid> = null;

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private final java.lang.String perfettoCommand(java.lang.String, boolean)
    {
        androidx.benchmark.perfetto.PerfettoHelper r0;
        java.lang.String r1, r2, r3, $r6, $r21, $r22, r23;
        boolean z0, $z1, $z2;
        java.lang.StringBuilder $r4, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;
        androidx.benchmark.perfetto.PerfettoHelper$Companion $r5;

        r0 := @this: androidx.benchmark.perfetto.PerfettoHelper;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 = specialinvoke r0.<androidx.benchmark.perfetto.PerfettoHelper: java.lang.String getPerfettoTmpOutputFilePath()>();

        $z1 = r0.<androidx.benchmark.perfetto.PerfettoHelper: boolean useBackgroundWait>;

        if $z1 == 0 goto label1;

        $r21 = "--background-wait";

        goto label2;

     label1:
        $r21 = "--background";

     label2:
        r3 = $r21;

        $z2 = r0.<androidx.benchmark.perfetto.PerfettoHelper: boolean unbundled>;

        if $z2 != 0 goto label3;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cat ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" | perfetto ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -c - -o ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label4;

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = <androidx.benchmark.perfetto.PerfettoHelper: androidx.benchmark.perfetto.PerfettoHelper$Companion Companion>;

        $r6 = virtualinvoke $r5.<androidx.benchmark.perfetto.PerfettoHelper$Companion: java.lang.String getUnbundledPerfettoShellPath()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -c ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -o ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r22 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        r23 = $r22;

        if z0 == 0 goto label5;

        r23 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>(r23, " --txt");

     label5:
        return r23;
    }

    private final java.lang.String getPerfettoTmpOutputFilePath()
    {
        androidx.benchmark.perfetto.PerfettoHelper r0;
        boolean $z0;
        java.lang.String $r1;

        r0 := @this: androidx.benchmark.perfetto.PerfettoHelper;

        $z0 = r0.<androidx.benchmark.perfetto.PerfettoHelper: boolean unbundled>;

        if $z0 == 0 goto label1;

        $r1 = "/data/local/tmp/trace_output.pb";

        goto label2;

     label1:
        $r1 = "/data/misc/perfetto-traces/trace_output.pb";

     label2:
        return $r1;
    }

    private final boolean copyFileOutput(java.lang.String)
    {
        androidx.benchmark.perfetto.PerfettoHelper r0;
        java.lang.String r1, r2, r4, $r14, $r15, $r21, $r31, r32;
        java.io.File r3, $r5, $r16, r24;
        boolean z0, $z1, $z2;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r17, $r18, $r19, $r20, $r26, $r27, $r28, $r29, $r30;
        java.lang.Throwable $r22, $r23, r34;
        androidx.benchmark.Shell $r25;
        java.lang.CharSequence $r33;
        int $i3;

        r0 := @this: androidx.benchmark.perfetto.PerfettoHelper;

        r1 := @parameter0: java.lang.String;

        r2 = specialinvoke r0.<androidx.benchmark.perfetto.PerfettoHelper: java.lang.String getPerfettoTmpOutputFilePath()>();

        $r5 = new java.io.File;

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>(r1);

        r3 = $r5;

        r4 = virtualinvoke r3.<java.io.File: java.lang.String getParent()>();

        if r4 == null goto label1;

        $r16 = new java.io.File;

        specialinvoke $r16.<java.io.File: void <init>(java.lang.String)>(r4);

        r24 = $r16;

        $z1 = virtualinvoke r24.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label1;

        z0 = virtualinvoke r24.<java.io.File: boolean mkdirs()>();

        if z0 != 0 goto label1;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Result output directory ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not created successfully.");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PerfettoCapture", $r21);

        return 0;

     label1:
        $r25 = <androidx.benchmark.Shell: androidx.benchmark.Shell INSTANCE>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mv ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        r32 = virtualinvoke $r25.<androidx.benchmark.Shell: java.lang.String executeCommand(java.lang.String)>($r31);

        $r33 = (java.lang.CharSequence) r32;

        $i3 = interfaceinvoke $r33.<java.lang.CharSequence: int length()>();

        if $i3 <= 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        if $z2 == 0 goto label5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n                        Unable to move perfetto output file from ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n                        to ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" due to ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".\n                    ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = staticinvoke <kotlin.text.StringsKt: java.lang.String trimIndent(java.lang.String)>($r14);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PerfettoCapture", $r15);

        return 0;

     label4:
        $r22 := @caughtexception;

        r34 = $r22;

        $r23 = (java.lang.Throwable) r34;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PerfettoCapture", "Unable to move the perfetto trace file to destination file.", $r23);

        return 0;

     label5:
        return 1;

        catch java.io.IOException from label1 to label4 with label4;
    }

    public void <init>()
    {
        androidx.benchmark.perfetto.PerfettoHelper r0;

        r0 := @this: androidx.benchmark.perfetto.PerfettoHelper;

        specialinvoke r0.<androidx.benchmark.perfetto.PerfettoHelper: void <init>(boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0, 1, null);

        return;
    }

    public static final kotlin.Lazy access$getUnbundledPerfettoShellPath$delegate$cp()
    {
        kotlin.Lazy $r0;

        $r0 = <androidx.benchmark.perfetto.PerfettoHelper: kotlin.Lazy unbundledPerfettoShellPath$delegate>;

        return $r0;
    }

    public static final java.util.Set access$getSUPPORTED_64_ABIS$cp()
    {
        java.util.Set $r0;

        $r0 = <androidx.benchmark.perfetto.PerfettoHelper: java.util.Set SUPPORTED_64_ABIS>;

        return $r0;
    }

    public static final java.util.Set access$getSUPPORTED_32_ABIS$cp()
    {
        java.util.Set $r0;

        $r0 = <androidx.benchmark.perfetto.PerfettoHelper: java.util.Set SUPPORTED_32_ABIS>;

        return $r0;
    }

    static void <clinit>()
    {
        androidx.benchmark.perfetto.PerfettoHelper$Companion $r0;
        java.util.Set $r1, $r2;
        androidx.benchmark.perfetto.PerfettoHelper$Companion$unbundledPerfettoShellPath$2 $r3;
        kotlin.jvm.functions.Function0 $r4;
        kotlin.Lazy $r5;
        java.lang.String[] r6, r7;

        $r0 = new androidx.benchmark.perfetto.PerfettoHelper$Companion;

        specialinvoke $r0.<androidx.benchmark.perfetto.PerfettoHelper$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.benchmark.perfetto.PerfettoHelper: androidx.benchmark.perfetto.PerfettoHelper$Companion Companion> = $r0;

        r6 = newarray (java.lang.String)[2];

        r6[0] = "arm64-v8a";

        r6[1] = "x86_64";

        $r1 = staticinvoke <kotlin.collections.SetsKt: java.util.Set setOf(java.lang.Object[])>(r6);

        <androidx.benchmark.perfetto.PerfettoHelper: java.util.Set SUPPORTED_64_ABIS> = $r1;

        r7 = newarray (java.lang.String)[2];

        r7[0] = "armeabi";

        r7[1] = "x86";

        $r2 = staticinvoke <kotlin.collections.SetsKt: java.util.Set setOf(java.lang.Object[])>(r7);

        <androidx.benchmark.perfetto.PerfettoHelper: java.util.Set SUPPORTED_32_ABIS> = $r2;

        $r3 = <androidx.benchmark.perfetto.PerfettoHelper$Companion$unbundledPerfettoShellPath$2: androidx.benchmark.perfetto.PerfettoHelper$Companion$unbundledPerfettoShellPath$2 INSTANCE>;

        $r4 = (kotlin.jvm.functions.Function0) $r3;

        $r5 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r4);

        <androidx.benchmark.perfetto.PerfettoHelper: kotlin.Lazy unbundledPerfettoShellPath$delegate> = $r5;

        return;
    }

androidx.benchmark.perfetto.PerfettoHelper$Companion$unbundledPerfettoShellPath$2
<androidx.benchmark.perfetto.PerfettoHelper$Companion$unbundledPerfettoShellPath$2: androidx.benchmark.perfetto.PerfettoHelper$Companion$unbundledPerfettoShellPath$2 INSTANCE>
    void <init>()
    {
        androidx.benchmark.perfetto.PerfettoHelper$Companion$unbundledPerfettoShellPath$2 r0;

        r0 := @this: androidx.benchmark.perfetto.PerfettoHelper$Companion$unbundledPerfettoShellPath$2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final java.lang.String invoke()
    {
        androidx.benchmark.perfetto.PerfettoHelper$Companion$unbundledPerfettoShellPath$2 r0;
        androidx.benchmark.perfetto.PerfettoHelper$Companion $r1;
        java.lang.String $r2;

        r0 := @this: androidx.benchmark.perfetto.PerfettoHelper$Companion$unbundledPerfettoShellPath$2;

        $r1 = <androidx.benchmark.perfetto.PerfettoHelper: androidx.benchmark.perfetto.PerfettoHelper$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.benchmark.perfetto.PerfettoHelper$Companion: java.lang.String createExecutable(java.lang.String)>("tracebox");

        return $r2;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.benchmark.perfetto.PerfettoHelper$Companion$unbundledPerfettoShellPath$2 r0;
        java.lang.String $r1;

        r0 := @this: androidx.benchmark.perfetto.PerfettoHelper$Companion$unbundledPerfettoShellPath$2;

        $r1 = virtualinvoke r0.<androidx.benchmark.perfetto.PerfettoHelper$Companion$unbundledPerfettoShellPath$2: java.lang.String invoke()>();

        return $r1;
    }

    static void <clinit>()
    {
        androidx.benchmark.perfetto.PerfettoHelper$Companion$unbundledPerfettoShellPath$2 $r0;

        $r0 = new androidx.benchmark.perfetto.PerfettoHelper$Companion$unbundledPerfettoShellPath$2;

        specialinvoke $r0.<androidx.benchmark.perfetto.PerfettoHelper$Companion$unbundledPerfettoShellPath$2: void <init>()>();

        <androidx.benchmark.perfetto.PerfettoHelper$Companion$unbundledPerfettoShellPath$2: androidx.benchmark.perfetto.PerfettoHelper$Companion$unbundledPerfettoShellPath$2 INSTANCE> = $r0;

        return;
    }

androidx.benchmark.perfetto.PerfettoHelper$Companion
    private void <init>()
    {
        androidx.benchmark.perfetto.PerfettoHelper$Companion r0;

        r0 := @this: androidx.benchmark.perfetto.PerfettoHelper$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final boolean isAbiSupported()
    {
        androidx.benchmark.perfetto.PerfettoHelper$Companion r0;
        java.lang.Object[] $r1, r11, r15;
        java.lang.String $r2, $r3, $r9, r13, r17;
        java.lang.CharSequence $r4, $r5;
        boolean $z0, $z1, $z2, $z5, $z8, $z9;
        java.util.Set $r6, $r7;
        java.lang.String[] $r8, $r10, $r14;
        int i1, i2, i3, i4;
        java.lang.Object r12, r16;

        r0 := @this: androidx.benchmark.perfetto.PerfettoHelper$Companion;

        $r8 = <android.os.Build: java.lang.String[] SUPPORTED_ABIS>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "SUPPORTED_ABIS");

        $r1 = (java.lang.Object[]) $r8;

        $r2 = staticinvoke <kotlin.collections.ArraysKt: java.lang.String joinToString$default(java.lang.Object[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r1, null, null, null, 0, null, null, 63, null);

        $r3 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Supported ABIs: ", $r2);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PerfettoCapture", $r3);

        $r9 = <android.os.Build: java.lang.String MODEL>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r9, "MODEL");

        $r5 = (java.lang.CharSequence) $r9;

        $r4 = (java.lang.CharSequence) "Cuttlefish";

        $z0 = staticinvoke <kotlin.text.StringsKt: boolean contains$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)>($r5, $r4, 0, 2, null);

        if $z0 != 0 goto label8;

        $r10 = <android.os.Build: java.lang.String[] SUPPORTED_64_BIT_ABIS>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r10, "SUPPORTED_64_BIT_ABIS");

        r11 = (java.lang.Object[]) $r10;

        i1 = 0;

        i2 = lengthof r11;

     label1:
        if i1 >= i2 goto label2;

        r12 = r11[i1];

        i1 = i1 + 1;

        r13 = (java.lang.String) r12;

        $r7 = staticinvoke <androidx.benchmark.perfetto.PerfettoHelper: java.util.Set access$getSUPPORTED_64_ABIS$cp()>();

        $z2 = interfaceinvoke $r7.<java.util.Set: boolean contains(java.lang.Object)>(r13);

        if $z2 == 0 goto label1;

        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        if $z5 != 0 goto label7;

        $r14 = <android.os.Build: java.lang.String[] SUPPORTED_32_BIT_ABIS>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r14, "SUPPORTED_32_BIT_ABIS");

        r15 = (java.lang.Object[]) $r14;

        i3 = 0;

        i4 = lengthof r15;

     label4:
        if i3 >= i4 goto label5;

        r16 = r15[i3];

        i3 = i3 + 1;

        r17 = (java.lang.String) r16;

        $r6 = staticinvoke <androidx.benchmark.perfetto.PerfettoHelper: java.util.Set access$getSUPPORTED_32_ABIS$cp()>();

        $z1 = interfaceinvoke $r6.<java.util.Set: boolean contains(java.lang.Object)>(r17);

        if $z1 == 0 goto label4;

        $z8 = 1;

        goto label6;

     label5:
        $z8 = 0;

     label6:
        if $z8 == 0 goto label8;

     label7:
        $z9 = 1;

        goto label9;

     label8:
        $z9 = 0;

     label9:
        return $z9;
    }

    public final java.lang.String getUnbundledPerfettoShellPath()
    {
        androidx.benchmark.perfetto.PerfettoHelper$Companion r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: androidx.benchmark.perfetto.PerfettoHelper$Companion;

        r1 = staticinvoke <androidx.benchmark.perfetto.PerfettoHelper: kotlin.Lazy access$getUnbundledPerfettoShellPath$delegate$cp()>();

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    public final java.lang.String createExecutable(java.lang.String)
    {
        androidx.benchmark.perfetto.PerfettoHelper$Companion r0, $r5;
        java.lang.String r1, r2, r3, $r10, $r13, $r18, $r21, r28, r33, r37, r41, $r51;
        androidx.benchmark.UserspaceTracing $r4, $r23, $r54;
        boolean $z1, $z2, $z3, $z4, $z5, $z9, $z12, $z15, $z18;
        java.lang.IllegalStateException $r6, $r14;
        java.lang.StringBuilder $r7, $r8, $r11, $r12, $r15, $r16, $r19, $r20, $r47, $r48, $r49, $r50;
        java.lang.Object[] $r9, $r17, r26, r31, r35, r39;
        java.lang.Throwable $r22;
        java.lang.String[] r24, $r25, $r30, $r34, $r38, $r42;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        java.lang.Object r27, r32, r36, r40;
        java.io.Serializable $r29, r43;
        android.app.Instrumentation $r44;
        android.content.Context $r45;
        android.content.res.AssetManager $r46;
        java.io.InputStream r52;
        androidx.benchmark.Shell $r53;

        r0 := @this: androidx.benchmark.perfetto.PerfettoHelper$Companion;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "tool");

        r2 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("create executable: ", r1);

        $r4 = <androidx.benchmark.UserspaceTracing: androidx.benchmark.UserspaceTracing INSTANCE>;

        staticinvoke <androidx.benchmark.UserspaceTracing: void beginSection$default(androidx.benchmark.UserspaceTracing,java.lang.String,long,int,java.lang.Object)>($r4, r2, 0L, 2, null);

     label01:
        $r5 = <androidx.benchmark.perfetto.PerfettoHelper: androidx.benchmark.perfetto.PerfettoHelper$Companion Companion>;

        $z1 = virtualinvoke $r5.<androidx.benchmark.perfetto.PerfettoHelper$Companion: boolean isAbiSupported()>();

        if $z1 != 0 goto label02;

        $r14 = new java.lang.IllegalStateException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported ABI (");

        r24 = <android.os.Build: java.lang.String[] SUPPORTED_ABIS>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r24, "SUPPORTED_ABIS");

        $r17 = (java.lang.Object[]) r24;

        $r18 = staticinvoke <kotlin.collections.ArraysKt: java.lang.String joinToString$default(java.lang.Object[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r17, null, null, null, 0, null, null, 63, null);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r21);

        throw $r14;

     label02:
        $r25 = <android.os.Build: java.lang.String[] SUPPORTED_64_BIT_ABIS>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r25, "SUPPORTED_64_BIT_ABIS");

        r26 = (java.lang.Object[]) $r25;

        i0 = 0;

        i1 = lengthof r26;

     label03:
        if i0 >= i1 goto label04;

        r27 = r26[i0];

        i0 = i0 + 1;

        r28 = (java.lang.String) r27;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r28, "it");

        $z5 = staticinvoke <kotlin.text.StringsKt: boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)>(r28, "x86_64", 0, 2, null);

        if $z5 == 0 goto label03;

        $z9 = 1;

        goto label05;

     label04:
        $z9 = 0;

     label05:
        if $z9 == 0 goto label06;

        $r29 = (java.io.Serializable) "x86_64";

        goto label19;

     label06:
        $r30 = <android.os.Build: java.lang.String[] SUPPORTED_32_BIT_ABIS>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r30, "SUPPORTED_32_BIT_ABIS");

        r31 = (java.lang.Object[]) $r30;

        i2 = 0;

        i3 = lengthof r31;

     label07:
        if i2 >= i3 goto label08;

        r32 = r31[i2];

        i2 = i2 + 1;

        r33 = (java.lang.String) r32;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r33, "it");

        $z4 = staticinvoke <kotlin.text.StringsKt: boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)>(r33, "x86", 0, 2, null);

        if $z4 == 0 goto label07;

        $z12 = 1;

        goto label09;

     label08:
        $z12 = 0;

     label09:
        if $z12 == 0 goto label10;

        $r29 = (java.io.Serializable) "x86";

        goto label19;

     label10:
        $r34 = <android.os.Build: java.lang.String[] SUPPORTED_64_BIT_ABIS>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r34, "SUPPORTED_64_BIT_ABIS");

        r35 = (java.lang.Object[]) $r34;

        i4 = 0;

        i5 = lengthof r35;

     label11:
        if i4 >= i5 goto label12;

        r36 = r35[i4];

        i4 = i4 + 1;

        r37 = (java.lang.String) r36;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r37, "it");

        $z3 = staticinvoke <kotlin.text.StringsKt: boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)>(r37, "arm64", 0, 2, null);

        if $z3 == 0 goto label11;

        $z15 = 1;

        goto label13;

     label12:
        $z15 = 0;

     label13:
        if $z15 == 0 goto label14;

        $r29 = (java.io.Serializable) "aarch64";

        goto label19;

     label14:
        $r38 = <android.os.Build: java.lang.String[] SUPPORTED_32_BIT_ABIS>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r38, "SUPPORTED_32_BIT_ABIS");

        r39 = (java.lang.Object[]) $r38;

        i6 = 0;

        i7 = lengthof r39;

     label15:
        if i6 >= i7 goto label16;

        r40 = r39[i6];

        i6 = i6 + 1;

        r41 = (java.lang.String) r40;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r41, "it");

        $z2 = staticinvoke <kotlin.text.StringsKt: boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)>(r41, "armeabi", 0, 2, null);

        if $z2 == 0 goto label15;

        $z18 = 1;

        goto label17;

     label16:
        $z18 = 0;

     label17:
        if $z18 == 0 goto label18;

        $r29 = (java.io.Serializable) "arm";

        goto label19;

     label18:
        $r6 = new java.lang.IllegalStateException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported ABI (");

        $r42 = <android.os.Build: java.lang.String[] SUPPORTED_ABIS>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r42, "SUPPORTED_ABIS");

        $r9 = (java.lang.Object[]) $r42;

        $r10 = staticinvoke <kotlin.collections.ArraysKt: java.lang.String joinToString$default(java.lang.Object[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r9, null, null, null, 0, null, null, 63, null);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        $r29 = (java.io.Serializable) $r6;

     label19:
        r43 = $r29;

        $r44 = staticinvoke <androidx.test.platform.app.InstrumentationRegistry: android.app.Instrumentation getInstrumentation()>();

        $r45 = virtualinvoke $r44.<android.app.Instrumentation: android.content.Context getContext()>();

        $r46 = virtualinvoke $r45.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(95);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r43);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        r52 = virtualinvoke $r46.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r51);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r52, "instrumentation.context.\u2026s.open(\"${tool}_$suffix\")");

        $r53 = <androidx.benchmark.Shell: androidx.benchmark.Shell INSTANCE>;

        r3 = virtualinvoke $r53.<androidx.benchmark.Shell: java.lang.String createRunnableExecutable(java.lang.String,java.io.InputStream)>(r1, r52);

     label20:
        $r54 = <androidx.benchmark.UserspaceTracing: androidx.benchmark.UserspaceTracing INSTANCE>;

        staticinvoke <androidx.benchmark.UserspaceTracing: void endSection$default(androidx.benchmark.UserspaceTracing,long,int,java.lang.Object)>($r54, 0L, 1, null);

        return r3;

     label21:
        $r22 := @caughtexception;

     label22:
        $r23 = <androidx.benchmark.UserspaceTracing: androidx.benchmark.UserspaceTracing INSTANCE>;

        staticinvoke <androidx.benchmark.UserspaceTracing: void endSection$default(androidx.benchmark.UserspaceTracing,long,int,java.lang.Object)>($r23, 0L, 1, null);

        throw $r22;

        catch java.lang.Throwable from label01 to label20 with label21;
        catch java.lang.Throwable from label21 to label22 with label21;
    }

    public final void stopAllPerfettoProcesses()
    {
        androidx.benchmark.perfetto.PerfettoHelper$Companion r0;
        java.util.Iterator r1;
        java.lang.Object r2;
        java.lang.String r3, $r6, $r7;
        java.util.List $r4;
        boolean $z2;
        int $i0;
        androidx.benchmark.Shell $r5, $r9;
        java.lang.String[] $r10;
        java.lang.Iterable $r11;

        r0 := @this: androidx.benchmark.perfetto.PerfettoHelper$Companion;

        $r10 = newarray (java.lang.String)[2];

        $r10[0] = "perfetto";

        $r10[1] = "tracebox";

        $r4 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object[])>($r10);

        $r11 = (java.lang.Iterable) $r4;

        r1 = interfaceinvoke $r11.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) r2;

        $r9 = <androidx.benchmark.Shell: androidx.benchmark.Shell INSTANCE>;

        virtualinvoke $r9.<androidx.benchmark.Shell: void terminateProcessesAndWait(long,int,java.lang.String)>(100L, 30, r3);

        goto label1;

     label2:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 29 goto label3;

        $r5 = <androidx.benchmark.Shell: androidx.benchmark.Shell INSTANCE>;

        $r6 = virtualinvoke r0.<androidx.benchmark.perfetto.PerfettoHelper$Companion: java.lang.String getUnbundledPerfettoShellPath()>();

        $r7 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>($r6, " traced_probes --cleanup-after-crash");

        virtualinvoke $r5.<androidx.benchmark.Shell: java.lang.String executeCommand(java.lang.String)>($r7);

     label3:
        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.benchmark.perfetto.PerfettoHelper$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.benchmark.perfetto.PerfettoHelper$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.benchmark.perfetto.PerfettoHelper$Companion: void <init>()>();

        return;
    }

