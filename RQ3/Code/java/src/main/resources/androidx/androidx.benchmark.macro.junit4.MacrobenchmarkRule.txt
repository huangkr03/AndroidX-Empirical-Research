androidx.benchmark.macro.junit4.MacrobenchmarkRule
<androidx.benchmark.macro.junit4.MacrobenchmarkRule: org.junit.runner.Description currentDescription>
    public void <init>()
    {
        androidx.benchmark.macro.junit4.MacrobenchmarkRule r0;

        r0 := @this: androidx.benchmark.macro.junit4.MacrobenchmarkRule;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final void measureRepeated(java.lang.String, java.util.List, androidx.benchmark.macro.CompilationMode, androidx.benchmark.macro.StartupMode, int, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        androidx.benchmark.macro.junit4.MacrobenchmarkRule r0;
        java.lang.String r1, $r7, r12, r14;
        java.util.List r2;
        androidx.benchmark.macro.CompilationMode r3;
        androidx.benchmark.macro.StartupMode r4;
        int i0;
        kotlin.jvm.functions.Function1 r5, r6;
        org.junit.runner.Description $r10, $r11, $r13;

        r0 := @this: androidx.benchmark.macro.junit4.MacrobenchmarkRule;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: androidx.benchmark.macro.CompilationMode;

        r4 := @parameter3: androidx.benchmark.macro.StartupMode;

        i0 := @parameter4: int;

        r5 := @parameter5: kotlin.jvm.functions.Function1;

        r6 := @parameter6: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "packageName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "metrics");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "compilationMode");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "setupBlock");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r6, "measureBlock");

        $r10 = r0.<androidx.benchmark.macro.junit4.MacrobenchmarkRule: org.junit.runner.Description currentDescription>;

        if $r10 != null goto label1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("currentDescription");

        $r10 = null;

     label1:
        $r7 = specialinvoke r0.<androidx.benchmark.macro.junit4.MacrobenchmarkRule: java.lang.String toUniqueName(org.junit.runner.Description)>($r10);

        $r11 = r0.<androidx.benchmark.macro.junit4.MacrobenchmarkRule: org.junit.runner.Description currentDescription>;

        if $r11 != null goto label2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("currentDescription");

        $r11 = null;

     label2:
        r12 = virtualinvoke $r11.<org.junit.runner.Description: java.lang.String getClassName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r12, "currentDescription.className");

        $r13 = r0.<androidx.benchmark.macro.junit4.MacrobenchmarkRule: org.junit.runner.Description currentDescription>;

        if $r13 != null goto label3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("currentDescription");

        $r13 = null;

     label3:
        r14 = virtualinvoke $r13.<org.junit.runner.Description: java.lang.String getMethodName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r14, "currentDescription.methodName");

        staticinvoke <androidx.benchmark.macro.MacrobenchmarkKt: void macrobenchmarkWithStartupMode(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,androidx.benchmark.macro.CompilationMode,int,androidx.benchmark.macro.StartupMode,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)>($r7, r12, r14, r1, r2, r3, i0, r4, r5, r6);

        return;
    }

    public static void measureRepeated$default(androidx.benchmark.macro.junit4.MacrobenchmarkRule, java.lang.String, java.util.List, androidx.benchmark.macro.CompilationMode, androidx.benchmark.macro.StartupMode, int, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        androidx.benchmark.macro.junit4.MacrobenchmarkRule r0;
        java.lang.String r1;
        java.util.List r2;
        int i0, i1, $i2, $i3, $i4;
        kotlin.jvm.functions.Function1 r3, r8;
        java.lang.Object r4;
        androidx.benchmark.macro.junit4.MacrobenchmarkRule$measureRepeated$1 $r5;
        androidx.benchmark.macro.CompilationMode r6;
        androidx.benchmark.macro.StartupMode r7;

        r0 := @parameter0: androidx.benchmark.macro.junit4.MacrobenchmarkRule;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.List;

        r6 := @parameter3: androidx.benchmark.macro.CompilationMode;

        r7 := @parameter4: androidx.benchmark.macro.StartupMode;

        i0 := @parameter5: int;

        r8 := @parameter6: kotlin.jvm.functions.Function1;

        r3 := @parameter7: kotlin.jvm.functions.Function1;

        i1 := @parameter8: int;

        r4 := @parameter9: java.lang.Object;

        $i2 = i1 & 4;

        if $i2 == 0 goto label1;

        r6 = <androidx.benchmark.macro.CompilationMode: androidx.benchmark.macro.CompilationMode DEFAULT>;

     label1:
        $i3 = i1 & 8;

        if $i3 == 0 goto label2;

        r7 = null;

     label2:
        $i4 = i1 & 32;

        if $i4 == 0 goto label3;

        $r5 = <androidx.benchmark.macro.junit4.MacrobenchmarkRule$measureRepeated$1: androidx.benchmark.macro.junit4.MacrobenchmarkRule$measureRepeated$1 INSTANCE>;

        r8 = (kotlin.jvm.functions.Function1) $r5;

     label3:
        virtualinvoke r0.<androidx.benchmark.macro.junit4.MacrobenchmarkRule: void measureRepeated(java.lang.String,java.util.List,androidx.benchmark.macro.CompilationMode,androidx.benchmark.macro.StartupMode,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)>(r1, r2, r6, r7, i0, r8, r3);

        return;
    }

    public org.junit.runners.model.Statement apply(org.junit.runners.model.Statement, org.junit.runner.Description)
    {
        androidx.benchmark.macro.junit4.MacrobenchmarkRule r0;
        org.junit.runners.model.Statement r1, r3;
        org.junit.runner.Description r2;
        java.lang.String[] r4;
        androidx.test.rule.GrantPermissionRule $r5;
        org.junit.rules.TestRule $r6, $r8;
        org.junit.rules.RuleChain $r7, $r9;

        r0 := @this: androidx.benchmark.macro.junit4.MacrobenchmarkRule;

        r1 := @parameter0: org.junit.runners.model.Statement;

        r2 := @parameter1: org.junit.runner.Description;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "base");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "description");

        r4 = newarray (java.lang.String)[1];

        r4[0] = "android.permission.WRITE_EXTERNAL_STORAGE";

        $r5 = staticinvoke <androidx.test.rule.GrantPermissionRule: androidx.test.rule.GrantPermissionRule grant(java.lang.String[])>(r4);

        $r6 = (org.junit.rules.TestRule) $r5;

        $r7 = staticinvoke <org.junit.rules.RuleChain: org.junit.rules.RuleChain outerRule(org.junit.rules.TestRule)>($r6);

        $r8 = dynamicinvoke "apply" <org.junit.rules.TestRule (androidx.benchmark.macro.junit4.MacrobenchmarkRule)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: org.junit.runners.model.Statement __METHODTYPE__(org.junit.runners.model.Statement,org.junit.runner.Description), methodhandle: "REF_INVOKE_VIRTUAL" <androidx.benchmark.macro.junit4.MacrobenchmarkRule: androidx.benchmark.macro.junit4.MacrobenchmarkRule$applyInternal$1 applyInternal(org.junit.runners.model.Statement,org.junit.runner.Description)>, methodtype: org.junit.runners.model.Statement __METHODTYPE__(org.junit.runners.model.Statement,org.junit.runner.Description));

        $r9 = virtualinvoke $r7.<org.junit.rules.RuleChain: org.junit.rules.RuleChain around(org.junit.rules.TestRule)>($r8);

        r3 = virtualinvoke $r9.<org.junit.rules.RuleChain: org.junit.runners.model.Statement apply(org.junit.runners.model.Statement,org.junit.runner.Description)>(r1, r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "outerRule(GrantPermissio\u2026.apply(base, description)");

        return r3;
    }

    private final androidx.benchmark.macro.junit4.MacrobenchmarkRule$applyInternal$1 applyInternal(org.junit.runners.model.Statement, org.junit.runner.Description)
    {
        androidx.benchmark.macro.junit4.MacrobenchmarkRule r0;
        org.junit.runners.model.Statement r1;
        org.junit.runner.Description r2;
        androidx.benchmark.macro.junit4.MacrobenchmarkRule$applyInternal$1 $r3;

        r0 := @this: androidx.benchmark.macro.junit4.MacrobenchmarkRule;

        r1 := @parameter0: org.junit.runners.model.Statement;

        r2 := @parameter1: org.junit.runner.Description;

        $r3 = new androidx.benchmark.macro.junit4.MacrobenchmarkRule$applyInternal$1;

        specialinvoke $r3.<androidx.benchmark.macro.junit4.MacrobenchmarkRule$applyInternal$1: void <init>(androidx.benchmark.macro.junit4.MacrobenchmarkRule,org.junit.runner.Description,org.junit.runners.model.Statement)>(r0, r2, r1);

        return $r3;
    }

    private final java.lang.String toUniqueName(org.junit.runner.Description)
    {
        androidx.benchmark.macro.junit4.MacrobenchmarkRule r0;
        org.junit.runner.Description $r1;
        java.lang.StringBuilder $r2, $r5, $r6, $r8;
        java.lang.Class $r3;
        java.lang.String $r4, $r7, $r9;

        r0 := @this: androidx.benchmark.macro.junit4.MacrobenchmarkRule;

        $r1 := @parameter0: org.junit.runner.Description;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<org.junit.runner.Description: java.lang.Class getTestClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(95);

        $r7 = virtualinvoke $r1.<org.junit.runner.Description: java.lang.String getMethodName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public final void measureRepeated(java.lang.String, java.util.List, androidx.benchmark.macro.CompilationMode, androidx.benchmark.macro.StartupMode, int, kotlin.jvm.functions.Function1)
    {
        androidx.benchmark.macro.junit4.MacrobenchmarkRule r0;
        java.lang.String r1;
        java.util.List r2;
        androidx.benchmark.macro.CompilationMode r3;
        androidx.benchmark.macro.StartupMode r4;
        int i0;
        kotlin.jvm.functions.Function1 r5;

        r0 := @this: androidx.benchmark.macro.junit4.MacrobenchmarkRule;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: androidx.benchmark.macro.CompilationMode;

        r4 := @parameter3: androidx.benchmark.macro.StartupMode;

        i0 := @parameter4: int;

        r5 := @parameter5: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "packageName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "metrics");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "compilationMode");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "measureBlock");

        staticinvoke <androidx.benchmark.macro.junit4.MacrobenchmarkRule: void measureRepeated$default(androidx.benchmark.macro.junit4.MacrobenchmarkRule,java.lang.String,java.util.List,androidx.benchmark.macro.CompilationMode,androidx.benchmark.macro.StartupMode,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object)>(r0, r1, r2, r3, r4, i0, null, r5, 32, null);

        return;
    }

    public final void measureRepeated(java.lang.String, java.util.List, androidx.benchmark.macro.CompilationMode, int, kotlin.jvm.functions.Function1)
    {
        androidx.benchmark.macro.junit4.MacrobenchmarkRule r0;
        java.lang.String r1;
        java.util.List r2;
        androidx.benchmark.macro.CompilationMode r3;
        int i0;
        kotlin.jvm.functions.Function1 r4;

        r0 := @this: androidx.benchmark.macro.junit4.MacrobenchmarkRule;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: androidx.benchmark.macro.CompilationMode;

        i0 := @parameter3: int;

        r4 := @parameter4: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "packageName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "metrics");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "compilationMode");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "measureBlock");

        staticinvoke <androidx.benchmark.macro.junit4.MacrobenchmarkRule: void measureRepeated$default(androidx.benchmark.macro.junit4.MacrobenchmarkRule,java.lang.String,java.util.List,androidx.benchmark.macro.CompilationMode,androidx.benchmark.macro.StartupMode,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object)>(r0, r1, r2, r3, null, i0, null, r4, 40, null);

        return;
    }

    public final void measureRepeated(java.lang.String, java.util.List, int, kotlin.jvm.functions.Function1)
    {
        androidx.benchmark.macro.junit4.MacrobenchmarkRule r0;
        java.lang.String r1;
        java.util.List r2;
        int i0;
        kotlin.jvm.functions.Function1 r3;

        r0 := @this: androidx.benchmark.macro.junit4.MacrobenchmarkRule;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        r3 := @parameter3: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "packageName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "metrics");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "measureBlock");

        staticinvoke <androidx.benchmark.macro.junit4.MacrobenchmarkRule: void measureRepeated$default(androidx.benchmark.macro.junit4.MacrobenchmarkRule,java.lang.String,java.util.List,androidx.benchmark.macro.CompilationMode,androidx.benchmark.macro.StartupMode,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object)>(r0, r1, r2, null, null, i0, null, r3, 44, null);

        return;
    }

    public static final void access$setCurrentDescription$p(androidx.benchmark.macro.junit4.MacrobenchmarkRule, org.junit.runner.Description)
    {
        androidx.benchmark.macro.junit4.MacrobenchmarkRule $r0;
        org.junit.runner.Description r1;

        $r0 := @parameter0: androidx.benchmark.macro.junit4.MacrobenchmarkRule;

        r1 := @parameter1: org.junit.runner.Description;

        $r0.<androidx.benchmark.macro.junit4.MacrobenchmarkRule: org.junit.runner.Description currentDescription> = r1;

        return;
    }

androidx.benchmark.macro.junit4.MacrobenchmarkRule$applyInternal$1
<androidx.benchmark.macro.junit4.MacrobenchmarkRule$applyInternal$1: androidx.benchmark.macro.junit4.MacrobenchmarkRule this$0>
<androidx.benchmark.macro.junit4.MacrobenchmarkRule$applyInternal$1: org.junit.runner.Description $description>
<androidx.benchmark.macro.junit4.MacrobenchmarkRule$applyInternal$1: org.junit.runners.model.Statement $base>
    void <init>(androidx.benchmark.macro.junit4.MacrobenchmarkRule, org.junit.runner.Description, org.junit.runners.model.Statement)
    {
        androidx.benchmark.macro.junit4.MacrobenchmarkRule$applyInternal$1 r0;
        androidx.benchmark.macro.junit4.MacrobenchmarkRule $r1;
        org.junit.runner.Description $r2;
        org.junit.runners.model.Statement $r3;

        r0 := @this: androidx.benchmark.macro.junit4.MacrobenchmarkRule$applyInternal$1;

        $r1 := @parameter0: androidx.benchmark.macro.junit4.MacrobenchmarkRule;

        $r2 := @parameter1: org.junit.runner.Description;

        $r3 := @parameter2: org.junit.runners.model.Statement;

        r0.<androidx.benchmark.macro.junit4.MacrobenchmarkRule$applyInternal$1: androidx.benchmark.macro.junit4.MacrobenchmarkRule this$0> = $r1;

        r0.<androidx.benchmark.macro.junit4.MacrobenchmarkRule$applyInternal$1: org.junit.runner.Description $description> = $r2;

        r0.<androidx.benchmark.macro.junit4.MacrobenchmarkRule$applyInternal$1: org.junit.runners.model.Statement $base> = $r3;

        specialinvoke r0.<org.junit.runners.model.Statement: void <init>()>();

        return;
    }

    public void evaluate()
    {
        androidx.benchmark.macro.junit4.MacrobenchmarkRule$applyInternal$1 r0;
        androidx.benchmark.Arguments $r1;
        java.util.Set $r2;
        androidx.benchmark.Arguments$RuleType $r3;
        boolean $z0;
        org.junit.runner.Description $r4;
        androidx.benchmark.macro.junit4.MacrobenchmarkRule $r5;
        org.junit.runners.model.Statement $r6;

        r0 := @this: androidx.benchmark.macro.junit4.MacrobenchmarkRule$applyInternal$1;

        $r1 = <androidx.benchmark.Arguments: androidx.benchmark.Arguments INSTANCE>;

        $r2 = virtualinvoke $r1.<androidx.benchmark.Arguments: java.util.Set getEnabledRules()>();

        $r3 = <androidx.benchmark.Arguments$RuleType: androidx.benchmark.Arguments$RuleType Macrobenchmark>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        staticinvoke <org.junit.Assume: void assumeTrue(boolean)>($z0);

        $r5 = r0.<androidx.benchmark.macro.junit4.MacrobenchmarkRule$applyInternal$1: androidx.benchmark.macro.junit4.MacrobenchmarkRule this$0>;

        $r4 = r0.<androidx.benchmark.macro.junit4.MacrobenchmarkRule$applyInternal$1: org.junit.runner.Description $description>;

        staticinvoke <androidx.benchmark.macro.junit4.MacrobenchmarkRule: void access$setCurrentDescription$p(androidx.benchmark.macro.junit4.MacrobenchmarkRule,org.junit.runner.Description)>($r5, $r4);

        $r6 = r0.<androidx.benchmark.macro.junit4.MacrobenchmarkRule$applyInternal$1: org.junit.runners.model.Statement $base>;

        virtualinvoke $r6.<org.junit.runners.model.Statement: void evaluate()>();

        return;
    }

androidx.benchmark.macro.junit4.MacrobenchmarkRule$measureRepeated$1
<androidx.benchmark.macro.junit4.MacrobenchmarkRule$measureRepeated$1: androidx.benchmark.macro.junit4.MacrobenchmarkRule$measureRepeated$1 INSTANCE>
    void <init>()
    {
        androidx.benchmark.macro.junit4.MacrobenchmarkRule$measureRepeated$1 r0;

        r0 := @this: androidx.benchmark.macro.junit4.MacrobenchmarkRule$measureRepeated$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.benchmark.macro.MacrobenchmarkScope)
    {
        androidx.benchmark.macro.junit4.MacrobenchmarkRule$measureRepeated$1 r0;
        androidx.benchmark.macro.MacrobenchmarkScope $r1;

        r0 := @this: androidx.benchmark.macro.junit4.MacrobenchmarkRule$measureRepeated$1;

        $r1 := @parameter0: androidx.benchmark.macro.MacrobenchmarkScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$null");

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.benchmark.macro.junit4.MacrobenchmarkRule$measureRepeated$1 r0;
        java.lang.Object r1;
        androidx.benchmark.macro.MacrobenchmarkScope $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.benchmark.macro.junit4.MacrobenchmarkRule$measureRepeated$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.benchmark.macro.MacrobenchmarkScope) r1;

        virtualinvoke r0.<androidx.benchmark.macro.junit4.MacrobenchmarkRule$measureRepeated$1: void invoke(androidx.benchmark.macro.MacrobenchmarkScope)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

    static void <clinit>()
    {
        androidx.benchmark.macro.junit4.MacrobenchmarkRule$measureRepeated$1 $r0;

        $r0 = new androidx.benchmark.macro.junit4.MacrobenchmarkRule$measureRepeated$1;

        specialinvoke $r0.<androidx.benchmark.macro.junit4.MacrobenchmarkRule$measureRepeated$1: void <init>()>();

        <androidx.benchmark.macro.junit4.MacrobenchmarkRule$measureRepeated$1: androidx.benchmark.macro.junit4.MacrobenchmarkRule$measureRepeated$1 INSTANCE> = $r0;

        return;
    }

