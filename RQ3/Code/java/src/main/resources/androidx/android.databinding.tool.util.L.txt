android.databinding.tool.util.L
<android.databinding.tool.util.L: boolean sEnableDebug>
<android.databinding.tool.util.L: android.databinding.tool.util.L$Client sSystemClient>
<android.databinding.tool.util.L: android.databinding.tool.util.L$Client sClient>
    public void <init>()
    {
        android.databinding.tool.util.L r0;

        r0 := @this: android.databinding.tool.util.L;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void setClient(android.databinding.tool.util.L$Client)
    {
        android.databinding.tool.util.L$Client r0, $r1;

        r0 := @parameter0: android.databinding.tool.util.L$Client;

        if r0 != null goto label1;

        $r1 = <android.databinding.tool.util.L: android.databinding.tool.util.L$Client sSystemClient>;

        <android.databinding.tool.util.L: android.databinding.tool.util.L$Client sClient> = $r1;

        goto label2;

     label1:
        <android.databinding.tool.util.L: android.databinding.tool.util.L$Client sClient> = r0;

     label2:
        return;
    }

    public static void setDebugLog(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <android.databinding.tool.util.L: boolean sEnableDebug> = z0;

        return;
    }

    public static transient void d(java.lang.String, java.lang.Object[])
    {
        java.lang.String r0, $r3;
        java.lang.Object[] r1;
        boolean $z0;
        javax.tools.Diagnostic$Kind $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object[];

        $z0 = <android.databinding.tool.util.L: boolean sEnableDebug>;

        if $z0 == 0 goto label1;

        $r2 = <javax.tools.Diagnostic$Kind: javax.tools.Diagnostic$Kind NOTE>;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r0, r1);

        staticinvoke <android.databinding.tool.util.L: void printMessage(javax.lang.model.element.Element,javax.tools.Diagnostic$Kind,java.lang.String)>(null, $r2, $r3);

     label1:
        return;
    }

    public static transient void d(javax.lang.model.element.Element, java.lang.String, java.lang.Object[])
    {
        javax.lang.model.element.Element r0;
        java.lang.String r1, $r4;
        java.lang.Object[] r2;
        boolean $z0;
        javax.tools.Diagnostic$Kind $r3;

        r0 := @parameter0: javax.lang.model.element.Element;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        $z0 = <android.databinding.tool.util.L: boolean sEnableDebug>;

        if $z0 == 0 goto label1;

        $r3 = <javax.tools.Diagnostic$Kind: javax.tools.Diagnostic$Kind NOTE>;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2);

        staticinvoke <android.databinding.tool.util.L: void printMessage(javax.lang.model.element.Element,javax.tools.Diagnostic$Kind,java.lang.String)>(r0, $r3, $r4);

     label1:
        return;
    }

    public static transient void d(java.lang.Throwable, java.lang.String, java.lang.Object[])
    {
        java.lang.Throwable r0;
        java.lang.String r1, $r5, $r8, $r10;
        java.lang.Object[] r2;
        boolean $z0;
        java.lang.StringBuilder $r3, $r6, $r7, $r9;
        javax.tools.Diagnostic$Kind $r4;

        r0 := @parameter0: java.lang.Throwable;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        $z0 = <android.databinding.tool.util.L: boolean sEnableDebug>;

        if $z0 == 0 goto label1;

        $r4 = <javax.tools.Diagnostic$Kind: javax.tools.Diagnostic$Kind NOTE>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r8 = staticinvoke <android.databinding.tool.util.L: java.lang.String getStackTrace(java.lang.Throwable)>(r0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.databinding.tool.util.L: void printMessage(javax.lang.model.element.Element,javax.tools.Diagnostic$Kind,java.lang.String)>(null, $r4, $r10);

     label1:
        return;
    }

    public static transient void w(java.lang.String, java.lang.Object[])
    {
        java.lang.String r0, $r3;
        java.lang.Object[] r1;
        javax.tools.Diagnostic$Kind $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object[];

        $r2 = <javax.tools.Diagnostic$Kind: javax.tools.Diagnostic$Kind WARNING>;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r0, r1);

        staticinvoke <android.databinding.tool.util.L: void printMessage(javax.lang.model.element.Element,javax.tools.Diagnostic$Kind,java.lang.String)>(null, $r2, $r3);

        return;
    }

    public static transient void w(javax.lang.model.element.Element, java.lang.String, java.lang.Object[])
    {
        javax.lang.model.element.Element r0;
        java.lang.String r1, $r4;
        java.lang.Object[] r2;
        javax.tools.Diagnostic$Kind $r3;

        r0 := @parameter0: javax.lang.model.element.Element;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        $r3 = <javax.tools.Diagnostic$Kind: javax.tools.Diagnostic$Kind WARNING>;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2);

        staticinvoke <android.databinding.tool.util.L: void printMessage(javax.lang.model.element.Element,javax.tools.Diagnostic$Kind,java.lang.String)>(r0, $r3, $r4);

        return;
    }

    public static transient void w(java.lang.Throwable, java.lang.String, java.lang.Object[])
    {
        java.lang.Throwable r0;
        java.lang.String r1, $r5, $r8, $r10;
        java.lang.Object[] r2;
        java.lang.StringBuilder $r3, $r6, $r7, $r9;
        javax.tools.Diagnostic$Kind $r4;

        r0 := @parameter0: java.lang.Throwable;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        $r4 = <javax.tools.Diagnostic$Kind: javax.tools.Diagnostic$Kind WARNING>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r8 = staticinvoke <android.databinding.tool.util.L: java.lang.String getStackTrace(java.lang.Throwable)>(r0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.databinding.tool.util.L: void printMessage(javax.lang.model.element.Element,javax.tools.Diagnostic$Kind,java.lang.String)>(null, $r4, $r10);

        return;
    }

    private static void tryToThrowScoped(java.lang.Throwable, java.lang.String)
    {
        java.lang.Throwable r0, r7, r8;
        java.lang.String r1;
        boolean $z0, $z1, $z2;
        java.lang.Object[] $r3;
        android.databinding.tool.processing.ScopedException r4, r5, r6;

        r0 := @parameter0: java.lang.Throwable;

        r1 := @parameter1: java.lang.String;

        $z0 = r0 instanceof android.databinding.tool.processing.ScopedException;

        if $z0 == 0 goto label1;

        r4 = (android.databinding.tool.processing.ScopedException) r0;

        $z2 = virtualinvoke r4.<android.databinding.tool.processing.ScopedException: boolean isValid()>();

        if $z2 == 0 goto label1;

        r7 = (java.lang.Throwable) r4;

        throw r7;

     label1:
        r6 = new android.databinding.tool.processing.ScopedException;

        $r3 = newarray (java.lang.Object)[0];

        specialinvoke r6.<android.databinding.tool.processing.ScopedException: void <init>(java.lang.String,java.lang.Object[])>(r1, $r3);

        r5 = r6;

        $z1 = virtualinvoke r5.<android.databinding.tool.processing.ScopedException: boolean isValid()>();

        if $z1 == 0 goto label2;

        r8 = (java.lang.Throwable) r5;

        throw r8;

     label2:
        return;
    }

    public static transient void e(java.lang.String, java.lang.Object[])
    {
        java.lang.String r0, r2;
        java.lang.Object[] r1;
        javax.tools.Diagnostic$Kind $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object[];

        r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r0, r1);

        staticinvoke <android.databinding.tool.util.L: void tryToThrowScoped(java.lang.Throwable,java.lang.String)>(null, r2);

        $r3 = <javax.tools.Diagnostic$Kind: javax.tools.Diagnostic$Kind ERROR>;

        staticinvoke <android.databinding.tool.util.L: void printMessage(javax.lang.model.element.Element,javax.tools.Diagnostic$Kind,java.lang.String)>(null, $r3, r2);

        return;
    }

    public static transient void e(javax.lang.model.element.Element, java.lang.String, java.lang.Object[])
    {
        javax.lang.model.element.Element r0;
        java.lang.String r1, r3;
        java.lang.Object[] r2;
        javax.tools.Diagnostic$Kind $r4;

        r0 := @parameter0: javax.lang.model.element.Element;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2);

        staticinvoke <android.databinding.tool.util.L: void tryToThrowScoped(java.lang.Throwable,java.lang.String)>(null, r3);

        $r4 = <javax.tools.Diagnostic$Kind: javax.tools.Diagnostic$Kind ERROR>;

        staticinvoke <android.databinding.tool.util.L: void printMessage(javax.lang.model.element.Element,javax.tools.Diagnostic$Kind,java.lang.String)>(r0, $r4, r3);

        return;
    }

    public static transient void e(java.lang.Throwable, java.lang.String, java.lang.Object[])
    {
        java.lang.Throwable r0;
        java.lang.String r1, r3, $r8, $r10;
        java.lang.Object[] r2;
        java.lang.StringBuilder $r4, $r6, $r7, $r9;
        javax.tools.Diagnostic$Kind $r5;

        r0 := @parameter0: java.lang.Throwable;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2);

        staticinvoke <android.databinding.tool.util.L: void tryToThrowScoped(java.lang.Throwable,java.lang.String)>(r0, r3);

        $r5 = <javax.tools.Diagnostic$Kind: javax.tools.Diagnostic$Kind ERROR>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r8 = staticinvoke <android.databinding.tool.util.L: java.lang.String getStackTrace(java.lang.Throwable)>(r0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.databinding.tool.util.L: void printMessage(javax.lang.model.element.Element,javax.tools.Diagnostic$Kind,java.lang.String)>(null, $r5, $r10);

        return;
    }

    private static void printMessage(javax.lang.model.element.Element, javax.tools.Diagnostic$Kind, java.lang.String)
    {
        javax.lang.model.element.Element r0;
        javax.tools.Diagnostic$Kind r1, $r4, $r6;
        java.lang.String r2, $r11, $r15;
        android.databinding.tool.processing.ScopedException r3, r16;
        android.databinding.tool.util.L$Client $r5, $r14;
        java.lang.StringBuilder $r9, $r10, r17;
        java.lang.Object[] $r13;
        boolean $z0;
        android.databinding.tool.util.LoggedErrorException r18;
        java.lang.Throwable r19;

        r0 := @parameter0: javax.lang.model.element.Element;

        r1 := @parameter1: javax.tools.Diagnostic$Kind;

        r2 := @parameter2: java.lang.String;

        $r4 = <javax.tools.Diagnostic$Kind: javax.tools.Diagnostic$Kind WARNING>;

        if r1 != $r4 goto label1;

        r16 = new android.databinding.tool.processing.ScopedException;

        $r13 = newarray (java.lang.Object)[0];

        specialinvoke r16.<android.databinding.tool.processing.ScopedException: void <init>(java.lang.String,java.lang.Object[])>(r2, $r13);

        r3 = r16;

        $z0 = virtualinvoke r3.<android.databinding.tool.processing.ScopedException: boolean isValid()>();

        if $z0 == 0 goto label1;

        $r14 = <android.databinding.tool.util.L: android.databinding.tool.util.L$Client sClient>;

        $r15 = virtualinvoke r3.<android.databinding.tool.processing.ScopedException: java.lang.String createHumanReadableMessage()>();

        interfaceinvoke $r14.<android.databinding.tool.util.L$Client: void printMessage(javax.tools.Diagnostic$Kind,java.lang.String,javax.lang.model.element.Element)>(r1, $r15, r0);

        return;

     label1:
        $r5 = <android.databinding.tool.util.L: android.databinding.tool.util.L$Client sClient>;

        interfaceinvoke $r5.<android.databinding.tool.util.L$Client: void printMessage(javax.tools.Diagnostic$Kind,java.lang.String,javax.lang.model.element.Element)>(r1, r2, r0);

        $r6 = <javax.tools.Diagnostic$Kind: javax.tools.Diagnostic$Kind ERROR>;

        if r1 != $r6 goto label2;

        r18 = new android.databinding.tool.util.LoggedErrorException;

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failure, see logs for details.\n");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r18.<android.databinding.tool.util.LoggedErrorException: void <init>(java.lang.String)>($r11);

        r19 = (java.lang.Throwable) r18;

        throw r19;

     label2:
        return;
    }

    public static boolean isDebugEnabled()
    {
        boolean $z0;

        $z0 = <android.databinding.tool.util.L: boolean sEnableDebug>;

        return $z0;
    }

    private static java.lang.String getStackTrace(java.lang.Throwable)
    {
        java.lang.Throwable r0, r3, $r7;
        java.io.StringWriter r1, $r4;
        java.io.PrintWriter r2, $r5;
        java.lang.String $r6;

        r0 := @parameter0: java.lang.Throwable;

        $r4 = new java.io.StringWriter;

        specialinvoke $r4.<java.io.StringWriter: void <init>()>();

        r1 = $r4;

        $r5 = new java.io.PrintWriter;

        specialinvoke $r5.<java.io.PrintWriter: void <init>(java.io.Writer)>(r1);

        r2 = $r5;

     label1:
        virtualinvoke r0.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>(r2);

     label2:
        virtualinvoke r2.<java.io.PrintWriter: void close()>();

        goto label4;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        virtualinvoke r2.<java.io.PrintWriter: void close()>();

        throw r3;

     label4:
        $r6 = virtualinvoke r1.<java.io.StringWriter: java.lang.String toString()>();

        return $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private static void lambda$static$0(javax.tools.Diagnostic$Kind, java.lang.String, javax.lang.model.element.Element)
    {
        javax.tools.Diagnostic$Kind r0, $r3;
        java.lang.String r1;
        javax.lang.model.element.Element r2;
        java.io.PrintStream $r4, $r5;

        r0 := @parameter0: javax.tools.Diagnostic$Kind;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: javax.lang.model.element.Element;

        $r3 = <javax.tools.Diagnostic$Kind: javax.tools.Diagnostic$Kind ERROR>;

        if r0 != $r3 goto label1;

        $r5 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(r1);

        goto label2;

     label1:
        $r4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(r1);

     label2:
        return;
    }

    static void <clinit>()
    {
        android.databinding.tool.util.L$Client $r0, $r1;

        <android.databinding.tool.util.L: boolean sEnableDebug> = 0;

        $r0 = dynamicinvoke "printMessage" <android.databinding.tool.util.L$Client ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(javax.tools.Diagnostic$Kind,java.lang.String,javax.lang.model.element.Element), methodhandle: "REF_INVOKE_STATIC" <android.databinding.tool.util.L: void lambda$static$0(javax.tools.Diagnostic$Kind,java.lang.String,javax.lang.model.element.Element)>, methodtype: void __METHODTYPE__(javax.tools.Diagnostic$Kind,java.lang.String,javax.lang.model.element.Element));

        <android.databinding.tool.util.L: android.databinding.tool.util.L$Client sSystemClient> = $r0;

        $r1 = <android.databinding.tool.util.L: android.databinding.tool.util.L$Client sSystemClient>;

        <android.databinding.tool.util.L: android.databinding.tool.util.L$Client sClient> = $r1;

        return;
    }

android.databinding.tool.util.L$Client
<android.databinding.tool.util.L$Client: void printMessage(javax.tools.Diagnostic$Kind,java.lang.String,javax.lang.model.element.Element)>
