androidx.media3.exoplayer.analytics.PlaybackStatsListener
<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.exoplayer.analytics.PlaybackSessionManager sessionManager>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener: java.util.Map playbackStatsTrackers>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener: java.util.Map sessionStartEventTimes>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.exoplayer.analytics.PlaybackStatsListener$Callback callback>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener: boolean keepHistory>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.common.Timeline$Period period>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.exoplayer.analytics.PlaybackStats finishedPlaybackStats>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener: java.lang.String discontinuityFromSession>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener: long discontinuityFromPositionMs>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener: int discontinuityReason>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener: int droppedFrames>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener: java.lang.Exception nonFatalException>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener: long bandwidthTimeMs>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener: long bandwidthBytes>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.common.Format videoFormat>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.common.Format audioFormat>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.common.VideoSize videoSize>
    public void <init>(boolean, androidx.media3.exoplayer.analytics.PlaybackStatsListener$Callback)
    {
        androidx.media3.exoplayer.analytics.PlaybackStatsListener r0;
        boolean z0;
        androidx.media3.exoplayer.analytics.PlaybackStatsListener$Callback r1;
        androidx.media3.exoplayer.analytics.DefaultPlaybackSessionManager $r2;
        java.util.HashMap $r3, $r4;
        androidx.media3.exoplayer.analytics.PlaybackStats $r5;
        androidx.media3.common.Timeline$Period $r6;
        androidx.media3.common.VideoSize $r7;
        androidx.media3.exoplayer.analytics.PlaybackSessionManager $r8;

        r0 := @this: androidx.media3.exoplayer.analytics.PlaybackStatsListener;

        z0 := @parameter0: boolean;

        r1 := @parameter1: androidx.media3.exoplayer.analytics.PlaybackStatsListener$Callback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.exoplayer.analytics.PlaybackStatsListener$Callback callback> = r1;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: boolean keepHistory> = z0;

        $r2 = new androidx.media3.exoplayer.analytics.DefaultPlaybackSessionManager;

        specialinvoke $r2.<androidx.media3.exoplayer.analytics.DefaultPlaybackSessionManager: void <init>()>();

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.exoplayer.analytics.PlaybackSessionManager sessionManager> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: java.util.Map playbackStatsTrackers> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: java.util.Map sessionStartEventTimes> = $r4;

        $r5 = <androidx.media3.exoplayer.analytics.PlaybackStats: androidx.media3.exoplayer.analytics.PlaybackStats EMPTY>;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.exoplayer.analytics.PlaybackStats finishedPlaybackStats> = $r5;

        $r6 = new androidx.media3.common.Timeline$Period;

        specialinvoke $r6.<androidx.media3.common.Timeline$Period: void <init>()>();

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.common.Timeline$Period period> = $r6;

        $r7 = <androidx.media3.common.VideoSize: androidx.media3.common.VideoSize UNKNOWN>;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.common.VideoSize videoSize> = $r7;

        $r8 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.exoplayer.analytics.PlaybackSessionManager sessionManager>;

        interfaceinvoke $r8.<androidx.media3.exoplayer.analytics.PlaybackSessionManager: void setListener(androidx.media3.exoplayer.analytics.PlaybackSessionManager$Listener)>(r0);

        return;
    }

    public androidx.media3.exoplayer.analytics.PlaybackStats getCombinedPlaybackStats()
    {
        androidx.media3.exoplayer.analytics.PlaybackStatsListener r0;
        androidx.media3.exoplayer.analytics.PlaybackStats[] r1;
        java.util.Iterator r2;
        androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker r3;
        java.util.Map $r4, $r6;
        int $i0, $i1, $i2, i3;
        androidx.media3.exoplayer.analytics.PlaybackStats $r5, $r8, $r10;
        java.util.Collection $r7;
        boolean $z0;
        java.lang.Object $r9;

        r0 := @this: androidx.media3.exoplayer.analytics.PlaybackStatsListener;

        $r4 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: java.util.Map playbackStatsTrackers>;

        $i0 = interfaceinvoke $r4.<java.util.Map: int size()>();

        $i1 = $i0 + 1;

        r1 = newarray (androidx.media3.exoplayer.analytics.PlaybackStats)[$i1];

        $r5 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.exoplayer.analytics.PlaybackStats finishedPlaybackStats>;

        r1[0] = $r5;

        i3 = 1;

        $r6 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: java.util.Map playbackStatsTrackers>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Collection values()>();

        r2 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker) $r9;

        $i2 = i3;

        i3 = i3 + 1;

        $r10 = virtualinvoke r3.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: androidx.media3.exoplayer.analytics.PlaybackStats build(boolean)>(0);

        r1[$i2] = $r10;

        goto label1;

     label2:
        $r8 = staticinvoke <androidx.media3.exoplayer.analytics.PlaybackStats: androidx.media3.exoplayer.analytics.PlaybackStats merge(androidx.media3.exoplayer.analytics.PlaybackStats[])>(r1);

        return $r8;
    }

    public androidx.media3.exoplayer.analytics.PlaybackStats getPlaybackStats()
    {
        androidx.media3.exoplayer.analytics.PlaybackStatsListener r0;
        java.lang.String r1;
        androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker r2, $r6;
        androidx.media3.exoplayer.analytics.PlaybackSessionManager $r3;
        java.util.Map $r4;
        java.lang.Object $r5;
        androidx.media3.exoplayer.analytics.PlaybackStats $r7;

        r0 := @this: androidx.media3.exoplayer.analytics.PlaybackStatsListener;

        $r3 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.exoplayer.analytics.PlaybackSessionManager sessionManager>;

        r1 = interfaceinvoke $r3.<androidx.media3.exoplayer.analytics.PlaybackSessionManager: java.lang.String getActiveSessionId()>();

        if r1 != null goto label1;

        $r6 = null;

        goto label2;

     label1:
        $r4 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: java.util.Map playbackStatsTrackers>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r6 = (androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker) $r5;

     label2:
        r2 = $r6;

        if r2 != null goto label3;

        $r7 = null;

        goto label4;

     label3:
        $r7 = virtualinvoke r2.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: androidx.media3.exoplayer.analytics.PlaybackStats build(boolean)>(0);

     label4:
        return $r7;
    }

    public void onSessionCreated(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime, java.lang.String)
    {
        androidx.media3.exoplayer.analytics.PlaybackStatsListener r0;
        androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime r1;
        java.lang.String r2;
        androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker r3, $r4;
        boolean $z0;
        java.util.Map $r5, $r7;

        r0 := @this: androidx.media3.exoplayer.analytics.PlaybackStatsListener;

        r1 := @parameter0: androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime;

        r2 := @parameter1: java.lang.String;

        $r4 = new androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker;

        $z0 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: boolean keepHistory>;

        specialinvoke $r4.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: void <init>(boolean,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime)>($z0, r1);

        r3 = $r4;

        $r5 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: java.util.Map playbackStatsTrackers>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

        $r7 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: java.util.Map sessionStartEventTimes>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1);

        return;
    }

    public void onSessionActive(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime, java.lang.String)
    {
        androidx.media3.exoplayer.analytics.PlaybackStatsListener r0;
        androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime r1;
        java.lang.String r2;
        java.util.Map $r3;
        java.lang.Object $r4, $r6;
        androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker $r5, $r7;

        r0 := @this: androidx.media3.exoplayer.analytics.PlaybackStatsListener;

        r1 := @parameter0: androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: java.util.Map playbackStatsTrackers>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $r5 = (androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker) $r4;

        $r6 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r5);

        $r7 = (androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker) $r6;

        virtualinvoke $r7.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: void onForeground()>();

        return;
    }

    public void onAdPlaybackStarted(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime, java.lang.String, java.lang.String)
    {
        androidx.media3.exoplayer.analytics.PlaybackStatsListener r0;
        androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime r1;
        java.lang.String r2, r3;
        java.util.Map $r4;
        java.lang.Object $r5, $r7;
        androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker $r6, $r8;

        r0 := @this: androidx.media3.exoplayer.analytics.PlaybackStatsListener;

        r1 := @parameter0: androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: java.util.Map playbackStatsTrackers>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $r6 = (androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker) $r5;

        $r7 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r6);

        $r8 = (androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker) $r7;

        virtualinvoke $r8.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: void onInterruptedByAd()>();

        return;
    }

    public void onSessionFinished(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime, java.lang.String, boolean)
    {
        androidx.media3.exoplayer.analytics.PlaybackStatsListener r0;
        androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime r1, r4, $r12;
        java.lang.String r2, $r14;
        boolean z0, $z1;
        androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker r3, $r8;
        long l0, $l1;
        androidx.media3.exoplayer.analytics.PlaybackStats r5, $r16, $r17;
        java.util.Map $r6, $r10;
        java.lang.Object $r7, $r9, $r11, $r13;
        androidx.media3.exoplayer.analytics.PlaybackStats[] $r15;
        androidx.media3.exoplayer.analytics.PlaybackStatsListener$Callback $r18, $r19;

        r0 := @this: androidx.media3.exoplayer.analytics.PlaybackStatsListener;

        r1 := @parameter0: androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r6 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: java.util.Map playbackStatsTrackers>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2);

        $r8 = (androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker) $r7;

        $r9 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r8);

        r3 = (androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker) $r9;

        $r10 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: java.util.Map sessionStartEventTimes>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2);

        $r12 = (androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime) $r11;

        $r13 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r12);

        r4 = (androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime) $r13;

        $r14 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: java.lang.String discontinuityFromSession>;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z1 == 0 goto label1;

        $l1 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: long discontinuityFromPositionMs>;

        goto label2;

     label1:
        $l1 = -9223372036854775807L;

     label2:
        l0 = $l1;

        virtualinvoke r3.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: void onFinished(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,boolean,long)>(r1, z0, l0);

        r5 = virtualinvoke r3.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: androidx.media3.exoplayer.analytics.PlaybackStats build(boolean)>(1);

        $r15 = newarray (androidx.media3.exoplayer.analytics.PlaybackStats)[2];

        $r16 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.exoplayer.analytics.PlaybackStats finishedPlaybackStats>;

        $r15[0] = $r16;

        $r15[1] = r5;

        $r17 = staticinvoke <androidx.media3.exoplayer.analytics.PlaybackStats: androidx.media3.exoplayer.analytics.PlaybackStats merge(androidx.media3.exoplayer.analytics.PlaybackStats[])>($r15);

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.exoplayer.analytics.PlaybackStats finishedPlaybackStats> = $r17;

        $r18 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.exoplayer.analytics.PlaybackStatsListener$Callback callback>;

        if $r18 == null goto label3;

        $r19 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.exoplayer.analytics.PlaybackStatsListener$Callback callback>;

        interfaceinvoke $r19.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$Callback: void onPlaybackStatsReady(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.analytics.PlaybackStats)>(r4, r5);

     label3:
        return;
    }

    public void onPositionDiscontinuity(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime, androidx.media3.common.Player$PositionInfo, androidx.media3.common.Player$PositionInfo, int)
    {
        androidx.media3.exoplayer.analytics.PlaybackStatsListener r0;
        androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime r1;
        androidx.media3.common.Player$PositionInfo r2, r3;
        int i0;
        java.lang.String $r4, $r6;
        androidx.media3.exoplayer.analytics.PlaybackSessionManager $r5;
        long $l1;

        r0 := @this: androidx.media3.exoplayer.analytics.PlaybackStatsListener;

        r1 := @parameter0: androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime;

        r2 := @parameter1: androidx.media3.common.Player$PositionInfo;

        r3 := @parameter2: androidx.media3.common.Player$PositionInfo;

        i0 := @parameter3: int;

        $r4 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: java.lang.String discontinuityFromSession>;

        if $r4 != null goto label1;

        $r5 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.exoplayer.analytics.PlaybackSessionManager sessionManager>;

        $r6 = interfaceinvoke $r5.<androidx.media3.exoplayer.analytics.PlaybackSessionManager: java.lang.String getActiveSessionId()>();

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: java.lang.String discontinuityFromSession> = $r6;

        $l1 = r2.<androidx.media3.common.Player$PositionInfo: long positionMs>;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: long discontinuityFromPositionMs> = $l1;

     label1:
        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: int discontinuityReason> = i0;

        return;
    }

    public void onDroppedVideoFrames(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime, int, long)
    {
        androidx.media3.exoplayer.analytics.PlaybackStatsListener r0;
        androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime r1;
        int i0;
        long l1;

        r0 := @this: androidx.media3.exoplayer.analytics.PlaybackStatsListener;

        r1 := @parameter0: androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: int droppedFrames> = i0;

        return;
    }

    public void onLoadError(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime, androidx.media3.exoplayer.source.LoadEventInfo, androidx.media3.exoplayer.source.MediaLoadData, java.io.IOException, boolean)
    {
        androidx.media3.exoplayer.analytics.PlaybackStatsListener r0;
        androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime r1;
        androidx.media3.exoplayer.source.LoadEventInfo r2;
        androidx.media3.exoplayer.source.MediaLoadData r3;
        java.io.IOException r4;
        boolean z0;
        java.lang.Exception r5;

        r0 := @this: androidx.media3.exoplayer.analytics.PlaybackStatsListener;

        r1 := @parameter0: androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime;

        r2 := @parameter1: androidx.media3.exoplayer.source.LoadEventInfo;

        r3 := @parameter2: androidx.media3.exoplayer.source.MediaLoadData;

        r4 := @parameter3: java.io.IOException;

        z0 := @parameter4: boolean;

        r5 = (java.lang.Exception) r4;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: java.lang.Exception nonFatalException> = r5;

        return;
    }

    public void onDrmSessionManagerError(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime, java.lang.Exception)
    {
        androidx.media3.exoplayer.analytics.PlaybackStatsListener r0;
        androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime r1;
        java.lang.Exception r2;

        r0 := @this: androidx.media3.exoplayer.analytics.PlaybackStatsListener;

        r1 := @parameter0: androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime;

        r2 := @parameter1: java.lang.Exception;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: java.lang.Exception nonFatalException> = r2;

        return;
    }

    public void onBandwidthEstimate(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime, int, long, long)
    {
        androidx.media3.exoplayer.analytics.PlaybackStatsListener r0;
        androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime r1;
        int i0;
        long l1, l2, $l3;

        r0 := @this: androidx.media3.exoplayer.analytics.PlaybackStatsListener;

        r1 := @parameter0: androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        $l3 = (long) i0;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: long bandwidthTimeMs> = $l3;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: long bandwidthBytes> = l1;

        return;
    }

    public void onDownstreamFormatChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime, androidx.media3.exoplayer.source.MediaLoadData)
    {
        androidx.media3.exoplayer.analytics.PlaybackStatsListener r0;
        androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime r1;
        androidx.media3.exoplayer.source.MediaLoadData r2;
        int $i0, $i1, $i2;
        androidx.media3.common.Format $r3, $r4;

        r0 := @this: androidx.media3.exoplayer.analytics.PlaybackStatsListener;

        r1 := @parameter0: androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime;

        r2 := @parameter1: androidx.media3.exoplayer.source.MediaLoadData;

        $i0 = r2.<androidx.media3.exoplayer.source.MediaLoadData: int trackType>;

        if $i0 == 2 goto label1;

        $i1 = r2.<androidx.media3.exoplayer.source.MediaLoadData: int trackType>;

        if $i1 != 0 goto label2;

     label1:
        $r3 = r2.<androidx.media3.exoplayer.source.MediaLoadData: androidx.media3.common.Format trackFormat>;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.common.Format videoFormat> = $r3;

        goto label3;

     label2:
        $i2 = r2.<androidx.media3.exoplayer.source.MediaLoadData: int trackType>;

        if $i2 != 1 goto label3;

        $r4 = r2.<androidx.media3.exoplayer.source.MediaLoadData: androidx.media3.common.Format trackFormat>;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.common.Format audioFormat> = $r4;

     label3:
        return;
    }

    public void onVideoSizeChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime, androidx.media3.common.VideoSize)
    {
        androidx.media3.exoplayer.analytics.PlaybackStatsListener r0;
        androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime r1;
        androidx.media3.common.VideoSize r2;

        r0 := @this: androidx.media3.exoplayer.analytics.PlaybackStatsListener;

        r1 := @parameter0: androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime;

        r2 := @parameter1: androidx.media3.common.VideoSize;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.common.VideoSize videoSize> = r2;

        return;
    }

    public void onEvents(androidx.media3.common.Player, androidx.media3.exoplayer.analytics.AnalyticsListener$Events)
    {
        androidx.media3.exoplayer.analytics.PlaybackStatsListener r0;
        androidx.media3.common.Player r1;
        androidx.media3.exoplayer.analytics.AnalyticsListener$Events r2;
        java.util.Iterator r3;
        java.lang.String r4, $r17;
        android.util.Pair r5;
        androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker r6;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        int $i0, $i2;
        java.util.Map $r7, $r12;
        java.util.Set $r8;
        androidx.media3.exoplayer.analytics.PlaybackSessionManager $r9;
        androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime $r10, $r21;
        java.lang.Object $r11, $r13, $r14, $r15;
        java.lang.Boolean $r16;
        androidx.media3.common.PlaybackException $r18, $r23;
        long $l1, $l3, $l4;
        java.lang.Exception $r24;
        androidx.media3.common.Format $r25, $r26;
        androidx.media3.common.VideoSize $r27;

        r0 := @this: androidx.media3.exoplayer.analytics.PlaybackStatsListener;

        r1 := @parameter0: androidx.media3.common.Player;

        r2 := @parameter1: androidx.media3.exoplayer.analytics.AnalyticsListener$Events;

        $i0 = virtualinvoke r2.<androidx.media3.exoplayer.analytics.AnalyticsListener$Events: int size()>();

        if $i0 != 0 goto label01;

        return;

     label01:
        specialinvoke r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: void maybeAddSessions(androidx.media3.exoplayer.analytics.AnalyticsListener$Events)>(r2);

        $r7 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: java.util.Map playbackStatsTrackers>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set keySet()>();

        r3 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z9 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label24;

        $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r11;

        r5 = specialinvoke r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: android.util.Pair findBestEventTime(androidx.media3.exoplayer.analytics.AnalyticsListener$Events,java.lang.String)>(r2, r4);

        $r12 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: java.util.Map playbackStatsTrackers>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        r6 = (androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker) $r13;

        z0 = specialinvoke r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: boolean hasEvent(androidx.media3.exoplayer.analytics.AnalyticsListener$Events,java.lang.String,int)>(r2, r4, 11);

        z1 = specialinvoke r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: boolean hasEvent(androidx.media3.exoplayer.analytics.AnalyticsListener$Events,java.lang.String,int)>(r2, r4, 1018);

        z2 = specialinvoke r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: boolean hasEvent(androidx.media3.exoplayer.analytics.AnalyticsListener$Events,java.lang.String,int)>(r2, r4, 1011);

        z3 = specialinvoke r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: boolean hasEvent(androidx.media3.exoplayer.analytics.AnalyticsListener$Events,java.lang.String,int)>(r2, r4, 1000);

        z4 = specialinvoke r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: boolean hasEvent(androidx.media3.exoplayer.analytics.AnalyticsListener$Events,java.lang.String,int)>(r2, r4, 10);

        $z11 = specialinvoke r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: boolean hasEvent(androidx.media3.exoplayer.analytics.AnalyticsListener$Events,java.lang.String,int)>(r2, r4, 1003);

        if $z11 != 0 goto label03;

        $z13 = specialinvoke r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: boolean hasEvent(androidx.media3.exoplayer.analytics.AnalyticsListener$Events,java.lang.String,int)>(r2, r4, 1024);

        if $z13 == 0 goto label04;

     label03:
        $z14 = 1;

        goto label05;

     label04:
        $z14 = 0;

     label05:
        z5 = $z14;

        z6 = specialinvoke r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: boolean hasEvent(androidx.media3.exoplayer.analytics.AnalyticsListener$Events,java.lang.String,int)>(r2, r4, 1006);

        z7 = specialinvoke r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: boolean hasEvent(androidx.media3.exoplayer.analytics.AnalyticsListener$Events,java.lang.String,int)>(r2, r4, 1004);

        z8 = specialinvoke r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: boolean hasEvent(androidx.media3.exoplayer.analytics.AnalyticsListener$Events,java.lang.String,int)>(r2, r4, 25);

        $r14 = r5.<android.util.Pair: java.lang.Object first>;

        $r21 = (androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime) $r14;

        $r15 = r5.<android.util.Pair: java.lang.Object second>;

        $r16 = (java.lang.Boolean) $r15;

        $z15 = virtualinvoke $r16.<java.lang.Boolean: boolean booleanValue()>();

        $r17 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: java.lang.String discontinuityFromSession>;

        $z12 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z12 == 0 goto label06;

        $l1 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: long discontinuityFromPositionMs>;

        goto label07;

     label06:
        $l1 = -9223372036854775807L;

     label07:
        if z1 == 0 goto label08;

        $i2 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: int droppedFrames>;

        goto label09;

     label08:
        $i2 = 0;

     label09:
        if z4 == 0 goto label10;

        $r18 = interfaceinvoke r1.<androidx.media3.common.Player: androidx.media3.common.PlaybackException getPlayerError()>();

        $r23 = $r18;

        goto label11;

     label10:
        $r23 = null;

     label11:
        if z5 == 0 goto label12;

        $r24 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: java.lang.Exception nonFatalException>;

        goto label13;

     label12:
        $r24 = null;

     label13:
        if z6 == 0 goto label14;

        $l3 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: long bandwidthTimeMs>;

        goto label15;

     label14:
        $l3 = 0L;

     label15:
        if z6 == 0 goto label16;

        $l4 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: long bandwidthBytes>;

        goto label17;

     label16:
        $l4 = 0L;

     label17:
        if z7 == 0 goto label18;

        $r25 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.common.Format videoFormat>;

        goto label19;

     label18:
        $r25 = null;

     label19:
        if z7 == 0 goto label20;

        $r26 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.common.Format audioFormat>;

        goto label21;

     label20:
        $r26 = null;

     label21:
        if z8 == 0 goto label22;

        $r27 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.common.VideoSize videoSize>;

        goto label23;

     label22:
        $r27 = null;

     label23:
        virtualinvoke r6.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: void onEvents(androidx.media3.common.Player,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,boolean,long,boolean,int,boolean,boolean,androidx.media3.common.PlaybackException,java.lang.Exception,long,long,androidx.media3.common.Format,androidx.media3.common.Format,androidx.media3.common.VideoSize)>(r1, $r21, $z15, $l1, z0, $i2, z2, z3, $r23, $r24, $l3, $l4, $r25, $r26, $r27);

        goto label02;

     label24:
        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.common.Format videoFormat> = null;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.common.Format audioFormat> = null;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: java.lang.String discontinuityFromSession> = null;

        $z10 = virtualinvoke r2.<androidx.media3.exoplayer.analytics.AnalyticsListener$Events: boolean contains(int)>(1028);

        if $z10 == 0 goto label25;

        $r9 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.exoplayer.analytics.PlaybackSessionManager sessionManager>;

        $r10 = virtualinvoke r2.<androidx.media3.exoplayer.analytics.AnalyticsListener$Events: androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime getEventTime(int)>(1028);

        interfaceinvoke $r9.<androidx.media3.exoplayer.analytics.PlaybackSessionManager: void finishAllSessions(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime)>($r10);

     label25:
        return;
    }

    private void maybeAddSessions(androidx.media3.exoplayer.analytics.AnalyticsListener$Events)
    {
        androidx.media3.exoplayer.analytics.PlaybackStatsListener r0;
        androidx.media3.exoplayer.analytics.AnalyticsListener$Events r1;
        int i0, $i1, $i2, i3;
        androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime r2;
        androidx.media3.exoplayer.analytics.PlaybackSessionManager $r3, $r4, $r5;

        r0 := @this: androidx.media3.exoplayer.analytics.PlaybackStatsListener;

        r1 := @parameter0: androidx.media3.exoplayer.analytics.AnalyticsListener$Events;

        i3 = 0;

     label1:
        $i1 = virtualinvoke r1.<androidx.media3.exoplayer.analytics.AnalyticsListener$Events: int size()>();

        if i3 >= $i1 goto label5;

        i0 = virtualinvoke r1.<androidx.media3.exoplayer.analytics.AnalyticsListener$Events: int get(int)>(i3);

        r2 = virtualinvoke r1.<androidx.media3.exoplayer.analytics.AnalyticsListener$Events: androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime getEventTime(int)>(i0);

        if i0 != 0 goto label2;

        $r5 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.exoplayer.analytics.PlaybackSessionManager sessionManager>;

        interfaceinvoke $r5.<androidx.media3.exoplayer.analytics.PlaybackSessionManager: void updateSessionsWithTimelineChange(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime)>(r2);

        goto label4;

     label2:
        if i0 != 11 goto label3;

        $r4 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.exoplayer.analytics.PlaybackSessionManager sessionManager>;

        $i2 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: int discontinuityReason>;

        interfaceinvoke $r4.<androidx.media3.exoplayer.analytics.PlaybackSessionManager: void updateSessionsWithDiscontinuity(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int)>(r2, $i2);

        goto label4;

     label3:
        $r3 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.exoplayer.analytics.PlaybackSessionManager sessionManager>;

        interfaceinvoke $r3.<androidx.media3.exoplayer.analytics.PlaybackSessionManager: void updateSessions(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime)>(r2);

     label4:
        i3 = i3 + 1;

        goto label1;

     label5:
        return;
    }

    private android.util.Pair findBestEventTime(androidx.media3.exoplayer.analytics.AnalyticsListener$Events, java.lang.String)
    {
        androidx.media3.exoplayer.analytics.PlaybackStatsListener r0;
        androidx.media3.exoplayer.analytics.AnalyticsListener$Events r1;
        java.lang.String r2;
        int i0, $i1, $i2, $i5, $i8, $i12, i16;
        boolean z0, $z1, z2;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId $r4, $r5, $r6, $r11, $r14, $r15, $r16, $r17, $r20;
        androidx.media3.common.Timeline$Period $r7, $r10, $r12, $r23;
        java.lang.Object $r8, $r18;
        androidx.media3.common.Timeline $r9, $r19, $r21;
        byte $b3, $b15;
        long $l4, $l6, $l7, $l9, $l10, $l11, $l13, $l14, l17, l18;
        androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime $r13, r25, r26;
        androidx.media3.exoplayer.analytics.PlaybackSessionManager $r22, $r24;
        java.lang.Boolean $r27;
        android.util.Pair $r28;

        r0 := @this: androidx.media3.exoplayer.analytics.PlaybackStatsListener;

        r1 := @parameter0: androidx.media3.exoplayer.analytics.AnalyticsListener$Events;

        r2 := @parameter1: java.lang.String;

        r25 = null;

        z2 = 0;

        i16 = 0;

     label1:
        $i1 = virtualinvoke r1.<androidx.media3.exoplayer.analytics.AnalyticsListener$Events: int size()>();

        if i16 >= $i1 goto label5;

        i0 = virtualinvoke r1.<androidx.media3.exoplayer.analytics.AnalyticsListener$Events: int get(int)>(i16);

        r26 = virtualinvoke r1.<androidx.media3.exoplayer.analytics.AnalyticsListener$Events: androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime getEventTime(int)>(i0);

        $r24 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.exoplayer.analytics.PlaybackSessionManager sessionManager>;

        z0 = interfaceinvoke $r24.<androidx.media3.exoplayer.analytics.PlaybackSessionManager: boolean belongsToSession(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String)>(r26, r2);

        if r25 == null goto label3;

        if z0 == 0 goto label2;

        if z2 == 0 goto label3;

     label2:
        if z0 != z2 goto label4;

        $l14 = r26.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: long realtimeMs>;

        $l13 = r25.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: long realtimeMs>;

        $b15 = $l14 cmp $l13;

        if $b15 <= 0 goto label4;

     label3:
        r25 = r26;

        z2 = z0;

     label4:
        i16 = i16 + 1;

        goto label1;

     label5:
        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r25);

        if z2 != 0 goto label7;

        $r4 = r25.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId mediaPeriodId>;

        if $r4 == null goto label7;

        $r5 = r25.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId mediaPeriodId>;

        $z1 = virtualinvoke $r5.<androidx.media3.exoplayer.source.MediaSource$MediaPeriodId: boolean isAd()>();

        if $z1 == 0 goto label7;

        $r9 = r25.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: androidx.media3.common.Timeline timeline>;

        $r6 = r25.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId mediaPeriodId>;

        $r8 = $r6.<androidx.media3.exoplayer.source.MediaSource$MediaPeriodId: java.lang.Object periodUid>;

        $r7 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.common.Timeline$Period period>;

        $r10 = virtualinvoke $r9.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Period getPeriodByUid(java.lang.Object,androidx.media3.common.Timeline$Period)>($r8, $r7);

        $r11 = r25.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId mediaPeriodId>;

        $i2 = $r11.<androidx.media3.exoplayer.source.MediaSource$MediaPeriodId: int adGroupIndex>;

        l17 = virtualinvoke $r10.<androidx.media3.common.Timeline$Period: long getAdGroupTimeUs(int)>($i2);

        $b3 = l17 cmp -9223372036854775808L;

        if $b3 != 0 goto label6;

        $r23 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.common.Timeline$Period period>;

        l17 = $r23.<androidx.media3.common.Timeline$Period: long durationUs>;

     label6:
        $r12 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.common.Timeline$Period period>;

        $l4 = virtualinvoke $r12.<androidx.media3.common.Timeline$Period: long getPositionInWindowUs()>();

        l18 = l17 + $l4;

        $r13 = new androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime;

        $l7 = r25.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: long realtimeMs>;

        $r19 = r25.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: androidx.media3.common.Timeline timeline>;

        $i8 = r25.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: int windowIndex>;

        $r14 = new androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        $r15 = r25.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId mediaPeriodId>;

        $r18 = $r15.<androidx.media3.exoplayer.source.MediaSource$MediaPeriodId: java.lang.Object periodUid>;

        $r16 = r25.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId mediaPeriodId>;

        $l6 = $r16.<androidx.media3.exoplayer.source.MediaSource$MediaPeriodId: long windowSequenceNumber>;

        $r17 = r25.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId mediaPeriodId>;

        $i5 = $r17.<androidx.media3.exoplayer.source.MediaSource$MediaPeriodId: int adGroupIndex>;

        specialinvoke $r14.<androidx.media3.exoplayer.source.MediaSource$MediaPeriodId: void <init>(java.lang.Object,long,int)>($r18, $l6, $i5);

        $l9 = staticinvoke <androidx.media3.common.util.Util: long usToMs(long)>(l18);

        $r21 = r25.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: androidx.media3.common.Timeline timeline>;

        $i12 = r25.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: int currentWindowIndex>;

        $r20 = r25.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId currentMediaPeriodId>;

        $l11 = r25.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: long currentPlaybackPositionMs>;

        $l10 = r25.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: long totalBufferedDurationMs>;

        specialinvoke $r13.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: void <init>(long,androidx.media3.common.Timeline,int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,long,androidx.media3.common.Timeline,int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,long,long)>($l7, $r19, $i8, $r14, $l9, $r21, $i12, $r20, $l11, $l10);

        r25 = $r13;

        $r22 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.exoplayer.analytics.PlaybackSessionManager sessionManager>;

        z2 = interfaceinvoke $r22.<androidx.media3.exoplayer.analytics.PlaybackSessionManager: boolean belongsToSession(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String)>(r25, r2);

     label7:
        $r27 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z2);

        $r28 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>(r25, $r27);

        return $r28;
    }

    private boolean hasEvent(androidx.media3.exoplayer.analytics.AnalyticsListener$Events, java.lang.String, int)
    {
        androidx.media3.exoplayer.analytics.PlaybackStatsListener r0;
        androidx.media3.exoplayer.analytics.AnalyticsListener$Events r1;
        java.lang.String r2;
        int i0;
        boolean $z0, $z1, $z2;
        androidx.media3.exoplayer.analytics.PlaybackSessionManager $r3;
        androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime $r4;

        r0 := @this: androidx.media3.exoplayer.analytics.PlaybackStatsListener;

        r1 := @parameter0: androidx.media3.exoplayer.analytics.AnalyticsListener$Events;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $z0 = virtualinvoke r1.<androidx.media3.exoplayer.analytics.AnalyticsListener$Events: boolean contains(int)>(i0);

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener: androidx.media3.exoplayer.analytics.PlaybackSessionManager sessionManager>;

        $r4 = virtualinvoke r1.<androidx.media3.exoplayer.analytics.AnalyticsListener$Events: androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime getEventTime(int)>(i0);

        $z1 = interfaceinvoke $r3.<androidx.media3.exoplayer.analytics.PlaybackSessionManager: boolean belongsToSession(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String)>($r4, r2);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

androidx.media3.exoplayer.analytics.PlaybackStatsListener$Callback
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$Callback: void onPlaybackStatsReady(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.analytics.PlaybackStats)>
androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean keepHistory>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long[] playbackStateDurationsMs>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: java.util.List playbackStateHistory>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: java.util.List mediaTimeHistory>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: java.util.List videoFormatHistory>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: java.util.List audioFormatHistory>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: java.util.List fatalErrorHistory>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: java.util.List nonFatalErrorHistory>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean isAd>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long firstReportedTimeMs>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean hasBeenReady>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean hasEnded>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean isJoinTimeInvalid>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int pauseCount>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int pauseBufferCount>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int seekCount>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int rebufferCount>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long maxRebufferTimeMs>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int initialVideoFormatHeight>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long initialVideoFormatBitrate>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long initialAudioFormatBitrate>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long videoFormatHeightTimeMs>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long videoFormatHeightTimeProduct>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long videoFormatBitrateTimeMs>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long videoFormatBitrateTimeProduct>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long audioFormatTimeMs>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long audioFormatBitrateTimeProduct>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long bandwidthTimeMs>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long bandwidthBytes>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long droppedFrames>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long audioUnderruns>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int fatalErrorCount>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int nonFatalErrorCount>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int currentPlaybackState>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long currentPlaybackStateStartTimeMs>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean isSeeking>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean isForeground>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean isInterruptedByAd>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean hasFatalError>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean startedLoading>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long lastRebufferStartTimeMs>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: androidx.media3.common.Format currentVideoFormat>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: androidx.media3.common.Format currentAudioFormat>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long lastVideoFormatStartTimeMs>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long lastAudioFormatStartTimeMs>
<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: float currentPlaybackSpeed>
    public void <init>(boolean, androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime)
    {
        androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker r0;
        boolean z0, $z1, $z2;
        androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime r1;
        long[] $r2;
        long $l0;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId $r3, $r4;
        java.lang.Object $r11, $r12, $r13, $r14, $r15, $r16;
        java.util.ArrayList r18, r19, r20, r21, r22, r23;
        java.util.List r24, r25, r26, r27, r28, r29;

        r0 := @this: androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker;

        z0 := @parameter0: boolean;

        r1 := @parameter1: androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean keepHistory> = z0;

        $r2 = newarray (long)[16];

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long[] playbackStateDurationsMs> = $r2;

        if z0 == 0 goto label01;

        r18 = new java.util.ArrayList;

        $r11 = r18;

        specialinvoke r18.<java.util.ArrayList: void <init>()>();

        goto label02;

     label01:
        $r11 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label02:
        r24 = (java.util.List) $r11;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: java.util.List playbackStateHistory> = r24;

        if z0 == 0 goto label03;

        r19 = new java.util.ArrayList;

        $r12 = r19;

        specialinvoke r19.<java.util.ArrayList: void <init>()>();

        goto label04;

     label03:
        $r12 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label04:
        r25 = (java.util.List) $r12;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: java.util.List mediaTimeHistory> = r25;

        if z0 == 0 goto label05;

        r20 = new java.util.ArrayList;

        $r13 = r20;

        specialinvoke r20.<java.util.ArrayList: void <init>()>();

        goto label06;

     label05:
        $r13 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label06:
        r26 = (java.util.List) $r13;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: java.util.List videoFormatHistory> = r26;

        if z0 == 0 goto label07;

        r21 = new java.util.ArrayList;

        $r14 = r21;

        specialinvoke r21.<java.util.ArrayList: void <init>()>();

        goto label08;

     label07:
        $r14 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label08:
        r27 = (java.util.List) $r14;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: java.util.List audioFormatHistory> = r27;

        if z0 == 0 goto label09;

        r22 = new java.util.ArrayList;

        $r15 = r22;

        specialinvoke r22.<java.util.ArrayList: void <init>()>();

        goto label10;

     label09:
        $r15 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label10:
        r28 = (java.util.List) $r15;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: java.util.List fatalErrorHistory> = r28;

        if z0 == 0 goto label11;

        r23 = new java.util.ArrayList;

        $r16 = r23;

        specialinvoke r23.<java.util.ArrayList: void <init>()>();

        goto label12;

     label11:
        $r16 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label12:
        r29 = (java.util.List) $r16;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: java.util.List nonFatalErrorHistory> = r29;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int currentPlaybackState> = 0;

        $l0 = r1.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: long realtimeMs>;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long currentPlaybackStateStartTimeMs> = $l0;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long firstReportedTimeMs> = -9223372036854775807L;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long maxRebufferTimeMs> = -9223372036854775807L;

        $r3 = r1.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId mediaPeriodId>;

        if $r3 == null goto label13;

        $r4 = r1.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId mediaPeriodId>;

        $z1 = virtualinvoke $r4.<androidx.media3.exoplayer.source.MediaSource$MediaPeriodId: boolean isAd()>();

        if $z1 == 0 goto label13;

        $z2 = 1;

        goto label14;

     label13:
        $z2 = 0;

     label14:
        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean isAd> = $z2;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long initialAudioFormatBitrate> = -1L;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long initialVideoFormatBitrate> = -1L;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int initialVideoFormatHeight> = -1;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: float currentPlaybackSpeed> = 1.0F;

        return;
    }

    public void onForeground()
    {
        androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker r0;

        r0 := @this: androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean isForeground> = 1;

        return;
    }

    public void onInterruptedByAd()
    {
        androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker r0;

        r0 := @this: androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean isInterruptedByAd> = 1;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean isSeeking> = 0;

        return;
    }

    public void onFinished(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime, boolean, long)
    {
        androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker r0;
        androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime r1;
        boolean z0;
        long l0, $l3, $l4, $l5;
        byte b1, $b6;
        int $i2;

        r0 := @this: androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker;

        r1 := @parameter0: androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime;

        z0 := @parameter1: boolean;

        l0 := @parameter2: long;

        $i2 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int currentPlaybackState>;

        if $i2 == 11 goto label1;

        if z0 == 0 goto label2;

     label1:
        $b6 = 11;

        goto label3;

     label2:
        $b6 = 15;

     label3:
        b1 = $b6;

        $l3 = r1.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: long realtimeMs>;

        specialinvoke r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: void maybeUpdateMediaTimeHistory(long,long)>($l3, l0);

        $l4 = r1.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: long realtimeMs>;

        specialinvoke r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: void maybeRecordVideoFormatTime(long)>($l4);

        $l5 = r1.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: long realtimeMs>;

        specialinvoke r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: void maybeRecordAudioFormatTime(long)>($l5);

        specialinvoke r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: void updatePlaybackState(int,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime)>(b1, r1);

        return;
    }

    public void onEvents(androidx.media3.common.Player, androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime, boolean, long, boolean, int, boolean, boolean, androidx.media3.common.PlaybackException, java.lang.Exception, long, long, androidx.media3.common.Format, androidx.media3.common.Format, androidx.media3.common.VideoSize)
    {
        androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker r0;
        androidx.media3.common.Player r1;
        androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime r2;
        boolean z0, z1, z2, z3, $z4, $z6, $z7, $z8, $z9, $z11;
        long l0, l2, l3, $l7, $l8, $l9, $l10, $l11, $l12, $l13, $l14, $l15, $l16, $l20, $l21, $l27, $l30;
        int i1, i4, $i6, $i18, $i19, $i22, $i23, $i24, $i25, $i26, i28, $i29, $i31;
        androidx.media3.common.PlaybackException r3, $r8;
        java.lang.Exception r4;
        androidx.media3.common.Format r5, r6, $r9, $r16, $r17, r24;
        androidx.media3.common.VideoSize r7;
        float f0, $f1;
        byte $b5, $b17;
        androidx.media3.exoplayer.analytics.PlaybackStats$EventTimeAndException $r11, $r21;
        java.util.List $r12, $r22;
        androidx.media3.common.Format$Builder $r18, $r19, $r20;
        androidx.media3.common.Tracks r23;
        androidx.media3.common.PlaybackParameters $r25;

        r0 := @this: androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker;

        r1 := @parameter0: androidx.media3.common.Player;

        r2 := @parameter1: androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime;

        z0 := @parameter2: boolean;

        l0 := @parameter3: long;

        z1 := @parameter4: boolean;

        i1 := @parameter5: int;

        z2 := @parameter6: boolean;

        z3 := @parameter7: boolean;

        r3 := @parameter8: androidx.media3.common.PlaybackException;

        r4 := @parameter9: java.lang.Exception;

        l2 := @parameter10: long;

        l3 := @parameter11: long;

        r5 := @parameter12: androidx.media3.common.Format;

        r6 := @parameter13: androidx.media3.common.Format;

        r7 := @parameter14: androidx.media3.common.VideoSize;

        $b5 = l0 cmp -9223372036854775807L;

        if $b5 == 0 goto label01;

        $l27 = r2.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: long realtimeMs>;

        specialinvoke r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: void maybeUpdateMediaTimeHistory(long,long)>($l27, l0);

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean isSeeking> = 1;

     label01:
        $i6 = interfaceinvoke r1.<androidx.media3.common.Player: int getPlaybackState()>();

        if $i6 == 2 goto label02;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean isSeeking> = 0;

     label02:
        i4 = interfaceinvoke r1.<androidx.media3.common.Player: int getPlaybackState()>();

        if i4 == 1 goto label03;

        if i4 == 4 goto label03;

        if z1 == 0 goto label04;

     label03:
        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean isInterruptedByAd> = 0;

     label04:
        if r3 == null goto label05;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean hasFatalError> = 1;

        $i25 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int fatalErrorCount>;

        $i26 = $i25 + 1;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int fatalErrorCount> = $i26;

        $z9 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean keepHistory>;

        if $z9 == 0 goto label06;

        $r22 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: java.util.List fatalErrorHistory>;

        $r21 = new androidx.media3.exoplayer.analytics.PlaybackStats$EventTimeAndException;

        specialinvoke $r21.<androidx.media3.exoplayer.analytics.PlaybackStats$EventTimeAndException: void <init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.Exception)>(r2, r3);

        interfaceinvoke $r22.<java.util.List: boolean add(java.lang.Object)>($r21);

        goto label06;

     label05:
        $r8 = interfaceinvoke r1.<androidx.media3.common.Player: androidx.media3.common.PlaybackException getPlayerError()>();

        if $r8 != null goto label06;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean hasFatalError> = 0;

     label06:
        $z11 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean isForeground>;

        if $z11 == 0 goto label08;

        $z6 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean isInterruptedByAd>;

        if $z6 != 0 goto label08;

        r23 = interfaceinvoke r1.<androidx.media3.common.Player: androidx.media3.common.Tracks getCurrentTracks()>();

        $z7 = virtualinvoke r23.<androidx.media3.common.Tracks: boolean isTypeSelected(int)>(2);

        if $z7 != 0 goto label07;

        specialinvoke r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: void maybeUpdateVideoFormat(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Format)>(r2, null);

     label07:
        $z8 = virtualinvoke r23.<androidx.media3.common.Tracks: boolean isTypeSelected(int)>(1);

        if $z8 != 0 goto label08;

        specialinvoke r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: void maybeUpdateAudioFormat(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Format)>(r2, null);

     label08:
        if r5 == null goto label09;

        specialinvoke r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: void maybeUpdateVideoFormat(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Format)>(r2, r5);

     label09:
        if r6 == null goto label10;

        specialinvoke r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: void maybeUpdateAudioFormat(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Format)>(r2, r6);

     label10:
        $r9 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: androidx.media3.common.Format currentVideoFormat>;

        if $r9 == null goto label11;

        $r16 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: androidx.media3.common.Format currentVideoFormat>;

        $i22 = $r16.<androidx.media3.common.Format: int height>;

        if $i22 != -1 goto label11;

        if r7 == null goto label11;

        $r17 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: androidx.media3.common.Format currentVideoFormat>;

        $r18 = virtualinvoke $r17.<androidx.media3.common.Format: androidx.media3.common.Format$Builder buildUpon()>();

        $i23 = r7.<androidx.media3.common.VideoSize: int width>;

        $r19 = virtualinvoke $r18.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setWidth(int)>($i23);

        $i24 = r7.<androidx.media3.common.VideoSize: int height>;

        $r20 = virtualinvoke $r19.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setHeight(int)>($i24);

        r24 = virtualinvoke $r20.<androidx.media3.common.Format$Builder: androidx.media3.common.Format build()>();

        specialinvoke r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: void maybeUpdateVideoFormat(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Format)>(r2, r24);

     label11:
        if z3 == 0 goto label12;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean startedLoading> = 1;

     label12:
        if z2 == 0 goto label13;

        $l20 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long audioUnderruns>;

        $l21 = $l20 + 1L;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long audioUnderruns> = $l21;

     label13:
        $l8 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long droppedFrames>;

        $l7 = (long) i1;

        $l9 = $l8 + $l7;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long droppedFrames> = $l9;

        $l10 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long bandwidthTimeMs>;

        $l11 = $l10 + l2;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long bandwidthTimeMs> = $l11;

        $l12 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long bandwidthBytes>;

        $l13 = $l12 + l3;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long bandwidthBytes> = $l13;

        if r4 == null goto label14;

        $i18 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int nonFatalErrorCount>;

        $i19 = $i18 + 1;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int nonFatalErrorCount> = $i19;

        $z4 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean keepHistory>;

        if $z4 == 0 goto label14;

        $r12 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: java.util.List nonFatalErrorHistory>;

        $r11 = new androidx.media3.exoplayer.analytics.PlaybackStats$EventTimeAndException;

        specialinvoke $r11.<androidx.media3.exoplayer.analytics.PlaybackStats$EventTimeAndException: void <init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.Exception)>(r2, r4);

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r11);

     label14:
        i28 = specialinvoke r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int resolveNewPlaybackState(androidx.media3.common.Player)>(r1);

        $r25 = interfaceinvoke r1.<androidx.media3.common.Player: androidx.media3.common.PlaybackParameters getPlaybackParameters()>();

        f0 = $r25.<androidx.media3.common.PlaybackParameters: float speed>;

        $i29 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int currentPlaybackState>;

        if $i29 != i28 goto label15;

        $f1 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: float currentPlaybackSpeed>;

        $b17 = $f1 cmpl f0;

        if $b17 == 0 goto label18;

     label15:
        $l14 = r2.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: long realtimeMs>;

        if z0 == 0 goto label16;

        $l30 = r2.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: long eventPlaybackPositionMs>;

        goto label17;

     label16:
        $l30 = -9223372036854775807L;

     label17:
        specialinvoke r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: void maybeUpdateMediaTimeHistory(long,long)>($l14, $l30);

        $l15 = r2.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: long realtimeMs>;

        specialinvoke r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: void maybeRecordVideoFormatTime(long)>($l15);

        $l16 = r2.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: long realtimeMs>;

        specialinvoke r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: void maybeRecordAudioFormatTime(long)>($l16);

     label18:
        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: float currentPlaybackSpeed> = f0;

        $i31 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int currentPlaybackState>;

        if $i31 == i28 goto label19;

        specialinvoke r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: void updatePlaybackState(int,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime)>(i28, r2);

     label19:
        return;
    }

    public androidx.media3.exoplayer.analytics.PlaybackStats build(boolean)
    {
        androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker r0;
        boolean z0, z1, $z2, $z3, $z4, $z6, $z7, z8, $z9, $z10, $z11, $z12;
        long l0, l1, $l2, $l4, $l5, $l7, $l8, l10, $l11, $l13, $l24, $l26, $l27, $l28, $l29, $l30, $l31, $l34, $l38, $l39, $l42, $l43, $l44, $l45, $l46;
        java.lang.Object r1, r2, r11, $r12, $r13, $r16, $r17;
        byte $b3, $b14, $b15, $b16, $b17, $b19, $b25, $b33, $b35, $b36, $b40, $b41, $b48;
        java.util.List $r3, $r4, $r5, $r8, $r20, $r21, r27, r28, r29, r30, r31;
        long[] $r6, $r9, r10, $r15;
        int $i6, $i9, $i20, $i21, $i22, $i23, $i32, $i37, $i47, $i49, $i50;
        java.util.ArrayList r22, r23, r24, r25;
        androidx.media3.exoplayer.analytics.PlaybackStats r26;

        r0 := @this: androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker;

        z0 := @parameter0: boolean;

        r10 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long[] playbackStateDurationsMs>;

        r11 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: java.util.List mediaTimeHistory>;

        if z0 != 0 goto label01;

        l10 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r6 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long[] playbackStateDurationsMs>;

        r10 = staticinvoke <java.util.Arrays: long[] copyOf(long[],int)>($r6, 16);

        $l4 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long currentPlaybackStateStartTimeMs>;

        $l5 = l10 - $l4;

        l1 = staticinvoke <java.lang.Math: long max(long,long)>(0L, $l5);

        $i6 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int currentPlaybackState>;

        $l7 = r10[$i6];

        $l8 = $l7 + l1;

        r10[$i6] = $l8;

        specialinvoke r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: void maybeUpdateMaxRebufferTimeMs(long)>(l10);

        specialinvoke r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: void maybeRecordVideoFormatTime(long)>(l10);

        specialinvoke r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: void maybeRecordAudioFormatTime(long)>(l10);

        r22 = new java.util.ArrayList;

        $r8 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: java.util.List mediaTimeHistory>;

        specialinvoke r22.<java.util.ArrayList: void <init>(java.util.Collection)>($r8);

        r11 = r22;

        $z4 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean keepHistory>;

        if $z4 == 0 goto label01;

        $i9 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int currentPlaybackState>;

        if $i9 != 3 goto label01;

        $r9 = specialinvoke r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long[] guessMediaTimeBasedOnElapsedRealtime(long)>(l10);

        r27 = (java.util.List) r11;

        interfaceinvoke r27.<java.util.List: boolean add(java.lang.Object)>($r9);

     label01:
        $z6 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean isJoinTimeInvalid>;

        if $z6 != 0 goto label02;

        $z3 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean hasBeenReady>;

        if $z3 != 0 goto label03;

     label02:
        $z7 = 1;

        goto label04;

     label03:
        $z7 = 0;

     label04:
        z8 = $z7;

        if z8 == 0 goto label05;

        $l11 = -9223372036854775807L;

        goto label06;

     label05:
        $l11 = r10[2];

     label06:
        l0 = $l11;

        $l2 = r10[1];

        $b3 = $l2 cmp 0L;

        if $b3 <= 0 goto label07;

        $z9 = 1;

        goto label08;

     label07:
        $z9 = 0;

     label08:
        z1 = $z9;

        if z0 == 0 goto label09;

        $r12 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: java.util.List videoFormatHistory>;

        goto label10;

     label09:
        r23 = new java.util.ArrayList;

        $r12 = r23;

        $r3 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: java.util.List videoFormatHistory>;

        specialinvoke r23.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

     label10:
        r1 = $r12;

        if z0 == 0 goto label11;

        $r13 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: java.util.List audioFormatHistory>;

        goto label12;

     label11:
        r24 = new java.util.ArrayList;

        $r13 = r24;

        $r4 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: java.util.List audioFormatHistory>;

        specialinvoke r24.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

     label12:
        r2 = $r13;

        r26 = new androidx.media3.exoplayer.analytics.PlaybackStats;

        $r15 = r10;

        if z0 == 0 goto label13;

        $r16 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: java.util.List playbackStateHistory>;

        goto label14;

     label13:
        r25 = new java.util.ArrayList;

        $r16 = r25;

        $r5 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: java.util.List playbackStateHistory>;

        specialinvoke r25.<java.util.ArrayList: void <init>(java.util.Collection)>($r5);

     label14:
        $r17 = r11;

        $l13 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long firstReportedTimeMs>;

        $z2 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean isForeground>;

        if $z2 == 0 goto label15;

        $b14 = 1;

        goto label16;

     label15:
        $b14 = 0;

     label16:
        $z10 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean hasBeenReady>;

        if $z10 == 0 goto label17;

        $b15 = 0;

        goto label18;

     label17:
        $b15 = 1;

     label18:
        $z11 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean hasEnded>;

        if $z11 == 0 goto label19;

        $b16 = 1;

        goto label20;

     label19:
        $b16 = 0;

     label20:
        if z1 == 0 goto label21;

        $b17 = 1;

        goto label22;

     label21:
        $b17 = 0;

     label22:
        if z8 == 0 goto label23;

        $b19 = 0;

        goto label24;

     label23:
        $b19 = 1;

     label24:
        $i20 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int pauseCount>;

        $i21 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int pauseBufferCount>;

        $i22 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int seekCount>;

        $i23 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int rebufferCount>;

        $l24 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long maxRebufferTimeMs>;

        $z12 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean isAd>;

        if $z12 == 0 goto label25;

        $b25 = 1;

        goto label26;

     label25:
        $b25 = 0;

     label26:
        $l26 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long videoFormatHeightTimeMs>;

        $l27 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long videoFormatHeightTimeProduct>;

        $l28 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long videoFormatBitrateTimeMs>;

        $l29 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long videoFormatBitrateTimeProduct>;

        $l30 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long audioFormatTimeMs>;

        $l31 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long audioFormatBitrateTimeProduct>;

        $i32 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int initialVideoFormatHeight>;

        if $i32 != -1 goto label27;

        $b33 = 0;

        goto label28;

     label27:
        $b33 = 1;

     label28:
        $l34 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long initialVideoFormatBitrate>;

        $b35 = $l34 cmp -1L;

        if $b35 != 0 goto label29;

        $b36 = 0;

        goto label30;

     label29:
        $b36 = 1;

     label30:
        $i37 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int initialVideoFormatHeight>;

        $l38 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long initialVideoFormatBitrate>;

        $l39 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long initialAudioFormatBitrate>;

        $b40 = $l39 cmp -1L;

        if $b40 != 0 goto label31;

        $b41 = 0;

        goto label32;

     label31:
        $b41 = 1;

     label32:
        $l42 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long initialAudioFormatBitrate>;

        $l43 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long bandwidthTimeMs>;

        $l44 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long bandwidthBytes>;

        $l45 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long droppedFrames>;

        $l46 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long audioUnderruns>;

        $i47 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int fatalErrorCount>;

        if $i47 <= 0 goto label33;

        $b48 = 1;

        goto label34;

     label33:
        $b48 = 0;

     label34:
        $i49 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int fatalErrorCount>;

        $i50 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int nonFatalErrorCount>;

        $r20 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: java.util.List fatalErrorHistory>;

        $r21 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: java.util.List nonFatalErrorHistory>;

        r28 = (java.util.List) $r16;

        r29 = (java.util.List) $r17;

        r30 = (java.util.List) r1;

        r31 = (java.util.List) r2;

        specialinvoke r26.<androidx.media3.exoplayer.analytics.PlaybackStats: void <init>(int,long[],java.util.List,java.util.List,long,int,int,int,int,long,int,int,int,int,int,long,int,java.util.List,java.util.List,long,long,long,long,long,long,int,int,int,long,int,long,long,long,long,long,int,int,int,java.util.List,java.util.List)>(1, $r15, r28, r29, $l13, $b14, $b15, $b16, $b17, l0, $b19, $i20, $i21, $i22, $i23, $l24, $b25, r30, r31, $l26, $l27, $l28, $l29, $l30, $l31, $b33, $b36, $i37, $l38, $b41, $l42, $l43, $l44, $l45, $l46, $b48, $i49, $i50, $r20, $r21);

        return r26;
    }

    private void updatePlaybackState(int, androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime)
    {
        androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker r0;
        int i0, $i7, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22, $i23, $i24, $i25, $i27;
        androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime r1;
        long l1, $l2, $l3, $l5, $l6, $l8, $l9, $l10, $l21, $l26, $l28, $l29;
        byte $b4, $b11;
        long[] $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z11, $z12, $z13, $z14, $z15, $z16;
        androidx.media3.exoplayer.analytics.PlaybackStats$EventTimeAndPlaybackState $r3;
        java.util.List $r4;

        r0 := @this: androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime;

        $l3 = r1.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: long realtimeMs>;

        $l2 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long currentPlaybackStateStartTimeMs>;

        $b4 = $l3 cmp $l2;

        if $b4 < 0 goto label01;

        $z13 = 1;

        goto label02;

     label01:
        $z13 = 0;

     label02:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z13);

        $l6 = r1.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: long realtimeMs>;

        $l5 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long currentPlaybackStateStartTimeMs>;

        l1 = $l6 - $l5;

        $r2 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long[] playbackStateDurationsMs>;

        $i7 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int currentPlaybackState>;

        $l8 = $r2[$i7];

        $l9 = $l8 + l1;

        $r2[$i7] = $l9;

        $l10 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long firstReportedTimeMs>;

        $b11 = $l10 cmp -9223372036854775807L;

        if $b11 != 0 goto label03;

        $l26 = r1.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: long realtimeMs>;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long firstReportedTimeMs> = $l26;

     label03:
        $z0 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean isJoinTimeInvalid>;

        $i12 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int currentPlaybackState>;

        $z1 = staticinvoke <androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean isInvalidJoinTransition(int,int)>($i12, i0);

        $z2 = $z0 | $z1;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean isJoinTimeInvalid> = $z2;

        $z3 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean hasBeenReady>;

        $z4 = staticinvoke <androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean isReadyState(int)>(i0);

        $z5 = $z3 | $z4;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean hasBeenReady> = $z5;

        $z6 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean hasEnded>;

        if i0 != 11 goto label04;

        $z14 = 1;

        goto label05;

     label04:
        $z14 = 0;

     label05:
        $z7 = $z6 | $z14;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean hasEnded> = $z7;

        $i13 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int currentPlaybackState>;

        $z8 = staticinvoke <androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean isPausedState(int)>($i13);

        if $z8 != 0 goto label06;

        $z12 = staticinvoke <androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean isPausedState(int)>(i0);

        if $z12 == 0 goto label06;

        $i24 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int pauseCount>;

        $i25 = $i24 + 1;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int pauseCount> = $i25;

     label06:
        if i0 != 5 goto label07;

        $i22 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int seekCount>;

        $i23 = $i22 + 1;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int seekCount> = $i23;

     label07:
        $i14 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int currentPlaybackState>;

        $z9 = staticinvoke <androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean isRebufferingState(int)>($i14);

        if $z9 != 0 goto label08;

        $z11 = staticinvoke <androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean isRebufferingState(int)>(i0);

        if $z11 == 0 goto label08;

        $i19 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int rebufferCount>;

        $i20 = $i19 + 1;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int rebufferCount> = $i20;

        $l21 = r1.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: long realtimeMs>;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long lastRebufferStartTimeMs> = $l21;

     label08:
        $i27 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int currentPlaybackState>;

        $z15 = staticinvoke <androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean isRebufferingState(int)>($i27);

        if $z15 == 0 goto label09;

        $i16 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int currentPlaybackState>;

        if $i16 == 7 goto label09;

        if i0 != 7 goto label09;

        $i17 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int pauseBufferCount>;

        $i18 = $i17 + 1;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int pauseBufferCount> = $i18;

     label09:
        $l28 = r1.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: long realtimeMs>;

        specialinvoke r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: void maybeUpdateMaxRebufferTimeMs(long)>($l28);

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int currentPlaybackState> = i0;

        $l29 = r1.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: long realtimeMs>;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long currentPlaybackStateStartTimeMs> = $l29;

        $z16 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean keepHistory>;

        if $z16 == 0 goto label10;

        $r4 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: java.util.List playbackStateHistory>;

        $r3 = new androidx.media3.exoplayer.analytics.PlaybackStats$EventTimeAndPlaybackState;

        $i15 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int currentPlaybackState>;

        specialinvoke $r3.<androidx.media3.exoplayer.analytics.PlaybackStats$EventTimeAndPlaybackState: void <init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int)>(r1, $i15);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r3);

     label10:
        return;
    }

    private int resolveNewPlaybackState(androidx.media3.common.Player)
    {
        androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker r0;
        androidx.media3.common.Player r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        byte $b9, $b10, $b11;

        r0 := @this: androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker;

        r1 := @parameter0: androidx.media3.common.Player;

        i0 = interfaceinvoke r1.<androidx.media3.common.Player: int getPlaybackState()>();

        $z0 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean isSeeking>;

        if $z0 == 0 goto label01;

        $z7 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean isForeground>;

        if $z7 == 0 goto label01;

        return 5;

     label01:
        $z1 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean hasFatalError>;

        if $z1 == 0 goto label02;

        return 13;

     label02:
        $z2 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean isForeground>;

        if $z2 != 0 goto label05;

        $z6 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean startedLoading>;

        if $z6 == 0 goto label03;

        $b9 = 1;

        goto label04;

     label03:
        $b9 = 0;

     label04:
        return $b9;

     label05:
        $z3 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean isInterruptedByAd>;

        if $z3 == 0 goto label06;

        return 14;

     label06:
        if i0 != 4 goto label07;

        return 11;

     label07:
        if i0 != 2 goto label13;

        $i4 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int currentPlaybackState>;

        if $i4 == 0 goto label08;

        $i5 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int currentPlaybackState>;

        if $i5 == 1 goto label08;

        $i6 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int currentPlaybackState>;

        if $i6 == 2 goto label08;

        $i7 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int currentPlaybackState>;

        if $i7 != 14 goto label09;

     label08:
        return 2;

     label09:
        $z5 = interfaceinvoke r1.<androidx.media3.common.Player: boolean getPlayWhenReady()>();

        if $z5 != 0 goto label10;

        return 7;

     label10:
        $i8 = interfaceinvoke r1.<androidx.media3.common.Player: int getPlaybackSuppressionReason()>();

        if $i8 == 0 goto label11;

        $b10 = 10;

        goto label12;

     label11:
        $b10 = 6;

     label12:
        return $b10;

     label13:
        if i0 != 3 goto label17;

        $z4 = interfaceinvoke r1.<androidx.media3.common.Player: boolean getPlayWhenReady()>();

        if $z4 != 0 goto label14;

        return 4;

     label14:
        $i3 = interfaceinvoke r1.<androidx.media3.common.Player: int getPlaybackSuppressionReason()>();

        if $i3 == 0 goto label15;

        $b11 = 9;

        goto label16;

     label15:
        $b11 = 3;

     label16:
        return $b11;

     label17:
        if i0 != 1 goto label18;

        $i2 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int currentPlaybackState>;

        if $i2 == 0 goto label18;

        return 12;

     label18:
        $i1 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int currentPlaybackState>;

        return $i1;
    }

    private void maybeUpdateMaxRebufferTimeMs(long)
    {
        androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker r0;
        long l0, l1, $l3, $l4, $l6;
        int $i2;
        boolean $z0;
        byte $b5, $b7;

        r0 := @this: androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker;

        l0 := @parameter0: long;

        $i2 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int currentPlaybackState>;

        $z0 = staticinvoke <androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean isRebufferingState(int)>($i2);

        if $z0 == 0 goto label2;

        $l3 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long lastRebufferStartTimeMs>;

        l1 = l0 - $l3;

        $l4 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long maxRebufferTimeMs>;

        $b5 = $l4 cmp -9223372036854775807L;

        if $b5 == 0 goto label1;

        $l6 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long maxRebufferTimeMs>;

        $b7 = l1 cmp $l6;

        if $b7 <= 0 goto label2;

     label1:
        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long maxRebufferTimeMs> = l1;

     label2:
        return;
    }

    private void maybeUpdateMediaTimeHistory(long, long)
    {
        androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker r0;
        long l0, l1, l2;
        boolean $z0, $z1, $z4;
        int $i3, $i5, $i6;
        java.util.List $r1, $r2, $r5, $r6, $r7, $r8, $r12;
        long[] $r3, $r4, $r10, $r11;
        byte $b4, $b7, $b8;
        java.lang.Object $r9;

        r0 := @this: androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $z0 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean keepHistory>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $i3 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int currentPlaybackState>;

        if $i3 == 3 goto label3;

        $b4 = l1 cmp -9223372036854775807L;

        if $b4 != 0 goto label2;

        return;

     label2:
        $r6 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: java.util.List mediaTimeHistory>;

        $z4 = interfaceinvoke $r6.<java.util.List: boolean isEmpty()>();

        if $z4 != 0 goto label3;

        $r8 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: java.util.List mediaTimeHistory>;

        $r7 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: java.util.List mediaTimeHistory>;

        $i5 = interfaceinvoke $r7.<java.util.List: int size()>();

        $i6 = $i5 - 1;

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>($i6);

        $r10 = (long[]) $r9;

        l2 = $r10[1];

        $b7 = l2 cmp l1;

        if $b7 == 0 goto label3;

        $r12 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: java.util.List mediaTimeHistory>;

        $r11 = newarray (long)[2];

        $r11[0] = l0;

        $r11[1] = l2;

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r11);

     label3:
        $b8 = l1 cmp -9223372036854775807L;

        if $b8 == 0 goto label4;

        $r5 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: java.util.List mediaTimeHistory>;

        $r4 = newarray (long)[2];

        $r4[0] = l0;

        $r4[1] = l1;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label5;

     label4:
        $r1 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: java.util.List mediaTimeHistory>;

        $z1 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label5;

        $r2 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: java.util.List mediaTimeHistory>;

        $r3 = specialinvoke r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long[] guessMediaTimeBasedOnElapsedRealtime(long)>(l0);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);

     label5:
        return;
    }

    private long[] guessMediaTimeBasedOnElapsedRealtime(long)
    {
        androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker r0;
        long l0, l1, l2, l3, l4, $l7;
        long[] r1, $r5;
        java.util.List $r2, $r3;
        int $i5, $i6;
        java.lang.Object $r4;
        float $f0, $f1, $f2;

        r0 := @this: androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker;

        l0 := @parameter0: long;

        $r3 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: java.util.List mediaTimeHistory>;

        $r2 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: java.util.List mediaTimeHistory>;

        $i5 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i6 = $i5 - 1;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i6);

        r1 = (long[]) $r4;

        l1 = r1[0];

        l2 = r1[1];

        $l7 = l0 - l1;

        $f1 = (float) $l7;

        $f0 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: float currentPlaybackSpeed>;

        $f2 = $f1 * $f0;

        l3 = (long) $f2;

        l4 = l2 + l3;

        $r5 = newarray (long)[2];

        $r5[0] = l0;

        $r5[1] = l4;

        return $r5;
    }

    private void maybeUpdateVideoFormat(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime, androidx.media3.common.Format)
    {
        androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker r0;
        androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime r1;
        androidx.media3.common.Format r2, $r3, $r5;
        boolean $z0, $z2;
        long $l0, $l4, $l7;
        androidx.media3.exoplayer.analytics.PlaybackStats$EventTimeAndFormat $r4;
        java.util.List $r6;
        int $i1, $i2, $i3, $i5, $i6;
        byte $b8;

        r0 := @this: androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker;

        r1 := @parameter0: androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime;

        r2 := @parameter1: androidx.media3.common.Format;

        $r3 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: androidx.media3.common.Format currentVideoFormat>;

        $z0 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r3, r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        $l0 = r1.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: long realtimeMs>;

        specialinvoke r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: void maybeRecordVideoFormatTime(long)>($l0);

        if r2 == null goto label3;

        $i1 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int initialVideoFormatHeight>;

        if $i1 != -1 goto label2;

        $i5 = r2.<androidx.media3.common.Format: int height>;

        if $i5 == -1 goto label2;

        $i6 = r2.<androidx.media3.common.Format: int height>;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int initialVideoFormatHeight> = $i6;

     label2:
        $l7 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long initialVideoFormatBitrate>;

        $b8 = $l7 cmp -1L;

        if $b8 != 0 goto label3;

        $i2 = r2.<androidx.media3.common.Format: int bitrate>;

        if $i2 == -1 goto label3;

        $i3 = r2.<androidx.media3.common.Format: int bitrate>;

        $l4 = (long) $i3;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long initialVideoFormatBitrate> = $l4;

     label3:
        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: androidx.media3.common.Format currentVideoFormat> = r2;

        $z2 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean keepHistory>;

        if $z2 == 0 goto label4;

        $r6 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: java.util.List videoFormatHistory>;

        $r4 = new androidx.media3.exoplayer.analytics.PlaybackStats$EventTimeAndFormat;

        $r5 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: androidx.media3.common.Format currentVideoFormat>;

        specialinvoke $r4.<androidx.media3.exoplayer.analytics.PlaybackStats$EventTimeAndFormat: void <init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Format)>(r1, $r5);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r4);

     label4:
        return;
    }

    private void maybeUpdateAudioFormat(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime, androidx.media3.common.Format)
    {
        androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker r0;
        androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime r1;
        androidx.media3.common.Format r2, $r3, $r5;
        boolean $z0, $z2;
        long $l0, $l1, $l5;
        androidx.media3.exoplayer.analytics.PlaybackStats$EventTimeAndFormat $r4;
        java.util.List $r6;
        byte $b2;
        int $i3, $i4;

        r0 := @this: androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker;

        r1 := @parameter0: androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime;

        r2 := @parameter1: androidx.media3.common.Format;

        $r3 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: androidx.media3.common.Format currentAudioFormat>;

        $z0 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r3, r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        $l0 = r1.<androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime: long realtimeMs>;

        specialinvoke r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: void maybeRecordAudioFormatTime(long)>($l0);

        if r2 == null goto label2;

        $l1 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long initialAudioFormatBitrate>;

        $b2 = $l1 cmp -1L;

        if $b2 != 0 goto label2;

        $i3 = r2.<androidx.media3.common.Format: int bitrate>;

        if $i3 == -1 goto label2;

        $i4 = r2.<androidx.media3.common.Format: int bitrate>;

        $l5 = (long) $i4;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long initialAudioFormatBitrate> = $l5;

     label2:
        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: androidx.media3.common.Format currentAudioFormat> = r2;

        $z2 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: boolean keepHistory>;

        if $z2 == 0 goto label3;

        $r6 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: java.util.List audioFormatHistory>;

        $r4 = new androidx.media3.exoplayer.analytics.PlaybackStats$EventTimeAndFormat;

        $r5 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: androidx.media3.common.Format currentAudioFormat>;

        specialinvoke $r4.<androidx.media3.exoplayer.analytics.PlaybackStats$EventTimeAndFormat: void <init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Format)>(r1, $r5);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r4);

     label3:
        return;
    }

    private void maybeRecordVideoFormatTime(long)
    {
        androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker r0;
        long l0, l1, $l3, $l4, $l7, $l8, $l10, $l11, $l12, $l13, $l14, $l15, $l17, $l18, $l19, $l20;
        int $i2, $i5, $i6, $i9, $i16;
        androidx.media3.common.Format $r1, $r2, $r3, $r4, $r5;
        float $f0, $f1, $f2;

        r0 := @this: androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker;

        l0 := @parameter0: long;

        $i2 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int currentPlaybackState>;

        if $i2 != 3 goto label2;

        $r1 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: androidx.media3.common.Format currentVideoFormat>;

        if $r1 == null goto label2;

        $l3 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long lastVideoFormatStartTimeMs>;

        $l4 = l0 - $l3;

        $f1 = (float) $l4;

        $f0 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: float currentPlaybackSpeed>;

        $f2 = $f1 * $f0;

        l1 = (long) $f2;

        $r2 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: androidx.media3.common.Format currentVideoFormat>;

        $i5 = $r2.<androidx.media3.common.Format: int height>;

        if $i5 == -1 goto label1;

        $l14 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long videoFormatHeightTimeMs>;

        $l15 = $l14 + l1;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long videoFormatHeightTimeMs> = $l15;

        $l19 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long videoFormatHeightTimeProduct>;

        $r5 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: androidx.media3.common.Format currentVideoFormat>;

        $i16 = $r5.<androidx.media3.common.Format: int height>;

        $l17 = (long) $i16;

        $l18 = l1 * $l17;

        $l20 = $l19 + $l18;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long videoFormatHeightTimeProduct> = $l20;

     label1:
        $r3 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: androidx.media3.common.Format currentVideoFormat>;

        $i6 = $r3.<androidx.media3.common.Format: int bitrate>;

        if $i6 == -1 goto label2;

        $l7 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long videoFormatBitrateTimeMs>;

        $l8 = $l7 + l1;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long videoFormatBitrateTimeMs> = $l8;

        $l12 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long videoFormatBitrateTimeProduct>;

        $r4 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: androidx.media3.common.Format currentVideoFormat>;

        $i9 = $r4.<androidx.media3.common.Format: int bitrate>;

        $l10 = (long) $i9;

        $l11 = l1 * $l10;

        $l13 = $l12 + $l11;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long videoFormatBitrateTimeProduct> = $l13;

     label2:
        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long lastVideoFormatStartTimeMs> = l0;

        return;
    }

    private void maybeRecordAudioFormatTime(long)
    {
        androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker r0;
        long l0, l1, $l4, $l5, $l6, $l7, $l9, $l10, $l11, $l12;
        int $i2, $i3, $i8;
        androidx.media3.common.Format $r1, $r2, $r3;
        float $f0, $f1, $f2;

        r0 := @this: androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker;

        l0 := @parameter0: long;

        $i2 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: int currentPlaybackState>;

        if $i2 != 3 goto label1;

        $r1 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: androidx.media3.common.Format currentAudioFormat>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: androidx.media3.common.Format currentAudioFormat>;

        $i3 = $r2.<androidx.media3.common.Format: int bitrate>;

        if $i3 == -1 goto label1;

        $l4 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long lastAudioFormatStartTimeMs>;

        $l5 = l0 - $l4;

        $f1 = (float) $l5;

        $f0 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: float currentPlaybackSpeed>;

        $f2 = $f1 * $f0;

        l1 = (long) $f2;

        $l6 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long audioFormatTimeMs>;

        $l7 = $l6 + l1;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long audioFormatTimeMs> = $l7;

        $l11 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long audioFormatBitrateTimeProduct>;

        $r3 = r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: androidx.media3.common.Format currentAudioFormat>;

        $i8 = $r3.<androidx.media3.common.Format: int bitrate>;

        $l9 = (long) $i8;

        $l10 = l1 * $l9;

        $l12 = $l11 + $l10;

        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long audioFormatBitrateTimeProduct> = $l12;

     label1:
        r0.<androidx.media3.exoplayer.analytics.PlaybackStatsListener$PlaybackStatsTracker: long lastAudioFormatStartTimeMs> = l0;

        return;
    }

    private static boolean isReadyState(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 == 3 goto label1;

        if i0 == 4 goto label1;

        if i0 != 9 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private static boolean isPausedState(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 == 4 goto label1;

        if i0 != 7 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private static boolean isRebufferingState(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 == 6 goto label1;

        if i0 == 7 goto label1;

        if i0 != 10 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private static boolean isInvalidJoinTransition(int, int)
    {
        int i0, i1;
        boolean $z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 == 1 goto label1;

        if i0 == 2 goto label1;

        if i0 == 14 goto label1;

        return 0;

     label1:
        if i1 == 1 goto label2;

        if i1 == 2 goto label2;

        if i1 == 14 goto label2;

        if i1 == 3 goto label2;

        if i1 == 4 goto label2;

        if i1 == 9 goto label2;

        if i1 == 11 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

