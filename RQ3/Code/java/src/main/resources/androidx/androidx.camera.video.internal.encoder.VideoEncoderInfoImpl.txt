androidx.camera.video.internal.encoder.VideoEncoderInfoImpl
<androidx.camera.video.internal.encoder.VideoEncoderInfoImpl: android.media.MediaCodecInfo$VideoCapabilities mVideoCapabilities>
    public static androidx.camera.video.internal.encoder.VideoEncoderInfoImpl 'from'(androidx.camera.video.internal.encoder.VideoEncoderConfig) throws androidx.camera.video.internal.encoder.InvalidConfigException
    {
        androidx.camera.video.internal.encoder.VideoEncoderConfig r0;
        androidx.camera.video.internal.encoder.VideoEncoderInfoImpl $r1;
        android.media.MediaCodecInfo $r2;
        java.lang.String $r3;

        r0 := @parameter0: androidx.camera.video.internal.encoder.VideoEncoderConfig;

        $r1 = new androidx.camera.video.internal.encoder.VideoEncoderInfoImpl;

        $r2 = staticinvoke <androidx.camera.video.internal.encoder.VideoEncoderInfoImpl: android.media.MediaCodecInfo findCodecAndGetCodecInfo(androidx.camera.video.internal.encoder.EncoderConfig)>(r0);

        $r3 = virtualinvoke r0.<androidx.camera.video.internal.encoder.VideoEncoderConfig: java.lang.String getMimeType()>();

        specialinvoke $r1.<androidx.camera.video.internal.encoder.VideoEncoderInfoImpl: void <init>(android.media.MediaCodecInfo,java.lang.String)>($r2, $r3);

        return $r1;
    }

    void <init>(android.media.MediaCodecInfo, java.lang.String) throws androidx.camera.video.internal.encoder.InvalidConfigException
    {
        androidx.camera.video.internal.encoder.VideoEncoderInfoImpl r0;
        android.media.MediaCodecInfo r1;
        java.lang.String r2;
        android.media.MediaCodecInfo$CodecCapabilities $r3;
        android.media.MediaCodecInfo$VideoCapabilities $r4, $r6;
        java.lang.Object $r5;

        r0 := @this: androidx.camera.video.internal.encoder.VideoEncoderInfoImpl;

        r1 := @parameter0: android.media.MediaCodecInfo;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<androidx.camera.video.internal.encoder.EncoderInfoImpl: void <init>(android.media.MediaCodecInfo,java.lang.String)>(r1, r2);

        $r3 = r0.<androidx.camera.video.internal.encoder.VideoEncoderInfoImpl: android.media.MediaCodecInfo$CodecCapabilities mCodecCapabilities>;

        $r4 = virtualinvoke $r3.<android.media.MediaCodecInfo$CodecCapabilities: android.media.MediaCodecInfo$VideoCapabilities getVideoCapabilities()>();

        $r5 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r4);

        $r6 = (android.media.MediaCodecInfo$VideoCapabilities) $r5;

        r0.<androidx.camera.video.internal.encoder.VideoEncoderInfoImpl: android.media.MediaCodecInfo$VideoCapabilities mVideoCapabilities> = $r6;

        return;
    }

    public android.util.Range getSupportedWidths()
    {
        androidx.camera.video.internal.encoder.VideoEncoderInfoImpl r0;
        android.media.MediaCodecInfo$VideoCapabilities $r1;
        android.util.Range $r2;

        r0 := @this: androidx.camera.video.internal.encoder.VideoEncoderInfoImpl;

        $r1 = r0.<androidx.camera.video.internal.encoder.VideoEncoderInfoImpl: android.media.MediaCodecInfo$VideoCapabilities mVideoCapabilities>;

        $r2 = virtualinvoke $r1.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range getSupportedWidths()>();

        return $r2;
    }

    public android.util.Range getSupportedHeights()
    {
        androidx.camera.video.internal.encoder.VideoEncoderInfoImpl r0;
        android.media.MediaCodecInfo$VideoCapabilities $r1;
        android.util.Range $r2;

        r0 := @this: androidx.camera.video.internal.encoder.VideoEncoderInfoImpl;

        $r1 = r0.<androidx.camera.video.internal.encoder.VideoEncoderInfoImpl: android.media.MediaCodecInfo$VideoCapabilities mVideoCapabilities>;

        $r2 = virtualinvoke $r1.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range getSupportedHeights()>();

        return $r2;
    }

    public android.util.Range getSupportedWidthsFor(int)
    {
        androidx.camera.video.internal.encoder.VideoEncoderInfoImpl r0;
        int i0;
        java.lang.Throwable r1, $r4;
        android.media.MediaCodecInfo$VideoCapabilities $r2;
        android.util.Range $r3;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: androidx.camera.video.internal.encoder.VideoEncoderInfoImpl;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<androidx.camera.video.internal.encoder.VideoEncoderInfoImpl: android.media.MediaCodecInfo$VideoCapabilities mVideoCapabilities>;

        $r3 = virtualinvoke $r2.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range getSupportedWidthsFor(int)>(i0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = staticinvoke <androidx.camera.video.internal.encoder.VideoEncoderInfoImpl: java.lang.IllegalArgumentException toIllegalArgumentException(java.lang.Throwable)>(r1);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.util.Range getSupportedHeightsFor(int)
    {
        androidx.camera.video.internal.encoder.VideoEncoderInfoImpl r0;
        int i0;
        java.lang.Throwable r1, $r4;
        android.media.MediaCodecInfo$VideoCapabilities $r2;
        android.util.Range $r3;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: androidx.camera.video.internal.encoder.VideoEncoderInfoImpl;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<androidx.camera.video.internal.encoder.VideoEncoderInfoImpl: android.media.MediaCodecInfo$VideoCapabilities mVideoCapabilities>;

        $r3 = virtualinvoke $r2.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range getSupportedHeightsFor(int)>(i0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = staticinvoke <androidx.camera.video.internal.encoder.VideoEncoderInfoImpl: java.lang.IllegalArgumentException toIllegalArgumentException(java.lang.Throwable)>(r1);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getWidthAlignment()
    {
        androidx.camera.video.internal.encoder.VideoEncoderInfoImpl r0;
        android.media.MediaCodecInfo$VideoCapabilities $r1;
        int $i0;

        r0 := @this: androidx.camera.video.internal.encoder.VideoEncoderInfoImpl;

        $r1 = r0.<androidx.camera.video.internal.encoder.VideoEncoderInfoImpl: android.media.MediaCodecInfo$VideoCapabilities mVideoCapabilities>;

        $i0 = virtualinvoke $r1.<android.media.MediaCodecInfo$VideoCapabilities: int getWidthAlignment()>();

        return $i0;
    }

    public int getHeightAlignment()
    {
        androidx.camera.video.internal.encoder.VideoEncoderInfoImpl r0;
        android.media.MediaCodecInfo$VideoCapabilities $r1;
        int $i0;

        r0 := @this: androidx.camera.video.internal.encoder.VideoEncoderInfoImpl;

        $r1 = r0.<androidx.camera.video.internal.encoder.VideoEncoderInfoImpl: android.media.MediaCodecInfo$VideoCapabilities mVideoCapabilities>;

        $i0 = virtualinvoke $r1.<android.media.MediaCodecInfo$VideoCapabilities: int getHeightAlignment()>();

        return $i0;
    }

    private static java.lang.IllegalArgumentException toIllegalArgumentException(java.lang.Throwable)
    {
        java.lang.Throwable r0;
        boolean $z0;
        java.lang.IllegalArgumentException $r1, $r2;

        r0 := @parameter0: java.lang.Throwable;

        $z0 = r0 instanceof java.lang.IllegalArgumentException;

        if $z0 == 0 goto label1;

        $r2 = (java.lang.IllegalArgumentException) r0;

        return $r2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>(r0);

        return $r1;
    }

