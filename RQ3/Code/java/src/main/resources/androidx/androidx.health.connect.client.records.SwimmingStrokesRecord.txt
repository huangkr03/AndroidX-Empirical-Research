androidx.health.connect.client.records.SwimmingStrokesRecord
<androidx.health.connect.client.records.SwimmingStrokesRecord: long count>
<androidx.health.connect.client.records.SwimmingStrokesRecord: java.lang.String type>
<androidx.health.connect.client.records.SwimmingStrokesRecord: java.time.Instant startTime>
<androidx.health.connect.client.records.SwimmingStrokesRecord: java.time.ZoneOffset startZoneOffset>
<androidx.health.connect.client.records.SwimmingStrokesRecord: java.time.Instant endTime>
<androidx.health.connect.client.records.SwimmingStrokesRecord: java.time.ZoneOffset endZoneOffset>
<androidx.health.connect.client.records.SwimmingStrokesRecord: androidx.health.connect.client.records.metadata.Metadata metadata>
    public void <init>(long, java.lang.String, java.time.Instant, java.time.ZoneOffset, java.time.Instant, java.time.ZoneOffset, androidx.health.connect.client.records.metadata.Metadata)
    {
        androidx.health.connect.client.records.SwimmingStrokesRecord r0;
        long l0, $l1;
        java.lang.String r1;
        java.time.Instant r2, r4;
        java.time.ZoneOffset r3, r5;
        androidx.health.connect.client.records.metadata.Metadata r6;

        r0 := @this: androidx.health.connect.client.records.SwimmingStrokesRecord;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.time.Instant;

        r3 := @parameter3: java.time.ZoneOffset;

        r4 := @parameter4: java.time.Instant;

        r5 := @parameter5: java.time.ZoneOffset;

        r6 := @parameter6: androidx.health.connect.client.records.metadata.Metadata;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "type");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "startTime");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "endTime");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r6, "metadata");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.health.connect.client.records.SwimmingStrokesRecord: long count> = l0;

        r0.<androidx.health.connect.client.records.SwimmingStrokesRecord: java.lang.String type> = r1;

        r0.<androidx.health.connect.client.records.SwimmingStrokesRecord: java.time.Instant startTime> = r2;

        r0.<androidx.health.connect.client.records.SwimmingStrokesRecord: java.time.ZoneOffset startZoneOffset> = r3;

        r0.<androidx.health.connect.client.records.SwimmingStrokesRecord: java.time.Instant endTime> = r4;

        r0.<androidx.health.connect.client.records.SwimmingStrokesRecord: java.time.ZoneOffset endZoneOffset> = r5;

        r0.<androidx.health.connect.client.records.SwimmingStrokesRecord: androidx.health.connect.client.records.metadata.Metadata metadata> = r6;

        $l1 = r0.<androidx.health.connect.client.records.SwimmingStrokesRecord: long count>;

        staticinvoke <androidx.health.connect.client.records.UtilsKt: void requireNonNegative(long,java.lang.String)>($l1, "count");

        return;
    }

    public void <init>(long, java.lang.String, java.time.Instant, java.time.ZoneOffset, java.time.Instant, java.time.ZoneOffset, androidx.health.connect.client.records.metadata.Metadata, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.health.connect.client.records.SwimmingStrokesRecord r0;
        java.lang.String r1;
        java.time.Instant r2, r4;
        java.time.ZoneOffset r3, r5;
        int i0, $i1, $i2;
        kotlin.jvm.internal.DefaultConstructorMarker r6;
        long l3;
        androidx.health.connect.client.records.metadata.Metadata r7;

        r0 := @this: androidx.health.connect.client.records.SwimmingStrokesRecord;

        l3 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.time.Instant;

        r3 := @parameter3: java.time.ZoneOffset;

        r4 := @parameter4: java.time.Instant;

        r5 := @parameter5: java.time.ZoneOffset;

        r7 := @parameter6: androidx.health.connect.client.records.metadata.Metadata;

        i0 := @parameter7: int;

        r6 := @parameter8: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        l3 = 0L;

     label1:
        $i2 = i0 & 64;

        if $i2 == 0 goto label2;

        r7 = <androidx.health.connect.client.records.metadata.Metadata: androidx.health.connect.client.records.metadata.Metadata EMPTY>;

     label2:
        specialinvoke r0.<androidx.health.connect.client.records.SwimmingStrokesRecord: void <init>(long,java.lang.String,java.time.Instant,java.time.ZoneOffset,java.time.Instant,java.time.ZoneOffset,androidx.health.connect.client.records.metadata.Metadata)>(l3, r1, r2, r3, r4, r5, r7);

        return;
    }

    public final long getCount()
    {
        androidx.health.connect.client.records.SwimmingStrokesRecord r0;
        long $l0;

        r0 := @this: androidx.health.connect.client.records.SwimmingStrokesRecord;

        $l0 = r0.<androidx.health.connect.client.records.SwimmingStrokesRecord: long count>;

        return $l0;
    }

    public final java.lang.String getType()
    {
        androidx.health.connect.client.records.SwimmingStrokesRecord r0;
        java.lang.String $r1;

        r0 := @this: androidx.health.connect.client.records.SwimmingStrokesRecord;

        $r1 = r0.<androidx.health.connect.client.records.SwimmingStrokesRecord: java.lang.String type>;

        return $r1;
    }

    public static void getType$annotations()
    {
        return;
    }

    public java.time.Instant getStartTime()
    {
        androidx.health.connect.client.records.SwimmingStrokesRecord r0;
        java.time.Instant $r1;

        r0 := @this: androidx.health.connect.client.records.SwimmingStrokesRecord;

        $r1 = r0.<androidx.health.connect.client.records.SwimmingStrokesRecord: java.time.Instant startTime>;

        return $r1;
    }

    public java.time.ZoneOffset getStartZoneOffset()
    {
        androidx.health.connect.client.records.SwimmingStrokesRecord r0;
        java.time.ZoneOffset $r1;

        r0 := @this: androidx.health.connect.client.records.SwimmingStrokesRecord;

        $r1 = r0.<androidx.health.connect.client.records.SwimmingStrokesRecord: java.time.ZoneOffset startZoneOffset>;

        return $r1;
    }

    public java.time.Instant getEndTime()
    {
        androidx.health.connect.client.records.SwimmingStrokesRecord r0;
        java.time.Instant $r1;

        r0 := @this: androidx.health.connect.client.records.SwimmingStrokesRecord;

        $r1 = r0.<androidx.health.connect.client.records.SwimmingStrokesRecord: java.time.Instant endTime>;

        return $r1;
    }

    public java.time.ZoneOffset getEndZoneOffset()
    {
        androidx.health.connect.client.records.SwimmingStrokesRecord r0;
        java.time.ZoneOffset $r1;

        r0 := @this: androidx.health.connect.client.records.SwimmingStrokesRecord;

        $r1 = r0.<androidx.health.connect.client.records.SwimmingStrokesRecord: java.time.ZoneOffset endZoneOffset>;

        return $r1;
    }

    public androidx.health.connect.client.records.metadata.Metadata getMetadata()
    {
        androidx.health.connect.client.records.SwimmingStrokesRecord r0;
        androidx.health.connect.client.records.metadata.Metadata $r1;

        r0 := @this: androidx.health.connect.client.records.SwimmingStrokesRecord;

        $r1 = r0.<androidx.health.connect.client.records.SwimmingStrokesRecord: androidx.health.connect.client.records.metadata.Metadata metadata>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.health.connect.client.records.SwimmingStrokesRecord r0, $r2, $r3, $r7, $r10, $r13, $r16, $r19;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        long $l0, $l1;
        byte $b2;
        java.lang.String $r4, $r5;
        java.time.Instant $r6, $r8, $r12, $r14;
        java.time.ZoneOffset $r9, $r11, $r15, $r17;
        androidx.health.connect.client.records.metadata.Metadata $r18, $r20;

        r0 := @this: androidx.health.connect.client.records.SwimmingStrokesRecord;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.health.connect.client.records.SwimmingStrokesRecord;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $l1 = r0.<androidx.health.connect.client.records.SwimmingStrokesRecord: long count>;

        $r2 = (androidx.health.connect.client.records.SwimmingStrokesRecord) r1;

        $l0 = $r2.<androidx.health.connect.client.records.SwimmingStrokesRecord: long count>;

        $b2 = $l1 cmp $l0;

        if $b2 == 0 goto label3;

        return 0;

     label3:
        $r5 = r0.<androidx.health.connect.client.records.SwimmingStrokesRecord: java.lang.String type>;

        $r3 = (androidx.health.connect.client.records.SwimmingStrokesRecord) r1;

        $r4 = $r3.<androidx.health.connect.client.records.SwimmingStrokesRecord: java.lang.String type>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, $r4);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        $r6 = virtualinvoke r0.<androidx.health.connect.client.records.SwimmingStrokesRecord: java.time.Instant getStartTime()>();

        $r7 = (androidx.health.connect.client.records.SwimmingStrokesRecord) r1;

        $r8 = virtualinvoke $r7.<androidx.health.connect.client.records.SwimmingStrokesRecord: java.time.Instant getStartTime()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r6, $r8);

        if $z2 != 0 goto label5;

        return 0;

     label5:
        $r9 = virtualinvoke r0.<androidx.health.connect.client.records.SwimmingStrokesRecord: java.time.ZoneOffset getStartZoneOffset()>();

        $r10 = (androidx.health.connect.client.records.SwimmingStrokesRecord) r1;

        $r11 = virtualinvoke $r10.<androidx.health.connect.client.records.SwimmingStrokesRecord: java.time.ZoneOffset getStartZoneOffset()>();

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r9, $r11);

        if $z3 != 0 goto label6;

        return 0;

     label6:
        $r12 = virtualinvoke r0.<androidx.health.connect.client.records.SwimmingStrokesRecord: java.time.Instant getEndTime()>();

        $r13 = (androidx.health.connect.client.records.SwimmingStrokesRecord) r1;

        $r14 = virtualinvoke $r13.<androidx.health.connect.client.records.SwimmingStrokesRecord: java.time.Instant getEndTime()>();

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r12, $r14);

        if $z4 != 0 goto label7;

        return 0;

     label7:
        $r15 = virtualinvoke r0.<androidx.health.connect.client.records.SwimmingStrokesRecord: java.time.ZoneOffset getEndZoneOffset()>();

        $r16 = (androidx.health.connect.client.records.SwimmingStrokesRecord) r1;

        $r17 = virtualinvoke $r16.<androidx.health.connect.client.records.SwimmingStrokesRecord: java.time.ZoneOffset getEndZoneOffset()>();

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r15, $r17);

        if $z5 != 0 goto label8;

        return 0;

     label8:
        $r18 = virtualinvoke r0.<androidx.health.connect.client.records.SwimmingStrokesRecord: androidx.health.connect.client.records.metadata.Metadata getMetadata()>();

        $r19 = (androidx.health.connect.client.records.SwimmingStrokesRecord) r1;

        $r20 = virtualinvoke $r19.<androidx.health.connect.client.records.SwimmingStrokesRecord: androidx.health.connect.client.records.metadata.Metadata getMetadata()>();

        $z6 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r18, $r20);

        if $z6 != 0 goto label9;

        return 0;

     label9:
        return 1;
    }

    public int hashCode()
    {
        androidx.health.connect.client.records.SwimmingStrokesRecord r0;
        long $l0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i12, i13, $i14, i15, i16, $i17, i18, i19;
        java.lang.String $r1;
        java.time.ZoneOffset $r2, $r4;
        java.time.Instant $r3;
        androidx.health.connect.client.records.metadata.Metadata $r5;
        byte b11;

        r0 := @this: androidx.health.connect.client.records.SwimmingStrokesRecord;

        b11 = 0;

        $i1 = 31 * b11;

        $l0 = r0.<androidx.health.connect.client.records.SwimmingStrokesRecord: long count>;

        $i2 = staticinvoke <java.lang.Long: int hashCode(long)>($l0);

        i12 = $i1 + $i2;

        $i3 = 31 * i12;

        $r1 = r0.<androidx.health.connect.client.records.SwimmingStrokesRecord: java.lang.String type>;

        $i4 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        i13 = $i3 + $i4;

        $i5 = 31 * i13;

        $r2 = virtualinvoke r0.<androidx.health.connect.client.records.SwimmingStrokesRecord: java.time.ZoneOffset getStartZoneOffset()>();

        if $r2 == null goto label1;

        $i14 = virtualinvoke $r2.<java.time.ZoneOffset: int hashCode()>();

        goto label2;

     label1:
        $i14 = 0;

     label2:
        i15 = $i5 + $i14;

        $i6 = 31 * i15;

        $r3 = virtualinvoke r0.<androidx.health.connect.client.records.SwimmingStrokesRecord: java.time.Instant getEndTime()>();

        $i7 = virtualinvoke $r3.<java.time.Instant: int hashCode()>();

        i16 = $i6 + $i7;

        $i8 = 31 * i16;

        $r4 = virtualinvoke r0.<androidx.health.connect.client.records.SwimmingStrokesRecord: java.time.ZoneOffset getEndZoneOffset()>();

        if $r4 == null goto label3;

        $i17 = virtualinvoke $r4.<java.time.ZoneOffset: int hashCode()>();

        goto label4;

     label3:
        $i17 = 0;

     label4:
        i18 = $i8 + $i17;

        $i9 = 31 * i18;

        $r5 = virtualinvoke r0.<androidx.health.connect.client.records.SwimmingStrokesRecord: androidx.health.connect.client.records.metadata.Metadata getMetadata()>();

        $i10 = virtualinvoke $r5.<androidx.health.connect.client.records.metadata.Metadata: int hashCode()>();

        i19 = $i9 + $i10;

        return i19;
    }

androidx.health.connect.client.records.SwimmingStrokesRecord$SwimmingType
<androidx.health.connect.client.records.SwimmingStrokesRecord$SwimmingType: androidx.health.connect.client.records.SwimmingStrokesRecord$SwimmingType INSTANCE>
<androidx.health.connect.client.records.SwimmingStrokesRecord$SwimmingType: java.lang.String FREESTYLE>
<androidx.health.connect.client.records.SwimmingStrokesRecord$SwimmingType: java.lang.String BACKSTROKE>
<androidx.health.connect.client.records.SwimmingStrokesRecord$SwimmingType: java.lang.String BREASTSTROKE>
<androidx.health.connect.client.records.SwimmingStrokesRecord$SwimmingType: java.lang.String BUTTERFLY>
<androidx.health.connect.client.records.SwimmingStrokesRecord$SwimmingType: java.lang.String MIXED>
<androidx.health.connect.client.records.SwimmingStrokesRecord$SwimmingType: java.lang.String OTHER>
    private void <init>()
    {
        androidx.health.connect.client.records.SwimmingStrokesRecord$SwimmingType r0;

        r0 := @this: androidx.health.connect.client.records.SwimmingStrokesRecord$SwimmingType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        androidx.health.connect.client.records.SwimmingStrokesRecord$SwimmingType $r0;

        $r0 = new androidx.health.connect.client.records.SwimmingStrokesRecord$SwimmingType;

        specialinvoke $r0.<androidx.health.connect.client.records.SwimmingStrokesRecord$SwimmingType: void <init>()>();

        <androidx.health.connect.client.records.SwimmingStrokesRecord$SwimmingType: androidx.health.connect.client.records.SwimmingStrokesRecord$SwimmingType INSTANCE> = $r0;

        return;
    }

androidx.health.connect.client.records.SwimmingStrokesRecord$SwimmingTypes
