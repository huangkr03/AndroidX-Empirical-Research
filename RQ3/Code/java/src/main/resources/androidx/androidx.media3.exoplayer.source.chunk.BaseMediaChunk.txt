androidx.media3.exoplayer.source.chunk.BaseMediaChunk
<androidx.media3.exoplayer.source.chunk.BaseMediaChunk: long clippedStartTimeUs>
<androidx.media3.exoplayer.source.chunk.BaseMediaChunk: long clippedEndTimeUs>
<androidx.media3.exoplayer.source.chunk.BaseMediaChunk: androidx.media3.exoplayer.source.chunk.BaseMediaChunkOutput output>
<androidx.media3.exoplayer.source.chunk.BaseMediaChunk: int[] firstSampleIndices>
    public void <init>(androidx.media3.datasource.DataSource, androidx.media3.datasource.DataSpec, androidx.media3.common.Format, int, java.lang.Object, long, long, long, long, long)
    {
        androidx.media3.exoplayer.source.chunk.BaseMediaChunk r0;
        androidx.media3.datasource.DataSource r1;
        androidx.media3.datasource.DataSpec r2;
        androidx.media3.common.Format r3;
        int i0;
        java.lang.Object r4;
        long l1, l2, l3, l4, l5;

        r0 := @this: androidx.media3.exoplayer.source.chunk.BaseMediaChunk;

        r1 := @parameter0: androidx.media3.datasource.DataSource;

        r2 := @parameter1: androidx.media3.datasource.DataSpec;

        r3 := @parameter2: androidx.media3.common.Format;

        i0 := @parameter3: int;

        r4 := @parameter4: java.lang.Object;

        l1 := @parameter5: long;

        l2 := @parameter6: long;

        l3 := @parameter7: long;

        l4 := @parameter8: long;

        l5 := @parameter9: long;

        specialinvoke r0.<androidx.media3.exoplayer.source.chunk.MediaChunk: void <init>(androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec,androidx.media3.common.Format,int,java.lang.Object,long,long,long)>(r1, r2, r3, i0, r4, l1, l2, l5);

        r0.<androidx.media3.exoplayer.source.chunk.BaseMediaChunk: long clippedStartTimeUs> = l3;

        r0.<androidx.media3.exoplayer.source.chunk.BaseMediaChunk: long clippedEndTimeUs> = l4;

        return;
    }

    public void init(androidx.media3.exoplayer.source.chunk.BaseMediaChunkOutput)
    {
        androidx.media3.exoplayer.source.chunk.BaseMediaChunk r0;
        androidx.media3.exoplayer.source.chunk.BaseMediaChunkOutput r1;
        int[] $r2;

        r0 := @this: androidx.media3.exoplayer.source.chunk.BaseMediaChunk;

        r1 := @parameter0: androidx.media3.exoplayer.source.chunk.BaseMediaChunkOutput;

        r0.<androidx.media3.exoplayer.source.chunk.BaseMediaChunk: androidx.media3.exoplayer.source.chunk.BaseMediaChunkOutput output> = r1;

        $r2 = virtualinvoke r1.<androidx.media3.exoplayer.source.chunk.BaseMediaChunkOutput: int[] getWriteIndices()>();

        r0.<androidx.media3.exoplayer.source.chunk.BaseMediaChunk: int[] firstSampleIndices> = $r2;

        return;
    }

    public final int getFirstSampleIndex(int)
    {
        androidx.media3.exoplayer.source.chunk.BaseMediaChunk r0;
        int i0, $i1;
        int[] $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.exoplayer.source.chunk.BaseMediaChunk;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.exoplayer.source.chunk.BaseMediaChunk: int[] firstSampleIndices>;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r1);

        $r3 = (int[]) $r2;

        $i1 = $r3[i0];

        return $i1;
    }

    protected final androidx.media3.exoplayer.source.chunk.BaseMediaChunkOutput getOutput()
    {
        androidx.media3.exoplayer.source.chunk.BaseMediaChunk r0;
        androidx.media3.exoplayer.source.chunk.BaseMediaChunkOutput $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.exoplayer.source.chunk.BaseMediaChunk;

        $r1 = r0.<androidx.media3.exoplayer.source.chunk.BaseMediaChunk: androidx.media3.exoplayer.source.chunk.BaseMediaChunkOutput output>;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r1);

        $r3 = (androidx.media3.exoplayer.source.chunk.BaseMediaChunkOutput) $r2;

        return $r3;
    }

