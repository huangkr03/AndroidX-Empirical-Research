androidx.car.app.CarAppPermission
<androidx.car.app.CarAppPermission: java.lang.String ACCESS_SURFACE>
<androidx.car.app.CarAppPermission: java.lang.String NAVIGATION_TEMPLATES>
<androidx.car.app.CarAppPermission: java.lang.String MAP_TEMPLATES>
    public static void checkHasPermission(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, $r3, $r8;
        android.content.pm.PackageManager $r2;
        int $i0;
        java.lang.SecurityException $r4;
        java.lang.StringBuilder $r5, $r6, $r7;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke r0.<android.content.Context: java.lang.String getPackageName()>();

        $i0 = virtualinvoke $r2.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>(r1, $r3);

        if $i0 != 0 goto label1;

        return;

     label1:
        $r4 = new java.lang.SecurityException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The car app does not have the required permission: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.SecurityException: void <init>(java.lang.String)>($r8);

        throw $r4;
    }

    public static void checkHasLibraryPermission(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, r3, $r7, $r10, $r16, $r20, $r22;
        java.lang.String[] r2, $r11;
        int i0, i3;
        boolean $z0, $z1;
        java.lang.StringBuilder $r4, $r5, $r6, $r13, $r14, $r15, $r18, $r19, $r21;
        java.lang.Throwable $r8, $r17, r23, r25;
        android.content.pm.PackageManager $r9;
        java.lang.SecurityException $r12;
        android.content.pm.PackageInfo r24;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("CarApp", 3);

        if $z0 == 0 goto label01;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checking to see if the car app requested the required library permission: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CarApp", $r7);

     label01:
        staticinvoke <androidx.car.app.CarAppPermission: void checkHasPermission(android.content.Context,java.lang.String)>(r0, r1);

     label02:
        return;

     label03:
        $r8 := @caughtexception;

        r23 = $r8;

     label04:
        $r9 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r10 = virtualinvoke r0.<android.content.Context: java.lang.String getPackageName()>();

        r24 = virtualinvoke $r9.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r10, 4096);

        $r11 = r24.<android.content.pm.PackageInfo: java.lang.String[] requestedPermissions>;

        if $r11 == null goto label08;

        r2 = r24.<android.content.pm.PackageInfo: java.lang.String[] requestedPermissions>;

        i0 = lengthof r2;

        i3 = 0;

     label05:
        if i3 >= i0 goto label08;

        r3 = r2[i3];

        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label07;

     label06:
        return;

     label07:
        i3 = i3 + 1;

        goto label05;

     label08:
        goto label10;

     label09:
        $r17 := @caughtexception;

        r25 = $r17;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package name not found on the system: ");

        $r20 = virtualinvoke r0.<android.content.Context: java.lang.String getPackageName()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CarApp", $r22, r25);

     label10:
        $r12 = new java.lang.SecurityException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The car app does not have a required permission: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.SecurityException: void <init>(java.lang.String)>($r16);

        throw $r12;

        catch java.lang.SecurityException from label01 to label02 with label03;
        catch android.content.pm.PackageManager$NameNotFoundException from label04 to label06 with label09;
        catch android.content.pm.PackageManager$NameNotFoundException from label07 to label08 with label09;
    }

    private void <init>()
    {
        androidx.car.app.CarAppPermission r0;

        r0 := @this: androidx.car.app.CarAppPermission;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.car.app.CarAppPermission$LibraryPermission
