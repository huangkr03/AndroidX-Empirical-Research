androidx.wear.compose.foundation.CurvedColumnChild
<androidx.wear.compose.foundation.CurvedColumnChild: androidx.wear.compose.foundation.CurvedAlignment$Angular angularAlignment>
    private void <init>(androidx.wear.compose.foundation.CurvedLayoutDirection, androidx.wear.compose.foundation.CurvedAlignment$Angular, kotlin.jvm.functions.Function1)
    {
        androidx.wear.compose.foundation.CurvedColumnChild r0;
        androidx.wear.compose.foundation.CurvedLayoutDirection r1;
        androidx.wear.compose.foundation.CurvedAlignment$Angular r2;
        kotlin.jvm.functions.Function1 r3;
        boolean $z0, $z1;

        r0 := @this: androidx.wear.compose.foundation.CurvedColumnChild;

        r1 := @parameter0: androidx.wear.compose.foundation.CurvedLayoutDirection;

        r2 := @parameter1: androidx.wear.compose.foundation.CurvedAlignment$Angular;

        r3 := @parameter2: kotlin.jvm.functions.Function1;

        $z0 = virtualinvoke r1.<androidx.wear.compose.foundation.CurvedLayoutDirection: boolean outsideIn()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        specialinvoke r0.<androidx.wear.compose.foundation.ContainerChild: void <init>(androidx.wear.compose.foundation.CurvedLayoutDirection,boolean,kotlin.jvm.functions.Function1)>(r1, $z1, r3);

        r0.<androidx.wear.compose.foundation.CurvedColumnChild: androidx.wear.compose.foundation.CurvedAlignment$Angular angularAlignment> = r2;

        return;
    }

    public float doEstimateThickness(float)
    {
        androidx.wear.compose.foundation.CurvedColumnChild r0;
        float f0, f1, f2, f3, f4, $f5, $f6, f7;
        java.lang.Iterable $r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        androidx.wear.compose.foundation.CurvedChild r4;
        java.util.List $r5;
        boolean $z2;

        r0 := @this: androidx.wear.compose.foundation.CurvedColumnChild;

        f0 := @parameter0: float;

        $r5 = virtualinvoke r0.<androidx.wear.compose.foundation.CurvedColumnChild: java.util.List getChildren$compose_foundation_release()>();

        $r1 = (java.lang.Iterable) $r5;

        f1 = f0;

        f3 = f0;

        f7 = f1;

        r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.wear.compose.foundation.CurvedChild) r3;

        f2 = f7;

        $f6 = virtualinvoke r4.<androidx.wear.compose.foundation.CurvedChild: float estimateThickness(float)>(f2);

        f7 = f2 - $f6;

        goto label1;

     label2:
        f4 = f7;

        $f5 = f3 - f4;

        return $f5;
    }

    public androidx.wear.compose.foundation.PartialLayoutInfo doRadialPosition(float, float)
    {
        androidx.wear.compose.foundation.CurvedColumnChild r0;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, f13, $f14, $f15, $f17, $f18, f19, f20, $f21, $f22, f23;
        java.util.List r1, $r2, $r5, $r8, $r9, r38;
        java.util.ArrayList $r3, $r6;
        int $i0, $i1, $i2, $i4, i6, i7, i8, i9, i11;
        boolean $z1, $z2, $z3, $z4, $z5, $z7, z12, z13, $z14, z16, z18;
        java.lang.Iterable $r4, $r7, $r10, $r24, $r32, r39;
        java.lang.Object $r11, $r13, $r14, $r17, $r19, r27, r30, r35, r41;
        androidx.wear.compose.foundation.PartialLayoutInfo $r12;
        java.lang.Number $r15, $r18, $r20;
        byte $b3, $b5;
        java.lang.Float $r21, $r23, $r44;
        java.util.Collection r25, r29, r33, r37;
        java.util.Iterator r26, $r34, r40, r43;
        androidx.wear.compose.foundation.CurvedChild r28, r36, r42, r45, $r46;
        androidx.wear.compose.foundation.CurvedScopeParentData $r31;

        r0 := @this: androidx.wear.compose.foundation.CurvedColumnChild;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r2 = virtualinvoke r0.<androidx.wear.compose.foundation.CurvedColumnChild: java.util.List getChildrenInLayoutOrder$compose_foundation_release()>();

        $r24 = (java.lang.Iterable) $r2;

        $r3 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r24, 10);

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i0);

        r25 = (java.util.Collection) $r3;

        r26 = interfaceinvoke $r24.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z1 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        r27 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>();

        r28 = (androidx.wear.compose.foundation.CurvedChild) r27;

        r29 = r25;

        r30 = virtualinvoke r28.<androidx.wear.compose.foundation.CurvedChild: java.lang.Object computeParentData()>();

        $z7 = r30 instanceof androidx.wear.compose.foundation.CurvedScopeParentData;

        if $z7 == 0 goto label02;

        $r31 = (androidx.wear.compose.foundation.CurvedScopeParentData) r30;

        goto label03;

     label02:
        $r31 = null;

     label03:
        if $r31 == null goto label04;

        $f11 = virtualinvoke $r31.<androidx.wear.compose.foundation.CurvedScopeParentData: float getWeight()>();

        goto label05;

     label04:
        $f11 = 0.0F;

     label05:
        $r23 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f11);

        interfaceinvoke r29.<java.util.Collection: boolean add(java.lang.Object)>($r23);

        goto label01;

     label06:
        r1 = (java.util.List) r25;

        $r4 = (java.lang.Iterable) r1;

        $f12 = staticinvoke <kotlin.collections.CollectionsKt: float sumOfFloat(java.lang.Iterable)>($r4);

        $r5 = virtualinvoke r0.<androidx.wear.compose.foundation.CurvedColumnChild: java.util.List getChildrenInLayoutOrder$compose_foundation_release()>();

        $r32 = (java.lang.Iterable) $r5;

        f13 = f1;

        z12 = 0;

        $r6 = new java.util.ArrayList;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r32, 10);

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i1);

        r33 = (java.util.Collection) $r6;

        z13 = 0;

        i6 = 0;

        $r34 = interfaceinvoke $r32.<java.lang.Iterable: java.util.Iterator iterator()>();

     label07:
        $z2 = interfaceinvoke $r34.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label13;

        r35 = interfaceinvoke $r34.<java.util.Iterator: java.lang.Object next()>();

        $i4 = i6;

        i6 = i6 + 1;

        i7 = $i4;

        if i7 >= 0 goto label08;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label08:
        r36 = (androidx.wear.compose.foundation.CurvedChild) r35;

        i8 = i7;

        r37 = r33;

        $r19 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i8);

        $r20 = (java.lang.Number) $r19;

        $f10 = virtualinvoke $r20.<java.lang.Number: float floatValue()>();

        $b5 = $f10 cmpg 0.0F;

        if $b5 != 0 goto label09;

        $z14 = 1;

        goto label10;

     label09:
        $z14 = 0;

     label10:
        if $z14 == 0 goto label11;

        $f14 = virtualinvoke r36.<androidx.wear.compose.foundation.CurvedChild: float getEstimatedThickness$compose_foundation_release()>();

        goto label12;

     label11:
        $f14 = 0.0F;

     label12:
        $r21 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f14);

        interfaceinvoke r37.<java.util.Collection: boolean add(java.lang.Object)>($r21);

        goto label07;

     label13:
        r38 = (java.util.List) r33;

        $r7 = (java.lang.Iterable) r38;

        $f2 = staticinvoke <kotlin.collections.CollectionsKt: float sumOfFloat(java.lang.Iterable)>($r7);

        $f15 = f13 - $f2;

        $f17 = f0;

        $r8 = virtualinvoke r0.<androidx.wear.compose.foundation.CurvedColumnChild: java.util.List getChildrenInLayoutOrder$compose_foundation_release()>();

        r39 = (java.lang.Iterable) $r8;

        i9 = 0;

        r40 = interfaceinvoke r39.<java.lang.Iterable: java.util.Iterator iterator()>();

     label14:
        $z3 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label18;

        r41 = interfaceinvoke r40.<java.util.Iterator: java.lang.Object next()>();

        $i2 = i9;

        i9 = i9 + 1;

        if $i2 >= 0 goto label15;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label15:
        r42 = (androidx.wear.compose.foundation.CurvedChild) r41;

        i11 = $i2;

        z16 = 0;

        $r14 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i11);

        $r15 = (java.lang.Number) $r14;

        $f7 = virtualinvoke $r15.<java.lang.Number: float floatValue()>();

        $b3 = $f7 cmpl 0.0F;

        if $b3 <= 0 goto label16;

        $r17 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i11);

        $r18 = (java.lang.Number) $r17;

        $f8 = virtualinvoke $r18.<java.lang.Number: float floatValue()>();

        $f9 = $f15 * $f8;

        $f18 = $f9 / $f12;

        goto label17;

     label16:
        $f18 = virtualinvoke r42.<androidx.wear.compose.foundation.CurvedChild: float getEstimatedThickness$compose_foundation_release()>();

     label17:
        f19 = $f18;

        virtualinvoke r42.<androidx.wear.compose.foundation.CurvedChild: androidx.wear.compose.foundation.PartialLayoutInfo radialPosition(float,float)>($f17, f19);

        $f17 = $f17 - f19;

        goto label14;

     label18:
        $r9 = virtualinvoke r0.<androidx.wear.compose.foundation.CurvedColumnChild: java.util.List getChildrenInLayoutOrder$compose_foundation_release()>();

        $r10 = (java.lang.Iterable) $r9;

        r43 = interfaceinvoke $r10.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z4 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>();

        if $z4 != 0 goto label19;

        $r44 = null;

        goto label22;

     label19:
        $r11 = interfaceinvoke r43.<java.util.Iterator: java.lang.Object next()>();

        r45 = (androidx.wear.compose.foundation.CurvedChild) $r11;

        f20 = virtualinvoke r45.<androidx.wear.compose.foundation.CurvedChild: float getSweepRadians$compose_foundation_release()>();

     label20:
        $z5 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label21;

        $r13 = interfaceinvoke r43.<java.util.Iterator: java.lang.Object next()>();

        $r46 = (androidx.wear.compose.foundation.CurvedChild) $r13;

        z18 = 0;

        $f21 = virtualinvoke $r46.<androidx.wear.compose.foundation.CurvedChild: float getSweepRadians$compose_foundation_release()>();

        f20 = staticinvoke <java.lang.Math: float max(float,float)>(f20, $f21);

        goto label20;

     label21:
        $r44 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f20);

     label22:
        if $r44 == null goto label23;

        $f22 = virtualinvoke $r44.<java.lang.Float: float floatValue()>();

        goto label24;

     label23:
        $f22 = 0.0F;

     label24:
        f23 = $f22;

        $r12 = new androidx.wear.compose.foundation.PartialLayoutInfo;

        $f6 = f0 - $f17;

        $f4 = f0 + $f17;

        $f3 = (float) 2;

        $f5 = $f4 / $f3;

        specialinvoke $r12.<androidx.wear.compose.foundation.PartialLayoutInfo: void <init>(float,float,float,float)>(f23, f0, $f6, $f5);

        return $r12;
    }

    public float doAngularPosition-0AR0LA0(float, float, long)
    {
        androidx.wear.compose.foundation.CurvedColumnChild r0;
        float f0, f1, $f3, $f4, $f5, $f6, f7, f8;
        long l0;
        java.lang.Iterable $r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        androidx.wear.compose.foundation.CurvedChild r4;
        java.util.List $r5;
        boolean $z2;
        androidx.wear.compose.foundation.CurvedAlignment$Angular $r6, $r7;

        r0 := @this: androidx.wear.compose.foundation.CurvedColumnChild;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        l0 := @parameter2: long;

        $r5 = virtualinvoke r0.<androidx.wear.compose.foundation.CurvedColumnChild: java.util.List getChildren$compose_foundation_release()>();

        $r1 = (java.lang.Iterable) $r5;

        r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.wear.compose.foundation.CurvedChild) r3;

        f7 = f0;

        f8 = f1;

        $r6 = r0.<androidx.wear.compose.foundation.CurvedColumnChild: androidx.wear.compose.foundation.CurvedAlignment$Angular angularAlignment>;

        if $r6 == null goto label2;

        $r7 = r0.<androidx.wear.compose.foundation.CurvedColumnChild: androidx.wear.compose.foundation.CurvedAlignment$Angular angularAlignment>;

        $f3 = virtualinvoke $r7.<androidx.wear.compose.foundation.CurvedAlignment$Angular: float unbox-impl()>();

        $f4 = virtualinvoke r4.<androidx.wear.compose.foundation.CurvedChild: float getSweepRadians$compose_foundation_release()>();

        $f5 = f1 - $f4;

        $f6 = $f3 * $f5;

        f7 = f0 + $f6;

        f8 = virtualinvoke r4.<androidx.wear.compose.foundation.CurvedChild: float getSweepRadians$compose_foundation_release()>();

     label2:
        virtualinvoke r4.<androidx.wear.compose.foundation.CurvedChild: float angularPosition-0AR0LA0(float,float,long)>(f7, f8, l0);

        goto label1;

     label3:
        return f0;
    }

    public void <init>(androidx.wear.compose.foundation.CurvedLayoutDirection, androidx.wear.compose.foundation.CurvedAlignment$Angular, kotlin.jvm.functions.Function1, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.wear.compose.foundation.CurvedColumnChild r0;
        androidx.wear.compose.foundation.CurvedLayoutDirection r1;
        androidx.wear.compose.foundation.CurvedAlignment$Angular r2;
        kotlin.jvm.functions.Function1 r3;
        kotlin.jvm.internal.DefaultConstructorMarker $r4;

        r0 := @this: androidx.wear.compose.foundation.CurvedColumnChild;

        r1 := @parameter0: androidx.wear.compose.foundation.CurvedLayoutDirection;

        r2 := @parameter1: androidx.wear.compose.foundation.CurvedAlignment$Angular;

        r3 := @parameter2: kotlin.jvm.functions.Function1;

        $r4 := @parameter3: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.wear.compose.foundation.CurvedColumnChild: void <init>(androidx.wear.compose.foundation.CurvedLayoutDirection,androidx.wear.compose.foundation.CurvedAlignment$Angular,kotlin.jvm.functions.Function1)>(r1, r2, r3);

        return;
    }

