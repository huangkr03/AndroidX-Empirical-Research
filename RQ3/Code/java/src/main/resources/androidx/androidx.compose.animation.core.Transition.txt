androidx.compose.animation.core.Transition
<androidx.compose.animation.core.Transition: androidx.compose.animation.core.MutableTransitionState transitionState>
<androidx.compose.animation.core.Transition: java.lang.String label>
<androidx.compose.animation.core.Transition: androidx.compose.runtime.MutableState targetState$delegate>
<androidx.compose.animation.core.Transition: androidx.compose.runtime.MutableState segment$delegate>
<androidx.compose.animation.core.Transition: androidx.compose.runtime.MutableState playTimeNanos$delegate>
<androidx.compose.animation.core.Transition: androidx.compose.runtime.MutableState startTimeNanos$delegate>
<androidx.compose.animation.core.Transition: androidx.compose.runtime.MutableState updateChildrenNeeded$delegate>
<androidx.compose.animation.core.Transition: androidx.compose.runtime.snapshots.SnapshotStateList _animations>
<androidx.compose.animation.core.Transition: androidx.compose.runtime.snapshots.SnapshotStateList _transitions>
<androidx.compose.animation.core.Transition: androidx.compose.runtime.MutableState isSeeking$delegate>
<androidx.compose.animation.core.Transition: long lastSeekedTimeNanos>
<androidx.compose.animation.core.Transition: androidx.compose.runtime.State totalDurationNanos$delegate>
    public void <init>(androidx.compose.animation.core.MutableTransitionState, java.lang.String)
    {
        androidx.compose.animation.core.Transition r0;
        androidx.compose.animation.core.MutableTransitionState r1;
        java.lang.String r2;
        java.lang.Object $r3, $r6, $r7;
        androidx.compose.runtime.MutableState $r4, $r8, $r10, $r12, $r14, $r18;
        androidx.compose.animation.core.Transition$SegmentImpl $r5;
        java.lang.Long $r9, $r11;
        java.lang.Boolean $r13, $r17;
        androidx.compose.runtime.snapshots.SnapshotStateList $r15, $r16;
        androidx.compose.animation.core.Transition$totalDurationNanos$2 $r19;
        kotlin.jvm.functions.Function0 $r20;
        androidx.compose.runtime.State $r21;

        r0 := @this: androidx.compose.animation.core.Transition;

        r1 := @parameter0: androidx.compose.animation.core.MutableTransitionState;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "transitionState");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.animation.core.Transition: androidx.compose.animation.core.MutableTransitionState transitionState> = r1;

        r0.<androidx.compose.animation.core.Transition: java.lang.String label> = r2;

        $r3 = virtualinvoke r0.<androidx.compose.animation.core.Transition: java.lang.Object getCurrentState()>();

        $r4 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r3, null, 2, null);

        r0.<androidx.compose.animation.core.Transition: androidx.compose.runtime.MutableState targetState$delegate> = $r4;

        $r5 = new androidx.compose.animation.core.Transition$SegmentImpl;

        $r6 = virtualinvoke r0.<androidx.compose.animation.core.Transition: java.lang.Object getCurrentState()>();

        $r7 = virtualinvoke r0.<androidx.compose.animation.core.Transition: java.lang.Object getCurrentState()>();

        specialinvoke $r5.<androidx.compose.animation.core.Transition$SegmentImpl: void <init>(java.lang.Object,java.lang.Object)>($r6, $r7);

        $r8 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r5, null, 2, null);

        r0.<androidx.compose.animation.core.Transition: androidx.compose.runtime.MutableState segment$delegate> = $r8;

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        $r10 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r9, null, 2, null);

        r0.<androidx.compose.animation.core.Transition: androidx.compose.runtime.MutableState playTimeNanos$delegate> = $r10;

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-9223372036854775808L);

        $r12 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r11, null, 2, null);

        r0.<androidx.compose.animation.core.Transition: androidx.compose.runtime.MutableState startTimeNanos$delegate> = $r12;

        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r14 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r13, null, 2, null);

        r0.<androidx.compose.animation.core.Transition: androidx.compose.runtime.MutableState updateChildrenNeeded$delegate> = $r14;

        $r15 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.snapshots.SnapshotStateList mutableStateListOf()>();

        r0.<androidx.compose.animation.core.Transition: androidx.compose.runtime.snapshots.SnapshotStateList _animations> = $r15;

        $r16 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.snapshots.SnapshotStateList mutableStateListOf()>();

        r0.<androidx.compose.animation.core.Transition: androidx.compose.runtime.snapshots.SnapshotStateList _transitions> = $r16;

        $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r18 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r17, null, 2, null);

        r0.<androidx.compose.animation.core.Transition: androidx.compose.runtime.MutableState isSeeking$delegate> = $r18;

        $r19 = new androidx.compose.animation.core.Transition$totalDurationNanos$2;

        specialinvoke $r19.<androidx.compose.animation.core.Transition$totalDurationNanos$2: void <init>(androidx.compose.animation.core.Transition)>(r0);

        $r20 = (kotlin.jvm.functions.Function0) $r19;

        $r21 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.State derivedStateOf(kotlin.jvm.functions.Function0)>($r20);

        r0.<androidx.compose.animation.core.Transition: androidx.compose.runtime.State totalDurationNanos$delegate> = $r21;

        return;
    }

    public void <init>(androidx.compose.animation.core.MutableTransitionState, java.lang.String, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.animation.core.Transition r0;
        androidx.compose.animation.core.MutableTransitionState r1;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r2;
        java.lang.String r3;

        r0 := @this: androidx.compose.animation.core.Transition;

        r1 := @parameter0: androidx.compose.animation.core.MutableTransitionState;

        r3 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r3 = null;

     label1:
        specialinvoke r0.<androidx.compose.animation.core.Transition: void <init>(androidx.compose.animation.core.MutableTransitionState,java.lang.String)>(r1, r3);

        return;
    }

    public final java.lang.String getLabel()
    {
        androidx.compose.animation.core.Transition r0;
        java.lang.String $r1;

        r0 := @this: androidx.compose.animation.core.Transition;

        $r1 = r0.<androidx.compose.animation.core.Transition: java.lang.String label>;

        return $r1;
    }

    public void <init>(java.lang.Object, java.lang.String)
    {
        androidx.compose.animation.core.Transition r0;
        java.lang.Object r1;
        java.lang.String r2;
        androidx.compose.animation.core.MutableTransitionState $r3;

        r0 := @this: androidx.compose.animation.core.Transition;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        $r3 = new androidx.compose.animation.core.MutableTransitionState;

        specialinvoke $r3.<androidx.compose.animation.core.MutableTransitionState: void <init>(java.lang.Object)>(r1);

        specialinvoke r0.<androidx.compose.animation.core.Transition: void <init>(androidx.compose.animation.core.MutableTransitionState,java.lang.String)>($r3, r2);

        return;
    }

    public final java.lang.Object getCurrentState()
    {
        androidx.compose.animation.core.Transition r0;
        androidx.compose.animation.core.MutableTransitionState $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.compose.animation.core.Transition;

        $r1 = r0.<androidx.compose.animation.core.Transition: androidx.compose.animation.core.MutableTransitionState transitionState>;

        $r2 = virtualinvoke $r1.<androidx.compose.animation.core.MutableTransitionState: java.lang.Object getCurrentState()>();

        return $r2;
    }

    public final void setCurrentState$animation_core_release(java.lang.Object)
    {
        androidx.compose.animation.core.Transition r0;
        java.lang.Object r1;
        androidx.compose.animation.core.MutableTransitionState $r2;

        r0 := @this: androidx.compose.animation.core.Transition;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.compose.animation.core.Transition: androidx.compose.animation.core.MutableTransitionState transitionState>;

        virtualinvoke $r2.<androidx.compose.animation.core.MutableTransitionState: void setCurrentState$animation_core_release(java.lang.Object)>(r1);

        return;
    }

    public final java.lang.Object getTargetState()
    {
        androidx.compose.animation.core.Transition r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.compose.animation.core.Transition;

        $r2 = r0.<androidx.compose.animation.core.Transition: androidx.compose.runtime.MutableState targetState$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        return $r3;
    }

    public final void setTargetState$animation_core_release(java.lang.Object)
    {
        androidx.compose.animation.core.Transition r0;
        java.lang.Object r1;
        androidx.compose.runtime.MutableState $r2;

        r0 := @this: androidx.compose.animation.core.Transition;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.compose.animation.core.Transition: androidx.compose.runtime.MutableState targetState$delegate>;

        interfaceinvoke $r2.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r1);

        return;
    }

    public final androidx.compose.animation.core.Transition$Segment getSegment()
    {
        androidx.compose.animation.core.Transition r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        androidx.compose.animation.core.Transition$Segment $r4;

        r0 := @this: androidx.compose.animation.core.Transition;

        $r2 = r0.<androidx.compose.animation.core.Transition: androidx.compose.runtime.MutableState segment$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (androidx.compose.animation.core.Transition$Segment) $r3;

        return $r4;
    }

    private final void setSegment(androidx.compose.animation.core.Transition$Segment)
    {
        androidx.compose.animation.core.Transition r0;
        androidx.compose.animation.core.Transition$Segment r1;
        androidx.compose.runtime.MutableState $r2;

        r0 := @this: androidx.compose.animation.core.Transition;

        r1 := @parameter0: androidx.compose.animation.core.Transition$Segment;

        $r2 = r0.<androidx.compose.animation.core.Transition: androidx.compose.runtime.MutableState segment$delegate>;

        interfaceinvoke $r2.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r1);

        return;
    }

    public final boolean isRunning()
    {
        androidx.compose.animation.core.Transition r0;
        long $l0;
        byte $b1;
        boolean $z0;

        r0 := @this: androidx.compose.animation.core.Transition;

        $l0 = specialinvoke r0.<androidx.compose.animation.core.Transition: long getStartTimeNanos()>();

        $b1 = $l0 cmp -9223372036854775808L;

        if $b1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final long getPlayTimeNanos()
    {
        androidx.compose.animation.core.Transition r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        long $l0;

        r0 := @this: androidx.compose.animation.core.Transition;

        $r2 = r0.<androidx.compose.animation.core.Transition: androidx.compose.runtime.MutableState playTimeNanos$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (java.lang.Number) $r3;

        $l0 = virtualinvoke $r4.<java.lang.Number: long longValue()>();

        return $l0;
    }

    public final void setPlayTimeNanos(long)
    {
        androidx.compose.animation.core.Transition r0;
        long l0;
        androidx.compose.runtime.MutableState $r1;
        java.lang.Long r2;

        r0 := @this: androidx.compose.animation.core.Transition;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.compose.animation.core.Transition: androidx.compose.runtime.MutableState playTimeNanos$delegate>;

        r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        interfaceinvoke $r1.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r2);

        return;
    }

    public static void getPlayTimeNanos$annotations()
    {
        return;
    }

    private final long getStartTimeNanos()
    {
        androidx.compose.animation.core.Transition r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        long $l0;

        r0 := @this: androidx.compose.animation.core.Transition;

        $r2 = r0.<androidx.compose.animation.core.Transition: androidx.compose.runtime.MutableState startTimeNanos$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (java.lang.Number) $r3;

        $l0 = virtualinvoke $r4.<java.lang.Number: long longValue()>();

        return $l0;
    }

    private final void setStartTimeNanos(long)
    {
        androidx.compose.animation.core.Transition r0;
        long l0;
        androidx.compose.runtime.MutableState $r1;
        java.lang.Long r2;

        r0 := @this: androidx.compose.animation.core.Transition;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.compose.animation.core.Transition: androidx.compose.runtime.MutableState startTimeNanos$delegate>;

        r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        interfaceinvoke $r1.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r2);

        return;
    }

    public final boolean getUpdateChildrenNeeded$animation_core_release()
    {
        androidx.compose.animation.core.Transition r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        r0 := @this: androidx.compose.animation.core.Transition;

        $r2 = r0.<androidx.compose.animation.core.Transition: androidx.compose.runtime.MutableState updateChildrenNeeded$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public final void setUpdateChildrenNeeded$animation_core_release(boolean)
    {
        androidx.compose.animation.core.Transition r0;
        boolean z0;
        androidx.compose.runtime.MutableState $r1;
        java.lang.Boolean r2;

        r0 := @this: androidx.compose.animation.core.Transition;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.compose.animation.core.Transition: androidx.compose.runtime.MutableState updateChildrenNeeded$delegate>;

        r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        interfaceinvoke $r1.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r2);

        return;
    }

    public final java.util.List getTransitions()
    {
        androidx.compose.animation.core.Transition r0;
        androidx.compose.runtime.snapshots.SnapshotStateList $r1;
        java.util.List $r2;

        r0 := @this: androidx.compose.animation.core.Transition;

        $r1 = r0.<androidx.compose.animation.core.Transition: androidx.compose.runtime.snapshots.SnapshotStateList _transitions>;

        $r2 = (java.util.List) $r1;

        return $r2;
    }

    public final java.util.List getAnimations()
    {
        androidx.compose.animation.core.Transition r0;
        androidx.compose.runtime.snapshots.SnapshotStateList $r1;
        java.util.List $r2;

        r0 := @this: androidx.compose.animation.core.Transition;

        $r1 = r0.<androidx.compose.animation.core.Transition: androidx.compose.runtime.snapshots.SnapshotStateList _animations>;

        $r2 = (java.util.List) $r1;

        return $r2;
    }

    public final boolean isSeeking()
    {
        androidx.compose.animation.core.Transition r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        r0 := @this: androidx.compose.animation.core.Transition;

        $r2 = r0.<androidx.compose.animation.core.Transition: androidx.compose.runtime.MutableState isSeeking$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public final void setSeeking$animation_core_release(boolean)
    {
        androidx.compose.animation.core.Transition r0;
        boolean z0;
        androidx.compose.runtime.MutableState $r1;
        java.lang.Boolean r2;

        r0 := @this: androidx.compose.animation.core.Transition;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.compose.animation.core.Transition: androidx.compose.runtime.MutableState isSeeking$delegate>;

        r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        interfaceinvoke $r1.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r2);

        return;
    }

    public static void isSeeking$annotations()
    {
        return;
    }

    public final long getLastSeekedTimeNanos$animation_core_release()
    {
        androidx.compose.animation.core.Transition r0;
        long $l0;

        r0 := @this: androidx.compose.animation.core.Transition;

        $l0 = r0.<androidx.compose.animation.core.Transition: long lastSeekedTimeNanos>;

        return $l0;
    }

    public final void setLastSeekedTimeNanos$animation_core_release(long)
    {
        androidx.compose.animation.core.Transition r0;
        long l0;

        r0 := @this: androidx.compose.animation.core.Transition;

        l0 := @parameter0: long;

        r0.<androidx.compose.animation.core.Transition: long lastSeekedTimeNanos> = l0;

        return;
    }

    public final long getTotalDurationNanos()
    {
        androidx.compose.animation.core.Transition r0;
        androidx.compose.runtime.State $r1;
        java.lang.Object $r2;
        java.lang.Number $r3;
        long $l0;

        r0 := @this: androidx.compose.animation.core.Transition;

        $r1 = r0.<androidx.compose.animation.core.Transition: androidx.compose.runtime.State totalDurationNanos$delegate>;

        $r2 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r3 = (java.lang.Number) $r2;

        $l0 = virtualinvoke $r3.<java.lang.Number: long longValue()>();

        return $l0;
    }

    public final void onFrame$animation_core_release(long, float)
    {
        androidx.compose.animation.core.Transition r0, r14;
        long l0, $l1, $l3, $l4, $l5, $l6;
        float f0;
        byte $b2;
        androidx.compose.runtime.snapshots.SnapshotStateList $r1, $r2;
        boolean $z0, $z1, $z2, $z3, $z4, z5, z6, $z8;
        java.lang.Object $r3, $r4, $r5, $r6, r9, r13;
        java.lang.Iterable $r7, $r11;
        java.util.Iterator r8, r12;
        androidx.compose.animation.core.Transition$TransitionAnimationState r10;

        r0 := @this: androidx.compose.animation.core.Transition;

        l0 := @parameter0: long;

        f0 := @parameter1: float;

        $l1 = specialinvoke r0.<androidx.compose.animation.core.Transition: long getStartTimeNanos()>();

        $b2 = $l1 cmp -9223372036854775808L;

        if $b2 != 0 goto label01;

        virtualinvoke r0.<androidx.compose.animation.core.Transition: void onTransitionStart$animation_core_release(long)>(l0);

     label01:
        virtualinvoke r0.<androidx.compose.animation.core.Transition: void setUpdateChildrenNeeded$animation_core_release(boolean)>(0);

        $l3 = specialinvoke r0.<androidx.compose.animation.core.Transition: long getStartTimeNanos()>();

        $l4 = l0 - $l3;

        virtualinvoke r0.<androidx.compose.animation.core.Transition: void setPlayTimeNanos(long)>($l4);

        z5 = 0;

        z6 = 1;

        $r1 = r0.<androidx.compose.animation.core.Transition: androidx.compose.runtime.snapshots.SnapshotStateList _animations>;

        $r7 = (java.lang.Iterable) $r1;

        r8 = interfaceinvoke $r7.<java.lang.Iterable: java.util.Iterator iterator()>();

     label02:
        $z8 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label05;

        r9 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (androidx.compose.animation.core.Transition$TransitionAnimationState) r9;

        $z3 = virtualinvoke r10.<androidx.compose.animation.core.Transition$TransitionAnimationState: boolean isFinished$animation_core_release()>();

        if $z3 != 0 goto label03;

        $l6 = virtualinvoke r0.<androidx.compose.animation.core.Transition: long getPlayTimeNanos()>();

        virtualinvoke r10.<androidx.compose.animation.core.Transition$TransitionAnimationState: void onPlayTimeChanged$animation_core_release(long,float)>($l6, f0);

     label03:
        $z4 = virtualinvoke r10.<androidx.compose.animation.core.Transition$TransitionAnimationState: boolean isFinished$animation_core_release()>();

        if $z4 != 0 goto label04;

        z6 = 0;

     label04:
        goto label02;

     label05:
        $r2 = r0.<androidx.compose.animation.core.Transition: androidx.compose.runtime.snapshots.SnapshotStateList _transitions>;

        $r11 = (java.lang.Iterable) $r2;

        r12 = interfaceinvoke $r11.<java.lang.Iterable: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        r13 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (androidx.compose.animation.core.Transition) r13;

        $r3 = virtualinvoke r14.<androidx.compose.animation.core.Transition: java.lang.Object getTargetState()>();

        $r4 = virtualinvoke r14.<androidx.compose.animation.core.Transition: java.lang.Object getCurrentState()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $z1 != 0 goto label07;

        $l5 = virtualinvoke r0.<androidx.compose.animation.core.Transition: long getPlayTimeNanos()>();

        virtualinvoke r14.<androidx.compose.animation.core.Transition: void onFrame$animation_core_release(long,float)>($l5, f0);

     label07:
        $r5 = virtualinvoke r14.<androidx.compose.animation.core.Transition: java.lang.Object getTargetState()>();

        $r6 = virtualinvoke r14.<androidx.compose.animation.core.Transition: java.lang.Object getCurrentState()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, $r6);

        if $z2 != 0 goto label08;

        z6 = 0;

     label08:
        goto label06;

     label09:
        if z6 == 0 goto label10;

        virtualinvoke r0.<androidx.compose.animation.core.Transition: void onTransitionEnd$animation_core_release()>();

     label10:
        return;
    }

    public final void onTransitionStart$animation_core_release(long)
    {
        androidx.compose.animation.core.Transition r0;
        long l0;
        androidx.compose.animation.core.MutableTransitionState $r1;

        r0 := @this: androidx.compose.animation.core.Transition;

        l0 := @parameter0: long;

        specialinvoke r0.<androidx.compose.animation.core.Transition: void setStartTimeNanos(long)>(l0);

        $r1 = r0.<androidx.compose.animation.core.Transition: androidx.compose.animation.core.MutableTransitionState transitionState>;

        virtualinvoke $r1.<androidx.compose.animation.core.MutableTransitionState: void setRunning$animation_core_release(boolean)>(1);

        return;
    }

    public final void onTransitionEnd$animation_core_release()
    {
        androidx.compose.animation.core.Transition r0;
        java.lang.Object $r1;
        androidx.compose.animation.core.MutableTransitionState $r2;

        r0 := @this: androidx.compose.animation.core.Transition;

        specialinvoke r0.<androidx.compose.animation.core.Transition: void setStartTimeNanos(long)>(-9223372036854775808L);

        $r1 = virtualinvoke r0.<androidx.compose.animation.core.Transition: java.lang.Object getTargetState()>();

        virtualinvoke r0.<androidx.compose.animation.core.Transition: void setCurrentState$animation_core_release(java.lang.Object)>($r1);

        virtualinvoke r0.<androidx.compose.animation.core.Transition: void setPlayTimeNanos(long)>(0L);

        $r2 = r0.<androidx.compose.animation.core.Transition: androidx.compose.animation.core.MutableTransitionState transitionState>;

        virtualinvoke $r2.<androidx.compose.animation.core.MutableTransitionState: void setRunning$animation_core_release(boolean)>(0);

        return;
    }

    public final void seek(java.lang.Object, java.lang.Object, long)
    {
        androidx.compose.animation.core.Transition r0, r3, r16;
        java.lang.Object r1, r2, $r6, $r7, $r8, $r9, r15, r19;
        long l0;
        androidx.compose.animation.core.MutableTransitionState $r4;
        boolean $z1, $z2, $z3, $z4, $z5, $z7;
        androidx.compose.runtime.snapshots.SnapshotStateList $r5, $r12;
        androidx.compose.animation.core.Transition$SegmentImpl $r10;
        androidx.compose.animation.core.Transition$Segment $r11;
        java.lang.Iterable $r13, $r17;
        java.util.Iterator r14, r18;
        androidx.compose.animation.core.Transition$TransitionAnimationState r20;

        r0 := @this: androidx.compose.animation.core.Transition;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        l0 := @parameter2: long;

        specialinvoke r0.<androidx.compose.animation.core.Transition: void setStartTimeNanos(long)>(-9223372036854775808L);

        $r4 = r0.<androidx.compose.animation.core.Transition: androidx.compose.animation.core.MutableTransitionState transitionState>;

        virtualinvoke $r4.<androidx.compose.animation.core.MutableTransitionState: void setRunning$animation_core_release(boolean)>(0);

        $z1 = virtualinvoke r0.<androidx.compose.animation.core.Transition: boolean isSeeking()>();

        if $z1 == 0 goto label1;

        $r8 = virtualinvoke r0.<androidx.compose.animation.core.Transition: java.lang.Object getCurrentState()>();

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r8, r1);

        if $z4 == 0 goto label1;

        $r9 = virtualinvoke r0.<androidx.compose.animation.core.Transition: java.lang.Object getTargetState()>();

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r9, r2);

        if $z5 != 0 goto label2;

     label1:
        virtualinvoke r0.<androidx.compose.animation.core.Transition: void setCurrentState$animation_core_release(java.lang.Object)>(r1);

        virtualinvoke r0.<androidx.compose.animation.core.Transition: void setTargetState$animation_core_release(java.lang.Object)>(r2);

        virtualinvoke r0.<androidx.compose.animation.core.Transition: void setSeeking$animation_core_release(boolean)>(1);

        $r10 = new androidx.compose.animation.core.Transition$SegmentImpl;

        specialinvoke $r10.<androidx.compose.animation.core.Transition$SegmentImpl: void <init>(java.lang.Object,java.lang.Object)>(r1, r2);

        $r11 = (androidx.compose.animation.core.Transition$Segment) $r10;

        specialinvoke r0.<androidx.compose.animation.core.Transition: void setSegment(androidx.compose.animation.core.Transition$Segment)>($r11);

     label2:
        $r12 = r0.<androidx.compose.animation.core.Transition: androidx.compose.runtime.snapshots.SnapshotStateList _transitions>;

        $r13 = (java.lang.Iterable) $r12;

        r14 = interfaceinvoke $r13.<java.lang.Iterable: java.util.Iterator iterator()>();

     label3:
        $z7 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label5;

        r15 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r16 = (androidx.compose.animation.core.Transition) r15;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r16, "null cannot be cast to non-null type androidx.compose.animation.core.Transition<kotlin.Any>");

        r3 = r16;

        $z3 = virtualinvoke r3.<androidx.compose.animation.core.Transition: boolean isSeeking()>();

        if $z3 == 0 goto label4;

        $r6 = virtualinvoke r3.<androidx.compose.animation.core.Transition: java.lang.Object getCurrentState()>();

        $r7 = virtualinvoke r3.<androidx.compose.animation.core.Transition: java.lang.Object getTargetState()>();

        virtualinvoke r3.<androidx.compose.animation.core.Transition: void seek(java.lang.Object,java.lang.Object,long)>($r6, $r7, l0);

     label4:
        goto label3;

     label5:
        $r5 = r0.<androidx.compose.animation.core.Transition: androidx.compose.runtime.snapshots.SnapshotStateList _animations>;

        $r17 = (java.lang.Iterable) $r5;

        r18 = interfaceinvoke $r17.<java.lang.Iterable: java.util.Iterator iterator()>();

     label6:
        $z2 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        r19 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        r20 = (androidx.compose.animation.core.Transition$TransitionAnimationState) r19;

        virtualinvoke r20.<androidx.compose.animation.core.Transition$TransitionAnimationState: void seekTo$animation_core_release(long)>(l0);

        goto label6;

     label7:
        r0.<androidx.compose.animation.core.Transition: long lastSeekedTimeNanos> = l0;

        return;
    }

    public final boolean addTransition$animation_core_release(androidx.compose.animation.core.Transition)
    {
        androidx.compose.animation.core.Transition r0, r1;
        androidx.compose.runtime.snapshots.SnapshotStateList $r2;
        boolean $z0;

        r0 := @this: androidx.compose.animation.core.Transition;

        r1 := @parameter0: androidx.compose.animation.core.Transition;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "transition");

        $r2 = r0.<androidx.compose.animation.core.Transition: androidx.compose.runtime.snapshots.SnapshotStateList _transitions>;

        $z0 = virtualinvoke $r2.<androidx.compose.runtime.snapshots.SnapshotStateList: boolean add(java.lang.Object)>(r1);

        return $z0;
    }

    public final boolean removeTransition$animation_core_release(androidx.compose.animation.core.Transition)
    {
        androidx.compose.animation.core.Transition r0, r1;
        androidx.compose.runtime.snapshots.SnapshotStateList $r2;
        boolean $z0;

        r0 := @this: androidx.compose.animation.core.Transition;

        r1 := @parameter0: androidx.compose.animation.core.Transition;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "transition");

        $r2 = r0.<androidx.compose.animation.core.Transition: androidx.compose.runtime.snapshots.SnapshotStateList _transitions>;

        $z0 = virtualinvoke $r2.<androidx.compose.runtime.snapshots.SnapshotStateList: boolean remove(java.lang.Object)>(r1);

        return $z0;
    }

    public final boolean addAnimation$animation_core_release(androidx.compose.animation.core.Transition$TransitionAnimationState)
    {
        androidx.compose.animation.core.Transition r0;
        androidx.compose.animation.core.Transition$TransitionAnimationState r1;
        androidx.compose.runtime.snapshots.SnapshotStateList $r2;
        boolean $z0;

        r0 := @this: androidx.compose.animation.core.Transition;

        r1 := @parameter0: androidx.compose.animation.core.Transition$TransitionAnimationState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "animation");

        $r2 = r0.<androidx.compose.animation.core.Transition: androidx.compose.runtime.snapshots.SnapshotStateList _animations>;

        $z0 = virtualinvoke $r2.<androidx.compose.runtime.snapshots.SnapshotStateList: boolean add(java.lang.Object)>(r1);

        return $z0;
    }

    public final void removeAnimation$animation_core_release(androidx.compose.animation.core.Transition$TransitionAnimationState)
    {
        androidx.compose.animation.core.Transition r0;
        androidx.compose.animation.core.Transition$TransitionAnimationState r1;
        androidx.compose.runtime.snapshots.SnapshotStateList $r2;

        r0 := @this: androidx.compose.animation.core.Transition;

        r1 := @parameter0: androidx.compose.animation.core.Transition$TransitionAnimationState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "animation");

        $r2 = r0.<androidx.compose.animation.core.Transition: androidx.compose.runtime.snapshots.SnapshotStateList _animations>;

        virtualinvoke $r2.<androidx.compose.runtime.snapshots.SnapshotStateList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public final void updateTarget$animation_core_release(java.lang.Object, androidx.compose.runtime.Composer, int)
    {
        androidx.compose.animation.core.Transition r0;
        java.lang.Object r1, r3, $r7, $r9, $r11;
        int $i0, $i1, $i2, $i4, $i6, $i8;
        java.util.Iterator r2;
        androidx.compose.animation.core.Transition$TransitionAnimationState r4;
        boolean $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        androidx.compose.animation.core.Transition$updateTarget$2 $r5;
        kotlin.jvm.functions.Function2 $r6;
        androidx.compose.animation.core.Transition$SegmentImpl $r8;
        androidx.compose.animation.core.Transition$Segment $r10;
        androidx.compose.runtime.snapshots.SnapshotStateList $r12;
        java.lang.Iterable $r13;
        androidx.compose.runtime.Composer $r14, $r15;
        byte $b5, $b7;
        androidx.compose.runtime.ScopeUpdateScope $r16;

        r0 := @this: androidx.compose.animation.core.Transition;

        r1 := @parameter0: java.lang.Object;

        $r14 := @parameter1: androidx.compose.runtime.Composer;

        $i0 := @parameter2: int;

        $r15 = interfaceinvoke $r14.<androidx.compose.runtime.Composer: androidx.compose.runtime.Composer startRestartGroup(int)>(-583974681);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r15, "C(updateTarget):Transition.kt#pdpnli");

        $i4 = $i0;

        $i1 = $i0 & 14;

        if $i1 != 0 goto label03;

        $z8 = interfaceinvoke $r15.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>(r1);

        if $z8 == 0 goto label01;

        $b5 = 4;

        goto label02;

     label01:
        $b5 = 2;

     label02:
        $i4 = $i0 | $b5;

     label03:
        $i6 = $i0 & 112;

        if $i6 != 0 goto label06;

        $i2 = $i4;

        $z7 = interfaceinvoke $r15.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>(r0);

        if $z7 == 0 goto label04;

        $b7 = 32;

        goto label05;

     label04:
        $b7 = 16;

     label05:
        $i4 = $i2 | $b7;

     label06:
        $i8 = $i4 & 91;

        if $i8 != 18 goto label07;

        $z6 = interfaceinvoke $r15.<androidx.compose.runtime.Composer: boolean getSkipping()>();

        if $z6 != 0 goto label12;

     label07:
        $z2 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z2 == 0 goto label08;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(-583974681, $i0, -1, "androidx.compose.animation.core.Transition.updateTarget (Transition.kt:399)");

     label08:
        $z3 = virtualinvoke r0.<androidx.compose.animation.core.Transition: boolean isSeeking()>();

        if $z3 != 0 goto label11;

        $r7 = virtualinvoke r0.<androidx.compose.animation.core.Transition: java.lang.Object getTargetState()>();

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, r1);

        if $z4 != 0 goto label11;

        $r8 = new androidx.compose.animation.core.Transition$SegmentImpl;

        $r9 = virtualinvoke r0.<androidx.compose.animation.core.Transition: java.lang.Object getTargetState()>();

        specialinvoke $r8.<androidx.compose.animation.core.Transition$SegmentImpl: void <init>(java.lang.Object,java.lang.Object)>($r9, r1);

        $r10 = (androidx.compose.animation.core.Transition$Segment) $r8;

        specialinvoke r0.<androidx.compose.animation.core.Transition: void setSegment(androidx.compose.animation.core.Transition$Segment)>($r10);

        $r11 = virtualinvoke r0.<androidx.compose.animation.core.Transition: java.lang.Object getTargetState()>();

        virtualinvoke r0.<androidx.compose.animation.core.Transition: void setCurrentState$animation_core_release(java.lang.Object)>($r11);

        virtualinvoke r0.<androidx.compose.animation.core.Transition: void setTargetState$animation_core_release(java.lang.Object)>(r1);

        $z5 = virtualinvoke r0.<androidx.compose.animation.core.Transition: boolean isRunning()>();

        if $z5 != 0 goto label09;

        virtualinvoke r0.<androidx.compose.animation.core.Transition: void setUpdateChildrenNeeded$animation_core_release(boolean)>(1);

     label09:
        $r12 = r0.<androidx.compose.animation.core.Transition: androidx.compose.runtime.snapshots.SnapshotStateList _animations>;

        $r13 = (java.lang.Iterable) $r12;

        r2 = interfaceinvoke $r13.<java.lang.Iterable: java.util.Iterator iterator()>();

     label10:
        $z9 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label11;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.compose.animation.core.Transition$TransitionAnimationState) r3;

        virtualinvoke r4.<androidx.compose.animation.core.Transition$TransitionAnimationState: void resetAnimation$animation_core_release()>();

        goto label10;

     label11:
        $z10 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z10 == 0 goto label13;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

        goto label13;

     label12:
        interfaceinvoke $r15.<androidx.compose.runtime.Composer: void skipToGroupEnd()>();

     label13:
        $r16 = interfaceinvoke $r15.<androidx.compose.runtime.Composer: androidx.compose.runtime.ScopeUpdateScope endRestartGroup()>();

        if $r16 != null goto label14;

        goto label15;

     label14:
        $r5 = new androidx.compose.animation.core.Transition$updateTarget$2;

        specialinvoke $r5.<androidx.compose.animation.core.Transition$updateTarget$2: void <init>(androidx.compose.animation.core.Transition,java.lang.Object,int)>(r0, r1, $i0);

        $r6 = (kotlin.jvm.functions.Function2) $r5;

        interfaceinvoke $r16.<androidx.compose.runtime.ScopeUpdateScope: void updateScope(kotlin.jvm.functions.Function2)>($r6);

     label15:
        return;
    }

    public final void animateTo$animation_core_release(java.lang.Object, androidx.compose.runtime.Composer, int)
    {
        androidx.compose.animation.core.Transition r0, r6, $r16;
        java.lang.Object r1, r3, r5, $r9, $r13, $r17;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i13, $i15;
        boolean z1, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        kotlin.jvm.functions.Function2 r4, $r8, $r11;
        androidx.compose.animation.core.Transition$animateTo$2 $r7;
        androidx.compose.animation.core.Transition$animateTo$1$1 $r10;
        androidx.compose.runtime.Composer$Companion $r12;
        androidx.compose.runtime.Composer $r14, $r15;
        byte $b12, $b14;
        androidx.compose.runtime.ScopeUpdateScope $r18;

        r0 := @this: androidx.compose.animation.core.Transition;

        r1 := @parameter0: java.lang.Object;

        $r14 := @parameter1: androidx.compose.runtime.Composer;

        $i0 := @parameter2: int;

        $r15 = interfaceinvoke $r14.<androidx.compose.runtime.Composer: androidx.compose.runtime.Composer startRestartGroup(int)>(-1493585151);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r15, "C(animateTo)426@16622L25,430@16892L655,430@16871L676:Transition.kt#pdpnli");

        $i11 = $i0;

        $i2 = $i0 & 14;

        if $i2 != 0 goto label03;

        $z12 = interfaceinvoke $r15.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>(r1);

        if $z12 == 0 goto label01;

        $b12 = 4;

        goto label02;

     label01:
        $b12 = 2;

     label02:
        $i11 = $i0 | $b12;

     label03:
        $i13 = $i0 & 112;

        if $i13 != 0 goto label06;

        $i9 = $i11;

        $z11 = interfaceinvoke $r15.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>(r0);

        if $z11 == 0 goto label04;

        $b14 = 32;

        goto label05;

     label04:
        $b14 = 16;

     label05:
        $i11 = $i9 | $b14;

     label06:
        $i15 = $i11 & 91;

        if $i15 != 18 goto label07;

        $z10 = interfaceinvoke $r15.<androidx.compose.runtime.Composer: boolean getSkipping()>();

        if $z10 != 0 goto label14;

     label07:
        $z5 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z5 == 0 goto label08;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(-1493585151, $i11, -1, "androidx.compose.animation.core.Transition.animateTo (Transition.kt:424)");

     label08:
        $z6 = virtualinvoke r0.<androidx.compose.animation.core.Transition: boolean isSeeking()>();

        if $z6 != 0 goto label13;

        $i4 = 14 & $i11;

        $i3 = 112 & $i11;

        $i5 = $i4 | $i3;

        virtualinvoke r0.<androidx.compose.animation.core.Transition: void updateTarget$animation_core_release(java.lang.Object,androidx.compose.runtime.Composer,int)>(r1, $r15, $i5);

        $r9 = virtualinvoke r0.<androidx.compose.animation.core.Transition: java.lang.Object getCurrentState()>();

        $z7 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, $r9);

        if $z7 == 0 goto label09;

        $z8 = virtualinvoke r0.<androidx.compose.animation.core.Transition: boolean isRunning()>();

        if $z8 != 0 goto label09;

        $z9 = virtualinvoke r0.<androidx.compose.animation.core.Transition: boolean getUpdateChildrenNeeded$animation_core_release()>();

        if $z9 == 0 goto label13;

     label09:
        $r16 = r0;

        interfaceinvoke $r15.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(1157296644);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r15, "C(remember)P(1):Composables.kt#9igjgp");

        z1 = interfaceinvoke $r15.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>(r0);

        r3 = interfaceinvoke $r15.<androidx.compose.runtime.Composer: java.lang.Object rememberedValue()>();

        if z1 != 0 goto label10;

        $r12 = <androidx.compose.runtime.Composer: androidx.compose.runtime.Composer$Companion Companion>;

        $r13 = virtualinvoke $r12.<androidx.compose.runtime.Composer$Companion: java.lang.Object getEmpty()>();

        if r3 != $r13 goto label11;

     label10:
        r6 = r0;

        $r10 = new androidx.compose.animation.core.Transition$animateTo$1$1;

        specialinvoke $r10.<androidx.compose.animation.core.Transition$animateTo$1$1: void <init>(androidx.compose.animation.core.Transition,kotlin.coroutines.Continuation)>(r0, null);

        $r16 = r6;

        r4 = (kotlin.jvm.functions.Function2) $r10;

        interfaceinvoke $r15.<androidx.compose.runtime.Composer: void updateRememberedValue(java.lang.Object)>(r4);

        $r17 = r4;

        goto label12;

     label11:
        $r17 = r3;

     label12:
        r5 = $r17;

        interfaceinvoke $r15.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        $r11 = (kotlin.jvm.functions.Function2) r5;

        $i6 = $i11 >> 3;

        $i7 = 14 & $i6;

        $i8 = 64 | $i7;

        staticinvoke <androidx.compose.runtime.EffectsKt: void LaunchedEffect(java.lang.Object,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int)>($r16, $r11, $r15, $i8);

     label13:
        $z13 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z13 == 0 goto label15;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

        goto label15;

     label14:
        interfaceinvoke $r15.<androidx.compose.runtime.Composer: void skipToGroupEnd()>();

     label15:
        $r18 = interfaceinvoke $r15.<androidx.compose.runtime.Composer: androidx.compose.runtime.ScopeUpdateScope endRestartGroup()>();

        if $r18 != null goto label16;

        goto label17;

     label16:
        $r7 = new androidx.compose.animation.core.Transition$animateTo$2;

        specialinvoke $r7.<androidx.compose.animation.core.Transition$animateTo$2: void <init>(androidx.compose.animation.core.Transition,java.lang.Object,int)>(r0, r1, $i0);

        $r8 = (kotlin.jvm.functions.Function2) $r7;

        interfaceinvoke $r18.<androidx.compose.runtime.ScopeUpdateScope: void updateScope(kotlin.jvm.functions.Function2)>($r8);

     label17:
        return;
    }

    private final void onChildAnimationUpdated()
    {
        androidx.compose.animation.core.Transition r0;
        java.lang.Iterable $r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        androidx.compose.animation.core.Transition$TransitionAnimationState r4;
        boolean $z2, $z3;
        androidx.compose.runtime.snapshots.SnapshotStateList $r5;
        long $l0, $l1, l2;

        r0 := @this: androidx.compose.animation.core.Transition;

        virtualinvoke r0.<androidx.compose.animation.core.Transition: void setUpdateChildrenNeeded$animation_core_release(boolean)>(1);

        $z2 = virtualinvoke r0.<androidx.compose.animation.core.Transition: boolean isSeeking()>();

        if $z2 == 0 goto label3;

        l2 = 0L;

        $r5 = r0.<androidx.compose.animation.core.Transition: androidx.compose.runtime.snapshots.SnapshotStateList _animations>;

        $r1 = (java.lang.Iterable) $r5;

        r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.compose.animation.core.Transition$TransitionAnimationState) r3;

        $l0 = virtualinvoke r4.<androidx.compose.animation.core.Transition$TransitionAnimationState: long getDurationNanos$animation_core_release()>();

        l2 = staticinvoke <java.lang.Math: long max(long,long)>(l2, $l0);

        $l1 = r0.<androidx.compose.animation.core.Transition: long lastSeekedTimeNanos>;

        virtualinvoke r4.<androidx.compose.animation.core.Transition$TransitionAnimationState: void seekTo$animation_core_release(long)>($l1);

        goto label1;

     label2:
        virtualinvoke r0.<androidx.compose.animation.core.Transition: void setUpdateChildrenNeeded$animation_core_release(boolean)>(0);

     label3:
        return;
    }

    public final void removeAnimation$animation_core_release(androidx.compose.animation.core.Transition$DeferredAnimation)
    {
        androidx.compose.animation.core.Transition r0;
        androidx.compose.animation.core.Transition$DeferredAnimation r1;
        androidx.compose.animation.core.Transition$TransitionAnimationState r2, $r4;
        androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData $r3;

        r0 := @this: androidx.compose.animation.core.Transition;

        r1 := @parameter0: androidx.compose.animation.core.Transition$DeferredAnimation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "deferredAnimation");

        $r3 = virtualinvoke r1.<androidx.compose.animation.core.Transition$DeferredAnimation: androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData getData$animation_core_release()>();

        if $r3 == null goto label1;

        $r4 = virtualinvoke $r3.<androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData: androidx.compose.animation.core.Transition$TransitionAnimationState getAnimation()>();

        if $r4 == null goto label1;

        r2 = $r4;

        virtualinvoke r0.<androidx.compose.animation.core.Transition: void removeAnimation$animation_core_release(androidx.compose.animation.core.Transition$TransitionAnimationState)>(r2);

        goto label1;

     label1:
        return;
    }

    public static final void access$onChildAnimationUpdated(androidx.compose.animation.core.Transition)
    {
        androidx.compose.animation.core.Transition $r0;

        $r0 := @parameter0: androidx.compose.animation.core.Transition;

        specialinvoke $r0.<androidx.compose.animation.core.Transition: void onChildAnimationUpdated()>();

        return;
    }

    public static final androidx.compose.runtime.snapshots.SnapshotStateList access$get_animations$p(androidx.compose.animation.core.Transition)
    {
        androidx.compose.animation.core.Transition $r0;
        androidx.compose.runtime.snapshots.SnapshotStateList $r1;

        $r0 := @parameter0: androidx.compose.animation.core.Transition;

        $r1 = $r0.<androidx.compose.animation.core.Transition: androidx.compose.runtime.snapshots.SnapshotStateList _animations>;

        return $r1;
    }

    public static final androidx.compose.runtime.snapshots.SnapshotStateList access$get_transitions$p(androidx.compose.animation.core.Transition)
    {
        androidx.compose.animation.core.Transition $r0;
        androidx.compose.runtime.snapshots.SnapshotStateList $r1;

        $r0 := @parameter0: androidx.compose.animation.core.Transition;

        $r1 = $r0.<androidx.compose.animation.core.Transition: androidx.compose.runtime.snapshots.SnapshotStateList _transitions>;

        return $r1;
    }

androidx.compose.animation.core.Transition$animateTo$1$1$1
<androidx.compose.animation.core.Transition$animateTo$1$1$1: androidx.compose.animation.core.Transition this$0>
<androidx.compose.animation.core.Transition$animateTo$1$1$1: float $durationScale>
    void <init>(androidx.compose.animation.core.Transition, float)
    {
        androidx.compose.animation.core.Transition$animateTo$1$1$1 r0;
        androidx.compose.animation.core.Transition $r1;
        float $f0;

        r0 := @this: androidx.compose.animation.core.Transition$animateTo$1$1$1;

        $r1 := @parameter0: androidx.compose.animation.core.Transition;

        $f0 := @parameter1: float;

        r0.<androidx.compose.animation.core.Transition$animateTo$1$1$1: androidx.compose.animation.core.Transition this$0> = $r1;

        r0.<androidx.compose.animation.core.Transition$animateTo$1$1$1: float $durationScale> = $f0;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(long)
    {
        androidx.compose.animation.core.Transition$animateTo$1$1$1 r0;
        long l0, $l1;
        androidx.compose.animation.core.Transition $r1, $r2;
        boolean $z0;
        float $f0;

        r0 := @this: androidx.compose.animation.core.Transition$animateTo$1$1$1;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.compose.animation.core.Transition$animateTo$1$1$1: androidx.compose.animation.core.Transition this$0>;

        $z0 = virtualinvoke $r1.<androidx.compose.animation.core.Transition: boolean isSeeking()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<androidx.compose.animation.core.Transition$animateTo$1$1$1: androidx.compose.animation.core.Transition this$0>;

        $l1 = l0 / 1L;

        $f0 = r0.<androidx.compose.animation.core.Transition$animateTo$1$1$1: float $durationScale>;

        virtualinvoke $r2.<androidx.compose.animation.core.Transition: void onFrame$animation_core_release(long,float)>($l1, $f0);

     label1:
        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.animation.core.Transition$animateTo$1$1$1 r0;
        java.lang.Object r1;
        java.lang.Number $r2;
        long $l0;
        kotlin.Unit $r3;

        r0 := @this: androidx.compose.animation.core.Transition$animateTo$1$1$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Number) r1;

        $l0 = virtualinvoke $r2.<java.lang.Number: long longValue()>();

        virtualinvoke r0.<androidx.compose.animation.core.Transition$animateTo$1$1$1: void invoke(long)>($l0);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.compose.animation.core.Transition$animateTo$1$1
<androidx.compose.animation.core.Transition$animateTo$1$1: int label>
<androidx.compose.animation.core.Transition$animateTo$1$1: java.lang.Object L$0>
<androidx.compose.animation.core.Transition$animateTo$1$1: androidx.compose.animation.core.Transition this$0>
    void <init>(androidx.compose.animation.core.Transition, kotlin.coroutines.Continuation)
    {
        androidx.compose.animation.core.Transition$animateTo$1$1 r0;
        androidx.compose.animation.core.Transition $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.compose.animation.core.Transition$animateTo$1$1;

        $r1 := @parameter0: androidx.compose.animation.core.Transition;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.compose.animation.core.Transition$animateTo$1$1: androidx.compose.animation.core.Transition this$0> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.compose.animation.core.Transition$animateTo$1$1 r0;
        java.lang.Object $r1, r2, $r3, $r9, $r10;
        float f0;
        int $i0;
        kotlin.coroutines.CoroutineContext $r4;
        androidx.compose.animation.core.Transition$animateTo$1$1$1 $r5;
        androidx.compose.animation.core.Transition $r6;
        kotlin.jvm.functions.Function1 $r7;
        kotlin.coroutines.Continuation $r8;
        java.lang.IllegalStateException $r11;
        kotlinx.coroutines.CoroutineScope $r12;

        r0 := @this: androidx.compose.animation.core.Transition$animateTo$1$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.compose.animation.core.Transition$animateTo$1$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label3;
            default: goto label5;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r10 = r0.<androidx.compose.animation.core.Transition$animateTo$1$1: java.lang.Object L$0>;

        $r12 = (kotlinx.coroutines.CoroutineScope) $r10;

     label2:
        $r4 = interfaceinvoke $r12.<kotlinx.coroutines.CoroutineScope: kotlin.coroutines.CoroutineContext getCoroutineContext()>();

        f0 = staticinvoke <androidx.compose.animation.core.SuspendAnimationKt: float getDurationScale(kotlin.coroutines.CoroutineContext)>($r4);

        $r5 = new androidx.compose.animation.core.Transition$animateTo$1$1$1;

        $r6 = r0.<androidx.compose.animation.core.Transition$animateTo$1$1: androidx.compose.animation.core.Transition this$0>;

        specialinvoke $r5.<androidx.compose.animation.core.Transition$animateTo$1$1$1: void <init>(androidx.compose.animation.core.Transition,float)>($r6, f0);

        $r7 = (kotlin.jvm.functions.Function1) $r5;

        $r8 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.compose.animation.core.Transition$animateTo$1$1: java.lang.Object L$0> = $r12;

        r0.<androidx.compose.animation.core.Transition$animateTo$1$1: int label> = 1;

        $r9 = staticinvoke <androidx.compose.runtime.MonotonicFrameClockKt: java.lang.Object withFrameNanos(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>($r7, $r8);

        if $r9 != r2 goto label4;

        return r2;

     label3:
        $r3 = r0.<androidx.compose.animation.core.Transition$animateTo$1$1: java.lang.Object L$0>;

        $r12 = (kotlinx.coroutines.CoroutineScope) $r3;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label4:
        goto label2;

     label5:
        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r11;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.compose.animation.core.Transition$animateTo$1$1 r0, r3, $r4;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r6;
        androidx.compose.animation.core.Transition $r5;

        r0 := @this: androidx.compose.animation.core.Transition$animateTo$1$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = new androidx.compose.animation.core.Transition$animateTo$1$1;

        $r5 = r0.<androidx.compose.animation.core.Transition$animateTo$1$1: androidx.compose.animation.core.Transition this$0>;

        specialinvoke $r4.<androidx.compose.animation.core.Transition$animateTo$1$1: void <init>(androidx.compose.animation.core.Transition,kotlin.coroutines.Continuation)>($r5, $r2);

        r3 = $r4;

        r3.<androidx.compose.animation.core.Transition$animateTo$1$1: java.lang.Object L$0> = r1;

        $r6 = (kotlin.coroutines.Continuation) r3;

        return $r6;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.compose.animation.core.Transition$animateTo$1$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.compose.animation.core.Transition$animateTo$1$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.compose.animation.core.Transition$animateTo$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.compose.animation.core.Transition$animateTo$1$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.compose.animation.core.Transition$animateTo$1$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.animation.core.Transition$animateTo$1$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.compose.animation.core.Transition$animateTo$1$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.compose.animation.core.Transition$animateTo$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.compose.animation.core.Transition$animateTo$2
<androidx.compose.animation.core.Transition$animateTo$2: androidx.compose.animation.core.Transition $tmp0_rcvr>
<androidx.compose.animation.core.Transition$animateTo$2: java.lang.Object $targetState>
<androidx.compose.animation.core.Transition$animateTo$2: int $$changed>
    void <init>(androidx.compose.animation.core.Transition, java.lang.Object, int)
    {
        androidx.compose.animation.core.Transition$animateTo$2 r0;
        androidx.compose.animation.core.Transition $r1;
        java.lang.Object $r2;
        int $i0;

        r0 := @this: androidx.compose.animation.core.Transition$animateTo$2;

        $r1 := @parameter0: androidx.compose.animation.core.Transition;

        $r2 := @parameter1: java.lang.Object;

        $i0 := @parameter2: int;

        r0.<androidx.compose.animation.core.Transition$animateTo$2: androidx.compose.animation.core.Transition $tmp0_rcvr> = $r1;

        r0.<androidx.compose.animation.core.Transition$animateTo$2: java.lang.Object $targetState> = $r2;

        r0.<androidx.compose.animation.core.Transition$animateTo$2: int $$changed> = $i0;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public final void invoke(androidx.compose.runtime.Composer, int)
    {
        androidx.compose.animation.core.Transition$animateTo$2 r0;
        androidx.compose.runtime.Composer $r1;
        int $i0, $i1, $i2;
        java.lang.Object $r2;
        androidx.compose.animation.core.Transition $r3;

        r0 := @this: androidx.compose.animation.core.Transition$animateTo$2;

        $r1 := @parameter0: androidx.compose.runtime.Composer;

        $i0 := @parameter1: int;

        $r3 = r0.<androidx.compose.animation.core.Transition$animateTo$2: androidx.compose.animation.core.Transition $tmp0_rcvr>;

        $r2 = r0.<androidx.compose.animation.core.Transition$animateTo$2: java.lang.Object $targetState>;

        $i1 = r0.<androidx.compose.animation.core.Transition$animateTo$2: int $$changed>;

        $i2 = $i1 | 1;

        virtualinvoke $r3.<androidx.compose.animation.core.Transition: void animateTo$animation_core_release(java.lang.Object,androidx.compose.runtime.Composer,int)>($r2, $r1, $i2);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.animation.core.Transition$animateTo$2 r0;
        java.lang.Object r1, r2;
        java.lang.Number $r3;
        androidx.compose.runtime.Composer $r4;
        int $i0;
        kotlin.Unit $r5;

        r0 := @this: androidx.compose.animation.core.Transition$animateTo$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.compose.runtime.Composer) r1;

        $r3 = (java.lang.Number) r2;

        $i0 = virtualinvoke $r3.<java.lang.Number: int intValue()>();

        virtualinvoke r0.<androidx.compose.animation.core.Transition$animateTo$2: void invoke(androidx.compose.runtime.Composer,int)>($r4, $i0);

        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r5;
    }

androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData
<androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData: androidx.compose.animation.core.Transition$TransitionAnimationState animation>
<androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData: kotlin.jvm.functions.Function1 transitionSpec>
<androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData: kotlin.jvm.functions.Function1 targetValueByState>
<androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData: androidx.compose.animation.core.Transition$DeferredAnimation this$0>
    public void <init>(androidx.compose.animation.core.Transition$DeferredAnimation, androidx.compose.animation.core.Transition$TransitionAnimationState, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData r0;
        androidx.compose.animation.core.Transition$DeferredAnimation r1;
        androidx.compose.animation.core.Transition$TransitionAnimationState r2;
        kotlin.jvm.functions.Function1 r3, r4;

        r0 := @this: androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData;

        r1 := @parameter0: androidx.compose.animation.core.Transition$DeferredAnimation;

        r2 := @parameter1: androidx.compose.animation.core.Transition$TransitionAnimationState;

        r3 := @parameter2: kotlin.jvm.functions.Function1;

        r4 := @parameter3: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "animation");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "transitionSpec");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "targetValueByState");

        r0.<androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData: androidx.compose.animation.core.Transition$DeferredAnimation this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData: androidx.compose.animation.core.Transition$TransitionAnimationState animation> = r2;

        r0.<androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData: kotlin.jvm.functions.Function1 transitionSpec> = r3;

        r0.<androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData: kotlin.jvm.functions.Function1 targetValueByState> = r4;

        return;
    }

    public final androidx.compose.animation.core.Transition$TransitionAnimationState getAnimation()
    {
        androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData r0;
        androidx.compose.animation.core.Transition$TransitionAnimationState $r1;

        r0 := @this: androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData;

        $r1 = r0.<androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData: androidx.compose.animation.core.Transition$TransitionAnimationState animation>;

        return $r1;
    }

    public final kotlin.jvm.functions.Function1 getTransitionSpec()
    {
        androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData;

        $r1 = r0.<androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData: kotlin.jvm.functions.Function1 transitionSpec>;

        return $r1;
    }

    public final void setTransitionSpec(kotlin.jvm.functions.Function1)
    {
        androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData r0;
        kotlin.jvm.functions.Function1 r1;

        r0 := @this: androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData: kotlin.jvm.functions.Function1 transitionSpec> = r1;

        return;
    }

    public final kotlin.jvm.functions.Function1 getTargetValueByState()
    {
        androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData;

        $r1 = r0.<androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData: kotlin.jvm.functions.Function1 targetValueByState>;

        return $r1;
    }

    public final void setTargetValueByState(kotlin.jvm.functions.Function1)
    {
        androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData r0;
        kotlin.jvm.functions.Function1 r1;

        r0 := @this: androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData: kotlin.jvm.functions.Function1 targetValueByState> = r1;

        return;
    }

    public final void updateAnimationStates(androidx.compose.animation.core.Transition$Segment)
    {
        androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData r0;
        androidx.compose.animation.core.Transition$Segment r1;
        java.lang.Object r2, r3, $r5, $r10, $r13, $r16;
        kotlin.jvm.functions.Function1 $r4, $r8, $r12, $r14;
        androidx.compose.animation.core.Transition$DeferredAnimation $r6;
        androidx.compose.animation.core.Transition $r7;
        boolean $z0;
        androidx.compose.animation.core.Transition$TransitionAnimationState $r9, $r15;
        androidx.compose.animation.core.FiniteAnimationSpec $r11, $r17;

        r0 := @this: androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData;

        r1 := @parameter0: androidx.compose.animation.core.Transition$Segment;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "segment");

        $r4 = r0.<androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData: kotlin.jvm.functions.Function1 targetValueByState>;

        $r5 = interfaceinvoke r1.<androidx.compose.animation.core.Transition$Segment: java.lang.Object getTargetState()>();

        r2 = interfaceinvoke $r4.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r6 = r0.<androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData: androidx.compose.animation.core.Transition$DeferredAnimation this$0>;

        $r7 = $r6.<androidx.compose.animation.core.Transition$DeferredAnimation: androidx.compose.animation.core.Transition this$0>;

        $z0 = virtualinvoke $r7.<androidx.compose.animation.core.Transition: boolean isSeeking()>();

        if $z0 == 0 goto label1;

        $r12 = r0.<androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData: kotlin.jvm.functions.Function1 targetValueByState>;

        $r13 = interfaceinvoke r1.<androidx.compose.animation.core.Transition$Segment: java.lang.Object getInitialState()>();

        r3 = interfaceinvoke $r12.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r13);

        $r15 = r0.<androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData: androidx.compose.animation.core.Transition$TransitionAnimationState animation>;

        $r14 = r0.<androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData: kotlin.jvm.functions.Function1 transitionSpec>;

        $r16 = interfaceinvoke $r14.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        $r17 = (androidx.compose.animation.core.FiniteAnimationSpec) $r16;

        virtualinvoke $r15.<androidx.compose.animation.core.Transition$TransitionAnimationState: void updateInitialAndTargetValue$animation_core_release(java.lang.Object,java.lang.Object,androidx.compose.animation.core.FiniteAnimationSpec)>(r3, r2, $r17);

        goto label2;

     label1:
        $r9 = r0.<androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData: androidx.compose.animation.core.Transition$TransitionAnimationState animation>;

        $r8 = r0.<androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData: kotlin.jvm.functions.Function1 transitionSpec>;

        $r10 = interfaceinvoke $r8.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        $r11 = (androidx.compose.animation.core.FiniteAnimationSpec) $r10;

        virtualinvoke $r9.<androidx.compose.animation.core.Transition$TransitionAnimationState: void updateTargetValue$animation_core_release(java.lang.Object,androidx.compose.animation.core.FiniteAnimationSpec)>(r2, $r11);

     label2:
        return;
    }

    public java.lang.Object getValue()
    {
        androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData r0;
        androidx.compose.animation.core.Transition$DeferredAnimation $r1;
        androidx.compose.animation.core.Transition $r2;
        androidx.compose.animation.core.Transition$Segment $r3;
        androidx.compose.animation.core.Transition$TransitionAnimationState $r4;
        java.lang.Object $r5;

        r0 := @this: androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData;

        $r1 = r0.<androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData: androidx.compose.animation.core.Transition$DeferredAnimation this$0>;

        $r2 = $r1.<androidx.compose.animation.core.Transition$DeferredAnimation: androidx.compose.animation.core.Transition this$0>;

        $r3 = virtualinvoke $r2.<androidx.compose.animation.core.Transition: androidx.compose.animation.core.Transition$Segment getSegment()>();

        virtualinvoke r0.<androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData: void updateAnimationStates(androidx.compose.animation.core.Transition$Segment)>($r3);

        $r4 = r0.<androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData: androidx.compose.animation.core.Transition$TransitionAnimationState animation>;

        $r5 = virtualinvoke $r4.<androidx.compose.animation.core.Transition$TransitionAnimationState: java.lang.Object getValue()>();

        return $r5;
    }

androidx.compose.animation.core.Transition$DeferredAnimation
<androidx.compose.animation.core.Transition$DeferredAnimation: androidx.compose.animation.core.TwoWayConverter typeConverter>
<androidx.compose.animation.core.Transition$DeferredAnimation: java.lang.String label>
<androidx.compose.animation.core.Transition$DeferredAnimation: androidx.compose.runtime.MutableState data$delegate>
<androidx.compose.animation.core.Transition$DeferredAnimation: androidx.compose.animation.core.Transition this$0>
    public void <init>(androidx.compose.animation.core.Transition, androidx.compose.animation.core.TwoWayConverter, java.lang.String)
    {
        androidx.compose.animation.core.Transition$DeferredAnimation r0;
        androidx.compose.animation.core.Transition r1;
        androidx.compose.animation.core.TwoWayConverter r2;
        java.lang.String r3;
        androidx.compose.runtime.MutableState $r4;

        r0 := @this: androidx.compose.animation.core.Transition$DeferredAnimation;

        r1 := @parameter0: androidx.compose.animation.core.Transition;

        r2 := @parameter1: androidx.compose.animation.core.TwoWayConverter;

        r3 := @parameter2: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "typeConverter");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "label");

        r0.<androidx.compose.animation.core.Transition$DeferredAnimation: androidx.compose.animation.core.Transition this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.animation.core.Transition$DeferredAnimation: androidx.compose.animation.core.TwoWayConverter typeConverter> = r2;

        r0.<androidx.compose.animation.core.Transition$DeferredAnimation: java.lang.String label> = r3;

        $r4 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>(null, null, 2, null);

        r0.<androidx.compose.animation.core.Transition$DeferredAnimation: androidx.compose.runtime.MutableState data$delegate> = $r4;

        return;
    }

    public final androidx.compose.animation.core.TwoWayConverter getTypeConverter()
    {
        androidx.compose.animation.core.Transition$DeferredAnimation r0;
        androidx.compose.animation.core.TwoWayConverter $r1;

        r0 := @this: androidx.compose.animation.core.Transition$DeferredAnimation;

        $r1 = r0.<androidx.compose.animation.core.Transition$DeferredAnimation: androidx.compose.animation.core.TwoWayConverter typeConverter>;

        return $r1;
    }

    public final java.lang.String getLabel()
    {
        androidx.compose.animation.core.Transition$DeferredAnimation r0;
        java.lang.String $r1;

        r0 := @this: androidx.compose.animation.core.Transition$DeferredAnimation;

        $r1 = r0.<androidx.compose.animation.core.Transition$DeferredAnimation: java.lang.String label>;

        return $r1;
    }

    public final androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData getData$animation_core_release()
    {
        androidx.compose.animation.core.Transition$DeferredAnimation r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData $r4;

        r0 := @this: androidx.compose.animation.core.Transition$DeferredAnimation;

        $r2 = r0.<androidx.compose.animation.core.Transition$DeferredAnimation: androidx.compose.runtime.MutableState data$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData) $r3;

        return $r4;
    }

    public final void setData$animation_core_release(androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData)
    {
        androidx.compose.animation.core.Transition$DeferredAnimation r0;
        androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData r1;
        androidx.compose.runtime.MutableState $r2;

        r0 := @this: androidx.compose.animation.core.Transition$DeferredAnimation;

        r1 := @parameter0: androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData;

        $r2 = r0.<androidx.compose.animation.core.Transition$DeferredAnimation: androidx.compose.runtime.MutableState data$delegate>;

        interfaceinvoke $r2.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r1);

        return;
    }

    public final androidx.compose.runtime.State animate(kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        androidx.compose.animation.core.Transition$DeferredAnimation r0;
        kotlin.jvm.functions.Function1 r1, r2;
        androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData r3, r4, $r7, $r21, r22;
        androidx.compose.animation.core.Transition$Segment $r5;
        androidx.compose.runtime.State $r6;
        androidx.compose.animation.core.Transition$TransitionAnimationState $r8, $r20;
        androidx.compose.animation.core.Transition $r9, $r10, $r13, $r23, r25;
        java.lang.Object $r11, $r12, $r15, $r16;
        androidx.compose.animation.core.TwoWayConverter $r14, $r19;
        androidx.compose.animation.core.AnimationVector $r17;
        java.lang.String $r18;

        r0 := @this: androidx.compose.animation.core.Transition$DeferredAnimation;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        r2 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "transitionSpec");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "targetValueByState");

        $r21 = virtualinvoke r0.<androidx.compose.animation.core.Transition$DeferredAnimation: androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData getData$animation_core_release()>();

        if $r21 != null goto label1;

        $r7 = new androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData;

        $r8 = new androidx.compose.animation.core.Transition$TransitionAnimationState;

        $r10 = r0.<androidx.compose.animation.core.Transition$DeferredAnimation: androidx.compose.animation.core.Transition this$0>;

        $r9 = r0.<androidx.compose.animation.core.Transition$DeferredAnimation: androidx.compose.animation.core.Transition this$0>;

        $r11 = virtualinvoke $r9.<androidx.compose.animation.core.Transition: java.lang.Object getCurrentState()>();

        $r12 = interfaceinvoke r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r11);

        $r14 = r0.<androidx.compose.animation.core.Transition$DeferredAnimation: androidx.compose.animation.core.TwoWayConverter typeConverter>;

        $r13 = r0.<androidx.compose.animation.core.Transition$DeferredAnimation: androidx.compose.animation.core.Transition this$0>;

        $r15 = virtualinvoke $r13.<androidx.compose.animation.core.Transition: java.lang.Object getCurrentState()>();

        $r16 = interfaceinvoke r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r15);

        $r17 = staticinvoke <androidx.compose.animation.core.AnimationStateKt: androidx.compose.animation.core.AnimationVector createZeroVectorFrom(androidx.compose.animation.core.TwoWayConverter,java.lang.Object)>($r14, $r16);

        $r19 = r0.<androidx.compose.animation.core.Transition$DeferredAnimation: androidx.compose.animation.core.TwoWayConverter typeConverter>;

        $r18 = r0.<androidx.compose.animation.core.Transition$DeferredAnimation: java.lang.String label>;

        specialinvoke $r8.<androidx.compose.animation.core.Transition$TransitionAnimationState: void <init>(androidx.compose.animation.core.Transition,java.lang.Object,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.TwoWayConverter,java.lang.String)>($r10, $r12, $r17, $r19, $r18);

        specialinvoke $r7.<androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData: void <init>(androidx.compose.animation.core.Transition$DeferredAnimation,androidx.compose.animation.core.Transition$TransitionAnimationState,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)>(r0, $r8, r1, r2);

        r22 = $r7;

        $r23 = r0.<androidx.compose.animation.core.Transition$DeferredAnimation: androidx.compose.animation.core.Transition this$0>;

        virtualinvoke r0.<androidx.compose.animation.core.Transition$DeferredAnimation: void setData$animation_core_release(androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData)>(r22);

        $r20 = virtualinvoke r22.<androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData: androidx.compose.animation.core.Transition$TransitionAnimationState getAnimation()>();

        virtualinvoke $r23.<androidx.compose.animation.core.Transition: boolean addAnimation$animation_core_release(androidx.compose.animation.core.Transition$TransitionAnimationState)>($r20);

        $r21 = r22;

     label1:
        r3 = $r21;

        r4 = r3;

        r25 = r0.<androidx.compose.animation.core.Transition$DeferredAnimation: androidx.compose.animation.core.Transition this$0>;

        virtualinvoke r4.<androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData: void setTargetValueByState(kotlin.jvm.functions.Function1)>(r2);

        virtualinvoke r4.<androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData: void setTransitionSpec(kotlin.jvm.functions.Function1)>(r1);

        $r5 = virtualinvoke r25.<androidx.compose.animation.core.Transition: androidx.compose.animation.core.Transition$Segment getSegment()>();

        virtualinvoke r4.<androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData: void updateAnimationStates(androidx.compose.animation.core.Transition$Segment)>($r5);

        $r6 = (androidx.compose.runtime.State) r4;

        return $r6;
    }

    public final void setupSeeking$animation_core_release()
    {
        androidx.compose.animation.core.Transition$DeferredAnimation r0;
        androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData r1, $r4;
        androidx.compose.animation.core.Transition r2;
        androidx.compose.animation.core.Transition$TransitionAnimationState $r5;
        kotlin.jvm.functions.Function1 $r6, $r10, $r14;
        androidx.compose.animation.core.Transition$Segment $r7, $r11, $r15;
        java.lang.Object $r8, $r9, $r12, $r13, $r16;
        androidx.compose.animation.core.FiniteAnimationSpec $r17;

        r0 := @this: androidx.compose.animation.core.Transition$DeferredAnimation;

        $r4 = virtualinvoke r0.<androidx.compose.animation.core.Transition$DeferredAnimation: androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData getData$animation_core_release()>();

        if $r4 == null goto label1;

        r1 = $r4;

        r2 = r0.<androidx.compose.animation.core.Transition$DeferredAnimation: androidx.compose.animation.core.Transition this$0>;

        $r5 = virtualinvoke r1.<androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData: androidx.compose.animation.core.Transition$TransitionAnimationState getAnimation()>();

        $r6 = virtualinvoke r1.<androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData: kotlin.jvm.functions.Function1 getTargetValueByState()>();

        $r7 = virtualinvoke r2.<androidx.compose.animation.core.Transition: androidx.compose.animation.core.Transition$Segment getSegment()>();

        $r8 = interfaceinvoke $r7.<androidx.compose.animation.core.Transition$Segment: java.lang.Object getInitialState()>();

        $r9 = interfaceinvoke $r6.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r8);

        $r10 = virtualinvoke r1.<androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData: kotlin.jvm.functions.Function1 getTargetValueByState()>();

        $r11 = virtualinvoke r2.<androidx.compose.animation.core.Transition: androidx.compose.animation.core.Transition$Segment getSegment()>();

        $r12 = interfaceinvoke $r11.<androidx.compose.animation.core.Transition$Segment: java.lang.Object getTargetState()>();

        $r13 = interfaceinvoke $r10.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r12);

        $r14 = virtualinvoke r1.<androidx.compose.animation.core.Transition$DeferredAnimation$DeferredAnimationData: kotlin.jvm.functions.Function1 getTransitionSpec()>();

        $r15 = virtualinvoke r2.<androidx.compose.animation.core.Transition: androidx.compose.animation.core.Transition$Segment getSegment()>();

        $r16 = interfaceinvoke $r14.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r15);

        $r17 = (androidx.compose.animation.core.FiniteAnimationSpec) $r16;

        virtualinvoke $r5.<androidx.compose.animation.core.Transition$TransitionAnimationState: void updateInitialAndTargetValue$animation_core_release(java.lang.Object,java.lang.Object,androidx.compose.animation.core.FiniteAnimationSpec)>($r9, $r13, $r17);

        goto label1;

     label1:
        return;
    }

androidx.compose.animation.core.Transition$Segment$DefaultImpls
    public static boolean isTransitioningTo(androidx.compose.animation.core.Transition$Segment, java.lang.Object, java.lang.Object)
    {
        androidx.compose.animation.core.Transition$Segment $r0;
        java.lang.Object $r1, r2;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.animation.core.Transition$Segment;

        $r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        $z0 = staticinvoke <androidx.compose.animation.core.Transition$Segment: boolean access$isTransitioningTo$jd(androidx.compose.animation.core.Transition$Segment,java.lang.Object,java.lang.Object)>($r0, $r1, r2);

        return $z0;
    }

androidx.compose.animation.core.Transition$Segment
<androidx.compose.animation.core.Transition$Segment: java.lang.Object getInitialState()>
<androidx.compose.animation.core.Transition$Segment: java.lang.Object getTargetState()>
    public boolean isTransitioningTo(java.lang.Object, java.lang.Object)
    {
        androidx.compose.animation.core.Transition$Segment r0;
        java.lang.Object $r1, r2, $r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.compose.animation.core.Transition$Segment;

        $r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = interfaceinvoke r0.<androidx.compose.animation.core.Transition$Segment: java.lang.Object getInitialState()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r1, $r3);

        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke r0.<androidx.compose.animation.core.Transition$Segment: java.lang.Object getTargetState()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r4);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public static boolean access$isTransitioningTo$jd(androidx.compose.animation.core.Transition$Segment, java.lang.Object, java.lang.Object)
    {
        androidx.compose.animation.core.Transition$Segment $r0;
        java.lang.Object $r1, r2;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.animation.core.Transition$Segment;

        $r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        $z0 = specialinvoke $r0.<androidx.compose.animation.core.Transition$Segment: boolean isTransitioningTo(java.lang.Object,java.lang.Object)>($r1, r2);

        return $z0;
    }

androidx.compose.animation.core.Transition$SegmentImpl
<androidx.compose.animation.core.Transition$SegmentImpl: java.lang.Object initialState>
<androidx.compose.animation.core.Transition$SegmentImpl: java.lang.Object targetState>
    public void <init>(java.lang.Object, java.lang.Object)
    {
        androidx.compose.animation.core.Transition$SegmentImpl r0;
        java.lang.Object r1, r2;

        r0 := @this: androidx.compose.animation.core.Transition$SegmentImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.animation.core.Transition$SegmentImpl: java.lang.Object initialState> = r1;

        r0.<androidx.compose.animation.core.Transition$SegmentImpl: java.lang.Object targetState> = r2;

        return;
    }

    public java.lang.Object getInitialState()
    {
        androidx.compose.animation.core.Transition$SegmentImpl r0;
        java.lang.Object $r1;

        r0 := @this: androidx.compose.animation.core.Transition$SegmentImpl;

        $r1 = r0.<androidx.compose.animation.core.Transition$SegmentImpl: java.lang.Object initialState>;

        return $r1;
    }

    public java.lang.Object getTargetState()
    {
        androidx.compose.animation.core.Transition$SegmentImpl r0;
        java.lang.Object $r1;

        r0 := @this: androidx.compose.animation.core.Transition$SegmentImpl;

        $r1 = r0.<androidx.compose.animation.core.Transition$SegmentImpl: java.lang.Object targetState>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.compose.animation.core.Transition$SegmentImpl r0;
        java.lang.Object r1, $r2, $r4, $r5, $r7;
        boolean $z0, $z1, $z2, $z3;
        androidx.compose.animation.core.Transition$Segment $r3, $r6;

        r0 := @this: androidx.compose.animation.core.Transition$SegmentImpl;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof androidx.compose.animation.core.Transition$Segment;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<androidx.compose.animation.core.Transition$SegmentImpl: java.lang.Object getInitialState()>();

        $r3 = (androidx.compose.animation.core.Transition$Segment) r1;

        $r4 = interfaceinvoke $r3.<androidx.compose.animation.core.Transition$Segment: java.lang.Object getInitialState()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r4);

        if $z1 == 0 goto label1;

        $r5 = virtualinvoke r0.<androidx.compose.animation.core.Transition$SegmentImpl: java.lang.Object getTargetState()>();

        $r6 = (androidx.compose.animation.core.Transition$Segment) r1;

        $r7 = interfaceinvoke $r6.<androidx.compose.animation.core.Transition$Segment: java.lang.Object getTargetState()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, $r7);

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    public int hashCode()
    {
        androidx.compose.animation.core.Transition$SegmentImpl r0;
        java.lang.Object $r1, $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: androidx.compose.animation.core.Transition$SegmentImpl;

        $r1 = virtualinvoke r0.<androidx.compose.animation.core.Transition$SegmentImpl: java.lang.Object getInitialState()>();

        if $r1 == null goto label1;

        $i2 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        goto label2;

     label1:
        $i2 = 0;

     label2:
        $i0 = $i2 * 31;

        $r2 = virtualinvoke r0.<androidx.compose.animation.core.Transition$SegmentImpl: java.lang.Object getTargetState()>();

        if $r2 == null goto label3;

        $i3 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        goto label4;

     label3:
        $i3 = 0;

     label4:
        $i1 = $i0 + $i3;

        return $i1;
    }

androidx.compose.animation.core.Transition$totalDurationNanos$2
<androidx.compose.animation.core.Transition$totalDurationNanos$2: androidx.compose.animation.core.Transition this$0>
    void <init>(androidx.compose.animation.core.Transition)
    {
        androidx.compose.animation.core.Transition$totalDurationNanos$2 r0;
        androidx.compose.animation.core.Transition $r1;

        r0 := @this: androidx.compose.animation.core.Transition$totalDurationNanos$2;

        $r1 := @parameter0: androidx.compose.animation.core.Transition;

        r0.<androidx.compose.animation.core.Transition$totalDurationNanos$2: androidx.compose.animation.core.Transition this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final java.lang.Long invoke()
    {
        androidx.compose.animation.core.Transition$totalDurationNanos$2 r0;
        androidx.compose.animation.core.Transition $r1, $r3, r13;
        androidx.compose.runtime.snapshots.SnapshotStateList $r2, $r4;
        boolean $z0, $z1;
        java.lang.Long $r5;
        long $l0, $l1, l2;
        java.lang.Iterable $r6, $r10;
        java.util.Iterator r7, r11;
        java.lang.Object r8, r12;
        androidx.compose.animation.core.Transition$TransitionAnimationState r9;

        r0 := @this: androidx.compose.animation.core.Transition$totalDurationNanos$2;

        l2 = 0L;

        $r1 = r0.<androidx.compose.animation.core.Transition$totalDurationNanos$2: androidx.compose.animation.core.Transition this$0>;

        $r2 = staticinvoke <androidx.compose.animation.core.Transition: androidx.compose.runtime.snapshots.SnapshotStateList access$get_animations$p(androidx.compose.animation.core.Transition)>($r1);

        $r6 = (java.lang.Iterable) $r2;

        r7 = interfaceinvoke $r6.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (androidx.compose.animation.core.Transition$TransitionAnimationState) r8;

        $l1 = virtualinvoke r9.<androidx.compose.animation.core.Transition$TransitionAnimationState: long getDurationNanos$animation_core_release()>();

        l2 = staticinvoke <java.lang.Math: long max(long,long)>(l2, $l1);

        goto label1;

     label2:
        $r3 = r0.<androidx.compose.animation.core.Transition$totalDurationNanos$2: androidx.compose.animation.core.Transition this$0>;

        $r4 = staticinvoke <androidx.compose.animation.core.Transition: androidx.compose.runtime.snapshots.SnapshotStateList access$get_transitions$p(androidx.compose.animation.core.Transition)>($r3);

        $r10 = (java.lang.Iterable) $r4;

        r11 = interfaceinvoke $r10.<java.lang.Iterable: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        r12 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r13 = (androidx.compose.animation.core.Transition) r12;

        $l0 = virtualinvoke r13.<androidx.compose.animation.core.Transition: long getTotalDurationNanos()>();

        l2 = staticinvoke <java.lang.Math: long max(long,long)>(l2, $l0);

        goto label3;

     label4:
        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        return $r5;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.compose.animation.core.Transition$totalDurationNanos$2 r0;
        java.lang.Long $r1;

        r0 := @this: androidx.compose.animation.core.Transition$totalDurationNanos$2;

        $r1 = virtualinvoke r0.<androidx.compose.animation.core.Transition$totalDurationNanos$2: java.lang.Long invoke()>();

        return $r1;
    }

androidx.compose.animation.core.Transition$TransitionAnimationState
<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.animation.core.TwoWayConverter typeConverter>
<androidx.compose.animation.core.Transition$TransitionAnimationState: java.lang.String label>
<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.runtime.MutableState targetValue$delegate>
<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.runtime.MutableState animationSpec$delegate>
<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.runtime.MutableState animation$delegate>
<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.runtime.MutableState isFinished$delegate>
<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.runtime.MutableState offsetTimeNanos$delegate>
<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.runtime.MutableState needsReset$delegate>
<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.runtime.MutableState value$delegate>
<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.animation.core.AnimationVector velocityVector>
<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.animation.core.FiniteAnimationSpec interruptionSpec>
<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.animation.core.Transition this$0>
    public void <init>(androidx.compose.animation.core.Transition, java.lang.Object, androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.TwoWayConverter, java.lang.String)
    {
        androidx.compose.animation.core.Transition$TransitionAnimationState r0;
        androidx.compose.animation.core.Transition r1;
        java.lang.Object r2, r6, $r15, $r26, $r33, $r36;
        androidx.compose.animation.core.AnimationVector r3, r7;
        androidx.compose.animation.core.TwoWayConverter r4, $r14, $r25, $r31, $r34;
        java.lang.String r5;
        float f0;
        int i0, i1;
        androidx.compose.runtime.MutableState $r8, $r10, $r16, $r18, $r20, $r22, $r23;
        androidx.compose.animation.core.SpringSpec $r9, $r28;
        androidx.compose.animation.core.TargetBasedAnimation $r11;
        androidx.compose.animation.core.FiniteAnimationSpec $r12, $r29;
        androidx.compose.animation.core.AnimationSpec $r13;
        java.lang.Boolean $r17, $r21;
        java.lang.Long $r19;
        java.util.Map $r24;
        java.lang.Float $r27;
        java.lang.Number $r30;
        kotlin.jvm.functions.Function1 $r32, $r35;

        r0 := @this: androidx.compose.animation.core.Transition$TransitionAnimationState;

        r1 := @parameter0: androidx.compose.animation.core.Transition;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: androidx.compose.animation.core.AnimationVector;

        r4 := @parameter3: androidx.compose.animation.core.TwoWayConverter;

        r5 := @parameter4: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "initialVelocityVector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "typeConverter");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "label");

        r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.animation.core.Transition this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.animation.core.TwoWayConverter typeConverter> = r4;

        r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: java.lang.String label> = r5;

        $r8 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>(r2, null, 2, null);

        r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.runtime.MutableState targetValue$delegate> = $r8;

        $r9 = staticinvoke <androidx.compose.animation.core.AnimationSpecKt: androidx.compose.animation.core.SpringSpec spring$default(float,float,java.lang.Object,int,java.lang.Object)>(0.0F, 0.0F, null, 7, null);

        $r10 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r9, null, 2, null);

        r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.runtime.MutableState animationSpec$delegate> = $r10;

        $r11 = new androidx.compose.animation.core.TargetBasedAnimation;

        $r12 = virtualinvoke r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.animation.core.FiniteAnimationSpec getAnimationSpec()>();

        $r13 = (androidx.compose.animation.core.AnimationSpec) $r12;

        $r14 = r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.animation.core.TwoWayConverter typeConverter>;

        $r15 = specialinvoke r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: java.lang.Object getTargetValue()>();

        specialinvoke $r11.<androidx.compose.animation.core.TargetBasedAnimation: void <init>(androidx.compose.animation.core.AnimationSpec,androidx.compose.animation.core.TwoWayConverter,java.lang.Object,java.lang.Object,androidx.compose.animation.core.AnimationVector)>($r13, $r14, r2, $r15, r3);

        $r16 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r11, null, 2, null);

        r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.runtime.MutableState animation$delegate> = $r16;

        $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r18 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r17, null, 2, null);

        r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.runtime.MutableState isFinished$delegate> = $r18;

        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        $r20 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r19, null, 2, null);

        r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.runtime.MutableState offsetTimeNanos$delegate> = $r20;

        $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r22 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r21, null, 2, null);

        r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.runtime.MutableState needsReset$delegate> = $r22;

        $r23 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>(r2, null, 2, null);

        r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.runtime.MutableState value$delegate> = $r23;

        r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.animation.core.AnimationVector velocityVector> = r3;

        $r24 = staticinvoke <androidx.compose.animation.core.VisibilityThresholdsKt: java.util.Map getVisibilityThresholdMap()>();

        $r25 = r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.animation.core.TwoWayConverter typeConverter>;

        $r26 = interfaceinvoke $r24.<java.util.Map: java.lang.Object get(java.lang.Object)>($r25);

        $r27 = (java.lang.Float) $r26;

        if $r27 == null goto label3;

        $r30 = (java.lang.Number) $r27;

        f0 = virtualinvoke $r30.<java.lang.Number: float floatValue()>();

        $r31 = r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.animation.core.TwoWayConverter typeConverter>;

        $r32 = interfaceinvoke $r31.<androidx.compose.animation.core.TwoWayConverter: kotlin.jvm.functions.Function1 getConvertToVector()>();

        $r33 = interfaceinvoke $r32.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r2);

        r7 = (androidx.compose.animation.core.AnimationVector) $r33;

        i1 = 0;

        i0 = virtualinvoke r7.<androidx.compose.animation.core.AnimationVector: int getSize$animation_core_release()>();

     label1:
        if i1 >= i0 goto label2;

        virtualinvoke r7.<androidx.compose.animation.core.AnimationVector: void set$animation_core_release(int,float)>(i1, f0);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r34 = r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.animation.core.TwoWayConverter typeConverter>;

        $r35 = interfaceinvoke $r34.<androidx.compose.animation.core.TwoWayConverter: kotlin.jvm.functions.Function1 getConvertFromVector()>();

        $r36 = interfaceinvoke $r35.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r7);

        goto label4;

     label3:
        $r36 = null;

     label4:
        r6 = $r36;

        $r28 = staticinvoke <androidx.compose.animation.core.AnimationSpecKt: androidx.compose.animation.core.SpringSpec spring$default(float,float,java.lang.Object,int,java.lang.Object)>(0.0F, 0.0F, r6, 3, null);

        $r29 = (androidx.compose.animation.core.FiniteAnimationSpec) $r28;

        r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.animation.core.FiniteAnimationSpec interruptionSpec> = $r29;

        return;
    }

    public final androidx.compose.animation.core.TwoWayConverter getTypeConverter()
    {
        androidx.compose.animation.core.Transition$TransitionAnimationState r0;
        androidx.compose.animation.core.TwoWayConverter $r1;

        r0 := @this: androidx.compose.animation.core.Transition$TransitionAnimationState;

        $r1 = r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.animation.core.TwoWayConverter typeConverter>;

        return $r1;
    }

    public final java.lang.String getLabel()
    {
        androidx.compose.animation.core.Transition$TransitionAnimationState r0;
        java.lang.String $r1;

        r0 := @this: androidx.compose.animation.core.Transition$TransitionAnimationState;

        $r1 = r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: java.lang.String label>;

        return $r1;
    }

    private final java.lang.Object getTargetValue()
    {
        androidx.compose.animation.core.Transition$TransitionAnimationState r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.compose.animation.core.Transition$TransitionAnimationState;

        $r2 = r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.runtime.MutableState targetValue$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        return $r3;
    }

    private final void setTargetValue(java.lang.Object)
    {
        androidx.compose.animation.core.Transition$TransitionAnimationState r0;
        java.lang.Object r1;
        androidx.compose.runtime.MutableState $r2;

        r0 := @this: androidx.compose.animation.core.Transition$TransitionAnimationState;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.runtime.MutableState targetValue$delegate>;

        interfaceinvoke $r2.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r1);

        return;
    }

    public final androidx.compose.animation.core.FiniteAnimationSpec getAnimationSpec()
    {
        androidx.compose.animation.core.Transition$TransitionAnimationState r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        androidx.compose.animation.core.FiniteAnimationSpec $r4;

        r0 := @this: androidx.compose.animation.core.Transition$TransitionAnimationState;

        $r2 = r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.runtime.MutableState animationSpec$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (androidx.compose.animation.core.FiniteAnimationSpec) $r3;

        return $r4;
    }

    private final void setAnimationSpec(androidx.compose.animation.core.FiniteAnimationSpec)
    {
        androidx.compose.animation.core.Transition$TransitionAnimationState r0;
        androidx.compose.animation.core.FiniteAnimationSpec r1;
        androidx.compose.runtime.MutableState $r2;

        r0 := @this: androidx.compose.animation.core.Transition$TransitionAnimationState;

        r1 := @parameter0: androidx.compose.animation.core.FiniteAnimationSpec;

        $r2 = r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.runtime.MutableState animationSpec$delegate>;

        interfaceinvoke $r2.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r1);

        return;
    }

    public final androidx.compose.animation.core.TargetBasedAnimation getAnimation()
    {
        androidx.compose.animation.core.Transition$TransitionAnimationState r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        androidx.compose.animation.core.TargetBasedAnimation $r4;

        r0 := @this: androidx.compose.animation.core.Transition$TransitionAnimationState;

        $r2 = r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.runtime.MutableState animation$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (androidx.compose.animation.core.TargetBasedAnimation) $r3;

        return $r4;
    }

    private final void setAnimation(androidx.compose.animation.core.TargetBasedAnimation)
    {
        androidx.compose.animation.core.Transition$TransitionAnimationState r0;
        androidx.compose.animation.core.TargetBasedAnimation r1;
        androidx.compose.runtime.MutableState $r2;

        r0 := @this: androidx.compose.animation.core.Transition$TransitionAnimationState;

        r1 := @parameter0: androidx.compose.animation.core.TargetBasedAnimation;

        $r2 = r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.runtime.MutableState animation$delegate>;

        interfaceinvoke $r2.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r1);

        return;
    }

    public final boolean isFinished$animation_core_release()
    {
        androidx.compose.animation.core.Transition$TransitionAnimationState r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        r0 := @this: androidx.compose.animation.core.Transition$TransitionAnimationState;

        $r2 = r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.runtime.MutableState isFinished$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public final void setFinished$animation_core_release(boolean)
    {
        androidx.compose.animation.core.Transition$TransitionAnimationState r0;
        boolean z0;
        androidx.compose.runtime.MutableState $r1;
        java.lang.Boolean r2;

        r0 := @this: androidx.compose.animation.core.Transition$TransitionAnimationState;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.runtime.MutableState isFinished$delegate>;

        r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        interfaceinvoke $r1.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r2);

        return;
    }

    private final long getOffsetTimeNanos()
    {
        androidx.compose.animation.core.Transition$TransitionAnimationState r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        long $l0;

        r0 := @this: androidx.compose.animation.core.Transition$TransitionAnimationState;

        $r2 = r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.runtime.MutableState offsetTimeNanos$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (java.lang.Number) $r3;

        $l0 = virtualinvoke $r4.<java.lang.Number: long longValue()>();

        return $l0;
    }

    private final void setOffsetTimeNanos(long)
    {
        androidx.compose.animation.core.Transition$TransitionAnimationState r0;
        long l0;
        androidx.compose.runtime.MutableState $r1;
        java.lang.Long r2;

        r0 := @this: androidx.compose.animation.core.Transition$TransitionAnimationState;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.runtime.MutableState offsetTimeNanos$delegate>;

        r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        interfaceinvoke $r1.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r2);

        return;
    }

    private final boolean getNeedsReset()
    {
        androidx.compose.animation.core.Transition$TransitionAnimationState r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        r0 := @this: androidx.compose.animation.core.Transition$TransitionAnimationState;

        $r2 = r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.runtime.MutableState needsReset$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    private final void setNeedsReset(boolean)
    {
        androidx.compose.animation.core.Transition$TransitionAnimationState r0;
        boolean z0;
        androidx.compose.runtime.MutableState $r1;
        java.lang.Boolean r2;

        r0 := @this: androidx.compose.animation.core.Transition$TransitionAnimationState;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.runtime.MutableState needsReset$delegate>;

        r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        interfaceinvoke $r1.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r2);

        return;
    }

    public java.lang.Object getValue()
    {
        androidx.compose.animation.core.Transition$TransitionAnimationState r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.compose.animation.core.Transition$TransitionAnimationState;

        $r2 = r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.runtime.MutableState value$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        return $r3;
    }

    public void setValue$animation_core_release(java.lang.Object)
    {
        androidx.compose.animation.core.Transition$TransitionAnimationState r0;
        java.lang.Object r1;
        androidx.compose.runtime.MutableState $r2;

        r0 := @this: androidx.compose.animation.core.Transition$TransitionAnimationState;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.runtime.MutableState value$delegate>;

        interfaceinvoke $r2.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r1);

        return;
    }

    public final long getDurationNanos$animation_core_release()
    {
        androidx.compose.animation.core.Transition$TransitionAnimationState r0;
        androidx.compose.animation.core.TargetBasedAnimation $r1;
        long $l0;

        r0 := @this: androidx.compose.animation.core.Transition$TransitionAnimationState;

        $r1 = virtualinvoke r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.animation.core.TargetBasedAnimation getAnimation()>();

        $l0 = virtualinvoke $r1.<androidx.compose.animation.core.TargetBasedAnimation: long getDurationNanos()>();

        return $l0;
    }

    public final void onPlayTimeChanged$animation_core_release(long, float)
    {
        androidx.compose.animation.core.Transition$TransitionAnimationState r0;
        long l0, l1, $l3, $l4, $l5, $l6;
        float f0, f1, $f2;
        byte $b2;
        androidx.compose.animation.core.TargetBasedAnimation $r1, $r2, $r4, $r6;
        java.lang.Object $r3;
        androidx.compose.animation.core.AnimationVector $r5;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        java.lang.IllegalStateException $r14;
        java.lang.String $r15, $r16;

        r0 := @this: androidx.compose.animation.core.Transition$TransitionAnimationState;

        l0 := @parameter0: long;

        f0 := @parameter1: float;

        $b2 = f0 cmpl 0.0F;

        if $b2 <= 0 goto label4;

        $l3 = specialinvoke r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: long getOffsetTimeNanos()>();

        $l4 = l0 - $l3;

        $f2 = (float) $l4;

        f1 = $f2 / f0;

        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f1);

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        if $z2 != 0 goto label3;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duration scale adjusted time is NaN. Duration scale: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",playTimeNanos: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", offsetTimeNanos: ");

        $l5 = specialinvoke r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: long getOffsetTimeNanos()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = new java.lang.IllegalStateException;

        $r15 = virtualinvoke $r16.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r15);

        throw $r14;

     label3:
        $l6 = (long) f1;

        goto label5;

     label4:
        $r1 = virtualinvoke r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.animation.core.TargetBasedAnimation getAnimation()>();

        $l6 = virtualinvoke $r1.<androidx.compose.animation.core.TargetBasedAnimation: long getDurationNanos()>();

     label5:
        l1 = $l6;

        $r2 = virtualinvoke r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.animation.core.TargetBasedAnimation getAnimation()>();

        $r3 = virtualinvoke $r2.<androidx.compose.animation.core.TargetBasedAnimation: java.lang.Object getValueFromNanos(long)>(l1);

        virtualinvoke r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: void setValue$animation_core_release(java.lang.Object)>($r3);

        $r4 = virtualinvoke r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.animation.core.TargetBasedAnimation getAnimation()>();

        $r5 = virtualinvoke $r4.<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.AnimationVector getVelocityVectorFromNanos(long)>(l1);

        r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.animation.core.AnimationVector velocityVector> = $r5;

        $r6 = virtualinvoke r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.animation.core.TargetBasedAnimation getAnimation()>();

        $z0 = virtualinvoke $r6.<androidx.compose.animation.core.TargetBasedAnimation: boolean isFinishedFromNanos(long)>(l1);

        if $z0 == 0 goto label6;

        virtualinvoke r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: void setFinished$animation_core_release(boolean)>(1);

        specialinvoke r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: void setOffsetTimeNanos(long)>(0L);

     label6:
        return;
    }

    public final void seekTo$animation_core_release(long)
    {
        androidx.compose.animation.core.Transition$TransitionAnimationState r0;
        long l0;
        androidx.compose.animation.core.TargetBasedAnimation $r1, $r3;
        java.lang.Object $r2;
        androidx.compose.animation.core.AnimationVector $r4;

        r0 := @this: androidx.compose.animation.core.Transition$TransitionAnimationState;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.animation.core.TargetBasedAnimation getAnimation()>();

        $r2 = virtualinvoke $r1.<androidx.compose.animation.core.TargetBasedAnimation: java.lang.Object getValueFromNanos(long)>(l0);

        virtualinvoke r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: void setValue$animation_core_release(java.lang.Object)>($r2);

        $r3 = virtualinvoke r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.animation.core.TargetBasedAnimation getAnimation()>();

        $r4 = virtualinvoke $r3.<androidx.compose.animation.core.TargetBasedAnimation: androidx.compose.animation.core.AnimationVector getVelocityVectorFromNanos(long)>(l0);

        r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.animation.core.AnimationVector velocityVector> = $r4;

        return;
    }

    private final void updateAnimation(java.lang.Object, boolean)
    {
        androidx.compose.animation.core.Transition$TransitionAnimationState r0;
        java.lang.Object r1, $r8;
        boolean z0, $z1;
        androidx.compose.animation.core.FiniteAnimationSpec r2, $r3, $r4;
        androidx.compose.animation.core.TargetBasedAnimation $r5;
        androidx.compose.animation.core.AnimationSpec $r6;
        androidx.compose.animation.core.TwoWayConverter $r7;
        androidx.compose.animation.core.AnimationVector $r9;
        androidx.compose.animation.core.Transition $r10;

        r0 := @this: androidx.compose.animation.core.Transition$TransitionAnimationState;

        r1 := @parameter0: java.lang.Object;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label2;

        $r3 = virtualinvoke r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.animation.core.FiniteAnimationSpec getAnimationSpec()>();

        $z1 = $r3 instanceof androidx.compose.animation.core.SpringSpec;

        if $z1 == 0 goto label1;

        $r4 = virtualinvoke r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.animation.core.FiniteAnimationSpec getAnimationSpec()>();

        goto label3;

     label1:
        $r4 = r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.animation.core.FiniteAnimationSpec interruptionSpec>;

        goto label3;

     label2:
        $r4 = virtualinvoke r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.animation.core.FiniteAnimationSpec getAnimationSpec()>();

     label3:
        r2 = $r4;

        $r5 = new androidx.compose.animation.core.TargetBasedAnimation;

        $r6 = (androidx.compose.animation.core.AnimationSpec) r2;

        $r7 = r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.animation.core.TwoWayConverter typeConverter>;

        $r8 = specialinvoke r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: java.lang.Object getTargetValue()>();

        $r9 = r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.animation.core.AnimationVector velocityVector>;

        specialinvoke $r5.<androidx.compose.animation.core.TargetBasedAnimation: void <init>(androidx.compose.animation.core.AnimationSpec,androidx.compose.animation.core.TwoWayConverter,java.lang.Object,java.lang.Object,androidx.compose.animation.core.AnimationVector)>($r6, $r7, r1, $r8, $r9);

        specialinvoke r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: void setAnimation(androidx.compose.animation.core.TargetBasedAnimation)>($r5);

        $r10 = r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.animation.core.Transition this$0>;

        staticinvoke <androidx.compose.animation.core.Transition: void access$onChildAnimationUpdated(androidx.compose.animation.core.Transition)>($r10);

        return;
    }

    static void updateAnimation$default(androidx.compose.animation.core.Transition$TransitionAnimationState, java.lang.Object, boolean, int, java.lang.Object)
    {
        androidx.compose.animation.core.Transition$TransitionAnimationState r0;
        int i0, $i1, $i2;
        java.lang.Object r1, r2;
        boolean z0;

        r0 := @parameter0: androidx.compose.animation.core.Transition$TransitionAnimationState;

        r2 := @parameter1: java.lang.Object;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r2 = virtualinvoke r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: java.lang.Object getValue()>();

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        z0 = 0;

     label2:
        specialinvoke r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: void updateAnimation(java.lang.Object,boolean)>(r2, z0);

        return;
    }

    public final void resetAnimation$animation_core_release()
    {
        androidx.compose.animation.core.Transition$TransitionAnimationState r0;

        r0 := @this: androidx.compose.animation.core.Transition$TransitionAnimationState;

        specialinvoke r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: void setNeedsReset(boolean)>(1);

        return;
    }

    public final void updateTargetValue$animation_core_release(java.lang.Object, androidx.compose.animation.core.FiniteAnimationSpec)
    {
        androidx.compose.animation.core.Transition$TransitionAnimationState r0;
        java.lang.Object r1, $r3;
        androidx.compose.animation.core.FiniteAnimationSpec r2;
        boolean $z0, $z1, $z2, $z3;
        androidx.compose.animation.core.Transition $r4;
        long $l0;

        r0 := @this: androidx.compose.animation.core.Transition$TransitionAnimationState;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: androidx.compose.animation.core.FiniteAnimationSpec;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "animationSpec");

        $r3 = specialinvoke r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: java.lang.Object getTargetValue()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r3, r1);

        if $z0 == 0 goto label1;

        $z2 = specialinvoke r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: boolean getNeedsReset()>();

        if $z2 == 0 goto label4;

     label1:
        specialinvoke r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: void setTargetValue(java.lang.Object)>(r1);

        specialinvoke r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: void setAnimationSpec(androidx.compose.animation.core.FiniteAnimationSpec)>(r2);

        $z1 = virtualinvoke r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: boolean isFinished$animation_core_release()>();

        if $z1 != 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        staticinvoke <androidx.compose.animation.core.Transition$TransitionAnimationState: void updateAnimation$default(androidx.compose.animation.core.Transition$TransitionAnimationState,java.lang.Object,boolean,int,java.lang.Object)>(r0, null, $z3, 1, null);

        virtualinvoke r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: void setFinished$animation_core_release(boolean)>(0);

        $r4 = r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.animation.core.Transition this$0>;

        $l0 = virtualinvoke $r4.<androidx.compose.animation.core.Transition: long getPlayTimeNanos()>();

        specialinvoke r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: void setOffsetTimeNanos(long)>($l0);

        specialinvoke r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: void setNeedsReset(boolean)>(0);

     label4:
        return;
    }

    public final void updateInitialAndTargetValue$animation_core_release(java.lang.Object, java.lang.Object, androidx.compose.animation.core.FiniteAnimationSpec)
    {
        androidx.compose.animation.core.Transition$TransitionAnimationState r0;
        java.lang.Object r1, r2, $r5, $r7;
        androidx.compose.animation.core.FiniteAnimationSpec r3;
        androidx.compose.animation.core.TargetBasedAnimation $r4, $r6;
        boolean $z0, $z1;

        r0 := @this: androidx.compose.animation.core.Transition$TransitionAnimationState;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: androidx.compose.animation.core.FiniteAnimationSpec;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "animationSpec");

        specialinvoke r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: void setTargetValue(java.lang.Object)>(r2);

        specialinvoke r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: void setAnimationSpec(androidx.compose.animation.core.FiniteAnimationSpec)>(r3);

        $r4 = virtualinvoke r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.animation.core.TargetBasedAnimation getAnimation()>();

        $r5 = virtualinvoke $r4.<androidx.compose.animation.core.TargetBasedAnimation: java.lang.Object getInitialValue()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, r1);

        if $z0 == 0 goto label1;

        $r6 = virtualinvoke r0.<androidx.compose.animation.core.Transition$TransitionAnimationState: androidx.compose.animation.core.TargetBasedAnimation getAnimation()>();

        $r7 = virtualinvoke $r6.<androidx.compose.animation.core.TargetBasedAnimation: java.lang.Object getTargetValue()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, r2);

        if $z1 == 0 goto label1;

        return;

     label1:
        staticinvoke <androidx.compose.animation.core.Transition$TransitionAnimationState: void updateAnimation$default(androidx.compose.animation.core.Transition$TransitionAnimationState,java.lang.Object,boolean,int,java.lang.Object)>(r0, r1, 0, 2, null);

        return;
    }

androidx.compose.animation.core.Transition$updateTarget$2
<androidx.compose.animation.core.Transition$updateTarget$2: androidx.compose.animation.core.Transition $tmp0_rcvr>
<androidx.compose.animation.core.Transition$updateTarget$2: java.lang.Object $targetState>
<androidx.compose.animation.core.Transition$updateTarget$2: int $$changed>
    void <init>(androidx.compose.animation.core.Transition, java.lang.Object, int)
    {
        androidx.compose.animation.core.Transition$updateTarget$2 r0;
        androidx.compose.animation.core.Transition $r1;
        java.lang.Object $r2;
        int $i0;

        r0 := @this: androidx.compose.animation.core.Transition$updateTarget$2;

        $r1 := @parameter0: androidx.compose.animation.core.Transition;

        $r2 := @parameter1: java.lang.Object;

        $i0 := @parameter2: int;

        r0.<androidx.compose.animation.core.Transition$updateTarget$2: androidx.compose.animation.core.Transition $tmp0_rcvr> = $r1;

        r0.<androidx.compose.animation.core.Transition$updateTarget$2: java.lang.Object $targetState> = $r2;

        r0.<androidx.compose.animation.core.Transition$updateTarget$2: int $$changed> = $i0;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public final void invoke(androidx.compose.runtime.Composer, int)
    {
        androidx.compose.animation.core.Transition$updateTarget$2 r0;
        androidx.compose.runtime.Composer $r1;
        int $i0, $i1, $i2;
        java.lang.Object $r2;
        androidx.compose.animation.core.Transition $r3;

        r0 := @this: androidx.compose.animation.core.Transition$updateTarget$2;

        $r1 := @parameter0: androidx.compose.runtime.Composer;

        $i0 := @parameter1: int;

        $r3 = r0.<androidx.compose.animation.core.Transition$updateTarget$2: androidx.compose.animation.core.Transition $tmp0_rcvr>;

        $r2 = r0.<androidx.compose.animation.core.Transition$updateTarget$2: java.lang.Object $targetState>;

        $i1 = r0.<androidx.compose.animation.core.Transition$updateTarget$2: int $$changed>;

        $i2 = $i1 | 1;

        virtualinvoke $r3.<androidx.compose.animation.core.Transition: void updateTarget$animation_core_release(java.lang.Object,androidx.compose.runtime.Composer,int)>($r2, $r1, $i2);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.animation.core.Transition$updateTarget$2 r0;
        java.lang.Object r1, r2;
        java.lang.Number $r3;
        androidx.compose.runtime.Composer $r4;
        int $i0;
        kotlin.Unit $r5;

        r0 := @this: androidx.compose.animation.core.Transition$updateTarget$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.compose.runtime.Composer) r1;

        $r3 = (java.lang.Number) r2;

        $i0 = virtualinvoke $r3.<java.lang.Number: int intValue()>();

        virtualinvoke r0.<androidx.compose.animation.core.Transition$updateTarget$2: void invoke(androidx.compose.runtime.Composer,int)>($r4, $i0);

        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r5;
    }

