kotlinx.coroutines.scheduling.Task
<kotlinx.coroutines.scheduling.Task: long submissionTime>
<kotlinx.coroutines.scheduling.Task: kotlinx.coroutines.scheduling.TaskContext taskContext>
    public void <init>()
    {
        kotlinx.coroutines.scheduling.Task $r0;
        kotlinx.coroutines.scheduling.TaskContext $r1;

        $r0 := @this: kotlinx.coroutines.scheduling.Task;

        $r1 = <kotlinx.coroutines.scheduling.TasksKt: kotlinx.coroutines.scheduling.TaskContext NonBlockingContext>;

        specialinvoke $r0.<kotlinx.coroutines.scheduling.Task: void <init>(long,kotlinx.coroutines.scheduling.TaskContext)>(0L, $r1);

        return;
    }

    public void <init>(long, kotlinx.coroutines.scheduling.TaskContext)
    {
        kotlinx.coroutines.scheduling.Task $r0;
        long $l0;
        kotlinx.coroutines.scheduling.TaskContext $r1;

        $r0 := @this: kotlinx.coroutines.scheduling.Task;

        $l0 := @parameter0: long;

        $r1 := @parameter1: kotlinx.coroutines.scheduling.TaskContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "taskContext");

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<kotlinx.coroutines.scheduling.Task: long submissionTime> = $l0;

        $r0.<kotlinx.coroutines.scheduling.Task: kotlinx.coroutines.scheduling.TaskContext taskContext> = $r1;

        return;
    }

