androidx.camera.camera2.internal.Camera2CameraFactory
<androidx.camera.camera2.internal.Camera2CameraFactory: java.lang.String TAG>
<androidx.camera.camera2.internal.Camera2CameraFactory: int DEFAULT_ALLOWED_CONCURRENT_OPEN_CAMERAS>
<androidx.camera.camera2.internal.Camera2CameraFactory: androidx.camera.core.impl.CameraThreadConfig mThreadConfig>
<androidx.camera.camera2.internal.Camera2CameraFactory: androidx.camera.core.impl.CameraStateRegistry mCameraStateRegistry>
<androidx.camera.camera2.internal.Camera2CameraFactory: androidx.camera.camera2.internal.compat.CameraManagerCompat mCameraManager>
<androidx.camera.camera2.internal.Camera2CameraFactory: java.util.List mAvailableCameraIds>
<androidx.camera.camera2.internal.Camera2CameraFactory: androidx.camera.camera2.internal.DisplayInfoManager mDisplayInfoManager>
<androidx.camera.camera2.internal.Camera2CameraFactory: java.util.Map mCameraInfos>
    public void <init>(android.content.Context, androidx.camera.core.impl.CameraThreadConfig, androidx.camera.core.CameraSelector) throws androidx.camera.core.InitializationException
    {
        androidx.camera.camera2.internal.Camera2CameraFactory r0;
        android.content.Context r1;
        androidx.camera.core.impl.CameraThreadConfig r2, $r7;
        androidx.camera.core.CameraSelector r3;
        java.util.List r4, $r11;
        java.util.HashMap $r5;
        androidx.camera.core.impl.CameraStateRegistry $r6;
        android.os.Handler $r8;
        androidx.camera.camera2.internal.compat.CameraManagerCompat $r9;
        androidx.camera.camera2.internal.DisplayInfoManager $r10;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraFactory;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.camera.core.impl.CameraThreadConfig;

        r3 := @parameter2: androidx.camera.core.CameraSelector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<androidx.camera.camera2.internal.Camera2CameraFactory: java.util.Map mCameraInfos> = $r5;

        r0.<androidx.camera.camera2.internal.Camera2CameraFactory: androidx.camera.core.impl.CameraThreadConfig mThreadConfig> = r2;

        $r6 = new androidx.camera.core.impl.CameraStateRegistry;

        specialinvoke $r6.<androidx.camera.core.impl.CameraStateRegistry: void <init>(int)>(1);

        r0.<androidx.camera.camera2.internal.Camera2CameraFactory: androidx.camera.core.impl.CameraStateRegistry mCameraStateRegistry> = $r6;

        $r7 = r0.<androidx.camera.camera2.internal.Camera2CameraFactory: androidx.camera.core.impl.CameraThreadConfig mThreadConfig>;

        $r8 = virtualinvoke $r7.<androidx.camera.core.impl.CameraThreadConfig: android.os.Handler getSchedulerHandler()>();

        $r9 = staticinvoke <androidx.camera.camera2.internal.compat.CameraManagerCompat: androidx.camera.camera2.internal.compat.CameraManagerCompat 'from'(android.content.Context,android.os.Handler)>(r1, $r8);

        r0.<androidx.camera.camera2.internal.Camera2CameraFactory: androidx.camera.camera2.internal.compat.CameraManagerCompat mCameraManager> = $r9;

        $r10 = staticinvoke <androidx.camera.camera2.internal.DisplayInfoManager: androidx.camera.camera2.internal.DisplayInfoManager getInstance(android.content.Context)>(r1);

        r0.<androidx.camera.camera2.internal.Camera2CameraFactory: androidx.camera.camera2.internal.DisplayInfoManager mDisplayInfoManager> = $r10;

        r4 = staticinvoke <androidx.camera.camera2.internal.CameraSelectionOptimizer: java.util.List getSelectedAvailableCameraIds(androidx.camera.camera2.internal.Camera2CameraFactory,androidx.camera.core.CameraSelector)>(r0, r3);

        $r11 = specialinvoke r0.<androidx.camera.camera2.internal.Camera2CameraFactory: java.util.List getBackwardCompatibleCameraIds(java.util.List)>(r4);

        r0.<androidx.camera.camera2.internal.Camera2CameraFactory: java.util.List mAvailableCameraIds> = $r11;

        return;
    }

    public androidx.camera.core.impl.CameraInternal getCamera(java.lang.String) throws androidx.camera.core.CameraUnavailableException
    {
        androidx.camera.camera2.internal.Camera2CameraFactory r0;
        java.lang.String r1;
        java.util.List $r2;
        boolean $z0;
        androidx.camera.camera2.internal.Camera2CameraImpl $r3;
        androidx.camera.camera2.internal.compat.CameraManagerCompat $r4;
        androidx.camera.camera2.internal.Camera2CameraInfoImpl $r5;
        androidx.camera.core.impl.CameraThreadConfig $r6, $r9;
        androidx.camera.core.impl.CameraStateRegistry $r7;
        java.util.concurrent.Executor $r8;
        android.os.Handler $r10;
        androidx.camera.camera2.internal.DisplayInfoManager $r11;
        java.lang.IllegalArgumentException $r12;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.camera.camera2.internal.Camera2CameraFactory: java.util.List mAvailableCameraIds>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The given camera id is not on the available camera id list.");

        throw $r12;

     label1:
        $r3 = new androidx.camera.camera2.internal.Camera2CameraImpl;

        $r4 = r0.<androidx.camera.camera2.internal.Camera2CameraFactory: androidx.camera.camera2.internal.compat.CameraManagerCompat mCameraManager>;

        $r5 = virtualinvoke r0.<androidx.camera.camera2.internal.Camera2CameraFactory: androidx.camera.camera2.internal.Camera2CameraInfoImpl getCameraInfo(java.lang.String)>(r1);

        $r7 = r0.<androidx.camera.camera2.internal.Camera2CameraFactory: androidx.camera.core.impl.CameraStateRegistry mCameraStateRegistry>;

        $r6 = r0.<androidx.camera.camera2.internal.Camera2CameraFactory: androidx.camera.core.impl.CameraThreadConfig mThreadConfig>;

        $r8 = virtualinvoke $r6.<androidx.camera.core.impl.CameraThreadConfig: java.util.concurrent.Executor getCameraExecutor()>();

        $r9 = r0.<androidx.camera.camera2.internal.Camera2CameraFactory: androidx.camera.core.impl.CameraThreadConfig mThreadConfig>;

        $r10 = virtualinvoke $r9.<androidx.camera.core.impl.CameraThreadConfig: android.os.Handler getSchedulerHandler()>();

        $r11 = r0.<androidx.camera.camera2.internal.Camera2CameraFactory: androidx.camera.camera2.internal.DisplayInfoManager mDisplayInfoManager>;

        specialinvoke $r3.<androidx.camera.camera2.internal.Camera2CameraImpl: void <init>(androidx.camera.camera2.internal.compat.CameraManagerCompat,java.lang.String,androidx.camera.camera2.internal.Camera2CameraInfoImpl,androidx.camera.core.impl.CameraStateRegistry,java.util.concurrent.Executor,android.os.Handler,androidx.camera.camera2.internal.DisplayInfoManager)>($r4, r1, $r5, $r7, $r8, $r10, $r11);

        return $r3;
    }

    androidx.camera.camera2.internal.Camera2CameraInfoImpl getCameraInfo(java.lang.String) throws androidx.camera.core.CameraUnavailableException
    {
        androidx.camera.camera2.internal.Camera2CameraFactory r0;
        java.lang.String r1;
        java.util.Map $r2, $r6;
        java.lang.Object $r3;
        androidx.camera.camera2.internal.Camera2CameraInfoImpl $r4, r8;
        androidx.camera.camera2.internal.compat.CameraManagerCompat $r5;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.camera.camera2.internal.Camera2CameraFactory: java.util.Map mCameraInfos>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r8 = (androidx.camera.camera2.internal.Camera2CameraInfoImpl) $r3;

        if r8 != null goto label1;

        $r4 = new androidx.camera.camera2.internal.Camera2CameraInfoImpl;

        $r5 = r0.<androidx.camera.camera2.internal.Camera2CameraFactory: androidx.camera.camera2.internal.compat.CameraManagerCompat mCameraManager>;

        specialinvoke $r4.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: void <init>(java.lang.String,androidx.camera.camera2.internal.compat.CameraManagerCompat)>(r1, $r5);

        r8 = $r4;

        $r6 = r0.<androidx.camera.camera2.internal.Camera2CameraFactory: java.util.Map mCameraInfos>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r8);

     label1:
        return r8;
    }

    public java.util.Set getAvailableCameraIds()
    {
        androidx.camera.camera2.internal.Camera2CameraFactory r0;
        java.util.LinkedHashSet $r1;
        java.util.List $r2;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraFactory;

        $r1 = new java.util.LinkedHashSet;

        $r2 = r0.<androidx.camera.camera2.internal.Camera2CameraFactory: java.util.List mAvailableCameraIds>;

        specialinvoke $r1.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r2);

        return $r1;
    }

    public androidx.camera.camera2.internal.compat.CameraManagerCompat getCameraManager()
    {
        androidx.camera.camera2.internal.Camera2CameraFactory r0;
        androidx.camera.camera2.internal.compat.CameraManagerCompat $r1;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraFactory;

        $r1 = r0.<androidx.camera.camera2.internal.Camera2CameraFactory: androidx.camera.camera2.internal.compat.CameraManagerCompat mCameraManager>;

        return $r1;
    }

    private java.util.List getBackwardCompatibleCameraIds(java.util.List) throws androidx.camera.core.InitializationException
    {
        androidx.camera.camera2.internal.Camera2CameraFactory r0;
        java.util.List r1;
        java.util.ArrayList r2, $r5;
        java.util.Iterator r3;
        java.lang.String r4, $r11;
        java.lang.Object $r6;
        boolean $z0, $z2, $z3, $z5;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraFactory;

        r1 := @parameter0: java.util.List;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r2 = $r5;

        r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z5 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label6;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r6;

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("0");

        if $z0 != 0 goto label2;

        $z2 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("1");

        if $z2 == 0 goto label3;

     label2:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r4);

        goto label1;

     label3:
        $z3 = specialinvoke r0.<androidx.camera.camera2.internal.Camera2CameraFactory: boolean isBackwardCompatible(java.lang.String)>(r4);

        if $z3 == 0 goto label4;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r4);

        goto label5;

     label4:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Camera ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is filtered out because its capabilities do not contain REQUEST_AVAILABLE_CAPABILITIES_BACKWARD_COMPATIBLE.");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("Camera2CameraFactory", $r11);

     label5:
        goto label1;

     label6:
        return r2;
    }

    private boolean isBackwardCompatible(java.lang.String) throws androidx.camera.core.InitializationException
    {
        androidx.camera.camera2.internal.Camera2CameraFactory r0;
        java.lang.String r1, $r4, $r5;
        int[] r2, r3;
        int i0, i1, i2;
        boolean $z0;
        androidx.camera.camera2.internal.compat.CameraManagerCompat $r6;
        androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat $r7;
        android.hardware.camera2.CameraCharacteristics$Key $r8;
        java.lang.Object $r9;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraFactory;

        r1 := @parameter0: java.lang.String;

        $r5 = "robolectric";

        $r4 = <android.os.Build: java.lang.String FINGERPRINT>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r6 = r0.<androidx.camera.camera2.internal.Camera2CameraFactory: androidx.camera.camera2.internal.compat.CameraManagerCompat mCameraManager>;

        $r7 = virtualinvoke $r6.<androidx.camera.camera2.internal.compat.CameraManagerCompat: androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat getCameraCharacteristicsCompat(java.lang.String)>(r1);

        $r8 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_AVAILABLE_CAPABILITIES>;

        $r9 = virtualinvoke $r7.<androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r8);

        r2 = (int[]) $r9;

        goto label2;

     label2:
        if r2 == null goto label5;

        r3 = r2;

        i0 = lengthof r3;

        i2 = 0;

     label3:
        if i2 >= i0 goto label5;

        i1 = r3[i2];

        if i1 != 0 goto label4;

        return 1;

     label4:
        i2 = i2 + 1;

        goto label3;

     label5:
        return 0;
    }

    public volatile java.lang.Object getCameraManager()
    {
        androidx.camera.camera2.internal.Camera2CameraFactory r0;
        androidx.camera.camera2.internal.compat.CameraManagerCompat $r1;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraFactory;

        $r1 = virtualinvoke r0.<androidx.camera.camera2.internal.Camera2CameraFactory: androidx.camera.camera2.internal.compat.CameraManagerCompat getCameraManager()>();

        return $r1;
    }

