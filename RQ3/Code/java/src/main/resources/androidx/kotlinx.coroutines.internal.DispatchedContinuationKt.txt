kotlinx.coroutines.internal.DispatchedContinuationKt
<kotlinx.coroutines.internal.DispatchedContinuationKt: kotlinx.coroutines.internal.Symbol REUSABLE_CLAIMED>
<kotlinx.coroutines.internal.DispatchedContinuationKt: kotlinx.coroutines.internal.Symbol UNDEFINED>
    static void <clinit>()
    {
        kotlinx.coroutines.internal.Symbol $r0;

        $r0 = new kotlinx.coroutines.internal.Symbol;

        specialinvoke $r0.<kotlinx.coroutines.internal.Symbol: void <init>(java.lang.String)>("UNDEFINED");

        <kotlinx.coroutines.internal.DispatchedContinuationKt: kotlinx.coroutines.internal.Symbol UNDEFINED> = $r0;

        $r0 = new kotlinx.coroutines.internal.Symbol;

        specialinvoke $r0.<kotlinx.coroutines.internal.Symbol: void <init>(java.lang.String)>("REUSABLE_CLAIMED");

        <kotlinx.coroutines.internal.DispatchedContinuationKt: kotlinx.coroutines.internal.Symbol REUSABLE_CLAIMED> = $r0;

        return;
    }

    public static final kotlinx.coroutines.internal.Symbol access$getUNDEFINED$p()
    {
        kotlinx.coroutines.internal.Symbol r0;

        r0 = <kotlinx.coroutines.internal.DispatchedContinuationKt: kotlinx.coroutines.internal.Symbol UNDEFINED>;

        return r0;
    }

    public static final void resumeCancellableWith(kotlin.coroutines.Continuation, java.lang.Object, kotlin.jvm.functions.Function1)
    {
        kotlin.coroutines.Continuation $r0;
        java.lang.Object $r1, $r4;
        kotlin.jvm.functions.Function1 $r2;
        boolean $z0;
        kotlinx.coroutines.internal.DispatchedContinuation $r3;
        kotlinx.coroutines.CoroutineDispatcher $r5;
        kotlin.coroutines.CoroutineContext $r6;
        kotlinx.coroutines.ThreadLocalEventLoop $r7;
        kotlinx.coroutines.EventLoop $r8;
        kotlinx.coroutines.Job$Key $r9;
        kotlin.coroutines.CoroutineContext$Element $r10;
        kotlinx.coroutines.Job $r11;
        java.util.concurrent.CancellationException $r12;
        kotlin.Result$Companion $r13;
        kotlinx.coroutines.internal.Symbol $r14;
        kotlinx.coroutines.UndispatchedCoroutine $r15;
        kotlin.Unit $r16;
        java.lang.Throwable $r17, $r18, $r19;

        $r0 := @parameter0: kotlin.coroutines.Continuation;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0 instanceof kotlinx.coroutines.internal.DispatchedContinuation;

        if $z0 == 0 goto label37;

        $r3 = (kotlinx.coroutines.internal.DispatchedContinuation) $r0;

        $r4 = staticinvoke <kotlinx.coroutines.CompletionStateKt: java.lang.Object toState(java.lang.Object,kotlin.jvm.functions.Function1)>($r1, $r2);

        $r5 = $r3.<kotlinx.coroutines.internal.DispatchedContinuation: kotlinx.coroutines.CoroutineDispatcher dispatcher>;

        $r6 = virtualinvoke $r3.<kotlinx.coroutines.internal.DispatchedContinuation: kotlin.coroutines.CoroutineContext getContext()>();

        $z0 = virtualinvoke $r5.<kotlinx.coroutines.CoroutineDispatcher: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)>($r6);

        if $z0 == 0 goto label01;

        $r3.<kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _state> = $r4;

        $r3.<kotlinx.coroutines.internal.DispatchedContinuation: int resumeMode> = 1;

        $r5 = $r3.<kotlinx.coroutines.internal.DispatchedContinuation: kotlinx.coroutines.CoroutineDispatcher dispatcher>;

        $r6 = virtualinvoke $r3.<kotlinx.coroutines.internal.DispatchedContinuation: kotlin.coroutines.CoroutineContext getContext()>();

        virtualinvoke $r5.<kotlinx.coroutines.CoroutineDispatcher: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)>($r6, $r3);

        return;

     label01:
        staticinvoke <kotlinx.coroutines.DebugKt: boolean getASSERTIONS_ENABLED()>();

        $r7 = <kotlinx.coroutines.ThreadLocalEventLoop: kotlinx.coroutines.ThreadLocalEventLoop INSTANCE>;

        $r8 = virtualinvoke $r7.<kotlinx.coroutines.ThreadLocalEventLoop: kotlinx.coroutines.EventLoop getEventLoop$third_party_kotlin_kotlinx_coroutines_kotlinx_coroutines()>();

        $z0 = virtualinvoke $r8.<kotlinx.coroutines.EventLoop: boolean isUnconfinedLoopActive()>();

        if $z0 == 0 goto label02;

        $r3.<kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _state> = $r4;

        $r3.<kotlinx.coroutines.internal.DispatchedContinuation: int resumeMode> = 1;

        virtualinvoke $r8.<kotlinx.coroutines.EventLoop: void dispatchUnconfined(kotlinx.coroutines.DispatchedTask)>($r3);

        return;

     label02:
        virtualinvoke $r8.<kotlinx.coroutines.EventLoop: void incrementUseCount(boolean)>(1);

     label03:
        $r6 = virtualinvoke $r3.<kotlinx.coroutines.internal.DispatchedContinuation: kotlin.coroutines.CoroutineContext getContext()>();

     label04:
        $r9 = <kotlinx.coroutines.Job: kotlinx.coroutines.Job$Key Key>;

     label05:
        $r10 = interfaceinvoke $r6.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)>($r9);

     label06:
        $r11 = (kotlinx.coroutines.Job) $r10;

        if $r11 == null goto label13;

     label07:
        $z0 = interfaceinvoke $r11.<kotlinx.coroutines.Job: boolean isActive()>();

     label08:
        if $z0 != 0 goto label13;

     label09:
        $r12 = interfaceinvoke $r11.<kotlinx.coroutines.Job: java.util.concurrent.CancellationException getCancellationException()>();

        virtualinvoke $r3.<kotlinx.coroutines.internal.DispatchedContinuation: void cancelCompletedResult$third_party_kotlin_kotlinx_coroutines_kotlinx_coroutines(java.lang.Object,java.lang.Throwable)>($r4, $r12);

     label10:
        $r13 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r4 = staticinvoke <kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)>($r12);

        $r4 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r4);

     label11:
        interfaceinvoke $r3.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r4);

     label12:
        $z0 = 1;

        goto label14;

     label13:
        $z0 = 0;

     label14:
        if $z0 == 0 goto label15;

        goto label25;

     label15:
        $r0 = $r3.<kotlinx.coroutines.internal.DispatchedContinuation: kotlin.coroutines.Continuation continuation>;

        $r4 = $r3.<kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object countOrElement>;

     label16:
        $r6 = interfaceinvoke $r0.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

     label17:
        $r4 = staticinvoke <kotlinx.coroutines.internal.ThreadContextKt: java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)>($r6, $r4);

        $r14 = <kotlinx.coroutines.internal.ThreadContextKt: kotlinx.coroutines.internal.Symbol NO_THREAD_ELEMENTS>;

        if $r4 == $r14 goto label18;

        $r15 = staticinvoke <kotlinx.coroutines.CoroutineContextKt: kotlinx.coroutines.UndispatchedCoroutine updateUndispatchedCompletion(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,java.lang.Object)>($r0, $r6, $r4);

        goto label19;

     label18:
        $r15 = null;

     label19:
        $r0 = $r3.<kotlinx.coroutines.internal.DispatchedContinuation: kotlin.coroutines.Continuation continuation>;

     label20:
        interfaceinvoke $r0.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r1);

     label21:
        $r16 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        if $r15 == null goto label24;

     label22:
        $z0 = virtualinvoke $r15.<kotlinx.coroutines.UndispatchedCoroutine: boolean clearThreadContext()>();

     label23:
        if $z0 == 0 goto label25;

     label24:
        staticinvoke <kotlinx.coroutines.internal.ThreadContextKt: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)>($r6, $r4);

     label25:
        $z0 = virtualinvoke $r8.<kotlinx.coroutines.EventLoop: boolean processUnconfinedEvent()>();

     label26:
        if $z0 != 0 goto label25;

     label27:
        virtualinvoke $r8.<kotlinx.coroutines.EventLoop: void decrementUseCount(boolean)>(1);

        return;

     label28:
        $r17 := @caughtexception;

        if $r15 == null goto label31;

     label29:
        $z0 = virtualinvoke $r15.<kotlinx.coroutines.UndispatchedCoroutine: boolean clearThreadContext()>();

     label30:
        if $z0 == 0 goto label32;

     label31:
        staticinvoke <kotlinx.coroutines.internal.ThreadContextKt: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)>($r6, $r4);

     label32:
        throw $r17;

     label33:
        $r18 := @caughtexception;

     label34:
        virtualinvoke $r3.<kotlinx.coroutines.DispatchedTask: void handleFatalException(java.lang.Throwable,java.lang.Throwable)>($r18, null);

     label35:
        goto label27;

     label36:
        $r19 := @caughtexception;

        virtualinvoke $r8.<kotlinx.coroutines.EventLoop: void decrementUseCount(boolean)>(1);

        throw $r19;

     label37:
        interfaceinvoke $r0.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r1);

        return;

        catch java.lang.Throwable from label03 to label04 with label33;
        catch java.lang.Throwable from label05 to label06 with label33;
        catch java.lang.Throwable from label07 to label08 with label33;
        catch java.lang.Throwable from label09 to label10 with label33;
        catch java.lang.Throwable from label11 to label12 with label33;
        catch java.lang.Throwable from label16 to label17 with label33;
        catch java.lang.Throwable from label20 to label21 with label28;
        catch java.lang.Throwable from label22 to label23 with label33;
        catch java.lang.Throwable from label25 to label26 with label33;
        catch java.lang.Throwable from label29 to label30 with label33;
        catch java.lang.Throwable from label32 to label33 with label33;
        catch java.lang.Throwable from label34 to label35 with label36;
    }

    public static void resumeCancellableWith$default(kotlin.coroutines.Continuation, java.lang.Object, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        kotlin.coroutines.Continuation $r0;
        java.lang.Object $r1, $r2;
        kotlin.jvm.functions.Function1 $r3;
        int $i0;

        $r0 := @parameter0: kotlin.coroutines.Continuation;

        $r1 := @parameter1: java.lang.Object;

        $r3 := @parameter2: kotlin.jvm.functions.Function1;

        $i0 := @parameter3: int;

        $r2 := @parameter4: java.lang.Object;

        $i0 = $i0 & 2;

        if $i0 == 0 goto label1;

        $r3 = null;

     label1:
        staticinvoke <kotlinx.coroutines.internal.DispatchedContinuationKt: void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1)>($r0, $r1, $r3);

        return;
    }

