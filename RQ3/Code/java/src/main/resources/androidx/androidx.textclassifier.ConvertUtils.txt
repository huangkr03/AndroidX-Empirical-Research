androidx.textclassifier.ConvertUtils
    private void <init>()
    {
        androidx.textclassifier.ConvertUtils r0;

        r0 := @this: androidx.textclassifier.ConvertUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static android.os.LocaleList unwrapLocalListCompat(androidx.core.os.LocaleListCompat)
    {
        androidx.core.os.LocaleListCompat r0;
        java.lang.Object $r1;
        android.os.LocaleList $r2;

        r0 := @parameter0: androidx.core.os.LocaleListCompat;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<androidx.core.os.LocaleListCompat: java.lang.Object unwrap()>();

        $r2 = (android.os.LocaleList) $r1;

        return $r2;
    }

    static androidx.core.os.LocaleListCompat wrapLocalList(android.os.LocaleList)
    {
        android.os.LocaleList r0;
        androidx.core.os.LocaleListCompat $r1;

        r0 := @parameter0: android.os.LocaleList;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = staticinvoke <androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat wrap(android.os.LocaleList)>(r0);

        return $r1;
    }

    static android.view.textclassifier.TextClassifier$EntityConfig toPlatformEntityConfig(androidx.textclassifier.TextClassifier$EntityConfig)
    {
        androidx.textclassifier.TextClassifier$EntityConfig r0;
        android.view.textclassifier.TextClassifier$EntityConfig $r1;

        r0 := @parameter0: androidx.textclassifier.TextClassifier$EntityConfig;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<androidx.textclassifier.TextClassifier$EntityConfig: android.view.textclassifier.TextClassifier$EntityConfig toPlatform()>();

        return $r1;
    }

    static java.time.ZonedDateTime createZonedDateTimeFromUtc(java.lang.Long)
    {
        java.lang.Long r0;
        long $l0;
        java.time.Instant $r1;
        java.time.ZoneOffset $r2;
        java.time.ZonedDateTime $r3;

        r0 := @parameter0: java.lang.Long;

        if r0 != null goto label1;

        return null;

     label1:
        $l0 = virtualinvoke r0.<java.lang.Long: long longValue()>();

        $r1 = staticinvoke <java.time.Instant: java.time.Instant ofEpochMilli(long)>($l0);

        $r2 = <java.time.ZoneOffset: java.time.ZoneOffset UTC>;

        $r3 = staticinvoke <java.time.ZonedDateTime: java.time.ZonedDateTime ofInstant(java.time.Instant,java.time.ZoneId)>($r1, $r2);

        return $r3;
    }

    static java.util.Map createFloatMapFromTextLinks(android.view.textclassifier.TextLinks$TextLink)
    {
        android.view.textclassifier.TextLinks$TextLink r0;
        int i0, i1;
        androidx.collection.ArrayMap r1, $r4;
        java.lang.String r2;
        float $f0;
        java.lang.Float $r5;

        r0 := @parameter0: android.view.textclassifier.TextLinks$TextLink;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        i0 = virtualinvoke r0.<android.view.textclassifier.TextLinks$TextLink: int getEntityCount()>();

        $r4 = new androidx.collection.ArrayMap;

        specialinvoke $r4.<androidx.collection.ArrayMap: void <init>(int)>(i0);

        r1 = $r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = virtualinvoke r0.<android.view.textclassifier.TextLinks$TextLink: java.lang.String getEntity(int)>(i1);

        $f0 = virtualinvoke r0.<android.view.textclassifier.TextLinks$TextLink: float getConfidenceScore(java.lang.String)>(r2);

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static androidx.core.graphics.drawable.IconCompat createIconFromDrawable(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable r0;
        android.graphics.Bitmap r1, $r7;
        android.graphics.Canvas r2, $r4;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        android.graphics.Bitmap$Config $r3;
        androidx.core.graphics.drawable.IconCompat $r5, $r8;
        android.graphics.drawable.BitmapDrawable $r6;

        r0 := @parameter0: android.graphics.drawable.Drawable;

        $z0 = r0 instanceof android.graphics.drawable.BitmapDrawable;

        if $z0 == 0 goto label1;

        $r6 = (android.graphics.drawable.BitmapDrawable) r0;

        $r7 = virtualinvoke $r6.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>();

        $r8 = staticinvoke <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithBitmap(android.graphics.Bitmap)>($r7);

        return $r8;

     label1:
        $i0 = virtualinvoke r0.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = virtualinvoke r0.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $r3 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r1 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r3);

        $r4 = new android.graphics.Canvas;

        specialinvoke $r4.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r1);

        r2 = $r4;

        $i2 = virtualinvoke r2.<android.graphics.Canvas: int getWidth()>();

        $i3 = virtualinvoke r2.<android.graphics.Canvas: int getHeight()>();

        virtualinvoke r0.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i2, $i3);

        virtualinvoke r0.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r2);

        $r5 = staticinvoke <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithBitmap(android.graphics.Bitmap)>(r1);

        return $r5;
    }

    public static java.lang.Long zonedDateTimeToUtcMs(java.time.ZonedDateTime)
    {
        java.time.ZonedDateTime r0;
        java.time.Instant $r1;
        long $l0;
        java.lang.Long $r2;

        r0 := @parameter0: java.time.ZonedDateTime;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<java.time.ZonedDateTime: java.time.Instant toInstant()>();

        $l0 = virtualinvoke $r1.<java.time.Instant: long toEpochMilli()>();

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        return $r2;
    }

