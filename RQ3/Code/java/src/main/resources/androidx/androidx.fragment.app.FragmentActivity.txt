androidx.fragment.app.FragmentActivity
<androidx.fragment.app.FragmentActivity: java.lang.String LIFECYCLE_TAG>
<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments>
<androidx.fragment.app.FragmentActivity: androidx.lifecycle.LifecycleRegistry mFragmentLifecycleRegistry>
<androidx.fragment.app.FragmentActivity: boolean mCreated>
<androidx.fragment.app.FragmentActivity: boolean mResumed>
<androidx.fragment.app.FragmentActivity: boolean mStopped>
    public void <init>()
    {
        androidx.fragment.app.FragmentActivity r0;
        androidx.fragment.app.FragmentController $r2;
        androidx.fragment.app.FragmentActivity$HostCallbacks r4;
        androidx.lifecycle.LifecycleRegistry r5;
        androidx.lifecycle.LifecycleOwner r6;

        r0 := @this: androidx.fragment.app.FragmentActivity;

        specialinvoke r0.<androidx.activity.ComponentActivity: void <init>()>();

        r4 = new androidx.fragment.app.FragmentActivity$HostCallbacks;

        specialinvoke r4.<androidx.fragment.app.FragmentActivity$HostCallbacks: void <init>(androidx.fragment.app.FragmentActivity)>(r0);

        $r2 = staticinvoke <androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback)>(r4);

        r0.<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments> = $r2;

        r5 = new androidx.lifecycle.LifecycleRegistry;

        r6 = (androidx.lifecycle.LifecycleOwner) r0;

        specialinvoke r5.<androidx.lifecycle.LifecycleRegistry: void <init>(androidx.lifecycle.LifecycleOwner)>(r6);

        r0.<androidx.fragment.app.FragmentActivity: androidx.lifecycle.LifecycleRegistry mFragmentLifecycleRegistry> = r5;

        r0.<androidx.fragment.app.FragmentActivity: boolean mStopped> = 1;

        specialinvoke r0.<androidx.fragment.app.FragmentActivity: void init()>();

        return;
    }

    public void <init>(int)
    {
        androidx.fragment.app.FragmentActivity r0;
        int i0;
        androidx.fragment.app.FragmentController $r2;
        androidx.fragment.app.FragmentActivity$HostCallbacks r4;
        androidx.lifecycle.LifecycleRegistry r5;
        androidx.lifecycle.LifecycleOwner r6;

        r0 := @this: androidx.fragment.app.FragmentActivity;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.activity.ComponentActivity: void <init>(int)>(i0);

        r4 = new androidx.fragment.app.FragmentActivity$HostCallbacks;

        specialinvoke r4.<androidx.fragment.app.FragmentActivity$HostCallbacks: void <init>(androidx.fragment.app.FragmentActivity)>(r0);

        $r2 = staticinvoke <androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback)>(r4);

        r0.<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments> = $r2;

        r5 = new androidx.lifecycle.LifecycleRegistry;

        r6 = (androidx.lifecycle.LifecycleOwner) r0;

        specialinvoke r5.<androidx.lifecycle.LifecycleRegistry: void <init>(androidx.lifecycle.LifecycleOwner)>(r6);

        r0.<androidx.fragment.app.FragmentActivity: androidx.lifecycle.LifecycleRegistry mFragmentLifecycleRegistry> = r5;

        r0.<androidx.fragment.app.FragmentActivity: boolean mStopped> = 1;

        specialinvoke r0.<androidx.fragment.app.FragmentActivity: void init()>();

        return;
    }

    private void init()
    {
        androidx.fragment.app.FragmentActivity r0;
        androidx.savedstate.SavedStateRegistry $r1;
        androidx.savedstate.SavedStateRegistry$SavedStateProvider $r2;
        androidx.core.util.Consumer $r3, $r4;
        androidx.activity.contextaware.OnContextAvailableListener $r5;

        r0 := @this: androidx.fragment.app.FragmentActivity;

        $r1 = virtualinvoke r0.<androidx.fragment.app.FragmentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()>();

        $r2 = dynamicinvoke "saveState" <androidx.savedstate.SavedStateRegistry$SavedStateProvider (androidx.fragment.app.FragmentActivity)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: android.os.Bundle __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.fragment.app.FragmentActivity: android.os.Bundle lambda$init$0()>, methodtype: android.os.Bundle __METHODTYPE__());

        virtualinvoke $r1.<androidx.savedstate.SavedStateRegistry: void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)>("android:support:lifecycle", $r2);

        $r3 = dynamicinvoke "accept" <androidx.core.util.Consumer (androidx.fragment.app.FragmentActivity)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <androidx.fragment.app.FragmentActivity: void lambda$init$1(android.content.res.Configuration)>, methodtype: void __METHODTYPE__(android.content.res.Configuration));

        virtualinvoke r0.<androidx.fragment.app.FragmentActivity: void addOnConfigurationChangedListener(androidx.core.util.Consumer)>($r3);

        $r4 = dynamicinvoke "accept" <androidx.core.util.Consumer (androidx.fragment.app.FragmentActivity)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <androidx.fragment.app.FragmentActivity: void lambda$init$2(android.content.Intent)>, methodtype: void __METHODTYPE__(android.content.Intent));

        virtualinvoke r0.<androidx.fragment.app.FragmentActivity: void addOnNewIntentListener(androidx.core.util.Consumer)>($r4);

        $r5 = dynamicinvoke "onContextAvailable" <androidx.activity.contextaware.OnContextAvailableListener (androidx.fragment.app.FragmentActivity)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(android.content.Context), methodhandle: "REF_INVOKE_SPECIAL" <androidx.fragment.app.FragmentActivity: void lambda$init$3(android.content.Context)>, methodtype: void __METHODTYPE__(android.content.Context));

        virtualinvoke r0.<androidx.fragment.app.FragmentActivity: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)>($r5);

        return;
    }

    protected void onActivityResult(int, int, android.content.Intent)
    {
        androidx.fragment.app.FragmentActivity r0;
        int i0, i1;
        android.content.Intent r1;
        androidx.fragment.app.FragmentController $r2;

        r0 := @this: androidx.fragment.app.FragmentActivity;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.content.Intent;

        $r2 = r0.<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentController: void noteStateNotSaved()>();

        specialinvoke r0.<androidx.activity.ComponentActivity: void onActivityResult(int,int,android.content.Intent)>(i0, i1, r1);

        return;
    }

    public void supportFinishAfterTransition()
    {
        androidx.fragment.app.FragmentActivity r0;
        android.app.Activity r1;

        r0 := @this: androidx.fragment.app.FragmentActivity;

        r1 = (android.app.Activity) r0;

        staticinvoke <androidx.core.app.ActivityCompat: void finishAfterTransition(android.app.Activity)>(r1);

        return;
    }

    public void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
    {
        androidx.fragment.app.FragmentActivity r0;
        androidx.core.app.SharedElementCallback r1;
        android.app.Activity r2;

        r0 := @this: androidx.fragment.app.FragmentActivity;

        r1 := @parameter0: androidx.core.app.SharedElementCallback;

        r2 = (android.app.Activity) r0;

        staticinvoke <androidx.core.app.ActivityCompat: void setEnterSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback)>(r2, r1);

        return;
    }

    public void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
    {
        androidx.fragment.app.FragmentActivity r0;
        androidx.core.app.SharedElementCallback r1;
        android.app.Activity r2;

        r0 := @this: androidx.fragment.app.FragmentActivity;

        r1 := @parameter0: androidx.core.app.SharedElementCallback;

        r2 = (android.app.Activity) r0;

        staticinvoke <androidx.core.app.ActivityCompat: void setExitSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback)>(r2, r1);

        return;
    }

    public void supportPostponeEnterTransition()
    {
        androidx.fragment.app.FragmentActivity r0;
        android.app.Activity r1;

        r0 := @this: androidx.fragment.app.FragmentActivity;

        r1 = (android.app.Activity) r0;

        staticinvoke <androidx.core.app.ActivityCompat: void postponeEnterTransition(android.app.Activity)>(r1);

        return;
    }

    public void supportStartPostponedEnterTransition()
    {
        androidx.fragment.app.FragmentActivity r0;
        android.app.Activity r1;

        r0 := @this: androidx.fragment.app.FragmentActivity;

        r1 = (android.app.Activity) r0;

        staticinvoke <androidx.core.app.ActivityCompat: void startPostponedEnterTransition(android.app.Activity)>(r1);

        return;
    }

    protected void onCreate(android.os.Bundle)
    {
        androidx.fragment.app.FragmentActivity r0;
        android.os.Bundle r1;
        androidx.lifecycle.Lifecycle$Event $r2;
        androidx.lifecycle.LifecycleRegistry $r3;
        androidx.fragment.app.FragmentController $r4;

        r0 := @this: androidx.fragment.app.FragmentActivity;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)>(r1);

        $r3 = r0.<androidx.fragment.app.FragmentActivity: androidx.lifecycle.LifecycleRegistry mFragmentLifecycleRegistry>;

        $r2 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE>;

        virtualinvoke $r3.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r2);

        $r4 = r0.<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments>;

        virtualinvoke $r4.<androidx.fragment.app.FragmentController: void dispatchCreate()>();

        return;
    }

    public android.view.View onCreateView(android.view.View, java.lang.String, android.content.Context, android.util.AttributeSet)
    {
        androidx.fragment.app.FragmentActivity r0;
        android.view.View r1, r5, $r6;
        java.lang.String r2;
        android.content.Context r3;
        android.util.AttributeSet r4;

        r0 := @this: androidx.fragment.app.FragmentActivity;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.Context;

        r4 := @parameter3: android.util.AttributeSet;

        r5 = virtualinvoke r0.<androidx.fragment.app.FragmentActivity: android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>(r1, r2, r3, r4);

        if r5 != null goto label1;

        $r6 = specialinvoke r0.<androidx.activity.ComponentActivity: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>(r1, r2, r3, r4);

        return $r6;

     label1:
        return r5;
    }

    public android.view.View onCreateView(java.lang.String, android.content.Context, android.util.AttributeSet)
    {
        androidx.fragment.app.FragmentActivity r0;
        java.lang.String r1;
        android.content.Context r2;
        android.util.AttributeSet r3;
        android.view.View r4, $r5;

        r0 := @this: androidx.fragment.app.FragmentActivity;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: android.util.AttributeSet;

        r4 = virtualinvoke r0.<androidx.fragment.app.FragmentActivity: android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>(null, r1, r2, r3);

        if r4 != null goto label1;

        $r5 = specialinvoke r0.<androidx.activity.ComponentActivity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>(r1, r2, r3);

        return $r5;

     label1:
        return r4;
    }

    final android.view.View dispatchFragmentsOnCreateView(android.view.View, java.lang.String, android.content.Context, android.util.AttributeSet)
    {
        androidx.fragment.app.FragmentActivity r0;
        android.view.View r1, $r6;
        java.lang.String r2;
        android.content.Context r3;
        android.util.AttributeSet r4;
        androidx.fragment.app.FragmentController $r5;

        r0 := @this: androidx.fragment.app.FragmentActivity;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.Context;

        r4 := @parameter3: android.util.AttributeSet;

        $r5 = r0.<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments>;

        $r6 = virtualinvoke $r5.<androidx.fragment.app.FragmentController: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>(r1, r2, r3, r4);

        return $r6;
    }

    protected void onDestroy()
    {
        androidx.fragment.app.FragmentActivity r0;
        androidx.fragment.app.FragmentController $r1;
        androidx.lifecycle.Lifecycle$Event $r2;
        androidx.lifecycle.LifecycleRegistry $r3;

        r0 := @this: androidx.fragment.app.FragmentActivity;

        specialinvoke r0.<androidx.activity.ComponentActivity: void onDestroy()>();

        $r1 = r0.<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments>;

        virtualinvoke $r1.<androidx.fragment.app.FragmentController: void dispatchDestroy()>();

        $r3 = r0.<androidx.fragment.app.FragmentActivity: androidx.lifecycle.LifecycleRegistry mFragmentLifecycleRegistry>;

        $r2 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY>;

        virtualinvoke $r3.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r2);

        return;
    }

    public boolean onMenuItemSelected(int, android.view.MenuItem)
    {
        androidx.fragment.app.FragmentActivity r0;
        int i0;
        android.view.MenuItem r1;
        boolean $z0, $z1;
        androidx.fragment.app.FragmentController $r2;

        r0 := @this: androidx.fragment.app.FragmentActivity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.MenuItem;

        $z0 = specialinvoke r0.<androidx.activity.ComponentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)>(i0, r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        if i0 != 6 goto label2;

        $r2 = r0.<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments>;

        $z1 = virtualinvoke $r2.<androidx.fragment.app.FragmentController: boolean dispatchContextItemSelected(android.view.MenuItem)>(r1);

        return $z1;

     label2:
        return 0;
    }

    protected void onPause()
    {
        androidx.fragment.app.FragmentActivity r0;
        androidx.fragment.app.FragmentController $r1;
        androidx.lifecycle.Lifecycle$Event $r2;
        androidx.lifecycle.LifecycleRegistry $r3;

        r0 := @this: androidx.fragment.app.FragmentActivity;

        specialinvoke r0.<androidx.activity.ComponentActivity: void onPause()>();

        r0.<androidx.fragment.app.FragmentActivity: boolean mResumed> = 0;

        $r1 = r0.<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments>;

        virtualinvoke $r1.<androidx.fragment.app.FragmentController: void dispatchPause()>();

        $r3 = r0.<androidx.fragment.app.FragmentActivity: androidx.lifecycle.LifecycleRegistry mFragmentLifecycleRegistry>;

        $r2 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE>;

        virtualinvoke $r3.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r2);

        return;
    }

    public void onStateNotSaved()
    {
        androidx.fragment.app.FragmentActivity r0;
        androidx.fragment.app.FragmentController $r1;

        r0 := @this: androidx.fragment.app.FragmentActivity;

        $r1 = r0.<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments>;

        virtualinvoke $r1.<androidx.fragment.app.FragmentController: void noteStateNotSaved()>();

        return;
    }

    protected void onResume()
    {
        androidx.fragment.app.FragmentActivity r0;
        androidx.fragment.app.FragmentController $r1, $r2;

        r0 := @this: androidx.fragment.app.FragmentActivity;

        $r1 = r0.<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments>;

        virtualinvoke $r1.<androidx.fragment.app.FragmentController: void noteStateNotSaved()>();

        specialinvoke r0.<androidx.activity.ComponentActivity: void onResume()>();

        r0.<androidx.fragment.app.FragmentActivity: boolean mResumed> = 1;

        $r2 = r0.<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentController: boolean execPendingActions()>();

        return;
    }

    protected void onPostResume()
    {
        androidx.fragment.app.FragmentActivity r0;

        r0 := @this: androidx.fragment.app.FragmentActivity;

        specialinvoke r0.<androidx.activity.ComponentActivity: void onPostResume()>();

        virtualinvoke r0.<androidx.fragment.app.FragmentActivity: void onResumeFragments()>();

        return;
    }

    protected void onResumeFragments()
    {
        androidx.fragment.app.FragmentActivity r0;
        androidx.lifecycle.Lifecycle$Event $r1;
        androidx.lifecycle.LifecycleRegistry $r2;
        androidx.fragment.app.FragmentController $r3;

        r0 := @this: androidx.fragment.app.FragmentActivity;

        $r2 = r0.<androidx.fragment.app.FragmentActivity: androidx.lifecycle.LifecycleRegistry mFragmentLifecycleRegistry>;

        $r1 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME>;

        virtualinvoke $r2.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r1);

        $r3 = r0.<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments>;

        virtualinvoke $r3.<androidx.fragment.app.FragmentController: void dispatchResume()>();

        return;
    }

    protected void onStart()
    {
        androidx.fragment.app.FragmentActivity r0;
        androidx.fragment.app.FragmentController $r1, $r2, $r5, $r6;
        boolean $z0;
        androidx.lifecycle.Lifecycle$Event $r3;
        androidx.lifecycle.LifecycleRegistry $r4;

        r0 := @this: androidx.fragment.app.FragmentActivity;

        $r1 = r0.<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments>;

        virtualinvoke $r1.<androidx.fragment.app.FragmentController: void noteStateNotSaved()>();

        specialinvoke r0.<androidx.activity.ComponentActivity: void onStart()>();

        r0.<androidx.fragment.app.FragmentActivity: boolean mStopped> = 0;

        $z0 = r0.<androidx.fragment.app.FragmentActivity: boolean mCreated>;

        if $z0 != 0 goto label1;

        r0.<androidx.fragment.app.FragmentActivity: boolean mCreated> = 1;

        $r6 = r0.<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments>;

        virtualinvoke $r6.<androidx.fragment.app.FragmentController: void dispatchActivityCreated()>();

     label1:
        $r2 = r0.<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentController: boolean execPendingActions()>();

        $r4 = r0.<androidx.fragment.app.FragmentActivity: androidx.lifecycle.LifecycleRegistry mFragmentLifecycleRegistry>;

        $r3 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START>;

        virtualinvoke $r4.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r3);

        $r5 = r0.<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments>;

        virtualinvoke $r5.<androidx.fragment.app.FragmentController: void dispatchStart()>();

        return;
    }

    protected void onStop()
    {
        androidx.fragment.app.FragmentActivity r0;
        androidx.fragment.app.FragmentController $r1;
        androidx.lifecycle.Lifecycle$Event $r2;
        androidx.lifecycle.LifecycleRegistry $r3;

        r0 := @this: androidx.fragment.app.FragmentActivity;

        specialinvoke r0.<androidx.activity.ComponentActivity: void onStop()>();

        r0.<androidx.fragment.app.FragmentActivity: boolean mStopped> = 1;

        virtualinvoke r0.<androidx.fragment.app.FragmentActivity: void markFragmentsCreated()>();

        $r1 = r0.<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments>;

        virtualinvoke $r1.<androidx.fragment.app.FragmentController: void dispatchStop()>();

        $r3 = r0.<androidx.fragment.app.FragmentActivity: androidx.lifecycle.LifecycleRegistry mFragmentLifecycleRegistry>;

        $r2 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP>;

        virtualinvoke $r3.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r2);

        return;
    }

    public void supportInvalidateOptionsMenu()
    {
        androidx.fragment.app.FragmentActivity r0;

        r0 := @this: androidx.fragment.app.FragmentActivity;

        virtualinvoke r0.<androidx.fragment.app.FragmentActivity: void invalidateOptionsMenu()>();

        return;
    }

    public void dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        androidx.fragment.app.FragmentActivity r0;
        java.lang.String r1, r5, $r6;
        java.io.FileDescriptor r2;
        java.io.PrintWriter r3;
        java.lang.String[] r4;
        boolean $z0, $z1, $z2, $z3;
        int $i0;
        java.lang.StringBuilder $r8, $r9, r14;
        android.app.Application $r10;
        androidx.fragment.app.FragmentController $r11;
        androidx.fragment.app.FragmentManager $r12;
        androidx.loader.app.LoaderManager $r13;
        androidx.lifecycle.LifecycleOwner r15;

        r0 := @this: androidx.fragment.app.FragmentActivity;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.PrintWriter;

        r4 := @parameter3: java.lang.String[];

        specialinvoke r0.<androidx.activity.ComponentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3, r4);

        $z0 = virtualinvoke r0.<androidx.fragment.app.FragmentActivity: boolean shouldDumpInternalState(java.lang.String[])>(r4);

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("Local FragmentActivity ");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>($r6);

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>(" State:");

        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r5);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mCreated=");

        $z1 = r0.<androidx.fragment.app.FragmentActivity: boolean mCreated>;

        virtualinvoke r3.<java.io.PrintWriter: void print(boolean)>($z1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mResumed=");

        $z2 = r0.<androidx.fragment.app.FragmentActivity: boolean mResumed>;

        virtualinvoke r3.<java.io.PrintWriter: void print(boolean)>($z2);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mStopped=");

        $z3 = r0.<androidx.fragment.app.FragmentActivity: boolean mStopped>;

        virtualinvoke r3.<java.io.PrintWriter: void print(boolean)>($z3);

        $r10 = virtualinvoke r0.<androidx.fragment.app.FragmentActivity: android.app.Application getApplication()>();

        if $r10 == null goto label2;

        r15 = (androidx.lifecycle.LifecycleOwner) r0;

        $r13 = staticinvoke <androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>(r15);

        virtualinvoke $r13.<androidx.loader.app.LoaderManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r5, r2, r3, r4);

     label2:
        $r11 = r0.<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments>;

        $r12 = virtualinvoke $r11.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManager getSupportFragmentManager()>();

        virtualinvoke $r12.<androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3, r4);

        return;
    }

    public void onAttachFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentActivity r0;
        androidx.fragment.app.Fragment r1;

        r0 := @this: androidx.fragment.app.FragmentActivity;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        return;
    }

    public androidx.fragment.app.FragmentManager getSupportFragmentManager()
    {
        androidx.fragment.app.FragmentActivity r0;
        androidx.fragment.app.FragmentController $r1;
        androidx.fragment.app.FragmentManager $r2;

        r0 := @this: androidx.fragment.app.FragmentActivity;

        $r1 = r0.<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments>;

        $r2 = virtualinvoke $r1.<androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManager getSupportFragmentManager()>();

        return $r2;
    }

    public androidx.loader.app.LoaderManager getSupportLoaderManager()
    {
        androidx.fragment.app.FragmentActivity r0;
        androidx.loader.app.LoaderManager $r1;
        androidx.lifecycle.LifecycleOwner r2;

        r0 := @this: androidx.fragment.app.FragmentActivity;

        r2 = (androidx.lifecycle.LifecycleOwner) r0;

        $r1 = staticinvoke <androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)>(r2);

        return $r1;
    }

    public final void validateRequestPermissionsRequestCode(int)
    {
        androidx.fragment.app.FragmentActivity r0;
        int i0;

        r0 := @this: androidx.fragment.app.FragmentActivity;

        i0 := @parameter0: int;

        return;
    }

    public void onRequestPermissionsResult(int, java.lang.String[], int[])
    {
        androidx.fragment.app.FragmentActivity r0;
        int i0;
        java.lang.String[] r1;
        int[] r2;
        androidx.fragment.app.FragmentController $r3;

        r0 := @this: androidx.fragment.app.FragmentActivity;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String[];

        r2 := @parameter2: int[];

        $r3 = r0.<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments>;

        virtualinvoke $r3.<androidx.fragment.app.FragmentController: void noteStateNotSaved()>();

        specialinvoke r0.<androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>(i0, r1, r2);

        return;
    }

    public void startActivityFromFragment(androidx.fragment.app.Fragment, android.content.Intent, int)
    {
        androidx.fragment.app.FragmentActivity r0;
        androidx.fragment.app.Fragment r1;
        android.content.Intent r2;
        int i0;

        r0 := @this: androidx.fragment.app.FragmentActivity;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        r2 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        virtualinvoke r0.<androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)>(r1, r2, i0, null);

        return;
    }

    public void startActivityFromFragment(androidx.fragment.app.Fragment, android.content.Intent, int, android.os.Bundle)
    {
        androidx.fragment.app.FragmentActivity r0;
        androidx.fragment.app.Fragment r1;
        android.content.Intent r2;
        int i0;
        android.os.Bundle r3;
        android.app.Activity r4;

        r0 := @this: androidx.fragment.app.FragmentActivity;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        r2 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        r3 := @parameter3: android.os.Bundle;

        if i0 != -1 goto label1;

        r4 = (android.app.Activity) r0;

        staticinvoke <androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)>(r4, r2, -1, r3);

        return;

     label1:
        virtualinvoke r1.<androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>(r2, i0, r3);

        return;
    }

    public void startIntentSenderFromFragment(androidx.fragment.app.Fragment, android.content.IntentSender, int, android.content.Intent, int, int, int, android.os.Bundle) throws android.content.IntentSender$SendIntentException
    {
        androidx.fragment.app.FragmentActivity r0;
        androidx.fragment.app.Fragment r1;
        android.content.IntentSender r2;
        int i0, i1, i2, i3;
        android.content.Intent r3;
        android.os.Bundle r4;
        android.app.Activity r5;

        r0 := @this: androidx.fragment.app.FragmentActivity;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        r2 := @parameter1: android.content.IntentSender;

        i0 := @parameter2: int;

        r3 := @parameter3: android.content.Intent;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        r4 := @parameter7: android.os.Bundle;

        if i0 != -1 goto label1;

        r5 = (android.app.Activity) r0;

        staticinvoke <androidx.core.app.ActivityCompat: void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>(r5, r2, i0, r3, i1, i2, i3, r4);

        return;

     label1:
        virtualinvoke r1.<androidx.fragment.app.Fragment: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>(r2, i0, r3, i1, i2, i3, r4);

        return;
    }

    void markFragmentsCreated()
    {
        androidx.fragment.app.FragmentActivity r0;
        boolean z0;
        androidx.fragment.app.FragmentManager $r1;
        androidx.lifecycle.Lifecycle$State $r2;

        r0 := @this: androidx.fragment.app.FragmentActivity;

     label1:
        $r1 = virtualinvoke r0.<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()>();

        $r2 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State CREATED>;

        z0 = staticinvoke <androidx.fragment.app.FragmentActivity: boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State)>($r1, $r2);

        if z0 != 0 goto label1;

        return;
    }

    private static boolean markState(androidx.fragment.app.FragmentManager, androidx.lifecycle.Lifecycle$State)
    {
        androidx.fragment.app.FragmentManager r0, r5;
        androidx.lifecycle.Lifecycle$State r1, $r12, $r13, $r16, $r17;
        java.util.List r2;
        java.util.Iterator r3;
        androidx.fragment.app.Fragment r4;
        java.lang.Object $r6, $r7;
        androidx.fragment.app.FragmentViewLifecycleOwner $r8, $r10, $r14;
        androidx.lifecycle.LifecycleRegistry $r9, $r15;
        androidx.lifecycle.Lifecycle $r11;
        boolean $z0, $z1, z2, $z3, $z4;

        r0 := @parameter0: androidx.fragment.app.FragmentManager;

        r1 := @parameter1: androidx.lifecycle.Lifecycle$State;

        z2 = 0;

        r2 = virtualinvoke r0.<androidx.fragment.app.FragmentManager: java.util.List getFragments()>();

        r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label6;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.fragment.app.Fragment) $r6;

        if r4 != null goto label2;

        goto label1;

     label2:
        $r7 = virtualinvoke r4.<androidx.fragment.app.Fragment: java.lang.Object getHost()>();

        if $r7 == null goto label3;

        r5 = virtualinvoke r4.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getChildFragmentManager()>();

        $z1 = staticinvoke <androidx.fragment.app.FragmentActivity: boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State)>(r5, r1);

        z2 = z2 | $z1;

     label3:
        $r8 = r4.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentViewLifecycleOwner mViewLifecycleOwner>;

        if $r8 == null goto label4;

        $r10 = r4.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentViewLifecycleOwner mViewLifecycleOwner>;

        $r11 = virtualinvoke $r10.<androidx.fragment.app.FragmentViewLifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>();

        $r12 = virtualinvoke $r11.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r13 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State STARTED>;

        $z0 = virtualinvoke $r12.<androidx.lifecycle.Lifecycle$State: boolean isAtLeast(androidx.lifecycle.Lifecycle$State)>($r13);

        if $z0 == 0 goto label4;

        $r14 = r4.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentViewLifecycleOwner mViewLifecycleOwner>;

        virtualinvoke $r14.<androidx.fragment.app.FragmentViewLifecycleOwner: void setCurrentState(androidx.lifecycle.Lifecycle$State)>(r1);

        z2 = 1;

     label4:
        $r15 = r4.<androidx.fragment.app.Fragment: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry>;

        $r16 = virtualinvoke $r15.<androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r17 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State STARTED>;

        $z4 = virtualinvoke $r16.<androidx.lifecycle.Lifecycle$State: boolean isAtLeast(androidx.lifecycle.Lifecycle$State)>($r17);

        if $z4 == 0 goto label5;

        $r9 = r4.<androidx.fragment.app.Fragment: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry>;

        virtualinvoke $r9.<androidx.lifecycle.LifecycleRegistry: void setCurrentState(androidx.lifecycle.Lifecycle$State)>(r1);

        z2 = 1;

     label5:
        goto label1;

     label6:
        return z2;
    }

    private void lambda$init$3(android.content.Context)
    {
        androidx.fragment.app.FragmentActivity r0;
        android.content.Context r1;
        androidx.fragment.app.FragmentController $r2;

        r0 := @this: androidx.fragment.app.FragmentActivity;

        r1 := @parameter0: android.content.Context;

        $r2 = r0.<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentController: void attachHost(androidx.fragment.app.Fragment)>(null);

        return;
    }

    private void lambda$init$2(android.content.Intent)
    {
        androidx.fragment.app.FragmentActivity r0;
        android.content.Intent r1;
        androidx.fragment.app.FragmentController $r2;

        r0 := @this: androidx.fragment.app.FragmentActivity;

        r1 := @parameter0: android.content.Intent;

        $r2 = r0.<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentController: void noteStateNotSaved()>();

        return;
    }

    private void lambda$init$1(android.content.res.Configuration)
    {
        androidx.fragment.app.FragmentActivity r0;
        android.content.res.Configuration r1;
        androidx.fragment.app.FragmentController $r2;

        r0 := @this: androidx.fragment.app.FragmentActivity;

        r1 := @parameter0: android.content.res.Configuration;

        $r2 = r0.<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentController: void noteStateNotSaved()>();

        return;
    }

    private android.os.Bundle lambda$init$0()
    {
        androidx.fragment.app.FragmentActivity r0;
        androidx.lifecycle.Lifecycle$Event $r1;
        androidx.lifecycle.LifecycleRegistry $r2;
        android.os.Bundle $r3;

        r0 := @this: androidx.fragment.app.FragmentActivity;

        virtualinvoke r0.<androidx.fragment.app.FragmentActivity: void markFragmentsCreated()>();

        $r2 = r0.<androidx.fragment.app.FragmentActivity: androidx.lifecycle.LifecycleRegistry mFragmentLifecycleRegistry>;

        $r1 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP>;

        virtualinvoke $r2.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r1);

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        return $r3;
    }

androidx.fragment.app.FragmentActivity$HostCallbacks
<androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0>
    public void <init>(androidx.fragment.app.FragmentActivity)
    {
        androidx.fragment.app.FragmentActivity$HostCallbacks r0;
        androidx.fragment.app.FragmentActivity r1;

        r0 := @this: androidx.fragment.app.FragmentActivity$HostCallbacks;

        r1 := @parameter0: androidx.fragment.app.FragmentActivity;

        r0.<androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0> = r1;

        specialinvoke r0.<androidx.fragment.app.FragmentHostCallback: void <init>(androidx.fragment.app.FragmentActivity)>(r1);

        return;
    }

    public androidx.lifecycle.Lifecycle getLifecycle()
    {
        androidx.fragment.app.FragmentActivity$HostCallbacks r0;
        androidx.fragment.app.FragmentActivity $r1;
        androidx.lifecycle.LifecycleRegistry $r2;

        r0 := @this: androidx.fragment.app.FragmentActivity$HostCallbacks;

        $r1 = r0.<androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0>;

        $r2 = $r1.<androidx.fragment.app.FragmentActivity: androidx.lifecycle.LifecycleRegistry mFragmentLifecycleRegistry>;

        return $r2;
    }

    public androidx.lifecycle.ViewModelStore getViewModelStore()
    {
        androidx.fragment.app.FragmentActivity$HostCallbacks r0;
        androidx.fragment.app.FragmentActivity $r1;
        androidx.lifecycle.ViewModelStore $r2;

        r0 := @this: androidx.fragment.app.FragmentActivity$HostCallbacks;

        $r1 = r0.<androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0>;

        $r2 = virtualinvoke $r1.<androidx.fragment.app.FragmentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()>();

        return $r2;
    }

    public androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()
    {
        androidx.fragment.app.FragmentActivity$HostCallbacks r0;
        androidx.fragment.app.FragmentActivity $r1;
        androidx.activity.OnBackPressedDispatcher $r2;

        r0 := @this: androidx.fragment.app.FragmentActivity$HostCallbacks;

        $r1 = r0.<androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0>;

        $r2 = virtualinvoke $r1.<androidx.fragment.app.FragmentActivity: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()>();

        return $r2;
    }

    public void onDump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        androidx.fragment.app.FragmentActivity$HostCallbacks r0;
        java.lang.String r1;
        java.io.FileDescriptor r2;
        java.io.PrintWriter r3;
        java.lang.String[] r4;
        androidx.fragment.app.FragmentActivity $r5;

        r0 := @this: androidx.fragment.app.FragmentActivity$HostCallbacks;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.PrintWriter;

        r4 := @parameter3: java.lang.String[];

        $r5 = r0.<androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0>;

        virtualinvoke $r5.<androidx.fragment.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3, r4);

        return;
    }

    public boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentActivity$HostCallbacks r0;
        androidx.fragment.app.Fragment r1;
        androidx.fragment.app.FragmentActivity $r2;
        boolean $z0, $z1;

        r0 := @this: androidx.fragment.app.FragmentActivity$HostCallbacks;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        $r2 = r0.<androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0>;

        $z0 = virtualinvoke $r2.<androidx.fragment.app.FragmentActivity: boolean isFinishing()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public android.view.LayoutInflater onGetLayoutInflater()
    {
        androidx.fragment.app.FragmentActivity$HostCallbacks r0;
        androidx.fragment.app.FragmentActivity $r1, $r3;
        android.view.LayoutInflater $r2, $r4;
        android.content.Context r5;

        r0 := @this: androidx.fragment.app.FragmentActivity$HostCallbacks;

        $r1 = r0.<androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0>;

        $r2 = virtualinvoke $r1.<androidx.fragment.app.FragmentActivity: android.view.LayoutInflater getLayoutInflater()>();

        $r3 = r0.<androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0>;

        r5 = (android.content.Context) $r3;

        $r4 = virtualinvoke $r2.<android.view.LayoutInflater: android.view.LayoutInflater cloneInContext(android.content.Context)>(r5);

        return $r4;
    }

    public androidx.fragment.app.FragmentActivity onGetHost()
    {
        androidx.fragment.app.FragmentActivity$HostCallbacks r0;
        androidx.fragment.app.FragmentActivity $r1;

        r0 := @this: androidx.fragment.app.FragmentActivity$HostCallbacks;

        $r1 = r0.<androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0>;

        return $r1;
    }

    public void onSupportInvalidateOptionsMenu()
    {
        androidx.fragment.app.FragmentActivity$HostCallbacks r0;

        r0 := @this: androidx.fragment.app.FragmentActivity$HostCallbacks;

        virtualinvoke r0.<androidx.fragment.app.FragmentActivity$HostCallbacks: void invalidateMenu()>();

        return;
    }

    public boolean onShouldShowRequestPermissionRationale(java.lang.String)
    {
        androidx.fragment.app.FragmentActivity$HostCallbacks r0;
        java.lang.String r1;
        androidx.fragment.app.FragmentActivity $r2;
        boolean $z0;
        android.app.Activity r3;

        r0 := @this: androidx.fragment.app.FragmentActivity$HostCallbacks;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0>;

        r3 = (android.app.Activity) $r2;

        $z0 = staticinvoke <androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)>(r3, r1);

        return $z0;
    }

    public boolean onHasWindowAnimations()
    {
        androidx.fragment.app.FragmentActivity$HostCallbacks r0;
        androidx.fragment.app.FragmentActivity $r1;
        android.view.Window $r2;
        boolean $z0;

        r0 := @this: androidx.fragment.app.FragmentActivity$HostCallbacks;

        $r1 = r0.<androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0>;

        $r2 = virtualinvoke $r1.<androidx.fragment.app.FragmentActivity: android.view.Window getWindow()>();

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int onGetWindowAnimations()
    {
        androidx.fragment.app.FragmentActivity$HostCallbacks r0;
        android.view.Window r1;
        androidx.fragment.app.FragmentActivity $r2;
        android.view.WindowManager$LayoutParams $r3;
        int $i0;

        r0 := @this: androidx.fragment.app.FragmentActivity$HostCallbacks;

        $r2 = r0.<androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0>;

        r1 = virtualinvoke $r2.<androidx.fragment.app.FragmentActivity: android.view.Window getWindow()>();

        if r1 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $r3 = virtualinvoke r1.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        $i0 = $r3.<android.view.WindowManager$LayoutParams: int windowAnimations>;

     label2:
        return $i0;
    }

    public void onAttachFragment(androidx.fragment.app.FragmentManager, androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentActivity$HostCallbacks r0;
        androidx.fragment.app.FragmentManager r1;
        androidx.fragment.app.Fragment r2;
        androidx.fragment.app.FragmentActivity $r3;

        r0 := @this: androidx.fragment.app.FragmentActivity$HostCallbacks;

        r1 := @parameter0: androidx.fragment.app.FragmentManager;

        r2 := @parameter1: androidx.fragment.app.Fragment;

        $r3 = r0.<androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0>;

        virtualinvoke $r3.<androidx.fragment.app.FragmentActivity: void onAttachFragment(androidx.fragment.app.Fragment)>(r2);

        return;
    }

    public android.view.View onFindViewById(int)
    {
        androidx.fragment.app.FragmentActivity$HostCallbacks r0;
        int i0;
        androidx.fragment.app.FragmentActivity $r1;
        android.view.View $r2;

        r0 := @this: androidx.fragment.app.FragmentActivity$HostCallbacks;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0>;

        $r2 = virtualinvoke $r1.<androidx.fragment.app.FragmentActivity: android.view.View findViewById(int)>(i0);

        return $r2;
    }

    public boolean onHasView()
    {
        androidx.fragment.app.FragmentActivity$HostCallbacks r0;
        android.view.Window r1;
        androidx.fragment.app.FragmentActivity $r2;
        android.view.View $r3;
        boolean $z0;

        r0 := @this: androidx.fragment.app.FragmentActivity$HostCallbacks;

        $r2 = r0.<androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0>;

        r1 = virtualinvoke $r2.<androidx.fragment.app.FragmentActivity: android.view.Window getWindow()>();

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<android.view.Window: android.view.View peekDecorView()>();

        if $r3 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public androidx.activity.result.ActivityResultRegistry getActivityResultRegistry()
    {
        androidx.fragment.app.FragmentActivity$HostCallbacks r0;
        androidx.fragment.app.FragmentActivity $r1;
        androidx.activity.result.ActivityResultRegistry $r2;

        r0 := @this: androidx.fragment.app.FragmentActivity$HostCallbacks;

        $r1 = r0.<androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0>;

        $r2 = virtualinvoke $r1.<androidx.fragment.app.FragmentActivity: androidx.activity.result.ActivityResultRegistry getActivityResultRegistry()>();

        return $r2;
    }

    public androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
    {
        androidx.fragment.app.FragmentActivity$HostCallbacks r0;
        androidx.fragment.app.FragmentActivity $r1;
        androidx.savedstate.SavedStateRegistry $r2;

        r0 := @this: androidx.fragment.app.FragmentActivity$HostCallbacks;

        $r1 = r0.<androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0>;

        $r2 = virtualinvoke $r1.<androidx.fragment.app.FragmentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()>();

        return $r2;
    }

    public void addOnConfigurationChangedListener(androidx.core.util.Consumer)
    {
        androidx.fragment.app.FragmentActivity$HostCallbacks r0;
        androidx.core.util.Consumer r1;
        androidx.fragment.app.FragmentActivity $r2;

        r0 := @this: androidx.fragment.app.FragmentActivity$HostCallbacks;

        r1 := @parameter0: androidx.core.util.Consumer;

        $r2 = r0.<androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentActivity: void addOnConfigurationChangedListener(androidx.core.util.Consumer)>(r1);

        return;
    }

    public void removeOnConfigurationChangedListener(androidx.core.util.Consumer)
    {
        androidx.fragment.app.FragmentActivity$HostCallbacks r0;
        androidx.core.util.Consumer r1;
        androidx.fragment.app.FragmentActivity $r2;

        r0 := @this: androidx.fragment.app.FragmentActivity$HostCallbacks;

        r1 := @parameter0: androidx.core.util.Consumer;

        $r2 = r0.<androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentActivity: void removeOnConfigurationChangedListener(androidx.core.util.Consumer)>(r1);

        return;
    }

    public void addOnTrimMemoryListener(androidx.core.util.Consumer)
    {
        androidx.fragment.app.FragmentActivity$HostCallbacks r0;
        androidx.core.util.Consumer r1;
        androidx.fragment.app.FragmentActivity $r2;

        r0 := @this: androidx.fragment.app.FragmentActivity$HostCallbacks;

        r1 := @parameter0: androidx.core.util.Consumer;

        $r2 = r0.<androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentActivity: void addOnTrimMemoryListener(androidx.core.util.Consumer)>(r1);

        return;
    }

    public void removeOnTrimMemoryListener(androidx.core.util.Consumer)
    {
        androidx.fragment.app.FragmentActivity$HostCallbacks r0;
        androidx.core.util.Consumer r1;
        androidx.fragment.app.FragmentActivity $r2;

        r0 := @this: androidx.fragment.app.FragmentActivity$HostCallbacks;

        r1 := @parameter0: androidx.core.util.Consumer;

        $r2 = r0.<androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentActivity: void removeOnTrimMemoryListener(androidx.core.util.Consumer)>(r1);

        return;
    }

    public void addOnMultiWindowModeChangedListener(androidx.core.util.Consumer)
    {
        androidx.fragment.app.FragmentActivity$HostCallbacks r0;
        androidx.core.util.Consumer r1;
        androidx.fragment.app.FragmentActivity $r2;

        r0 := @this: androidx.fragment.app.FragmentActivity$HostCallbacks;

        r1 := @parameter0: androidx.core.util.Consumer;

        $r2 = r0.<androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentActivity: void addOnMultiWindowModeChangedListener(androidx.core.util.Consumer)>(r1);

        return;
    }

    public void removeOnMultiWindowModeChangedListener(androidx.core.util.Consumer)
    {
        androidx.fragment.app.FragmentActivity$HostCallbacks r0;
        androidx.core.util.Consumer r1;
        androidx.fragment.app.FragmentActivity $r2;

        r0 := @this: androidx.fragment.app.FragmentActivity$HostCallbacks;

        r1 := @parameter0: androidx.core.util.Consumer;

        $r2 = r0.<androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentActivity: void removeOnMultiWindowModeChangedListener(androidx.core.util.Consumer)>(r1);

        return;
    }

    public void addOnPictureInPictureModeChangedListener(androidx.core.util.Consumer)
    {
        androidx.fragment.app.FragmentActivity$HostCallbacks r0;
        androidx.core.util.Consumer r1;
        androidx.fragment.app.FragmentActivity $r2;

        r0 := @this: androidx.fragment.app.FragmentActivity$HostCallbacks;

        r1 := @parameter0: androidx.core.util.Consumer;

        $r2 = r0.<androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentActivity: void addOnPictureInPictureModeChangedListener(androidx.core.util.Consumer)>(r1);

        return;
    }

    public void removeOnPictureInPictureModeChangedListener(androidx.core.util.Consumer)
    {
        androidx.fragment.app.FragmentActivity$HostCallbacks r0;
        androidx.core.util.Consumer r1;
        androidx.fragment.app.FragmentActivity $r2;

        r0 := @this: androidx.fragment.app.FragmentActivity$HostCallbacks;

        r1 := @parameter0: androidx.core.util.Consumer;

        $r2 = r0.<androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentActivity: void removeOnPictureInPictureModeChangedListener(androidx.core.util.Consumer)>(r1);

        return;
    }

    public void addMenuProvider(androidx.core.view.MenuProvider)
    {
        androidx.fragment.app.FragmentActivity$HostCallbacks r0;
        androidx.core.view.MenuProvider r1;
        androidx.fragment.app.FragmentActivity $r2;

        r0 := @this: androidx.fragment.app.FragmentActivity$HostCallbacks;

        r1 := @parameter0: androidx.core.view.MenuProvider;

        $r2 = r0.<androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentActivity: void addMenuProvider(androidx.core.view.MenuProvider)>(r1);

        return;
    }

    public void addMenuProvider(androidx.core.view.MenuProvider, androidx.lifecycle.LifecycleOwner)
    {
        androidx.fragment.app.FragmentActivity$HostCallbacks r0;
        androidx.core.view.MenuProvider r1;
        androidx.lifecycle.LifecycleOwner r2;
        androidx.fragment.app.FragmentActivity $r3;

        r0 := @this: androidx.fragment.app.FragmentActivity$HostCallbacks;

        r1 := @parameter0: androidx.core.view.MenuProvider;

        r2 := @parameter1: androidx.lifecycle.LifecycleOwner;

        $r3 = r0.<androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0>;

        virtualinvoke $r3.<androidx.fragment.app.FragmentActivity: void addMenuProvider(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner)>(r1, r2);

        return;
    }

    public void addMenuProvider(androidx.core.view.MenuProvider, androidx.lifecycle.LifecycleOwner, androidx.lifecycle.Lifecycle$State)
    {
        androidx.fragment.app.FragmentActivity$HostCallbacks r0;
        androidx.core.view.MenuProvider r1;
        androidx.lifecycle.LifecycleOwner r2;
        androidx.lifecycle.Lifecycle$State r3;
        androidx.fragment.app.FragmentActivity $r4;

        r0 := @this: androidx.fragment.app.FragmentActivity$HostCallbacks;

        r1 := @parameter0: androidx.core.view.MenuProvider;

        r2 := @parameter1: androidx.lifecycle.LifecycleOwner;

        r3 := @parameter2: androidx.lifecycle.Lifecycle$State;

        $r4 = r0.<androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0>;

        virtualinvoke $r4.<androidx.fragment.app.FragmentActivity: void addMenuProvider(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$State)>(r1, r2, r3);

        return;
    }

    public void removeMenuProvider(androidx.core.view.MenuProvider)
    {
        androidx.fragment.app.FragmentActivity$HostCallbacks r0;
        androidx.core.view.MenuProvider r1;
        androidx.fragment.app.FragmentActivity $r2;

        r0 := @this: androidx.fragment.app.FragmentActivity$HostCallbacks;

        r1 := @parameter0: androidx.core.view.MenuProvider;

        $r2 = r0.<androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentActivity: void removeMenuProvider(androidx.core.view.MenuProvider)>(r1);

        return;
    }

    public void invalidateMenu()
    {
        androidx.fragment.app.FragmentActivity$HostCallbacks r0;
        androidx.fragment.app.FragmentActivity $r1;

        r0 := @this: androidx.fragment.app.FragmentActivity$HostCallbacks;

        $r1 = r0.<androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0>;

        virtualinvoke $r1.<androidx.fragment.app.FragmentActivity: void invalidateOptionsMenu()>();

        return;
    }

    public volatile java.lang.Object onGetHost()
    {
        androidx.fragment.app.FragmentActivity$HostCallbacks r0;
        androidx.fragment.app.FragmentActivity $r1;

        r0 := @this: androidx.fragment.app.FragmentActivity$HostCallbacks;

        $r1 = virtualinvoke r0.<androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity onGetHost()>();

        return $r1;
    }

