androidx.metrics.performance.JankStatsApi24Impl
<androidx.metrics.performance.JankStatsApi24Impl: androidx.metrics.performance.JankStatsApi24Impl$Companion Companion>
<androidx.metrics.performance.JankStatsApi24Impl: android.view.Window window>
<androidx.metrics.performance.JankStatsApi24Impl: long prevStart>
<androidx.metrics.performance.JankStatsApi24Impl: long listenerAddedTime>
<androidx.metrics.performance.JankStatsApi24Impl: long prevEnd>
<androidx.metrics.performance.JankStatsApi24Impl: androidx.metrics.performance.FrameDataApi24 frameData>
<androidx.metrics.performance.JankStatsApi24Impl: android.view.Window$OnFrameMetricsAvailableListener frameMetricsAvailableListenerDelegate>
<androidx.metrics.performance.JankStatsApi24Impl: android.os.Handler frameMetricsHandler>
    public void <init>(androidx.metrics.performance.JankStats, android.view.View, android.view.Window)
    {
        androidx.metrics.performance.JankStatsApi24Impl r0;
        androidx.metrics.performance.JankStats r1;
        android.view.View r2;
        android.view.Window r3;
        androidx.metrics.performance.FrameDataApi24 $r4;
        java.util.List $r5;
        android.view.Window$OnFrameMetricsAvailableListener $r6;

        r0 := @this: androidx.metrics.performance.JankStatsApi24Impl;

        r1 := @parameter0: androidx.metrics.performance.JankStats;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.view.Window;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "jankStats");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "view");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "window");

        specialinvoke r0.<androidx.metrics.performance.JankStatsApi22Impl: void <init>(androidx.metrics.performance.JankStats,android.view.View)>(r1, r2);

        r0.<androidx.metrics.performance.JankStatsApi24Impl: android.view.Window window> = r3;

        $r4 = new androidx.metrics.performance.FrameDataApi24;

        $r5 = virtualinvoke r0.<androidx.metrics.performance.JankStatsApi24Impl: java.util.List getStateInfo()>();

        specialinvoke $r4.<androidx.metrics.performance.FrameDataApi24: void <init>(long,long,long,boolean,java.util.List)>(0L, 0L, 0L, 0, $r5);

        r0.<androidx.metrics.performance.JankStatsApi24Impl: androidx.metrics.performance.FrameDataApi24 frameData> = $r4;

        $r6 = dynamicinvoke "onFrameMetricsAvailable" <android.view.Window$OnFrameMetricsAvailableListener (androidx.metrics.performance.JankStatsApi24Impl,androidx.metrics.performance.JankStats)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(android.view.Window,android.view.FrameMetrics,int), methodhandle: "REF_INVOKE_STATIC" <androidx.metrics.performance.JankStatsApi24Impl: void frameMetricsAvailableListenerDelegate$lambda-0(androidx.metrics.performance.JankStatsApi24Impl,androidx.metrics.performance.JankStats,android.view.Window,android.view.FrameMetrics,int)>, methodtype: void __METHODTYPE__(android.view.Window,android.view.FrameMetrics,int));

        r0.<androidx.metrics.performance.JankStatsApi24Impl: android.view.Window$OnFrameMetricsAvailableListener frameMetricsAvailableListenerDelegate> = $r6;

        return;
    }

    public final long getPrevStart()
    {
        androidx.metrics.performance.JankStatsApi24Impl r0;
        long $l0;

        r0 := @this: androidx.metrics.performance.JankStatsApi24Impl;

        $l0 = r0.<androidx.metrics.performance.JankStatsApi24Impl: long prevStart>;

        return $l0;
    }

    public final void setPrevStart(long)
    {
        androidx.metrics.performance.JankStatsApi24Impl r0;
        long l0;

        r0 := @this: androidx.metrics.performance.JankStatsApi24Impl;

        l0 := @parameter0: long;

        r0.<androidx.metrics.performance.JankStatsApi24Impl: long prevStart> = l0;

        return;
    }

    public final long getListenerAddedTime()
    {
        androidx.metrics.performance.JankStatsApi24Impl r0;
        long $l0;

        r0 := @this: androidx.metrics.performance.JankStatsApi24Impl;

        $l0 = r0.<androidx.metrics.performance.JankStatsApi24Impl: long listenerAddedTime>;

        return $l0;
    }

    public final void setListenerAddedTime(long)
    {
        androidx.metrics.performance.JankStatsApi24Impl r0;
        long l0;

        r0 := @this: androidx.metrics.performance.JankStatsApi24Impl;

        l0 := @parameter0: long;

        r0.<androidx.metrics.performance.JankStatsApi24Impl: long listenerAddedTime> = l0;

        return;
    }

    public final long getPrevEnd()
    {
        androidx.metrics.performance.JankStatsApi24Impl r0;
        long $l0;

        r0 := @this: androidx.metrics.performance.JankStatsApi24Impl;

        $l0 = r0.<androidx.metrics.performance.JankStatsApi24Impl: long prevEnd>;

        return $l0;
    }

    public final void setPrevEnd(long)
    {
        androidx.metrics.performance.JankStatsApi24Impl r0;
        long l0;

        r0 := @this: androidx.metrics.performance.JankStatsApi24Impl;

        l0 := @parameter0: long;

        r0.<androidx.metrics.performance.JankStatsApi24Impl: long prevEnd> = l0;

        return;
    }

    public androidx.metrics.performance.FrameDataApi24 getFrameData$metrics_performance_release(long, long, android.view.FrameMetrics)
    {
        androidx.metrics.performance.JankStatsApi24Impl r0;
        long l0, l1, l2, l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l13, $l14, $l16, $l17, $l18, $l19;
        android.view.FrameMetrics r1;
        boolean z0, $z1;
        androidx.metrics.performance.PerformanceMetricsState$Holder $r2;
        androidx.metrics.performance.PerformanceMetricsState $r3;
        byte $b15;
        androidx.metrics.performance.FrameDataApi24 $r4, $r5;
        java.util.List $r6;

        r0 := @this: androidx.metrics.performance.JankStatsApi24Impl;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 := @parameter2: android.view.FrameMetrics;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "frameMetrics");

        $l4 = virtualinvoke r1.<android.view.FrameMetrics: long getMetric(int)>(0);

        $l5 = virtualinvoke r1.<android.view.FrameMetrics: long getMetric(int)>(1);

        $l6 = $l4 + $l5;

        $l7 = virtualinvoke r1.<android.view.FrameMetrics: long getMetric(int)>(2);

        $l8 = $l6 + $l7;

        $l9 = virtualinvoke r1.<android.view.FrameMetrics: long getMetric(int)>(3);

        $l10 = $l8 + $l9;

        $l11 = virtualinvoke r1.<android.view.FrameMetrics: long getMetric(int)>(4);

        $l12 = $l10 + $l11;

        $l13 = virtualinvoke r1.<android.view.FrameMetrics: long getMetric(int)>(5);

        l2 = $l12 + $l13;

        $l14 = l0 + l2;

        r0.<androidx.metrics.performance.JankStatsApi24Impl: long prevEnd> = $l14;

        $r2 = virtualinvoke r0.<androidx.metrics.performance.JankStatsApi24Impl: androidx.metrics.performance.PerformanceMetricsState$Holder getMetricsStateHolder()>();

        $r3 = virtualinvoke $r2.<androidx.metrics.performance.PerformanceMetricsState$Holder: androidx.metrics.performance.PerformanceMetricsState getState()>();

        if $r3 == null goto label1;

        $l19 = r0.<androidx.metrics.performance.JankStatsApi24Impl: long prevEnd>;

        $r6 = virtualinvoke r0.<androidx.metrics.performance.JankStatsApi24Impl: java.util.List getStateInfo()>();

        virtualinvoke $r3.<androidx.metrics.performance.PerformanceMetricsState: void getIntervalStates$metrics_performance_release(long,long,java.util.List)>(l0, $l19, $r6);

        goto label1;

     label1:
        $b15 = l2 cmp l1;

        if $b15 <= 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        z0 = $z1;

        $l16 = virtualinvoke r1.<android.view.FrameMetrics: long getMetric(int)>(6);

        $l17 = l2 + $l16;

        $l18 = virtualinvoke r1.<android.view.FrameMetrics: long getMetric(int)>(7);

        l3 = $l17 + $l18;

        $r4 = r0.<androidx.metrics.performance.JankStatsApi24Impl: androidx.metrics.performance.FrameDataApi24 frameData>;

        virtualinvoke $r4.<androidx.metrics.performance.FrameDataApi24: void update$metrics_performance_release(long,long,long,boolean)>(l0, l2, l3, z0);

        $r5 = r0.<androidx.metrics.performance.JankStatsApi24Impl: androidx.metrics.performance.FrameDataApi24 frameData>;

        return $r5;
    }

    public long getFrameStartTime$metrics_performance_release(android.view.FrameMetrics)
    {
        androidx.metrics.performance.JankStatsApi24Impl r0;
        android.view.FrameMetrics r1;
        long $l0;

        r0 := @this: androidx.metrics.performance.JankStatsApi24Impl;

        r1 := @parameter0: android.view.FrameMetrics;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "frameMetrics");

        $l0 = virtualinvoke r0.<androidx.metrics.performance.JankStatsApi24Impl: long getFrameStartTime$metrics_performance_release()>();

        return $l0;
    }

    public long getExpectedFrameDuration(android.view.FrameMetrics)
    {
        androidx.metrics.performance.JankStatsApi24Impl r0;
        android.view.FrameMetrics r1;
        java.lang.ref.WeakReference $r2;
        java.lang.Object $r3;
        android.view.View $r4;
        long $l0;

        r0 := @this: androidx.metrics.performance.JankStatsApi24Impl;

        r1 := @parameter0: android.view.FrameMetrics;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "metrics");

        $r2 = virtualinvoke r0.<androidx.metrics.performance.JankStatsApi24Impl: java.lang.ref.WeakReference getDecorViewRef$metrics_performance_release()>();

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r4 = (android.view.View) $r3;

        $l0 = virtualinvoke r0.<androidx.metrics.performance.JankStatsApi24Impl: long getExpectedFrameDuration(android.view.View)>($r4);

        return $l0;
    }

    public void setupFrameTimer(boolean)
    {
        androidx.metrics.performance.JankStatsApi24Impl r0;
        boolean z0;
        android.view.Window r1, $r4, $r5;
        androidx.metrics.performance.DelegatingFrameMetricsListener r2;
        android.view.Window$OnFrameMetricsAvailableListener $r3, $r6;
        long $l0, $l2;
        byte $b1;
        java.lang.Throwable $r7;
        kotlin.Unit $r8;

        r0 := @this: androidx.metrics.performance.JankStatsApi24Impl;

        z0 := @parameter0: boolean;

        r1 = r0.<androidx.metrics.performance.JankStatsApi24Impl: android.view.Window window>;

        entermonitor r1;

     label1:
        if z0 == 0 goto label2;

        $l0 = r0.<androidx.metrics.performance.JankStatsApi24Impl: long listenerAddedTime>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label3;

        $r5 = r0.<androidx.metrics.performance.JankStatsApi24Impl: android.view.Window window>;

        r2 = specialinvoke r0.<androidx.metrics.performance.JankStatsApi24Impl: androidx.metrics.performance.DelegatingFrameMetricsListener getOrCreateFrameMetricsListenerDelegator(android.view.Window)>($r5);

        $r6 = r0.<androidx.metrics.performance.JankStatsApi24Impl: android.view.Window$OnFrameMetricsAvailableListener frameMetricsAvailableListenerDelegate>;

        virtualinvoke r2.<androidx.metrics.performance.DelegatingFrameMetricsListener: void add(android.view.Window$OnFrameMetricsAvailableListener)>($r6);

        $l2 = staticinvoke <java.lang.System: long nanoTime()>();

        r0.<androidx.metrics.performance.JankStatsApi24Impl: long listenerAddedTime> = $l2;

        goto label3;

     label2:
        $r4 = r0.<androidx.metrics.performance.JankStatsApi24Impl: android.view.Window window>;

        $r3 = r0.<androidx.metrics.performance.JankStatsApi24Impl: android.view.Window$OnFrameMetricsAvailableListener frameMetricsAvailableListenerDelegate>;

        specialinvoke r0.<androidx.metrics.performance.JankStatsApi24Impl: void removeFrameMetricsListenerDelegate(android.view.Window,android.view.Window$OnFrameMetricsAvailableListener)>($r4, $r3);

        r0.<androidx.metrics.performance.JankStatsApi24Impl: long listenerAddedTime> = 0L;

     label3:
        $r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label4:
        exitmonitor r1;

        goto label7;

     label5:
        $r7 := @caughtexception;

     label6:
        exitmonitor r1;

        throw $r7;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private final void removeFrameMetricsListenerDelegate(android.view.Window, android.view.Window$OnFrameMetricsAvailableListener)
    {
        androidx.metrics.performance.JankStatsApi24Impl r0;
        android.view.Window $r1;
        android.view.Window$OnFrameMetricsAvailableListener r2;
        androidx.metrics.performance.DelegatingFrameMetricsListener r3;
        android.view.View $r5;
        int $i0;
        java.lang.Object $r6;

        r0 := @this: androidx.metrics.performance.JankStatsApi24Impl;

        $r1 := @parameter0: android.view.Window;

        r2 := @parameter1: android.view.Window$OnFrameMetricsAvailableListener;

        $r5 = virtualinvoke $r1.<android.view.Window: android.view.View getDecorView()>();

        $i0 = <androidx.metrics.performance.R$id: int metricsDelegator>;

        $r6 = virtualinvoke $r5.<android.view.View: java.lang.Object getTag(int)>($i0);

        r3 = (androidx.metrics.performance.DelegatingFrameMetricsListener) $r6;

        if r3 == null goto label1;

        virtualinvoke r3.<androidx.metrics.performance.DelegatingFrameMetricsListener: void remove(android.view.Window$OnFrameMetricsAvailableListener,android.view.Window)>(r2, $r1);

        goto label1;

     label1:
        return;
    }

    private final androidx.metrics.performance.DelegatingFrameMetricsListener getOrCreateFrameMetricsListenerDelegator(android.view.Window)
    {
        androidx.metrics.performance.JankStatsApi24Impl r0;
        android.view.Window $r1;
        java.util.List r2;
        android.os.HandlerThread r3, $r12;
        android.view.View $r4, $r11;
        int $i0, $i1;
        java.lang.Object $r5;
        java.util.ArrayList $r6;
        androidx.metrics.performance.DelegatingFrameMetricsListener $r7, r16;
        android.os.Handler $r8, $r9, $r14;
        android.view.Window$OnFrameMetricsAvailableListener $r10;
        androidx.metrics.performance.JankStatsApi24Impl$Companion $r13;
        android.os.Looper $r15;

        r0 := @this: androidx.metrics.performance.JankStatsApi24Impl;

        $r1 := @parameter0: android.view.Window;

        $r4 = virtualinvoke $r1.<android.view.Window: android.view.View getDecorView()>();

        $i0 = <androidx.metrics.performance.R$id: int metricsDelegator>;

        $r5 = virtualinvoke $r4.<android.view.View: java.lang.Object getTag(int)>($i0);

        r16 = (androidx.metrics.performance.DelegatingFrameMetricsListener) $r5;

        if r16 != null goto label2;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r2 = (java.util.List) $r6;

        $r7 = new androidx.metrics.performance.DelegatingFrameMetricsListener;

        specialinvoke $r7.<androidx.metrics.performance.DelegatingFrameMetricsListener: void <init>(java.util.List)>(r2);

        r16 = $r7;

        $r8 = <androidx.metrics.performance.JankStatsApi24Impl: android.os.Handler frameMetricsHandler>;

        if $r8 != null goto label1;

        $r12 = new android.os.HandlerThread;

        specialinvoke $r12.<android.os.HandlerThread: void <init>(java.lang.String)>("FrameMetricsAggregator");

        r3 = $r12;

        virtualinvoke r3.<android.os.HandlerThread: void start()>();

        $r13 = <androidx.metrics.performance.JankStatsApi24Impl: androidx.metrics.performance.JankStatsApi24Impl$Companion Companion>;

        $r14 = new android.os.Handler;

        $r15 = virtualinvoke r3.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r14.<android.os.Handler: void <init>(android.os.Looper)>($r15);

        <androidx.metrics.performance.JankStatsApi24Impl: android.os.Handler frameMetricsHandler> = $r14;

     label1:
        $r10 = (android.view.Window$OnFrameMetricsAvailableListener) r16;

        $r9 = <androidx.metrics.performance.JankStatsApi24Impl: android.os.Handler frameMetricsHandler>;

        virtualinvoke $r1.<android.view.Window: void addOnFrameMetricsAvailableListener(android.view.Window$OnFrameMetricsAvailableListener,android.os.Handler)>($r10, $r9);

        $r11 = virtualinvoke $r1.<android.view.Window: android.view.View getDecorView()>();

        $i1 = <androidx.metrics.performance.R$id: int metricsDelegator>;

        virtualinvoke $r11.<android.view.View: void setTag(int,java.lang.Object)>($i1, r16);

     label2:
        return r16;
    }

    private static final void frameMetricsAvailableListenerDelegate$lambda-0(androidx.metrics.performance.JankStatsApi24Impl, androidx.metrics.performance.JankStats, android.view.Window, android.view.FrameMetrics, int)
    {
        androidx.metrics.performance.JankStatsApi24Impl r0;
        androidx.metrics.performance.JankStats $r1;
        android.view.Window r2;
        android.view.FrameMetrics r3;
        int i0;
        long l1, $l2, $l3, $l4, $l6, $l8, $l9;
        float f0, $f1, $f2;
        byte $b5, $b7;
        androidx.metrics.performance.FrameDataApi24 $r4;
        androidx.metrics.performance.FrameData $r5;

        r0 := @parameter0: androidx.metrics.performance.JankStatsApi24Impl;

        $r1 := @parameter1: androidx.metrics.performance.JankStats;

        r2 := @parameter2: android.view.Window;

        r3 := @parameter3: android.view.FrameMetrics;

        i0 := @parameter4: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$jankStats");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "frameMetrics");

        $l2 = virtualinvoke r0.<androidx.metrics.performance.JankStatsApi24Impl: long getFrameStartTime$metrics_performance_release(android.view.FrameMetrics)>(r3);

        $l3 = r0.<androidx.metrics.performance.JankStatsApi24Impl: long prevEnd>;

        l1 = staticinvoke <java.lang.Math: long max(long,long)>($l2, $l3);

        $l4 = r0.<androidx.metrics.performance.JankStatsApi24Impl: long listenerAddedTime>;

        $b5 = l1 cmp $l4;

        if $b5 < 0 goto label1;

        $l6 = r0.<androidx.metrics.performance.JankStatsApi24Impl: long prevStart>;

        $b7 = l1 cmp $l6;

        if $b7 == 0 goto label1;

        $l8 = virtualinvoke r0.<androidx.metrics.performance.JankStatsApi24Impl: long getExpectedFrameDuration(android.view.FrameMetrics)>(r3);

        $f1 = (float) $l8;

        $f2 = virtualinvoke $r1.<androidx.metrics.performance.JankStats: float getJankHeuristicMultiplier()>();

        f0 = $f1 * $f2;

        $l9 = (long) f0;

        $r4 = virtualinvoke r0.<androidx.metrics.performance.JankStatsApi24Impl: androidx.metrics.performance.FrameDataApi24 getFrameData$metrics_performance_release(long,long,android.view.FrameMetrics)>(l1, $l9, r3);

        $r5 = (androidx.metrics.performance.FrameData) $r4;

        virtualinvoke $r1.<androidx.metrics.performance.JankStats: void logFrameData$metrics_performance_release(androidx.metrics.performance.FrameData)>($r5);

        r0.<androidx.metrics.performance.JankStatsApi24Impl: long prevStart> = l1;

     label1:
        return;
    }

    public static final android.os.Handler access$getFrameMetricsHandler$cp()
    {
        android.os.Handler $r0;

        $r0 = <androidx.metrics.performance.JankStatsApi24Impl: android.os.Handler frameMetricsHandler>;

        return $r0;
    }

    public static final void access$setFrameMetricsHandler$cp(android.os.Handler)
    {
        android.os.Handler r0;

        r0 := @parameter0: android.os.Handler;

        <androidx.metrics.performance.JankStatsApi24Impl: android.os.Handler frameMetricsHandler> = r0;

        return;
    }

    static void <clinit>()
    {
        androidx.metrics.performance.JankStatsApi24Impl$Companion $r0;

        $r0 = new androidx.metrics.performance.JankStatsApi24Impl$Companion;

        specialinvoke $r0.<androidx.metrics.performance.JankStatsApi24Impl$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.metrics.performance.JankStatsApi24Impl: androidx.metrics.performance.JankStatsApi24Impl$Companion Companion> = $r0;

        return;
    }

androidx.metrics.performance.JankStatsApi24Impl$Companion
    private void <init>()
    {
        androidx.metrics.performance.JankStatsApi24Impl$Companion r0;

        r0 := @this: androidx.metrics.performance.JankStatsApi24Impl$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final android.os.Handler getFrameMetricsHandler$metrics_performance_release()
    {
        androidx.metrics.performance.JankStatsApi24Impl$Companion r0;
        android.os.Handler $r1;

        r0 := @this: androidx.metrics.performance.JankStatsApi24Impl$Companion;

        $r1 = staticinvoke <androidx.metrics.performance.JankStatsApi24Impl: android.os.Handler access$getFrameMetricsHandler$cp()>();

        return $r1;
    }

    public final void setFrameMetricsHandler$metrics_performance_release(android.os.Handler)
    {
        androidx.metrics.performance.JankStatsApi24Impl$Companion r0;
        android.os.Handler r1;

        r0 := @this: androidx.metrics.performance.JankStatsApi24Impl$Companion;

        r1 := @parameter0: android.os.Handler;

        staticinvoke <androidx.metrics.performance.JankStatsApi24Impl: void access$setFrameMetricsHandler$cp(android.os.Handler)>(r1);

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.metrics.performance.JankStatsApi24Impl$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.metrics.performance.JankStatsApi24Impl$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.metrics.performance.JankStatsApi24Impl$Companion: void <init>()>();

        return;
    }

