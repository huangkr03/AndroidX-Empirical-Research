kotlin.NumbersKt__NumbersJVMKt
    public void <init>()
    {
        kotlin.NumbersKt__NumbersJVMKt $r0;

        $r0 := @this: kotlin.NumbersKt__NumbersJVMKt;

        specialinvoke $r0.<kotlin.NumbersKt__FloorDivModKt: void <init>()>();

        return;
    }

    private static final int countLeadingZeroBits(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>($i0);

        return $i0;
    }

    private static final int countLeadingZeroBits(long)
    {
        int $i0;
        long $l1;

        $l1 := @parameter0: long;

        $i0 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>($l1);

        return $i0;
    }

    private static final int countOneBits(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = staticinvoke <java.lang.Integer: int bitCount(int)>($i0);

        return $i0;
    }

    private static final int countOneBits(long)
    {
        int $i0;
        long $l1;

        $l1 := @parameter0: long;

        $i0 = staticinvoke <java.lang.Long: int bitCount(long)>($l1);

        return $i0;
    }

    private static final int countTrailingZeroBits(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = staticinvoke <java.lang.Integer: int numberOfTrailingZeros(int)>($i0);

        return $i0;
    }

    private static final int countTrailingZeroBits(long)
    {
        int $i0;
        long $l1;

        $l1 := @parameter0: long;

        $i0 = staticinvoke <java.lang.Long: int numberOfTrailingZeros(long)>($l1);

        return $i0;
    }

    private static final double fromBits(kotlin.jvm.internal.DoubleCompanionObject, long)
    {
        long $l0;
        double $d0;
        kotlin.jvm.internal.DoubleCompanionObject $r0;

        $r0 := @parameter0: kotlin.jvm.internal.DoubleCompanionObject;

        $l0 := @parameter1: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l0);

        return $d0;
    }

    private static final float fromBits(kotlin.jvm.internal.FloatCompanionObject, int)
    {
        int $i0;
        float $f0;
        kotlin.jvm.internal.FloatCompanionObject $r0;

        $r0 := @parameter0: kotlin.jvm.internal.FloatCompanionObject;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i0);

        return $f0;
    }

    private static final boolean isFinite(double)
    {
        double $d0;
        boolean $z0;

        $d0 := @parameter0: double;

        $z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d0);

        if $z0 != 0 goto label1;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static final boolean isFinite(float)
    {
        float $f0;
        boolean $z0;

        $f0 := @parameter0: float;

        $z0 = staticinvoke <java.lang.Float: boolean isInfinite(float)>($f0);

        if $z0 != 0 goto label1;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f0);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static final boolean isInfinite(double)
    {
        boolean $z0;
        double $d0;

        $d0 := @parameter0: double;

        $z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d0);

        return $z0;
    }

    private static final boolean isInfinite(float)
    {
        boolean $z0;
        float $f0;

        $f0 := @parameter0: float;

        $z0 = staticinvoke <java.lang.Float: boolean isInfinite(float)>($f0);

        return $z0;
    }

    private static final boolean isNaN(double)
    {
        boolean $z0;
        double $d0;

        $d0 := @parameter0: double;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        return $z0;
    }

    private static final boolean isNaN(float)
    {
        boolean $z0;
        float $f0;

        $f0 := @parameter0: float;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f0);

        return $z0;
    }

    private static final int rotateLeft(int, int)
    {
        int $i0, $i1;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 = staticinvoke <java.lang.Integer: int rotateLeft(int,int)>($i1, $i0);

        return $i1;
    }

    private static final long rotateLeft(long, int)
    {
        int $i0;
        long $l1;

        $l1 := @parameter0: long;

        $i0 := @parameter1: int;

        $l1 = staticinvoke <java.lang.Long: long rotateLeft(long,int)>($l1, $i0);

        return $l1;
    }

    private static final int rotateRight(int, int)
    {
        int $i0, $i1;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 = staticinvoke <java.lang.Integer: int rotateRight(int,int)>($i1, $i0);

        return $i1;
    }

    private static final long rotateRight(long, int)
    {
        int $i0;
        long $l1;

        $l1 := @parameter0: long;

        $i0 := @parameter1: int;

        $l1 = staticinvoke <java.lang.Long: long rotateRight(long,int)>($l1, $i0);

        return $l1;
    }

    private static final int takeHighestOneBit(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = staticinvoke <java.lang.Integer: int highestOneBit(int)>($i0);

        return $i0;
    }

    private static final long takeHighestOneBit(long)
    {
        long $l0;

        $l0 := @parameter0: long;

        $l0 = staticinvoke <java.lang.Long: long highestOneBit(long)>($l0);

        return $l0;
    }

    private static final int takeLowestOneBit(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = staticinvoke <java.lang.Integer: int lowestOneBit(int)>($i0);

        return $i0;
    }

    private static final long takeLowestOneBit(long)
    {
        long $l0;

        $l0 := @parameter0: long;

        $l0 = staticinvoke <java.lang.Long: long lowestOneBit(long)>($l0);

        return $l0;
    }

    private static final int toBits(float)
    {
        int $i0;
        float $f0;

        $f0 := @parameter0: float;

        $i0 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f0);

        return $i0;
    }

    private static final long toBits(double)
    {
        long $l0;
        double $d0;

        $d0 := @parameter0: double;

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        return $l0;
    }

    private static final int toRawBits(float)
    {
        int $i0;
        float $f0;

        $f0 := @parameter0: float;

        $i0 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>($f0);

        return $i0;
    }

    private static final long toRawBits(double)
    {
        long $l0;
        double $d0;

        $d0 := @parameter0: double;

        $l0 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>($d0);

        return $l0;
    }

