io.grpc.internal.ChannelTracer
<io.grpc.internal.ChannelTracer: java.util.logging.Logger logger>
<io.grpc.internal.ChannelTracer: long channelCreationTimeNanos>
<io.grpc.internal.ChannelTracer: java.util.Collection events>
<io.grpc.internal.ChannelTracer: int eventsLogged>
<io.grpc.internal.ChannelTracer: java.lang.Object lock>
<io.grpc.internal.ChannelTracer: io.grpc.InternalLogId logId>
    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "Lio/grpc/ChannelLogger;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <io.grpc.internal.ChannelTracer: java.util.logging.Logger logger> = $r2;

        return;
    }

    void <init>(io.grpc.InternalLogId, int, long, java.lang.String)
    {
        io.grpc.internal.ChannelTracer $r0;
        long $l0;
        io.grpc.InternalLogId $r1;
        int $i1;
        java.lang.String $r2;
        java.lang.Object $r3, r8;
        io.grpc.InternalChannelz$ChannelTrace$Event$Builder $r4, r10;
        java.lang.StringBuilder $r5, r11;
        io.grpc.InternalChannelz$ChannelTrace$Event$Severity $r6;
        io.grpc.InternalChannelz$ChannelTrace$Event $r7;
        io.grpc.internal.ChannelTracer$1 r9;
        java.util.Collection r12;

        $r0 := @this: io.grpc.internal.ChannelTracer;

        $r1 := @parameter0: io.grpc.InternalLogId;

        $i1 := @parameter1: int;

        $l0 := @parameter2: long;

        $r2 := @parameter3: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        r8 = new java.lang.Object;

        specialinvoke r8.<java.lang.Object: void <init>()>();

        $r0.<io.grpc.internal.ChannelTracer: java.lang.Object lock> = r8;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r2, "description");

        $r3 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "logId");

        $r1 = (io.grpc.InternalLogId) $r3;

        $r0.<io.grpc.internal.ChannelTracer: io.grpc.InternalLogId logId> = $r1;

        if $i1 <= 0 goto label1;

        r9 = new io.grpc.internal.ChannelTracer$1;

        specialinvoke r9.<io.grpc.internal.ChannelTracer$1: void <init>(io.grpc.internal.ChannelTracer,int)>($r0, $i1);

        r12 = (java.util.Collection) r9;

        $r0.<io.grpc.internal.ChannelTracer: java.util.Collection events> = r12;

        goto label2;

     label1:
        $r0.<io.grpc.internal.ChannelTracer: java.util.Collection events> = null;

     label2:
        $r0.<io.grpc.internal.ChannelTracer: long channelCreationTimeNanos> = $l0;

        r10 = new io.grpc.InternalChannelz$ChannelTrace$Event$Builder;

        specialinvoke r10.<io.grpc.InternalChannelz$ChannelTrace$Event$Builder: void <init>()>();

        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" created");

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = virtualinvoke r10.<io.grpc.InternalChannelz$ChannelTrace$Event$Builder: io.grpc.InternalChannelz$ChannelTrace$Event$Builder setDescription(java.lang.String)>($r2);

        $r6 = <io.grpc.InternalChannelz$ChannelTrace$Event$Severity: io.grpc.InternalChannelz$ChannelTrace$Event$Severity CT_INFO>;

        $r4 = virtualinvoke $r4.<io.grpc.InternalChannelz$ChannelTrace$Event$Builder: io.grpc.InternalChannelz$ChannelTrace$Event$Builder setSeverity(io.grpc.InternalChannelz$ChannelTrace$Event$Severity)>($r6);

        $r4 = virtualinvoke $r4.<io.grpc.InternalChannelz$ChannelTrace$Event$Builder: io.grpc.InternalChannelz$ChannelTrace$Event$Builder setTimestampNanos(long)>($l0);

        $r7 = virtualinvoke $r4.<io.grpc.InternalChannelz$ChannelTrace$Event$Builder: io.grpc.InternalChannelz$ChannelTrace$Event build()>();

        virtualinvoke $r0.<io.grpc.internal.ChannelTracer: void reportEvent(io.grpc.InternalChannelz$ChannelTrace$Event)>($r7);

        return;
    }

    static int access$008(io.grpc.internal.ChannelTracer)
    {
        io.grpc.internal.ChannelTracer $r0;
        int $i0, $i1;

        $r0 := @parameter0: io.grpc.internal.ChannelTracer;

        $i0 = $r0.<io.grpc.internal.ChannelTracer: int eventsLogged>;

        $i1 = $i0 + 1;

        $r0.<io.grpc.internal.ChannelTracer: int eventsLogged> = $i1;

        return $i0;
    }

    static void logOnly(io.grpc.InternalLogId, java.util.logging.Level, java.lang.String)
    {
        java.util.logging.Level $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;
        io.grpc.InternalLogId $r3;
        boolean $z0;
        java.util.logging.LogRecord $r4;
        java.lang.StringBuilder $r5;

        $r3 := @parameter0: io.grpc.InternalLogId;

        $r0 := @parameter1: java.util.logging.Level;

        $r1 := @parameter2: java.lang.String;

        $r2 = <io.grpc.internal.ChannelTracer: java.util.logging.Logger logger>;

        $z0 = virtualinvoke $r2.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r0);

        if $z0 == 0 goto label1;

        $r4 = new java.util.logging.LogRecord;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.util.logging.LogRecord: void <init>(java.util.logging.Level,java.lang.String)>($r0, $r1);

        $r1 = virtualinvoke $r2.<java.util.logging.Logger: java.lang.String getName()>();

        virtualinvoke $r4.<java.util.logging.LogRecord: void setLoggerName(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.util.logging.Logger: java.lang.String getName()>();

        virtualinvoke $r4.<java.util.logging.LogRecord: void setSourceClassName(java.lang.String)>($r1);

        virtualinvoke $r4.<java.util.logging.LogRecord: void setSourceMethodName(java.lang.String)>("log");

        virtualinvoke $r2.<java.util.logging.Logger: void log(java.util.logging.LogRecord)>($r4);

     label1:
        return;
    }

    io.grpc.InternalLogId getLogId()
    {
        io.grpc.internal.ChannelTracer $r0;
        io.grpc.InternalLogId r1;

        $r0 := @this: io.grpc.internal.ChannelTracer;

        r1 = $r0.<io.grpc.internal.ChannelTracer: io.grpc.InternalLogId logId>;

        return r1;
    }

    boolean isTraceEnabled()
    {
        io.grpc.internal.ChannelTracer $r0;
        java.lang.Object $r1;
        java.util.Collection $r2;
        boolean $z0;

        $r0 := @this: io.grpc.internal.ChannelTracer;

        $r1 = $r0.<io.grpc.internal.ChannelTracer: java.lang.Object lock>;

        entermonitor $r1;

        $r2 = $r0.<io.grpc.internal.ChannelTracer: java.util.Collection events>;

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        exitmonitor $r1;

        return $z0;
    }

    void reportEvent(io.grpc.InternalChannelz$ChannelTrace$Event)
    {
        io.grpc.internal.ChannelTracer $r0;
        int $i0;
        io.grpc.InternalChannelz$ChannelTrace$Event $r1;
        int[] $r2;
        io.grpc.InternalChannelz$ChannelTrace$Event$Severity $r3;
        java.util.logging.Level $r4;
        io.grpc.InternalLogId $r5;
        java.lang.String $r6;

        $r0 := @this: io.grpc.internal.ChannelTracer;

        $r1 := @parameter0: io.grpc.InternalChannelz$ChannelTrace$Event;

        $r2 = <io.grpc.internal.ChannelTracer$2: int[] $SwitchMap$io$grpc$InternalChannelz$ChannelTrace$Event$Severity>;

        $r3 = $r1.<io.grpc.InternalChannelz$ChannelTrace$Event: io.grpc.InternalChannelz$ChannelTrace$Event$Severity severity>;

        $i0 = virtualinvoke $r3.<io.grpc.InternalChannelz$ChannelTrace$Event$Severity: int ordinal()>();

        $i0 = $r2[$i0];

        lookupswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label2;
            default: goto label1;
        };

     label1:
        $r4 = <java.util.logging.Level: java.util.logging.Level FINEST>;

        goto label4;

     label2:
        $r4 = <java.util.logging.Level: java.util.logging.Level FINER>;

        goto label4;

     label3:
        $r4 = <java.util.logging.Level: java.util.logging.Level FINE>;

     label4:
        virtualinvoke $r0.<io.grpc.internal.ChannelTracer: void traceOnly(io.grpc.InternalChannelz$ChannelTrace$Event)>($r1);

        $r5 = $r0.<io.grpc.internal.ChannelTracer: io.grpc.InternalLogId logId>;

        $r6 = $r1.<io.grpc.InternalChannelz$ChannelTrace$Event: java.lang.String description>;

        staticinvoke <io.grpc.internal.ChannelTracer: void logOnly(io.grpc.InternalLogId,java.util.logging.Level,java.lang.String)>($r5, $r4, $r6);

        return;
    }

    void traceOnly(io.grpc.InternalChannelz$ChannelTrace$Event)
    {
        io.grpc.internal.ChannelTracer $r0;
        java.lang.Object $r1;
        java.util.Collection $r2;
        io.grpc.InternalChannelz$ChannelTrace$Event $r3;
        java.lang.Throwable $r4;

        $r0 := @this: io.grpc.internal.ChannelTracer;

        $r3 := @parameter0: io.grpc.InternalChannelz$ChannelTrace$Event;

        $r1 = $r0.<io.grpc.internal.ChannelTracer: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<io.grpc.internal.ChannelTracer: java.util.Collection events>;

        if $r2 == null goto label2;

        interfaceinvoke $r2.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        exitmonitor $r1;

        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor $r1;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

io.grpc.internal.ChannelTracer$1
<io.grpc.internal.ChannelTracer$1: io.grpc.internal.ChannelTracer this$0>
<io.grpc.internal.ChannelTracer$1: int val$maxEvents>
    void <init>(io.grpc.internal.ChannelTracer, int)
    {
        io.grpc.internal.ChannelTracer$1 $r0;
        io.grpc.internal.ChannelTracer $r1;
        int $i0;

        $r0 := @this: io.grpc.internal.ChannelTracer$1;

        $r1 := @parameter0: io.grpc.internal.ChannelTracer;

        $i0 := @parameter1: int;

        $r0.<io.grpc.internal.ChannelTracer$1: io.grpc.internal.ChannelTracer this$0> = $r1;

        $r0.<io.grpc.internal.ChannelTracer$1: int val$maxEvents> = $i0;

        specialinvoke $r0.<java.util.ArrayDeque: void <init>()>();

        return;
    }

    public boolean add(io.grpc.InternalChannelz$ChannelTrace$Event)
    {
        io.grpc.internal.ChannelTracer$1 $r0;
        int $i0, $i1;
        io.grpc.InternalChannelz$ChannelTrace$Event $r1;
        io.grpc.internal.ChannelTracer $r2;
        boolean $z0;

        $r0 := @this: io.grpc.internal.ChannelTracer$1;

        $r1 := @parameter0: io.grpc.InternalChannelz$ChannelTrace$Event;

        $i1 = virtualinvoke $r0.<io.grpc.internal.ChannelTracer$1: int size()>();

        $i0 = $r0.<io.grpc.internal.ChannelTracer$1: int val$maxEvents>;

        if $i1 != $i0 goto label1;

        virtualinvoke $r0.<io.grpc.internal.ChannelTracer$1: java.lang.Object removeFirst()>();

     label1:
        $r2 = $r0.<io.grpc.internal.ChannelTracer$1: io.grpc.internal.ChannelTracer this$0>;

        staticinvoke <io.grpc.internal.ChannelTracer: int access$008(io.grpc.internal.ChannelTracer)>($r2);

        $z0 = specialinvoke $r0.<java.util.ArrayDeque: boolean add(java.lang.Object)>($r1);

        return $z0;
    }

    public volatile boolean add(java.lang.Object)
    {
        io.grpc.internal.ChannelTracer$1 $r0;
        boolean $z0;
        java.lang.Object $r1;
        io.grpc.InternalChannelz$ChannelTrace$Event $r2;

        $r0 := @this: io.grpc.internal.ChannelTracer$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (io.grpc.InternalChannelz$ChannelTrace$Event) $r1;

        $z0 = virtualinvoke $r0.<io.grpc.internal.ChannelTracer$1: boolean add(io.grpc.InternalChannelz$ChannelTrace$Event)>($r2);

        return $z0;
    }

io.grpc.internal.ChannelTracer$2
<io.grpc.internal.ChannelTracer$2: int[] $SwitchMap$io$grpc$InternalChannelz$ChannelTrace$Event$Severity>
    static void <clinit>()
    {
        io.grpc.InternalChannelz$ChannelTrace$Event$Severity[] $r0;
        int $i0;
        int[] $r1;
        io.grpc.InternalChannelz$ChannelTrace$Event$Severity $r2;
        java.lang.Throwable $r3, $r4;

        $r0 = staticinvoke <io.grpc.InternalChannelz$ChannelTrace$Event$Severity: io.grpc.InternalChannelz$ChannelTrace$Event$Severity[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <io.grpc.internal.ChannelTracer$2: int[] $SwitchMap$io$grpc$InternalChannelz$ChannelTrace$Event$Severity> = $r1;

        $r2 = <io.grpc.InternalChannelz$ChannelTrace$Event$Severity: io.grpc.InternalChannelz$ChannelTrace$Event$Severity CT_ERROR>;

     label1:
        $i0 = virtualinvoke $r2.<io.grpc.InternalChannelz$ChannelTrace$Event$Severity: int ordinal()>();

     label2:
        $r1[$i0] = 1;

        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        $r1 = <io.grpc.internal.ChannelTracer$2: int[] $SwitchMap$io$grpc$InternalChannelz$ChannelTrace$Event$Severity>;

        $r2 = <io.grpc.InternalChannelz$ChannelTrace$Event$Severity: io.grpc.InternalChannelz$ChannelTrace$Event$Severity CT_WARNING>;

     label5:
        $i0 = virtualinvoke $r2.<io.grpc.InternalChannelz$ChannelTrace$Event$Severity: int ordinal()>();

     label6:
        $r1[$i0] = 2;

        return;

     label7:
        $r4 := @caughtexception;

        return;

        catch java.lang.NoSuchFieldError from label1 to label2 with label3;
        catch java.lang.NoSuchFieldError from label5 to label6 with label7;
    }

