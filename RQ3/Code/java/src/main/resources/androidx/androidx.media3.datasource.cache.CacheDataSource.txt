androidx.media3.datasource.cache.CacheDataSource
<androidx.media3.datasource.cache.CacheDataSource: int FLAG_BLOCK_ON_CACHE>
<androidx.media3.datasource.cache.CacheDataSource: int FLAG_IGNORE_CACHE_ON_ERROR>
<androidx.media3.datasource.cache.CacheDataSource: int FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS>
<androidx.media3.datasource.cache.CacheDataSource: int CACHE_NOT_IGNORED>
<androidx.media3.datasource.cache.CacheDataSource: int CACHE_IGNORED_REASON_ERROR>
<androidx.media3.datasource.cache.CacheDataSource: int CACHE_IGNORED_REASON_UNSET_LENGTH>
<androidx.media3.datasource.cache.CacheDataSource: long MIN_READ_BEFORE_CHECKING_CACHE>
<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.cache.Cache cache>
<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSource cacheReadDataSource>
<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSource cacheWriteDataSource>
<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSource upstreamDataSource>
<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.cache.CacheKeyFactory cacheKeyFactory>
<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.cache.CacheDataSource$EventListener eventListener>
<androidx.media3.datasource.cache.CacheDataSource: boolean blockOnCache>
<androidx.media3.datasource.cache.CacheDataSource: boolean ignoreCacheOnError>
<androidx.media3.datasource.cache.CacheDataSource: boolean ignoreCacheForUnsetLengthRequests>
<androidx.media3.datasource.cache.CacheDataSource: android.net.Uri actualUri>
<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSpec requestDataSpec>
<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSpec currentDataSpec>
<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSource currentDataSource>
<androidx.media3.datasource.cache.CacheDataSource: long currentDataSourceBytesRead>
<androidx.media3.datasource.cache.CacheDataSource: long readPosition>
<androidx.media3.datasource.cache.CacheDataSource: long bytesRemaining>
<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.cache.CacheSpan currentHoleSpan>
<androidx.media3.datasource.cache.CacheDataSource: boolean seenCacheError>
<androidx.media3.datasource.cache.CacheDataSource: boolean currentRequestIgnoresCache>
<androidx.media3.datasource.cache.CacheDataSource: long totalCachedBytesRead>
<androidx.media3.datasource.cache.CacheDataSource: long checkCachePosition>
    public void <init>(androidx.media3.datasource.cache.Cache, androidx.media3.datasource.DataSource)
    {
        androidx.media3.datasource.cache.CacheDataSource r0;
        androidx.media3.datasource.cache.Cache r1;
        androidx.media3.datasource.DataSource r2;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource;

        r1 := @parameter0: androidx.media3.datasource.cache.Cache;

        r2 := @parameter1: androidx.media3.datasource.DataSource;

        specialinvoke r0.<androidx.media3.datasource.cache.CacheDataSource: void <init>(androidx.media3.datasource.cache.Cache,androidx.media3.datasource.DataSource,int)>(r1, r2, 0);

        return;
    }

    public void <init>(androidx.media3.datasource.cache.Cache, androidx.media3.datasource.DataSource, int)
    {
        androidx.media3.datasource.cache.CacheDataSource r0;
        androidx.media3.datasource.cache.Cache r1;
        androidx.media3.datasource.DataSource r2;
        int i0;
        androidx.media3.datasource.FileDataSource $r3;
        androidx.media3.datasource.cache.CacheDataSink $r4;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource;

        r1 := @parameter0: androidx.media3.datasource.cache.Cache;

        r2 := @parameter1: androidx.media3.datasource.DataSource;

        i0 := @parameter2: int;

        $r3 = new androidx.media3.datasource.FileDataSource;

        specialinvoke $r3.<androidx.media3.datasource.FileDataSource: void <init>()>();

        $r4 = new androidx.media3.datasource.cache.CacheDataSink;

        specialinvoke $r4.<androidx.media3.datasource.cache.CacheDataSink: void <init>(androidx.media3.datasource.cache.Cache,long)>(r1, 5242880L);

        specialinvoke r0.<androidx.media3.datasource.cache.CacheDataSource: void <init>(androidx.media3.datasource.cache.Cache,androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSink,int,androidx.media3.datasource.cache.CacheDataSource$EventListener)>(r1, r2, $r3, $r4, i0, null);

        return;
    }

    public void <init>(androidx.media3.datasource.cache.Cache, androidx.media3.datasource.DataSource, androidx.media3.datasource.DataSource, androidx.media3.datasource.DataSink, int, androidx.media3.datasource.cache.CacheDataSource$EventListener)
    {
        androidx.media3.datasource.cache.CacheDataSource r0;
        androidx.media3.datasource.cache.Cache r1;
        androidx.media3.datasource.DataSource r2, r3;
        androidx.media3.datasource.DataSink r4;
        int i0;
        androidx.media3.datasource.cache.CacheDataSource$EventListener r5;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource;

        r1 := @parameter0: androidx.media3.datasource.cache.Cache;

        r2 := @parameter1: androidx.media3.datasource.DataSource;

        r3 := @parameter2: androidx.media3.datasource.DataSource;

        r4 := @parameter3: androidx.media3.datasource.DataSink;

        i0 := @parameter4: int;

        r5 := @parameter5: androidx.media3.datasource.cache.CacheDataSource$EventListener;

        specialinvoke r0.<androidx.media3.datasource.cache.CacheDataSource: void <init>(androidx.media3.datasource.cache.Cache,androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSink,int,androidx.media3.datasource.cache.CacheDataSource$EventListener,androidx.media3.datasource.cache.CacheKeyFactory)>(r1, r2, r3, r4, i0, r5, null);

        return;
    }

    public void <init>(androidx.media3.datasource.cache.Cache, androidx.media3.datasource.DataSource, androidx.media3.datasource.DataSource, androidx.media3.datasource.DataSink, int, androidx.media3.datasource.cache.CacheDataSource$EventListener, androidx.media3.datasource.cache.CacheKeyFactory)
    {
        androidx.media3.datasource.cache.CacheDataSource r0;
        androidx.media3.datasource.cache.Cache r1;
        androidx.media3.datasource.DataSource r2, r3;
        androidx.media3.datasource.DataSink r4;
        int i0;
        androidx.media3.datasource.cache.CacheDataSource$EventListener r5;
        androidx.media3.datasource.cache.CacheKeyFactory r6;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource;

        r1 := @parameter0: androidx.media3.datasource.cache.Cache;

        r2 := @parameter1: androidx.media3.datasource.DataSource;

        r3 := @parameter2: androidx.media3.datasource.DataSource;

        r4 := @parameter3: androidx.media3.datasource.DataSink;

        i0 := @parameter4: int;

        r5 := @parameter5: androidx.media3.datasource.cache.CacheDataSource$EventListener;

        r6 := @parameter6: androidx.media3.datasource.cache.CacheKeyFactory;

        specialinvoke r0.<androidx.media3.datasource.cache.CacheDataSource: void <init>(androidx.media3.datasource.cache.Cache,androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSink,androidx.media3.datasource.cache.CacheKeyFactory,int,androidx.media3.common.PriorityTaskManager,int,androidx.media3.datasource.cache.CacheDataSource$EventListener)>(r1, r2, r3, r4, r6, i0, null, 0, r5);

        return;
    }

    private void <init>(androidx.media3.datasource.cache.Cache, androidx.media3.datasource.DataSource, androidx.media3.datasource.DataSource, androidx.media3.datasource.DataSink, androidx.media3.datasource.cache.CacheKeyFactory, int, androidx.media3.common.PriorityTaskManager, int, androidx.media3.datasource.cache.CacheDataSource$EventListener)
    {
        androidx.media3.datasource.cache.CacheDataSource r0;
        androidx.media3.datasource.cache.Cache r1;
        androidx.media3.datasource.DataSource r2, r19, r20, r21;
        androidx.media3.datasource.DataSink r3;
        androidx.media3.datasource.cache.CacheKeyFactory r4, $r15;
        int i0, i1, $i2, $i3, $i4;
        androidx.media3.common.PriorityTaskManager r5;
        androidx.media3.datasource.cache.CacheDataSource$EventListener r6;
        androidx.media3.datasource.PlaceholderDataSource $r7;
        java.lang.Object r14;
        boolean $z0, $z1, $z2;
        androidx.media3.datasource.TeeDataSource $r16, r18;
        androidx.media3.datasource.PriorityDataSource r17;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource;

        r1 := @parameter0: androidx.media3.datasource.cache.Cache;

        r14 := @parameter1: androidx.media3.datasource.DataSource;

        r2 := @parameter2: androidx.media3.datasource.DataSource;

        r3 := @parameter3: androidx.media3.datasource.DataSink;

        r4 := @parameter4: androidx.media3.datasource.cache.CacheKeyFactory;

        i0 := @parameter5: int;

        r5 := @parameter6: androidx.media3.common.PriorityTaskManager;

        i1 := @parameter7: int;

        r6 := @parameter8: androidx.media3.datasource.cache.CacheDataSource$EventListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.cache.Cache cache> = r1;

        r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSource cacheReadDataSource> = r2;

        if r4 == null goto label01;

        $r15 = r4;

        goto label02;

     label01:
        $r15 = <androidx.media3.datasource.cache.CacheKeyFactory: androidx.media3.datasource.cache.CacheKeyFactory DEFAULT>;

     label02:
        r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.cache.CacheKeyFactory cacheKeyFactory> = $r15;

        $i2 = i0 & 1;

        if $i2 == 0 goto label03;

        $z0 = 1;

        goto label04;

     label03:
        $z0 = 0;

     label04:
        r0.<androidx.media3.datasource.cache.CacheDataSource: boolean blockOnCache> = $z0;

        $i3 = i0 & 2;

        if $i3 == 0 goto label05;

        $z1 = 1;

        goto label06;

     label05:
        $z1 = 0;

     label06:
        r0.<androidx.media3.datasource.cache.CacheDataSource: boolean ignoreCacheOnError> = $z1;

        $i4 = i0 & 4;

        if $i4 == 0 goto label07;

        $z2 = 1;

        goto label08;

     label07:
        $z2 = 0;

     label08:
        r0.<androidx.media3.datasource.cache.CacheDataSource: boolean ignoreCacheForUnsetLengthRequests> = $z2;

        if r14 == null goto label12;

        if r5 == null goto label09;

        r17 = new androidx.media3.datasource.PriorityDataSource;

        r19 = (androidx.media3.datasource.DataSource) r14;

        specialinvoke r17.<androidx.media3.datasource.PriorityDataSource: void <init>(androidx.media3.datasource.DataSource,androidx.media3.common.PriorityTaskManager,int)>(r19, r5, i1);

        r14 = r17;

     label09:
        r20 = (androidx.media3.datasource.DataSource) r14;

        r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSource upstreamDataSource> = r20;

        if r3 == null goto label10;

        r18 = new androidx.media3.datasource.TeeDataSource;

        $r16 = r18;

        r21 = (androidx.media3.datasource.DataSource) r14;

        specialinvoke r18.<androidx.media3.datasource.TeeDataSource: void <init>(androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSink)>(r21, r3);

        goto label11;

     label10:
        $r16 = null;

     label11:
        r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSource cacheWriteDataSource> = $r16;

        goto label13;

     label12:
        $r7 = <androidx.media3.datasource.PlaceholderDataSource: androidx.media3.datasource.PlaceholderDataSource INSTANCE>;

        r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSource upstreamDataSource> = $r7;

        r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSource cacheWriteDataSource> = null;

     label13:
        r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.cache.CacheDataSource$EventListener eventListener> = r6;

        return;
    }

    public androidx.media3.datasource.cache.Cache getCache()
    {
        androidx.media3.datasource.cache.CacheDataSource r0;
        androidx.media3.datasource.cache.Cache $r1;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource;

        $r1 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.cache.Cache cache>;

        return $r1;
    }

    public androidx.media3.datasource.cache.CacheKeyFactory getCacheKeyFactory()
    {
        androidx.media3.datasource.cache.CacheDataSource r0;
        androidx.media3.datasource.cache.CacheKeyFactory $r1;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource;

        $r1 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.cache.CacheKeyFactory cacheKeyFactory>;

        return $r1;
    }

    public void addTransferListener(androidx.media3.datasource.TransferListener)
    {
        androidx.media3.datasource.cache.CacheDataSource r0;
        androidx.media3.datasource.TransferListener r1;
        androidx.media3.datasource.DataSource $r3, $r4;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource;

        r1 := @parameter0: androidx.media3.datasource.TransferListener;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSource cacheReadDataSource>;

        interfaceinvoke $r3.<androidx.media3.datasource.DataSource: void addTransferListener(androidx.media3.datasource.TransferListener)>(r1);

        $r4 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSource upstreamDataSource>;

        interfaceinvoke $r4.<androidx.media3.datasource.DataSource: void addTransferListener(androidx.media3.datasource.TransferListener)>(r1);

        return;
    }

    public long open(androidx.media3.datasource.DataSpec) throws java.io.IOException
    {
        androidx.media3.datasource.cache.CacheDataSource r0;
        androidx.media3.datasource.DataSpec r1, r2;
        int i0;
        androidx.media3.datasource.cache.CacheKeyFactory $r3;
        androidx.media3.datasource.DataSpec$Builder $r4, $r5;
        android.net.Uri $r6, $r8;
        androidx.media3.datasource.cache.Cache $r7, $r9;
        long $l1, $l2, $l3, $l5, $l7, $l9, $l10, $l11, $l12, $l13, $l14, $l16, $l18, $l19, $l21, $l23;
        boolean $z0, $z1, $z2;
        androidx.media3.datasource.cache.ContentMetadata $r10;
        byte $b4, $b6, $b8, $b15, $b17, $b20, $b22;
        java.lang.Throwable $r14, r16, r18;
        java.lang.String r15;
        androidx.media3.datasource.DataSourceException r17;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource;

        r1 := @parameter0: androidx.media3.datasource.DataSpec;

     label01:
        $r3 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.cache.CacheKeyFactory cacheKeyFactory>;

        r15 = interfaceinvoke $r3.<androidx.media3.datasource.cache.CacheKeyFactory: java.lang.String buildCacheKey(androidx.media3.datasource.DataSpec)>(r1);

        $r4 = virtualinvoke r1.<androidx.media3.datasource.DataSpec: androidx.media3.datasource.DataSpec$Builder buildUpon()>();

        $r5 = virtualinvoke $r4.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec$Builder setKey(java.lang.String)>(r15);

        r2 = virtualinvoke $r5.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec build()>();

        r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSpec requestDataSpec> = r2;

        $r7 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.cache.Cache cache>;

        $r6 = r2.<androidx.media3.datasource.DataSpec: android.net.Uri uri>;

        $r8 = staticinvoke <androidx.media3.datasource.cache.CacheDataSource: android.net.Uri getRedirectedUriOrDefault(androidx.media3.datasource.cache.Cache,java.lang.String,android.net.Uri)>($r7, r15, $r6);

        r0.<androidx.media3.datasource.cache.CacheDataSource: android.net.Uri actualUri> = $r8;

        $l1 = r1.<androidx.media3.datasource.DataSpec: long position>;

        r0.<androidx.media3.datasource.cache.CacheDataSource: long readPosition> = $l1;

        i0 = specialinvoke r0.<androidx.media3.datasource.cache.CacheDataSource: int shouldIgnoreCacheForRequest(androidx.media3.datasource.DataSpec)>(r1);

        if i0 == -1 goto label02;

        $z2 = 1;

        goto label03;

     label02:
        $z2 = 0;

     label03:
        r0.<androidx.media3.datasource.cache.CacheDataSource: boolean currentRequestIgnoresCache> = $z2;

        $z0 = r0.<androidx.media3.datasource.cache.CacheDataSource: boolean currentRequestIgnoresCache>;

        if $z0 == 0 goto label04;

        specialinvoke r0.<androidx.media3.datasource.cache.CacheDataSource: void notifyCacheIgnored(int)>(i0);

     label04:
        $z1 = r0.<androidx.media3.datasource.cache.CacheDataSource: boolean currentRequestIgnoresCache>;

        if $z1 == 0 goto label05;

        r0.<androidx.media3.datasource.cache.CacheDataSource: long bytesRemaining> = -1L;

        goto label06;

     label05:
        $r9 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.cache.Cache cache>;

        $r10 = interfaceinvoke $r9.<androidx.media3.datasource.cache.Cache: androidx.media3.datasource.cache.ContentMetadata getContentMetadata(java.lang.String)>(r15);

        $l2 = staticinvoke <androidx.media3.datasource.cache.ContentMetadata: long getContentLength(androidx.media3.datasource.cache.ContentMetadata)>($r10);

        r0.<androidx.media3.datasource.cache.CacheDataSource: long bytesRemaining> = $l2;

        $l3 = r0.<androidx.media3.datasource.cache.CacheDataSource: long bytesRemaining>;

        $b4 = $l3 cmp -1L;

        if $b4 == 0 goto label06;

        $l12 = r0.<androidx.media3.datasource.cache.CacheDataSource: long bytesRemaining>;

        $l11 = r1.<androidx.media3.datasource.DataSpec: long position>;

        $l13 = $l12 - $l11;

        r0.<androidx.media3.datasource.cache.CacheDataSource: long bytesRemaining> = $l13;

        $l14 = r0.<androidx.media3.datasource.cache.CacheDataSource: long bytesRemaining>;

        $b15 = $l14 cmp 0L;

        if $b15 >= 0 goto label06;

        r17 = new androidx.media3.datasource.DataSourceException;

        specialinvoke r17.<androidx.media3.datasource.DataSourceException: void <init>(int)>(2008);

        r18 = (java.lang.Throwable) r17;

        throw r18;

     label06:
        $l16 = r1.<androidx.media3.datasource.DataSpec: long length>;

        $b17 = $l16 cmp -1L;

        if $b17 == 0 goto label09;

        $l7 = r0.<androidx.media3.datasource.cache.CacheDataSource: long bytesRemaining>;

        $b8 = $l7 cmp -1L;

        if $b8 != 0 goto label07;

        $l18 = r1.<androidx.media3.datasource.DataSpec: long length>;

        goto label08;

     label07:
        $l10 = r0.<androidx.media3.datasource.cache.CacheDataSource: long bytesRemaining>;

        $l9 = r1.<androidx.media3.datasource.DataSpec: long length>;

        $l18 = staticinvoke <java.lang.Math: long min(long,long)>($l10, $l9);

     label08:
        r0.<androidx.media3.datasource.cache.CacheDataSource: long bytesRemaining> = $l18;

     label09:
        $l19 = r0.<androidx.media3.datasource.cache.CacheDataSource: long bytesRemaining>;

        $b20 = $l19 cmp 0L;

        if $b20 > 0 goto label10;

        $l5 = r0.<androidx.media3.datasource.cache.CacheDataSource: long bytesRemaining>;

        $b6 = $l5 cmp -1L;

        if $b6 != 0 goto label11;

     label10:
        specialinvoke r0.<androidx.media3.datasource.cache.CacheDataSource: void openNextSource(androidx.media3.datasource.DataSpec,boolean)>(r2, 0);

     label11:
        $l21 = r1.<androidx.media3.datasource.DataSpec: long length>;

        $b22 = $l21 cmp -1L;

        if $b22 == 0 goto label12;

        $l23 = r1.<androidx.media3.datasource.DataSpec: long length>;

        goto label13;

     label12:
        $l23 = r0.<androidx.media3.datasource.cache.CacheDataSource: long bytesRemaining>;

     label13:
        return $l23;

     label14:
        $r14 := @caughtexception;

        r16 = $r14;

        specialinvoke r0.<androidx.media3.datasource.cache.CacheDataSource: void handleBeforeThrow(java.lang.Throwable)>(r16);

        throw r16;

        catch java.lang.Throwable from label01 to label13 with label14;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        androidx.media3.datasource.cache.CacheDataSource r0;
        byte[] r1;
        int i0, i1, $i9, i31;
        androidx.media3.datasource.DataSpec r2, r3, $r4, $r6;
        long $l2, $l4, $l5, $l7, $l10, $l12, $l14, $l15, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l25, $l26, $l27, $l28, $l29, $l30;
        byte $b3, $b6, $b8, $b11, $b13, $b16, $b24;
        java.lang.Object $r5, $r7, $r9, $r12;
        androidx.media3.datasource.DataSource $r8, $r10;
        boolean $z0, $z1;
        java.lang.String $r11, $r13;
        java.lang.Throwable $r16, r17;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i1 != 0 goto label01;

        return 0;

     label01:
        $l2 = r0.<androidx.media3.datasource.cache.CacheDataSource: long bytesRemaining>;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label02;

        return -1;

     label02:
        $r4 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSpec requestDataSpec>;

        $r5 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r4);

        r2 = (androidx.media3.datasource.DataSpec) $r5;

        $r6 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSpec currentDataSpec>;

        $r7 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r6);

        r3 = (androidx.media3.datasource.DataSpec) $r7;

     label03:
        $l5 = r0.<androidx.media3.datasource.cache.CacheDataSource: long readPosition>;

        $l4 = r0.<androidx.media3.datasource.cache.CacheDataSource: long checkCachePosition>;

        $b6 = $l5 cmp $l4;

        if $b6 < 0 goto label04;

        specialinvoke r0.<androidx.media3.datasource.cache.CacheDataSource: void openNextSource(androidx.media3.datasource.DataSpec,boolean)>(r2, 1);

     label04:
        $r8 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSource currentDataSource>;

        $r9 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r8);

        $r10 = (androidx.media3.datasource.DataSource) $r9;

        i31 = interfaceinvoke $r10.<androidx.media3.datasource.DataSource: int read(byte[],int,int)>(r1, i0, i1);

        if i31 == -1 goto label06;

        $z1 = specialinvoke r0.<androidx.media3.datasource.cache.CacheDataSource: boolean isReadingFromCache()>();

        if $z1 == 0 goto label05;

        $l29 = r0.<androidx.media3.datasource.cache.CacheDataSource: long totalCachedBytesRead>;

        $l28 = (long) i31;

        $l30 = $l29 + $l28;

        r0.<androidx.media3.datasource.cache.CacheDataSource: long totalCachedBytesRead> = $l30;

     label05:
        $l18 = r0.<androidx.media3.datasource.cache.CacheDataSource: long readPosition>;

        $l17 = (long) i31;

        $l19 = $l18 + $l17;

        r0.<androidx.media3.datasource.cache.CacheDataSource: long readPosition> = $l19;

        $l21 = r0.<androidx.media3.datasource.cache.CacheDataSource: long currentDataSourceBytesRead>;

        $l20 = (long) i31;

        $l22 = $l21 + $l20;

        r0.<androidx.media3.datasource.cache.CacheDataSource: long currentDataSourceBytesRead> = $l22;

        $l23 = r0.<androidx.media3.datasource.cache.CacheDataSource: long bytesRemaining>;

        $b24 = $l23 cmp -1L;

        if $b24 == 0 goto label11;

        $l26 = r0.<androidx.media3.datasource.cache.CacheDataSource: long bytesRemaining>;

        $l25 = (long) i31;

        $l27 = $l26 - $l25;

        r0.<androidx.media3.datasource.cache.CacheDataSource: long bytesRemaining> = $l27;

        goto label11;

     label06:
        $z0 = specialinvoke r0.<androidx.media3.datasource.cache.CacheDataSource: boolean isReadingFromUpstream()>();

        if $z0 == 0 goto label08;

        $l12 = r3.<androidx.media3.datasource.DataSpec: long length>;

        $b13 = $l12 cmp -1L;

        if $b13 == 0 goto label07;

        $l15 = r0.<androidx.media3.datasource.cache.CacheDataSource: long currentDataSourceBytesRead>;

        $l14 = r3.<androidx.media3.datasource.DataSpec: long length>;

        $b16 = $l15 cmp $l14;

        if $b16 >= 0 goto label08;

     label07:
        $r11 = r2.<androidx.media3.datasource.DataSpec: java.lang.String key>;

        $r12 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r11);

        $r13 = (java.lang.String) $r12;

        specialinvoke r0.<androidx.media3.datasource.cache.CacheDataSource: void setNoBytesRemainingAndMaybeStoreLength(java.lang.String)>($r13);

        goto label11;

     label08:
        $l7 = r0.<androidx.media3.datasource.cache.CacheDataSource: long bytesRemaining>;

        $b8 = $l7 cmp 0L;

        if $b8 > 0 goto label09;

        $l10 = r0.<androidx.media3.datasource.cache.CacheDataSource: long bytesRemaining>;

        $b11 = $l10 cmp -1L;

        if $b11 != 0 goto label11;

     label09:
        specialinvoke r0.<androidx.media3.datasource.cache.CacheDataSource: void closeCurrentSource()>();

        specialinvoke r0.<androidx.media3.datasource.cache.CacheDataSource: void openNextSource(androidx.media3.datasource.DataSpec,boolean)>(r2, 0);

        $i9 = virtualinvoke r0.<androidx.media3.datasource.cache.CacheDataSource: int read(byte[],int,int)>(r1, i0, i1);

     label10:
        return $i9;

     label11:
        return i31;

     label12:
        $r16 := @caughtexception;

        r17 = $r16;

        specialinvoke r0.<androidx.media3.datasource.cache.CacheDataSource: void handleBeforeThrow(java.lang.Throwable)>(r17);

        throw r17;

        catch java.lang.Throwable from label03 to label10 with label12;
    }

    public android.net.Uri getUri()
    {
        androidx.media3.datasource.cache.CacheDataSource r0;
        android.net.Uri $r1;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource;

        $r1 = r0.<androidx.media3.datasource.cache.CacheDataSource: android.net.Uri actualUri>;

        return $r1;
    }

    public java.util.Map getResponseHeaders()
    {
        androidx.media3.datasource.cache.CacheDataSource r0;
        boolean $z0;
        androidx.media3.datasource.DataSource $r1;
        java.util.Map $r2;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource;

        $z0 = specialinvoke r0.<androidx.media3.datasource.cache.CacheDataSource: boolean isReadingFromUpstream()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSource upstreamDataSource>;

        $r2 = interfaceinvoke $r1.<androidx.media3.datasource.DataSource: java.util.Map getResponseHeaders()>();

        goto label2;

     label1:
        $r2 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

     label2:
        return $r2;
    }

    public void close() throws java.io.IOException
    {
        androidx.media3.datasource.cache.CacheDataSource r0;
        java.lang.Throwable r1, $r2;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource;

        r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSpec requestDataSpec> = null;

        r0.<androidx.media3.datasource.cache.CacheDataSource: android.net.Uri actualUri> = null;

        r0.<androidx.media3.datasource.cache.CacheDataSource: long readPosition> = 0L;

        specialinvoke r0.<androidx.media3.datasource.cache.CacheDataSource: void notifyBytesRead()>();

     label1:
        specialinvoke r0.<androidx.media3.datasource.cache.CacheDataSource: void closeCurrentSource()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        specialinvoke r0.<androidx.media3.datasource.cache.CacheDataSource: void handleBeforeThrow(java.lang.Throwable)>(r1);

        throw r1;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void openNextSource(androidx.media3.datasource.DataSpec, boolean) throws java.io.IOException
    {
        androidx.media3.datasource.cache.CacheDataSource r0;
        androidx.media3.datasource.DataSpec r1, r39;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, z12, $z13;
        java.lang.String r2, $r4;
        long l0, $l1, $l2, $l3, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l13, $l15, $l16, $l17, $l18, $l19, l20, l21, l22, $l23, $l24, l25, $l26;
        androidx.media3.datasource.cache.ContentMetadataMutations r3, $r47;
        java.lang.Object $r5, $r18, $r30;
        androidx.media3.datasource.cache.Cache $r6, $r7, $r8, $r28, $r32;
        byte $b4, $b5, $b14, $b27;
        android.net.Uri $r9, $r10, $r11, r40, $r48;
        androidx.media3.datasource.DataSource $r15, $r16, r38, $r44;
        java.io.File $r17, $r19;
        androidx.media3.datasource.DataSpec$Builder $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r41, $r42, $r43;
        java.lang.Throwable $r29, $r33, r37, r46;
        androidx.media3.datasource.cache.CacheSpan $r31, r36;
        java.lang.Thread $r34;
        java.io.InterruptedIOException $r35;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource;

        r1 := @parameter0: androidx.media3.datasource.DataSpec;

        z0 := @parameter1: boolean;

        $r4 = r1.<androidx.media3.datasource.DataSpec: java.lang.String key>;

        $r5 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r4);

        r2 = (java.lang.String) $r5;

        $z1 = r0.<androidx.media3.datasource.cache.CacheDataSource: boolean currentRequestIgnoresCache>;

        if $z1 == 0 goto label01;

        r36 = null;

        goto label06;

     label01:
        $z2 = r0.<androidx.media3.datasource.cache.CacheDataSource: boolean blockOnCache>;

        if $z2 == 0 goto label05;

     label02:
        $r28 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.cache.Cache cache>;

        $l19 = r0.<androidx.media3.datasource.cache.CacheDataSource: long readPosition>;

        $l18 = r0.<androidx.media3.datasource.cache.CacheDataSource: long bytesRemaining>;

        r36 = interfaceinvoke $r28.<androidx.media3.datasource.cache.Cache: androidx.media3.datasource.cache.CacheSpan startReadWrite(java.lang.String,long,long)>(r2, $l19, $l18);

     label03:
        goto label06;

     label04:
        $r33 := @caughtexception;

        r37 = $r33;

        $r34 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r34.<java.lang.Thread: void interrupt()>();

        $r35 = new java.io.InterruptedIOException;

        specialinvoke $r35.<java.io.InterruptedIOException: void <init>()>();

        throw $r35;

     label05:
        $r6 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.cache.Cache cache>;

        $l2 = r0.<androidx.media3.datasource.cache.CacheDataSource: long readPosition>;

        $l1 = r0.<androidx.media3.datasource.cache.CacheDataSource: long bytesRemaining>;

        r36 = interfaceinvoke $r6.<androidx.media3.datasource.cache.Cache: androidx.media3.datasource.cache.CacheSpan startReadWriteNonBlocking(java.lang.String,long,long)>(r2, $l2, $l1);

     label06:
        if r36 != null goto label07;

        r38 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSource upstreamDataSource>;

        $r25 = virtualinvoke r1.<androidx.media3.datasource.DataSpec: androidx.media3.datasource.DataSpec$Builder buildUpon()>();

        $l16 = r0.<androidx.media3.datasource.cache.CacheDataSource: long readPosition>;

        $r26 = virtualinvoke $r25.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec$Builder setPosition(long)>($l16);

        $l17 = r0.<androidx.media3.datasource.cache.CacheDataSource: long bytesRemaining>;

        $r27 = virtualinvoke $r26.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec$Builder setLength(long)>($l17);

        r39 = virtualinvoke $r27.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec build()>();

        goto label13;

     label07:
        $z3 = r36.<androidx.media3.datasource.cache.CacheSpan: boolean isCached>;

        if $z3 == 0 goto label09;

        $r17 = r36.<androidx.media3.datasource.cache.CacheSpan: java.io.File file>;

        $r18 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r17);

        $r19 = (java.io.File) $r18;

        r40 = staticinvoke <android.net.Uri: android.net.Uri fromFile(java.io.File)>($r19);

        l0 = r36.<androidx.media3.datasource.cache.CacheSpan: long position>;

        $l11 = r0.<androidx.media3.datasource.cache.CacheDataSource: long readPosition>;

        l20 = $l11 - l0;

        $l12 = r36.<androidx.media3.datasource.cache.CacheSpan: long length>;

        l21 = $l12 - l20;

        $l13 = r0.<androidx.media3.datasource.cache.CacheDataSource: long bytesRemaining>;

        $b14 = $l13 cmp -1L;

        if $b14 == 0 goto label08;

        $l15 = r0.<androidx.media3.datasource.cache.CacheDataSource: long bytesRemaining>;

        l21 = staticinvoke <java.lang.Math: long min(long,long)>(l21, $l15);

     label08:
        $r20 = virtualinvoke r1.<androidx.media3.datasource.DataSpec: androidx.media3.datasource.DataSpec$Builder buildUpon()>();

        $r21 = virtualinvoke $r20.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec$Builder setUri(android.net.Uri)>(r40);

        $r22 = virtualinvoke $r21.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec$Builder setUriPositionOffset(long)>(l0);

        $r23 = virtualinvoke $r22.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec$Builder setPosition(long)>(l20);

        $r24 = virtualinvoke $r23.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec$Builder setLength(long)>(l21);

        r39 = virtualinvoke $r24.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec build()>();

        r38 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSource cacheReadDataSource>;

        goto label13;

     label09:
        $z4 = virtualinvoke r36.<androidx.media3.datasource.cache.CacheSpan: boolean isOpenEnded()>();

        if $z4 == 0 goto label10;

        l22 = r0.<androidx.media3.datasource.cache.CacheDataSource: long bytesRemaining>;

        goto label11;

     label10:
        l22 = r36.<androidx.media3.datasource.cache.CacheSpan: long length>;

        $l3 = r0.<androidx.media3.datasource.cache.CacheDataSource: long bytesRemaining>;

        $b4 = $l3 cmp -1L;

        if $b4 == 0 goto label11;

        $l10 = r0.<androidx.media3.datasource.cache.CacheDataSource: long bytesRemaining>;

        l22 = staticinvoke <java.lang.Math: long min(long,long)>(l22, $l10);

     label11:
        $r41 = virtualinvoke r1.<androidx.media3.datasource.DataSpec: androidx.media3.datasource.DataSpec$Builder buildUpon()>();

        $l23 = r0.<androidx.media3.datasource.cache.CacheDataSource: long readPosition>;

        $r42 = virtualinvoke $r41.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec$Builder setPosition(long)>($l23);

        $r43 = virtualinvoke $r42.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec$Builder setLength(long)>(l22);

        r39 = virtualinvoke $r43.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec build()>();

        $r44 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSource cacheWriteDataSource>;

        if $r44 == null goto label12;

        r38 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSource cacheWriteDataSource>;

        goto label13;

     label12:
        r38 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSource upstreamDataSource>;

        $r7 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.cache.Cache cache>;

        interfaceinvoke $r7.<androidx.media3.datasource.cache.Cache: void releaseHoleSpan(androidx.media3.datasource.cache.CacheSpan)>(r36);

        r36 = null;

     label13:
        $z9 = r0.<androidx.media3.datasource.cache.CacheDataSource: boolean currentRequestIgnoresCache>;

        if $z9 != 0 goto label14;

        $r16 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSource upstreamDataSource>;

        if r38 != $r16 goto label14;

        $l9 = r0.<androidx.media3.datasource.cache.CacheDataSource: long readPosition>;

        $l24 = $l9 + 102400L;

        goto label15;

     label14:
        $l24 = 9223372036854775807L;

     label15:
        r0.<androidx.media3.datasource.cache.CacheDataSource: long checkCachePosition> = $l24;

        if z0 == 0 goto label20;

        $z7 = specialinvoke r0.<androidx.media3.datasource.cache.CacheDataSource: boolean isBypassingCache()>();

        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z7);

        $r15 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSource upstreamDataSource>;

        if r38 != $r15 goto label16;

        return;

     label16:
        specialinvoke r0.<androidx.media3.datasource.cache.CacheDataSource: void closeCurrentSource()>();

     label17:
        goto label20;

     label18:
        $r29 := @caughtexception;

        r46 = $r29;

        $r30 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>(r36);

        $r31 = (androidx.media3.datasource.cache.CacheSpan) $r30;

        $z8 = virtualinvoke $r31.<androidx.media3.datasource.cache.CacheSpan: boolean isHoleSpan()>();

        if $z8 == 0 goto label19;

        $r32 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.cache.Cache cache>;

        interfaceinvoke $r32.<androidx.media3.datasource.cache.Cache: void releaseHoleSpan(androidx.media3.datasource.cache.CacheSpan)>(r36);

     label19:
        throw r46;

     label20:
        if r36 == null goto label21;

        $z6 = virtualinvoke r36.<androidx.media3.datasource.cache.CacheSpan: boolean isHoleSpan()>();

        if $z6 == 0 goto label21;

        r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.cache.CacheSpan currentHoleSpan> = r36;

     label21:
        r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSource currentDataSource> = r38;

        r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSpec currentDataSpec> = r39;

        r0.<androidx.media3.datasource.cache.CacheDataSource: long currentDataSourceBytesRead> = 0L;

        l25 = interfaceinvoke r38.<androidx.media3.datasource.DataSource: long open(androidx.media3.datasource.DataSpec)>(r39);

        $r47 = new androidx.media3.datasource.cache.ContentMetadataMutations;

        specialinvoke $r47.<androidx.media3.datasource.cache.ContentMetadataMutations: void <init>()>();

        r3 = $r47;

        $l26 = r39.<androidx.media3.datasource.DataSpec: long length>;

        $b27 = $l26 cmp -1L;

        if $b27 != 0 goto label22;

        $b5 = l25 cmp -1L;

        if $b5 == 0 goto label22;

        r0.<androidx.media3.datasource.cache.CacheDataSource: long bytesRemaining> = l25;

        $l7 = r0.<androidx.media3.datasource.cache.CacheDataSource: long readPosition>;

        $l6 = r0.<androidx.media3.datasource.cache.CacheDataSource: long bytesRemaining>;

        $l8 = $l7 + $l6;

        staticinvoke <androidx.media3.datasource.cache.ContentMetadataMutations: androidx.media3.datasource.cache.ContentMetadataMutations setContentLength(androidx.media3.datasource.cache.ContentMetadataMutations,long)>(r3, $l8);

     label22:
        $z10 = specialinvoke r0.<androidx.media3.datasource.cache.CacheDataSource: boolean isReadingFromUpstream()>();

        if $z10 == 0 goto label27;

        $r9 = interfaceinvoke r38.<androidx.media3.datasource.DataSource: android.net.Uri getUri()>();

        r0.<androidx.media3.datasource.cache.CacheDataSource: android.net.Uri actualUri> = $r9;

        $r11 = r1.<androidx.media3.datasource.DataSpec: android.net.Uri uri>;

        $r10 = r0.<androidx.media3.datasource.cache.CacheDataSource: android.net.Uri actualUri>;

        $z5 = virtualinvoke $r11.<android.net.Uri: boolean equals(java.lang.Object)>($r10);

        if $z5 != 0 goto label23;

        $z11 = 1;

        goto label24;

     label23:
        $z11 = 0;

     label24:
        z12 = $z11;

        if z12 == 0 goto label25;

        $r48 = r0.<androidx.media3.datasource.cache.CacheDataSource: android.net.Uri actualUri>;

        goto label26;

     label25:
        $r48 = null;

     label26:
        staticinvoke <androidx.media3.datasource.cache.ContentMetadataMutations: androidx.media3.datasource.cache.ContentMetadataMutations setRedirectedUri(androidx.media3.datasource.cache.ContentMetadataMutations,android.net.Uri)>(r3, $r48);

     label27:
        $z13 = specialinvoke r0.<androidx.media3.datasource.cache.CacheDataSource: boolean isWritingToCache()>();

        if $z13 == 0 goto label28;

        $r8 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.cache.Cache cache>;

        interfaceinvoke $r8.<androidx.media3.datasource.cache.Cache: void applyContentMetadataMutations(java.lang.String,androidx.media3.datasource.cache.ContentMetadataMutations)>(r2, r3);

     label28:
        return;

        catch java.lang.InterruptedException from label02 to label03 with label04;
        catch java.lang.Throwable from label16 to label17 with label18;
    }

    private void setNoBytesRemainingAndMaybeStoreLength(java.lang.String) throws java.io.IOException
    {
        androidx.media3.datasource.cache.CacheDataSource r0;
        java.lang.String r1;
        androidx.media3.datasource.cache.ContentMetadataMutations r2, $r3;
        boolean $z0;
        long $l0;
        androidx.media3.datasource.cache.Cache $r5;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource;

        r1 := @parameter0: java.lang.String;

        r0.<androidx.media3.datasource.cache.CacheDataSource: long bytesRemaining> = 0L;

        $z0 = specialinvoke r0.<androidx.media3.datasource.cache.CacheDataSource: boolean isWritingToCache()>();

        if $z0 == 0 goto label1;

        $r3 = new androidx.media3.datasource.cache.ContentMetadataMutations;

        specialinvoke $r3.<androidx.media3.datasource.cache.ContentMetadataMutations: void <init>()>();

        r2 = $r3;

        $l0 = r0.<androidx.media3.datasource.cache.CacheDataSource: long readPosition>;

        staticinvoke <androidx.media3.datasource.cache.ContentMetadataMutations: androidx.media3.datasource.cache.ContentMetadataMutations setContentLength(androidx.media3.datasource.cache.ContentMetadataMutations,long)>(r2, $l0);

        $r5 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.cache.Cache cache>;

        interfaceinvoke $r5.<androidx.media3.datasource.cache.Cache: void applyContentMetadataMutations(java.lang.String,androidx.media3.datasource.cache.ContentMetadataMutations)>(r1, r2);

     label1:
        return;
    }

    private static android.net.Uri getRedirectedUriOrDefault(androidx.media3.datasource.cache.Cache, java.lang.String, android.net.Uri)
    {
        androidx.media3.datasource.cache.Cache r0;
        java.lang.String r1;
        android.net.Uri r2, r3, $r5;
        androidx.media3.datasource.cache.ContentMetadata $r4;

        r0 := @parameter0: androidx.media3.datasource.cache.Cache;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.net.Uri;

        $r4 = interfaceinvoke r0.<androidx.media3.datasource.cache.Cache: androidx.media3.datasource.cache.ContentMetadata getContentMetadata(java.lang.String)>(r1);

        r3 = staticinvoke <androidx.media3.datasource.cache.ContentMetadata: android.net.Uri getRedirectedUri(androidx.media3.datasource.cache.ContentMetadata)>($r4);

        if r3 == null goto label1;

        $r5 = r3;

        goto label2;

     label1:
        $r5 = r2;

     label2:
        return $r5;
    }

    private boolean isReadingFromUpstream()
    {
        androidx.media3.datasource.cache.CacheDataSource r0;
        boolean $z0, $z1;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource;

        $z0 = specialinvoke r0.<androidx.media3.datasource.cache.CacheDataSource: boolean isReadingFromCache()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private boolean isBypassingCache()
    {
        androidx.media3.datasource.cache.CacheDataSource r0;
        androidx.media3.datasource.DataSource $r1, $r2;
        boolean $z0;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource;

        $r2 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSource currentDataSource>;

        $r1 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSource upstreamDataSource>;

        if $r2 != $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private boolean isReadingFromCache()
    {
        androidx.media3.datasource.cache.CacheDataSource r0;
        androidx.media3.datasource.DataSource $r1, $r2;
        boolean $z0;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource;

        $r2 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSource currentDataSource>;

        $r1 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSource cacheReadDataSource>;

        if $r2 != $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private boolean isWritingToCache()
    {
        androidx.media3.datasource.cache.CacheDataSource r0;
        androidx.media3.datasource.DataSource $r1, $r2;
        boolean $z0;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource;

        $r2 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSource currentDataSource>;

        $r1 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSource cacheWriteDataSource>;

        if $r2 != $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void closeCurrentSource() throws java.io.IOException
    {
        androidx.media3.datasource.cache.CacheDataSource r0;
        java.lang.Throwable r1, $r7;
        androidx.media3.datasource.DataSource $r2, $r3;
        androidx.media3.datasource.cache.CacheSpan $r4, $r5, $r8, $r9;
        androidx.media3.datasource.cache.Cache $r6, $r10;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource;

        $r2 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSource currentDataSource>;

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSource currentDataSource>;

        interfaceinvoke $r3.<androidx.media3.datasource.DataSource: void close()>();

     label2:
        r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSpec currentDataSpec> = null;

        r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSource currentDataSource> = null;

        $r4 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.cache.CacheSpan currentHoleSpan>;

        if $r4 == null goto label5;

        $r6 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.cache.Cache cache>;

        $r5 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.cache.CacheSpan currentHoleSpan>;

        interfaceinvoke $r6.<androidx.media3.datasource.cache.Cache: void releaseHoleSpan(androidx.media3.datasource.cache.CacheSpan)>($r5);

        r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.cache.CacheSpan currentHoleSpan> = null;

        goto label5;

     label3:
        $r7 := @caughtexception;

        r1 = $r7;

        r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSpec currentDataSpec> = null;

        r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.DataSource currentDataSource> = null;

        $r8 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.cache.CacheSpan currentHoleSpan>;

        if $r8 == null goto label4;

        $r10 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.cache.Cache cache>;

        $r9 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.cache.CacheSpan currentHoleSpan>;

        interfaceinvoke $r10.<androidx.media3.datasource.cache.Cache: void releaseHoleSpan(androidx.media3.datasource.cache.CacheSpan)>($r9);

        r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.cache.CacheSpan currentHoleSpan> = null;

     label4:
        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void handleBeforeThrow(java.lang.Throwable)
    {
        androidx.media3.datasource.cache.CacheDataSource r0;
        java.lang.Throwable r1;
        boolean $z0, $z1;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource;

        r1 := @parameter0: java.lang.Throwable;

        $z0 = specialinvoke r0.<androidx.media3.datasource.cache.CacheDataSource: boolean isReadingFromCache()>();

        if $z0 != 0 goto label1;

        $z1 = r1 instanceof androidx.media3.datasource.cache.Cache$CacheException;

        if $z1 == 0 goto label2;

     label1:
        r0.<androidx.media3.datasource.cache.CacheDataSource: boolean seenCacheError> = 1;

     label2:
        return;
    }

    private int shouldIgnoreCacheForRequest(androidx.media3.datasource.DataSpec)
    {
        androidx.media3.datasource.cache.CacheDataSource r0;
        androidx.media3.datasource.DataSpec r1;
        boolean $z0, $z1, $z2;
        long $l0;
        byte $b1;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource;

        r1 := @parameter0: androidx.media3.datasource.DataSpec;

        $z0 = r0.<androidx.media3.datasource.cache.CacheDataSource: boolean ignoreCacheOnError>;

        if $z0 == 0 goto label1;

        $z2 = r0.<androidx.media3.datasource.cache.CacheDataSource: boolean seenCacheError>;

        if $z2 == 0 goto label1;

        return 0;

     label1:
        $z1 = r0.<androidx.media3.datasource.cache.CacheDataSource: boolean ignoreCacheForUnsetLengthRequests>;

        if $z1 == 0 goto label2;

        $l0 = r1.<androidx.media3.datasource.DataSpec: long length>;

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label2;

        return 1;

     label2:
        return -1;
    }

    private void notifyCacheIgnored(int)
    {
        androidx.media3.datasource.cache.CacheDataSource r0;
        int i0;
        androidx.media3.datasource.cache.CacheDataSource$EventListener $r1, $r2;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.cache.CacheDataSource$EventListener eventListener>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.cache.CacheDataSource$EventListener eventListener>;

        interfaceinvoke $r2.<androidx.media3.datasource.cache.CacheDataSource$EventListener: void onCacheIgnored(int)>(i0);

     label1:
        return;
    }

    private void notifyBytesRead()
    {
        androidx.media3.datasource.cache.CacheDataSource r0;
        androidx.media3.datasource.cache.CacheDataSource$EventListener $r1, $r3;
        long $l0, $l2, $l3;
        byte $b1;
        androidx.media3.datasource.cache.Cache $r2;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource;

        $r1 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.cache.CacheDataSource$EventListener eventListener>;

        if $r1 == null goto label1;

        $l0 = r0.<androidx.media3.datasource.cache.CacheDataSource: long totalCachedBytesRead>;

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label1;

        $r3 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.cache.CacheDataSource$EventListener eventListener>;

        $r2 = r0.<androidx.media3.datasource.cache.CacheDataSource: androidx.media3.datasource.cache.Cache cache>;

        $l2 = interfaceinvoke $r2.<androidx.media3.datasource.cache.Cache: long getCacheSpace()>();

        $l3 = r0.<androidx.media3.datasource.cache.CacheDataSource: long totalCachedBytesRead>;

        interfaceinvoke $r3.<androidx.media3.datasource.cache.CacheDataSource$EventListener: void onCachedBytesRead(long,long)>($l2, $l3);

        r0.<androidx.media3.datasource.cache.CacheDataSource: long totalCachedBytesRead> = 0L;

     label1:
        return;
    }

    void <init>(androidx.media3.datasource.cache.Cache, androidx.media3.datasource.DataSource, androidx.media3.datasource.DataSource, androidx.media3.datasource.DataSink, androidx.media3.datasource.cache.CacheKeyFactory, int, androidx.media3.common.PriorityTaskManager, int, androidx.media3.datasource.cache.CacheDataSource$EventListener, androidx.media3.datasource.cache.CacheDataSource$1)
    {
        androidx.media3.datasource.cache.CacheDataSource r0;
        androidx.media3.datasource.cache.Cache r1;
        androidx.media3.datasource.DataSource r2, r3;
        androidx.media3.datasource.DataSink r4;
        androidx.media3.datasource.cache.CacheKeyFactory r5;
        int i0, i1;
        androidx.media3.common.PriorityTaskManager r6;
        androidx.media3.datasource.cache.CacheDataSource$EventListener r7;
        androidx.media3.datasource.cache.CacheDataSource$1 r8;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource;

        r1 := @parameter0: androidx.media3.datasource.cache.Cache;

        r2 := @parameter1: androidx.media3.datasource.DataSource;

        r3 := @parameter2: androidx.media3.datasource.DataSource;

        r4 := @parameter3: androidx.media3.datasource.DataSink;

        r5 := @parameter4: androidx.media3.datasource.cache.CacheKeyFactory;

        i0 := @parameter5: int;

        r6 := @parameter6: androidx.media3.common.PriorityTaskManager;

        i1 := @parameter7: int;

        r7 := @parameter8: androidx.media3.datasource.cache.CacheDataSource$EventListener;

        r8 := @parameter9: androidx.media3.datasource.cache.CacheDataSource$1;

        specialinvoke r0.<androidx.media3.datasource.cache.CacheDataSource: void <init>(androidx.media3.datasource.cache.Cache,androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSink,androidx.media3.datasource.cache.CacheKeyFactory,int,androidx.media3.common.PriorityTaskManager,int,androidx.media3.datasource.cache.CacheDataSource$EventListener)>(r1, r2, r3, r4, r5, i0, r6, i1, r7);

        return;
    }

androidx.media3.datasource.cache.CacheDataSource$1
androidx.media3.datasource.cache.CacheDataSource$CacheIgnoredReason
androidx.media3.datasource.cache.CacheDataSource$EventListener
<androidx.media3.datasource.cache.CacheDataSource$EventListener: void onCachedBytesRead(long,long)>
<androidx.media3.datasource.cache.CacheDataSource$EventListener: void onCacheIgnored(int)>
androidx.media3.datasource.cache.CacheDataSource$Factory
<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.cache.Cache cache>
<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.DataSource$Factory cacheReadDataSourceFactory>
<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.DataSink$Factory cacheWriteDataSinkFactory>
<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.cache.CacheKeyFactory cacheKeyFactory>
<androidx.media3.datasource.cache.CacheDataSource$Factory: boolean cacheIsReadOnly>
<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.DataSource$Factory upstreamDataSourceFactory>
<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.common.PriorityTaskManager upstreamPriorityTaskManager>
<androidx.media3.datasource.cache.CacheDataSource$Factory: int upstreamPriority>
<androidx.media3.datasource.cache.CacheDataSource$Factory: int flags>
<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.cache.CacheDataSource$EventListener eventListener>
    public void <init>()
    {
        androidx.media3.datasource.cache.CacheDataSource$Factory r0;
        androidx.media3.datasource.FileDataSource$Factory $r1;
        androidx.media3.datasource.cache.CacheKeyFactory $r2;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource$Factory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new androidx.media3.datasource.FileDataSource$Factory;

        specialinvoke $r1.<androidx.media3.datasource.FileDataSource$Factory: void <init>()>();

        r0.<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.DataSource$Factory cacheReadDataSourceFactory> = $r1;

        $r2 = <androidx.media3.datasource.cache.CacheKeyFactory: androidx.media3.datasource.cache.CacheKeyFactory DEFAULT>;

        r0.<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.cache.CacheKeyFactory cacheKeyFactory> = $r2;

        return;
    }

    public androidx.media3.datasource.cache.CacheDataSource$Factory setCache(androidx.media3.datasource.cache.Cache)
    {
        androidx.media3.datasource.cache.CacheDataSource$Factory r0;
        androidx.media3.datasource.cache.Cache r1;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource$Factory;

        r1 := @parameter0: androidx.media3.datasource.cache.Cache;

        r0.<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.cache.Cache cache> = r1;

        return r0;
    }

    public androidx.media3.datasource.cache.Cache getCache()
    {
        androidx.media3.datasource.cache.CacheDataSource$Factory r0;
        androidx.media3.datasource.cache.Cache $r1;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource$Factory;

        $r1 = r0.<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.cache.Cache cache>;

        return $r1;
    }

    public androidx.media3.datasource.cache.CacheDataSource$Factory setCacheReadDataSourceFactory(androidx.media3.datasource.DataSource$Factory)
    {
        androidx.media3.datasource.cache.CacheDataSource$Factory r0;
        androidx.media3.datasource.DataSource$Factory r1;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource$Factory;

        r1 := @parameter0: androidx.media3.datasource.DataSource$Factory;

        r0.<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.DataSource$Factory cacheReadDataSourceFactory> = r1;

        return r0;
    }

    public androidx.media3.datasource.cache.CacheDataSource$Factory setCacheWriteDataSinkFactory(androidx.media3.datasource.DataSink$Factory)
    {
        androidx.media3.datasource.cache.CacheDataSource$Factory r0;
        androidx.media3.datasource.DataSink$Factory r1;
        boolean $z0;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource$Factory;

        r1 := @parameter0: androidx.media3.datasource.DataSink$Factory;

        r0.<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.DataSink$Factory cacheWriteDataSinkFactory> = r1;

        if r1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<androidx.media3.datasource.cache.CacheDataSource$Factory: boolean cacheIsReadOnly> = $z0;

        return r0;
    }

    public androidx.media3.datasource.cache.CacheDataSource$Factory setCacheKeyFactory(androidx.media3.datasource.cache.CacheKeyFactory)
    {
        androidx.media3.datasource.cache.CacheDataSource$Factory r0;
        androidx.media3.datasource.cache.CacheKeyFactory r1;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource$Factory;

        r1 := @parameter0: androidx.media3.datasource.cache.CacheKeyFactory;

        r0.<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.cache.CacheKeyFactory cacheKeyFactory> = r1;

        return r0;
    }

    public androidx.media3.datasource.cache.CacheKeyFactory getCacheKeyFactory()
    {
        androidx.media3.datasource.cache.CacheDataSource$Factory r0;
        androidx.media3.datasource.cache.CacheKeyFactory $r1;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource$Factory;

        $r1 = r0.<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.cache.CacheKeyFactory cacheKeyFactory>;

        return $r1;
    }

    public androidx.media3.datasource.cache.CacheDataSource$Factory setUpstreamDataSourceFactory(androidx.media3.datasource.DataSource$Factory)
    {
        androidx.media3.datasource.cache.CacheDataSource$Factory r0;
        androidx.media3.datasource.DataSource$Factory r1;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource$Factory;

        r1 := @parameter0: androidx.media3.datasource.DataSource$Factory;

        r0.<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.DataSource$Factory upstreamDataSourceFactory> = r1;

        return r0;
    }

    public androidx.media3.datasource.cache.CacheDataSource$Factory setUpstreamPriorityTaskManager(androidx.media3.common.PriorityTaskManager)
    {
        androidx.media3.datasource.cache.CacheDataSource$Factory r0;
        androidx.media3.common.PriorityTaskManager r1;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource$Factory;

        r1 := @parameter0: androidx.media3.common.PriorityTaskManager;

        r0.<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.common.PriorityTaskManager upstreamPriorityTaskManager> = r1;

        return r0;
    }

    public androidx.media3.common.PriorityTaskManager getUpstreamPriorityTaskManager()
    {
        androidx.media3.datasource.cache.CacheDataSource$Factory r0;
        androidx.media3.common.PriorityTaskManager $r1;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource$Factory;

        $r1 = r0.<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.common.PriorityTaskManager upstreamPriorityTaskManager>;

        return $r1;
    }

    public androidx.media3.datasource.cache.CacheDataSource$Factory setUpstreamPriority(int)
    {
        androidx.media3.datasource.cache.CacheDataSource$Factory r0;
        int i0;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource$Factory;

        i0 := @parameter0: int;

        r0.<androidx.media3.datasource.cache.CacheDataSource$Factory: int upstreamPriority> = i0;

        return r0;
    }

    public androidx.media3.datasource.cache.CacheDataSource$Factory setFlags(int)
    {
        androidx.media3.datasource.cache.CacheDataSource$Factory r0;
        int i0;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource$Factory;

        i0 := @parameter0: int;

        r0.<androidx.media3.datasource.cache.CacheDataSource$Factory: int flags> = i0;

        return r0;
    }

    public androidx.media3.datasource.cache.CacheDataSource$Factory setEventListener(androidx.media3.datasource.cache.CacheDataSource$EventListener)
    {
        androidx.media3.datasource.cache.CacheDataSource$Factory r0;
        androidx.media3.datasource.cache.CacheDataSource$EventListener r1;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource$Factory;

        r1 := @parameter0: androidx.media3.datasource.cache.CacheDataSource$EventListener;

        r0.<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.cache.CacheDataSource$EventListener eventListener> = r1;

        return r0;
    }

    public androidx.media3.datasource.cache.CacheDataSource createDataSource()
    {
        androidx.media3.datasource.cache.CacheDataSource$Factory r0;
        androidx.media3.datasource.DataSource$Factory $r1, $r3;
        int $i0, $i1;
        androidx.media3.datasource.cache.CacheDataSource $r2;
        androidx.media3.datasource.DataSource $r5;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource$Factory;

        $r1 = r0.<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.DataSource$Factory upstreamDataSourceFactory>;

        if $r1 == null goto label1;

        $r3 = r0.<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.DataSource$Factory upstreamDataSourceFactory>;

        $r5 = interfaceinvoke $r3.<androidx.media3.datasource.DataSource$Factory: androidx.media3.datasource.DataSource createDataSource()>();

        goto label2;

     label1:
        $r5 = null;

     label2:
        $i1 = r0.<androidx.media3.datasource.cache.CacheDataSource$Factory: int flags>;

        $i0 = r0.<androidx.media3.datasource.cache.CacheDataSource$Factory: int upstreamPriority>;

        $r2 = specialinvoke r0.<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.cache.CacheDataSource createDataSourceInternal(androidx.media3.datasource.DataSource,int,int)>($r5, $i1, $i0);

        return $r2;
    }

    public androidx.media3.datasource.cache.CacheDataSource createDataSourceForDownloading()
    {
        androidx.media3.datasource.cache.CacheDataSource$Factory r0;
        androidx.media3.datasource.DataSource$Factory $r1, $r3;
        int $i0, $i1;
        androidx.media3.datasource.cache.CacheDataSource $r2;
        androidx.media3.datasource.DataSource $r5;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource$Factory;

        $r1 = r0.<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.DataSource$Factory upstreamDataSourceFactory>;

        if $r1 == null goto label1;

        $r3 = r0.<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.DataSource$Factory upstreamDataSourceFactory>;

        $r5 = interfaceinvoke $r3.<androidx.media3.datasource.DataSource$Factory: androidx.media3.datasource.DataSource createDataSource()>();

        goto label2;

     label1:
        $r5 = null;

     label2:
        $i0 = r0.<androidx.media3.datasource.cache.CacheDataSource$Factory: int flags>;

        $i1 = $i0 | 1;

        $r2 = specialinvoke r0.<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.cache.CacheDataSource createDataSourceInternal(androidx.media3.datasource.DataSource,int,int)>($r5, $i1, -1000);

        return $r2;
    }

    public androidx.media3.datasource.cache.CacheDataSource createDataSourceForRemovingDownload()
    {
        androidx.media3.datasource.cache.CacheDataSource$Factory r0;
        int $i0, $i1;
        androidx.media3.datasource.cache.CacheDataSource $r1;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource$Factory;

        $i0 = r0.<androidx.media3.datasource.cache.CacheDataSource$Factory: int flags>;

        $i1 = $i0 | 1;

        $r1 = specialinvoke r0.<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.cache.CacheDataSource createDataSourceInternal(androidx.media3.datasource.DataSource,int,int)>(null, $i1, -1000);

        return $r1;
    }

    private androidx.media3.datasource.cache.CacheDataSource createDataSourceInternal(androidx.media3.datasource.DataSource, int, int)
    {
        androidx.media3.datasource.cache.CacheDataSource$Factory r0;
        androidx.media3.datasource.DataSource r1, $r12;
        int i0, i1;
        androidx.media3.datasource.cache.Cache r2, $r3;
        java.lang.Object $r4;
        boolean $z0;
        androidx.media3.datasource.DataSink$Factory $r5, $r8;
        androidx.media3.datasource.cache.CacheDataSink$Factory $r6, $r7;
        androidx.media3.datasource.DataSink r9;
        androidx.media3.datasource.cache.CacheDataSource $r10;
        androidx.media3.datasource.DataSource$Factory $r11;
        androidx.media3.datasource.cache.CacheKeyFactory $r13;
        androidx.media3.common.PriorityTaskManager $r14;
        androidx.media3.datasource.cache.CacheDataSource$EventListener $r15;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource$Factory;

        r1 := @parameter0: androidx.media3.datasource.DataSource;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = r0.<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.cache.Cache cache>;

        $r4 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        r2 = (androidx.media3.datasource.cache.Cache) $r4;

        $z0 = r0.<androidx.media3.datasource.cache.CacheDataSource$Factory: boolean cacheIsReadOnly>;

        if $z0 != 0 goto label1;

        if r1 != null goto label2;

     label1:
        r9 = null;

        goto label4;

     label2:
        $r5 = r0.<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.DataSink$Factory cacheWriteDataSinkFactory>;

        if $r5 == null goto label3;

        $r8 = r0.<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.DataSink$Factory cacheWriteDataSinkFactory>;

        r9 = interfaceinvoke $r8.<androidx.media3.datasource.DataSink$Factory: androidx.media3.datasource.DataSink createDataSink()>();

        goto label4;

     label3:
        $r6 = new androidx.media3.datasource.cache.CacheDataSink$Factory;

        specialinvoke $r6.<androidx.media3.datasource.cache.CacheDataSink$Factory: void <init>()>();

        $r7 = virtualinvoke $r6.<androidx.media3.datasource.cache.CacheDataSink$Factory: androidx.media3.datasource.cache.CacheDataSink$Factory setCache(androidx.media3.datasource.cache.Cache)>(r2);

        r9 = virtualinvoke $r7.<androidx.media3.datasource.cache.CacheDataSink$Factory: androidx.media3.datasource.DataSink createDataSink()>();

     label4:
        $r10 = new androidx.media3.datasource.cache.CacheDataSource;

        $r11 = r0.<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.DataSource$Factory cacheReadDataSourceFactory>;

        $r12 = interfaceinvoke $r11.<androidx.media3.datasource.DataSource$Factory: androidx.media3.datasource.DataSource createDataSource()>();

        $r13 = r0.<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.cache.CacheKeyFactory cacheKeyFactory>;

        $r14 = r0.<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.common.PriorityTaskManager upstreamPriorityTaskManager>;

        $r15 = r0.<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.cache.CacheDataSource$EventListener eventListener>;

        specialinvoke $r10.<androidx.media3.datasource.cache.CacheDataSource: void <init>(androidx.media3.datasource.cache.Cache,androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSink,androidx.media3.datasource.cache.CacheKeyFactory,int,androidx.media3.common.PriorityTaskManager,int,androidx.media3.datasource.cache.CacheDataSource$EventListener,androidx.media3.datasource.cache.CacheDataSource$1)>(r2, r1, $r12, r9, $r13, i0, $r14, i1, $r15, null);

        return $r10;
    }

    public volatile androidx.media3.datasource.DataSource createDataSource()
    {
        androidx.media3.datasource.cache.CacheDataSource$Factory r0;
        androidx.media3.datasource.cache.CacheDataSource $r1;

        r0 := @this: androidx.media3.datasource.cache.CacheDataSource$Factory;

        $r1 = virtualinvoke r0.<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.cache.CacheDataSource createDataSource()>();

        return $r1;
    }

androidx.media3.datasource.cache.CacheDataSource$Flags
