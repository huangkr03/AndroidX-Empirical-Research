androidx.compose.runtime.snapshots.StateMapMutableIterator
<androidx.compose.runtime.snapshots.StateMapMutableIterator: androidx.compose.runtime.snapshots.SnapshotStateMap map>
<androidx.compose.runtime.snapshots.StateMapMutableIterator: java.util.Iterator iterator>
<androidx.compose.runtime.snapshots.StateMapMutableIterator: int modification>
<androidx.compose.runtime.snapshots.StateMapMutableIterator: java.util.Map$Entry current>
<androidx.compose.runtime.snapshots.StateMapMutableIterator: java.util.Map$Entry next>
    public void <init>(androidx.compose.runtime.snapshots.SnapshotStateMap, java.util.Iterator)
    {
        androidx.compose.runtime.snapshots.StateMapMutableIterator r0;
        androidx.compose.runtime.snapshots.SnapshotStateMap r1, $r3;
        java.util.Iterator r2;
        int $i0;

        r0 := @this: androidx.compose.runtime.snapshots.StateMapMutableIterator;

        r1 := @parameter0: androidx.compose.runtime.snapshots.SnapshotStateMap;

        r2 := @parameter1: java.util.Iterator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "map");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "iterator");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.runtime.snapshots.StateMapMutableIterator: androidx.compose.runtime.snapshots.SnapshotStateMap map> = r1;

        r0.<androidx.compose.runtime.snapshots.StateMapMutableIterator: java.util.Iterator iterator> = r2;

        $r3 = r0.<androidx.compose.runtime.snapshots.StateMapMutableIterator: androidx.compose.runtime.snapshots.SnapshotStateMap map>;

        $i0 = virtualinvoke $r3.<androidx.compose.runtime.snapshots.SnapshotStateMap: int getModification$runtime_release()>();

        r0.<androidx.compose.runtime.snapshots.StateMapMutableIterator: int modification> = $i0;

        virtualinvoke r0.<androidx.compose.runtime.snapshots.StateMapMutableIterator: void advance()>();

        return;
    }

    public final androidx.compose.runtime.snapshots.SnapshotStateMap getMap()
    {
        androidx.compose.runtime.snapshots.StateMapMutableIterator r0;
        androidx.compose.runtime.snapshots.SnapshotStateMap $r1;

        r0 := @this: androidx.compose.runtime.snapshots.StateMapMutableIterator;

        $r1 = r0.<androidx.compose.runtime.snapshots.StateMapMutableIterator: androidx.compose.runtime.snapshots.SnapshotStateMap map>;

        return $r1;
    }

    public final java.util.Iterator getIterator()
    {
        androidx.compose.runtime.snapshots.StateMapMutableIterator r0;
        java.util.Iterator $r1;

        r0 := @this: androidx.compose.runtime.snapshots.StateMapMutableIterator;

        $r1 = r0.<androidx.compose.runtime.snapshots.StateMapMutableIterator: java.util.Iterator iterator>;

        return $r1;
    }

    protected final int getModification()
    {
        androidx.compose.runtime.snapshots.StateMapMutableIterator r0;
        int $i0;

        r0 := @this: androidx.compose.runtime.snapshots.StateMapMutableIterator;

        $i0 = r0.<androidx.compose.runtime.snapshots.StateMapMutableIterator: int modification>;

        return $i0;
    }

    protected final void setModification(int)
    {
        androidx.compose.runtime.snapshots.StateMapMutableIterator r0;
        int i0;

        r0 := @this: androidx.compose.runtime.snapshots.StateMapMutableIterator;

        i0 := @parameter0: int;

        r0.<androidx.compose.runtime.snapshots.StateMapMutableIterator: int modification> = i0;

        return;
    }

    protected final java.util.Map$Entry getCurrent()
    {
        androidx.compose.runtime.snapshots.StateMapMutableIterator r0;
        java.util.Map$Entry $r1;

        r0 := @this: androidx.compose.runtime.snapshots.StateMapMutableIterator;

        $r1 = r0.<androidx.compose.runtime.snapshots.StateMapMutableIterator: java.util.Map$Entry current>;

        return $r1;
    }

    protected final void setCurrent(java.util.Map$Entry)
    {
        androidx.compose.runtime.snapshots.StateMapMutableIterator r0;
        java.util.Map$Entry r1;

        r0 := @this: androidx.compose.runtime.snapshots.StateMapMutableIterator;

        r1 := @parameter0: java.util.Map$Entry;

        r0.<androidx.compose.runtime.snapshots.StateMapMutableIterator: java.util.Map$Entry current> = r1;

        return;
    }

    protected final java.util.Map$Entry getNext()
    {
        androidx.compose.runtime.snapshots.StateMapMutableIterator r0;
        java.util.Map$Entry $r1;

        r0 := @this: androidx.compose.runtime.snapshots.StateMapMutableIterator;

        $r1 = r0.<androidx.compose.runtime.snapshots.StateMapMutableIterator: java.util.Map$Entry next>;

        return $r1;
    }

    protected final void setNext(java.util.Map$Entry)
    {
        androidx.compose.runtime.snapshots.StateMapMutableIterator r0;
        java.util.Map$Entry r1;

        r0 := @this: androidx.compose.runtime.snapshots.StateMapMutableIterator;

        r1 := @parameter0: java.util.Map$Entry;

        r0.<androidx.compose.runtime.snapshots.StateMapMutableIterator: java.util.Map$Entry next> = r1;

        return;
    }

    public final void remove()
    {
        androidx.compose.runtime.snapshots.StateMapMutableIterator r0, r1;
        java.util.Map$Entry r2;
        kotlin.Unit r3, r4;
        androidx.compose.runtime.snapshots.SnapshotStateMap $r5, $r7, $r10;
        int $i0, $i1, $i2;
        java.lang.Object $r8;
        java.util.ConcurrentModificationException r12;
        java.lang.IllegalStateException r13;
        java.lang.Throwable r14;

        r0 := @this: androidx.compose.runtime.snapshots.StateMapMutableIterator;

        r1 = r0;

        $r5 = virtualinvoke r1.<androidx.compose.runtime.snapshots.StateMapMutableIterator: androidx.compose.runtime.snapshots.SnapshotStateMap getMap()>();

        $i0 = virtualinvoke $r5.<androidx.compose.runtime.snapshots.SnapshotStateMap: int getModification$runtime_release()>();

        $i1 = staticinvoke <androidx.compose.runtime.snapshots.StateMapMutableIterator: int access$getModification(androidx.compose.runtime.snapshots.StateMapMutableIterator)>(r1);

        if $i0 == $i1 goto label1;

        r12 = new java.util.ConcurrentModificationException;

        specialinvoke r12.<java.util.ConcurrentModificationException: void <init>()>();

        throw r12;

     label1:
        r2 = r0.<androidx.compose.runtime.snapshots.StateMapMutableIterator: java.util.Map$Entry current>;

        if r2 == null goto label2;

        $r7 = r0.<androidx.compose.runtime.snapshots.StateMapMutableIterator: androidx.compose.runtime.snapshots.SnapshotStateMap map>;

        $r8 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke $r7.<androidx.compose.runtime.snapshots.SnapshotStateMap: java.lang.Object remove(java.lang.Object)>($r8);

        r0.<androidx.compose.runtime.snapshots.StateMapMutableIterator: java.util.Map$Entry current> = null;

        goto label3;

     label2:
        r13 = new java.lang.IllegalStateException;

        specialinvoke r13.<java.lang.IllegalStateException: void <init>()>();

        r14 = (java.lang.Throwable) r13;

        throw r14;

     label3:
        r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        r4 = r3;

        $r10 = virtualinvoke r1.<androidx.compose.runtime.snapshots.StateMapMutableIterator: androidx.compose.runtime.snapshots.SnapshotStateMap getMap()>();

        $i2 = virtualinvoke $r10.<androidx.compose.runtime.snapshots.SnapshotStateMap: int getModification$runtime_release()>();

        staticinvoke <androidx.compose.runtime.snapshots.StateMapMutableIterator: void access$setModification(androidx.compose.runtime.snapshots.StateMapMutableIterator,int)>(r1, $i2);

        return;
    }

    public final boolean hasNext()
    {
        androidx.compose.runtime.snapshots.StateMapMutableIterator r0;
        java.util.Map$Entry $r1;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.snapshots.StateMapMutableIterator;

        $r1 = r0.<androidx.compose.runtime.snapshots.StateMapMutableIterator: java.util.Map$Entry next>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected final void advance()
    {
        androidx.compose.runtime.snapshots.StateMapMutableIterator r0;
        java.util.Map$Entry $r1, $r6;
        java.util.Iterator $r2, $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: androidx.compose.runtime.snapshots.StateMapMutableIterator;

        $r1 = r0.<androidx.compose.runtime.snapshots.StateMapMutableIterator: java.util.Map$Entry next>;

        r0.<androidx.compose.runtime.snapshots.StateMapMutableIterator: java.util.Map$Entry current> = $r1;

        $r2 = r0.<androidx.compose.runtime.snapshots.StateMapMutableIterator: java.util.Iterator iterator>;

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.compose.runtime.snapshots.StateMapMutableIterator: java.util.Iterator iterator>;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.Map$Entry) $r4;

        goto label2;

     label1:
        $r6 = null;

     label2:
        r0.<androidx.compose.runtime.snapshots.StateMapMutableIterator: java.util.Map$Entry next> = $r6;

        return;
    }

    protected final java.lang.Object modify(kotlin.jvm.functions.Function0)
    {
        androidx.compose.runtime.snapshots.StateMapMutableIterator r0;
        kotlin.jvm.functions.Function0 r1;
        java.lang.Object r2, r3;
        androidx.compose.runtime.snapshots.SnapshotStateMap $r4, $r5;
        int $i0, $i1, $i2;
        java.util.ConcurrentModificationException $r6;

        r0 := @this: androidx.compose.runtime.snapshots.StateMapMutableIterator;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        $r4 = virtualinvoke r0.<androidx.compose.runtime.snapshots.StateMapMutableIterator: androidx.compose.runtime.snapshots.SnapshotStateMap getMap()>();

        $i0 = virtualinvoke $r4.<androidx.compose.runtime.snapshots.SnapshotStateMap: int getModification$runtime_release()>();

        $i1 = staticinvoke <androidx.compose.runtime.snapshots.StateMapMutableIterator: int access$getModification(androidx.compose.runtime.snapshots.StateMapMutableIterator)>(r0);

        if $i0 == $i1 goto label1;

        $r6 = new java.util.ConcurrentModificationException;

        specialinvoke $r6.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r6;

     label1:
        r2 = interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        r3 = r2;

        $r5 = virtualinvoke r0.<androidx.compose.runtime.snapshots.StateMapMutableIterator: androidx.compose.runtime.snapshots.SnapshotStateMap getMap()>();

        $i2 = virtualinvoke $r5.<androidx.compose.runtime.snapshots.SnapshotStateMap: int getModification$runtime_release()>();

        staticinvoke <androidx.compose.runtime.snapshots.StateMapMutableIterator: void access$setModification(androidx.compose.runtime.snapshots.StateMapMutableIterator,int)>(r0, $i2);

        return r2;
    }

    public static final int access$getModification(androidx.compose.runtime.snapshots.StateMapMutableIterator)
    {
        androidx.compose.runtime.snapshots.StateMapMutableIterator $r0;
        int $i0;

        $r0 := @parameter0: androidx.compose.runtime.snapshots.StateMapMutableIterator;

        $i0 = $r0.<androidx.compose.runtime.snapshots.StateMapMutableIterator: int modification>;

        return $i0;
    }

    public static final void access$setModification(androidx.compose.runtime.snapshots.StateMapMutableIterator, int)
    {
        androidx.compose.runtime.snapshots.StateMapMutableIterator $r0;
        int i0;

        $r0 := @parameter0: androidx.compose.runtime.snapshots.StateMapMutableIterator;

        i0 := @parameter1: int;

        $r0.<androidx.compose.runtime.snapshots.StateMapMutableIterator: int modification> = i0;

        return;
    }

