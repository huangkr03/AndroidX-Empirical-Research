androidx.camera.camera2.internal.compat.workaround.PreviewPixelHDRnet
    private void <init>()
    {
        androidx.camera.camera2.internal.compat.workaround.PreviewPixelHDRnet r0;

        r0 := @this: androidx.camera.camera2.internal.compat.workaround.PreviewPixelHDRnet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void setHDRnet(androidx.camera.core.impl.SessionConfig$Builder)
    {
        androidx.camera.core.impl.SessionConfig$Builder r0;
        androidx.camera.camera2.internal.compat.quirk.PreviewPixelHDRnetQuirk r1;
        androidx.camera.camera2.impl.Camera2ImplConfig$Builder r2, r10;
        androidx.camera.core.impl.Quirk $r3;
        android.hardware.camera2.CaptureRequest$Key $r5;
        java.lang.Integer $r6;
        androidx.camera.camera2.impl.Camera2ImplConfig $r8;
        androidx.camera.core.impl.Config r11;

        r0 := @parameter0: androidx.camera.core.impl.SessionConfig$Builder;

        $r3 = staticinvoke <androidx.camera.camera2.internal.compat.quirk.DeviceQuirks: androidx.camera.core.impl.Quirk get(java.lang.Class)>(class "Landroidx/camera/camera2/internal/compat/quirk/PreviewPixelHDRnetQuirk;");

        r1 = (androidx.camera.camera2.internal.compat.quirk.PreviewPixelHDRnetQuirk) $r3;

        if r1 != null goto label1;

        return;

     label1:
        r10 = new androidx.camera.camera2.impl.Camera2ImplConfig$Builder;

        specialinvoke r10.<androidx.camera.camera2.impl.Camera2ImplConfig$Builder: void <init>()>();

        r2 = r10;

        $r5 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key TONEMAP_MODE>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        virtualinvoke r2.<androidx.camera.camera2.impl.Camera2ImplConfig$Builder: androidx.camera.camera2.impl.Camera2ImplConfig$Builder setCaptureRequestOption(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)>($r5, $r6);

        $r8 = virtualinvoke r2.<androidx.camera.camera2.impl.Camera2ImplConfig$Builder: androidx.camera.camera2.impl.Camera2ImplConfig build()>();

        r11 = (androidx.camera.core.impl.Config) $r8;

        virtualinvoke r0.<androidx.camera.core.impl.SessionConfig$Builder: androidx.camera.core.impl.SessionConfig$Builder addImplementationOptions(androidx.camera.core.impl.Config)>(r11);

        return;
    }

