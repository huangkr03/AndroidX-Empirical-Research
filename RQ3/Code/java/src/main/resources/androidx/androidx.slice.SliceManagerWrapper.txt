androidx.slice.SliceManagerWrapper
<androidx.slice.SliceManagerWrapper: android.app.slice.SliceManager mManager>
<androidx.slice.SliceManagerWrapper: android.content.Context mContext>
    void <init>(android.content.Context)
    {
        androidx.slice.SliceManagerWrapper r0;
        android.content.Context r1;
        java.lang.Object $r2;
        android.app.slice.SliceManager $r3;

        r0 := @this: androidx.slice.SliceManagerWrapper;

        r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/slice/SliceManager;");

        $r3 = (android.app.slice.SliceManager) $r2;

        specialinvoke r0.<androidx.slice.SliceManagerWrapper: void <init>(android.content.Context,android.app.slice.SliceManager)>(r1, $r3);

        return;
    }

    void <init>(android.content.Context, android.app.slice.SliceManager)
    {
        androidx.slice.SliceManagerWrapper r0;
        android.content.Context r1;
        android.app.slice.SliceManager r2;

        r0 := @this: androidx.slice.SliceManagerWrapper;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.app.slice.SliceManager;

        specialinvoke r0.<androidx.slice.SliceManager: void <init>()>();

        r0.<androidx.slice.SliceManagerWrapper: android.content.Context mContext> = r1;

        r0.<androidx.slice.SliceManagerWrapper: android.app.slice.SliceManager mManager> = r2;

        return;
    }

    public java.util.Set getPinnedSpecs(android.net.Uri)
    {
        androidx.slice.SliceManagerWrapper r0;
        int $i0;
        android.app.slice.SliceManager $r1;
        java.util.Set $r2, $r3;
        android.net.Uri r4;

        r0 := @this: androidx.slice.SliceManagerWrapper;

        r4 := @parameter0: android.net.Uri;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 != 28 goto label1;

        r4 = specialinvoke r0.<androidx.slice.SliceManagerWrapper: android.net.Uri maybeAddCurrentUserId(android.net.Uri)>(r4);

     label1:
        $r1 = r0.<androidx.slice.SliceManagerWrapper: android.app.slice.SliceManager mManager>;

        $r2 = virtualinvoke $r1.<android.app.slice.SliceManager: java.util.Set getPinnedSpecs(android.net.Uri)>(r4);

        $r3 = staticinvoke <androidx.slice.SliceConvert: java.util.Set wrap(java.util.Set)>($r2);

        return $r3;
    }

    public int checkSlicePermission(android.net.Uri, int, int)
    {
        androidx.slice.SliceManagerWrapper r0;
        android.net.Uri r1;
        int i0, i1, $i2;
        android.app.slice.SliceManager $r2;

        r0 := @this: androidx.slice.SliceManagerWrapper;

        r1 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<androidx.slice.SliceManagerWrapper: android.app.slice.SliceManager mManager>;

        $i2 = virtualinvoke $r2.<android.app.slice.SliceManager: int checkSlicePermission(android.net.Uri,int,int)>(r1, i0, i1);

        return $i2;
    }

    public void grantSlicePermission(java.lang.String, android.net.Uri)
    {
        androidx.slice.SliceManagerWrapper r0;
        java.lang.String r1;
        android.net.Uri r2;
        android.app.slice.SliceManager $r3;

        r0 := @this: androidx.slice.SliceManagerWrapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        $r3 = r0.<androidx.slice.SliceManagerWrapper: android.app.slice.SliceManager mManager>;

        virtualinvoke $r3.<android.app.slice.SliceManager: void grantSlicePermission(java.lang.String,android.net.Uri)>(r1, r2);

        return;
    }

    public void revokeSlicePermission(java.lang.String, android.net.Uri)
    {
        androidx.slice.SliceManagerWrapper r0;
        java.lang.String r1;
        android.net.Uri r2;
        android.app.slice.SliceManager $r3;

        r0 := @this: androidx.slice.SliceManagerWrapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        $r3 = r0.<androidx.slice.SliceManagerWrapper: android.app.slice.SliceManager mManager>;

        virtualinvoke $r3.<android.app.slice.SliceManager: void revokeSlicePermission(java.lang.String,android.net.Uri)>(r1, r2);

        return;
    }

    public java.util.List getPinnedSlices()
    {
        androidx.slice.SliceManagerWrapper r0;
        android.app.slice.SliceManager $r1;
        java.util.List $r2;

        r0 := @this: androidx.slice.SliceManagerWrapper;

        $r1 = r0.<androidx.slice.SliceManagerWrapper: android.app.slice.SliceManager mManager>;

        $r2 = virtualinvoke $r1.<android.app.slice.SliceManager: java.util.List getPinnedSlices()>();

        return $r2;
    }

    private android.net.Uri maybeAddCurrentUserId(android.net.Uri)
    {
        androidx.slice.SliceManagerWrapper r0;
        android.net.Uri r1, $r11;
        java.lang.String r2, $r3, $r9;
        boolean $z0;
        android.net.Uri$Builder $r4, $r10;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        int $i0;

        r0 := @this: androidx.slice.SliceManagerWrapper;

        r1 := @parameter0: android.net.Uri;

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean contains(java.lang.CharSequence)>("@");

        if $z0 == 0 goto label2;

     label1:
        return r1;

     label2:
        r2 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        $r4 = virtualinvoke r1.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $i0 = specialinvoke r0.<androidx.slice.SliceManagerWrapper: int getCurrentUserId()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri$Builder encodedAuthority(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r11;
    }

    private int getCurrentUserId()
    {
        androidx.slice.SliceManagerWrapper r0;
        android.os.UserHandle r1;
        java.lang.Class $r2;
        java.lang.Class[] $r3;
        java.lang.reflect.Method $r4;
        java.lang.Object[] $r5;
        java.lang.Object $r6;
        java.lang.Integer $r7;
        int $i0;
        java.lang.Throwable $r8, $r9, $r10, r11, r12, r13;

        r0 := @this: androidx.slice.SliceManagerWrapper;

        r1 = staticinvoke <android.os.Process: android.os.UserHandle myUserHandle()>();

     label1:
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = newarray (java.lang.Class)[0];

        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getIdentifier", $r3);

        $r5 = newarray (java.lang.Object)[0];

        $r6 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r5);

        $r7 = (java.lang.Integer) $r6;

        $i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

     label2:
        return $i0;

     label3:
        $r10 := @caughtexception;

        r11 = $r10;

        return 0;

     label4:
        $r9 := @caughtexception;

        r12 = $r9;

        return 0;

     label5:
        $r8 := @caughtexception;

        r13 = $r8;

        return 0;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label4;
        catch java.lang.NoSuchMethodException from label1 to label2 with label5;
    }

