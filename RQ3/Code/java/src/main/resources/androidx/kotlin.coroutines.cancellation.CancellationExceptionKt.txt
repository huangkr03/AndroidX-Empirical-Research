kotlin.coroutines.cancellation.CancellationExceptionKt
    private static final java.util.concurrent.CancellationException CancellationException(java.lang.String, java.lang.Throwable)
    {
        java.lang.String $r0;
        java.lang.Throwable $r1;
        java.util.concurrent.CancellationException $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Throwable;

        $r2 = new java.util.concurrent.CancellationException;

        specialinvoke $r2.<java.util.concurrent.CancellationException: void <init>(java.lang.String)>($r0);

        virtualinvoke $r2.<java.util.concurrent.CancellationException: java.lang.Throwable initCause(java.lang.Throwable)>($r1);

        return $r2;
    }

    private static final java.util.concurrent.CancellationException CancellationException(java.lang.Throwable)
    {
        java.lang.Throwable $r0;
        java.util.concurrent.CancellationException $r1;
        java.lang.String $r2;

        $r0 := @parameter0: java.lang.Throwable;

        $r1 = new java.util.concurrent.CancellationException;

        if $r0 == null goto label1;

        $r2 = virtualinvoke $r0.<java.lang.Throwable: java.lang.String toString()>();

        goto label2;

     label1:
        $r2 = null;

     label2:
        specialinvoke $r1.<java.util.concurrent.CancellationException: void <init>(java.lang.String)>($r2);

        virtualinvoke $r1.<java.util.concurrent.CancellationException: java.lang.Throwable initCause(java.lang.Throwable)>($r0);

        return $r1;
    }

    public static void CancellationException$annotations()
    {
        return;
    }

