androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider
<androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider: androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion Companion>
<androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider: androidx.room.compiler.processing.XProcessingEnvConfig configure(java.util.Map)>
    static void <clinit>()
    {
        androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion $r0;

        $r0 = <androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion: androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion $$INSTANCE>;

        <androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider: androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion Companion> = $r0;

        return;
    }

androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion$instance$2
<androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion$instance$2: androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion$instance$2 INSTANCE>
    void <init>()
    {
        androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion$instance$2 r0;

        r0 := @this: androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion$instance$2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider invoke()
    {
        androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion$instance$2 r0;
        java.util.List r1;
        java.util.ServiceLoader $r2;
        java.lang.Iterable $r3;
        int $i0;
        java.lang.Object $r4;
        androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider $r5;
        java.lang.IllegalStateException $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;
        java.lang.String $r11, $r12;

        r0 := @this: androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion$instance$2;

        $r2 = staticinvoke <java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class)>(class "Landroidx/room/compiler/processing/XProcessingEnvironmentTestConfigProvider;");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "load(\n                XP\u2026:class.java\n            )");

        $r3 = (java.lang.Iterable) $r2;

        r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>($r3);

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 < 2 goto label1;

        $r6 = new java.lang.IllegalStateException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Multiple XProcessingEnvironmentTestConfigProvider implementations were found: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". There can be only 1 or 0.");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = virtualinvoke $r11.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r6;

     label1:
        $r4 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object firstOrNull(java.util.List)>(r1);

        $r5 = (androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider) $r4;

        return $r5;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion$instance$2 r0;
        androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider $r1;

        r0 := @this: androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion$instance$2;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion$instance$2: androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider invoke()>();

        return $r1;
    }

    static void <clinit>()
    {
        androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion$instance$2 $r0;

        $r0 = new androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion$instance$2;

        specialinvoke $r0.<androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion$instance$2: void <init>()>();

        <androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion$instance$2: androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion$instance$2 INSTANCE> = $r0;

        return;
    }

androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion
<androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion: androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion $$INSTANCE>
<androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion: kotlin.Lazy instance$delegate>
    private void <init>()
    {
        androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion r0;

        r0 := @this: androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private final androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider getInstance()
    {
        androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider $r3;

        r0 := @this: androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion;

        r1 = <androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion: kotlin.Lazy instance$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider) $r2;

        return $r3;
    }

    public final androidx.room.compiler.processing.XProcessingEnvConfig createConfig$room_compiler_processing_testing(java.util.Map)
    {
        androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion r0;
        java.util.Map r1;
        androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider $r2;
        androidx.room.compiler.processing.XProcessingEnvConfig$Companion $r3;
        androidx.room.compiler.processing.XProcessingEnvConfig $r4;

        r0 := @this: androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion;

        r1 := @parameter0: java.util.Map;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "options");

        $r2 = specialinvoke r0.<androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion: androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider getInstance()>();

        if $r2 == null goto label1;

        $r4 = interfaceinvoke $r2.<androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider: androidx.room.compiler.processing.XProcessingEnvConfig configure(java.util.Map)>(r1);

        if $r4 != null goto label2;

     label1:
        $r3 = <androidx.room.compiler.processing.XProcessingEnvConfig: androidx.room.compiler.processing.XProcessingEnvConfig$Companion Companion>;

        $r4 = virtualinvoke $r3.<androidx.room.compiler.processing.XProcessingEnvConfig$Companion: androidx.room.compiler.processing.XProcessingEnvConfig getDEFAULT()>();

     label2:
        return $r4;
    }

    static void <clinit>()
    {
        androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion $r0;
        androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion$instance$2 $r1;
        kotlin.jvm.functions.Function0 $r2;
        kotlin.Lazy $r3;

        $r0 = new androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion;

        specialinvoke $r0.<androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion: void <init>()>();

        <androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion: androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion $$INSTANCE> = $r0;

        $r1 = <androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion$instance$2: androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion$instance$2 INSTANCE>;

        $r2 = (kotlin.jvm.functions.Function0) $r1;

        $r3 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r2);

        <androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion: kotlin.Lazy instance$delegate> = $r3;

        return;
    }

