kotlin.sequences.SequencesKt__SequenceBuilderKt
<kotlin.sequences.SequencesKt__SequenceBuilderKt: int State_Done>
<kotlin.sequences.SequencesKt__SequenceBuilderKt: int State_Failed>
<kotlin.sequences.SequencesKt__SequenceBuilderKt: int State_ManyNotReady>
<kotlin.sequences.SequencesKt__SequenceBuilderKt: int State_ManyReady>
<kotlin.sequences.SequencesKt__SequenceBuilderKt: int State_NotReady>
<kotlin.sequences.SequencesKt__SequenceBuilderKt: int State_Ready>
    public void <init>()
    {
        kotlin.sequences.SequencesKt__SequenceBuilderKt $r0;

        $r0 := @this: kotlin.sequences.SequencesKt__SequenceBuilderKt;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final java.util.Iterator iterator(kotlin.jvm.functions.Function2)
    {
        kotlin.coroutines.Continuation $r0;
        kotlin.jvm.functions.Function2 $r1;
        kotlin.sequences.SequenceBuilderIterator $r2;

        $r1 := @parameter0: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "block");

        $r2 = new kotlin.sequences.SequenceBuilderIterator;

        specialinvoke $r2.<kotlin.sequences.SequenceBuilderIterator: void <init>()>();

        $r0 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation createCoroutineUnintercepted(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)>($r1, $r2, $r2);

        virtualinvoke $r2.<kotlin.sequences.SequenceBuilderIterator: void setNextStep(kotlin.coroutines.Continuation)>($r0);

        return $r2;
    }

    public static final kotlin.sequences.Sequence sequence(kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        kotlin.sequences.SequencesKt__SequenceBuilderKt$sequence$$inlined$Sequence$1 $r1;

        $r0 := @parameter0: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "block");

        $r1 = new kotlin.sequences.SequencesKt__SequenceBuilderKt$sequence$$inlined$Sequence$1;

        specialinvoke $r1.<kotlin.sequences.SequencesKt__SequenceBuilderKt$sequence$$inlined$Sequence$1: void <init>(kotlin.jvm.functions.Function2)>($r0);

        return $r1;
    }

