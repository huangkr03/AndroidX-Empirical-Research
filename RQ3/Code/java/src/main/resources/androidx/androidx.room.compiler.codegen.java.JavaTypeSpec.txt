androidx.room.compiler.codegen.java.JavaTypeSpec
<androidx.room.compiler.codegen.java.JavaTypeSpec: androidx.room.compiler.codegen.XClassName className>
<androidx.room.compiler.codegen.java.JavaTypeSpec: com.squareup.javapoet.TypeSpec actual>
    public void <init>(androidx.room.compiler.codegen.XClassName, com.squareup.javapoet.TypeSpec)
    {
        androidx.room.compiler.codegen.java.JavaTypeSpec r0;
        androidx.room.compiler.codegen.XClassName r1;
        com.squareup.javapoet.TypeSpec r2;

        r0 := @this: androidx.room.compiler.codegen.java.JavaTypeSpec;

        r1 := @parameter0: androidx.room.compiler.codegen.XClassName;

        r2 := @parameter1: com.squareup.javapoet.TypeSpec;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "className");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "actual");

        specialinvoke r0.<androidx.room.compiler.codegen.java.JavaLang: void <init>()>();

        r0.<androidx.room.compiler.codegen.java.JavaTypeSpec: androidx.room.compiler.codegen.XClassName className> = r1;

        r0.<androidx.room.compiler.codegen.java.JavaTypeSpec: com.squareup.javapoet.TypeSpec actual> = r2;

        return;
    }

    public androidx.room.compiler.codegen.XClassName getClassName()
    {
        androidx.room.compiler.codegen.java.JavaTypeSpec r0;
        androidx.room.compiler.codegen.XClassName $r1;

        r0 := @this: androidx.room.compiler.codegen.java.JavaTypeSpec;

        $r1 = r0.<androidx.room.compiler.codegen.java.JavaTypeSpec: androidx.room.compiler.codegen.XClassName className>;

        return $r1;
    }

    public final com.squareup.javapoet.TypeSpec getActual$room_compiler_processing()
    {
        androidx.room.compiler.codegen.java.JavaTypeSpec r0;
        com.squareup.javapoet.TypeSpec $r1;

        r0 := @this: androidx.room.compiler.codegen.java.JavaTypeSpec;

        $r1 = r0.<androidx.room.compiler.codegen.java.JavaTypeSpec: com.squareup.javapoet.TypeSpec actual>;

        return $r1;
    }

androidx.room.compiler.codegen.java.JavaTypeSpec$Builder
<androidx.room.compiler.codegen.java.JavaTypeSpec$Builder: androidx.room.compiler.codegen.XClassName className>
<androidx.room.compiler.codegen.java.JavaTypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder actual>
    public void <init>(androidx.room.compiler.codegen.XClassName, com.squareup.javapoet.TypeSpec$Builder)
    {
        androidx.room.compiler.codegen.java.JavaTypeSpec$Builder r0;
        androidx.room.compiler.codegen.XClassName r1;
        com.squareup.javapoet.TypeSpec$Builder r2;

        r0 := @this: androidx.room.compiler.codegen.java.JavaTypeSpec$Builder;

        r1 := @parameter0: androidx.room.compiler.codegen.XClassName;

        r2 := @parameter1: com.squareup.javapoet.TypeSpec$Builder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "className");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "actual");

        specialinvoke r0.<androidx.room.compiler.codegen.java.JavaLang: void <init>()>();

        r0.<androidx.room.compiler.codegen.java.JavaTypeSpec$Builder: androidx.room.compiler.codegen.XClassName className> = r1;

        r0.<androidx.room.compiler.codegen.java.JavaTypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder actual> = r2;

        return;
    }

    public final com.squareup.javapoet.TypeSpec$Builder getActual$room_compiler_processing()
    {
        androidx.room.compiler.codegen.java.JavaTypeSpec$Builder r0;
        com.squareup.javapoet.TypeSpec$Builder $r1;

        r0 := @this: androidx.room.compiler.codegen.java.JavaTypeSpec$Builder;

        $r1 = r0.<androidx.room.compiler.codegen.java.JavaTypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder actual>;

        return $r1;
    }

    public androidx.room.compiler.codegen.java.JavaTypeSpec$Builder superclass(androidx.room.compiler.codegen.XTypeName)
    {
        androidx.room.compiler.codegen.java.JavaTypeSpec$Builder r0, r2, $r3, $r7;
        androidx.room.compiler.codegen.XTypeName r1;
        com.squareup.javapoet.TypeSpec$Builder $r4;
        com.squareup.javapoet.TypeName $r5;

        r0 := @this: androidx.room.compiler.codegen.java.JavaTypeSpec$Builder;

        r1 := @parameter0: androidx.room.compiler.codegen.XTypeName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "typeName");

        r2 = r0;

        $r3 = (androidx.room.compiler.codegen.java.JavaTypeSpec$Builder) r2;

        $r4 = $r3.<androidx.room.compiler.codegen.java.JavaTypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder actual>;

        $r5 = virtualinvoke r1.<androidx.room.compiler.codegen.XTypeName: com.squareup.javapoet.TypeName getJava$room_compiler_processing()>();

        virtualinvoke $r4.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder superclass(com.squareup.javapoet.TypeName)>($r5);

        $r7 = (androidx.room.compiler.codegen.java.JavaTypeSpec$Builder) r2;

        return $r7;
    }

    public void addAnnotation(androidx.room.compiler.codegen.XAnnotationSpec)
    {
        androidx.room.compiler.codegen.java.JavaTypeSpec$Builder r0;
        androidx.room.compiler.codegen.XAnnotationSpec r1;
        java.lang.String r2, $r8;
        boolean $z0;
        androidx.room.compiler.codegen.java.JavaAnnotationSpec $r3;
        com.squareup.javapoet.TypeSpec$Builder $r4;
        com.squareup.javapoet.AnnotationSpec $r5;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: androidx.room.compiler.codegen.java.JavaTypeSpec$Builder;

        r1 := @parameter0: androidx.room.compiler.codegen.XAnnotationSpec;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $z0 = r1 instanceof androidx.room.compiler.codegen.java.JavaAnnotationSpec;

        if $z0 != 0 goto label1;

        r2 = "Failed requirement.";

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label1:
        $r4 = r0.<androidx.room.compiler.codegen.java.JavaTypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder actual>;

        $r3 = (androidx.room.compiler.codegen.java.JavaAnnotationSpec) r1;

        $r5 = virtualinvoke $r3.<androidx.room.compiler.codegen.java.JavaAnnotationSpec: com.squareup.javapoet.AnnotationSpec getActual$room_compiler_processing()>();

        virtualinvoke $r4.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder addAnnotation(com.squareup.javapoet.AnnotationSpec)>($r5);

        return;
    }

    public androidx.room.compiler.codegen.java.JavaTypeSpec$Builder addProperty(androidx.room.compiler.codegen.XTypeName, java.lang.String, androidx.room.compiler.codegen.VisibilityModifier, boolean, androidx.room.compiler.codegen.XCodeBlock, java.util.List)
    {
        androidx.room.compiler.codegen.java.JavaTypeSpec$Builder r0, r6, $r7, $r21;
        androidx.room.compiler.codegen.XTypeName r1;
        java.lang.String r2, r13, $r26;
        androidx.room.compiler.codegen.VisibilityModifier r3;
        boolean z0, $z4;
        androidx.room.compiler.codegen.XCodeBlock r4, r12;
        java.util.List r5;
        com.squareup.javapoet.FieldSpec$Builder r8;
        com.squareup.javapoet.TypeSpec$Builder r10, $r14;
        javax.lang.model.element.Modifier r11, $r17, $r27;
        com.squareup.javapoet.TypeName $r15;
        javax.lang.model.element.Modifier[] $r16, r38, r39;
        com.squareup.javapoet.FieldSpec $r19;
        androidx.room.compiler.codegen.java.JavaCodeBlock $r22;
        com.squareup.javapoet.CodeBlock $r23;
        java.lang.IllegalArgumentException $r25;
        androidx.room.compiler.processing.XNullability $r30, $r31, $r32, $r33;
        com.squareup.javapoet.ClassName $r34, $r36;

        r0 := @this: androidx.room.compiler.codegen.java.JavaTypeSpec$Builder;

        r1 := @parameter0: androidx.room.compiler.codegen.XTypeName;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.room.compiler.codegen.VisibilityModifier;

        z0 := @parameter3: boolean;

        r4 := @parameter4: androidx.room.compiler.codegen.XCodeBlock;

        r5 := @parameter5: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "typeName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "name");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "visibility");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "annotations");

        r6 = r0;

        $r7 = (androidx.room.compiler.codegen.java.JavaTypeSpec$Builder) r6;

        $r14 = $r7.<androidx.room.compiler.codegen.java.JavaTypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder actual>;

        $r15 = virtualinvoke r1.<androidx.room.compiler.codegen.XTypeName: com.squareup.javapoet.TypeName getJava$room_compiler_processing()>();

        $r16 = newarray (javax.lang.model.element.Modifier)[0];

        r8 = staticinvoke <com.squareup.javapoet.FieldSpec: com.squareup.javapoet.FieldSpec$Builder builder(com.squareup.javapoet.TypeName,java.lang.String,javax.lang.model.element.Modifier[])>($r15, r2, $r16);

        r10 = $r14;

        r11 = staticinvoke <androidx.room.compiler.codegen.java.JavaFunSpecKt: javax.lang.model.element.Modifier toJavaVisibilityModifier(androidx.room.compiler.codegen.VisibilityModifier)>(r3);

        $r17 = <javax.lang.model.element.Modifier: javax.lang.model.element.Modifier PRIVATE>;

        if r11 == $r17 goto label2;

        $r30 = virtualinvoke r1.<androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.processing.XNullability getNullability$room_compiler_processing()>();

        $r31 = <androidx.room.compiler.processing.XNullability: androidx.room.compiler.processing.XNullability NULLABLE>;

        if $r30 != $r31 goto label1;

        $r36 = staticinvoke <androidx.room.compiler.codegen.java.ClassNamesKt: com.squareup.javapoet.ClassName getNULLABLE_ANNOTATION()>();

        virtualinvoke r8.<com.squareup.javapoet.FieldSpec$Builder: com.squareup.javapoet.FieldSpec$Builder addAnnotation(com.squareup.javapoet.ClassName)>($r36);

        goto label2;

     label1:
        $r32 = virtualinvoke r1.<androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.processing.XNullability getNullability$room_compiler_processing()>();

        $r33 = <androidx.room.compiler.processing.XNullability: androidx.room.compiler.processing.XNullability NONNULL>;

        if $r32 != $r33 goto label2;

        $r34 = staticinvoke <androidx.room.compiler.codegen.java.ClassNamesKt: com.squareup.javapoet.ClassName getNONNULL_ANNOTATION()>();

        virtualinvoke r8.<com.squareup.javapoet.FieldSpec$Builder: com.squareup.javapoet.FieldSpec$Builder addAnnotation(com.squareup.javapoet.ClassName)>($r34);

     label2:
        r38 = newarray (javax.lang.model.element.Modifier)[1];

        r38[0] = r11;

        virtualinvoke r8.<com.squareup.javapoet.FieldSpec$Builder: com.squareup.javapoet.FieldSpec$Builder addModifiers(javax.lang.model.element.Modifier[])>(r38);

        if z0 != 0 goto label3;

        r39 = newarray (javax.lang.model.element.Modifier)[1];

        $r27 = <javax.lang.model.element.Modifier: javax.lang.model.element.Modifier FINAL>;

        r39[0] = $r27;

        virtualinvoke r8.<com.squareup.javapoet.FieldSpec$Builder: com.squareup.javapoet.FieldSpec$Builder addModifiers(javax.lang.model.element.Modifier[])>(r39);

     label3:
        if r4 == null goto label5;

        r12 = r4;

        $z4 = r12 instanceof androidx.room.compiler.codegen.java.JavaCodeBlock;

        if $z4 != 0 goto label4;

        r13 = "Failed requirement.";

        $r25 = new java.lang.IllegalArgumentException;

        $r26 = virtualinvoke r13.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r26);

        throw $r25;

     label4:
        $r22 = (androidx.room.compiler.codegen.java.JavaCodeBlock) r12;

        $r23 = virtualinvoke $r22.<androidx.room.compiler.codegen.java.JavaCodeBlock: com.squareup.javapoet.CodeBlock getActual$room_compiler_processing()>();

        virtualinvoke r8.<com.squareup.javapoet.FieldSpec$Builder: com.squareup.javapoet.FieldSpec$Builder initializer(com.squareup.javapoet.CodeBlock)>($r23);

        goto label5;

     label5:
        $r19 = virtualinvoke r8.<com.squareup.javapoet.FieldSpec$Builder: com.squareup.javapoet.FieldSpec build()>();

        virtualinvoke r10.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder addField(com.squareup.javapoet.FieldSpec)>($r19);

        $r21 = (androidx.room.compiler.codegen.java.JavaTypeSpec$Builder) r6;

        return $r21;
    }

    public androidx.room.compiler.codegen.java.JavaTypeSpec$Builder addFunction(androidx.room.compiler.codegen.XFunSpec)
    {
        androidx.room.compiler.codegen.java.JavaTypeSpec$Builder r0, r2, $r3, $r9;
        androidx.room.compiler.codegen.XFunSpec r1;
        java.lang.String r4, $r11;
        boolean $z1;
        androidx.room.compiler.codegen.java.JavaFunSpec $r5;
        com.squareup.javapoet.TypeSpec$Builder $r6;
        com.squareup.javapoet.MethodSpec $r7;
        java.lang.IllegalArgumentException $r10;

        r0 := @this: androidx.room.compiler.codegen.java.JavaTypeSpec$Builder;

        r1 := @parameter0: androidx.room.compiler.codegen.XFunSpec;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "functionSpec");

        r2 = r0;

        $r3 = (androidx.room.compiler.codegen.java.JavaTypeSpec$Builder) r2;

        $z1 = r1 instanceof androidx.room.compiler.codegen.java.JavaFunSpec;

        if $z1 != 0 goto label1;

        r4 = "Failed requirement.";

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label1:
        $r6 = $r3.<androidx.room.compiler.codegen.java.JavaTypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder actual>;

        $r5 = (androidx.room.compiler.codegen.java.JavaFunSpec) r1;

        $r7 = virtualinvoke $r5.<androidx.room.compiler.codegen.java.JavaFunSpec: com.squareup.javapoet.MethodSpec getActual$room_compiler_processing()>();

        virtualinvoke $r6.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder addMethod(com.squareup.javapoet.MethodSpec)>($r7);

        $r9 = (androidx.room.compiler.codegen.java.JavaTypeSpec$Builder) r2;

        return $r9;
    }

    public androidx.room.compiler.codegen.XTypeSpec build()
    {
        androidx.room.compiler.codegen.java.JavaTypeSpec$Builder r0;
        androidx.room.compiler.codegen.java.JavaTypeSpec $r1;
        com.squareup.javapoet.TypeSpec$Builder $r2;
        androidx.room.compiler.codegen.XClassName $r3;
        com.squareup.javapoet.TypeSpec $r4;
        androidx.room.compiler.codegen.XTypeSpec $r5;

        r0 := @this: androidx.room.compiler.codegen.java.JavaTypeSpec$Builder;

        $r1 = new androidx.room.compiler.codegen.java.JavaTypeSpec;

        $r3 = r0.<androidx.room.compiler.codegen.java.JavaTypeSpec$Builder: androidx.room.compiler.codegen.XClassName className>;

        $r2 = r0.<androidx.room.compiler.codegen.java.JavaTypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder actual>;

        $r4 = virtualinvoke $r2.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec build()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "actual.build()");

        specialinvoke $r1.<androidx.room.compiler.codegen.java.JavaTypeSpec: void <init>(androidx.room.compiler.codegen.XClassName,com.squareup.javapoet.TypeSpec)>($r3, $r4);

        $r5 = (androidx.room.compiler.codegen.XTypeSpec) $r1;

        return $r5;
    }

    public volatile androidx.room.compiler.codegen.XTypeSpec$Builder superclass(androidx.room.compiler.codegen.XTypeName)
    {
        androidx.room.compiler.codegen.java.JavaTypeSpec$Builder r0, $r2;
        androidx.room.compiler.codegen.XTypeName r1;
        androidx.room.compiler.codegen.XTypeSpec$Builder $r3;

        r0 := @this: androidx.room.compiler.codegen.java.JavaTypeSpec$Builder;

        r1 := @parameter0: androidx.room.compiler.codegen.XTypeName;

        $r2 = virtualinvoke r0.<androidx.room.compiler.codegen.java.JavaTypeSpec$Builder: androidx.room.compiler.codegen.java.JavaTypeSpec$Builder superclass(androidx.room.compiler.codegen.XTypeName)>(r1);

        $r3 = (androidx.room.compiler.codegen.XTypeSpec$Builder) $r2;

        return $r3;
    }

    public volatile androidx.room.compiler.codegen.XTypeSpec$Builder addProperty(androidx.room.compiler.codegen.XTypeName, java.lang.String, androidx.room.compiler.codegen.VisibilityModifier, boolean, androidx.room.compiler.codegen.XCodeBlock, java.util.List)
    {
        androidx.room.compiler.codegen.java.JavaTypeSpec$Builder r0, $r6;
        androidx.room.compiler.codegen.XTypeName r1;
        java.lang.String r2;
        androidx.room.compiler.codegen.VisibilityModifier r3;
        boolean z0;
        androidx.room.compiler.codegen.XCodeBlock r4;
        java.util.List r5;
        androidx.room.compiler.codegen.XTypeSpec$Builder $r7;

        r0 := @this: androidx.room.compiler.codegen.java.JavaTypeSpec$Builder;

        r1 := @parameter0: androidx.room.compiler.codegen.XTypeName;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.room.compiler.codegen.VisibilityModifier;

        z0 := @parameter3: boolean;

        r4 := @parameter4: androidx.room.compiler.codegen.XCodeBlock;

        r5 := @parameter5: java.util.List;

        $r6 = virtualinvoke r0.<androidx.room.compiler.codegen.java.JavaTypeSpec$Builder: androidx.room.compiler.codegen.java.JavaTypeSpec$Builder addProperty(androidx.room.compiler.codegen.XTypeName,java.lang.String,androidx.room.compiler.codegen.VisibilityModifier,boolean,androidx.room.compiler.codegen.XCodeBlock,java.util.List)>(r1, r2, r3, z0, r4, r5);

        $r7 = (androidx.room.compiler.codegen.XTypeSpec$Builder) $r6;

        return $r7;
    }

    public volatile androidx.room.compiler.codegen.XTypeSpec$Builder addFunction(androidx.room.compiler.codegen.XFunSpec)
    {
        androidx.room.compiler.codegen.java.JavaTypeSpec$Builder r0, $r2;
        androidx.room.compiler.codegen.XFunSpec r1;
        androidx.room.compiler.codegen.XTypeSpec$Builder $r3;

        r0 := @this: androidx.room.compiler.codegen.java.JavaTypeSpec$Builder;

        r1 := @parameter0: androidx.room.compiler.codegen.XFunSpec;

        $r2 = virtualinvoke r0.<androidx.room.compiler.codegen.java.JavaTypeSpec$Builder: androidx.room.compiler.codegen.java.JavaTypeSpec$Builder addFunction(androidx.room.compiler.codegen.XFunSpec)>(r1);

        $r3 = (androidx.room.compiler.codegen.XTypeSpec$Builder) $r2;

        return $r3;
    }

