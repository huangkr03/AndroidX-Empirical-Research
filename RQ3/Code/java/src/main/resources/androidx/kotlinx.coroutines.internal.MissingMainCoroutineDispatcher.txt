kotlinx.coroutines.internal.MissingMainCoroutineDispatcher
<kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Throwable cause>
<kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.String errorHint>
    public void <init>(java.lang.Throwable, java.lang.String)
    {
        kotlinx.coroutines.internal.MissingMainCoroutineDispatcher $r0;
        java.lang.Throwable $r1;
        java.lang.String $r2;

        $r0 := @this: kotlinx.coroutines.internal.MissingMainCoroutineDispatcher;

        $r1 := @parameter0: java.lang.Throwable;

        $r2 := @parameter1: java.lang.String;

        specialinvoke $r0.<kotlinx.coroutines.MainCoroutineDispatcher: void <init>()>();

        $r0.<kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Throwable cause> = $r1;

        $r0.<kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.String errorHint> = $r2;

        return;
    }

    private final java.lang.Void missing()
    {
        kotlinx.coroutines.internal.MissingMainCoroutineDispatcher $r0;
        java.lang.Throwable $r1;
        java.lang.String $r2, $r4;
        java.lang.StringBuilder $r3, r5;
        java.lang.IllegalStateException r6;
        kotlin.KotlinNothingValueException r7;

        $r0 := @this: kotlinx.coroutines.internal.MissingMainCoroutineDispatcher;

        $r1 = $r0.<kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Throwable cause>;

        if $r1 == null goto label3;

        $r2 = $r0.<kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.String errorHint>;

        if $r2 == null goto label1;

        r5 = new java.lang.StringBuilder;

        specialinvoke r5.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = $r2;

        if $r2 != null goto label2;

     label1:
        $r4 = "";

     label2:
        r5 = new java.lang.StringBuilder;

        specialinvoke r5.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Module with the Main dispatcher had failed to initialize");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r6 = new java.lang.IllegalStateException;

        $r1 = $r0.<kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Throwable cause>;

        specialinvoke r6.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r2, $r1);

        throw r6;

     label3:
        staticinvoke <kotlinx.coroutines.internal.MainDispatchersKt: java.lang.Void throwMissingMainDispatcherException()>();

        r7 = new kotlin.KotlinNothingValueException;

        specialinvoke r7.<kotlin.KotlinNothingValueException: void <init>()>();

        $r1 = (java.lang.Throwable) r7;

        throw $r1;
    }

    public java.lang.Void dispatch(kotlin.coroutines.CoroutineContext, java.lang.Runnable)
    {
        kotlinx.coroutines.internal.MissingMainCoroutineDispatcher $r0;
        java.lang.Runnable $r1;
        kotlin.coroutines.CoroutineContext $r2;
        kotlin.KotlinNothingValueException r3;
        java.lang.Throwable r4;

        $r0 := @this: kotlinx.coroutines.internal.MissingMainCoroutineDispatcher;

        $r2 := @parameter0: kotlin.coroutines.CoroutineContext;

        $r1 := @parameter1: java.lang.Runnable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "block");

        specialinvoke $r0.<kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Void missing()>();

        r3 = new kotlin.KotlinNothingValueException;

        specialinvoke r3.<kotlin.KotlinNothingValueException: void <init>()>();

        r4 = (java.lang.Throwable) r3;

        throw r4;
    }

    public volatile void dispatch(kotlin.coroutines.CoroutineContext, java.lang.Runnable)
    {
        kotlinx.coroutines.internal.MissingMainCoroutineDispatcher $r0;
        kotlin.coroutines.CoroutineContext $r1;
        java.lang.Runnable $r2;

        $r0 := @this: kotlinx.coroutines.internal.MissingMainCoroutineDispatcher;

        $r1 := @parameter0: kotlin.coroutines.CoroutineContext;

        $r2 := @parameter1: java.lang.Runnable;

        virtualinvoke $r0.<kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)>($r1, $r2);

        return;
    }

    public kotlinx.coroutines.MainCoroutineDispatcher getImmediate()
    {
        kotlinx.coroutines.internal.MissingMainCoroutineDispatcher $r0;

        $r0 := @this: kotlinx.coroutines.internal.MissingMainCoroutineDispatcher;

        return $r0;
    }

    public kotlinx.coroutines.DisposableHandle invokeOnTimeout(long, java.lang.Runnable, kotlin.coroutines.CoroutineContext)
    {
        kotlinx.coroutines.internal.MissingMainCoroutineDispatcher $r0;
        java.lang.Runnable $r1;
        kotlin.coroutines.CoroutineContext $r2;
        long $l0;
        kotlin.KotlinNothingValueException r3;
        java.lang.Throwable r4;

        $r0 := @this: kotlinx.coroutines.internal.MissingMainCoroutineDispatcher;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.lang.Runnable;

        $r2 := @parameter2: kotlin.coroutines.CoroutineContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "block");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "context");

        specialinvoke $r0.<kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Void missing()>();

        r3 = new kotlin.KotlinNothingValueException;

        specialinvoke r3.<kotlin.KotlinNothingValueException: void <init>()>();

        r4 = (java.lang.Throwable) r3;

        throw r4;
    }

    public boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
    {
        kotlinx.coroutines.internal.MissingMainCoroutineDispatcher $r0;
        kotlin.coroutines.CoroutineContext $r1;
        kotlin.KotlinNothingValueException r2;
        java.lang.Throwable r3;

        $r0 := @this: kotlinx.coroutines.internal.MissingMainCoroutineDispatcher;

        $r1 := @parameter0: kotlin.coroutines.CoroutineContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "context");

        specialinvoke $r0.<kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Void missing()>();

        r2 = new kotlin.KotlinNothingValueException;

        specialinvoke r2.<kotlin.KotlinNothingValueException: void <init>()>();

        r3 = (java.lang.Throwable) r2;

        throw r3;
    }

    public java.lang.Void scheduleResumeAfterDelay(long, kotlinx.coroutines.CancellableContinuation)
    {
        kotlinx.coroutines.internal.MissingMainCoroutineDispatcher $r0;
        kotlinx.coroutines.CancellableContinuation $r1;
        long $l0;
        kotlin.KotlinNothingValueException r2;
        java.lang.Throwable r3;

        $r0 := @this: kotlinx.coroutines.internal.MissingMainCoroutineDispatcher;

        $l0 := @parameter0: long;

        $r1 := @parameter1: kotlinx.coroutines.CancellableContinuation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "continuation");

        specialinvoke $r0.<kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Void missing()>();

        r2 = new kotlin.KotlinNothingValueException;

        specialinvoke r2.<kotlin.KotlinNothingValueException: void <init>()>();

        r3 = (java.lang.Throwable) r2;

        throw r3;
    }

    public volatile void scheduleResumeAfterDelay(long, kotlinx.coroutines.CancellableContinuation)
    {
        kotlinx.coroutines.internal.MissingMainCoroutineDispatcher $r0;
        long $l0;
        kotlinx.coroutines.CancellableContinuation $r1;

        $r0 := @this: kotlinx.coroutines.internal.MissingMainCoroutineDispatcher;

        $l0 := @parameter0: long;

        $r1 := @parameter1: kotlinx.coroutines.CancellableContinuation;

        virtualinvoke $r0.<kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation)>($l0, $r1);

        return;
    }

    public java.lang.String toString()
    {
        kotlinx.coroutines.internal.MissingMainCoroutineDispatcher $r0;
        java.lang.Throwable $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        $r0 := @this: kotlinx.coroutines.internal.MissingMainCoroutineDispatcher;

        $r1 = $r0.<kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Throwable cause>;

        if $r1 == null goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", cause=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r3 = "";

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dispatchers.Main[missing");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

