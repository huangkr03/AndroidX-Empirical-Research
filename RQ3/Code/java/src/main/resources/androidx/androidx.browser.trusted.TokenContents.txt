androidx.browser.trusted.TokenContents
<androidx.browser.trusted.TokenContents: byte[] mContents>
<androidx.browser.trusted.TokenContents: java.lang.String mPackageName>
<androidx.browser.trusted.TokenContents: java.util.List mFingerprints>
    static androidx.browser.trusted.TokenContents deserialize(byte[])
    {
        byte[] r0;
        androidx.browser.trusted.TokenContents $r1;

        r0 := @parameter0: byte[];

        $r1 = new androidx.browser.trusted.TokenContents;

        specialinvoke $r1.<androidx.browser.trusted.TokenContents: void <init>(byte[])>(r0);

        return $r1;
    }

    private void <init>(byte[])
    {
        androidx.browser.trusted.TokenContents r0;
        byte[] r1;

        r0 := @this: androidx.browser.trusted.TokenContents;

        r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.browser.trusted.TokenContents: byte[] mContents> = r1;

        return;
    }

    static androidx.browser.trusted.TokenContents create(java.lang.String, java.util.List) throws java.io.IOException
    {
        java.lang.String r0;
        java.util.List r1;
        androidx.browser.trusted.TokenContents $r2;
        byte[] $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        $r2 = new androidx.browser.trusted.TokenContents;

        $r3 = staticinvoke <androidx.browser.trusted.TokenContents: byte[] createToken(java.lang.String,java.util.List)>(r0, r1);

        specialinvoke $r2.<androidx.browser.trusted.TokenContents: void <init>(byte[],java.lang.String,java.util.List)>($r3, r0, r1);

        return $r2;
    }

    private void <init>(byte[], java.lang.String, java.util.List)
    {
        androidx.browser.trusted.TokenContents r0;
        byte[] r1, r5, $r9;
        java.lang.String r2;
        java.util.List r3, $r8;
        java.util.Iterator r4;
        java.util.ArrayList $r6;
        int $i0, $i1;
        boolean $z0;
        java.lang.Object $r7;

        r0 := @this: androidx.browser.trusted.TokenContents;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.browser.trusted.TokenContents: byte[] mContents> = r1;

        r0.<androidx.browser.trusted.TokenContents: java.lang.String mPackageName> = r2;

        $r6 = new java.util.ArrayList;

        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i0);

        r0.<androidx.browser.trusted.TokenContents: java.util.List mFingerprints> = $r6;

        r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (byte[]) $r7;

        $r8 = r0.<androidx.browser.trusted.TokenContents: java.util.List mFingerprints>;

        $i1 = lengthof r5;

        $r9 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r5, $i1);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r9);

        goto label1;

     label2:
        return;
    }

    public java.lang.String getPackageName() throws java.io.IOException
    {
        androidx.browser.trusted.TokenContents r0;
        java.lang.String $r1, $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: androidx.browser.trusted.TokenContents;

        specialinvoke r0.<androidx.browser.trusted.TokenContents: void parseIfNeeded()>();

        $r1 = r0.<androidx.browser.trusted.TokenContents: java.lang.String mPackageName>;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>()>();

        throw $r3;

     label1:
        $r2 = r0.<androidx.browser.trusted.TokenContents: java.lang.String mPackageName>;

        return $r2;
    }

    public int getFingerprintCount() throws java.io.IOException
    {
        androidx.browser.trusted.TokenContents r0;
        java.util.List $r1, $r2;
        int $i0;
        java.lang.IllegalStateException $r3;

        r0 := @this: androidx.browser.trusted.TokenContents;

        specialinvoke r0.<androidx.browser.trusted.TokenContents: void parseIfNeeded()>();

        $r1 = r0.<androidx.browser.trusted.TokenContents: java.util.List mFingerprints>;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>()>();

        throw $r3;

     label1:
        $r2 = r0.<androidx.browser.trusted.TokenContents: java.util.List mFingerprints>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        return $i0;
    }

    public byte[] getFingerprint(int) throws java.io.IOException
    {
        androidx.browser.trusted.TokenContents r0;
        int i0, $i1;
        java.util.List $r1, $r2, $r4;
        java.lang.Object $r3, $r6;
        byte[] $r5, $r7, $r8;
        java.lang.IllegalStateException $r9;

        r0 := @this: androidx.browser.trusted.TokenContents;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.browser.trusted.TokenContents: void parseIfNeeded()>();

        $r1 = r0.<androidx.browser.trusted.TokenContents: java.util.List mFingerprints>;

        if $r1 != null goto label1;

        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>()>();

        throw $r9;

     label1:
        $r2 = r0.<androidx.browser.trusted.TokenContents: java.util.List mFingerprints>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r5 = (byte[]) $r3;

        $r4 = r0.<androidx.browser.trusted.TokenContents: java.util.List mFingerprints>;

        $r6 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0);

        $r7 = (byte[]) $r6;

        $i1 = lengthof $r7;

        $r8 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>($r5, $i1);

        return $r8;
    }

    public byte[] serialize()
    {
        androidx.browser.trusted.TokenContents r0;
        byte[] $r1, $r2, $r3;
        int $i0;

        r0 := @this: androidx.browser.trusted.TokenContents;

        $r2 = r0.<androidx.browser.trusted.TokenContents: byte[] mContents>;

        $r1 = r0.<androidx.browser.trusted.TokenContents: byte[] mContents>;

        $i0 = lengthof $r1;

        $r3 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>($r2, $i0);

        return $r3;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.browser.trusted.TokenContents r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        byte[] $r5, $r6;
        boolean $z0;

        r0 := @this: androidx.browser.trusted.TokenContents;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

     label2:
        return 0;

     label3:
        r2 = (androidx.browser.trusted.TokenContents) r1;

        $r6 = r0.<androidx.browser.trusted.TokenContents: byte[] mContents>;

        $r5 = r2.<androidx.browser.trusted.TokenContents: byte[] mContents>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r6, $r5);

        return $z0;
    }

    public int hashCode()
    {
        androidx.browser.trusted.TokenContents r0;
        byte[] $r1;
        int $i0;

        r0 := @this: androidx.browser.trusted.TokenContents;

        $r1 = r0.<androidx.browser.trusted.TokenContents: byte[] mContents>;

        $i0 = staticinvoke <java.util.Arrays: int hashCode(byte[])>($r1);

        return $i0;
    }

    private static byte[] createToken(java.lang.String, java.util.List) throws java.io.IOException
    {
        java.lang.String r0;
        java.util.List r1;
        java.io.ByteArrayOutputStream r2, $r7;
        java.io.DataOutputStream r3, $r8;
        java.util.Iterator r4;
        byte[] r5, $r9;
        java.util.Comparator $r6;
        int $i0, $i1;
        boolean $z0;
        java.lang.Object $r10;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        $r6 = dynamicinvoke "compare" <java.util.Comparator ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: int __METHODTYPE__(java.lang.Object,java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.browser.trusted.TokenContents: int compareByteArrays(byte[],byte[])>, methodtype: int __METHODTYPE__(byte[],byte[]));

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r1, $r6);

        $r7 = new java.io.ByteArrayOutputStream;

        specialinvoke $r7.<java.io.ByteArrayOutputStream: void <init>()>();

        r2 = $r7;

        $r8 = new java.io.DataOutputStream;

        specialinvoke $r8.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r2);

        r3 = $r8;

        virtualinvoke r3.<java.io.DataOutputStream: void writeUTF(java.lang.String)>(r0);

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        virtualinvoke r3.<java.io.DataOutputStream: void writeInt(int)>($i0);

        r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (byte[]) $r10;

        $i1 = lengthof r5;

        virtualinvoke r3.<java.io.DataOutputStream: void writeInt(int)>($i1);

        virtualinvoke r3.<java.io.DataOutputStream: void write(byte[])>(r5);

        goto label1;

     label2:
        virtualinvoke r3.<java.io.DataOutputStream: void flush()>();

        $r9 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r9;
    }

    private static int compareByteArrays(byte[], byte[])
    {
        byte[] r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i12, i13;
        byte $b8, $b9, $b10, $b11;

        r0 := @parameter0: byte[];

        r1 := @parameter1: byte[];

        if r0 != r1 goto label1;

        return 0;

     label1:
        if r0 != null goto label2;

        return -1;

     label2:
        if r1 != null goto label3;

        return 1;

     label3:
        i13 = 0;

     label4:
        $i1 = lengthof r0;

        $i0 = lengthof r1;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i0);

        if i13 >= $i2 goto label6;

        $b9 = r0[i13];

        $b8 = r1[i13];

        if $b9 == $b8 goto label5;

        $b11 = r0[i13];

        $b10 = r1[i13];

        $i12 = $b11 - $b10;

        return $i12;

     label5:
        i13 = i13 + 1;

        goto label4;

     label6:
        $i4 = lengthof r0;

        $i3 = lengthof r1;

        if $i4 == $i3 goto label7;

        $i6 = lengthof r0;

        $i5 = lengthof r1;

        $i7 = $i6 - $i5;

        return $i7;

     label7:
        return 0;
    }

    private void parseIfNeeded() throws java.io.IOException
    {
        androidx.browser.trusted.TokenContents r0;
        java.io.DataInputStream r1, $r4;
        int i0, i1, i2, i3;
        byte[] r2, $r6;
        java.lang.String $r3, $r7;
        java.io.ByteArrayInputStream $r5;
        java.util.ArrayList $r8;
        java.util.List $r9;
        java.lang.IllegalStateException $r10;

        r0 := @this: androidx.browser.trusted.TokenContents;

        $r3 = r0.<androidx.browser.trusted.TokenContents: java.lang.String mPackageName>;

        if $r3 == null goto label1;

        return;

     label1:
        $r4 = new java.io.DataInputStream;

        $r5 = new java.io.ByteArrayInputStream;

        $r6 = r0.<androidx.browser.trusted.TokenContents: byte[] mContents>;

        specialinvoke $r5.<java.io.ByteArrayInputStream: void <init>(byte[])>($r6);

        specialinvoke $r4.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r5);

        r1 = $r4;

        $r7 = virtualinvoke r1.<java.io.DataInputStream: java.lang.String readUTF()>();

        r0.<androidx.browser.trusted.TokenContents: java.lang.String mPackageName> = $r7;

        i0 = virtualinvoke r1.<java.io.DataInputStream: int readInt()>();

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>(i0);

        r0.<androidx.browser.trusted.TokenContents: java.util.List mFingerprints> = $r8;

        i3 = 0;

     label2:
        if i3 >= i0 goto label4;

        i1 = virtualinvoke r1.<java.io.DataInputStream: int readInt()>();

        r2 = newarray (byte)[i1];

        i2 = virtualinvoke r1.<java.io.DataInputStream: int read(byte[])>(r2);

        if i2 == i1 goto label3;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Could not read fingerprint");

        throw $r10;

     label3:
        $r9 = r0.<androidx.browser.trusted.TokenContents: java.util.List mFingerprints>;

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r2);

        i3 = i3 + 1;

        goto label2;

     label4:
        return;
    }

