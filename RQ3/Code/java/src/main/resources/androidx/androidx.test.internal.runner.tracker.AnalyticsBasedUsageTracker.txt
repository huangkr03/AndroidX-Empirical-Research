androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker
<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String TAG>
<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String UTF_8>
<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String APP_NAME_PARAM>
<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String SCREEN_NAME_PARAM>
<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String APP_VERSION_PARAM>
<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String TRACKER_ID_PARAM>
<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String CLIENT_ID_PARAM>
<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String SCREEN_RESOLUTION_PARAM>
<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String API_LEVEL_PARAM>
<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String MODEL_NAME_PARAM>
<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String trackingId>
<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String targetPackage>
<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.net.URL analyticsURI>
<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String screenResolution>
<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String apiLevel>
<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String model>
<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String userId>
<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.util.Map usageTypeToVersion>
    private void <init>(androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder)
    {
        androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker r0;
        androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder r1;
        java.util.HashMap $r2;
        java.lang.String $r3, $r5, $r6, $r8, $r12, $r14, $r15, $r17, $r18, $r20, $r21, $r23;
        java.lang.Object $r4, $r7, $r10, $r13, $r16, $r19, $r22;
        java.net.URL $r9, $r11;

        r0 := @this: androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker;

        r1 := @parameter0: androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.util.Map usageTypeToVersion> = $r2;

        $r3 = staticinvoke <androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String '-$$Nest$fgettrackingId'(androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder)>(r1);

        $r4 = staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        $r5 = (java.lang.String) $r4;

        r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String trackingId> = $r5;

        $r6 = staticinvoke <androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String '-$$Nest$fgettargetPackage'(androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder)>(r1);

        $r7 = staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object)>($r6);

        $r8 = (java.lang.String) $r7;

        r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String targetPackage> = $r8;

        $r9 = staticinvoke <androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.net.URL '-$$Nest$fgetanalyticsURI'(androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder)>(r1);

        $r10 = staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object)>($r9);

        $r11 = (java.net.URL) $r10;

        r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.net.URL analyticsURI> = $r11;

        $r12 = staticinvoke <androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String '-$$Nest$fgetapiLevel'(androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder)>(r1);

        $r13 = staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object)>($r12);

        $r14 = (java.lang.String) $r13;

        r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String apiLevel> = $r14;

        $r15 = staticinvoke <androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String '-$$Nest$fgetmodel'(androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder)>(r1);

        $r16 = staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object)>($r15);

        $r17 = (java.lang.String) $r16;

        r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String model> = $r17;

        $r18 = staticinvoke <androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String '-$$Nest$fgetscreenResolution'(androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder)>(r1);

        $r19 = staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object)>($r18);

        $r20 = (java.lang.String) $r19;

        r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String screenResolution> = $r20;

        $r21 = staticinvoke <androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String '-$$Nest$fgetuserId'(androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder)>(r1);

        $r22 = staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object)>($r21);

        $r23 = (java.lang.String) $r22;

        r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String userId> = $r23;

        return;
    }

    void <init>(androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder, androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker-IA)
    {
        androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker r0;
        androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder r1;
        androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker-IA r2;

        r0 := @this: androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker;

        r1 := @parameter0: androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder;

        r2 := @parameter1: androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker-IA;

        specialinvoke r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: void <init>(androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder)>(r1);

        return;
    }

    public void sendUsages()
    {
        androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker r0;
        java.util.HashMap r1, $r7;
        java.util.Map$Entry r2;
        int i0, i1, $i3, $i4, $i5;
        java.lang.Throwable r3, $r67, $r73, $r74, $r75, r77, r79, r84;
        java.lang.String r4, $r12, $r13, $r16, $r17, $r23, $r24, $r27, $r28, $r31, $r32, $r35, $r36, $r48, $r49, $r53, $r54, $r56, $r58, $r66, $r72, r78, r83, r85;
        java.util.Map $r5, $r6, $r8, $r9, r76;
        boolean $z0, $z1;
        java.lang.StringBuilder $r10, $r11, $r14, $r15, $r18, $r19, $r20, $r21, $r22, $r25, $r26, $r29, $r30, $r33, $r34, $r37, $r38, $r39, $r44, $r45, $r46, $r50, $r51, $r55, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r68, $r69, $r70, $r71;
        long $l2;
        java.util.Set $r40;
        java.lang.Object $r41, $r47, $r52;
        java.net.URL $r42;
        java.net.URLConnection $r43;
        java.io.OutputStream $r57;
        java.util.Iterator r80;
        java.net.HttpURLConnection r81;
        byte[] r82;

        r0 := @this: androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker;

        $r5 = r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.util.Map usageTypeToVersion>;

        r76 = $r5;

        entermonitor $r5;

     label01:
        $r6 = r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.util.Map usageTypeToVersion>;

        $z0 = interfaceinvoke $r6.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label03;

        exitmonitor r76;

     label02:
        return;

     label03:
        $r7 = new java.util.HashMap;

        $r8 = r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.util.Map usageTypeToVersion>;

        specialinvoke $r7.<java.util.HashMap: void <init>(java.util.Map)>($r8);

        r1 = $r7;

        $r9 = r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.util.Map usageTypeToVersion>;

        interfaceinvoke $r9.<java.util.Map: void clear()>();

        exitmonitor r76;

     label04:
        goto label07;

     label05:
        $r74 := @caughtexception;

        r77 = $r74;

        exitmonitor r76;

     label06:
        throw r77;

     label07:
        r78 = null;

     label08:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("an=");

        $r12 = r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String targetPackage>;

        $r13 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r12, "UTF-8");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&tid=");

        $r16 = r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String trackingId>;

        $r17 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r16, "UTF-8");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&v=1");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&z=");

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&cid=");

        $r23 = r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String userId>;

        $r24 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r23, "UTF-8");

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&sr=");

        $r27 = r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String screenResolution>;

        $r28 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r27, "UTF-8");

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&cd2=");

        $r31 = r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String apiLevel>;

        $r32 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r31, "UTF-8");

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&cd3=");

        $r35 = r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.lang.String model>;

        $r36 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r35, "UTF-8");

        $r37 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&t=appview");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&sc=start");

        r78 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

     label09:
        goto label11;

     label10:
        $r73 := @caughtexception;

        r79 = $r73;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InfraTrack", "Impossible error happened. analytics disabled.", r79);

     label11:
        $r40 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r80 = interfaceinvoke $r40.<java.util.Set: java.util.Iterator iterator()>();

     label12:
        $z1 = interfaceinvoke r80.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label21;

        $r41 = interfaceinvoke r80.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r41;

        r81 = null;

     label13:
        $r42 = r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.net.URL analyticsURI>;

        $r43 = virtualinvoke $r42.<java.net.URL: java.net.URLConnection openConnection()>();

        r81 = (java.net.HttpURLConnection) $r43;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r78);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&cd=");

        $r47 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r48 = (java.lang.String) $r47;

        $r49 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r48, "UTF-8");

        $r50 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&av=");

        $r52 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r53 = (java.lang.String) $r52;

        $r54 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r53, "UTF-8");

        $r55 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        r82 = virtualinvoke $r56.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r81.<java.net.HttpURLConnection: void setConnectTimeout(int)>(3000);

        virtualinvoke r81.<java.net.HttpURLConnection: void setReadTimeout(int)>(5000);

        virtualinvoke r81.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

        $i3 = lengthof r82;

        virtualinvoke r81.<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>($i3);

        $r57 = virtualinvoke r81.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        virtualinvoke $r57.<java.io.OutputStream: void write(byte[])>(r82);

        i0 = virtualinvoke r81.<java.net.HttpURLConnection: int getResponseCode()>();

        $i4 = i0 / 100;

        if $i4 == 2 goto label14;

        $r58 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        $i5 = virtualinvoke r81.<java.net.HttpURLConnection: int getResponseCode()>();

        r4 = virtualinvoke r81.<java.net.HttpURLConnection: java.lang.String getResponseMessage()>();

        i1 = $i5;

        r83 = $r58;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Analytics post: ");

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r83);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed. code: ");

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("InfraTrack", $r66);

     label14:
        if null == r81 goto label20;

        virtualinvoke r81.<java.net.HttpURLConnection: void disconnect()>();

        goto label20;

     label15:
        $r67 := @caughtexception;

        r84 = $r67;

        r85 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Analytics post: ");

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r85);

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed. ");

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InfraTrack", $r72, r84);

     label16:
        if null == r81 goto label20;

        virtualinvoke r81.<java.net.HttpURLConnection: void disconnect()>();

        goto label20;

     label17:
        $r75 := @caughtexception;

        r3 = $r75;

     label18:
        if null == r81 goto label19;

        virtualinvoke r81.<java.net.HttpURLConnection: void disconnect()>();

     label19:
        throw r3;

     label20:
        goto label12;

     label21:
        return;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.io.IOException from label08 to label09 with label10;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    public void trackUsage(java.lang.String, java.lang.String)
    {
        androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker r0;
        java.lang.String r1, r2;
        java.util.Map r3, $r5, $r6;
        java.lang.Throwable r4, $r8;

        r0 := @this: androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r5 = r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.util.Map usageTypeToVersion>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: java.util.Map usageTypeToVersion>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        r4 = $r8;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder
<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: android.content.Context targetContext>
<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: android.net.Uri analyticsUri>
<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String trackingId>
<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String apiLevel>
<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String model>
<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String targetPackage>
<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.net.URL analyticsURI>
<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String screenResolution>
<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String userId>
<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: boolean hashed>
    public androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder withAnalyticsUri(android.net.Uri)
    {
        androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder r0;
        android.net.Uri r1;

        r0 := @this: androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder;

        r1 := @parameter0: android.net.Uri;

        staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: android.net.Uri analyticsUri> = r1;

        return r0;
    }

    public androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder withApiLevel(java.lang.String)
    {
        androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder r0;
        java.lang.String r1;

        r0 := @this: androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder;

        r1 := @parameter0: java.lang.String;

        r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String apiLevel> = r1;

        return r0;
    }

    public androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder withModel(java.lang.String)
    {
        androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder r0;
        java.lang.String r1;

        r0 := @this: androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder;

        r1 := @parameter0: java.lang.String;

        r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String model> = r1;

        return r0;
    }

    public androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder withScreenResolution(java.lang.String)
    {
        androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder r0;
        java.lang.String r1;

        r0 := @this: androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder;

        r1 := @parameter0: java.lang.String;

        r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String screenResolution> = r1;

        return r0;
    }

    public androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder withTargetPackage(java.lang.String)
    {
        androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder r0;
        java.lang.String r1;

        r0 := @this: androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder;

        r1 := @parameter0: java.lang.String;

        r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: boolean hashed> = 0;

        r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String targetPackage> = r1;

        return r0;
    }

    public androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder withTrackingId(java.lang.String)
    {
        androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder r0;
        java.lang.String r1;

        r0 := @this: androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder;

        r1 := @parameter0: java.lang.String;

        r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String trackingId> = r1;

        return r0;
    }

    public androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder withUserId(java.lang.String)
    {
        androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder r0;
        java.lang.String r1;

        r0 := @this: androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder;

        r1 := @parameter0: java.lang.String;

        r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String userId> = r1;

        return r0;
    }

    public androidx.test.internal.runner.tracker.UsageTracker buildIfPossible()
    {
        androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder r0;
        java.math.BigInteger r1, $r24;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.String $r2, $r3, $r4, $r7, $r8, $r11, $r19, $r20, $r21, $r22, $r29, $r31, $r38, r42, r46, $r48;
        java.net.URL $r5;
        android.net.Uri $r6, $r34;
        androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker $r9;
        java.util.UUID $r10;
        android.content.Context $r12, $r30;
        java.lang.Object $r13;
        android.view.WindowManager $r14;
        java.lang.StringBuilder $r15, $r16, $r17, $r18, $r26, $r27, $r28, $r35, $r36, $r37;
        int $i0, $i1;
        byte[] $r23, $r25;
        java.lang.Throwable $r33, $r39, $r40, r43, r44, r45;
        java.security.MessageDigest r41;
        android.view.Display r47;

        r0 := @this: androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder;

        $z0 = specialinvoke r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: boolean hasInternetPermission()>();

        if $z0 != 0 goto label01;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("InfraTrack", "Tracking disabled due to lack of internet permissions");

        return null;

     label01:
        $r2 = r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String targetPackage>;

        if null != $r2 goto label02;

        $r30 = r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: android.content.Context targetContext>;

        $r31 = virtualinvoke $r30.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder withTargetPackage(java.lang.String)>($r31);

     label02:
        $r3 = r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String targetPackage>;

        $z1 = virtualinvoke $r3.<java.lang.String: boolean contains(java.lang.CharSequence)>("com.google.analytics");

        if $z1 == 0 goto label03;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("InfraTrack", "Refusing to use analytics while testing analytics.");

        return null;

     label03:
        $r4 = r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String targetPackage>;

        $z2 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("com.google.");

        if $z2 != 0 goto label06;

        $r20 = r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String targetPackage>;

        $z3 = virtualinvoke $r20.<java.lang.String: boolean startsWith(java.lang.String)>("com.android.");

        if $z3 != 0 goto label06;

        $r21 = r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String targetPackage>;

        $z4 = virtualinvoke $r21.<java.lang.String: boolean startsWith(java.lang.String)>("android.support.");

        if $z4 == 0 goto label04;

        goto label06;

     label04:
        $z5 = r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: boolean hashed>;

        if $z5 != 0 goto label05;

        r41 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256");

        virtualinvoke r41.<java.security.MessageDigest: void reset()>();

        $r22 = r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String targetPackage>;

        $r23 = virtualinvoke $r22.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke r41.<java.security.MessageDigest: void update(byte[])>($r23);

        $r24 = new java.math.BigInteger;

        $r25 = virtualinvoke r41.<java.security.MessageDigest: byte[] digest()>();

        specialinvoke $r24.<java.math.BigInteger: void <init>(byte[])>($r25);

        r1 = $r24;

        r42 = virtualinvoke r1.<java.math.BigInteger: java.lang.String toString(int)>(16);

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sha256-");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String targetPackage> = $r29;

     label05:
        r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: boolean hashed> = 1;

     label06:
        goto label09;

     label07:
        $r40 := @caughtexception;

        r43 = $r40;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("InfraTrack", "Cannot hash package name.", r43);

        return null;

     label08:
        $r39 := @caughtexception;

        r44 = $r39;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("InfraTrack", "Impossible - no utf-8 encoding?", r44);

        return null;

     label09:
        $r5 = new java.net.URL;

        $r6 = r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: android.net.Uri analyticsUri>;

        $r7 = virtualinvoke $r6.<android.net.Uri: java.lang.String toString()>();

        specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r7);

        r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.net.URL analyticsURI> = $r5;

     label10:
        goto label12;

     label11:
        $r33 := @caughtexception;

        r45 = $r33;

        $r34 = r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: android.net.Uri analyticsUri>;

        r46 = virtualinvoke $r34.<android.net.Uri: java.lang.String toString()>();

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tracking disabled bad url: ");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r46);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InfraTrack", $r38, r45);

        return null;

     label12:
        $r8 = r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String screenResolution>;

        if null != $r8 goto label14;

        $r12 = r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: android.content.Context targetContext>;

        $r13 = virtualinvoke $r12.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r14 = (android.view.WindowManager) $r13;

        r47 = interfaceinvoke $r14.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        if null != r47 goto label13;

        r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String screenResolution> = "0x0";

        goto label14;

     label13:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $i0 = virtualinvoke r47.<android.view.Display: int getWidth()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $i1 = virtualinvoke r47.<android.view.Display: int getHeight()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String screenResolution> = $r19;

     label14:
        $r48 = r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String userId>;

        if null != $r48 goto label15;

        $r10 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r11 = virtualinvoke $r10.<java.util.UUID: java.lang.String toString()>();

        r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String userId> = $r11;

     label15:
        $r9 = new androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker;

        specialinvoke $r9.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker: void <init>(androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder,androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker-IA)>(r0, null);

        return $r9;

        catch java.security.NoSuchAlgorithmException from label03 to label06 with label07;
        catch java.io.UnsupportedEncodingException from label03 to label06 with label08;
        catch java.net.MalformedURLException from label09 to label10 with label11;
    }

    static volatile java.lang.String '-$$Nest$fgetapiLevel'(androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder)
    {
        androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder r0;
        java.lang.String $r1;

        r0 := @parameter0: androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder;

        $r1 = r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String apiLevel>;

        return $r1;
    }

    static volatile java.lang.String '-$$Nest$fgetmodel'(androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder)
    {
        androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder r0;
        java.lang.String $r1;

        r0 := @parameter0: androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder;

        $r1 = r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String model>;

        return $r1;
    }

    static volatile java.lang.String '-$$Nest$fgetscreenResolution'(androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder)
    {
        androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder r0;
        java.lang.String $r1;

        r0 := @parameter0: androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder;

        $r1 = r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String screenResolution>;

        return $r1;
    }

    static volatile java.lang.String '-$$Nest$fgettargetPackage'(androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder)
    {
        androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder r0;
        java.lang.String $r1;

        r0 := @parameter0: androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder;

        $r1 = r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String targetPackage>;

        return $r1;
    }

    static volatile java.lang.String '-$$Nest$fgettrackingId'(androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder)
    {
        androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder r0;
        java.lang.String $r1;

        r0 := @parameter0: androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder;

        $r1 = r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String trackingId>;

        return $r1;
    }

    static volatile java.lang.String '-$$Nest$fgetuserId'(androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder)
    {
        androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder r0;
        java.lang.String $r1;

        r0 := @parameter0: androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder;

        $r1 = r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String userId>;

        return $r1;
    }

    static volatile java.net.URL '-$$Nest$fgetanalyticsURI'(androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder)
    {
        androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder r0;
        java.net.URL $r1;

        r0 := @parameter0: androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder;

        $r1 = r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.net.URL analyticsURI>;

        return $r1;
    }

    public void <init>(android.content.Context)
    {
        androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder r0;
        android.content.Context r1;
        android.net.Uri$Builder $r2, $r3, $r4, $r5;
        android.net.Uri $r6;
        int $i0;
        java.lang.String $r7, $r8;
        java.lang.NullPointerException $r9;

        r0 := @this: androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.net.Uri$Builder;

        specialinvoke $r2.<android.net.Uri$Builder: void <init>()>();

        $r3 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("https");

        $r4 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>("www.google-analytics.com");

        $r5 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri$Builder path(java.lang.String)>("collect");

        $r6 = virtualinvoke $r5.<android.net.Uri$Builder: android.net.Uri build()>();

        r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: android.net.Uri analyticsUri> = $r6;

        r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String trackingId> = "UA-36650409-3";

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String apiLevel> = $r7;

        $r8 = <android.os.Build: java.lang.String MODEL>;

        r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: java.lang.String model> = $r8;

        if r1 != null goto label1;

        $r9 = new java.lang.NullPointerException;

        specialinvoke $r9.<java.lang.NullPointerException: void <init>(java.lang.String)>("Context null!?");

        throw $r9;

     label1:
        r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: android.content.Context targetContext> = r1;

        return;
    }

    private boolean hasInternetPermission()
    {
        androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder r0;
        android.content.Context $r1;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder;

        $r1 = r0.<androidx.test.internal.runner.tracker.AnalyticsBasedUsageTracker$Builder: android.content.Context targetContext>;

        $i0 = virtualinvoke $r1.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.INTERNET");

        if 0 != $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

