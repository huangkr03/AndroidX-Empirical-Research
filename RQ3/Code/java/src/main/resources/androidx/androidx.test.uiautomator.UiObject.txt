androidx.test.uiautomator.UiObject
<androidx.test.uiautomator.UiObject: java.lang.String LOG_TAG>
<androidx.test.uiautomator.UiObject: long WAIT_FOR_SELECTOR_TIMEOUT>
<androidx.test.uiautomator.UiObject: long WAIT_FOR_SELECTOR_POLL>
<androidx.test.uiautomator.UiObject: long WAIT_FOR_WINDOW_TMEOUT>
<androidx.test.uiautomator.UiObject: int SWIPE_MARGIN_LIMIT>
<androidx.test.uiautomator.UiObject: long WAIT_FOR_EVENT_TMEOUT>
<androidx.test.uiautomator.UiObject: int FINGER_TOUCH_HALF_WIDTH>
<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiSelector mUiSelector>
<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiDevice mDevice>
<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.Configurator mConfig>
    public void <init>(androidx.test.uiautomator.UiSelector)
    {
        androidx.test.uiautomator.UiObject r0;
        androidx.test.uiautomator.UiSelector r1;
        androidx.test.uiautomator.Configurator $r2;
        androidx.test.uiautomator.UiDevice $r3;

        r0 := @this: androidx.test.uiautomator.UiObject;

        r1 := @parameter0: androidx.test.uiautomator.UiSelector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <androidx.test.uiautomator.Configurator: androidx.test.uiautomator.Configurator getInstance()>();

        r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.Configurator mConfig> = $r2;

        r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiSelector mUiSelector> = r1;

        $r3 = staticinvoke <androidx.test.uiautomator.UiDevice: androidx.test.uiautomator.UiDevice getInstance()>();

        r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiDevice mDevice> = $r3;

        return;
    }

    void <init>(androidx.test.uiautomator.UiDevice, androidx.test.uiautomator.UiSelector)
    {
        androidx.test.uiautomator.UiObject r0;
        androidx.test.uiautomator.UiDevice r1;
        androidx.test.uiautomator.UiSelector r2;
        androidx.test.uiautomator.Configurator $r3;

        r0 := @this: androidx.test.uiautomator.UiObject;

        r1 := @parameter0: androidx.test.uiautomator.UiDevice;

        r2 := @parameter1: androidx.test.uiautomator.UiSelector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <androidx.test.uiautomator.Configurator: androidx.test.uiautomator.Configurator getInstance()>();

        r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.Configurator mConfig> = $r3;

        r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiDevice mDevice> = r1;

        r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiSelector mUiSelector> = r2;

        return;
    }

    public final androidx.test.uiautomator.UiSelector getSelector()
    {
        androidx.test.uiautomator.UiObject r0;
        java.lang.Object[] $r1;
        androidx.test.uiautomator.UiSelector $r2, $r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: androidx.test.uiautomator.UiObject;

        $r1 = newarray (java.lang.Object)[0];

        staticinvoke <androidx.test.uiautomator.Tracer: void trace(java.lang.Object[])>($r1);

        $r2 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiSelector mUiSelector>;

        if $r2 != null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("UiSelector not set");

        throw $r4;

     label1:
        $r3 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiSelector mUiSelector>;

        return $r3;
    }

    androidx.test.uiautomator.UiDevice getDevice()
    {
        androidx.test.uiautomator.UiObject r0;
        androidx.test.uiautomator.UiDevice $r1;

        r0 := @this: androidx.test.uiautomator.UiObject;

        $r1 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiDevice mDevice>;

        return $r1;
    }

    androidx.test.uiautomator.QueryController getQueryController()
    {
        androidx.test.uiautomator.UiObject r0;
        androidx.test.uiautomator.UiDevice $r1;
        androidx.test.uiautomator.QueryController $r2;

        r0 := @this: androidx.test.uiautomator.UiObject;

        $r1 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiDevice getDevice()>();

        $r2 = virtualinvoke $r1.<androidx.test.uiautomator.UiDevice: androidx.test.uiautomator.QueryController getQueryController()>();

        return $r2;
    }

    androidx.test.uiautomator.InteractionController getInteractionController()
    {
        androidx.test.uiautomator.UiObject r0;
        androidx.test.uiautomator.UiDevice $r1;
        androidx.test.uiautomator.InteractionController $r2;

        r0 := @this: androidx.test.uiautomator.UiObject;

        $r1 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiDevice getDevice()>();

        $r2 = virtualinvoke $r1.<androidx.test.uiautomator.UiDevice: androidx.test.uiautomator.InteractionController getInteractionController()>();

        return $r2;
    }

    public androidx.test.uiautomator.UiObject getChild(androidx.test.uiautomator.UiSelector) throws androidx.test.uiautomator.UiObjectNotFoundException
    {
        androidx.test.uiautomator.UiObject r0, $r3;
        androidx.test.uiautomator.UiSelector r1, $r4, $r5;
        java.lang.Object[] $r2;

        r0 := @this: androidx.test.uiautomator.UiObject;

        r1 := @parameter0: androidx.test.uiautomator.UiSelector;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        staticinvoke <androidx.test.uiautomator.Tracer: void trace(java.lang.Object[])>($r2);

        $r3 = new androidx.test.uiautomator.UiObject;

        $r4 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiSelector getSelector()>();

        $r5 = virtualinvoke $r4.<androidx.test.uiautomator.UiSelector: androidx.test.uiautomator.UiSelector childSelector(androidx.test.uiautomator.UiSelector)>(r1);

        specialinvoke $r3.<androidx.test.uiautomator.UiObject: void <init>(androidx.test.uiautomator.UiSelector)>($r5);

        return $r3;
    }

    public androidx.test.uiautomator.UiObject getFromParent(androidx.test.uiautomator.UiSelector) throws androidx.test.uiautomator.UiObjectNotFoundException
    {
        androidx.test.uiautomator.UiObject r0, $r3;
        androidx.test.uiautomator.UiSelector r1, $r4, $r5;
        java.lang.Object[] $r2;

        r0 := @this: androidx.test.uiautomator.UiObject;

        r1 := @parameter0: androidx.test.uiautomator.UiSelector;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        staticinvoke <androidx.test.uiautomator.Tracer: void trace(java.lang.Object[])>($r2);

        $r3 = new androidx.test.uiautomator.UiObject;

        $r4 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiSelector getSelector()>();

        $r5 = virtualinvoke $r4.<androidx.test.uiautomator.UiSelector: androidx.test.uiautomator.UiSelector fromParent(androidx.test.uiautomator.UiSelector)>(r1);

        specialinvoke $r3.<androidx.test.uiautomator.UiObject: void <init>(androidx.test.uiautomator.UiSelector)>($r5);

        return $r3;
    }

    public int getChildCount() throws androidx.test.uiautomator.UiObjectNotFoundException
    {
        androidx.test.uiautomator.UiObject r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.Object[] $r2;
        androidx.test.uiautomator.Configurator $r3;
        long $l0;
        int $i1;
        androidx.test.uiautomator.UiSelector $r5;
        java.lang.String $r6;
        androidx.test.uiautomator.UiObjectNotFoundException r7;
        java.lang.Throwable r8;

        r0 := @this: androidx.test.uiautomator.UiObject;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <androidx.test.uiautomator.Tracer: void trace(java.lang.Object[])>($r2);

        $r3 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.Configurator mConfig>;

        $l0 = virtualinvoke $r3.<androidx.test.uiautomator.Configurator: long getWaitForSelectorTimeout()>();

        r1 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(long)>($l0);

        if r1 != null goto label1;

        r7 = new androidx.test.uiautomator.UiObjectNotFoundException;

        $r5 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiSelector mUiSelector>;

        $r6 = virtualinvoke $r5.<androidx.test.uiautomator.UiSelector: java.lang.String toString()>();

        specialinvoke r7.<androidx.test.uiautomator.UiObjectNotFoundException: void <init>(java.lang.String)>($r6);

        r8 = (java.lang.Throwable) r7;

        throw r8;

     label1:
        $i1 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()>();

        return $i1;
    }

    protected android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(long)
    {
        androidx.test.uiautomator.UiObject r0;
        long l0, l1, $l2, l4;
        androidx.test.uiautomator.QueryController $r1;
        androidx.test.uiautomator.UiSelector $r2;
        androidx.test.uiautomator.UiDevice $r3;
        byte $b3, $b5;
        android.view.accessibility.AccessibilityNodeInfo r4;

        r0 := @this: androidx.test.uiautomator.UiObject;

        l0 := @parameter0: long;

        r4 = null;

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l4 = 0L;

     label1:
        $b5 = l4 cmp l0;

        if $b5 > 0 goto label3;

        $r1 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.QueryController getQueryController()>();

        $r2 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiSelector mUiSelector>;

        r4 = virtualinvoke $r1.<androidx.test.uiautomator.QueryController: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(androidx.test.uiautomator.UiSelector)>($r2);

        if r4 == null goto label2;

        goto label3;

     label2:
        $r3 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiDevice getDevice()>();

        virtualinvoke $r3.<androidx.test.uiautomator.UiDevice: void runWatchers()>();

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l4 = $l2 - l1;

        $b3 = l0 cmp 0L;

        if $b3 <= 0 goto label1;

        staticinvoke <android.os.SystemClock: void sleep(long)>(1000L);

        goto label1;

     label3:
        return r4;
    }

    public boolean dragTo(androidx.test.uiautomator.UiObject, int) throws androidx.test.uiautomator.UiObjectNotFoundException
    {
        androidx.test.uiautomator.UiObject r0, r1;
        int i0, $i1, $i2, $i3, $i4;
        android.graphics.Rect r2, r3;
        androidx.test.uiautomator.InteractionController $r4;
        boolean $z0;

        r0 := @this: androidx.test.uiautomator.UiObject;

        r1 := @parameter0: androidx.test.uiautomator.UiObject;

        i0 := @parameter1: int;

        r2 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: android.graphics.Rect getVisibleBounds()>();

        r3 = virtualinvoke r1.<androidx.test.uiautomator.UiObject: android.graphics.Rect getVisibleBounds()>();

        $r4 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.InteractionController getInteractionController()>();

        $i1 = virtualinvoke r2.<android.graphics.Rect: int centerX()>();

        $i2 = virtualinvoke r2.<android.graphics.Rect: int centerY()>();

        $i3 = virtualinvoke r3.<android.graphics.Rect: int centerX()>();

        $i4 = virtualinvoke r3.<android.graphics.Rect: int centerY()>();

        $z0 = virtualinvoke $r4.<androidx.test.uiautomator.InteractionController: boolean swipe(int,int,int,int,int,boolean)>($i1, $i2, $i3, $i4, i0, 1);

        return $z0;
    }

    public boolean dragTo(int, int, int) throws androidx.test.uiautomator.UiObjectNotFoundException
    {
        androidx.test.uiautomator.UiObject r0;
        int i0, i1, i2, $i3, $i4;
        android.graphics.Rect r1;
        androidx.test.uiautomator.InteractionController $r2;
        boolean $z0;

        r0 := @this: androidx.test.uiautomator.UiObject;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: android.graphics.Rect getVisibleBounds()>();

        $r2 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.InteractionController getInteractionController()>();

        $i3 = virtualinvoke r1.<android.graphics.Rect: int centerX()>();

        $i4 = virtualinvoke r1.<android.graphics.Rect: int centerY()>();

        $z0 = virtualinvoke $r2.<androidx.test.uiautomator.InteractionController: boolean swipe(int,int,int,int,int,boolean)>($i3, $i4, i0, i1, i2, 1);

        return $z0;
    }

    public boolean swipeUp(int) throws androidx.test.uiautomator.UiObjectNotFoundException
    {
        androidx.test.uiautomator.UiObject r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.graphics.Rect r1;
        java.lang.Object[] $r2;
        java.lang.Integer $r3;
        androidx.test.uiautomator.InteractionController $r4;
        boolean $z0;

        r0 := @this: androidx.test.uiautomator.UiObject;

        i0 := @parameter0: int;

        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2[0] = $r3;

        staticinvoke <androidx.test.uiautomator.Tracer: void trace(java.lang.Object[])>($r2);

        r1 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: android.graphics.Rect getVisibleBounds()>();

        $i1 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        if $i1 > 10 goto label1;

        return 0;

     label1:
        $r4 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.InteractionController getInteractionController()>();

        $i2 = virtualinvoke r1.<android.graphics.Rect: int centerX()>();

        $i3 = r1.<android.graphics.Rect: int bottom>;

        $i4 = $i3 - 5;

        $i5 = virtualinvoke r1.<android.graphics.Rect: int centerX()>();

        $i6 = r1.<android.graphics.Rect: int top>;

        $i7 = $i6 + 5;

        $z0 = virtualinvoke $r4.<androidx.test.uiautomator.InteractionController: boolean swipe(int,int,int,int,int)>($i2, $i4, $i5, $i7, i0);

        return $z0;
    }

    public boolean swipeDown(int) throws androidx.test.uiautomator.UiObjectNotFoundException
    {
        androidx.test.uiautomator.UiObject r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.graphics.Rect r1;
        java.lang.Object[] $r2;
        java.lang.Integer $r3;
        androidx.test.uiautomator.InteractionController $r4;
        boolean $z0;

        r0 := @this: androidx.test.uiautomator.UiObject;

        i0 := @parameter0: int;

        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2[0] = $r3;

        staticinvoke <androidx.test.uiautomator.Tracer: void trace(java.lang.Object[])>($r2);

        r1 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: android.graphics.Rect getVisibleBounds()>();

        $i1 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        if $i1 > 10 goto label1;

        return 0;

     label1:
        $r4 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.InteractionController getInteractionController()>();

        $i2 = virtualinvoke r1.<android.graphics.Rect: int centerX()>();

        $i3 = r1.<android.graphics.Rect: int top>;

        $i4 = $i3 + 5;

        $i5 = virtualinvoke r1.<android.graphics.Rect: int centerX()>();

        $i6 = r1.<android.graphics.Rect: int bottom>;

        $i7 = $i6 - 5;

        $z0 = virtualinvoke $r4.<androidx.test.uiautomator.InteractionController: boolean swipe(int,int,int,int,int)>($i2, $i4, $i5, $i7, i0);

        return $z0;
    }

    public boolean swipeLeft(int) throws androidx.test.uiautomator.UiObjectNotFoundException
    {
        androidx.test.uiautomator.UiObject r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.graphics.Rect r1;
        java.lang.Object[] $r2;
        java.lang.Integer $r3;
        androidx.test.uiautomator.InteractionController $r4;
        boolean $z0;

        r0 := @this: androidx.test.uiautomator.UiObject;

        i0 := @parameter0: int;

        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2[0] = $r3;

        staticinvoke <androidx.test.uiautomator.Tracer: void trace(java.lang.Object[])>($r2);

        r1 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: android.graphics.Rect getVisibleBounds()>();

        $i1 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        if $i1 > 10 goto label1;

        return 0;

     label1:
        $r4 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.InteractionController getInteractionController()>();

        $i2 = r1.<android.graphics.Rect: int right>;

        $i3 = $i2 - 5;

        $i4 = virtualinvoke r1.<android.graphics.Rect: int centerY()>();

        $i5 = r1.<android.graphics.Rect: int left>;

        $i6 = $i5 + 5;

        $i7 = virtualinvoke r1.<android.graphics.Rect: int centerY()>();

        $z0 = virtualinvoke $r4.<androidx.test.uiautomator.InteractionController: boolean swipe(int,int,int,int,int)>($i3, $i4, $i6, $i7, i0);

        return $z0;
    }

    public boolean swipeRight(int) throws androidx.test.uiautomator.UiObjectNotFoundException
    {
        androidx.test.uiautomator.UiObject r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.graphics.Rect r1;
        java.lang.Object[] $r2;
        java.lang.Integer $r3;
        androidx.test.uiautomator.InteractionController $r4;
        boolean $z0;

        r0 := @this: androidx.test.uiautomator.UiObject;

        i0 := @parameter0: int;

        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2[0] = $r3;

        staticinvoke <androidx.test.uiautomator.Tracer: void trace(java.lang.Object[])>($r2);

        r1 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: android.graphics.Rect getVisibleBounds()>();

        $i1 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        if $i1 > 10 goto label1;

        return 0;

     label1:
        $r4 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.InteractionController getInteractionController()>();

        $i2 = r1.<android.graphics.Rect: int left>;

        $i3 = $i2 + 5;

        $i4 = virtualinvoke r1.<android.graphics.Rect: int centerY()>();

        $i5 = r1.<android.graphics.Rect: int right>;

        $i6 = $i5 - 5;

        $i7 = virtualinvoke r1.<android.graphics.Rect: int centerY()>();

        $z0 = virtualinvoke $r4.<androidx.test.uiautomator.InteractionController: boolean swipe(int,int,int,int,int)>($i3, $i4, $i6, $i7, i0);

        return $z0;
    }

    private android.graphics.Rect getVisibleBounds(android.view.accessibility.AccessibilityNodeInfo)
    {
        androidx.test.uiautomator.UiObject r0;
        android.view.accessibility.AccessibilityNodeInfo r1, r3;
        int i0, i1;
        android.graphics.Rect r2, r4;
        androidx.test.uiautomator.UiDevice $r5, $r6;

        r0 := @this: androidx.test.uiautomator.UiObject;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        if r1 != null goto label1;

        return null;

     label1:
        $r5 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiDevice getDevice()>();

        i0 = virtualinvoke $r5.<androidx.test.uiautomator.UiDevice: int getDisplayWidth()>();

        $r6 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiDevice getDevice()>();

        i1 = virtualinvoke $r6.<androidx.test.uiautomator.UiDevice: int getDisplayHeight()>();

        r2 = staticinvoke <androidx.test.uiautomator.AccessibilityNodeInfoHelper: android.graphics.Rect getVisibleBoundsInScreen(android.view.accessibility.AccessibilityNodeInfo,int,int)>(r1, i0, i1);

        r3 = specialinvoke r0.<androidx.test.uiautomator.UiObject: android.view.accessibility.AccessibilityNodeInfo getScrollableParent(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        if r3 != null goto label2;

        return r2;

     label2:
        r4 = staticinvoke <androidx.test.uiautomator.AccessibilityNodeInfoHelper: android.graphics.Rect getVisibleBoundsInScreen(android.view.accessibility.AccessibilityNodeInfo,int,int)>(r3, i0, i1);

        virtualinvoke r2.<android.graphics.Rect: boolean intersect(android.graphics.Rect)>(r4);

        return r2;
    }

    private android.view.accessibility.AccessibilityNodeInfo getScrollableParent(android.view.accessibility.AccessibilityNodeInfo)
    {
        androidx.test.uiautomator.UiObject r0;
        android.view.accessibility.AccessibilityNodeInfo r1, r2;
        boolean $z0;

        r0 := @this: androidx.test.uiautomator.UiObject;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        r2 = r1;

     label1:
        if r2 == null goto label2;

        r2 = virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getParent()>();

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: boolean isScrollable()>();

        if $z0 == 0 goto label1;

        return r2;

     label2:
        return null;
    }

    public boolean click() throws androidx.test.uiautomator.UiObjectNotFoundException
    {
        androidx.test.uiautomator.UiObject r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        android.graphics.Rect r2;
        java.lang.Object[] $r3;
        androidx.test.uiautomator.Configurator $r4, $r6;
        long $l0, $l3;
        androidx.test.uiautomator.InteractionController $r5;
        int $i1, $i2;
        boolean $z0;
        androidx.test.uiautomator.UiSelector $r8;
        java.lang.String $r9;
        androidx.test.uiautomator.UiObjectNotFoundException r10;
        java.lang.Throwable r11;

        r0 := @this: androidx.test.uiautomator.UiObject;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <androidx.test.uiautomator.Tracer: void trace(java.lang.Object[])>($r3);

        $r4 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.Configurator mConfig>;

        $l0 = virtualinvoke $r4.<androidx.test.uiautomator.Configurator: long getWaitForSelectorTimeout()>();

        r1 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(long)>($l0);

        if r1 != null goto label1;

        r10 = new androidx.test.uiautomator.UiObjectNotFoundException;

        $r8 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiSelector mUiSelector>;

        $r9 = virtualinvoke $r8.<androidx.test.uiautomator.UiSelector: java.lang.String toString()>();

        specialinvoke r10.<androidx.test.uiautomator.UiObjectNotFoundException: void <init>(java.lang.String)>($r9);

        r11 = (java.lang.Throwable) r10;

        throw r11;

     label1:
        r2 = specialinvoke r0.<androidx.test.uiautomator.UiObject: android.graphics.Rect getVisibleBounds(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $r5 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.InteractionController getInteractionController()>();

        $i1 = virtualinvoke r2.<android.graphics.Rect: int centerX()>();

        $i2 = virtualinvoke r2.<android.graphics.Rect: int centerY()>();

        $r6 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.Configurator mConfig>;

        $l3 = virtualinvoke $r6.<androidx.test.uiautomator.Configurator: long getActionAcknowledgmentTimeout()>();

        $z0 = virtualinvoke $r5.<androidx.test.uiautomator.InteractionController: boolean clickAndSync(int,int,long)>($i1, $i2, $l3);

        return $z0;
    }

    public boolean clickAndWaitForNewWindow() throws androidx.test.uiautomator.UiObjectNotFoundException
    {
        androidx.test.uiautomator.UiObject r0;
        java.lang.Object[] $r1;
        boolean $z0;

        r0 := @this: androidx.test.uiautomator.UiObject;

        $r1 = newarray (java.lang.Object)[0];

        staticinvoke <androidx.test.uiautomator.Tracer: void trace(java.lang.Object[])>($r1);

        $z0 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: boolean clickAndWaitForNewWindow(long)>(5500L);

        return $z0;
    }

    public boolean clickAndWaitForNewWindow(long) throws androidx.test.uiautomator.UiObjectNotFoundException
    {
        androidx.test.uiautomator.UiObject r0;
        long l0, $l1;
        android.view.accessibility.AccessibilityNodeInfo r1;
        android.graphics.Rect r2;
        java.lang.Object[] $r3;
        java.lang.Long $r4;
        androidx.test.uiautomator.Configurator $r5;
        androidx.test.uiautomator.InteractionController $r6;
        int $i2, $i3;
        boolean $z0;
        androidx.test.uiautomator.UiSelector $r8;
        java.lang.String $r9;
        androidx.test.uiautomator.UiObjectNotFoundException r10;
        java.lang.Throwable r11;

        r0 := @this: androidx.test.uiautomator.UiObject;

        l0 := @parameter0: long;

        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r3[0] = $r4;

        staticinvoke <androidx.test.uiautomator.Tracer: void trace(java.lang.Object[])>($r3);

        $r5 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.Configurator mConfig>;

        $l1 = virtualinvoke $r5.<androidx.test.uiautomator.Configurator: long getWaitForSelectorTimeout()>();

        r1 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(long)>($l1);

        if r1 != null goto label1;

        r10 = new androidx.test.uiautomator.UiObjectNotFoundException;

        $r8 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiSelector mUiSelector>;

        $r9 = virtualinvoke $r8.<androidx.test.uiautomator.UiSelector: java.lang.String toString()>();

        specialinvoke r10.<androidx.test.uiautomator.UiObjectNotFoundException: void <init>(java.lang.String)>($r9);

        r11 = (java.lang.Throwable) r10;

        throw r11;

     label1:
        r2 = specialinvoke r0.<androidx.test.uiautomator.UiObject: android.graphics.Rect getVisibleBounds(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $r6 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.InteractionController getInteractionController()>();

        $i2 = virtualinvoke r2.<android.graphics.Rect: int centerX()>();

        $i3 = virtualinvoke r2.<android.graphics.Rect: int centerY()>();

        $z0 = virtualinvoke $r6.<androidx.test.uiautomator.InteractionController: boolean clickAndWaitForNewWindow(int,int,long)>($i2, $i3, l0);

        return $z0;
    }

    public boolean clickTopLeft() throws androidx.test.uiautomator.UiObjectNotFoundException
    {
        androidx.test.uiautomator.UiObject r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        android.graphics.Rect r2;
        java.lang.Object[] $r3;
        androidx.test.uiautomator.Configurator $r4, $r6;
        long $l0, $l5;
        androidx.test.uiautomator.InteractionController $r5;
        int $i1, $i2, $i3, $i4;
        boolean $z0;
        androidx.test.uiautomator.UiSelector $r8;
        java.lang.String $r9;
        androidx.test.uiautomator.UiObjectNotFoundException r10;
        java.lang.Throwable r11;

        r0 := @this: androidx.test.uiautomator.UiObject;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <androidx.test.uiautomator.Tracer: void trace(java.lang.Object[])>($r3);

        $r4 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.Configurator mConfig>;

        $l0 = virtualinvoke $r4.<androidx.test.uiautomator.Configurator: long getWaitForSelectorTimeout()>();

        r1 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(long)>($l0);

        if r1 != null goto label1;

        r10 = new androidx.test.uiautomator.UiObjectNotFoundException;

        $r8 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiSelector mUiSelector>;

        $r9 = virtualinvoke $r8.<androidx.test.uiautomator.UiSelector: java.lang.String toString()>();

        specialinvoke r10.<androidx.test.uiautomator.UiObjectNotFoundException: void <init>(java.lang.String)>($r9);

        r11 = (java.lang.Throwable) r10;

        throw r11;

     label1:
        r2 = specialinvoke r0.<androidx.test.uiautomator.UiObject: android.graphics.Rect getVisibleBounds(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $r5 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.InteractionController getInteractionController()>();

        $i1 = r2.<android.graphics.Rect: int left>;

        $i3 = $i1 + 5;

        $i2 = r2.<android.graphics.Rect: int top>;

        $i4 = $i2 + 5;

        $r6 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.Configurator mConfig>;

        $l5 = virtualinvoke $r6.<androidx.test.uiautomator.Configurator: long getActionAcknowledgmentTimeout()>();

        $z0 = virtualinvoke $r5.<androidx.test.uiautomator.InteractionController: boolean clickAndSync(int,int,long)>($i3, $i4, $l5);

        return $z0;
    }

    public boolean longClickBottomRight() throws androidx.test.uiautomator.UiObjectNotFoundException
    {
        androidx.test.uiautomator.UiObject r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        android.graphics.Rect r2;
        java.lang.Object[] $r3;
        androidx.test.uiautomator.Configurator $r4, $r6;
        long $l0, $l5;
        androidx.test.uiautomator.InteractionController $r5;
        int $i1, $i2, $i3, $i4;
        boolean $z0;
        androidx.test.uiautomator.UiSelector $r8;
        java.lang.String $r9;
        androidx.test.uiautomator.UiObjectNotFoundException r10;
        java.lang.Throwable r11;

        r0 := @this: androidx.test.uiautomator.UiObject;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <androidx.test.uiautomator.Tracer: void trace(java.lang.Object[])>($r3);

        $r4 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.Configurator mConfig>;

        $l0 = virtualinvoke $r4.<androidx.test.uiautomator.Configurator: long getWaitForSelectorTimeout()>();

        r1 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(long)>($l0);

        if r1 != null goto label1;

        r10 = new androidx.test.uiautomator.UiObjectNotFoundException;

        $r8 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiSelector mUiSelector>;

        $r9 = virtualinvoke $r8.<androidx.test.uiautomator.UiSelector: java.lang.String toString()>();

        specialinvoke r10.<androidx.test.uiautomator.UiObjectNotFoundException: void <init>(java.lang.String)>($r9);

        r11 = (java.lang.Throwable) r10;

        throw r11;

     label1:
        r2 = specialinvoke r0.<androidx.test.uiautomator.UiObject: android.graphics.Rect getVisibleBounds(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $r5 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.InteractionController getInteractionController()>();

        $i1 = r2.<android.graphics.Rect: int right>;

        $i3 = $i1 - 5;

        $i2 = r2.<android.graphics.Rect: int bottom>;

        $i4 = $i2 - 5;

        $r6 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.Configurator mConfig>;

        $l5 = virtualinvoke $r6.<androidx.test.uiautomator.Configurator: long getActionAcknowledgmentTimeout()>();

        $z0 = virtualinvoke $r5.<androidx.test.uiautomator.InteractionController: boolean longTapAndSync(int,int,long)>($i3, $i4, $l5);

        return $z0;
    }

    public boolean clickBottomRight() throws androidx.test.uiautomator.UiObjectNotFoundException
    {
        androidx.test.uiautomator.UiObject r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        android.graphics.Rect r2;
        java.lang.Object[] $r3;
        androidx.test.uiautomator.Configurator $r4, $r6;
        long $l0, $l5;
        androidx.test.uiautomator.InteractionController $r5;
        int $i1, $i2, $i3, $i4;
        boolean $z0;
        androidx.test.uiautomator.UiSelector $r8;
        java.lang.String $r9;
        androidx.test.uiautomator.UiObjectNotFoundException r10;
        java.lang.Throwable r11;

        r0 := @this: androidx.test.uiautomator.UiObject;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <androidx.test.uiautomator.Tracer: void trace(java.lang.Object[])>($r3);

        $r4 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.Configurator mConfig>;

        $l0 = virtualinvoke $r4.<androidx.test.uiautomator.Configurator: long getWaitForSelectorTimeout()>();

        r1 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(long)>($l0);

        if r1 != null goto label1;

        r10 = new androidx.test.uiautomator.UiObjectNotFoundException;

        $r8 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiSelector mUiSelector>;

        $r9 = virtualinvoke $r8.<androidx.test.uiautomator.UiSelector: java.lang.String toString()>();

        specialinvoke r10.<androidx.test.uiautomator.UiObjectNotFoundException: void <init>(java.lang.String)>($r9);

        r11 = (java.lang.Throwable) r10;

        throw r11;

     label1:
        r2 = specialinvoke r0.<androidx.test.uiautomator.UiObject: android.graphics.Rect getVisibleBounds(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $r5 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.InteractionController getInteractionController()>();

        $i1 = r2.<android.graphics.Rect: int right>;

        $i3 = $i1 - 5;

        $i2 = r2.<android.graphics.Rect: int bottom>;

        $i4 = $i2 - 5;

        $r6 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.Configurator mConfig>;

        $l5 = virtualinvoke $r6.<androidx.test.uiautomator.Configurator: long getActionAcknowledgmentTimeout()>();

        $z0 = virtualinvoke $r5.<androidx.test.uiautomator.InteractionController: boolean clickAndSync(int,int,long)>($i3, $i4, $l5);

        return $z0;
    }

    public boolean longClick() throws androidx.test.uiautomator.UiObjectNotFoundException
    {
        androidx.test.uiautomator.UiObject r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        android.graphics.Rect r2;
        java.lang.Object[] $r3;
        androidx.test.uiautomator.Configurator $r4, $r6;
        long $l0, $l3;
        androidx.test.uiautomator.InteractionController $r5;
        int $i1, $i2;
        boolean $z0;
        androidx.test.uiautomator.UiSelector $r8;
        java.lang.String $r9;
        androidx.test.uiautomator.UiObjectNotFoundException r10;
        java.lang.Throwable r11;

        r0 := @this: androidx.test.uiautomator.UiObject;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <androidx.test.uiautomator.Tracer: void trace(java.lang.Object[])>($r3);

        $r4 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.Configurator mConfig>;

        $l0 = virtualinvoke $r4.<androidx.test.uiautomator.Configurator: long getWaitForSelectorTimeout()>();

        r1 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(long)>($l0);

        if r1 != null goto label1;

        r10 = new androidx.test.uiautomator.UiObjectNotFoundException;

        $r8 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiSelector mUiSelector>;

        $r9 = virtualinvoke $r8.<androidx.test.uiautomator.UiSelector: java.lang.String toString()>();

        specialinvoke r10.<androidx.test.uiautomator.UiObjectNotFoundException: void <init>(java.lang.String)>($r9);

        r11 = (java.lang.Throwable) r10;

        throw r11;

     label1:
        r2 = specialinvoke r0.<androidx.test.uiautomator.UiObject: android.graphics.Rect getVisibleBounds(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $r5 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.InteractionController getInteractionController()>();

        $i1 = virtualinvoke r2.<android.graphics.Rect: int centerX()>();

        $i2 = virtualinvoke r2.<android.graphics.Rect: int centerY()>();

        $r6 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.Configurator mConfig>;

        $l3 = virtualinvoke $r6.<androidx.test.uiautomator.Configurator: long getActionAcknowledgmentTimeout()>();

        $z0 = virtualinvoke $r5.<androidx.test.uiautomator.InteractionController: boolean longTapAndSync(int,int,long)>($i1, $i2, $l3);

        return $z0;
    }

    public boolean longClickTopLeft() throws androidx.test.uiautomator.UiObjectNotFoundException
    {
        androidx.test.uiautomator.UiObject r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        android.graphics.Rect r2;
        java.lang.Object[] $r3;
        androidx.test.uiautomator.Configurator $r4, $r6;
        long $l0, $l5;
        androidx.test.uiautomator.InteractionController $r5;
        int $i1, $i2, $i3, $i4;
        boolean $z0;
        androidx.test.uiautomator.UiSelector $r8;
        java.lang.String $r9;
        androidx.test.uiautomator.UiObjectNotFoundException r10;
        java.lang.Throwable r11;

        r0 := @this: androidx.test.uiautomator.UiObject;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <androidx.test.uiautomator.Tracer: void trace(java.lang.Object[])>($r3);

        $r4 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.Configurator mConfig>;

        $l0 = virtualinvoke $r4.<androidx.test.uiautomator.Configurator: long getWaitForSelectorTimeout()>();

        r1 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(long)>($l0);

        if r1 != null goto label1;

        r10 = new androidx.test.uiautomator.UiObjectNotFoundException;

        $r8 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiSelector mUiSelector>;

        $r9 = virtualinvoke $r8.<androidx.test.uiautomator.UiSelector: java.lang.String toString()>();

        specialinvoke r10.<androidx.test.uiautomator.UiObjectNotFoundException: void <init>(java.lang.String)>($r9);

        r11 = (java.lang.Throwable) r10;

        throw r11;

     label1:
        r2 = specialinvoke r0.<androidx.test.uiautomator.UiObject: android.graphics.Rect getVisibleBounds(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $r5 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.InteractionController getInteractionController()>();

        $i1 = r2.<android.graphics.Rect: int left>;

        $i3 = $i1 + 5;

        $i2 = r2.<android.graphics.Rect: int top>;

        $i4 = $i2 + 5;

        $r6 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.Configurator mConfig>;

        $l5 = virtualinvoke $r6.<androidx.test.uiautomator.Configurator: long getActionAcknowledgmentTimeout()>();

        $z0 = virtualinvoke $r5.<androidx.test.uiautomator.InteractionController: boolean longTapAndSync(int,int,long)>($i3, $i4, $l5);

        return $z0;
    }

    public java.lang.String getText() throws androidx.test.uiautomator.UiObjectNotFoundException
    {
        androidx.test.uiautomator.UiObject r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.String r2, $r7, $r8, $r11;
        java.lang.Object[] $r3, $r6;
        androidx.test.uiautomator.Configurator $r4;
        long $l0;
        java.lang.CharSequence $r5;
        androidx.test.uiautomator.UiSelector $r10;
        androidx.test.uiautomator.UiObjectNotFoundException r12;
        java.lang.Throwable r13;

        r0 := @this: androidx.test.uiautomator.UiObject;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <androidx.test.uiautomator.Tracer: void trace(java.lang.Object[])>($r3);

        $r4 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.Configurator mConfig>;

        $l0 = virtualinvoke $r4.<androidx.test.uiautomator.Configurator: long getWaitForSelectorTimeout()>();

        r1 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(long)>($l0);

        if r1 != null goto label1;

        r12 = new androidx.test.uiautomator.UiObjectNotFoundException;

        $r10 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiSelector mUiSelector>;

        $r11 = virtualinvoke $r10.<androidx.test.uiautomator.UiSelector: java.lang.String toString()>();

        specialinvoke r12.<androidx.test.uiautomator.UiObjectNotFoundException: void <init>(java.lang.String)>($r11);

        r13 = (java.lang.Throwable) r12;

        throw r13;

     label1:
        $r5 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getText()>();

        r2 = specialinvoke r0.<androidx.test.uiautomator.UiObject: java.lang.String safeStringReturn(java.lang.CharSequence)>($r5);

        $r7 = <androidx.test.uiautomator.UiObject: java.lang.String LOG_TAG>;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r2;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("getText() = %s", $r6);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r7, $r8);

        return r2;
    }

    public java.lang.String getClassName() throws androidx.test.uiautomator.UiObjectNotFoundException
    {
        androidx.test.uiautomator.UiObject r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.String r2, $r7, $r8, $r11;
        java.lang.Object[] $r3, $r6;
        androidx.test.uiautomator.Configurator $r4;
        long $l0;
        java.lang.CharSequence $r5;
        androidx.test.uiautomator.UiSelector $r10;
        androidx.test.uiautomator.UiObjectNotFoundException r12;
        java.lang.Throwable r13;

        r0 := @this: androidx.test.uiautomator.UiObject;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <androidx.test.uiautomator.Tracer: void trace(java.lang.Object[])>($r3);

        $r4 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.Configurator mConfig>;

        $l0 = virtualinvoke $r4.<androidx.test.uiautomator.Configurator: long getWaitForSelectorTimeout()>();

        r1 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(long)>($l0);

        if r1 != null goto label1;

        r12 = new androidx.test.uiautomator.UiObjectNotFoundException;

        $r10 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiSelector mUiSelector>;

        $r11 = virtualinvoke $r10.<androidx.test.uiautomator.UiSelector: java.lang.String toString()>();

        specialinvoke r12.<androidx.test.uiautomator.UiObjectNotFoundException: void <init>(java.lang.String)>($r11);

        r13 = (java.lang.Throwable) r12;

        throw r13;

     label1:
        $r5 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getClassName()>();

        r2 = specialinvoke r0.<androidx.test.uiautomator.UiObject: java.lang.String safeStringReturn(java.lang.CharSequence)>($r5);

        $r7 = <androidx.test.uiautomator.UiObject: java.lang.String LOG_TAG>;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r2;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("getClassName() = %s", $r6);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r7, $r8);

        return r2;
    }

    public java.lang.String getContentDescription() throws androidx.test.uiautomator.UiObjectNotFoundException
    {
        androidx.test.uiautomator.UiObject r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.Object[] $r2;
        androidx.test.uiautomator.Configurator $r3;
        long $l0;
        java.lang.CharSequence $r4;
        java.lang.String $r5, $r8;
        androidx.test.uiautomator.UiSelector $r7;
        androidx.test.uiautomator.UiObjectNotFoundException r9;
        java.lang.Throwable r10;

        r0 := @this: androidx.test.uiautomator.UiObject;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <androidx.test.uiautomator.Tracer: void trace(java.lang.Object[])>($r2);

        $r3 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.Configurator mConfig>;

        $l0 = virtualinvoke $r3.<androidx.test.uiautomator.Configurator: long getWaitForSelectorTimeout()>();

        r1 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(long)>($l0);

        if r1 != null goto label1;

        r9 = new androidx.test.uiautomator.UiObjectNotFoundException;

        $r7 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiSelector mUiSelector>;

        $r8 = virtualinvoke $r7.<androidx.test.uiautomator.UiSelector: java.lang.String toString()>();

        specialinvoke r9.<androidx.test.uiautomator.UiObjectNotFoundException: void <init>(java.lang.String)>($r8);

        r10 = (java.lang.Throwable) r9;

        throw r10;

     label1:
        $r4 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getContentDescription()>();

        $r5 = specialinvoke r0.<androidx.test.uiautomator.UiObject: java.lang.String safeStringReturn(java.lang.CharSequence)>($r4);

        return $r5;
    }

    public void legacySetText(java.lang.String) throws androidx.test.uiautomator.UiObjectNotFoundException
    {
        androidx.test.uiautomator.UiObject r0, r4, r18;
        java.lang.String r1, $r15;
        android.view.accessibility.AccessibilityNodeInfo r2;
        android.graphics.Rect r3;
        java.lang.Object[] $r5;
        androidx.test.uiautomator.Configurator $r6;
        long $l0;
        androidx.test.uiautomator.InteractionController $r7, $r11, $r12;
        int $i1, $i2, $i3;
        androidx.test.uiautomator.UiSelector $r10, $r14, r17;
        boolean $z1;
        androidx.test.uiautomator.UiObjectNotFoundException r16;
        java.lang.Throwable r19;

        r0 := @this: androidx.test.uiautomator.UiObject;

        r1 := @parameter0: java.lang.String;

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <androidx.test.uiautomator.Tracer: void trace(java.lang.Object[])>($r5);

        $r6 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.Configurator mConfig>;

        $l0 = virtualinvoke $r6.<androidx.test.uiautomator.Configurator: long getWaitForSelectorTimeout()>();

        r2 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(long)>($l0);

        if r2 != null goto label1;

        r16 = new androidx.test.uiautomator.UiObjectNotFoundException;

        $r14 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiSelector getSelector()>();

        $r15 = virtualinvoke $r14.<androidx.test.uiautomator.UiSelector: java.lang.String toString()>();

        specialinvoke r16.<androidx.test.uiautomator.UiObjectNotFoundException: void <init>(java.lang.String)>($r15);

        r19 = (java.lang.Throwable) r16;

        throw r19;

     label1:
        r3 = specialinvoke r0.<androidx.test.uiautomator.UiObject: android.graphics.Rect getVisibleBounds(android.view.accessibility.AccessibilityNodeInfo)>(r2);

        $r7 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.InteractionController getInteractionController()>();

        $i1 = r3.<android.graphics.Rect: int left>;

        $i2 = $i1 + 20;

        $i3 = virtualinvoke r3.<android.graphics.Rect: int centerY()>();

        virtualinvoke $r7.<androidx.test.uiautomator.InteractionController: boolean longTapNoSync(int,int)>($i2, $i3);

        r18 = new androidx.test.uiautomator.UiObject;

        r17 = new androidx.test.uiautomator.UiSelector;

        specialinvoke r17.<androidx.test.uiautomator.UiSelector: void <init>()>();

        $r10 = virtualinvoke r17.<androidx.test.uiautomator.UiSelector: androidx.test.uiautomator.UiSelector descriptionContains(java.lang.String)>("Select all");

        specialinvoke r18.<androidx.test.uiautomator.UiObject: void <init>(androidx.test.uiautomator.UiSelector)>($r10);

        r4 = r18;

        $z1 = virtualinvoke r4.<androidx.test.uiautomator.UiObject: boolean waitForExists(long)>(50L);

        if $z1 == 0 goto label2;

        virtualinvoke r4.<androidx.test.uiautomator.UiObject: boolean click()>();

     label2:
        staticinvoke <android.os.SystemClock: void sleep(long)>(250L);

        $r11 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.InteractionController getInteractionController()>();

        virtualinvoke $r11.<androidx.test.uiautomator.InteractionController: boolean sendKey(int,int)>(67, 0);

        $r12 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.InteractionController getInteractionController()>();

        virtualinvoke $r12.<androidx.test.uiautomator.InteractionController: boolean sendText(java.lang.String)>(r1);

        return;
    }

    public boolean setText(java.lang.String) throws androidx.test.uiautomator.UiObjectNotFoundException
    {
        androidx.test.uiautomator.UiObject r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        android.os.Bundle r2, r12;
        java.lang.Object[] $r3;
        int $i0;
        androidx.test.uiautomator.InteractionController $r4;
        boolean $z0, $z1;
        androidx.test.uiautomator.Configurator $r5;
        long $l1;
        androidx.test.uiautomator.UiSelector $r8;
        java.lang.String $r9, r10;
        androidx.test.uiautomator.UiObjectNotFoundException r11;
        java.lang.Throwable r13;

        r0 := @this: androidx.test.uiautomator.UiObject;

        r10 := @parameter0: java.lang.String;

        if r10 != null goto label1;

        r10 = "";

     label1:
        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r10;

        staticinvoke <androidx.test.uiautomator.Tracer: void trace(java.lang.Object[])>($r3);

        $i0 = <androidx.test.uiautomator.UiDevice: int API_LEVEL_ACTUAL>;

        if $i0 <= 19 goto label3;

        $r5 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.Configurator mConfig>;

        $l1 = virtualinvoke $r5.<androidx.test.uiautomator.Configurator: long getWaitForSelectorTimeout()>();

        r1 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(long)>($l1);

        if r1 != null goto label2;

        r11 = new androidx.test.uiautomator.UiObjectNotFoundException;

        $r8 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiSelector getSelector()>();

        $r9 = virtualinvoke $r8.<androidx.test.uiautomator.UiSelector: java.lang.String toString()>();

        specialinvoke r11.<androidx.test.uiautomator.UiObjectNotFoundException: void <init>(java.lang.String)>($r9);

        r13 = (java.lang.Throwable) r11;

        throw r13;

     label2:
        r12 = new android.os.Bundle;

        specialinvoke r12.<android.os.Bundle: void <init>()>();

        r2 = r12;

        virtualinvoke r2.<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>("ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE", r10);

        $z1 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: boolean performAction(int,android.os.Bundle)>(2097152, r2);

        return $z1;

     label3:
        virtualinvoke r0.<androidx.test.uiautomator.UiObject: void clearTextField()>();

        $r4 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.InteractionController getInteractionController()>();

        $z0 = virtualinvoke $r4.<androidx.test.uiautomator.InteractionController: boolean sendText(java.lang.String)>(r10);

        return $z0;
    }

    public void clearTextField() throws androidx.test.uiautomator.UiObjectNotFoundException
    {
        androidx.test.uiautomator.UiObject r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.CharSequence r2;
        android.os.Bundle r3, r14;
        java.lang.Object[] $r4;
        androidx.test.uiautomator.Configurator $r5;
        long $l0;
        int $i1, $i2, $i3;
        androidx.test.uiautomator.InteractionController $r7;
        java.lang.String $r8, $r9, $r12;
        androidx.test.uiautomator.UiSelector $r11;
        boolean z2, z3;
        androidx.test.uiautomator.UiObjectNotFoundException r13;
        java.lang.Throwable r15;

        r0 := @this: androidx.test.uiautomator.UiObject;

        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <androidx.test.uiautomator.Tracer: void trace(java.lang.Object[])>($r4);

        $r5 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.Configurator mConfig>;

        $l0 = virtualinvoke $r5.<androidx.test.uiautomator.Configurator: long getWaitForSelectorTimeout()>();

        r1 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(long)>($l0);

        if r1 != null goto label1;

        r13 = new androidx.test.uiautomator.UiObjectNotFoundException;

        $r11 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiSelector mUiSelector>;

        $r12 = virtualinvoke $r11.<androidx.test.uiautomator.UiSelector: java.lang.String toString()>();

        specialinvoke r13.<androidx.test.uiautomator.UiObjectNotFoundException: void <init>(java.lang.String)>($r12);

        r15 = (java.lang.Throwable) r13;

        throw r15;

     label1:
        r2 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getText()>();

        if r2 == null goto label5;

        $i1 = interfaceinvoke r2.<java.lang.CharSequence: int length()>();

        if $i1 <= 0 goto label5;

        $i2 = <androidx.test.uiautomator.UiDevice: int API_LEVEL_ACTUAL>;

        if $i2 <= 19 goto label2;

        virtualinvoke r0.<androidx.test.uiautomator.UiObject: boolean setText(java.lang.String)>("");

        goto label5;

     label2:
        r14 = new android.os.Bundle;

        specialinvoke r14.<android.os.Bundle: void <init>()>();

        r3 = r14;

        virtualinvoke r3.<android.os.Bundle: void putInt(java.lang.String,int)>("ACTION_ARGUMENT_SELECTION_START_INT", 0);

        $i3 = interfaceinvoke r2.<java.lang.CharSequence: int length()>();

        virtualinvoke r3.<android.os.Bundle: void putInt(java.lang.String,int)>("ACTION_ARGUMENT_SELECTION_END_INT", $i3);

        z2 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: boolean performAction(int)>(1);

        if z2 != 0 goto label3;

        $r9 = <androidx.test.uiautomator.UiObject: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r9, "ACTION_FOCUS on text field failed.");

     label3:
        z3 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: boolean performAction(int,android.os.Bundle)>(131072, r3);

        if z3 != 0 goto label4;

        $r8 = <androidx.test.uiautomator.UiObject: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r8, "ACTION_SET_SELECTION on text field failed.");

     label4:
        $r7 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.InteractionController getInteractionController()>();

        virtualinvoke $r7.<androidx.test.uiautomator.InteractionController: boolean sendKey(int,int)>(67, 0);

     label5:
        return;
    }

    public boolean isChecked() throws androidx.test.uiautomator.UiObjectNotFoundException
    {
        androidx.test.uiautomator.UiObject r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.Object[] $r2;
        androidx.test.uiautomator.Configurator $r3;
        long $l0;
        boolean $z0;
        androidx.test.uiautomator.UiSelector $r5;
        java.lang.String $r6;
        androidx.test.uiautomator.UiObjectNotFoundException r7;
        java.lang.Throwable r8;

        r0 := @this: androidx.test.uiautomator.UiObject;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <androidx.test.uiautomator.Tracer: void trace(java.lang.Object[])>($r2);

        $r3 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.Configurator mConfig>;

        $l0 = virtualinvoke $r3.<androidx.test.uiautomator.Configurator: long getWaitForSelectorTimeout()>();

        r1 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(long)>($l0);

        if r1 != null goto label1;

        r7 = new androidx.test.uiautomator.UiObjectNotFoundException;

        $r5 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiSelector mUiSelector>;

        $r6 = virtualinvoke $r5.<androidx.test.uiautomator.UiSelector: java.lang.String toString()>();

        specialinvoke r7.<androidx.test.uiautomator.UiObjectNotFoundException: void <init>(java.lang.String)>($r6);

        r8 = (java.lang.Throwable) r7;

        throw r8;

     label1:
        $z0 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isChecked()>();

        return $z0;
    }

    public boolean isSelected() throws androidx.test.uiautomator.UiObjectNotFoundException
    {
        androidx.test.uiautomator.UiObject r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.Object[] $r2;
        androidx.test.uiautomator.Configurator $r3;
        long $l0;
        boolean $z0;
        androidx.test.uiautomator.UiSelector $r5;
        java.lang.String $r6;
        androidx.test.uiautomator.UiObjectNotFoundException r7;
        java.lang.Throwable r8;

        r0 := @this: androidx.test.uiautomator.UiObject;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <androidx.test.uiautomator.Tracer: void trace(java.lang.Object[])>($r2);

        $r3 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.Configurator mConfig>;

        $l0 = virtualinvoke $r3.<androidx.test.uiautomator.Configurator: long getWaitForSelectorTimeout()>();

        r1 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(long)>($l0);

        if r1 != null goto label1;

        r7 = new androidx.test.uiautomator.UiObjectNotFoundException;

        $r5 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiSelector mUiSelector>;

        $r6 = virtualinvoke $r5.<androidx.test.uiautomator.UiSelector: java.lang.String toString()>();

        specialinvoke r7.<androidx.test.uiautomator.UiObjectNotFoundException: void <init>(java.lang.String)>($r6);

        r8 = (java.lang.Throwable) r7;

        throw r8;

     label1:
        $z0 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isSelected()>();

        return $z0;
    }

    public boolean isCheckable() throws androidx.test.uiautomator.UiObjectNotFoundException
    {
        androidx.test.uiautomator.UiObject r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.Object[] $r2;
        androidx.test.uiautomator.Configurator $r3;
        long $l0;
        boolean $z0;
        androidx.test.uiautomator.UiSelector $r5;
        java.lang.String $r6;
        androidx.test.uiautomator.UiObjectNotFoundException r7;
        java.lang.Throwable r8;

        r0 := @this: androidx.test.uiautomator.UiObject;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <androidx.test.uiautomator.Tracer: void trace(java.lang.Object[])>($r2);

        $r3 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.Configurator mConfig>;

        $l0 = virtualinvoke $r3.<androidx.test.uiautomator.Configurator: long getWaitForSelectorTimeout()>();

        r1 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(long)>($l0);

        if r1 != null goto label1;

        r7 = new androidx.test.uiautomator.UiObjectNotFoundException;

        $r5 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiSelector mUiSelector>;

        $r6 = virtualinvoke $r5.<androidx.test.uiautomator.UiSelector: java.lang.String toString()>();

        specialinvoke r7.<androidx.test.uiautomator.UiObjectNotFoundException: void <init>(java.lang.String)>($r6);

        r8 = (java.lang.Throwable) r7;

        throw r8;

     label1:
        $z0 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isCheckable()>();

        return $z0;
    }

    public boolean isEnabled() throws androidx.test.uiautomator.UiObjectNotFoundException
    {
        androidx.test.uiautomator.UiObject r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.Object[] $r2;
        androidx.test.uiautomator.Configurator $r3;
        long $l0;
        boolean $z0;
        androidx.test.uiautomator.UiSelector $r5;
        java.lang.String $r6;
        androidx.test.uiautomator.UiObjectNotFoundException r7;
        java.lang.Throwable r8;

        r0 := @this: androidx.test.uiautomator.UiObject;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <androidx.test.uiautomator.Tracer: void trace(java.lang.Object[])>($r2);

        $r3 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.Configurator mConfig>;

        $l0 = virtualinvoke $r3.<androidx.test.uiautomator.Configurator: long getWaitForSelectorTimeout()>();

        r1 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(long)>($l0);

        if r1 != null goto label1;

        r7 = new androidx.test.uiautomator.UiObjectNotFoundException;

        $r5 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiSelector mUiSelector>;

        $r6 = virtualinvoke $r5.<androidx.test.uiautomator.UiSelector: java.lang.String toString()>();

        specialinvoke r7.<androidx.test.uiautomator.UiObjectNotFoundException: void <init>(java.lang.String)>($r6);

        r8 = (java.lang.Throwable) r7;

        throw r8;

     label1:
        $z0 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isEnabled()>();

        return $z0;
    }

    public boolean isClickable() throws androidx.test.uiautomator.UiObjectNotFoundException
    {
        androidx.test.uiautomator.UiObject r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.Object[] $r2;
        androidx.test.uiautomator.Configurator $r3;
        long $l0;
        boolean $z0;
        androidx.test.uiautomator.UiSelector $r5;
        java.lang.String $r6;
        androidx.test.uiautomator.UiObjectNotFoundException r7;
        java.lang.Throwable r8;

        r0 := @this: androidx.test.uiautomator.UiObject;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <androidx.test.uiautomator.Tracer: void trace(java.lang.Object[])>($r2);

        $r3 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.Configurator mConfig>;

        $l0 = virtualinvoke $r3.<androidx.test.uiautomator.Configurator: long getWaitForSelectorTimeout()>();

        r1 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(long)>($l0);

        if r1 != null goto label1;

        r7 = new androidx.test.uiautomator.UiObjectNotFoundException;

        $r5 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiSelector mUiSelector>;

        $r6 = virtualinvoke $r5.<androidx.test.uiautomator.UiSelector: java.lang.String toString()>();

        specialinvoke r7.<androidx.test.uiautomator.UiObjectNotFoundException: void <init>(java.lang.String)>($r6);

        r8 = (java.lang.Throwable) r7;

        throw r8;

     label1:
        $z0 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isClickable()>();

        return $z0;
    }

    public boolean isFocused() throws androidx.test.uiautomator.UiObjectNotFoundException
    {
        androidx.test.uiautomator.UiObject r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.Object[] $r2;
        androidx.test.uiautomator.Configurator $r3;
        long $l0;
        boolean $z0;
        androidx.test.uiautomator.UiSelector $r5;
        java.lang.String $r6;
        androidx.test.uiautomator.UiObjectNotFoundException r7;
        java.lang.Throwable r8;

        r0 := @this: androidx.test.uiautomator.UiObject;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <androidx.test.uiautomator.Tracer: void trace(java.lang.Object[])>($r2);

        $r3 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.Configurator mConfig>;

        $l0 = virtualinvoke $r3.<androidx.test.uiautomator.Configurator: long getWaitForSelectorTimeout()>();

        r1 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(long)>($l0);

        if r1 != null goto label1;

        r7 = new androidx.test.uiautomator.UiObjectNotFoundException;

        $r5 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiSelector mUiSelector>;

        $r6 = virtualinvoke $r5.<androidx.test.uiautomator.UiSelector: java.lang.String toString()>();

        specialinvoke r7.<androidx.test.uiautomator.UiObjectNotFoundException: void <init>(java.lang.String)>($r6);

        r8 = (java.lang.Throwable) r7;

        throw r8;

     label1:
        $z0 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isFocused()>();

        return $z0;
    }

    public boolean isFocusable() throws androidx.test.uiautomator.UiObjectNotFoundException
    {
        androidx.test.uiautomator.UiObject r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.Object[] $r2;
        androidx.test.uiautomator.Configurator $r3;
        long $l0;
        boolean $z0;
        androidx.test.uiautomator.UiSelector $r5;
        java.lang.String $r6;
        androidx.test.uiautomator.UiObjectNotFoundException r7;
        java.lang.Throwable r8;

        r0 := @this: androidx.test.uiautomator.UiObject;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <androidx.test.uiautomator.Tracer: void trace(java.lang.Object[])>($r2);

        $r3 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.Configurator mConfig>;

        $l0 = virtualinvoke $r3.<androidx.test.uiautomator.Configurator: long getWaitForSelectorTimeout()>();

        r1 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(long)>($l0);

        if r1 != null goto label1;

        r7 = new androidx.test.uiautomator.UiObjectNotFoundException;

        $r5 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiSelector mUiSelector>;

        $r6 = virtualinvoke $r5.<androidx.test.uiautomator.UiSelector: java.lang.String toString()>();

        specialinvoke r7.<androidx.test.uiautomator.UiObjectNotFoundException: void <init>(java.lang.String)>($r6);

        r8 = (java.lang.Throwable) r7;

        throw r8;

     label1:
        $z0 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isFocusable()>();

        return $z0;
    }

    public boolean isScrollable() throws androidx.test.uiautomator.UiObjectNotFoundException
    {
        androidx.test.uiautomator.UiObject r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.Object[] $r2;
        androidx.test.uiautomator.Configurator $r3;
        long $l0;
        boolean $z0;
        androidx.test.uiautomator.UiSelector $r5;
        java.lang.String $r6;
        androidx.test.uiautomator.UiObjectNotFoundException r7;
        java.lang.Throwable r8;

        r0 := @this: androidx.test.uiautomator.UiObject;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <androidx.test.uiautomator.Tracer: void trace(java.lang.Object[])>($r2);

        $r3 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.Configurator mConfig>;

        $l0 = virtualinvoke $r3.<androidx.test.uiautomator.Configurator: long getWaitForSelectorTimeout()>();

        r1 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(long)>($l0);

        if r1 != null goto label1;

        r7 = new androidx.test.uiautomator.UiObjectNotFoundException;

        $r5 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiSelector mUiSelector>;

        $r6 = virtualinvoke $r5.<androidx.test.uiautomator.UiSelector: java.lang.String toString()>();

        specialinvoke r7.<androidx.test.uiautomator.UiObjectNotFoundException: void <init>(java.lang.String)>($r6);

        r8 = (java.lang.Throwable) r7;

        throw r8;

     label1:
        $z0 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isScrollable()>();

        return $z0;
    }

    public boolean isLongClickable() throws androidx.test.uiautomator.UiObjectNotFoundException
    {
        androidx.test.uiautomator.UiObject r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.Object[] $r2;
        androidx.test.uiautomator.Configurator $r3;
        long $l0;
        boolean $z0;
        androidx.test.uiautomator.UiSelector $r5;
        java.lang.String $r6;
        androidx.test.uiautomator.UiObjectNotFoundException r7;
        java.lang.Throwable r8;

        r0 := @this: androidx.test.uiautomator.UiObject;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <androidx.test.uiautomator.Tracer: void trace(java.lang.Object[])>($r2);

        $r3 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.Configurator mConfig>;

        $l0 = virtualinvoke $r3.<androidx.test.uiautomator.Configurator: long getWaitForSelectorTimeout()>();

        r1 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(long)>($l0);

        if r1 != null goto label1;

        r7 = new androidx.test.uiautomator.UiObjectNotFoundException;

        $r5 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiSelector mUiSelector>;

        $r6 = virtualinvoke $r5.<androidx.test.uiautomator.UiSelector: java.lang.String toString()>();

        specialinvoke r7.<androidx.test.uiautomator.UiObjectNotFoundException: void <init>(java.lang.String)>($r6);

        r8 = (java.lang.Throwable) r7;

        throw r8;

     label1:
        $z0 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: boolean isLongClickable()>();

        return $z0;
    }

    public java.lang.String getPackageName() throws androidx.test.uiautomator.UiObjectNotFoundException
    {
        androidx.test.uiautomator.UiObject r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.Object[] $r2;
        androidx.test.uiautomator.Configurator $r3;
        long $l0;
        java.lang.CharSequence $r4;
        java.lang.String $r5, $r8;
        androidx.test.uiautomator.UiSelector $r7;
        androidx.test.uiautomator.UiObjectNotFoundException r9;
        java.lang.Throwable r10;

        r0 := @this: androidx.test.uiautomator.UiObject;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <androidx.test.uiautomator.Tracer: void trace(java.lang.Object[])>($r2);

        $r3 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.Configurator mConfig>;

        $l0 = virtualinvoke $r3.<androidx.test.uiautomator.Configurator: long getWaitForSelectorTimeout()>();

        r1 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(long)>($l0);

        if r1 != null goto label1;

        r9 = new androidx.test.uiautomator.UiObjectNotFoundException;

        $r7 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiSelector mUiSelector>;

        $r8 = virtualinvoke $r7.<androidx.test.uiautomator.UiSelector: java.lang.String toString()>();

        specialinvoke r9.<androidx.test.uiautomator.UiObjectNotFoundException: void <init>(java.lang.String)>($r8);

        r10 = (java.lang.Throwable) r9;

        throw r10;

     label1:
        $r4 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPackageName()>();

        $r5 = specialinvoke r0.<androidx.test.uiautomator.UiObject: java.lang.String safeStringReturn(java.lang.CharSequence)>($r4);

        return $r5;
    }

    public android.graphics.Rect getVisibleBounds() throws androidx.test.uiautomator.UiObjectNotFoundException
    {
        androidx.test.uiautomator.UiObject r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.Object[] $r2;
        androidx.test.uiautomator.Configurator $r3;
        long $l0;
        android.graphics.Rect $r4;
        androidx.test.uiautomator.UiSelector $r6;
        java.lang.String $r7;
        androidx.test.uiautomator.UiObjectNotFoundException r8;
        java.lang.Throwable r9;

        r0 := @this: androidx.test.uiautomator.UiObject;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <androidx.test.uiautomator.Tracer: void trace(java.lang.Object[])>($r2);

        $r3 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.Configurator mConfig>;

        $l0 = virtualinvoke $r3.<androidx.test.uiautomator.Configurator: long getWaitForSelectorTimeout()>();

        r1 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(long)>($l0);

        if r1 != null goto label1;

        r8 = new androidx.test.uiautomator.UiObjectNotFoundException;

        $r6 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiSelector mUiSelector>;

        $r7 = virtualinvoke $r6.<androidx.test.uiautomator.UiSelector: java.lang.String toString()>();

        specialinvoke r8.<androidx.test.uiautomator.UiObjectNotFoundException: void <init>(java.lang.String)>($r7);

        r9 = (java.lang.Throwable) r8;

        throw r9;

     label1:
        $r4 = specialinvoke r0.<androidx.test.uiautomator.UiObject: android.graphics.Rect getVisibleBounds(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        return $r4;
    }

    public android.graphics.Rect getBounds() throws androidx.test.uiautomator.UiObjectNotFoundException
    {
        androidx.test.uiautomator.UiObject r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        android.graphics.Rect r2, r10;
        java.lang.Object[] $r3;
        androidx.test.uiautomator.Configurator $r4;
        long $l0;
        androidx.test.uiautomator.UiSelector $r7;
        java.lang.String $r8;
        androidx.test.uiautomator.UiObjectNotFoundException r9;
        java.lang.Throwable r11;

        r0 := @this: androidx.test.uiautomator.UiObject;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <androidx.test.uiautomator.Tracer: void trace(java.lang.Object[])>($r3);

        $r4 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.Configurator mConfig>;

        $l0 = virtualinvoke $r4.<androidx.test.uiautomator.Configurator: long getWaitForSelectorTimeout()>();

        r1 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(long)>($l0);

        if r1 != null goto label1;

        r9 = new androidx.test.uiautomator.UiObjectNotFoundException;

        $r7 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiSelector mUiSelector>;

        $r8 = virtualinvoke $r7.<androidx.test.uiautomator.UiSelector: java.lang.String toString()>();

        specialinvoke r9.<androidx.test.uiautomator.UiObjectNotFoundException: void <init>(java.lang.String)>($r8);

        r11 = (java.lang.Throwable) r9;

        throw r11;

     label1:
        r10 = new android.graphics.Rect;

        specialinvoke r10.<android.graphics.Rect: void <init>()>();

        r2 = r10;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void getBoundsInScreen(android.graphics.Rect)>(r2);

        return r2;
    }

    public boolean waitForExists(long)
    {
        androidx.test.uiautomator.UiObject r0;
        long l0;
        java.lang.Object[] $r1;
        java.lang.Long $r2;
        android.view.accessibility.AccessibilityNodeInfo $r3;

        r0 := @this: androidx.test.uiautomator.UiObject;

        l0 := @parameter0: long;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r1[0] = $r2;

        staticinvoke <androidx.test.uiautomator.Tracer: void trace(java.lang.Object[])>($r1);

        $r3 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(long)>(l0);

        if $r3 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean waitUntilGone(long)
    {
        androidx.test.uiautomator.UiObject r0;
        long l0, l1, $l2, l4;
        java.lang.Object[] $r1;
        java.lang.Long $r2;
        android.view.accessibility.AccessibilityNodeInfo $r3;
        byte $b3, $b5;

        r0 := @this: androidx.test.uiautomator.UiObject;

        l0 := @parameter0: long;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r1[0] = $r2;

        staticinvoke <androidx.test.uiautomator.Tracer: void trace(java.lang.Object[])>($r1);

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l4 = 0L;

     label1:
        $b5 = l4 cmp l0;

        if $b5 > 0 goto label3;

        $r3 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(long)>(0L);

        if $r3 != null goto label2;

        return 1;

     label2:
        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l4 = $l2 - l1;

        $b3 = l0 cmp 0L;

        if $b3 <= 0 goto label1;

        staticinvoke <android.os.SystemClock: void sleep(long)>(1000L);

        goto label1;

     label3:
        return 0;
    }

    public boolean exists()
    {
        androidx.test.uiautomator.UiObject r0;
        java.lang.Object[] $r1;
        boolean $z0;

        r0 := @this: androidx.test.uiautomator.UiObject;

        $r1 = newarray (java.lang.Object)[0];

        staticinvoke <androidx.test.uiautomator.Tracer: void trace(java.lang.Object[])>($r1);

        $z0 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: boolean waitForExists(long)>(0L);

        return $z0;
    }

    private java.lang.String safeStringReturn(java.lang.CharSequence)
    {
        androidx.test.uiautomator.UiObject r0;
        java.lang.CharSequence r1;
        java.lang.String $r2;

        r0 := @this: androidx.test.uiautomator.UiObject;

        r1 := @parameter0: java.lang.CharSequence;

        if r1 != null goto label1;

        return "";

     label1:
        $r2 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();

        return $r2;
    }

    public boolean pinchOut(int, int) throws androidx.test.uiautomator.UiObjectNotFoundException
    {
        androidx.test.uiautomator.UiObject r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, $i21, i22;
        float f0, $f1, $f2, $f3, $f4, $f5;
        android.view.accessibility.AccessibilityNodeInfo r1;
        android.graphics.Rect r2;
        android.graphics.Point r3, r4, r5, r6, r18, r19, r20, r21;
        boolean $z0;
        androidx.test.uiautomator.UiSelector $r13;
        java.lang.String $r14;
        androidx.test.uiautomator.Configurator $r15;
        long $l23;
        androidx.test.uiautomator.UiObjectNotFoundException r16;
        java.lang.IllegalStateException r17;
        java.lang.Throwable r22;

        r0 := @this: androidx.test.uiautomator.UiObject;

        i20 := @parameter0: int;

        i0 := @parameter1: int;

        if i20 >= 0 goto label1;

        $i21 = 1;

        goto label3;

     label1:
        if i20 <= 100 goto label2;

        $i21 = 100;

        goto label3;

     label2:
        $i21 = i20;

     label3:
        i22 = $i21;

        $f5 = (float) i22;

        f0 = $f5 / 100.0F;

        $r15 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.Configurator mConfig>;

        $l23 = virtualinvoke $r15.<androidx.test.uiautomator.Configurator: long getWaitForSelectorTimeout()>();

        r1 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(long)>($l23);

        if r1 != null goto label4;

        r16 = new androidx.test.uiautomator.UiObjectNotFoundException;

        $r13 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiSelector mUiSelector>;

        $r14 = virtualinvoke $r13.<androidx.test.uiautomator.UiSelector: java.lang.String toString()>();

        specialinvoke r16.<androidx.test.uiautomator.UiObjectNotFoundException: void <init>(java.lang.String)>($r14);

        r22 = (java.lang.Throwable) r16;

        throw r22;

     label4:
        r2 = specialinvoke r0.<androidx.test.uiautomator.UiObject: android.graphics.Rect getVisibleBounds(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $i1 = virtualinvoke r2.<android.graphics.Rect: int width()>();

        if $i1 > 40 goto label5;

        r17 = new java.lang.IllegalStateException;

        specialinvoke r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Object width is too small for operation");

        throw r17;

     label5:
        r18 = new android.graphics.Point;

        $i2 = virtualinvoke r2.<android.graphics.Rect: int centerX()>();

        $i3 = $i2 - 20;

        $i4 = virtualinvoke r2.<android.graphics.Rect: int centerY()>();

        specialinvoke r18.<android.graphics.Point: void <init>(int,int)>($i3, $i4);

        r3 = r18;

        r19 = new android.graphics.Point;

        $i5 = virtualinvoke r2.<android.graphics.Rect: int centerX()>();

        $i6 = $i5 + 20;

        $i7 = virtualinvoke r2.<android.graphics.Rect: int centerY()>();

        specialinvoke r19.<android.graphics.Point: void <init>(int,int)>($i6, $i7);

        r4 = r19;

        r20 = new android.graphics.Point;

        $i8 = virtualinvoke r2.<android.graphics.Rect: int centerX()>();

        $i9 = virtualinvoke r2.<android.graphics.Rect: int width()>();

        $i10 = $i9 / 2;

        $f1 = (float) $i10;

        $f2 = $f1 * f0;

        $i11 = (int) $f2;

        $i12 = $i8 - $i11;

        $i13 = virtualinvoke r2.<android.graphics.Rect: int centerY()>();

        specialinvoke r20.<android.graphics.Point: void <init>(int,int)>($i12, $i13);

        r5 = r20;

        r21 = new android.graphics.Point;

        $i14 = virtualinvoke r2.<android.graphics.Rect: int centerX()>();

        $i15 = virtualinvoke r2.<android.graphics.Rect: int width()>();

        $i16 = $i15 / 2;

        $f3 = (float) $i16;

        $f4 = $f3 * f0;

        $i17 = (int) $f4;

        $i18 = $i14 + $i17;

        $i19 = virtualinvoke r2.<android.graphics.Rect: int centerY()>();

        specialinvoke r21.<android.graphics.Point: void <init>(int,int)>($i18, $i19);

        r6 = r21;

        $z0 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: boolean performTwoPointerGesture(android.graphics.Point,android.graphics.Point,android.graphics.Point,android.graphics.Point,int)>(r3, r4, r5, r6, i0);

        return $z0;
    }

    public boolean pinchIn(int, int) throws androidx.test.uiautomator.UiObjectNotFoundException
    {
        androidx.test.uiautomator.UiObject r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, $i21, i22;
        float f0, $f1, $f2, $f3, $f4, $f5;
        android.view.accessibility.AccessibilityNodeInfo r1;
        android.graphics.Rect r2;
        android.graphics.Point r3, r4, r5, r6, r18, r19, r20, r21;
        boolean $z0;
        androidx.test.uiautomator.UiSelector $r13;
        java.lang.String $r14;
        androidx.test.uiautomator.Configurator $r15;
        long $l23;
        androidx.test.uiautomator.UiObjectNotFoundException r16;
        java.lang.IllegalStateException r17;
        java.lang.Throwable r22;

        r0 := @this: androidx.test.uiautomator.UiObject;

        i20 := @parameter0: int;

        i0 := @parameter1: int;

        if i20 >= 0 goto label1;

        $i21 = 0;

        goto label3;

     label1:
        if i20 <= 100 goto label2;

        $i21 = 100;

        goto label3;

     label2:
        $i21 = i20;

     label3:
        i22 = $i21;

        $f5 = (float) i22;

        f0 = $f5 / 100.0F;

        $r15 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.Configurator mConfig>;

        $l23 = virtualinvoke $r15.<androidx.test.uiautomator.Configurator: long getWaitForSelectorTimeout()>();

        r1 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(long)>($l23);

        if r1 != null goto label4;

        r16 = new androidx.test.uiautomator.UiObjectNotFoundException;

        $r13 = r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.UiSelector mUiSelector>;

        $r14 = virtualinvoke $r13.<androidx.test.uiautomator.UiSelector: java.lang.String toString()>();

        specialinvoke r16.<androidx.test.uiautomator.UiObjectNotFoundException: void <init>(java.lang.String)>($r14);

        r22 = (java.lang.Throwable) r16;

        throw r22;

     label4:
        r2 = specialinvoke r0.<androidx.test.uiautomator.UiObject: android.graphics.Rect getVisibleBounds(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $i1 = virtualinvoke r2.<android.graphics.Rect: int width()>();

        if $i1 > 40 goto label5;

        r17 = new java.lang.IllegalStateException;

        specialinvoke r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Object width is too small for operation");

        throw r17;

     label5:
        r18 = new android.graphics.Point;

        $i2 = virtualinvoke r2.<android.graphics.Rect: int centerX()>();

        $i3 = virtualinvoke r2.<android.graphics.Rect: int width()>();

        $i4 = $i3 / 2;

        $f1 = (float) $i4;

        $f2 = $f1 * f0;

        $i5 = (int) $f2;

        $i6 = $i2 - $i5;

        $i7 = virtualinvoke r2.<android.graphics.Rect: int centerY()>();

        specialinvoke r18.<android.graphics.Point: void <init>(int,int)>($i6, $i7);

        r3 = r18;

        r19 = new android.graphics.Point;

        $i8 = virtualinvoke r2.<android.graphics.Rect: int centerX()>();

        $i9 = virtualinvoke r2.<android.graphics.Rect: int width()>();

        $i10 = $i9 / 2;

        $f3 = (float) $i10;

        $f4 = $f3 * f0;

        $i11 = (int) $f4;

        $i12 = $i8 + $i11;

        $i13 = virtualinvoke r2.<android.graphics.Rect: int centerY()>();

        specialinvoke r19.<android.graphics.Point: void <init>(int,int)>($i12, $i13);

        r4 = r19;

        r20 = new android.graphics.Point;

        $i14 = virtualinvoke r2.<android.graphics.Rect: int centerX()>();

        $i15 = $i14 - 20;

        $i16 = virtualinvoke r2.<android.graphics.Rect: int centerY()>();

        specialinvoke r20.<android.graphics.Point: void <init>(int,int)>($i15, $i16);

        r5 = r20;

        r21 = new android.graphics.Point;

        $i17 = virtualinvoke r2.<android.graphics.Rect: int centerX()>();

        $i18 = $i17 + 20;

        $i19 = virtualinvoke r2.<android.graphics.Rect: int centerY()>();

        specialinvoke r21.<android.graphics.Point: void <init>(int,int)>($i18, $i19);

        r6 = r21;

        $z0 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: boolean performTwoPointerGesture(android.graphics.Point,android.graphics.Point,android.graphics.Point,android.graphics.Point,int)>(r3, r4, r5, r6, i0);

        return $z0;
    }

    public boolean performTwoPointerGesture(android.graphics.Point, android.graphics.Point, android.graphics.Point, android.graphics.Point, int)
    {
        androidx.test.uiautomator.UiObject r0;
        android.graphics.Point r1, r2, r3, r4;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19;
        android.view.MotionEvent$PointerCoords[] r5, r6;
        android.view.MotionEvent$PointerCoords r7, $r8, $r9, $r11, $r12, r13, r14, r15;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25, i26, i27, i28, i29, $i30;
        android.view.MotionEvent$PointerCoords[][] $r10;
        boolean $z0;

        r0 := @this: androidx.test.uiautomator.UiObject;

        r1 := @parameter0: android.graphics.Point;

        r2 := @parameter1: android.graphics.Point;

        r3 := @parameter2: android.graphics.Point;

        r4 := @parameter3: android.graphics.Point;

        i24 := @parameter4: int;

        if i24 != 0 goto label1;

        i24 = 1;

     label1:
        $i1 = r3.<android.graphics.Point: int x>;

        $i0 = r1.<android.graphics.Point: int x>;

        $i2 = $i1 - $i0;

        $i3 = $i2 / i24;

        f0 = (float) $i3;

        $i5 = r3.<android.graphics.Point: int y>;

        $i4 = r1.<android.graphics.Point: int y>;

        $i6 = $i5 - $i4;

        $i7 = $i6 / i24;

        f1 = (float) $i7;

        $i9 = r4.<android.graphics.Point: int x>;

        $i8 = r2.<android.graphics.Point: int x>;

        $i10 = $i9 - $i8;

        $i11 = $i10 / i24;

        f2 = (float) $i11;

        $i13 = r4.<android.graphics.Point: int y>;

        $i12 = r2.<android.graphics.Point: int y>;

        $i14 = $i13 - $i12;

        $i15 = $i14 / i24;

        f3 = (float) $i15;

        i25 = r1.<android.graphics.Point: int x>;

        i26 = r1.<android.graphics.Point: int y>;

        i27 = r2.<android.graphics.Point: int x>;

        i28 = r2.<android.graphics.Point: int y>;

        $i16 = i24 + 2;

        r5 = newarray (android.view.MotionEvent$PointerCoords)[$i16];

        $i17 = i24 + 2;

        r6 = newarray (android.view.MotionEvent$PointerCoords)[$i17];

        i29 = 0;

     label2:
        $i30 = i24 + 1;

        if i29 >= $i30 goto label3;

        $r11 = new android.view.MotionEvent$PointerCoords;

        specialinvoke $r11.<android.view.MotionEvent$PointerCoords: void <init>()>();

        r13 = $r11;

        $f8 = (float) i25;

        r13.<android.view.MotionEvent$PointerCoords: float x> = $f8;

        $f9 = (float) i26;

        r13.<android.view.MotionEvent$PointerCoords: float y> = $f9;

        r13.<android.view.MotionEvent$PointerCoords: float pressure> = 1.0F;

        r13.<android.view.MotionEvent$PointerCoords: float size> = 1.0F;

        r5[i29] = r13;

        $r12 = new android.view.MotionEvent$PointerCoords;

        specialinvoke $r12.<android.view.MotionEvent$PointerCoords: void <init>()>();

        r7 = $r12;

        $f10 = (float) i27;

        r7.<android.view.MotionEvent$PointerCoords: float x> = $f10;

        $f11 = (float) i28;

        r7.<android.view.MotionEvent$PointerCoords: float y> = $f11;

        r7.<android.view.MotionEvent$PointerCoords: float pressure> = 1.0F;

        r7.<android.view.MotionEvent$PointerCoords: float size> = 1.0F;

        r6[i29] = r7;

        $f12 = (float) i25;

        $f13 = $f12 + f0;

        i25 = (int) $f13;

        $f14 = (float) i26;

        $f15 = $f14 + f1;

        i26 = (int) $f15;

        $f16 = (float) i27;

        $f17 = $f16 + f2;

        i27 = (int) $f17;

        $f18 = (float) i28;

        $f19 = $f18 + f3;

        i28 = (int) $f19;

        i29 = i29 + 1;

        goto label2;

     label3:
        $r8 = new android.view.MotionEvent$PointerCoords;

        specialinvoke $r8.<android.view.MotionEvent$PointerCoords: void <init>()>();

        r14 = $r8;

        $i18 = r3.<android.graphics.Point: int x>;

        $f4 = (float) $i18;

        r14.<android.view.MotionEvent$PointerCoords: float x> = $f4;

        $i19 = r3.<android.graphics.Point: int y>;

        $f5 = (float) $i19;

        r14.<android.view.MotionEvent$PointerCoords: float y> = $f5;

        r14.<android.view.MotionEvent$PointerCoords: float pressure> = 1.0F;

        r14.<android.view.MotionEvent$PointerCoords: float size> = 1.0F;

        $i20 = i24 + 1;

        r5[$i20] = r14;

        $r9 = new android.view.MotionEvent$PointerCoords;

        specialinvoke $r9.<android.view.MotionEvent$PointerCoords: void <init>()>();

        r15 = $r9;

        $i21 = r4.<android.graphics.Point: int x>;

        $f6 = (float) $i21;

        r15.<android.view.MotionEvent$PointerCoords: float x> = $f6;

        $i22 = r4.<android.graphics.Point: int y>;

        $f7 = (float) $i22;

        r15.<android.view.MotionEvent$PointerCoords: float y> = $f7;

        r15.<android.view.MotionEvent$PointerCoords: float pressure> = 1.0F;

        r15.<android.view.MotionEvent$PointerCoords: float size> = 1.0F;

        $i23 = i24 + 1;

        r6[$i23] = r15;

        $r10 = newarray (android.view.MotionEvent$PointerCoords[])[2];

        $r10[0] = r5;

        $r10[1] = r6;

        $z0 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: boolean performMultiPointerGesture(android.view.MotionEvent$PointerCoords[][])>($r10);

        return $z0;
    }

    public transient boolean performMultiPointerGesture(android.view.MotionEvent$PointerCoords[][])
    {
        androidx.test.uiautomator.UiObject r0;
        android.view.MotionEvent$PointerCoords[][] r1;
        androidx.test.uiautomator.InteractionController $r2;
        boolean $z0;

        r0 := @this: androidx.test.uiautomator.UiObject;

        r1 := @parameter0: android.view.MotionEvent$PointerCoords[][];

        $r2 = virtualinvoke r0.<androidx.test.uiautomator.UiObject: androidx.test.uiautomator.InteractionController getInteractionController()>();

        $z0 = virtualinvoke $r2.<androidx.test.uiautomator.InteractionController: boolean performMultiPointerGesture(android.view.MotionEvent$PointerCoords[][])>(r1);

        return $z0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Landroidx/test/uiautomator/UiObject;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <androidx.test.uiautomator.UiObject: java.lang.String LOG_TAG> = $r1;

        return;
    }

