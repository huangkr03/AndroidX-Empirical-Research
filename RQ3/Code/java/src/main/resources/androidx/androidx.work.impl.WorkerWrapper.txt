androidx.work.impl.WorkerWrapper
<androidx.work.impl.WorkerWrapper: java.lang.String TAG>
<androidx.work.impl.WorkerWrapper: android.content.Context mAppContext>
<androidx.work.impl.WorkerWrapper: java.lang.String mWorkSpecId>
<androidx.work.impl.WorkerWrapper: java.util.List mSchedulers>
<androidx.work.impl.WorkerWrapper: androidx.work.WorkerParameters$RuntimeExtras mRuntimeExtras>
<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpec mWorkSpec>
<androidx.work.impl.WorkerWrapper: androidx.work.ListenableWorker mWorker>
<androidx.work.impl.WorkerWrapper: androidx.work.impl.utils.taskexecutor.TaskExecutor mWorkTaskExecutor>
<androidx.work.impl.WorkerWrapper: androidx.work.ListenableWorker$Result mResult>
<androidx.work.impl.WorkerWrapper: androidx.work.Configuration mConfiguration>
<androidx.work.impl.WorkerWrapper: androidx.work.impl.foreground.ForegroundProcessor mForegroundProcessor>
<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>
<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpecDao mWorkSpecDao>
<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.DependencyDao mDependencyDao>
<androidx.work.impl.WorkerWrapper: java.util.List mTags>
<androidx.work.impl.WorkerWrapper: java.lang.String mWorkDescription>
<androidx.work.impl.WorkerWrapper: androidx.work.impl.utils.futures.SettableFuture mFuture>
<androidx.work.impl.WorkerWrapper: androidx.work.impl.utils.futures.SettableFuture mWorkerResultFuture>
<androidx.work.impl.WorkerWrapper: boolean mInterrupted>
    void <init>(androidx.work.impl.WorkerWrapper$Builder)
    {
        androidx.work.impl.WorkerWrapper r0;
        androidx.work.impl.WorkerWrapper$Builder r1;
        androidx.work.ListenableWorker$Result $r2;
        androidx.work.impl.utils.futures.SettableFuture $r3, $r4;
        android.content.Context $r5;
        androidx.work.impl.utils.taskexecutor.TaskExecutor $r6;
        androidx.work.impl.foreground.ForegroundProcessor $r7;
        androidx.work.impl.model.WorkSpec $r8, $r9;
        java.lang.String $r10;
        java.util.List $r11, $r20;
        androidx.work.WorkerParameters$RuntimeExtras $r12;
        androidx.work.ListenableWorker $r13;
        androidx.work.Configuration $r14;
        androidx.work.impl.WorkDatabase $r15, $r16, $r18;
        androidx.work.impl.model.WorkSpecDao $r17;
        androidx.work.impl.model.DependencyDao $r19;

        r0 := @this: androidx.work.impl.WorkerWrapper;

        r1 := @parameter0: androidx.work.impl.WorkerWrapper$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <androidx.work.ListenableWorker$Result: androidx.work.ListenableWorker$Result failure()>();

        r0.<androidx.work.impl.WorkerWrapper: androidx.work.ListenableWorker$Result mResult> = $r2;

        $r3 = staticinvoke <androidx.work.impl.utils.futures.SettableFuture: androidx.work.impl.utils.futures.SettableFuture create()>();

        r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.utils.futures.SettableFuture mFuture> = $r3;

        $r4 = staticinvoke <androidx.work.impl.utils.futures.SettableFuture: androidx.work.impl.utils.futures.SettableFuture create()>();

        r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.utils.futures.SettableFuture mWorkerResultFuture> = $r4;

        $r5 = r1.<androidx.work.impl.WorkerWrapper$Builder: android.content.Context mAppContext>;

        r0.<androidx.work.impl.WorkerWrapper: android.content.Context mAppContext> = $r5;

        $r6 = r1.<androidx.work.impl.WorkerWrapper$Builder: androidx.work.impl.utils.taskexecutor.TaskExecutor mWorkTaskExecutor>;

        r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.utils.taskexecutor.TaskExecutor mWorkTaskExecutor> = $r6;

        $r7 = r1.<androidx.work.impl.WorkerWrapper$Builder: androidx.work.impl.foreground.ForegroundProcessor mForegroundProcessor>;

        r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.foreground.ForegroundProcessor mForegroundProcessor> = $r7;

        $r8 = r1.<androidx.work.impl.WorkerWrapper$Builder: androidx.work.impl.model.WorkSpec mWorkSpec>;

        r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpec mWorkSpec> = $r8;

        $r9 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $r10 = $r9.<androidx.work.impl.model.WorkSpec: java.lang.String id>;

        r0.<androidx.work.impl.WorkerWrapper: java.lang.String mWorkSpecId> = $r10;

        $r11 = r1.<androidx.work.impl.WorkerWrapper$Builder: java.util.List mSchedulers>;

        r0.<androidx.work.impl.WorkerWrapper: java.util.List mSchedulers> = $r11;

        $r12 = r1.<androidx.work.impl.WorkerWrapper$Builder: androidx.work.WorkerParameters$RuntimeExtras mRuntimeExtras>;

        r0.<androidx.work.impl.WorkerWrapper: androidx.work.WorkerParameters$RuntimeExtras mRuntimeExtras> = $r12;

        $r13 = r1.<androidx.work.impl.WorkerWrapper$Builder: androidx.work.ListenableWorker mWorker>;

        r0.<androidx.work.impl.WorkerWrapper: androidx.work.ListenableWorker mWorker> = $r13;

        $r14 = r1.<androidx.work.impl.WorkerWrapper$Builder: androidx.work.Configuration mConfiguration>;

        r0.<androidx.work.impl.WorkerWrapper: androidx.work.Configuration mConfiguration> = $r14;

        $r15 = r1.<androidx.work.impl.WorkerWrapper$Builder: androidx.work.impl.WorkDatabase mWorkDatabase>;

        r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase> = $r15;

        $r16 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        $r17 = virtualinvoke $r16.<androidx.work.impl.WorkDatabase: androidx.work.impl.model.WorkSpecDao workSpecDao()>();

        r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpecDao mWorkSpecDao> = $r17;

        $r18 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        $r19 = virtualinvoke $r18.<androidx.work.impl.WorkDatabase: androidx.work.impl.model.DependencyDao dependencyDao()>();

        r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.DependencyDao mDependencyDao> = $r19;

        $r20 = staticinvoke <androidx.work.impl.WorkerWrapper$Builder: java.util.List access$000(androidx.work.impl.WorkerWrapper$Builder)>(r1);

        r0.<androidx.work.impl.WorkerWrapper: java.util.List mTags> = $r20;

        return;
    }

    public androidx.work.impl.model.WorkGenerationalId getWorkGenerationalId()
    {
        androidx.work.impl.WorkerWrapper r0;
        androidx.work.impl.model.WorkSpec $r1;
        androidx.work.impl.model.WorkGenerationalId $r2;

        r0 := @this: androidx.work.impl.WorkerWrapper;

        $r1 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $r2 = staticinvoke <androidx.work.impl.model.WorkSpecKt: androidx.work.impl.model.WorkGenerationalId generationalId(androidx.work.impl.model.WorkSpec)>($r1);

        return $r2;
    }

    public com.google.common.util.concurrent.ListenableFuture getFuture()
    {
        androidx.work.impl.WorkerWrapper r0;
        androidx.work.impl.utils.futures.SettableFuture $r1;

        r0 := @this: androidx.work.impl.WorkerWrapper;

        $r1 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.utils.futures.SettableFuture mFuture>;

        return $r1;
    }

    public void run()
    {
        androidx.work.impl.WorkerWrapper r0;
        java.util.List $r1;
        java.lang.String $r2;

        r0 := @this: androidx.work.impl.WorkerWrapper;

        $r1 = r0.<androidx.work.impl.WorkerWrapper: java.util.List mTags>;

        $r2 = specialinvoke r0.<androidx.work.impl.WorkerWrapper: java.lang.String createWorkDescription(java.util.List)>($r1);

        r0.<androidx.work.impl.WorkerWrapper: java.lang.String mWorkDescription> = $r2;

        specialinvoke r0.<androidx.work.impl.WorkerWrapper: void runWorker()>();

        return;
    }

    public androidx.work.impl.model.WorkSpec getWorkSpec()
    {
        androidx.work.impl.WorkerWrapper r0;
        androidx.work.impl.model.WorkSpec $r1;

        r0 := @this: androidx.work.impl.WorkerWrapper;

        $r1 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpec mWorkSpec>;

        return $r1;
    }

    private void runWorker()
    {
        androidx.work.impl.WorkerWrapper r0;
        boolean $z0, $z1, $z2, $z5, $z6, $z7, $z8;
        androidx.work.impl.WorkDatabase $r1, $r7, $r8, $r32, $r36, $r97, $r98, $r100, $r109, $r111;
        androidx.work.impl.model.WorkSpec $r2, $r5, $r6, $r9, $r11, $r13, $r21, $r22, $r43, $r63, $r72, $r78, $r86, $r90, $r93, $r99, $r104;
        androidx.work.WorkInfo$State $r3, $r4;
        long $l0, l4;
        byte $b1;
        androidx.work.Configuration $r10, $r25, $r27, $r76;
        java.util.ArrayList $r12, r117;
        androidx.work.Data $r14, r113;
        java.lang.String $r15, $r19, $r61, $r64, $r67, $r70, $r73, $r75, $r79, $r84, $r87, $r89, $r94, $r95, $r96, $r103, $r105, $r108, r115, r121;
        androidx.work.impl.model.WorkSpecDao $r16;
        java.util.List $r17, $r23;
        androidx.work.WorkerParameters $r18, r118;
        java.util.UUID $r20;
        androidx.work.WorkerParameters$RuntimeExtras $r24;
        int $i2, $i3;
        java.util.concurrent.Executor $r26, $r48, $r54;
        androidx.work.impl.utils.taskexecutor.TaskExecutor $r28, $r31, $r34, $r46, $r47, $r53, $r57;
        androidx.work.WorkerFactory $r29, $r77;
        androidx.work.impl.utils.WorkProgressUpdater $r30;
        androidx.work.impl.utils.WorkForegroundUpdater $r33;
        androidx.work.impl.foreground.ForegroundProcessor $r35;
        androidx.work.ListenableWorker $r37, $r38, $r39, $r40, $r44, $r81;
        androidx.work.impl.utils.WorkForegroundRunnable $r41, r119;
        android.content.Context $r42, $r80;
        androidx.work.ForegroundUpdater $r45;
        androidx.work.impl.utils.futures.SettableFuture $r49, $r56;
        java.lang.Runnable $r50;
        androidx.work.impl.utils.SynchronousExecutor $r51;
        androidx.work.impl.WorkerWrapper$1 $r52;
        androidx.work.impl.WorkerWrapper$2 $r55;
        androidx.work.impl.utils.taskexecutor.SerialExecutor $r58;
        androidx.work.Logger $r59, $r68, $r82, $r91, $r101;
        java.lang.StringBuilder $r60, $r62, $r65, $r66, $r69, $r71, $r74, $r83, $r85, $r88, $r102, $r106, $r107;
        java.lang.Object[] $r92;
        java.lang.Throwable $r110, r112;
        androidx.work.InputMergerFactory r114;
        androidx.work.InputMerger r116;
        com.google.common.util.concurrent.ListenableFuture r120;

        r0 := @this: androidx.work.impl.WorkerWrapper;

        $z0 = specialinvoke r0.<androidx.work.impl.WorkerWrapper: boolean tryCheckForInterruptionAndResolve()>();

        if $z0 == 0 goto label01;

        return;

     label01:
        $r1 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        virtualinvoke $r1.<androidx.work.impl.WorkDatabase: void beginTransaction()>();

     label02:
        $r2 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $r4 = $r2.<androidx.work.impl.model.WorkSpec: androidx.work.WorkInfo$State state>;

        $r3 = <androidx.work.WorkInfo$State: androidx.work.WorkInfo$State ENQUEUED>;

        if $r4 == $r3 goto label04;

        specialinvoke r0.<androidx.work.impl.WorkerWrapper: void resolveIncorrectStatus()>();

        $r100 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        virtualinvoke $r100.<androidx.work.impl.WorkDatabase: void setTransactionSuccessful()>();

        $r101 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r103 = <androidx.work.impl.WorkerWrapper: java.lang.String TAG>;

        $r102 = new java.lang.StringBuilder;

        specialinvoke $r102.<java.lang.StringBuilder: void <init>()>();

        $r104 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $r105 = $r104.<androidx.work.impl.model.WorkSpec: java.lang.String workerClassName>;

        $r106 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r105);

        $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not in ENQUEUED state. Nothing more to do");

        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r101.<androidx.work.Logger: void debug(java.lang.String,java.lang.String)>($r103, $r108);

     label03:
        $r109 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        virtualinvoke $r109.<androidx.work.impl.WorkDatabase: void endTransaction()>();

        return;

     label04:
        $r5 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $z1 = virtualinvoke $r5.<androidx.work.impl.model.WorkSpec: boolean isPeriodic()>();

        if $z1 != 0 goto label05;

        $r99 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $z8 = virtualinvoke $r99.<androidx.work.impl.model.WorkSpec: boolean isBackedOff()>();

        if $z8 == 0 goto label07;

     label05:
        l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r6 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $l0 = virtualinvoke $r6.<androidx.work.impl.model.WorkSpec: long calculateNextRunTime()>();

        $b1 = l4 cmp $l0;

        if $b1 >= 0 goto label07;

        $r91 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r95 = <androidx.work.impl.WorkerWrapper: java.lang.String TAG>;

        $r92 = newarray (java.lang.Object)[1];

        $r93 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $r94 = $r93.<androidx.work.impl.model.WorkSpec: java.lang.String workerClassName>;

        $r92[0] = $r94;

        $r96 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Delaying execution for %s because it is being executed before schedule.", $r92);

        virtualinvoke $r91.<androidx.work.Logger: void debug(java.lang.String,java.lang.String)>($r95, $r96);

        specialinvoke r0.<androidx.work.impl.WorkerWrapper: void resolve(boolean)>(1);

        $r97 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        virtualinvoke $r97.<androidx.work.impl.WorkDatabase: void setTransactionSuccessful()>();

     label06:
        $r98 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        virtualinvoke $r98.<androidx.work.impl.WorkDatabase: void endTransaction()>();

        return;

     label07:
        $r7 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        virtualinvoke $r7.<androidx.work.impl.WorkDatabase: void setTransactionSuccessful()>();

     label08:
        $r8 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        virtualinvoke $r8.<androidx.work.impl.WorkDatabase: void endTransaction()>();

        goto label10;

     label09:
        $r110 := @caughtexception;

        r112 = $r110;

        $r111 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        virtualinvoke $r111.<androidx.work.impl.WorkDatabase: void endTransaction()>();

        throw r112;

     label10:
        $r9 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $z2 = virtualinvoke $r9.<androidx.work.impl.model.WorkSpec: boolean isPeriodic()>();

        if $z2 == 0 goto label11;

        $r90 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpec mWorkSpec>;

        r113 = $r90.<androidx.work.impl.model.WorkSpec: androidx.work.Data input>;

        goto label13;

     label11:
        $r10 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.Configuration mConfiguration>;

        r114 = virtualinvoke $r10.<androidx.work.Configuration: androidx.work.InputMergerFactory getInputMergerFactory()>();

        $r11 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpec mWorkSpec>;

        r115 = $r11.<androidx.work.impl.model.WorkSpec: java.lang.String inputMergerClassName>;

        r116 = virtualinvoke r114.<androidx.work.InputMergerFactory: androidx.work.InputMerger createInputMergerWithDefaultFallback(java.lang.String)>(r115);

        if r116 != null goto label12;

        $r82 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r84 = <androidx.work.impl.WorkerWrapper: java.lang.String TAG>;

        $r83 = new java.lang.StringBuilder;

        specialinvoke $r83.<java.lang.StringBuilder: void <init>()>();

        $r85 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not create Input Merger ");

        $r86 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $r87 = $r86.<androidx.work.impl.model.WorkSpec: java.lang.String inputMergerClassName>;

        $r88 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r87);

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r82.<androidx.work.Logger: void error(java.lang.String,java.lang.String)>($r84, $r89);

        virtualinvoke r0.<androidx.work.impl.WorkerWrapper: void setFailedAndResolve()>();

        return;

     label12:
        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r117 = $r12;

        $r13 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $r14 = $r13.<androidx.work.impl.model.WorkSpec: androidx.work.Data input>;

        interfaceinvoke r117.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r16 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpecDao mWorkSpecDao>;

        $r15 = r0.<androidx.work.impl.WorkerWrapper: java.lang.String mWorkSpecId>;

        $r17 = interfaceinvoke $r16.<androidx.work.impl.model.WorkSpecDao: java.util.List getInputsFromPrerequisites(java.lang.String)>($r15);

        interfaceinvoke r117.<java.util.List: boolean addAll(java.util.Collection)>($r17);

        r113 = virtualinvoke r116.<androidx.work.InputMerger: androidx.work.Data merge(java.util.List)>(r117);

     label13:
        $r18 = new androidx.work.WorkerParameters;

        $r19 = r0.<androidx.work.impl.WorkerWrapper: java.lang.String mWorkSpecId>;

        $r20 = staticinvoke <java.util.UUID: java.util.UUID fromString(java.lang.String)>($r19);

        $r23 = r0.<androidx.work.impl.WorkerWrapper: java.util.List mTags>;

        $r24 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.WorkerParameters$RuntimeExtras mRuntimeExtras>;

        $r21 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $i2 = $r21.<androidx.work.impl.model.WorkSpec: int runAttemptCount>;

        $r22 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $i3 = virtualinvoke $r22.<androidx.work.impl.model.WorkSpec: int getGeneration()>();

        $r25 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.Configuration mConfiguration>;

        $r26 = virtualinvoke $r25.<androidx.work.Configuration: java.util.concurrent.Executor getExecutor()>();

        $r28 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.utils.taskexecutor.TaskExecutor mWorkTaskExecutor>;

        $r27 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.Configuration mConfiguration>;

        $r29 = virtualinvoke $r27.<androidx.work.Configuration: androidx.work.WorkerFactory getWorkerFactory()>();

        $r30 = new androidx.work.impl.utils.WorkProgressUpdater;

        $r32 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        $r31 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.utils.taskexecutor.TaskExecutor mWorkTaskExecutor>;

        specialinvoke $r30.<androidx.work.impl.utils.WorkProgressUpdater: void <init>(androidx.work.impl.WorkDatabase,androidx.work.impl.utils.taskexecutor.TaskExecutor)>($r32, $r31);

        $r33 = new androidx.work.impl.utils.WorkForegroundUpdater;

        $r36 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        $r35 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.foreground.ForegroundProcessor mForegroundProcessor>;

        $r34 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.utils.taskexecutor.TaskExecutor mWorkTaskExecutor>;

        specialinvoke $r33.<androidx.work.impl.utils.WorkForegroundUpdater: void <init>(androidx.work.impl.WorkDatabase,androidx.work.impl.foreground.ForegroundProcessor,androidx.work.impl.utils.taskexecutor.TaskExecutor)>($r36, $r35, $r34);

        specialinvoke $r18.<androidx.work.WorkerParameters: void <init>(java.util.UUID,androidx.work.Data,java.util.Collection,androidx.work.WorkerParameters$RuntimeExtras,int,int,java.util.concurrent.Executor,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.WorkerFactory,androidx.work.ProgressUpdater,androidx.work.ForegroundUpdater)>($r20, r113, $r23, $r24, $i2, $i3, $r26, $r28, $r29, $r30, $r33);

        r118 = $r18;

        $r37 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.ListenableWorker mWorker>;

        if $r37 != null goto label14;

        $r76 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.Configuration mConfiguration>;

        $r77 = virtualinvoke $r76.<androidx.work.Configuration: androidx.work.WorkerFactory getWorkerFactory()>();

        $r80 = r0.<androidx.work.impl.WorkerWrapper: android.content.Context mAppContext>;

        $r78 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $r79 = $r78.<androidx.work.impl.model.WorkSpec: java.lang.String workerClassName>;

        $r81 = virtualinvoke $r77.<androidx.work.WorkerFactory: androidx.work.ListenableWorker createWorkerWithDefaultFallback(android.content.Context,java.lang.String,androidx.work.WorkerParameters)>($r80, $r79, r118);

        r0.<androidx.work.impl.WorkerWrapper: androidx.work.ListenableWorker mWorker> = $r81;

     label14:
        $r38 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.ListenableWorker mWorker>;

        if $r38 != null goto label15;

        $r68 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r70 = <androidx.work.impl.WorkerWrapper: java.lang.String TAG>;

        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not create Worker ");

        $r72 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $r73 = $r72.<androidx.work.impl.model.WorkSpec: java.lang.String workerClassName>;

        $r74 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73);

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r68.<androidx.work.Logger: void error(java.lang.String,java.lang.String)>($r70, $r75);

        virtualinvoke r0.<androidx.work.impl.WorkerWrapper: void setFailedAndResolve()>();

        return;

     label15:
        $r39 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.ListenableWorker mWorker>;

        $z5 = virtualinvoke $r39.<androidx.work.ListenableWorker: boolean isUsed()>();

        if $z5 == 0 goto label16;

        $r59 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r61 = <androidx.work.impl.WorkerWrapper: java.lang.String TAG>;

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received an already-used Worker ");

        $r63 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $r64 = $r63.<androidx.work.impl.model.WorkSpec: java.lang.String workerClassName>;

        $r65 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r64);

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; Worker Factory should return new instances");

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r59.<androidx.work.Logger: void error(java.lang.String,java.lang.String)>($r61, $r67);

        virtualinvoke r0.<androidx.work.impl.WorkerWrapper: void setFailedAndResolve()>();

        return;

     label16:
        $r40 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.ListenableWorker mWorker>;

        virtualinvoke $r40.<androidx.work.ListenableWorker: void setUsed()>();

        $z6 = specialinvoke r0.<androidx.work.impl.WorkerWrapper: boolean trySetRunning()>();

        if $z6 == 0 goto label18;

        $z7 = specialinvoke r0.<androidx.work.impl.WorkerWrapper: boolean tryCheckForInterruptionAndResolve()>();

        if $z7 == 0 goto label17;

        return;

     label17:
        $r41 = new androidx.work.impl.utils.WorkForegroundRunnable;

        $r42 = r0.<androidx.work.impl.WorkerWrapper: android.content.Context mAppContext>;

        $r43 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $r44 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.ListenableWorker mWorker>;

        $r45 = virtualinvoke r118.<androidx.work.WorkerParameters: androidx.work.ForegroundUpdater getForegroundUpdater()>();

        $r46 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.utils.taskexecutor.TaskExecutor mWorkTaskExecutor>;

        specialinvoke $r41.<androidx.work.impl.utils.WorkForegroundRunnable: void <init>(android.content.Context,androidx.work.impl.model.WorkSpec,androidx.work.ListenableWorker,androidx.work.ForegroundUpdater,androidx.work.impl.utils.taskexecutor.TaskExecutor)>($r42, $r43, $r44, $r45, $r46);

        r119 = $r41;

        $r47 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.utils.taskexecutor.TaskExecutor mWorkTaskExecutor>;

        $r48 = interfaceinvoke $r47.<androidx.work.impl.utils.taskexecutor.TaskExecutor: java.util.concurrent.Executor getMainThreadExecutor()>();

        interfaceinvoke $r48.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r119);

        r120 = virtualinvoke r119.<androidx.work.impl.utils.WorkForegroundRunnable: com.google.common.util.concurrent.ListenableFuture getFuture()>();

        $r49 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.utils.futures.SettableFuture mWorkerResultFuture>;

        $r50 = dynamicinvoke "run" <java.lang.Runnable (androidx.work.impl.WorkerWrapper,com.google.common.util.concurrent.ListenableFuture)>(r0, r120) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.work.impl.WorkerWrapper: void lambda$runWorker$0(com.google.common.util.concurrent.ListenableFuture)>, methodtype: void __METHODTYPE__());

        $r51 = new androidx.work.impl.utils.SynchronousExecutor;

        specialinvoke $r51.<androidx.work.impl.utils.SynchronousExecutor: void <init>()>();

        virtualinvoke $r49.<androidx.work.impl.utils.futures.SettableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r50, $r51);

        $r52 = new androidx.work.impl.WorkerWrapper$1;

        specialinvoke $r52.<androidx.work.impl.WorkerWrapper$1: void <init>(androidx.work.impl.WorkerWrapper,com.google.common.util.concurrent.ListenableFuture)>(r0, r120);

        $r53 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.utils.taskexecutor.TaskExecutor mWorkTaskExecutor>;

        $r54 = interfaceinvoke $r53.<androidx.work.impl.utils.taskexecutor.TaskExecutor: java.util.concurrent.Executor getMainThreadExecutor()>();

        interfaceinvoke r120.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r52, $r54);

        r121 = r0.<androidx.work.impl.WorkerWrapper: java.lang.String mWorkDescription>;

        $r56 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.utils.futures.SettableFuture mWorkerResultFuture>;

        $r55 = new androidx.work.impl.WorkerWrapper$2;

        specialinvoke $r55.<androidx.work.impl.WorkerWrapper$2: void <init>(androidx.work.impl.WorkerWrapper,java.lang.String)>(r0, r121);

        $r57 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.utils.taskexecutor.TaskExecutor mWorkTaskExecutor>;

        $r58 = interfaceinvoke $r57.<androidx.work.impl.utils.taskexecutor.TaskExecutor: androidx.work.impl.utils.taskexecutor.SerialExecutor getSerialTaskExecutor()>();

        virtualinvoke $r56.<androidx.work.impl.utils.futures.SettableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r55, $r58);

        goto label19;

     label18:
        specialinvoke r0.<androidx.work.impl.WorkerWrapper: void resolveIncorrectStatus()>();

     label19:
        return;

        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    void onWorkFinished()
    {
        androidx.work.impl.WorkerWrapper r0;
        boolean $z0, $z1, $z2;
        java.util.List $r1, $r2, $r3;
        androidx.work.impl.WorkDatabase $r4, $r8, $r11, $r17, $r19, $r20;
        androidx.work.Configuration $r5;
        java.lang.Object $r6;
        java.lang.String $r7, $r9, $r13;
        androidx.work.impl.model.WorkSpecDao $r10;
        androidx.work.impl.model.WorkProgressDao $r12;
        androidx.work.WorkInfo$State $r14, r18;
        androidx.work.ListenableWorker$Result $r15;
        java.lang.Throwable $r16, r21;
        java.util.Iterator r22;
        androidx.work.impl.Scheduler r23;

        r0 := @this: androidx.work.impl.WorkerWrapper;

        $z0 = specialinvoke r0.<androidx.work.impl.WorkerWrapper: boolean tryCheckForInterruptionAndResolve()>();

        if $z0 != 0 goto label07;

        $r8 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        virtualinvoke $r8.<androidx.work.impl.WorkDatabase: void beginTransaction()>();

     label01:
        $r10 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpecDao mWorkSpecDao>;

        $r9 = r0.<androidx.work.impl.WorkerWrapper: java.lang.String mWorkSpecId>;

        r18 = interfaceinvoke $r10.<androidx.work.impl.model.WorkSpecDao: androidx.work.WorkInfo$State getState(java.lang.String)>($r9);

        $r11 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        $r12 = virtualinvoke $r11.<androidx.work.impl.WorkDatabase: androidx.work.impl.model.WorkProgressDao workProgressDao()>();

        $r13 = r0.<androidx.work.impl.WorkerWrapper: java.lang.String mWorkSpecId>;

        interfaceinvoke $r12.<androidx.work.impl.model.WorkProgressDao: void delete(java.lang.String)>($r13);

        if r18 != null goto label02;

        specialinvoke r0.<androidx.work.impl.WorkerWrapper: void resolve(boolean)>(0);

        goto label04;

     label02:
        $r14 = <androidx.work.WorkInfo$State: androidx.work.WorkInfo$State RUNNING>;

        if r18 != $r14 goto label03;

        $r15 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.ListenableWorker$Result mResult>;

        specialinvoke r0.<androidx.work.impl.WorkerWrapper: void handleResult(androidx.work.ListenableWorker$Result)>($r15);

        goto label04;

     label03:
        $z2 = virtualinvoke r18.<androidx.work.WorkInfo$State: boolean isFinished()>();

        if $z2 != 0 goto label04;

        specialinvoke r0.<androidx.work.impl.WorkerWrapper: void rescheduleAndResolve()>();

     label04:
        $r19 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        virtualinvoke $r19.<androidx.work.impl.WorkDatabase: void setTransactionSuccessful()>();

     label05:
        $r20 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        virtualinvoke $r20.<androidx.work.impl.WorkDatabase: void endTransaction()>();

        goto label07;

     label06:
        $r16 := @caughtexception;

        r21 = $r16;

        $r17 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        virtualinvoke $r17.<androidx.work.impl.WorkDatabase: void endTransaction()>();

        throw r21;

     label07:
        $r1 = r0.<androidx.work.impl.WorkerWrapper: java.util.List mSchedulers>;

        if $r1 == null goto label10;

        $r2 = r0.<androidx.work.impl.WorkerWrapper: java.util.List mSchedulers>;

        r22 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z1 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r6 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();

        r23 = (androidx.work.impl.Scheduler) $r6;

        $r7 = r0.<androidx.work.impl.WorkerWrapper: java.lang.String mWorkSpecId>;

        interfaceinvoke r23.<androidx.work.impl.Scheduler: void cancel(java.lang.String)>($r7);

        goto label08;

     label09:
        $r5 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.Configuration mConfiguration>;

        $r4 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        $r3 = r0.<androidx.work.impl.WorkerWrapper: java.util.List mSchedulers>;

        staticinvoke <androidx.work.impl.Schedulers: void schedule(androidx.work.Configuration,androidx.work.impl.WorkDatabase,java.util.List)>($r5, $r4, $r3);

     label10:
        return;

        catch java.lang.Throwable from label01 to label05 with label06;
    }

    public void interrupt()
    {
        androidx.work.impl.WorkerWrapper r0;
        java.lang.String r1, $r10;
        androidx.work.impl.utils.futures.SettableFuture $r2, $r11;
        androidx.work.ListenableWorker $r3, $r12;
        java.lang.StringBuilder $r4, $r5, $r7, $r8;
        androidx.work.impl.model.WorkSpec $r6;
        androidx.work.Logger $r9;
        boolean $z2;

        r0 := @this: androidx.work.impl.WorkerWrapper;

        r0.<androidx.work.impl.WorkerWrapper: boolean mInterrupted> = 1;

        specialinvoke r0.<androidx.work.impl.WorkerWrapper: boolean tryCheckForInterruptionAndResolve()>();

        $r2 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.utils.futures.SettableFuture mWorkerResultFuture>;

        virtualinvoke $r2.<androidx.work.impl.utils.futures.SettableFuture: boolean cancel(boolean)>(1);

        $r3 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.ListenableWorker mWorker>;

        if $r3 == null goto label1;

        $r11 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.utils.futures.SettableFuture mWorkerResultFuture>;

        $z2 = virtualinvoke $r11.<androidx.work.impl.utils.futures.SettableFuture: boolean isCancelled()>();

        if $z2 == 0 goto label1;

        $r12 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.ListenableWorker mWorker>;

        virtualinvoke $r12.<androidx.work.ListenableWorker: void stop()>();

        goto label2;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WorkSpec ");

        $r6 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already done. Not interrupting.");

        r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r10 = <androidx.work.impl.WorkerWrapper: java.lang.String TAG>;

        virtualinvoke $r9.<androidx.work.Logger: void debug(java.lang.String,java.lang.String)>($r10, r1);

     label2:
        return;
    }

    private void resolveIncorrectStatus()
    {
        androidx.work.impl.WorkerWrapper r0;
        androidx.work.WorkInfo$State r1, $r4;
        java.lang.String $r2, $r7, $r9, $r14, $r17, $r19, $r22;
        androidx.work.impl.model.WorkSpecDao $r3;
        androidx.work.Logger $r5, $r15;
        java.lang.StringBuilder $r6, $r8, $r10, $r11, $r12, $r13, $r16, $r18, $r20, $r21;

        r0 := @this: androidx.work.impl.WorkerWrapper;

        $r3 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpecDao mWorkSpecDao>;

        $r2 = r0.<androidx.work.impl.WorkerWrapper: java.lang.String mWorkSpecId>;

        r1 = interfaceinvoke $r3.<androidx.work.impl.model.WorkSpecDao: androidx.work.WorkInfo$State getState(java.lang.String)>($r2);

        $r4 = <androidx.work.WorkInfo$State: androidx.work.WorkInfo$State RUNNING>;

        if r1 != $r4 goto label1;

        $r15 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r17 = <androidx.work.impl.WorkerWrapper: java.lang.String TAG>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Status for ");

        $r19 = r0.<androidx.work.impl.WorkerWrapper: java.lang.String mWorkSpecId>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is RUNNING; not doing any work and rescheduling for later execution");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<androidx.work.Logger: void debug(java.lang.String,java.lang.String)>($r17, $r22);

        specialinvoke r0.<androidx.work.impl.WorkerWrapper: void resolve(boolean)>(1);

        goto label2;

     label1:
        $r5 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r7 = <androidx.work.impl.WorkerWrapper: java.lang.String TAG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Status for ");

        $r9 = r0.<androidx.work.impl.WorkerWrapper: java.lang.String mWorkSpecId>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ; not doing any work");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<androidx.work.Logger: void debug(java.lang.String,java.lang.String)>($r7, $r14);

        specialinvoke r0.<androidx.work.impl.WorkerWrapper: void resolve(boolean)>(0);

     label2:
        return;
    }

    private boolean tryCheckForInterruptionAndResolve()
    {
        androidx.work.impl.WorkerWrapper r0;
        androidx.work.WorkInfo$State r1;
        boolean $z0, $z1, $z2;
        androidx.work.Logger $r2;
        java.lang.StringBuilder $r3, $r5, $r7;
        java.lang.String $r4, $r6, $r8, $r9;
        androidx.work.impl.model.WorkSpecDao $r10;

        r0 := @this: androidx.work.impl.WorkerWrapper;

        $z0 = r0.<androidx.work.impl.WorkerWrapper: boolean mInterrupted>;

        if $z0 == 0 goto label5;

        $r2 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r4 = <androidx.work.impl.WorkerWrapper: java.lang.String TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Work interrupted for ");

        $r6 = r0.<androidx.work.impl.WorkerWrapper: java.lang.String mWorkDescription>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<androidx.work.Logger: void debug(java.lang.String,java.lang.String)>($r4, $r8);

        $r10 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpecDao mWorkSpecDao>;

        $r9 = r0.<androidx.work.impl.WorkerWrapper: java.lang.String mWorkSpecId>;

        r1 = interfaceinvoke $r10.<androidx.work.impl.model.WorkSpecDao: androidx.work.WorkInfo$State getState(java.lang.String)>($r9);

        if r1 != null goto label1;

        specialinvoke r0.<androidx.work.impl.WorkerWrapper: void resolve(boolean)>(0);

        goto label4;

     label1:
        $z1 = virtualinvoke r1.<androidx.work.WorkInfo$State: boolean isFinished()>();

        if $z1 != 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        specialinvoke r0.<androidx.work.impl.WorkerWrapper: void resolve(boolean)>($z2);

     label4:
        return 1;

     label5:
        return 0;
    }

    private void resolve(boolean)
    {
        androidx.work.impl.WorkerWrapper r0;
        boolean z0, z1, z2;
        java.lang.Throwable r1, $r19;
        androidx.work.impl.WorkDatabase $r2, $r3, $r20, $r21, $r22;
        androidx.work.impl.model.WorkSpecDao $r4, $r15, $r17;
        androidx.work.impl.model.WorkSpec $r5;
        androidx.work.impl.utils.futures.SettableFuture $r6;
        java.lang.Boolean $r7;
        androidx.work.ListenableWorker $r8;
        java.lang.String $r9, $r11, $r13, $r16;
        androidx.work.impl.foreground.ForegroundProcessor $r10, $r12;
        androidx.work.WorkInfo$State $r14;
        android.content.Context $r18;

        r0 := @this: androidx.work.impl.WorkerWrapper;

        z0 := @parameter0: boolean;

        $r2 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        virtualinvoke $r2.<androidx.work.impl.WorkDatabase: void beginTransaction()>();

     label1:
        $r3 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        $r4 = virtualinvoke $r3.<androidx.work.impl.WorkDatabase: androidx.work.impl.model.WorkSpecDao workSpecDao()>();

        z1 = interfaceinvoke $r4.<androidx.work.impl.model.WorkSpecDao: boolean hasUnfinishedWork()>();

        if z1 != 0 goto label2;

        $r18 = r0.<androidx.work.impl.WorkerWrapper: android.content.Context mAppContext>;

        staticinvoke <androidx.work.impl.utils.PackageManagerHelper: void setComponentEnabled(android.content.Context,java.lang.Class,boolean)>($r18, class "Landroidx/work/impl/background/systemalarm/RescheduleReceiver;", 0);

     label2:
        if z0 == 0 goto label3;

        $r15 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpecDao mWorkSpecDao>;

        $r14 = <androidx.work.WorkInfo$State: androidx.work.WorkInfo$State ENQUEUED>;

        $r13 = r0.<androidx.work.impl.WorkerWrapper: java.lang.String mWorkSpecId>;

        interfaceinvoke $r15.<androidx.work.impl.model.WorkSpecDao: int setState(androidx.work.WorkInfo$State,java.lang.String)>($r14, $r13);

        $r17 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpecDao mWorkSpecDao>;

        $r16 = r0.<androidx.work.impl.WorkerWrapper: java.lang.String mWorkSpecId>;

        interfaceinvoke $r17.<androidx.work.impl.model.WorkSpecDao: int markWorkSpecScheduled(java.lang.String,long)>($r16, -1L);

     label3:
        $r5 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpec mWorkSpec>;

        if $r5 == null goto label4;

        $r8 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.ListenableWorker mWorker>;

        if $r8 == null goto label4;

        $r10 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.foreground.ForegroundProcessor mForegroundProcessor>;

        $r9 = r0.<androidx.work.impl.WorkerWrapper: java.lang.String mWorkSpecId>;

        z2 = interfaceinvoke $r10.<androidx.work.impl.foreground.ForegroundProcessor: boolean isEnqueuedInForeground(java.lang.String)>($r9);

        if z2 == 0 goto label4;

        $r12 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.foreground.ForegroundProcessor mForegroundProcessor>;

        $r11 = r0.<androidx.work.impl.WorkerWrapper: java.lang.String mWorkSpecId>;

        interfaceinvoke $r12.<androidx.work.impl.foreground.ForegroundProcessor: void stopForeground(java.lang.String)>($r11);

     label4:
        $r21 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        virtualinvoke $r21.<androidx.work.impl.WorkDatabase: void setTransactionSuccessful()>();

     label5:
        $r22 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        virtualinvoke $r22.<androidx.work.impl.WorkDatabase: void endTransaction()>();

        goto label8;

     label6:
        $r19 := @caughtexception;

        r1 = $r19;

     label7:
        $r20 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        virtualinvoke $r20.<androidx.work.impl.WorkDatabase: void endTransaction()>();

        throw r1;

     label8:
        $r6 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.utils.futures.SettableFuture mFuture>;

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        virtualinvoke $r6.<androidx.work.impl.utils.futures.SettableFuture: boolean set(java.lang.Object)>($r7);

        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private void handleResult(androidx.work.ListenableWorker$Result)
    {
        androidx.work.impl.WorkerWrapper r0;
        androidx.work.ListenableWorker$Result r1;
        boolean $z0, $z1, $z2, $z3;
        androidx.work.Logger $r2, $r10, $r17;
        java.lang.StringBuilder $r3, $r5, $r7, $r11, $r13, $r15, $r18, $r20, $r22;
        java.lang.String $r4, $r6, $r8, $r12, $r14, $r16, $r19, $r21, $r23;
        androidx.work.impl.model.WorkSpec $r9, $r24;

        r0 := @this: androidx.work.impl.WorkerWrapper;

        r1 := @parameter0: androidx.work.ListenableWorker$Result;

        $z0 = r1 instanceof androidx.work.ListenableWorker$Result$Success;

        if $z0 == 0 goto label2;

        $r17 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r19 = <androidx.work.impl.WorkerWrapper: java.lang.String TAG>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Worker result SUCCESS for ");

        $r21 = r0.<androidx.work.impl.WorkerWrapper: java.lang.String mWorkDescription>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<androidx.work.Logger: void info(java.lang.String,java.lang.String)>($r19, $r23);

        $r24 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $z3 = virtualinvoke $r24.<androidx.work.impl.model.WorkSpec: boolean isPeriodic()>();

        if $z3 == 0 goto label1;

        specialinvoke r0.<androidx.work.impl.WorkerWrapper: void resetPeriodicAndResolve()>();

        goto label5;

     label1:
        specialinvoke r0.<androidx.work.impl.WorkerWrapper: void setSucceededAndResolve()>();

        goto label5;

     label2:
        $z1 = r1 instanceof androidx.work.ListenableWorker$Result$Retry;

        if $z1 == 0 goto label3;

        $r10 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r12 = <androidx.work.impl.WorkerWrapper: java.lang.String TAG>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Worker result RETRY for ");

        $r14 = r0.<androidx.work.impl.WorkerWrapper: java.lang.String mWorkDescription>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<androidx.work.Logger: void info(java.lang.String,java.lang.String)>($r12, $r16);

        specialinvoke r0.<androidx.work.impl.WorkerWrapper: void rescheduleAndResolve()>();

        goto label5;

     label3:
        $r2 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r4 = <androidx.work.impl.WorkerWrapper: java.lang.String TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Worker result FAILURE for ");

        $r6 = r0.<androidx.work.impl.WorkerWrapper: java.lang.String mWorkDescription>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<androidx.work.Logger: void info(java.lang.String,java.lang.String)>($r4, $r8);

        $r9 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $z2 = virtualinvoke $r9.<androidx.work.impl.model.WorkSpec: boolean isPeriodic()>();

        if $z2 == 0 goto label4;

        specialinvoke r0.<androidx.work.impl.WorkerWrapper: void resetPeriodicAndResolve()>();

        goto label5;

     label4:
        virtualinvoke r0.<androidx.work.impl.WorkerWrapper: void setFailedAndResolve()>();

     label5:
        return;
    }

    private boolean trySetRunning()
    {
        androidx.work.impl.WorkerWrapper r0;
        androidx.work.WorkInfo$State r1, $r6, $r10;
        java.lang.Throwable r2, $r14;
        androidx.work.impl.WorkDatabase $r3, $r7, $r8, $r15;
        java.lang.String $r4, $r9, $r12;
        androidx.work.impl.model.WorkSpecDao $r5, $r11, $r13;
        boolean z0;

        r0 := @this: androidx.work.impl.WorkerWrapper;

        z0 = 0;

        $r3 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        virtualinvoke $r3.<androidx.work.impl.WorkDatabase: void beginTransaction()>();

     label1:
        $r5 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpecDao mWorkSpecDao>;

        $r4 = r0.<androidx.work.impl.WorkerWrapper: java.lang.String mWorkSpecId>;

        r1 = interfaceinvoke $r5.<androidx.work.impl.model.WorkSpecDao: androidx.work.WorkInfo$State getState(java.lang.String)>($r4);

        $r6 = <androidx.work.WorkInfo$State: androidx.work.WorkInfo$State ENQUEUED>;

        if r1 != $r6 goto label2;

        $r11 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpecDao mWorkSpecDao>;

        $r10 = <androidx.work.WorkInfo$State: androidx.work.WorkInfo$State RUNNING>;

        $r9 = r0.<androidx.work.impl.WorkerWrapper: java.lang.String mWorkSpecId>;

        interfaceinvoke $r11.<androidx.work.impl.model.WorkSpecDao: int setState(androidx.work.WorkInfo$State,java.lang.String)>($r10, $r9);

        $r13 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpecDao mWorkSpecDao>;

        $r12 = r0.<androidx.work.impl.WorkerWrapper: java.lang.String mWorkSpecId>;

        interfaceinvoke $r13.<androidx.work.impl.model.WorkSpecDao: int incrementWorkSpecRunAttemptCount(java.lang.String)>($r12);

        z0 = 1;

     label2:
        $r7 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        virtualinvoke $r7.<androidx.work.impl.WorkDatabase: void setTransactionSuccessful()>();

     label3:
        $r8 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        virtualinvoke $r8.<androidx.work.impl.WorkDatabase: void endTransaction()>();

        goto label5;

     label4:
        $r14 := @caughtexception;

        r2 = $r14;

        $r15 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        virtualinvoke $r15.<androidx.work.impl.WorkDatabase: void endTransaction()>();

        throw r2;

     label5:
        return z0;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    void setFailedAndResolve()
    {
        androidx.work.impl.WorkerWrapper r0;
        androidx.work.ListenableWorker$Result$Failure r1;
        androidx.work.Data r2;
        java.lang.Throwable r3, $r11;
        androidx.work.impl.WorkDatabase $r4, $r9, $r10, $r12;
        java.lang.String $r5, $r7;
        androidx.work.ListenableWorker$Result $r6;
        androidx.work.impl.model.WorkSpecDao $r8;

        r0 := @this: androidx.work.impl.WorkerWrapper;

        $r4 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        virtualinvoke $r4.<androidx.work.impl.WorkDatabase: void beginTransaction()>();

     label1:
        $r5 = r0.<androidx.work.impl.WorkerWrapper: java.lang.String mWorkSpecId>;

        specialinvoke r0.<androidx.work.impl.WorkerWrapper: void iterativelyFailWorkAndDependents(java.lang.String)>($r5);

        $r6 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.ListenableWorker$Result mResult>;

        r1 = (androidx.work.ListenableWorker$Result$Failure) $r6;

        r2 = virtualinvoke r1.<androidx.work.ListenableWorker$Result$Failure: androidx.work.Data getOutputData()>();

        $r8 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpecDao mWorkSpecDao>;

        $r7 = r0.<androidx.work.impl.WorkerWrapper: java.lang.String mWorkSpecId>;

        interfaceinvoke $r8.<androidx.work.impl.model.WorkSpecDao: void setOutput(java.lang.String,androidx.work.Data)>($r7, r2);

        $r9 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        virtualinvoke $r9.<androidx.work.impl.WorkDatabase: void setTransactionSuccessful()>();

     label2:
        $r10 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        virtualinvoke $r10.<androidx.work.impl.WorkDatabase: void endTransaction()>();

        specialinvoke r0.<androidx.work.impl.WorkerWrapper: void resolve(boolean)>(0);

        goto label4;

     label3:
        $r11 := @caughtexception;

        r3 = $r11;

        $r12 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        virtualinvoke $r12.<androidx.work.impl.WorkDatabase: void endTransaction()>();

        specialinvoke r0.<androidx.work.impl.WorkerWrapper: void resolve(boolean)>(0);

        throw r3;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void iterativelyFailWorkAndDependents(java.lang.String)
    {
        androidx.work.impl.WorkerWrapper r0;
        java.lang.String r1, r3;
        java.util.LinkedList r2, $r4;
        boolean $z1;
        java.lang.Object $r5;
        androidx.work.impl.model.WorkSpecDao $r6, $r12;
        androidx.work.WorkInfo$State $r7, $r8, $r11;
        androidx.work.impl.model.DependencyDao $r9;
        java.util.List $r10;

        r0 := @this: androidx.work.impl.WorkerWrapper;

        r1 := @parameter0: java.lang.String;

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        r2 = $r4;

        virtualinvoke r2.<java.util.LinkedList: boolean add(java.lang.Object)>(r1);

     label1:
        $z1 = virtualinvoke r2.<java.util.LinkedList: boolean isEmpty()>();

        if $z1 != 0 goto label3;

        $r5 = virtualinvoke r2.<java.util.LinkedList: java.lang.Object remove()>();

        r3 = (java.lang.String) $r5;

        $r6 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpecDao mWorkSpecDao>;

        $r7 = interfaceinvoke $r6.<androidx.work.impl.model.WorkSpecDao: androidx.work.WorkInfo$State getState(java.lang.String)>(r3);

        $r8 = <androidx.work.WorkInfo$State: androidx.work.WorkInfo$State CANCELLED>;

        if $r7 == $r8 goto label2;

        $r12 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpecDao mWorkSpecDao>;

        $r11 = <androidx.work.WorkInfo$State: androidx.work.WorkInfo$State FAILED>;

        interfaceinvoke $r12.<androidx.work.impl.model.WorkSpecDao: int setState(androidx.work.WorkInfo$State,java.lang.String)>($r11, r3);

     label2:
        $r9 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.DependencyDao mDependencyDao>;

        $r10 = interfaceinvoke $r9.<androidx.work.impl.model.DependencyDao: java.util.List getDependentWorkIds(java.lang.String)>(r3);

        virtualinvoke r2.<java.util.LinkedList: boolean addAll(java.util.Collection)>($r10);

        goto label1;

     label3:
        return;
    }

    private void rescheduleAndResolve()
    {
        androidx.work.impl.WorkerWrapper r0;
        java.lang.Throwable r1, $r12;
        androidx.work.impl.WorkDatabase $r2, $r10, $r11, $r13;
        java.lang.String $r3, $r7, $r8;
        androidx.work.WorkInfo$State $r4;
        androidx.work.impl.model.WorkSpecDao $r5, $r6, $r9;
        long $l1;

        r0 := @this: androidx.work.impl.WorkerWrapper;

        $r2 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        virtualinvoke $r2.<androidx.work.impl.WorkDatabase: void beginTransaction()>();

     label1:
        $r5 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpecDao mWorkSpecDao>;

        $r4 = <androidx.work.WorkInfo$State: androidx.work.WorkInfo$State ENQUEUED>;

        $r3 = r0.<androidx.work.impl.WorkerWrapper: java.lang.String mWorkSpecId>;

        interfaceinvoke $r5.<androidx.work.impl.model.WorkSpecDao: int setState(androidx.work.WorkInfo$State,java.lang.String)>($r4, $r3);

        $r6 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpecDao mWorkSpecDao>;

        $r7 = r0.<androidx.work.impl.WorkerWrapper: java.lang.String mWorkSpecId>;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        interfaceinvoke $r6.<androidx.work.impl.model.WorkSpecDao: void setLastEnqueuedTime(java.lang.String,long)>($r7, $l1);

        $r9 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpecDao mWorkSpecDao>;

        $r8 = r0.<androidx.work.impl.WorkerWrapper: java.lang.String mWorkSpecId>;

        interfaceinvoke $r9.<androidx.work.impl.model.WorkSpecDao: int markWorkSpecScheduled(java.lang.String,long)>($r8, -1L);

        $r10 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        virtualinvoke $r10.<androidx.work.impl.WorkDatabase: void setTransactionSuccessful()>();

     label2:
        $r11 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        virtualinvoke $r11.<androidx.work.impl.WorkDatabase: void endTransaction()>();

        specialinvoke r0.<androidx.work.impl.WorkerWrapper: void resolve(boolean)>(1);

        goto label4;

     label3:
        $r12 := @caughtexception;

        r1 = $r12;

        $r13 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        virtualinvoke $r13.<androidx.work.impl.WorkDatabase: void endTransaction()>();

        specialinvoke r0.<androidx.work.impl.WorkerWrapper: void resolve(boolean)>(1);

        throw r1;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void resetPeriodicAndResolve()
    {
        androidx.work.impl.WorkerWrapper r0;
        java.lang.Throwable r1, $r16;
        androidx.work.impl.WorkDatabase $r2, $r14, $r15, $r17;
        androidx.work.impl.model.WorkSpecDao $r3, $r7, $r9, $r11, $r13;
        java.lang.String $r4, $r5, $r8, $r10, $r12;
        long $l0;
        androidx.work.WorkInfo$State $r6;

        r0 := @this: androidx.work.impl.WorkerWrapper;

        $r2 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        virtualinvoke $r2.<androidx.work.impl.WorkDatabase: void beginTransaction()>();

     label1:
        $r3 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpecDao mWorkSpecDao>;

        $r4 = r0.<androidx.work.impl.WorkerWrapper: java.lang.String mWorkSpecId>;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        interfaceinvoke $r3.<androidx.work.impl.model.WorkSpecDao: void setLastEnqueuedTime(java.lang.String,long)>($r4, $l0);

        $r7 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpecDao mWorkSpecDao>;

        $r6 = <androidx.work.WorkInfo$State: androidx.work.WorkInfo$State ENQUEUED>;

        $r5 = r0.<androidx.work.impl.WorkerWrapper: java.lang.String mWorkSpecId>;

        interfaceinvoke $r7.<androidx.work.impl.model.WorkSpecDao: int setState(androidx.work.WorkInfo$State,java.lang.String)>($r6, $r5);

        $r9 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpecDao mWorkSpecDao>;

        $r8 = r0.<androidx.work.impl.WorkerWrapper: java.lang.String mWorkSpecId>;

        interfaceinvoke $r9.<androidx.work.impl.model.WorkSpecDao: int resetWorkSpecRunAttemptCount(java.lang.String)>($r8);

        $r11 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpecDao mWorkSpecDao>;

        $r10 = r0.<androidx.work.impl.WorkerWrapper: java.lang.String mWorkSpecId>;

        interfaceinvoke $r11.<androidx.work.impl.model.WorkSpecDao: void incrementPeriodCount(java.lang.String)>($r10);

        $r13 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpecDao mWorkSpecDao>;

        $r12 = r0.<androidx.work.impl.WorkerWrapper: java.lang.String mWorkSpecId>;

        interfaceinvoke $r13.<androidx.work.impl.model.WorkSpecDao: int markWorkSpecScheduled(java.lang.String,long)>($r12, -1L);

        $r14 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        virtualinvoke $r14.<androidx.work.impl.WorkDatabase: void setTransactionSuccessful()>();

     label2:
        $r15 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        virtualinvoke $r15.<androidx.work.impl.WorkDatabase: void endTransaction()>();

        specialinvoke r0.<androidx.work.impl.WorkerWrapper: void resolve(boolean)>(0);

        goto label4;

     label3:
        $r16 := @caughtexception;

        r1 = $r16;

        $r17 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        virtualinvoke $r17.<androidx.work.impl.WorkDatabase: void endTransaction()>();

        specialinvoke r0.<androidx.work.impl.WorkerWrapper: void resolve(boolean)>(0);

        throw r1;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void setSucceededAndResolve()
    {
        androidx.work.impl.WorkerWrapper r0;
        androidx.work.ListenableWorker$Result$Success r1;
        androidx.work.Data r2;
        long l0;
        java.util.List r3;
        java.util.Iterator r4;
        java.lang.String r5, $r8, $r12, $r14, $r25, $r28;
        java.lang.Throwable r6, $r32;
        androidx.work.impl.WorkDatabase $r7, $r16, $r17, $r33;
        androidx.work.WorkInfo$State $r9, $r20, $r21, $r29;
        androidx.work.impl.model.WorkSpecDao $r10, $r13, $r19, $r30, $r31;
        androidx.work.ListenableWorker$Result $r11;
        androidx.work.impl.model.DependencyDao $r15, $r22;
        boolean $z0, $z1;
        java.lang.Object $r18;
        androidx.work.Logger $r23;
        java.lang.StringBuilder $r24, $r26, $r27;

        r0 := @this: androidx.work.impl.WorkerWrapper;

        $r7 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        virtualinvoke $r7.<androidx.work.impl.WorkDatabase: void beginTransaction()>();

     label1:
        $r10 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpecDao mWorkSpecDao>;

        $r9 = <androidx.work.WorkInfo$State: androidx.work.WorkInfo$State SUCCEEDED>;

        $r8 = r0.<androidx.work.impl.WorkerWrapper: java.lang.String mWorkSpecId>;

        interfaceinvoke $r10.<androidx.work.impl.model.WorkSpecDao: int setState(androidx.work.WorkInfo$State,java.lang.String)>($r9, $r8);

        $r11 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.ListenableWorker$Result mResult>;

        r1 = (androidx.work.ListenableWorker$Result$Success) $r11;

        r2 = virtualinvoke r1.<androidx.work.ListenableWorker$Result$Success: androidx.work.Data getOutputData()>();

        $r13 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpecDao mWorkSpecDao>;

        $r12 = r0.<androidx.work.impl.WorkerWrapper: java.lang.String mWorkSpecId>;

        interfaceinvoke $r13.<androidx.work.impl.model.WorkSpecDao: void setOutput(java.lang.String,androidx.work.Data)>($r12, r2);

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r15 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.DependencyDao mDependencyDao>;

        $r14 = r0.<androidx.work.impl.WorkerWrapper: java.lang.String mWorkSpecId>;

        r3 = interfaceinvoke $r15.<androidx.work.impl.model.DependencyDao: java.util.List getDependentWorkIds(java.lang.String)>($r14);

        r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r18 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r18;

        $r19 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpecDao mWorkSpecDao>;

        $r20 = interfaceinvoke $r19.<androidx.work.impl.model.WorkSpecDao: androidx.work.WorkInfo$State getState(java.lang.String)>(r5);

        $r21 = <androidx.work.WorkInfo$State: androidx.work.WorkInfo$State BLOCKED>;

        if $r20 != $r21 goto label3;

        $r22 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.DependencyDao mDependencyDao>;

        $z1 = interfaceinvoke $r22.<androidx.work.impl.model.DependencyDao: boolean hasCompletedAllPrerequisites(java.lang.String)>(r5);

        if $z1 == 0 goto label3;

        $r23 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r25 = <androidx.work.impl.WorkerWrapper: java.lang.String TAG>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting status to enqueued for ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r23.<androidx.work.Logger: void info(java.lang.String,java.lang.String)>($r25, $r28);

        $r30 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpecDao mWorkSpecDao>;

        $r29 = <androidx.work.WorkInfo$State: androidx.work.WorkInfo$State ENQUEUED>;

        interfaceinvoke $r30.<androidx.work.impl.model.WorkSpecDao: int setState(androidx.work.WorkInfo$State,java.lang.String)>($r29, r5);

        $r31 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpecDao mWorkSpecDao>;

        interfaceinvoke $r31.<androidx.work.impl.model.WorkSpecDao: void setLastEnqueuedTime(java.lang.String,long)>(r5, l0);

     label3:
        goto label2;

     label4:
        $r16 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        virtualinvoke $r16.<androidx.work.impl.WorkDatabase: void setTransactionSuccessful()>();

     label5:
        $r17 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        virtualinvoke $r17.<androidx.work.impl.WorkDatabase: void endTransaction()>();

        specialinvoke r0.<androidx.work.impl.WorkerWrapper: void resolve(boolean)>(0);

        goto label8;

     label6:
        $r32 := @caughtexception;

        r6 = $r32;

     label7:
        $r33 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.WorkDatabase mWorkDatabase>;

        virtualinvoke $r33.<androidx.work.impl.WorkDatabase: void endTransaction()>();

        specialinvoke r0.<androidx.work.impl.WorkerWrapper: void resolve(boolean)>(0);

        throw r6;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private java.lang.String createWorkDescription(java.util.List)
    {
        androidx.work.impl.WorkerWrapper r0;
        java.util.List r1;
        java.lang.StringBuilder r2, $r5, $r7;
        java.util.Iterator r3;
        java.lang.String r4, $r6, $r9;
        boolean $z0, z1;
        java.lang.Object $r10;

        r0 := @this: androidx.work.impl.WorkerWrapper;

        r1 := @parameter0: java.util.List;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Work [ id=");

        $r6 = r0.<androidx.work.impl.WorkerWrapper: java.lang.String mWorkSpecId>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", tags={ ");

        z1 = 1;

        r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r10;

        if z1 == 0 goto label2;

        z1 = 0;

        goto label3;

     label2:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label3:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        goto label1;

     label4:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" } ]");

        $r9 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    private void lambda$runWorker$0(com.google.common.util.concurrent.ListenableFuture)
    {
        androidx.work.impl.WorkerWrapper r0;
        com.google.common.util.concurrent.ListenableFuture r1;
        androidx.work.impl.utils.futures.SettableFuture $r2;
        boolean $z0;

        r0 := @this: androidx.work.impl.WorkerWrapper;

        r1 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        $r2 = r0.<androidx.work.impl.WorkerWrapper: androidx.work.impl.utils.futures.SettableFuture mWorkerResultFuture>;

        $z0 = virtualinvoke $r2.<androidx.work.impl.utils.futures.SettableFuture: boolean isCancelled()>();

        if $z0 == 0 goto label1;

        interfaceinvoke r1.<com.google.common.util.concurrent.ListenableFuture: boolean cancel(boolean)>(1);

     label1:
        return;
    }

    static void <clinit>()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <androidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)>("WorkerWrapper");

        <androidx.work.impl.WorkerWrapper: java.lang.String TAG> = $r0;

        return;
    }

androidx.work.impl.WorkerWrapper$1
<androidx.work.impl.WorkerWrapper$1: com.google.common.util.concurrent.ListenableFuture val$runExpedited>
<androidx.work.impl.WorkerWrapper$1: androidx.work.impl.WorkerWrapper this$0>
    void <init>(androidx.work.impl.WorkerWrapper, com.google.common.util.concurrent.ListenableFuture)
    {
        androidx.work.impl.WorkerWrapper$1 r0;
        androidx.work.impl.WorkerWrapper r1;
        com.google.common.util.concurrent.ListenableFuture r2;

        r0 := @this: androidx.work.impl.WorkerWrapper$1;

        r1 := @parameter0: androidx.work.impl.WorkerWrapper;

        r2 := @parameter1: com.google.common.util.concurrent.ListenableFuture;

        r0.<androidx.work.impl.WorkerWrapper$1: androidx.work.impl.WorkerWrapper this$0> = r1;

        r0.<androidx.work.impl.WorkerWrapper$1: com.google.common.util.concurrent.ListenableFuture val$runExpedited> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.work.impl.WorkerWrapper$1 r0;
        java.lang.Throwable r1, $r20;
        androidx.work.impl.WorkerWrapper $r2, $r10, $r15, $r16, $r21;
        androidx.work.impl.utils.futures.SettableFuture $r3, $r18, $r22;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r4, $r19;
        androidx.work.Logger $r6;
        java.lang.StringBuilder $r7, $r9, $r13;
        java.lang.String $r8, $r12, $r14;
        androidx.work.impl.model.WorkSpec $r11;
        androidx.work.ListenableWorker $r17;

        r0 := @this: androidx.work.impl.WorkerWrapper$1;

        $r2 = r0.<androidx.work.impl.WorkerWrapper$1: androidx.work.impl.WorkerWrapper this$0>;

        $r3 = $r2.<androidx.work.impl.WorkerWrapper: androidx.work.impl.utils.futures.SettableFuture mWorkerResultFuture>;

        $z0 = virtualinvoke $r3.<androidx.work.impl.utils.futures.SettableFuture: boolean isCancelled()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r4 = r0.<androidx.work.impl.WorkerWrapper$1: com.google.common.util.concurrent.ListenableFuture val$runExpedited>;

        interfaceinvoke $r4.<com.google.common.util.concurrent.ListenableFuture: java.lang.Object get()>();

        $r6 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r8 = <androidx.work.impl.WorkerWrapper: java.lang.String TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting work for ");

        $r10 = r0.<androidx.work.impl.WorkerWrapper$1: androidx.work.impl.WorkerWrapper this$0>;

        $r11 = $r10.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $r12 = $r11.<androidx.work.impl.model.WorkSpec: java.lang.String workerClassName>;

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<androidx.work.Logger: void debug(java.lang.String,java.lang.String)>($r8, $r14);

        $r15 = r0.<androidx.work.impl.WorkerWrapper$1: androidx.work.impl.WorkerWrapper this$0>;

        $r18 = $r15.<androidx.work.impl.WorkerWrapper: androidx.work.impl.utils.futures.SettableFuture mWorkerResultFuture>;

        $r16 = r0.<androidx.work.impl.WorkerWrapper$1: androidx.work.impl.WorkerWrapper this$0>;

        $r17 = $r16.<androidx.work.impl.WorkerWrapper: androidx.work.ListenableWorker mWorker>;

        $r19 = virtualinvoke $r17.<androidx.work.ListenableWorker: com.google.common.util.concurrent.ListenableFuture startWork()>();

        virtualinvoke $r18.<androidx.work.impl.utils.futures.SettableFuture: boolean setFuture(com.google.common.util.concurrent.ListenableFuture)>($r19);

     label2:
        goto label4;

     label3:
        $r20 := @caughtexception;

        r1 = $r20;

        $r21 = r0.<androidx.work.impl.WorkerWrapper$1: androidx.work.impl.WorkerWrapper this$0>;

        $r22 = $r21.<androidx.work.impl.WorkerWrapper: androidx.work.impl.utils.futures.SettableFuture mWorkerResultFuture>;

        virtualinvoke $r22.<androidx.work.impl.utils.futures.SettableFuture: boolean setException(java.lang.Throwable)>(r1);

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

androidx.work.impl.WorkerWrapper$2
<androidx.work.impl.WorkerWrapper$2: java.lang.String val$workDescription>
<androidx.work.impl.WorkerWrapper$2: androidx.work.impl.WorkerWrapper this$0>
    void <init>(androidx.work.impl.WorkerWrapper, java.lang.String)
    {
        androidx.work.impl.WorkerWrapper$2 r0;
        androidx.work.impl.WorkerWrapper r1;
        java.lang.String r2;

        r0 := @this: androidx.work.impl.WorkerWrapper$2;

        r1 := @parameter0: androidx.work.impl.WorkerWrapper;

        r2 := @parameter1: java.lang.String;

        r0.<androidx.work.impl.WorkerWrapper$2: androidx.work.impl.WorkerWrapper this$0> = r1;

        r0.<androidx.work.impl.WorkerWrapper$2: java.lang.String val$workDescription> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.work.impl.WorkerWrapper$2 r0;
        java.lang.Throwable r1, $r27, $r36, $r38, r48, r49;
        androidx.work.impl.WorkerWrapper $r2, $r8, $r16, $r17, $r21, $r35, $r37, $r46;
        androidx.work.impl.utils.futures.SettableFuture $r3;
        java.lang.Object $r4;
        androidx.work.Logger $r5, $r18, $r28, $r39;
        java.lang.StringBuilder $r6, $r11, $r12, $r13, $r14, $r19, $r24, $r25, $r29, $r32, $r33, $r40, $r43, $r44;
        java.lang.String $r7, $r10, $r15, $r20, $r23, $r26, $r30, $r31, $r34, $r41, $r42, $r45;
        androidx.work.impl.model.WorkSpec $r9, $r22;
        androidx.work.ListenableWorker$Result r47;

        r0 := @this: androidx.work.impl.WorkerWrapper$2;

     label1:
        $r2 = r0.<androidx.work.impl.WorkerWrapper$2: androidx.work.impl.WorkerWrapper this$0>;

        $r3 = $r2.<androidx.work.impl.WorkerWrapper: androidx.work.impl.utils.futures.SettableFuture mWorkerResultFuture>;

        $r4 = virtualinvoke $r3.<androidx.work.impl.utils.futures.SettableFuture: java.lang.Object get()>();

        r47 = (androidx.work.ListenableWorker$Result) $r4;

        if r47 != null goto label2;

        $r18 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r20 = <androidx.work.impl.WorkerWrapper: java.lang.String TAG>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = r0.<androidx.work.impl.WorkerWrapper$2: androidx.work.impl.WorkerWrapper this$0>;

        $r22 = $r21.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $r23 = $r22.<androidx.work.impl.model.WorkSpec: java.lang.String workerClassName>;

        $r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" returned a null result. Treating it as a failure.");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<androidx.work.Logger: void error(java.lang.String,java.lang.String)>($r20, $r26);

        goto label3;

     label2:
        $r5 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r7 = <androidx.work.impl.WorkerWrapper: java.lang.String TAG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = r0.<androidx.work.impl.WorkerWrapper$2: androidx.work.impl.WorkerWrapper this$0>;

        $r9 = $r8.<androidx.work.impl.WorkerWrapper: androidx.work.impl.model.WorkSpec mWorkSpec>;

        $r10 = $r9.<androidx.work.impl.model.WorkSpec: java.lang.String workerClassName>;

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" returned a ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r47);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<androidx.work.Logger: void debug(java.lang.String,java.lang.String)>($r7, $r15);

        $r16 = r0.<androidx.work.impl.WorkerWrapper$2: androidx.work.impl.WorkerWrapper this$0>;

        $r16.<androidx.work.impl.WorkerWrapper: androidx.work.ListenableWorker$Result mResult> = r47;

     label3:
        $r17 = r0.<androidx.work.impl.WorkerWrapper$2: androidx.work.impl.WorkerWrapper this$0>;

        virtualinvoke $r17.<androidx.work.impl.WorkerWrapper: void onWorkFinished()>();

        goto label9;

     label4:
        $r27 := @caughtexception;

        r48 = $r27;

        $r28 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r30 = <androidx.work.impl.WorkerWrapper: java.lang.String TAG>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r31 = r0.<androidx.work.impl.WorkerWrapper$2: java.lang.String val$workDescription>;

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was cancelled");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r28.<androidx.work.Logger: void info(java.lang.String,java.lang.String,java.lang.Throwable)>($r30, $r34, r48);

     label5:
        $r35 = r0.<androidx.work.impl.WorkerWrapper$2: androidx.work.impl.WorkerWrapper this$0>;

        virtualinvoke $r35.<androidx.work.impl.WorkerWrapper: void onWorkFinished()>();

        goto label9;

     label6:
        $r38 := @caughtexception;

        r49 = $r38;

        $r39 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r41 = <androidx.work.impl.WorkerWrapper: java.lang.String TAG>;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r42 = r0.<androidx.work.impl.WorkerWrapper$2: java.lang.String val$workDescription>;

        $r43 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed because it threw an exception/error");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r39.<androidx.work.Logger: void error(java.lang.String,java.lang.String,java.lang.Throwable)>($r41, $r45, r49);

     label7:
        $r46 = r0.<androidx.work.impl.WorkerWrapper$2: androidx.work.impl.WorkerWrapper this$0>;

        virtualinvoke $r46.<androidx.work.impl.WorkerWrapper: void onWorkFinished()>();

        goto label9;

     label8:
        $r36 := @caughtexception;

        r1 = $r36;

        $r37 = r0.<androidx.work.impl.WorkerWrapper$2: androidx.work.impl.WorkerWrapper this$0>;

        virtualinvoke $r37.<androidx.work.impl.WorkerWrapper: void onWorkFinished()>();

        throw r1;

     label9:
        return;

        catch java.util.concurrent.CancellationException from label1 to label3 with label4;
        catch java.lang.InterruptedException from label1 to label3 with label6;
        catch java.util.concurrent.ExecutionException from label1 to label3 with label6;
        catch java.lang.Throwable from label1 to label3 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

androidx.work.impl.WorkerWrapper$Builder
<androidx.work.impl.WorkerWrapper$Builder: android.content.Context mAppContext>
<androidx.work.impl.WorkerWrapper$Builder: androidx.work.ListenableWorker mWorker>
<androidx.work.impl.WorkerWrapper$Builder: androidx.work.impl.foreground.ForegroundProcessor mForegroundProcessor>
<androidx.work.impl.WorkerWrapper$Builder: androidx.work.impl.utils.taskexecutor.TaskExecutor mWorkTaskExecutor>
<androidx.work.impl.WorkerWrapper$Builder: androidx.work.Configuration mConfiguration>
<androidx.work.impl.WorkerWrapper$Builder: androidx.work.impl.WorkDatabase mWorkDatabase>
<androidx.work.impl.WorkerWrapper$Builder: androidx.work.impl.model.WorkSpec mWorkSpec>
<androidx.work.impl.WorkerWrapper$Builder: java.util.List mSchedulers>
<androidx.work.impl.WorkerWrapper$Builder: java.util.List mTags>
<androidx.work.impl.WorkerWrapper$Builder: androidx.work.WorkerParameters$RuntimeExtras mRuntimeExtras>
    public void <init>(android.content.Context, androidx.work.Configuration, androidx.work.impl.utils.taskexecutor.TaskExecutor, androidx.work.impl.foreground.ForegroundProcessor, androidx.work.impl.WorkDatabase, androidx.work.impl.model.WorkSpec, java.util.List)
    {
        androidx.work.impl.WorkerWrapper$Builder r0;
        android.content.Context r1, $r9;
        androidx.work.Configuration r2;
        androidx.work.impl.utils.taskexecutor.TaskExecutor r3;
        androidx.work.impl.foreground.ForegroundProcessor r4;
        androidx.work.impl.WorkDatabase r5;
        androidx.work.impl.model.WorkSpec r6;
        java.util.List r7;
        androidx.work.WorkerParameters$RuntimeExtras $r8;

        r0 := @this: androidx.work.impl.WorkerWrapper$Builder;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.work.Configuration;

        r3 := @parameter2: androidx.work.impl.utils.taskexecutor.TaskExecutor;

        r4 := @parameter3: androidx.work.impl.foreground.ForegroundProcessor;

        r5 := @parameter4: androidx.work.impl.WorkDatabase;

        r6 := @parameter5: androidx.work.impl.model.WorkSpec;

        r7 := @parameter6: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r8 = new androidx.work.WorkerParameters$RuntimeExtras;

        specialinvoke $r8.<androidx.work.WorkerParameters$RuntimeExtras: void <init>()>();

        r0.<androidx.work.impl.WorkerWrapper$Builder: androidx.work.WorkerParameters$RuntimeExtras mRuntimeExtras> = $r8;

        $r9 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<androidx.work.impl.WorkerWrapper$Builder: android.content.Context mAppContext> = $r9;

        r0.<androidx.work.impl.WorkerWrapper$Builder: androidx.work.impl.utils.taskexecutor.TaskExecutor mWorkTaskExecutor> = r3;

        r0.<androidx.work.impl.WorkerWrapper$Builder: androidx.work.impl.foreground.ForegroundProcessor mForegroundProcessor> = r4;

        r0.<androidx.work.impl.WorkerWrapper$Builder: androidx.work.Configuration mConfiguration> = r2;

        r0.<androidx.work.impl.WorkerWrapper$Builder: androidx.work.impl.WorkDatabase mWorkDatabase> = r5;

        r0.<androidx.work.impl.WorkerWrapper$Builder: androidx.work.impl.model.WorkSpec mWorkSpec> = r6;

        r0.<androidx.work.impl.WorkerWrapper$Builder: java.util.List mTags> = r7;

        return;
    }

    public androidx.work.impl.WorkerWrapper$Builder withSchedulers(java.util.List)
    {
        androidx.work.impl.WorkerWrapper$Builder r0;
        java.util.List r1;

        r0 := @this: androidx.work.impl.WorkerWrapper$Builder;

        r1 := @parameter0: java.util.List;

        r0.<androidx.work.impl.WorkerWrapper$Builder: java.util.List mSchedulers> = r1;

        return r0;
    }

    public androidx.work.impl.WorkerWrapper$Builder withRuntimeExtras(androidx.work.WorkerParameters$RuntimeExtras)
    {
        androidx.work.impl.WorkerWrapper$Builder r0;
        androidx.work.WorkerParameters$RuntimeExtras r1;

        r0 := @this: androidx.work.impl.WorkerWrapper$Builder;

        r1 := @parameter0: androidx.work.WorkerParameters$RuntimeExtras;

        if r1 == null goto label1;

        r0.<androidx.work.impl.WorkerWrapper$Builder: androidx.work.WorkerParameters$RuntimeExtras mRuntimeExtras> = r1;

     label1:
        return r0;
    }

    public androidx.work.impl.WorkerWrapper$Builder withWorker(androidx.work.ListenableWorker)
    {
        androidx.work.impl.WorkerWrapper$Builder r0;
        androidx.work.ListenableWorker r1;

        r0 := @this: androidx.work.impl.WorkerWrapper$Builder;

        r1 := @parameter0: androidx.work.ListenableWorker;

        r0.<androidx.work.impl.WorkerWrapper$Builder: androidx.work.ListenableWorker mWorker> = r1;

        return r0;
    }

    public androidx.work.impl.WorkerWrapper build()
    {
        androidx.work.impl.WorkerWrapper$Builder r0;
        androidx.work.impl.WorkerWrapper $r1;

        r0 := @this: androidx.work.impl.WorkerWrapper$Builder;

        $r1 = new androidx.work.impl.WorkerWrapper;

        specialinvoke $r1.<androidx.work.impl.WorkerWrapper: void <init>(androidx.work.impl.WorkerWrapper$Builder)>(r0);

        return $r1;
    }

    static java.util.List access$000(androidx.work.impl.WorkerWrapper$Builder)
    {
        androidx.work.impl.WorkerWrapper$Builder r0;
        java.util.List $r1;

        r0 := @parameter0: androidx.work.impl.WorkerWrapper$Builder;

        $r1 = r0.<androidx.work.impl.WorkerWrapper$Builder: java.util.List mTags>;

        return $r1;
    }

