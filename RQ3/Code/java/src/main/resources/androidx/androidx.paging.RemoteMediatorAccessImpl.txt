androidx.paging.RemoteMediatorAccessImpl
<androidx.paging.RemoteMediatorAccessImpl: androidx.paging.RemoteMediatorAccessImpl$Companion Companion>
<androidx.paging.RemoteMediatorAccessImpl: kotlinx.coroutines.CoroutineScope scope>
<androidx.paging.RemoteMediatorAccessImpl: androidx.paging.RemoteMediator remoteMediator>
<androidx.paging.RemoteMediatorAccessImpl: androidx.paging.AccessorStateHolder accessorState>
<androidx.paging.RemoteMediatorAccessImpl: androidx.paging.SingleRunner isolationRunner>
<androidx.paging.RemoteMediatorAccessImpl: int PRIORITY_REFRESH>
<androidx.paging.RemoteMediatorAccessImpl: int PRIORITY_APPEND_PREPEND>
    public void <init>(kotlinx.coroutines.CoroutineScope, androidx.paging.RemoteMediator)
    {
        androidx.paging.RemoteMediatorAccessImpl r0;
        kotlinx.coroutines.CoroutineScope r1;
        androidx.paging.RemoteMediator r2;
        androidx.paging.AccessorStateHolder $r3;
        androidx.paging.SingleRunner $r4;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: androidx.paging.RemoteMediator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "scope");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "remoteMediator");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.paging.RemoteMediatorAccessImpl: kotlinx.coroutines.CoroutineScope scope> = r1;

        r0.<androidx.paging.RemoteMediatorAccessImpl: androidx.paging.RemoteMediator remoteMediator> = r2;

        $r3 = new androidx.paging.AccessorStateHolder;

        specialinvoke $r3.<androidx.paging.AccessorStateHolder: void <init>()>();

        r0.<androidx.paging.RemoteMediatorAccessImpl: androidx.paging.AccessorStateHolder accessorState> = $r3;

        $r4 = new androidx.paging.SingleRunner;

        specialinvoke $r4.<androidx.paging.SingleRunner: void <init>(boolean)>(0);

        r0.<androidx.paging.RemoteMediatorAccessImpl: androidx.paging.SingleRunner isolationRunner> = $r4;

        return;
    }

    public kotlinx.coroutines.flow.StateFlow getState()
    {
        androidx.paging.RemoteMediatorAccessImpl r0;
        androidx.paging.AccessorStateHolder $r1;
        kotlinx.coroutines.flow.StateFlow $r2;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl;

        $r1 = r0.<androidx.paging.RemoteMediatorAccessImpl: androidx.paging.AccessorStateHolder accessorState>;

        $r2 = virtualinvoke $r1.<androidx.paging.AccessorStateHolder: kotlinx.coroutines.flow.StateFlow getLoadStates()>();

        return $r2;
    }

    public void requestLoad(androidx.paging.LoadType, androidx.paging.PagingState)
    {
        androidx.paging.RemoteMediatorAccessImpl r0;
        androidx.paging.LoadType r1, r3;
        androidx.paging.PagingState r2;
        boolean z0;
        int i0, $i1;
        androidx.paging.RemoteMediatorAccessImpl$requestLoad$newRequest$1 $r4;
        androidx.paging.AccessorStateHolder $r5;
        kotlin.jvm.functions.Function1 $r6;
        java.lang.Object $r7;
        java.lang.Boolean $r8;
        int[] $r9;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl;

        r1 := @parameter0: androidx.paging.LoadType;

        r2 := @parameter1: androidx.paging.PagingState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "loadType");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "pagingState");

        $r5 = r0.<androidx.paging.RemoteMediatorAccessImpl: androidx.paging.AccessorStateHolder accessorState>;

        $r4 = new androidx.paging.RemoteMediatorAccessImpl$requestLoad$newRequest$1;

        specialinvoke $r4.<androidx.paging.RemoteMediatorAccessImpl$requestLoad$newRequest$1: void <init>(androidx.paging.LoadType,androidx.paging.PagingState)>(r1, r2);

        $r6 = (kotlin.jvm.functions.Function1) $r4;

        $r7 = virtualinvoke $r5.<androidx.paging.AccessorStateHolder: java.lang.Object use(kotlin.jvm.functions.Function1)>($r6);

        $r8 = (java.lang.Boolean) $r7;

        z0 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        if z0 == 0 goto label2;

        r3 = r1;

        $r9 = <androidx.paging.RemoteMediatorAccessImpl$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i1 = virtualinvoke r3.<androidx.paging.LoadType: int ordinal()>();

        i0 = $r9[$i1];

        if i0 != 1 goto label1;

        specialinvoke r0.<androidx.paging.RemoteMediatorAccessImpl: void launchRefresh()>();

        goto label2;

     label1:
        specialinvoke r0.<androidx.paging.RemoteMediatorAccessImpl: void launchBoundary()>();

     label2:
        return;
    }

    private final void launchRefresh()
    {
        androidx.paging.RemoteMediatorAccessImpl r0;
        androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1 $r1;
        kotlinx.coroutines.CoroutineScope $r2;
        kotlin.jvm.functions.Function2 $r3;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl;

        $r2 = r0.<androidx.paging.RemoteMediatorAccessImpl: kotlinx.coroutines.CoroutineScope scope>;

        $r1 = new androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1;

        specialinvoke $r1.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1: void <init>(androidx.paging.RemoteMediatorAccessImpl,kotlin.coroutines.Continuation)>(r0, null);

        $r3 = (kotlin.jvm.functions.Function2) $r1;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r2, null, null, $r3, 3, null);

        return;
    }

    private final void launchBoundary()
    {
        androidx.paging.RemoteMediatorAccessImpl r0;
        androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1 $r1;
        kotlinx.coroutines.CoroutineScope $r2;
        kotlin.jvm.functions.Function2 $r3;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl;

        $r2 = r0.<androidx.paging.RemoteMediatorAccessImpl: kotlinx.coroutines.CoroutineScope scope>;

        $r1 = new androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1;

        specialinvoke $r1.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1: void <init>(androidx.paging.RemoteMediatorAccessImpl,kotlin.coroutines.Continuation)>(r0, null);

        $r3 = (kotlin.jvm.functions.Function2) $r1;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r2, null, null, $r3, 3, null);

        return;
    }

    public void retryFailed(androidx.paging.PagingState)
    {
        androidx.paging.RemoteMediatorAccessImpl r0;
        androidx.paging.PagingState r1;
        java.util.List r2;
        java.util.Iterator r3;
        java.lang.Object r4;
        androidx.paging.LoadType r5;
        java.util.ArrayList $r6;
        androidx.paging.RemoteMediatorAccessImpl$retryFailed$1 $r7;
        androidx.paging.AccessorStateHolder $r8;
        kotlin.jvm.functions.Function1 $r9;
        boolean $z2;
        java.lang.Iterable $r11;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl;

        r1 := @parameter0: androidx.paging.PagingState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "pagingState");

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r2 = (java.util.List) $r6;

        $r8 = r0.<androidx.paging.RemoteMediatorAccessImpl: androidx.paging.AccessorStateHolder accessorState>;

        $r7 = new androidx.paging.RemoteMediatorAccessImpl$retryFailed$1;

        specialinvoke $r7.<androidx.paging.RemoteMediatorAccessImpl$retryFailed$1: void <init>(java.util.List)>(r2);

        $r9 = (kotlin.jvm.functions.Function1) $r7;

        virtualinvoke $r8.<androidx.paging.AccessorStateHolder: java.lang.Object use(kotlin.jvm.functions.Function1)>($r9);

        $r11 = (java.lang.Iterable) r2;

        r3 = interfaceinvoke $r11.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.paging.LoadType) r4;

        virtualinvoke r0.<androidx.paging.RemoteMediatorAccessImpl: void requestLoad(androidx.paging.LoadType,androidx.paging.PagingState)>(r5, r1);

        goto label1;

     label2:
        return;
    }

    public java.lang.Object initialize(kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation r0, r19;
        java.lang.Object r1, $r3, r4, $r6, $r16;
        boolean z0, z1, $z3;
        androidx.paging.RemoteMediator$InitializeAction r2, $r7;
        androidx.paging.RemoteMediatorAccessImpl$initialize$2$1 $r8;
        kotlin.jvm.functions.Function1 $r9;
        androidx.paging.AccessorStateHolder $r10;
        androidx.paging.RemoteMediator $r12;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.paging.RemoteMediatorAccessImpl r14;
        androidx.paging.RemoteMediatorAccessImpl$initialize$1 $r15, r17;
        java.lang.IllegalStateException r18;

        r14 := @this: androidx.paging.RemoteMediatorAccessImpl;

        r0 := @parameter0: kotlin.coroutines.Continuation;

        $z3 = r0 instanceof androidx.paging.RemoteMediatorAccessImpl$initialize$1;

        if $z3 == 0 goto label1;

        $r15 = (androidx.paging.RemoteMediatorAccessImpl$initialize$1) r0;

        $i0 = $r15.<androidx.paging.RemoteMediatorAccessImpl$initialize$1: int label>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label1;

        $i2 = $r15.<androidx.paging.RemoteMediatorAccessImpl$initialize$1: int label>;

        $i3 = $i2 - -2147483648;

        $r15.<androidx.paging.RemoteMediatorAccessImpl$initialize$1: int label> = $i3;

        goto label2;

     label1:
        r17 = new androidx.paging.RemoteMediatorAccessImpl$initialize$1;

        specialinvoke r17.<androidx.paging.RemoteMediatorAccessImpl$initialize$1: void <init>(androidx.paging.RemoteMediatorAccessImpl,kotlin.coroutines.Continuation)>(r14, r0);

        $r15 = r17;

     label2:
        $r3 = $r15.<androidx.paging.RemoteMediatorAccessImpl$initialize$1: java.lang.Object result>;

        r4 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i4 = $r15.<androidx.paging.RemoteMediatorAccessImpl$initialize$1: int label>;

        tableswitch($i4)
        {
            case 0: goto label3;
            case 1: goto label4;
            default: goto label7;
        };

     label3:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

        $r12 = r14.<androidx.paging.RemoteMediatorAccessImpl: androidx.paging.RemoteMediator remoteMediator>;

        $r15.<androidx.paging.RemoteMediatorAccessImpl$initialize$1: java.lang.Object L$0> = r14;

        $r15.<androidx.paging.RemoteMediatorAccessImpl$initialize$1: int label> = 1;

        r19 = (kotlin.coroutines.Continuation) $r15;

        $r16 = virtualinvoke $r12.<androidx.paging.RemoteMediator: java.lang.Object initialize(kotlin.coroutines.Continuation)>(r19);

        if $r16 != r4 goto label5;

        return r4;

     label4:
        $r6 = $r15.<androidx.paging.RemoteMediatorAccessImpl$initialize$1: java.lang.Object L$0>;

        r14 = (androidx.paging.RemoteMediatorAccessImpl) $r6;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

        $r16 = $r3;

     label5:
        r1 = $r16;

        z0 = 0;

        z1 = 0;

        r2 = (androidx.paging.RemoteMediator$InitializeAction) r1;

        $r7 = <androidx.paging.RemoteMediator$InitializeAction: androidx.paging.RemoteMediator$InitializeAction LAUNCH_INITIAL_REFRESH>;

        if r2 != $r7 goto label6;

        $r10 = r14.<androidx.paging.RemoteMediatorAccessImpl: androidx.paging.AccessorStateHolder accessorState>;

        $r8 = <androidx.paging.RemoteMediatorAccessImpl$initialize$2$1: androidx.paging.RemoteMediatorAccessImpl$initialize$2$1 INSTANCE>;

        $r9 = (kotlin.jvm.functions.Function1) $r8;

        virtualinvoke $r10.<androidx.paging.AccessorStateHolder: java.lang.Object use(kotlin.jvm.functions.Function1)>($r9);

     label6:
        return r1;

     label7:
        r18 = new java.lang.IllegalStateException;

        specialinvoke r18.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r18;
    }

    public static final androidx.paging.SingleRunner access$getIsolationRunner$p(androidx.paging.RemoteMediatorAccessImpl)
    {
        androidx.paging.RemoteMediatorAccessImpl $r0;
        androidx.paging.SingleRunner $r1;

        $r0 := @parameter0: androidx.paging.RemoteMediatorAccessImpl;

        $r1 = $r0.<androidx.paging.RemoteMediatorAccessImpl: androidx.paging.SingleRunner isolationRunner>;

        return $r1;
    }

    public static final androidx.paging.AccessorStateHolder access$getAccessorState$p(androidx.paging.RemoteMediatorAccessImpl)
    {
        androidx.paging.RemoteMediatorAccessImpl $r0;
        androidx.paging.AccessorStateHolder $r1;

        $r0 := @parameter0: androidx.paging.RemoteMediatorAccessImpl;

        $r1 = $r0.<androidx.paging.RemoteMediatorAccessImpl: androidx.paging.AccessorStateHolder accessorState>;

        return $r1;
    }

    public static final androidx.paging.RemoteMediator access$getRemoteMediator$p(androidx.paging.RemoteMediatorAccessImpl)
    {
        androidx.paging.RemoteMediatorAccessImpl $r0;
        androidx.paging.RemoteMediator $r1;

        $r0 := @parameter0: androidx.paging.RemoteMediatorAccessImpl;

        $r1 = $r0.<androidx.paging.RemoteMediatorAccessImpl: androidx.paging.RemoteMediator remoteMediator>;

        return $r1;
    }

    public static final void access$launchBoundary(androidx.paging.RemoteMediatorAccessImpl)
    {
        androidx.paging.RemoteMediatorAccessImpl $r0;

        $r0 := @parameter0: androidx.paging.RemoteMediatorAccessImpl;

        specialinvoke $r0.<androidx.paging.RemoteMediatorAccessImpl: void launchBoundary()>();

        return;
    }

    static void <clinit>()
    {
        androidx.paging.RemoteMediatorAccessImpl$Companion $r0;

        $r0 = new androidx.paging.RemoteMediatorAccessImpl$Companion;

        specialinvoke $r0.<androidx.paging.RemoteMediatorAccessImpl$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.paging.RemoteMediatorAccessImpl: androidx.paging.RemoteMediatorAccessImpl$Companion Companion> = $r0;

        return;
    }

androidx.paging.RemoteMediatorAccessImpl$Companion
    private void <init>()
    {
        androidx.paging.RemoteMediatorAccessImpl$Companion r0;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.paging.RemoteMediatorAccessImpl$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.paging.RemoteMediatorAccessImpl$Companion: void <init>()>();

        return;
    }

androidx.paging.RemoteMediatorAccessImpl$initialize$1
<androidx.paging.RemoteMediatorAccessImpl$initialize$1: java.lang.Object L$0>
<androidx.paging.RemoteMediatorAccessImpl$initialize$1: java.lang.Object result>
<androidx.paging.RemoteMediatorAccessImpl$initialize$1: androidx.paging.RemoteMediatorAccessImpl this$0>
<androidx.paging.RemoteMediatorAccessImpl$initialize$1: int label>
    void <init>(androidx.paging.RemoteMediatorAccessImpl, kotlin.coroutines.Continuation)
    {
        androidx.paging.RemoteMediatorAccessImpl$initialize$1 r0;
        androidx.paging.RemoteMediatorAccessImpl r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$initialize$1;

        r1 := @parameter0: androidx.paging.RemoteMediatorAccessImpl;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.paging.RemoteMediatorAccessImpl$initialize$1: androidx.paging.RemoteMediatorAccessImpl this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.paging.RemoteMediatorAccessImpl$initialize$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.paging.RemoteMediatorAccessImpl $r3;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$initialize$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.paging.RemoteMediatorAccessImpl$initialize$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.paging.RemoteMediatorAccessImpl$initialize$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.paging.RemoteMediatorAccessImpl$initialize$1: int label> = $i1;

        $r3 = r0.<androidx.paging.RemoteMediatorAccessImpl$initialize$1: androidx.paging.RemoteMediatorAccessImpl this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.paging.RemoteMediatorAccessImpl: java.lang.Object initialize(kotlin.coroutines.Continuation)>($r2);

        return $r4;
    }

androidx.paging.RemoteMediatorAccessImpl$initialize$2$1
<androidx.paging.RemoteMediatorAccessImpl$initialize$2$1: androidx.paging.RemoteMediatorAccessImpl$initialize$2$1 INSTANCE>
    void <init>()
    {
        androidx.paging.RemoteMediatorAccessImpl$initialize$2$1 r0;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$initialize$2$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.paging.AccessorState)
    {
        androidx.paging.RemoteMediatorAccessImpl$initialize$2$1 r0;
        androidx.paging.AccessorState r1;
        androidx.paging.AccessorState$BlockState $r2, $r4;
        androidx.paging.LoadType $r3, $r5;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$initialize$2$1;

        r1 := @parameter0: androidx.paging.AccessorState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r3 = <androidx.paging.LoadType: androidx.paging.LoadType APPEND>;

        $r2 = <androidx.paging.AccessorState$BlockState: androidx.paging.AccessorState$BlockState REQUIRES_REFRESH>;

        virtualinvoke r1.<androidx.paging.AccessorState: void setBlockState(androidx.paging.LoadType,androidx.paging.AccessorState$BlockState)>($r3, $r2);

        $r5 = <androidx.paging.LoadType: androidx.paging.LoadType PREPEND>;

        $r4 = <androidx.paging.AccessorState$BlockState: androidx.paging.AccessorState$BlockState REQUIRES_REFRESH>;

        virtualinvoke r1.<androidx.paging.AccessorState: void setBlockState(androidx.paging.LoadType,androidx.paging.AccessorState$BlockState)>($r5, $r4);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.paging.RemoteMediatorAccessImpl$initialize$2$1 r0;
        java.lang.Object r1;
        androidx.paging.AccessorState $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$initialize$2$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.paging.AccessorState) r1;

        virtualinvoke r0.<androidx.paging.RemoteMediatorAccessImpl$initialize$2$1: void invoke(androidx.paging.AccessorState)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

    static void <clinit>()
    {
        androidx.paging.RemoteMediatorAccessImpl$initialize$2$1 $r0;

        $r0 = new androidx.paging.RemoteMediatorAccessImpl$initialize$2$1;

        specialinvoke $r0.<androidx.paging.RemoteMediatorAccessImpl$initialize$2$1: void <init>()>();

        <androidx.paging.RemoteMediatorAccessImpl$initialize$2$1: androidx.paging.RemoteMediatorAccessImpl$initialize$2$1 INSTANCE> = $r0;

        return;
    }

androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$1
<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$1: androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$1 INSTANCE>
    void <init>()
    {
        androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$1 r0;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final kotlin.Pair invoke(androidx.paging.AccessorState)
    {
        androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$1 r0;
        androidx.paging.AccessorState r1;
        kotlin.Pair $r2;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$1;

        r1 := @parameter0: androidx.paging.AccessorState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = virtualinvoke r1.<androidx.paging.AccessorState: kotlin.Pair getPendingBoundary()>();

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$1 r0;
        java.lang.Object r1;
        androidx.paging.AccessorState $r2;
        kotlin.Pair $r3;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.paging.AccessorState) r1;

        $r3 = virtualinvoke r0.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$1: kotlin.Pair invoke(androidx.paging.AccessorState)>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$1 $r0;

        $r0 = new androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$1;

        specialinvoke $r0.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$1: void <init>()>();

        <androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$1: androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$1 INSTANCE> = $r0;

        return;
    }

androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$2
<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$2: androidx.paging.LoadType $loadType>
<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$2: androidx.paging.RemoteMediator$MediatorResult $loadResult>
    void <init>(androidx.paging.LoadType, androidx.paging.RemoteMediator$MediatorResult)
    {
        androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$2 r0;
        androidx.paging.LoadType $r1;
        androidx.paging.RemoteMediator$MediatorResult $r2;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$2;

        $r1 := @parameter0: androidx.paging.LoadType;

        $r2 := @parameter1: androidx.paging.RemoteMediator$MediatorResult;

        r0.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$2: androidx.paging.LoadType $loadType> = $r1;

        r0.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$2: androidx.paging.RemoteMediator$MediatorResult $loadResult> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.paging.AccessorState)
    {
        androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$2 r0;
        androidx.paging.AccessorState r1;
        androidx.paging.LoadType $r2, $r6;
        androidx.paging.RemoteMediator$MediatorResult $r3;
        androidx.paging.RemoteMediator$MediatorResult$Success $r4;
        boolean $z0;
        androidx.paging.AccessorState$BlockState $r5;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$2;

        r1 := @parameter0: androidx.paging.AccessorState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = r0.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$2: androidx.paging.LoadType $loadType>;

        virtualinvoke r1.<androidx.paging.AccessorState: void clearPendingRequest(androidx.paging.LoadType)>($r2);

        $r3 = r0.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$2: androidx.paging.RemoteMediator$MediatorResult $loadResult>;

        $r4 = (androidx.paging.RemoteMediator$MediatorResult$Success) $r3;

        $z0 = virtualinvoke $r4.<androidx.paging.RemoteMediator$MediatorResult$Success: boolean endOfPaginationReached()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$2: androidx.paging.LoadType $loadType>;

        $r5 = <androidx.paging.AccessorState$BlockState: androidx.paging.AccessorState$BlockState COMPLETED>;

        virtualinvoke r1.<androidx.paging.AccessorState: void setBlockState(androidx.paging.LoadType,androidx.paging.AccessorState$BlockState)>($r6, $r5);

     label1:
        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$2 r0;
        java.lang.Object r1;
        androidx.paging.AccessorState $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.paging.AccessorState) r1;

        virtualinvoke r0.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$2: void invoke(androidx.paging.AccessorState)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$3
<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$3: androidx.paging.LoadType $loadType>
<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$3: androidx.paging.RemoteMediator$MediatorResult $loadResult>
    void <init>(androidx.paging.LoadType, androidx.paging.RemoteMediator$MediatorResult)
    {
        androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$3 r0;
        androidx.paging.LoadType $r1;
        androidx.paging.RemoteMediator$MediatorResult $r2;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$3;

        $r1 := @parameter0: androidx.paging.LoadType;

        $r2 := @parameter1: androidx.paging.RemoteMediator$MediatorResult;

        r0.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$3: androidx.paging.LoadType $loadType> = $r1;

        r0.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$3: androidx.paging.RemoteMediator$MediatorResult $loadResult> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.paging.AccessorState)
    {
        androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$3 r0;
        androidx.paging.AccessorState r1;
        androidx.paging.LoadType $r2, $r6;
        androidx.paging.LoadState$Error $r3;
        androidx.paging.RemoteMediator$MediatorResult $r4;
        androidx.paging.RemoteMediator$MediatorResult$Error $r5;
        java.lang.Throwable $r7;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$3;

        r1 := @parameter0: androidx.paging.AccessorState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = r0.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$3: androidx.paging.LoadType $loadType>;

        virtualinvoke r1.<androidx.paging.AccessorState: void clearPendingRequest(androidx.paging.LoadType)>($r2);

        $r6 = r0.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$3: androidx.paging.LoadType $loadType>;

        $r3 = new androidx.paging.LoadState$Error;

        $r4 = r0.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$3: androidx.paging.RemoteMediator$MediatorResult $loadResult>;

        $r5 = (androidx.paging.RemoteMediator$MediatorResult$Error) $r4;

        $r7 = virtualinvoke $r5.<androidx.paging.RemoteMediator$MediatorResult$Error: java.lang.Throwable getThrowable()>();

        specialinvoke $r3.<androidx.paging.LoadState$Error: void <init>(java.lang.Throwable)>($r7);

        virtualinvoke r1.<androidx.paging.AccessorState: void setError(androidx.paging.LoadType,androidx.paging.LoadState$Error)>($r6, $r3);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$3 r0;
        java.lang.Object r1;
        androidx.paging.AccessorState $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$3;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.paging.AccessorState) r1;

        virtualinvoke r0.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$3: void invoke(androidx.paging.AccessorState)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1
<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1: java.lang.Object L$0>
<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1: int label>
<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1: androidx.paging.RemoteMediatorAccessImpl this$0>
    void <init>(androidx.paging.RemoteMediatorAccessImpl, kotlin.coroutines.Continuation)
    {
        androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1 r0;
        androidx.paging.RemoteMediatorAccessImpl $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1;

        $r1 := @parameter0: androidx.paging.RemoteMediatorAccessImpl;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1: androidx.paging.RemoteMediatorAccessImpl this$0> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(1, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1 r0;
        java.lang.Object $r1, r5, $r6, $r7, $r8, $r28, $r31;
        kotlin.Pair r2, r29;
        androidx.paging.PagingState r3;
        androidx.paging.RemoteMediator$MediatorResult r4;
        int $i0;
        boolean $z0, $z1;
        androidx.paging.RemoteMediatorAccessImpl $r9, $r13, $r18, $r24;
        androidx.paging.RemoteMediator $r10;
        kotlin.coroutines.Continuation $r11;
        kotlin.Unit $r12;
        androidx.paging.AccessorStateHolder $r14, $r19, $r25;
        androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$3 $r15;
        kotlin.jvm.functions.Function1 $r16, $r21, $r27;
        androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$2 $r20;
        java.lang.IllegalStateException $r23;
        androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$1 $r26;
        androidx.paging.LoadType r30;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1;

        $r1 := @parameter0: java.lang.Object;

        r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label4;
            default: goto label8;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label2:
        $r24 = r0.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1: androidx.paging.RemoteMediatorAccessImpl this$0>;

        $r25 = staticinvoke <androidx.paging.RemoteMediatorAccessImpl: androidx.paging.AccessorStateHolder access$getAccessorState$p(androidx.paging.RemoteMediatorAccessImpl)>($r24);

        $r26 = <androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$1: androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$1 INSTANCE>;

        $r27 = (kotlin.jvm.functions.Function1) $r26;

        $r28 = virtualinvoke $r25.<androidx.paging.AccessorStateHolder: java.lang.Object use(kotlin.jvm.functions.Function1)>($r27);

        r29 = (kotlin.Pair) $r28;

        if r29 != null goto label3;

        goto label7;

     label3:
        r2 = r29;

        $r7 = virtualinvoke r2.<kotlin.Pair: java.lang.Object component1()>();

        r30 = (androidx.paging.LoadType) $r7;

        $r8 = virtualinvoke r2.<kotlin.Pair: java.lang.Object component2()>();

        r3 = (androidx.paging.PagingState) $r8;

        $r9 = r0.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1: androidx.paging.RemoteMediatorAccessImpl this$0>;

        $r10 = staticinvoke <androidx.paging.RemoteMediatorAccessImpl: androidx.paging.RemoteMediator access$getRemoteMediator$p(androidx.paging.RemoteMediatorAccessImpl)>($r9);

        $r11 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1: java.lang.Object L$0> = r30;

        r0.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1: int label> = 1;

        $r31 = virtualinvoke $r10.<androidx.paging.RemoteMediator: java.lang.Object load(androidx.paging.LoadType,androidx.paging.PagingState,kotlin.coroutines.Continuation)>(r30, r3, $r11);

        if $r31 != r5 goto label5;

        return r5;

     label4:
        $r6 = r0.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1: java.lang.Object L$0>;

        r30 = (androidx.paging.LoadType) $r6;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r31 = $r1;

     label5:
        r4 = (androidx.paging.RemoteMediator$MediatorResult) $r31;

        $z0 = r4 instanceof androidx.paging.RemoteMediator$MediatorResult$Success;

        if $z0 == 0 goto label6;

        $r18 = r0.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1: androidx.paging.RemoteMediatorAccessImpl this$0>;

        $r19 = staticinvoke <androidx.paging.RemoteMediatorAccessImpl: androidx.paging.AccessorStateHolder access$getAccessorState$p(androidx.paging.RemoteMediatorAccessImpl)>($r18);

        $r20 = new androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$2;

        specialinvoke $r20.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$2: void <init>(androidx.paging.LoadType,androidx.paging.RemoteMediator$MediatorResult)>(r30, r4);

        $r21 = (kotlin.jvm.functions.Function1) $r20;

        virtualinvoke $r19.<androidx.paging.AccessorStateHolder: java.lang.Object use(kotlin.jvm.functions.Function1)>($r21);

        goto label2;

     label6:
        $z1 = r4 instanceof androidx.paging.RemoteMediator$MediatorResult$Error;

        if $z1 == 0 goto label2;

        $r13 = r0.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1: androidx.paging.RemoteMediatorAccessImpl this$0>;

        $r14 = staticinvoke <androidx.paging.RemoteMediatorAccessImpl: androidx.paging.AccessorStateHolder access$getAccessorState$p(androidx.paging.RemoteMediatorAccessImpl)>($r13);

        $r15 = new androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$3;

        specialinvoke $r15.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1$3: void <init>(androidx.paging.LoadType,androidx.paging.RemoteMediator$MediatorResult)>(r30, r4);

        $r16 = (kotlin.jvm.functions.Function1) $r15;

        virtualinvoke $r14.<androidx.paging.AccessorStateHolder: java.lang.Object use(kotlin.jvm.functions.Function1)>($r16);

        goto label2;

     label7:
        $r12 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r12;

     label8:
        $r23 = new java.lang.IllegalStateException;

        specialinvoke $r23.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r23;
    }

    public final kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
    {
        androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1 r0, $r2;
        kotlin.coroutines.Continuation $r1, $r4;
        androidx.paging.RemoteMediatorAccessImpl $r3;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

        $r2 = new androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1;

        $r3 = r0.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1: androidx.paging.RemoteMediatorAccessImpl this$0>;

        specialinvoke $r2.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1: void <init>(androidx.paging.RemoteMediatorAccessImpl,kotlin.coroutines.Continuation)>($r3, $r1);

        $r4 = (kotlin.coroutines.Continuation) $r2;

        return $r4;
    }

    public final java.lang.Object invoke(kotlin.coroutines.Continuation)
    {
        androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1 r0, $r4;
        kotlin.coroutines.Continuation r1, $r2;
        kotlin.Unit $r3;
        java.lang.Object $r5;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1;

        r1 := @parameter0: kotlin.coroutines.Continuation;

        $r2 = virtualinvoke r0.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)>(r1);

        $r4 = (androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1) $r2;

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r5 = virtualinvoke $r4.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1: java.lang.Object invokeSuspend(java.lang.Object)>($r3);

        return $r5;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1 r0;
        java.lang.Object r1, $r3;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (kotlin.coroutines.Continuation) r1;

        $r3 = virtualinvoke r0.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1: java.lang.Object invoke(kotlin.coroutines.Continuation)>($r2);

        return $r3;
    }

androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1
<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1: int label>
<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1: androidx.paging.RemoteMediatorAccessImpl this$0>
    void <init>(androidx.paging.RemoteMediatorAccessImpl, kotlin.coroutines.Continuation)
    {
        androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1 r0;
        androidx.paging.RemoteMediatorAccessImpl $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1;

        $r1 := @parameter0: androidx.paging.RemoteMediatorAccessImpl;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1: androidx.paging.RemoteMediatorAccessImpl this$0> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1 r0;
        java.lang.Object $r1, r2, $r10;
        int $i0;
        kotlin.Unit $r3;
        androidx.paging.RemoteMediatorAccessImpl $r4, $r7;
        androidx.paging.SingleRunner $r5;
        androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1 $r6;
        kotlin.jvm.functions.Function1 $r8;
        kotlin.coroutines.Continuation $r9;
        java.lang.IllegalStateException $r11;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1: androidx.paging.RemoteMediatorAccessImpl this$0>;

        $r5 = staticinvoke <androidx.paging.RemoteMediatorAccessImpl: androidx.paging.SingleRunner access$getIsolationRunner$p(androidx.paging.RemoteMediatorAccessImpl)>($r4);

        $r6 = new androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1;

        $r7 = r0.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1: androidx.paging.RemoteMediatorAccessImpl this$0>;

        specialinvoke $r6.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1$1: void <init>(androidx.paging.RemoteMediatorAccessImpl,kotlin.coroutines.Continuation)>($r7, null);

        $r8 = (kotlin.jvm.functions.Function1) $r6;

        $r9 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1: int label> = 1;

        $r10 = virtualinvoke $r5.<androidx.paging.SingleRunner: java.lang.Object runInIsolation(int,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>(1, $r8, $r9);

        if $r10 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;

     label4:
        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r11;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r5;
        androidx.paging.RemoteMediatorAccessImpl $r4;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1;

        $r4 = r0.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1: androidx.paging.RemoteMediatorAccessImpl this$0>;

        specialinvoke $r3.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1: void <init>(androidx.paging.RemoteMediatorAccessImpl,kotlin.coroutines.Continuation)>($r4, $r2);

        $r5 = (kotlin.coroutines.Continuation) $r3;

        return $r5;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.paging.RemoteMediatorAccessImpl$launchBoundary$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$1$1
<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$1$1: androidx.paging.RemoteMediator$MediatorResult $loadResult>
    void <init>(androidx.paging.RemoteMediator$MediatorResult)
    {
        androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$1$1 r0;
        androidx.paging.RemoteMediator$MediatorResult $r1;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$1$1;

        $r1 := @parameter0: androidx.paging.RemoteMediator$MediatorResult;

        r0.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$1$1: androidx.paging.RemoteMediator$MediatorResult $loadResult> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Boolean invoke(androidx.paging.AccessorState)
    {
        androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$1$1 r0;
        androidx.paging.AccessorState r1;
        androidx.paging.LoadType $r2, $r6, $r8, $r9, $r10, $r14, $r16, $r18;
        androidx.paging.RemoteMediator$MediatorResult $r3;
        androidx.paging.RemoteMediator$MediatorResult$Success $r4;
        boolean $z0, $z1;
        androidx.paging.AccessorState$BlockState $r5, $r7, $r13, $r15, $r17;
        kotlin.Pair $r11;
        java.lang.Boolean $r12;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$1$1;

        r1 := @parameter0: androidx.paging.AccessorState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = <androidx.paging.LoadType: androidx.paging.LoadType REFRESH>;

        virtualinvoke r1.<androidx.paging.AccessorState: void clearPendingRequest(androidx.paging.LoadType)>($r2);

        $r3 = r0.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$1$1: androidx.paging.RemoteMediator$MediatorResult $loadResult>;

        $r4 = (androidx.paging.RemoteMediator$MediatorResult$Success) $r3;

        $z0 = virtualinvoke $r4.<androidx.paging.RemoteMediator$MediatorResult$Success: boolean endOfPaginationReached()>();

        if $z0 == 0 goto label1;

        $r14 = <androidx.paging.LoadType: androidx.paging.LoadType REFRESH>;

        $r13 = <androidx.paging.AccessorState$BlockState: androidx.paging.AccessorState$BlockState COMPLETED>;

        virtualinvoke r1.<androidx.paging.AccessorState: void setBlockState(androidx.paging.LoadType,androidx.paging.AccessorState$BlockState)>($r14, $r13);

        $r16 = <androidx.paging.LoadType: androidx.paging.LoadType PREPEND>;

        $r15 = <androidx.paging.AccessorState$BlockState: androidx.paging.AccessorState$BlockState COMPLETED>;

        virtualinvoke r1.<androidx.paging.AccessorState: void setBlockState(androidx.paging.LoadType,androidx.paging.AccessorState$BlockState)>($r16, $r15);

        $r18 = <androidx.paging.LoadType: androidx.paging.LoadType APPEND>;

        $r17 = <androidx.paging.AccessorState$BlockState: androidx.paging.AccessorState$BlockState COMPLETED>;

        virtualinvoke r1.<androidx.paging.AccessorState: void setBlockState(androidx.paging.LoadType,androidx.paging.AccessorState$BlockState)>($r18, $r17);

        virtualinvoke r1.<androidx.paging.AccessorState: void clearPendingRequests()>();

        goto label2;

     label1:
        $r6 = <androidx.paging.LoadType: androidx.paging.LoadType PREPEND>;

        $r5 = <androidx.paging.AccessorState$BlockState: androidx.paging.AccessorState$BlockState UNBLOCKED>;

        virtualinvoke r1.<androidx.paging.AccessorState: void setBlockState(androidx.paging.LoadType,androidx.paging.AccessorState$BlockState)>($r6, $r5);

        $r8 = <androidx.paging.LoadType: androidx.paging.LoadType APPEND>;

        $r7 = <androidx.paging.AccessorState$BlockState: androidx.paging.AccessorState$BlockState UNBLOCKED>;

        virtualinvoke r1.<androidx.paging.AccessorState: void setBlockState(androidx.paging.LoadType,androidx.paging.AccessorState$BlockState)>($r8, $r7);

     label2:
        $r9 = <androidx.paging.LoadType: androidx.paging.LoadType PREPEND>;

        virtualinvoke r1.<androidx.paging.AccessorState: void setError(androidx.paging.LoadType,androidx.paging.LoadState$Error)>($r9, null);

        $r10 = <androidx.paging.LoadType: androidx.paging.LoadType APPEND>;

        virtualinvoke r1.<androidx.paging.AccessorState: void setError(androidx.paging.LoadType,androidx.paging.LoadState$Error)>($r10, null);

        $r11 = virtualinvoke r1.<androidx.paging.AccessorState: kotlin.Pair getPendingBoundary()>();

        if $r11 == null goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        return $r12;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$1$1 r0;
        java.lang.Object r1;
        androidx.paging.AccessorState $r2;
        java.lang.Boolean $r3;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$1$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.paging.AccessorState) r1;

        $r3 = virtualinvoke r0.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$1$1: java.lang.Boolean invoke(androidx.paging.AccessorState)>($r2);

        return $r3;
    }

androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$1$2
<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$1$2: androidx.paging.RemoteMediator$MediatorResult $loadResult>
    void <init>(androidx.paging.RemoteMediator$MediatorResult)
    {
        androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$1$2 r0;
        androidx.paging.RemoteMediator$MediatorResult $r1;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$1$2;

        $r1 := @parameter0: androidx.paging.RemoteMediator$MediatorResult;

        r0.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$1$2: androidx.paging.RemoteMediator$MediatorResult $loadResult> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Boolean invoke(androidx.paging.AccessorState)
    {
        androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$1$2 r0;
        androidx.paging.AccessorState r1;
        androidx.paging.LoadType $r2, $r6;
        androidx.paging.LoadState$Error $r3;
        androidx.paging.RemoteMediator$MediatorResult $r4;
        androidx.paging.RemoteMediator$MediatorResult$Error $r5;
        java.lang.Throwable $r7;
        kotlin.Pair $r8;
        java.lang.Boolean $r9;
        boolean $z0;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$1$2;

        r1 := @parameter0: androidx.paging.AccessorState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = <androidx.paging.LoadType: androidx.paging.LoadType REFRESH>;

        virtualinvoke r1.<androidx.paging.AccessorState: void clearPendingRequest(androidx.paging.LoadType)>($r2);

        $r6 = <androidx.paging.LoadType: androidx.paging.LoadType REFRESH>;

        $r3 = new androidx.paging.LoadState$Error;

        $r4 = r0.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$1$2: androidx.paging.RemoteMediator$MediatorResult $loadResult>;

        $r5 = (androidx.paging.RemoteMediator$MediatorResult$Error) $r4;

        $r7 = virtualinvoke $r5.<androidx.paging.RemoteMediator$MediatorResult$Error: java.lang.Throwable getThrowable()>();

        specialinvoke $r3.<androidx.paging.LoadState$Error: void <init>(java.lang.Throwable)>($r7);

        virtualinvoke r1.<androidx.paging.AccessorState: void setError(androidx.paging.LoadType,androidx.paging.LoadState$Error)>($r6, $r3);

        $r8 = virtualinvoke r1.<androidx.paging.AccessorState: kotlin.Pair getPendingBoundary()>();

        if $r8 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r9;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$1$2 r0;
        java.lang.Object r1;
        androidx.paging.AccessorState $r2;
        java.lang.Boolean $r3;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$1$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.paging.AccessorState) r1;

        $r3 = virtualinvoke r0.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$1$2: java.lang.Boolean invoke(androidx.paging.AccessorState)>($r2);

        return $r3;
    }

androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$pendingPagingState$1
<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$pendingPagingState$1: androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$pendingPagingState$1 INSTANCE>
    void <init>()
    {
        androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$pendingPagingState$1 r0;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$pendingPagingState$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final androidx.paging.PagingState invoke(androidx.paging.AccessorState)
    {
        androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$pendingPagingState$1 r0;
        androidx.paging.AccessorState r1;
        androidx.paging.PagingState $r2;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$pendingPagingState$1;

        r1 := @parameter0: androidx.paging.AccessorState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = virtualinvoke r1.<androidx.paging.AccessorState: androidx.paging.PagingState getPendingRefresh()>();

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$pendingPagingState$1 r0;
        java.lang.Object r1;
        androidx.paging.AccessorState $r2;
        androidx.paging.PagingState $r3;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$pendingPagingState$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.paging.AccessorState) r1;

        $r3 = virtualinvoke r0.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$pendingPagingState$1: androidx.paging.PagingState invoke(androidx.paging.AccessorState)>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$pendingPagingState$1 $r0;

        $r0 = new androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$pendingPagingState$1;

        specialinvoke $r0.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$pendingPagingState$1: void <init>()>();

        <androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$pendingPagingState$1: androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$pendingPagingState$1 INSTANCE> = $r0;

        return;
    }

androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1
<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1: java.lang.Object L$0>
<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1: java.lang.Object L$1>
<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1: int label>
<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1: androidx.paging.RemoteMediatorAccessImpl this$0>
<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1: kotlin.jvm.internal.Ref$BooleanRef $launchAppendPrepend>
    void <init>(androidx.paging.RemoteMediatorAccessImpl, kotlin.jvm.internal.Ref$BooleanRef, kotlin.coroutines.Continuation)
    {
        androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1 r0;
        androidx.paging.RemoteMediatorAccessImpl $r1;
        kotlin.jvm.internal.Ref$BooleanRef $r2;
        kotlin.coroutines.Continuation $r3;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1;

        $r1 := @parameter0: androidx.paging.RemoteMediatorAccessImpl;

        $r2 := @parameter1: kotlin.jvm.internal.Ref$BooleanRef;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        r0.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1: androidx.paging.RemoteMediatorAccessImpl this$0> = $r1;

        r0.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1: kotlin.jvm.internal.Ref$BooleanRef $launchAppendPrepend> = $r2;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(1, $r3);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1 r0;
        java.lang.Object $r1, r8, $r9, $r10, $r15, $r20, $r27, $r33;
        androidx.paging.PagingState r2, r3, r4, r5;
        boolean z0, z1, $z2, $z3, $z6;
        androidx.paging.RemoteMediator$MediatorResult r6, r7;
        int $i0;
        androidx.paging.AccessorStateHolder $r12, $r17, $r24;
        kotlin.jvm.functions.Function1 $r14, $r19, $r26;
        java.lang.Boolean $r16, $r21;
        kotlin.jvm.internal.Ref$BooleanRef $r22, r32;
        androidx.paging.RemoteMediatorAccessImpl $r23, r31;
        androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$pendingPagingState$1 $r25;
        androidx.paging.RemoteMediator $r28;
        androidx.paging.LoadType $r29;
        kotlin.Unit $r34;
        androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$1$1 r35;
        androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$1$2 r36;
        kotlin.NoWhenBranchMatchedException r37;
        java.lang.IllegalStateException r38;
        kotlin.coroutines.Continuation r39;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1;

        $r1 := @parameter0: java.lang.Object;

        r8 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label3;
            default: goto label9;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r23 = r0.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1: androidx.paging.RemoteMediatorAccessImpl this$0>;

        $r24 = staticinvoke <androidx.paging.RemoteMediatorAccessImpl: androidx.paging.AccessorStateHolder access$getAccessorState$p(androidx.paging.RemoteMediatorAccessImpl)>($r23);

        $r25 = <androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$pendingPagingState$1: androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$pendingPagingState$1 INSTANCE>;

        $r26 = (kotlin.jvm.functions.Function1) $r25;

        $r27 = virtualinvoke $r24.<androidx.paging.AccessorStateHolder: java.lang.Object use(kotlin.jvm.functions.Function1)>($r26);

        r2 = (androidx.paging.PagingState) $r27;

        r3 = r2;

        if r3 != null goto label2;

        goto label8;

     label2:
        r4 = r3;

        r31 = r0.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1: androidx.paging.RemoteMediatorAccessImpl this$0>;

        r32 = r0.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1: kotlin.jvm.internal.Ref$BooleanRef $launchAppendPrepend>;

        z0 = 0;

        z1 = 0;

        r5 = r4;

        $r28 = staticinvoke <androidx.paging.RemoteMediatorAccessImpl: androidx.paging.RemoteMediator access$getRemoteMediator$p(androidx.paging.RemoteMediatorAccessImpl)>(r31);

        $r29 = <androidx.paging.LoadType: androidx.paging.LoadType REFRESH>;

        r0.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1: java.lang.Object L$0> = r31;

        r0.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1: java.lang.Object L$1> = r32;

        r0.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1: int label> = 1;

        r39 = (kotlin.coroutines.Continuation) r0;

        $r33 = virtualinvoke $r28.<androidx.paging.RemoteMediator: java.lang.Object load(androidx.paging.LoadType,androidx.paging.PagingState,kotlin.coroutines.Continuation)>($r29, r2, r39);

        if $r33 != r8 goto label4;

        return r8;

     label3:
        $r9 = r0.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1: java.lang.Object L$1>;

        r32 = (kotlin.jvm.internal.Ref$BooleanRef) $r9;

        $r10 = r0.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1: java.lang.Object L$0>;

        r31 = (androidx.paging.RemoteMediatorAccessImpl) $r10;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r33 = $r1;

     label4:
        r6 = (androidx.paging.RemoteMediator$MediatorResult) $r33;

        $r22 = r32;

        r7 = r6;

        $z2 = r7 instanceof androidx.paging.RemoteMediator$MediatorResult$Success;

        if $z2 == 0 goto label5;

        $r17 = staticinvoke <androidx.paging.RemoteMediatorAccessImpl: androidx.paging.AccessorStateHolder access$getAccessorState$p(androidx.paging.RemoteMediatorAccessImpl)>(r31);

        r35 = new androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$1$1;

        specialinvoke r35.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$1$1: void <init>(androidx.paging.RemoteMediator$MediatorResult)>(r6);

        $r19 = (kotlin.jvm.functions.Function1) r35;

        $r20 = virtualinvoke $r17.<androidx.paging.AccessorStateHolder: java.lang.Object use(kotlin.jvm.functions.Function1)>($r19);

        $r21 = (java.lang.Boolean) $r20;

        $z6 = virtualinvoke $r21.<java.lang.Boolean: boolean booleanValue()>();

        goto label7;

     label5:
        $z3 = r7 instanceof androidx.paging.RemoteMediator$MediatorResult$Error;

        if $z3 == 0 goto label6;

        $r12 = staticinvoke <androidx.paging.RemoteMediatorAccessImpl: androidx.paging.AccessorStateHolder access$getAccessorState$p(androidx.paging.RemoteMediatorAccessImpl)>(r31);

        r36 = new androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$1$2;

        specialinvoke r36.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1$1$2: void <init>(androidx.paging.RemoteMediator$MediatorResult)>(r6);

        $r14 = (kotlin.jvm.functions.Function1) r36;

        $r15 = virtualinvoke $r12.<androidx.paging.AccessorStateHolder: java.lang.Object use(kotlin.jvm.functions.Function1)>($r14);

        $r16 = (java.lang.Boolean) $r15;

        $z6 = virtualinvoke $r16.<java.lang.Boolean: boolean booleanValue()>();

        goto label7;

     label6:
        r37 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke r37.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw r37;

     label7:
        $r22.<kotlin.jvm.internal.Ref$BooleanRef: boolean element> = $z6;

     label8:
        $r34 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r34;

     label9:
        r38 = new java.lang.IllegalStateException;

        specialinvoke r38.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r38;
    }

    public final kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
    {
        androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1 r0, $r2;
        kotlin.coroutines.Continuation $r1, $r5;
        kotlin.jvm.internal.Ref$BooleanRef $r3;
        androidx.paging.RemoteMediatorAccessImpl $r4;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

        $r2 = new androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1;

        $r4 = r0.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1: androidx.paging.RemoteMediatorAccessImpl this$0>;

        $r3 = r0.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1: kotlin.jvm.internal.Ref$BooleanRef $launchAppendPrepend>;

        specialinvoke $r2.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1: void <init>(androidx.paging.RemoteMediatorAccessImpl,kotlin.jvm.internal.Ref$BooleanRef,kotlin.coroutines.Continuation)>($r4, $r3, $r1);

        $r5 = (kotlin.coroutines.Continuation) $r2;

        return $r5;
    }

    public final java.lang.Object invoke(kotlin.coroutines.Continuation)
    {
        androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1 r0, $r4;
        kotlin.coroutines.Continuation r1, $r2;
        kotlin.Unit $r3;
        java.lang.Object $r5;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1;

        r1 := @parameter0: kotlin.coroutines.Continuation;

        $r2 = virtualinvoke r0.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)>(r1);

        $r4 = (androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1) $r2;

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r5 = virtualinvoke $r4.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1: java.lang.Object invokeSuspend(java.lang.Object)>($r3);

        return $r5;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1 r0;
        java.lang.Object r1, $r3;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (kotlin.coroutines.Continuation) r1;

        $r3 = virtualinvoke r0.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1: java.lang.Object invoke(kotlin.coroutines.Continuation)>($r2);

        return $r3;
    }

androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1
<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1: java.lang.Object L$0>
<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1: int label>
<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1: androidx.paging.RemoteMediatorAccessImpl this$0>
    void <init>(androidx.paging.RemoteMediatorAccessImpl, kotlin.coroutines.Continuation)
    {
        androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1 r0;
        androidx.paging.RemoteMediatorAccessImpl $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1;

        $r1 := @parameter0: androidx.paging.RemoteMediatorAccessImpl;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1: androidx.paging.RemoteMediatorAccessImpl this$0> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1 r0;
        java.lang.Object $r1, r2, $r3, $r13;
        int $i0;
        boolean $z0;
        kotlin.Unit $r4;
        androidx.paging.RemoteMediatorAccessImpl $r5, $r7, $r10;
        kotlin.jvm.internal.Ref$BooleanRef $r6, r15;
        androidx.paging.SingleRunner $r8;
        androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1 $r9;
        kotlin.jvm.functions.Function1 $r11;
        kotlin.coroutines.Continuation $r12;
        java.lang.IllegalStateException $r14;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label5;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r6 = new kotlin.jvm.internal.Ref$BooleanRef;

        specialinvoke $r6.<kotlin.jvm.internal.Ref$BooleanRef: void <init>()>();

        r15 = $r6;

        $r7 = r0.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1: androidx.paging.RemoteMediatorAccessImpl this$0>;

        $r8 = staticinvoke <androidx.paging.RemoteMediatorAccessImpl: androidx.paging.SingleRunner access$getIsolationRunner$p(androidx.paging.RemoteMediatorAccessImpl)>($r7);

        $r9 = new androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1;

        $r10 = r0.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1: androidx.paging.RemoteMediatorAccessImpl this$0>;

        specialinvoke $r9.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1$1: void <init>(androidx.paging.RemoteMediatorAccessImpl,kotlin.jvm.internal.Ref$BooleanRef,kotlin.coroutines.Continuation)>($r10, r15, null);

        $r11 = (kotlin.jvm.functions.Function1) $r9;

        $r12 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1: java.lang.Object L$0> = r15;

        r0.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1: int label> = 1;

        $r13 = virtualinvoke $r8.<androidx.paging.SingleRunner: java.lang.Object runInIsolation(int,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>(2, $r11, $r12);

        if $r13 != r2 goto label3;

        return r2;

     label2:
        $r3 = r0.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1: java.lang.Object L$0>;

        r15 = (kotlin.jvm.internal.Ref$BooleanRef) $r3;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $z0 = r15.<kotlin.jvm.internal.Ref$BooleanRef: boolean element>;

        if $z0 == 0 goto label4;

        $r5 = r0.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1: androidx.paging.RemoteMediatorAccessImpl this$0>;

        staticinvoke <androidx.paging.RemoteMediatorAccessImpl: void access$launchBoundary(androidx.paging.RemoteMediatorAccessImpl)>($r5);

     label4:
        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;

     label5:
        $r14 = new java.lang.IllegalStateException;

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r14;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r5;
        androidx.paging.RemoteMediatorAccessImpl $r4;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1;

        $r4 = r0.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1: androidx.paging.RemoteMediatorAccessImpl this$0>;

        specialinvoke $r3.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1: void <init>(androidx.paging.RemoteMediatorAccessImpl,kotlin.coroutines.Continuation)>($r4, $r2);

        $r5 = (kotlin.coroutines.Continuation) $r3;

        return $r5;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.paging.RemoteMediatorAccessImpl$launchRefresh$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.paging.RemoteMediatorAccessImpl$requestLoad$newRequest$1
<androidx.paging.RemoteMediatorAccessImpl$requestLoad$newRequest$1: androidx.paging.LoadType $loadType>
<androidx.paging.RemoteMediatorAccessImpl$requestLoad$newRequest$1: androidx.paging.PagingState $pagingState>
    void <init>(androidx.paging.LoadType, androidx.paging.PagingState)
    {
        androidx.paging.RemoteMediatorAccessImpl$requestLoad$newRequest$1 r0;
        androidx.paging.LoadType $r1;
        androidx.paging.PagingState $r2;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$requestLoad$newRequest$1;

        $r1 := @parameter0: androidx.paging.LoadType;

        $r2 := @parameter1: androidx.paging.PagingState;

        r0.<androidx.paging.RemoteMediatorAccessImpl$requestLoad$newRequest$1: androidx.paging.LoadType $loadType> = $r1;

        r0.<androidx.paging.RemoteMediatorAccessImpl$requestLoad$newRequest$1: androidx.paging.PagingState $pagingState> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Boolean invoke(androidx.paging.AccessorState)
    {
        androidx.paging.RemoteMediatorAccessImpl$requestLoad$newRequest$1 r0;
        androidx.paging.AccessorState r1;
        androidx.paging.PagingState $r2;
        androidx.paging.LoadType $r3;
        boolean $z0;
        java.lang.Boolean $r4;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$requestLoad$newRequest$1;

        r1 := @parameter0: androidx.paging.AccessorState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r3 = r0.<androidx.paging.RemoteMediatorAccessImpl$requestLoad$newRequest$1: androidx.paging.LoadType $loadType>;

        $r2 = r0.<androidx.paging.RemoteMediatorAccessImpl$requestLoad$newRequest$1: androidx.paging.PagingState $pagingState>;

        $z0 = virtualinvoke r1.<androidx.paging.AccessorState: boolean add(androidx.paging.LoadType,androidx.paging.PagingState)>($r3, $r2);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r4;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.paging.RemoteMediatorAccessImpl$requestLoad$newRequest$1 r0;
        java.lang.Object r1;
        androidx.paging.AccessorState $r2;
        java.lang.Boolean $r3;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$requestLoad$newRequest$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.paging.AccessorState) r1;

        $r3 = virtualinvoke r0.<androidx.paging.RemoteMediatorAccessImpl$requestLoad$newRequest$1: java.lang.Boolean invoke(androidx.paging.AccessorState)>($r2);

        return $r3;
    }

androidx.paging.RemoteMediatorAccessImpl$retryFailed$1
<androidx.paging.RemoteMediatorAccessImpl$retryFailed$1: java.util.List $toBeStarted>
    void <init>(java.util.List)
    {
        androidx.paging.RemoteMediatorAccessImpl$retryFailed$1 r0;
        java.util.List $r1;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$retryFailed$1;

        $r1 := @parameter0: java.util.List;

        r0.<androidx.paging.RemoteMediatorAccessImpl$retryFailed$1: java.util.List $toBeStarted> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.paging.AccessorState)
    {
        androidx.paging.RemoteMediatorAccessImpl$retryFailed$1 r0;
        androidx.paging.AccessorState r1;
        androidx.paging.LoadStates r2;
        boolean z0, $z1, $z5;
        androidx.paging.LoadState $r3, $r4, $r15;
        androidx.paging.LoadType $r5, $r6, $r8, $r9, $r11, $r14;
        java.util.List $r7, $r10, $r12;
        androidx.paging.AccessorState$BlockState $r13;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$retryFailed$1;

        r1 := @parameter0: androidx.paging.AccessorState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "accessorState");

        r2 = virtualinvoke r1.<androidx.paging.AccessorState: androidx.paging.LoadStates computeLoadStates()>();

        $r3 = virtualinvoke r2.<androidx.paging.LoadStates: androidx.paging.LoadState getRefresh()>();

        z0 = $r3 instanceof androidx.paging.LoadState$Error;

        virtualinvoke r1.<androidx.paging.AccessorState: void clearErrors()>();

        if z0 == 0 goto label1;

        $r12 = r0.<androidx.paging.RemoteMediatorAccessImpl$retryFailed$1: java.util.List $toBeStarted>;

        $r11 = <androidx.paging.LoadType: androidx.paging.LoadType REFRESH>;

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r11);

        $r14 = <androidx.paging.LoadType: androidx.paging.LoadType REFRESH>;

        $r13 = <androidx.paging.AccessorState$BlockState: androidx.paging.AccessorState$BlockState UNBLOCKED>;

        virtualinvoke r1.<androidx.paging.AccessorState: void setBlockState(androidx.paging.LoadType,androidx.paging.AccessorState$BlockState)>($r14, $r13);

     label1:
        $r4 = virtualinvoke r2.<androidx.paging.LoadStates: androidx.paging.LoadState getAppend()>();

        $z1 = $r4 instanceof androidx.paging.LoadState$Error;

        if $z1 == 0 goto label3;

        if z0 != 0 goto label2;

        $r10 = r0.<androidx.paging.RemoteMediatorAccessImpl$retryFailed$1: java.util.List $toBeStarted>;

        $r9 = <androidx.paging.LoadType: androidx.paging.LoadType APPEND>;

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r9);

     label2:
        $r8 = <androidx.paging.LoadType: androidx.paging.LoadType APPEND>;

        virtualinvoke r1.<androidx.paging.AccessorState: void clearPendingRequest(androidx.paging.LoadType)>($r8);

     label3:
        $r15 = virtualinvoke r2.<androidx.paging.LoadStates: androidx.paging.LoadState getPrepend()>();

        $z5 = $r15 instanceof androidx.paging.LoadState$Error;

        if $z5 == 0 goto label5;

        if z0 != 0 goto label4;

        $r7 = r0.<androidx.paging.RemoteMediatorAccessImpl$retryFailed$1: java.util.List $toBeStarted>;

        $r6 = <androidx.paging.LoadType: androidx.paging.LoadType PREPEND>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r6);

     label4:
        $r5 = <androidx.paging.LoadType: androidx.paging.LoadType PREPEND>;

        virtualinvoke r1.<androidx.paging.AccessorState: void clearPendingRequest(androidx.paging.LoadType)>($r5);

     label5:
        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.paging.RemoteMediatorAccessImpl$retryFailed$1 r0;
        java.lang.Object r1;
        androidx.paging.AccessorState $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.paging.RemoteMediatorAccessImpl$retryFailed$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.paging.AccessorState) r1;

        virtualinvoke r0.<androidx.paging.RemoteMediatorAccessImpl$retryFailed$1: void invoke(androidx.paging.AccessorState)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.paging.RemoteMediatorAccessImpl$WhenMappings
<androidx.paging.RemoteMediatorAccessImpl$WhenMappings: int[] $EnumSwitchMapping$0>
    static void <clinit>()
    {
        int[] r0;
        androidx.paging.LoadType[] $r1;
        int $i0, $i1;
        androidx.paging.LoadType $r2;

        $r1 = staticinvoke <androidx.paging.LoadType: androidx.paging.LoadType[] values()>();

        $i0 = lengthof $r1;

        r0 = newarray (int)[$i0];

        $r2 = <androidx.paging.LoadType: androidx.paging.LoadType REFRESH>;

        $i1 = virtualinvoke $r2.<androidx.paging.LoadType: int ordinal()>();

        r0[$i1] = 1;

        <androidx.paging.RemoteMediatorAccessImpl$WhenMappings: int[] $EnumSwitchMapping$0> = r0;

        return;
    }

