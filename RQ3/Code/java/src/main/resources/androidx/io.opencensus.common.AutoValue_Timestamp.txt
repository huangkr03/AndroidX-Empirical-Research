io.opencensus.common.AutoValue_Timestamp
<io.opencensus.common.AutoValue_Timestamp: int nanos>
<io.opencensus.common.AutoValue_Timestamp: long seconds>
    void <init>(long, int)
    {
        io.opencensus.common.AutoValue_Timestamp $r0;
        long $l0;
        int $i1;

        $r0 := @this: io.opencensus.common.AutoValue_Timestamp;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        specialinvoke $r0.<io.opencensus.common.Timestamp: void <init>()>();

        $r0.<io.opencensus.common.AutoValue_Timestamp: long seconds> = $l0;

        $r0.<io.opencensus.common.AutoValue_Timestamp: int nanos> = $i1;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        io.opencensus.common.AutoValue_Timestamp $r0;
        long $l0, $l1;
        java.lang.Object $r1;
        boolean $z0, $z1;
        io.opencensus.common.Timestamp $r2;
        byte $b2;
        int $i3, $i4;

        $r0 := @this: io.opencensus.common.AutoValue_Timestamp;

        $r1 := @parameter0: java.lang.Object;

        $z0 = 1;

        if $r1 != $r0 goto label1;

        return 1;

     label1:
        $z1 = $r1 instanceof io.opencensus.common.Timestamp;

        if $z1 == 0 goto label4;

        $r2 = (io.opencensus.common.Timestamp) $r1;

        $l0 = $r0.<io.opencensus.common.AutoValue_Timestamp: long seconds>;

        $l1 = virtualinvoke $r2.<io.opencensus.common.Timestamp: long getSeconds()>();

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label2;

        $i3 = $r0.<io.opencensus.common.AutoValue_Timestamp: int nanos>;

        $i4 = virtualinvoke $r2.<io.opencensus.common.Timestamp: int getNanos()>();

        if $i3 != $i4 goto label2;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;

     label4:
        return 0;
    }

    public int getNanos()
    {
        io.opencensus.common.AutoValue_Timestamp $r0;
        int i0;

        $r0 := @this: io.opencensus.common.AutoValue_Timestamp;

        i0 = $r0.<io.opencensus.common.AutoValue_Timestamp: int nanos>;

        return i0;
    }

    public long getSeconds()
    {
        io.opencensus.common.AutoValue_Timestamp $r0;
        long l0;

        $r0 := @this: io.opencensus.common.AutoValue_Timestamp;

        l0 = $r0.<io.opencensus.common.AutoValue_Timestamp: long seconds>;

        return l0;
    }

    public int hashCode()
    {
        io.opencensus.common.AutoValue_Timestamp $r0;
        long $l0, $l1;
        int $i2, $i3;

        $r0 := @this: io.opencensus.common.AutoValue_Timestamp;

        $l0 = $r0.<io.opencensus.common.AutoValue_Timestamp: long seconds>;

        $l1 = $l0 >>> 32;

        $l0 = $l0 ^ $l1;

        $i2 = (int) $l0;

        $i2 = $i2 ^ 1000003;

        $i2 = $i2 * 1000003;

        $i3 = $r0.<io.opencensus.common.AutoValue_Timestamp: int nanos>;

        $i2 = $i3 ^ $i2;

        return $i2;
    }

    public java.lang.String toString()
    {
        io.opencensus.common.AutoValue_Timestamp $r0;
        java.lang.StringBuilder $r1;
        long $l0;
        int $i1;
        java.lang.String $r2;

        $r0 := @this: io.opencensus.common.AutoValue_Timestamp;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timestamp{seconds=");

        $l0 = $r0.<io.opencensus.common.AutoValue_Timestamp: long seconds>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", nanos=");

        $i1 = $r0.<io.opencensus.common.AutoValue_Timestamp: int nanos>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

