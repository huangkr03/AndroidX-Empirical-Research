androidx.media3.extractor.ogg.OggExtractor
<androidx.media3.extractor.ogg.OggExtractor: androidx.media3.extractor.ExtractorsFactory FACTORY>
<androidx.media3.extractor.ogg.OggExtractor: int MAX_VERIFICATION_BYTES>
<androidx.media3.extractor.ogg.OggExtractor: androidx.media3.extractor.ExtractorOutput output>
<androidx.media3.extractor.ogg.OggExtractor: androidx.media3.extractor.ogg.StreamReader streamReader>
<androidx.media3.extractor.ogg.OggExtractor: boolean streamReaderInitialized>
    public void <init>()
    {
        androidx.media3.extractor.ogg.OggExtractor r0;

        r0 := @this: androidx.media3.extractor.ogg.OggExtractor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean sniff(androidx.media3.extractor.ExtractorInput) throws java.io.IOException
    {
        androidx.media3.extractor.ogg.OggExtractor r0;
        androidx.media3.extractor.ExtractorInput r1;
        java.lang.Throwable r2, $r3;
        boolean $z0;

        r0 := @this: androidx.media3.extractor.ogg.OggExtractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

     label1:
        $z0 = specialinvoke r0.<androidx.media3.extractor.ogg.OggExtractor: boolean sniffInternal(androidx.media3.extractor.ExtractorInput)>(r1);

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        return 0;

        catch androidx.media3.common.ParserException from label1 to label2 with label3;
    }

    public void init(androidx.media3.extractor.ExtractorOutput)
    {
        androidx.media3.extractor.ogg.OggExtractor r0;
        androidx.media3.extractor.ExtractorOutput r1;

        r0 := @this: androidx.media3.extractor.ogg.OggExtractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorOutput;

        r0.<androidx.media3.extractor.ogg.OggExtractor: androidx.media3.extractor.ExtractorOutput output> = r1;

        return;
    }

    public void seek(long, long)
    {
        androidx.media3.extractor.ogg.OggExtractor r0;
        long l0, l1;
        androidx.media3.extractor.ogg.StreamReader $r1, $r2;

        r0 := @this: androidx.media3.extractor.ogg.OggExtractor;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r1 = r0.<androidx.media3.extractor.ogg.OggExtractor: androidx.media3.extractor.ogg.StreamReader streamReader>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.media3.extractor.ogg.OggExtractor: androidx.media3.extractor.ogg.StreamReader streamReader>;

        virtualinvoke $r2.<androidx.media3.extractor.ogg.StreamReader: void seek(long,long)>(l0, l1);

     label1:
        return;
    }

    public void release()
    {
        androidx.media3.extractor.ogg.OggExtractor r0;

        r0 := @this: androidx.media3.extractor.ogg.OggExtractor;

        return;
    }

    public int read(androidx.media3.extractor.ExtractorInput, androidx.media3.extractor.PositionHolder) throws java.io.IOException
    {
        androidx.media3.extractor.ogg.OggExtractor r0;
        androidx.media3.extractor.ExtractorInput r1;
        androidx.media3.extractor.PositionHolder r2;
        androidx.media3.extractor.TrackOutput r3;
        androidx.media3.extractor.ExtractorOutput $r4, $r8, $r9, $r10;
        androidx.media3.extractor.ogg.StreamReader $r6, $r7, $r11;
        boolean $z0, $z1;
        int $i0;
        androidx.media3.common.ParserException $r12;
        java.lang.Throwable r13;

        r0 := @this: androidx.media3.extractor.ogg.OggExtractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

        r2 := @parameter1: androidx.media3.extractor.PositionHolder;

        $r4 = r0.<androidx.media3.extractor.ogg.OggExtractor: androidx.media3.extractor.ExtractorOutput output>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r4);

        $r6 = r0.<androidx.media3.extractor.ogg.OggExtractor: androidx.media3.extractor.ogg.StreamReader streamReader>;

        if $r6 != null goto label2;

        $z1 = specialinvoke r0.<androidx.media3.extractor.ogg.OggExtractor: boolean sniffInternal(androidx.media3.extractor.ExtractorInput)>(r1);

        if $z1 != 0 goto label1;

        $r12 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedContainer(java.lang.String,java.lang.Throwable)>("Failed to determine bitstream type", null);

        r13 = (java.lang.Throwable) $r12;

        throw r13;

     label1:
        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void resetPeekPosition()>();

     label2:
        $z0 = r0.<androidx.media3.extractor.ogg.OggExtractor: boolean streamReaderInitialized>;

        if $z0 != 0 goto label3;

        $r8 = r0.<androidx.media3.extractor.ogg.OggExtractor: androidx.media3.extractor.ExtractorOutput output>;

        r3 = interfaceinvoke $r8.<androidx.media3.extractor.ExtractorOutput: androidx.media3.extractor.TrackOutput track(int,int)>(0, 1);

        $r9 = r0.<androidx.media3.extractor.ogg.OggExtractor: androidx.media3.extractor.ExtractorOutput output>;

        interfaceinvoke $r9.<androidx.media3.extractor.ExtractorOutput: void endTracks()>();

        $r11 = r0.<androidx.media3.extractor.ogg.OggExtractor: androidx.media3.extractor.ogg.StreamReader streamReader>;

        $r10 = r0.<androidx.media3.extractor.ogg.OggExtractor: androidx.media3.extractor.ExtractorOutput output>;

        virtualinvoke $r11.<androidx.media3.extractor.ogg.StreamReader: void init(androidx.media3.extractor.ExtractorOutput,androidx.media3.extractor.TrackOutput)>($r10, r3);

        r0.<androidx.media3.extractor.ogg.OggExtractor: boolean streamReaderInitialized> = 1;

     label3:
        $r7 = r0.<androidx.media3.extractor.ogg.OggExtractor: androidx.media3.extractor.ogg.StreamReader streamReader>;

        $i0 = virtualinvoke $r7.<androidx.media3.extractor.ogg.StreamReader: int read(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder)>(r1, r2);

        return $i0;
    }

    private boolean sniffInternal(androidx.media3.extractor.ExtractorInput) throws java.io.IOException
    {
        androidx.media3.extractor.ogg.OggExtractor r0;
        androidx.media3.extractor.ExtractorInput r1;
        androidx.media3.extractor.ogg.OggPageHeader r2, $r4;
        int i0, $i1, $i2, $i3;
        androidx.media3.common.util.ParsableByteArray r3, $r5, $r7, $r8, $r9;
        boolean $z0, $z1, $z2, $z3;
        byte[] $r6;
        androidx.media3.extractor.ogg.OpusReader $r10;
        androidx.media3.extractor.ogg.VorbisReader $r11;
        androidx.media3.extractor.ogg.FlacReader $r12;

        r0 := @this: androidx.media3.extractor.ogg.OggExtractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

        $r4 = new androidx.media3.extractor.ogg.OggPageHeader;

        specialinvoke $r4.<androidx.media3.extractor.ogg.OggPageHeader: void <init>()>();

        r2 = $r4;

        $z0 = virtualinvoke r2.<androidx.media3.extractor.ogg.OggPageHeader: boolean populate(androidx.media3.extractor.ExtractorInput,boolean)>(r1, 1);

        if $z0 == 0 goto label1;

        $i1 = r2.<androidx.media3.extractor.ogg.OggPageHeader: int type>;

        $i2 = $i1 & 2;

        if $i2 == 2 goto label2;

     label1:
        return 0;

     label2:
        $i3 = r2.<androidx.media3.extractor.ogg.OggPageHeader: int bodySize>;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i3, 8);

        $r5 = new androidx.media3.common.util.ParsableByteArray;

        specialinvoke $r5.<androidx.media3.common.util.ParsableByteArray: void <init>(int)>(i0);

        r3 = $r5;

        $r6 = virtualinvoke r3.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void peekFully(byte[],int,int)>($r6, 0, i0);

        $r7 = staticinvoke <androidx.media3.extractor.ogg.OggExtractor: androidx.media3.common.util.ParsableByteArray resetPosition(androidx.media3.common.util.ParsableByteArray)>(r3);

        $z1 = staticinvoke <androidx.media3.extractor.ogg.FlacReader: boolean verifyBitstreamType(androidx.media3.common.util.ParsableByteArray)>($r7);

        if $z1 == 0 goto label3;

        $r12 = new androidx.media3.extractor.ogg.FlacReader;

        specialinvoke $r12.<androidx.media3.extractor.ogg.FlacReader: void <init>()>();

        r0.<androidx.media3.extractor.ogg.OggExtractor: androidx.media3.extractor.ogg.StreamReader streamReader> = $r12;

        goto label6;

     label3:
        $r8 = staticinvoke <androidx.media3.extractor.ogg.OggExtractor: androidx.media3.common.util.ParsableByteArray resetPosition(androidx.media3.common.util.ParsableByteArray)>(r3);

        $z2 = staticinvoke <androidx.media3.extractor.ogg.VorbisReader: boolean verifyBitstreamType(androidx.media3.common.util.ParsableByteArray)>($r8);

        if $z2 == 0 goto label4;

        $r11 = new androidx.media3.extractor.ogg.VorbisReader;

        specialinvoke $r11.<androidx.media3.extractor.ogg.VorbisReader: void <init>()>();

        r0.<androidx.media3.extractor.ogg.OggExtractor: androidx.media3.extractor.ogg.StreamReader streamReader> = $r11;

        goto label6;

     label4:
        $r9 = staticinvoke <androidx.media3.extractor.ogg.OggExtractor: androidx.media3.common.util.ParsableByteArray resetPosition(androidx.media3.common.util.ParsableByteArray)>(r3);

        $z3 = staticinvoke <androidx.media3.extractor.ogg.OpusReader: boolean verifyBitstreamType(androidx.media3.common.util.ParsableByteArray)>($r9);

        if $z3 == 0 goto label5;

        $r10 = new androidx.media3.extractor.ogg.OpusReader;

        specialinvoke $r10.<androidx.media3.extractor.ogg.OpusReader: void <init>()>();

        r0.<androidx.media3.extractor.ogg.OggExtractor: androidx.media3.extractor.ogg.StreamReader streamReader> = $r10;

        goto label6;

     label5:
        return 0;

     label6:
        return 1;
    }

    private static androidx.media3.common.util.ParsableByteArray resetPosition(androidx.media3.common.util.ParsableByteArray)
    {
        androidx.media3.common.util.ParsableByteArray r0;

        r0 := @parameter0: androidx.media3.common.util.ParsableByteArray;

        virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: void setPosition(int)>(0);

        return r0;
    }

    private static androidx.media3.extractor.Extractor[] lambda$static$0()
    {
        androidx.media3.extractor.Extractor[] $r0;
        androidx.media3.extractor.ogg.OggExtractor $r1;

        $r0 = newarray (androidx.media3.extractor.Extractor)[1];

        $r1 = new androidx.media3.extractor.ogg.OggExtractor;

        specialinvoke $r1.<androidx.media3.extractor.ogg.OggExtractor: void <init>()>();

        $r0[0] = $r1;

        return $r0;
    }

    static void <clinit>()
    {
        androidx.media3.extractor.ExtractorsFactory $r0;

        $r0 = dynamicinvoke "createExtractors" <androidx.media3.extractor.ExtractorsFactory ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: androidx.media3.extractor.Extractor[] __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.extractor.ogg.OggExtractor: androidx.media3.extractor.Extractor[] lambda$static$0()>, methodtype: androidx.media3.extractor.Extractor[] __METHODTYPE__());

        <androidx.media3.extractor.ogg.OggExtractor: androidx.media3.extractor.ExtractorsFactory FACTORY> = $r0;

        return;
    }

