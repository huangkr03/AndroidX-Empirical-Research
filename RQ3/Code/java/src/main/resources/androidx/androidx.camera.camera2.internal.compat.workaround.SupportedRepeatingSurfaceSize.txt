androidx.camera.camera2.internal.compat.workaround.SupportedRepeatingSurfaceSize
<androidx.camera.camera2.internal.compat.workaround.SupportedRepeatingSurfaceSize: androidx.camera.camera2.internal.compat.quirk.RepeatingStreamConstraintForVideoRecordingQuirk mQuirk>
<androidx.camera.camera2.internal.compat.workaround.SupportedRepeatingSurfaceSize: android.util.Size MINI_PREVIEW_SIZE_HUAWEI_MATE_9>
<androidx.camera.camera2.internal.compat.workaround.SupportedRepeatingSurfaceSize: java.util.Comparator SIZE_COMPARATOR>
    public void <init>()
    {
        androidx.camera.camera2.internal.compat.workaround.SupportedRepeatingSurfaceSize r0;
        androidx.camera.core.impl.Quirk $r1;
        androidx.camera.camera2.internal.compat.quirk.RepeatingStreamConstraintForVideoRecordingQuirk $r2;

        r0 := @this: androidx.camera.camera2.internal.compat.workaround.SupportedRepeatingSurfaceSize;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <androidx.camera.camera2.internal.compat.quirk.DeviceQuirks: androidx.camera.core.impl.Quirk get(java.lang.Class)>(class "Landroidx/camera/camera2/internal/compat/quirk/RepeatingStreamConstraintForVideoRecordingQuirk;");

        $r2 = (androidx.camera.camera2.internal.compat.quirk.RepeatingStreamConstraintForVideoRecordingQuirk) $r1;

        r0.<androidx.camera.camera2.internal.compat.workaround.SupportedRepeatingSurfaceSize: androidx.camera.camera2.internal.compat.quirk.RepeatingStreamConstraintForVideoRecordingQuirk mQuirk> = $r2;

        return;
    }

    public android.util.Size[] getSupportedSizes(android.util.Size[])
    {
        androidx.camera.camera2.internal.compat.workaround.SupportedRepeatingSurfaceSize r0;
        android.util.Size[] r1, r3, $r7, $r9;
        java.util.ArrayList r2, $r6;
        int i0, $i1, i2;
        android.util.Size r4, $r10;
        androidx.camera.camera2.internal.compat.quirk.RepeatingStreamConstraintForVideoRecordingQuirk $r5;
        boolean $z0;
        java.lang.Object[] $r8;
        java.util.Comparator $r11;

        r0 := @this: androidx.camera.camera2.internal.compat.workaround.SupportedRepeatingSurfaceSize;

        r1 := @parameter0: android.util.Size[];

        $r5 = r0.<androidx.camera.camera2.internal.compat.workaround.SupportedRepeatingSurfaceSize: androidx.camera.camera2.internal.compat.quirk.RepeatingStreamConstraintForVideoRecordingQuirk mQuirk>;

        if $r5 == null goto label4;

        $z0 = staticinvoke <androidx.camera.camera2.internal.compat.quirk.RepeatingStreamConstraintForVideoRecordingQuirk: boolean isHuaweiMate9()>();

        if $z0 == 0 goto label4;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r2 = $r6;

        r3 = r1;

        i0 = lengthof r3;

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        r4 = r3[i2];

        $r11 = <androidx.camera.camera2.internal.compat.workaround.SupportedRepeatingSurfaceSize: java.util.Comparator SIZE_COMPARATOR>;

        $r10 = <androidx.camera.camera2.internal.compat.workaround.SupportedRepeatingSurfaceSize: android.util.Size MINI_PREVIEW_SIZE_HUAWEI_MATE_9>;

        $i1 = interfaceinvoke $r11.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r4, $r10);

        if $i1 < 0 goto label2;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r4);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r7 = newarray (android.util.Size)[0];

        $r8 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        $r9 = (android.util.Size[]) $r8;

        return $r9;

     label4:
        return r1;
    }

    static void <clinit>()
    {
        android.util.Size $r0;
        androidx.camera.core.impl.utils.CompareSizesByArea $r1;

        $r0 = new android.util.Size;

        specialinvoke $r0.<android.util.Size: void <init>(int,int)>(320, 240);

        <androidx.camera.camera2.internal.compat.workaround.SupportedRepeatingSurfaceSize: android.util.Size MINI_PREVIEW_SIZE_HUAWEI_MATE_9> = $r0;

        $r1 = new androidx.camera.core.impl.utils.CompareSizesByArea;

        specialinvoke $r1.<androidx.camera.core.impl.utils.CompareSizesByArea: void <init>()>();

        <androidx.camera.camera2.internal.compat.workaround.SupportedRepeatingSurfaceSize: java.util.Comparator SIZE_COMPARATOR> = $r1;

        return;
    }

