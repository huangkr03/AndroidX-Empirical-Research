androidx.compose.runtime.DefaultChoreographerFrameClock
<androidx.compose.runtime.DefaultChoreographerFrameClock: androidx.compose.runtime.DefaultChoreographerFrameClock INSTANCE>
<androidx.compose.runtime.DefaultChoreographerFrameClock: android.view.Choreographer choreographer>
    private void <init>()
    {
        androidx.compose.runtime.DefaultChoreographerFrameClock r0;

        r0 := @this: androidx.compose.runtime.DefaultChoreographerFrameClock;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object withFrameNanos(kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation)
    {
        androidx.compose.runtime.DefaultChoreographerFrameClock r0;
        kotlin.jvm.functions.Function1 r1, $r12;
        kotlin.coroutines.Continuation $r2, r3, $r8;
        kotlinx.coroutines.CancellableContinuationImpl r4, $r7;
        kotlinx.coroutines.CancellableContinuation r5;
        android.view.Choreographer$FrameCallback r6;
        androidx.compose.runtime.DefaultChoreographerFrameClock$withFrameNanos$2$callback$1 $r9;
        android.view.Choreographer $r10;
        androidx.compose.runtime.DefaultChoreographerFrameClock$withFrameNanos$2$1 $r11;
        java.lang.Object $r13, $r14;

        r0 := @this: androidx.compose.runtime.DefaultChoreographerFrameClock;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r3 = $r2;

        $r7 = new kotlinx.coroutines.CancellableContinuationImpl;

        $r8 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>(r3);

        specialinvoke $r7.<kotlinx.coroutines.CancellableContinuationImpl: void <init>(kotlin.coroutines.Continuation,int)>($r8, 1);

        r4 = $r7;

        virtualinvoke r4.<kotlinx.coroutines.CancellableContinuationImpl: void initCancellability()>();

        r5 = (kotlinx.coroutines.CancellableContinuation) r4;

        $r9 = new androidx.compose.runtime.DefaultChoreographerFrameClock$withFrameNanos$2$callback$1;

        specialinvoke $r9.<androidx.compose.runtime.DefaultChoreographerFrameClock$withFrameNanos$2$callback$1: void <init>(kotlinx.coroutines.CancellableContinuation,kotlin.jvm.functions.Function1)>(r5, r1);

        r6 = (android.view.Choreographer$FrameCallback) $r9;

        $r10 = staticinvoke <androidx.compose.runtime.DefaultChoreographerFrameClock: android.view.Choreographer access$getChoreographer$p()>();

        virtualinvoke $r10.<android.view.Choreographer: void postFrameCallback(android.view.Choreographer$FrameCallback)>(r6);

        $r11 = new androidx.compose.runtime.DefaultChoreographerFrameClock$withFrameNanos$2$1;

        specialinvoke $r11.<androidx.compose.runtime.DefaultChoreographerFrameClock$withFrameNanos$2$1: void <init>(android.view.Choreographer$FrameCallback)>(r6);

        $r12 = (kotlin.jvm.functions.Function1) $r11;

        interfaceinvoke r5.<kotlinx.coroutines.CancellableContinuation: void invokeOnCancellation(kotlin.jvm.functions.Function1)>($r12);

        $r13 = virtualinvoke r4.<kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getResult()>();

        $r14 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r13 != $r14 goto label1;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r2);

     label1:
        return $r13;
    }

    public java.lang.Object fold(java.lang.Object, kotlin.jvm.functions.Function2)
    {
        androidx.compose.runtime.DefaultChoreographerFrameClock r0;
        java.lang.Object r1, $r3;
        kotlin.jvm.functions.Function2 r2;

        r0 := @this: androidx.compose.runtime.DefaultChoreographerFrameClock;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.jvm.functions.Function2;

        $r3 = staticinvoke <androidx.compose.runtime.MonotonicFrameClock$DefaultImpls: java.lang.Object fold(androidx.compose.runtime.MonotonicFrameClock,java.lang.Object,kotlin.jvm.functions.Function2)>(r0, r1, r2);

        return $r3;
    }

    public kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
    {
        androidx.compose.runtime.DefaultChoreographerFrameClock r0;
        kotlin.coroutines.CoroutineContext$Key r1;
        kotlin.coroutines.CoroutineContext$Element $r2;

        r0 := @this: androidx.compose.runtime.DefaultChoreographerFrameClock;

        r1 := @parameter0: kotlin.coroutines.CoroutineContext$Key;

        $r2 = staticinvoke <androidx.compose.runtime.MonotonicFrameClock$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(androidx.compose.runtime.MonotonicFrameClock,kotlin.coroutines.CoroutineContext$Key)>(r0, r1);

        return $r2;
    }

    public kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
    {
        androidx.compose.runtime.DefaultChoreographerFrameClock r0;
        kotlin.coroutines.CoroutineContext$Key r1;
        kotlin.coroutines.CoroutineContext $r2;

        r0 := @this: androidx.compose.runtime.DefaultChoreographerFrameClock;

        r1 := @parameter0: kotlin.coroutines.CoroutineContext$Key;

        $r2 = staticinvoke <androidx.compose.runtime.MonotonicFrameClock$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(androidx.compose.runtime.MonotonicFrameClock,kotlin.coroutines.CoroutineContext$Key)>(r0, r1);

        return $r2;
    }

    public kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
    {
        androidx.compose.runtime.DefaultChoreographerFrameClock r0;
        kotlin.coroutines.CoroutineContext r1, $r2;

        r0 := @this: androidx.compose.runtime.DefaultChoreographerFrameClock;

        r1 := @parameter0: kotlin.coroutines.CoroutineContext;

        $r2 = staticinvoke <androidx.compose.runtime.MonotonicFrameClock$DefaultImpls: kotlin.coroutines.CoroutineContext plus(androidx.compose.runtime.MonotonicFrameClock,kotlin.coroutines.CoroutineContext)>(r0, r1);

        return $r2;
    }

    public static final android.view.Choreographer access$getChoreographer$p()
    {
        android.view.Choreographer $r0;

        $r0 = <androidx.compose.runtime.DefaultChoreographerFrameClock: android.view.Choreographer choreographer>;

        return $r0;
    }

    static void <clinit>()
    {
        androidx.compose.runtime.DefaultChoreographerFrameClock $r0;
        kotlinx.coroutines.MainCoroutineDispatcher $r1, $r2;
        androidx.compose.runtime.DefaultChoreographerFrameClock$choreographer$1 $r3;
        kotlin.coroutines.CoroutineContext $r4;
        kotlin.jvm.functions.Function2 $r5;
        java.lang.Object $r6;
        android.view.Choreographer $r7;

        $r0 = new androidx.compose.runtime.DefaultChoreographerFrameClock;

        specialinvoke $r0.<androidx.compose.runtime.DefaultChoreographerFrameClock: void <init>()>();

        <androidx.compose.runtime.DefaultChoreographerFrameClock: androidx.compose.runtime.DefaultChoreographerFrameClock INSTANCE> = $r0;

        $r1 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        $r2 = virtualinvoke $r1.<kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()>();

        $r4 = (kotlin.coroutines.CoroutineContext) $r2;

        $r3 = new androidx.compose.runtime.DefaultChoreographerFrameClock$choreographer$1;

        specialinvoke $r3.<androidx.compose.runtime.DefaultChoreographerFrameClock$choreographer$1: void <init>(kotlin.coroutines.Continuation)>(null);

        $r5 = (kotlin.jvm.functions.Function2) $r3;

        $r6 = staticinvoke <kotlinx.coroutines.BuildersKt: java.lang.Object runBlocking(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)>($r4, $r5);

        $r7 = (android.view.Choreographer) $r6;

        <androidx.compose.runtime.DefaultChoreographerFrameClock: android.view.Choreographer choreographer> = $r7;

        return;
    }

androidx.compose.runtime.DefaultChoreographerFrameClock$choreographer$1
<androidx.compose.runtime.DefaultChoreographerFrameClock$choreographer$1: int label>
    void <init>(kotlin.coroutines.Continuation)
    {
        androidx.compose.runtime.DefaultChoreographerFrameClock$choreographer$1 r0;
        kotlin.coroutines.Continuation $r1;

        r0 := @this: androidx.compose.runtime.DefaultChoreographerFrameClock$choreographer$1;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r1);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.compose.runtime.DefaultChoreographerFrameClock$choreographer$1 r0;
        java.lang.Object $r1;
        int $i0;
        android.view.Choreographer $r3;
        java.lang.IllegalStateException r5;
        java.lang.Throwable r6;

        r0 := @this: androidx.compose.runtime.DefaultChoreographerFrameClock$choreographer$1;

        $r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.compose.runtime.DefaultChoreographerFrameClock$choreographer$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            default: goto label2;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r3 = staticinvoke <android.view.Choreographer: android.view.Choreographer getInstance()>();

        return $r3;

     label2:
        r5 = new java.lang.IllegalStateException;

        specialinvoke r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        r6 = (java.lang.Throwable) r5;

        throw r6;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.compose.runtime.DefaultChoreographerFrameClock$choreographer$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r4;

        r0 := @this: androidx.compose.runtime.DefaultChoreographerFrameClock$choreographer$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.compose.runtime.DefaultChoreographerFrameClock$choreographer$1;

        specialinvoke $r3.<androidx.compose.runtime.DefaultChoreographerFrameClock$choreographer$1: void <init>(kotlin.coroutines.Continuation)>($r2);

        $r4 = (kotlin.coroutines.Continuation) $r3;

        return $r4;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.compose.runtime.DefaultChoreographerFrameClock$choreographer$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.compose.runtime.DefaultChoreographerFrameClock$choreographer$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.compose.runtime.DefaultChoreographerFrameClock$choreographer$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.compose.runtime.DefaultChoreographerFrameClock$choreographer$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.compose.runtime.DefaultChoreographerFrameClock$choreographer$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.runtime.DefaultChoreographerFrameClock$choreographer$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.compose.runtime.DefaultChoreographerFrameClock$choreographer$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.compose.runtime.DefaultChoreographerFrameClock$choreographer$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.compose.runtime.DefaultChoreographerFrameClock$withFrameNanos$2$1
<androidx.compose.runtime.DefaultChoreographerFrameClock$withFrameNanos$2$1: android.view.Choreographer$FrameCallback $callback>
    void <init>(android.view.Choreographer$FrameCallback)
    {
        androidx.compose.runtime.DefaultChoreographerFrameClock$withFrameNanos$2$1 r0;
        android.view.Choreographer$FrameCallback $r1;

        r0 := @this: androidx.compose.runtime.DefaultChoreographerFrameClock$withFrameNanos$2$1;

        $r1 := @parameter0: android.view.Choreographer$FrameCallback;

        r0.<androidx.compose.runtime.DefaultChoreographerFrameClock$withFrameNanos$2$1: android.view.Choreographer$FrameCallback $callback> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(java.lang.Throwable)
    {
        androidx.compose.runtime.DefaultChoreographerFrameClock$withFrameNanos$2$1 r0;
        java.lang.Throwable r1;
        android.view.Choreographer $r2;
        android.view.Choreographer$FrameCallback $r3;

        r0 := @this: androidx.compose.runtime.DefaultChoreographerFrameClock$withFrameNanos$2$1;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = staticinvoke <androidx.compose.runtime.DefaultChoreographerFrameClock: android.view.Choreographer access$getChoreographer$p()>();

        $r3 = r0.<androidx.compose.runtime.DefaultChoreographerFrameClock$withFrameNanos$2$1: android.view.Choreographer$FrameCallback $callback>;

        virtualinvoke $r2.<android.view.Choreographer: void removeFrameCallback(android.view.Choreographer$FrameCallback)>($r3);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.runtime.DefaultChoreographerFrameClock$withFrameNanos$2$1 r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.compose.runtime.DefaultChoreographerFrameClock$withFrameNanos$2$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Throwable) r1;

        virtualinvoke r0.<androidx.compose.runtime.DefaultChoreographerFrameClock$withFrameNanos$2$1: void invoke(java.lang.Throwable)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.compose.runtime.DefaultChoreographerFrameClock$withFrameNanos$2$callback$1
<androidx.compose.runtime.DefaultChoreographerFrameClock$withFrameNanos$2$callback$1: kotlinx.coroutines.CancellableContinuation $co>
<androidx.compose.runtime.DefaultChoreographerFrameClock$withFrameNanos$2$callback$1: kotlin.jvm.functions.Function1 $onFrame>
    void <init>(kotlinx.coroutines.CancellableContinuation, kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.DefaultChoreographerFrameClock$withFrameNanos$2$callback$1 r0;
        kotlinx.coroutines.CancellableContinuation $r1;
        kotlin.jvm.functions.Function1 $r2;

        r0 := @this: androidx.compose.runtime.DefaultChoreographerFrameClock$withFrameNanos$2$callback$1;

        $r1 := @parameter0: kotlinx.coroutines.CancellableContinuation;

        $r2 := @parameter1: kotlin.jvm.functions.Function1;

        r0.<androidx.compose.runtime.DefaultChoreographerFrameClock$withFrameNanos$2$callback$1: kotlinx.coroutines.CancellableContinuation $co> = $r1;

        r0.<androidx.compose.runtime.DefaultChoreographerFrameClock$withFrameNanos$2$callback$1: kotlin.jvm.functions.Function1 $onFrame> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final void doFrame(long)
    {
        androidx.compose.runtime.DefaultChoreographerFrameClock$withFrameNanos$2$callback$1 r0;
        long l0;
        androidx.compose.runtime.DefaultChoreographerFrameClock r1;
        kotlin.jvm.functions.Function1 r2;
        kotlinx.coroutines.CancellableContinuation r3;
        kotlin.Result$Companion $r4, $r8;
        java.lang.Long $r5;
        java.lang.Object $r6, $r9, $r11;
        java.lang.Throwable $r7;

        r0 := @this: androidx.compose.runtime.DefaultChoreographerFrameClock$withFrameNanos$2$callback$1;

        l0 := @parameter0: long;

        r1 = <androidx.compose.runtime.DefaultChoreographerFrameClock: androidx.compose.runtime.DefaultChoreographerFrameClock INSTANCE>;

        r2 = r0.<androidx.compose.runtime.DefaultChoreographerFrameClock$withFrameNanos$2$callback$1: kotlin.jvm.functions.Function1 $onFrame>;

        r3 = r0.<androidx.compose.runtime.DefaultChoreographerFrameClock$withFrameNanos$2$callback$1: kotlinx.coroutines.CancellableContinuation $co>;

     label1:
        $r4 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r6 = interfaceinvoke r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r11 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r6);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r9 = staticinvoke <kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)>($r7);

        $r11 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r9);

     label4:
        interfaceinvoke r3.<kotlinx.coroutines.CancellableContinuation: void resumeWith(java.lang.Object)>($r11);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

