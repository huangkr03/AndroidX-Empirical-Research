io.opencensus.trace.export.SpanData
    void <init>()
    {
        io.opencensus.trace.export.SpanData $r0;

        $r0 := @this: io.opencensus.trace.export.SpanData;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static io.opencensus.trace.export.SpanData create(io.opencensus.trace.SpanContext, io.opencensus.trace.SpanId, java.lang.Boolean, java.lang.String, io.opencensus.trace.Span$Kind, io.opencensus.common.Timestamp, io.opencensus.trace.export.SpanData$Attributes, io.opencensus.trace.export.SpanData$TimedEvents, io.opencensus.trace.export.SpanData$TimedEvents, io.opencensus.trace.export.SpanData$Links, java.lang.Integer, io.opencensus.trace.Status, io.opencensus.common.Timestamp)
    {
        io.opencensus.trace.SpanContext $r0;
        io.opencensus.trace.SpanId $r1;
        java.lang.Boolean $r2;
        java.lang.String $r3;
        io.opencensus.trace.Span$Kind $r4;
        io.opencensus.common.Timestamp $r5, $r12, $r19;
        io.opencensus.trace.export.SpanData$Attributes $r6;
        io.opencensus.trace.export.SpanData$TimedEvents $r7, $r8;
        io.opencensus.trace.export.SpanData$Links $r9;
        java.lang.Integer $r10;
        io.opencensus.trace.Status $r11;
        java.util.ArrayList $r13, r21;
        java.util.List $r14;
        java.util.Iterator $r15;
        boolean $z0;
        java.lang.Object $r16;
        io.opencensus.trace.export.SpanData$TimedEvent $r17;
        io.opencensus.trace.BaseMessageEvent $r18;
        io.opencensus.trace.MessageEvent $r20;
        int $i0;
        io.opencensus.trace.export.AutoValue_SpanData r22;

        $r0 := @parameter0: io.opencensus.trace.SpanContext;

        $r1 := @parameter1: io.opencensus.trace.SpanId;

        $r2 := @parameter2: java.lang.Boolean;

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: io.opencensus.trace.Span$Kind;

        $r5 := @parameter5: io.opencensus.common.Timestamp;

        $r6 := @parameter6: io.opencensus.trace.export.SpanData$Attributes;

        $r7 := @parameter7: io.opencensus.trace.export.SpanData$TimedEvents;

        $r8 := @parameter8: io.opencensus.trace.export.SpanData$TimedEvents;

        $r9 := @parameter9: io.opencensus.trace.export.SpanData$Links;

        $r10 := @parameter10: java.lang.Integer;

        $r11 := @parameter11: io.opencensus.trace.Status;

        $r12 := @parameter12: io.opencensus.common.Timestamp;

        staticinvoke <io.opencensus.internal.Utils: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r8, "messageOrNetworkEvents");

        r21 = new java.util.ArrayList;

        $r13 = r21;

        specialinvoke r21.<java.util.ArrayList: void <init>()>();

        $r14 = virtualinvoke $r8.<io.opencensus.trace.export.SpanData$TimedEvents: java.util.List getEvents()>();

        $r15 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        $r17 = (io.opencensus.trace.export.SpanData$TimedEvent) $r16;

        $r16 = virtualinvoke $r17.<io.opencensus.trace.export.SpanData$TimedEvent: java.lang.Object getEvent()>();

        $r18 = (io.opencensus.trace.BaseMessageEvent) $r16;

        $z0 = $r18 instanceof io.opencensus.trace.MessageEvent;

        if $z0 == 0 goto label2;

        $r14 = (java.util.List) $r13;

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r17);

        goto label1;

     label2:
        $r19 = virtualinvoke $r17.<io.opencensus.trace.export.SpanData$TimedEvent: io.opencensus.common.Timestamp getTimestamp()>();

        $r20 = staticinvoke <io.opencensus.trace.internal.BaseMessageEventUtils: io.opencensus.trace.MessageEvent asMessageEvent(io.opencensus.trace.BaseMessageEvent)>($r18);

        $r17 = staticinvoke <io.opencensus.trace.export.SpanData$TimedEvent: io.opencensus.trace.export.SpanData$TimedEvent create(io.opencensus.common.Timestamp,java.lang.Object)>($r19, $r20);

        $r14 = (java.util.List) $r13;

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r17);

        goto label1;

     label3:
        $i0 = virtualinvoke $r8.<io.opencensus.trace.export.SpanData$TimedEvents: int getDroppedEventsCount()>();

        $r14 = (java.util.List) $r13;

        $r8 = staticinvoke <io.opencensus.trace.export.SpanData$TimedEvents: io.opencensus.trace.export.SpanData$TimedEvents create(java.util.List,int)>($r14, $i0);

        r22 = new io.opencensus.trace.export.AutoValue_SpanData;

        specialinvoke r22.<io.opencensus.trace.export.AutoValue_SpanData: void <init>(io.opencensus.trace.SpanContext,io.opencensus.trace.SpanId,java.lang.Boolean,java.lang.String,io.opencensus.trace.Span$Kind,io.opencensus.common.Timestamp,io.opencensus.trace.export.SpanData$Attributes,io.opencensus.trace.export.SpanData$TimedEvents,io.opencensus.trace.export.SpanData$TimedEvents,io.opencensus.trace.export.SpanData$Links,java.lang.Integer,io.opencensus.trace.Status,io.opencensus.common.Timestamp)>($r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12);

        return r22;
    }

<io.opencensus.trace.export.SpanData: io.opencensus.trace.export.SpanData$TimedEvents getAnnotations()>
<io.opencensus.trace.export.SpanData: io.opencensus.trace.export.SpanData$Attributes getAttributes()>
<io.opencensus.trace.export.SpanData: java.lang.Integer getChildSpanCount()>
<io.opencensus.trace.export.SpanData: io.opencensus.trace.SpanContext getContext()>
<io.opencensus.trace.export.SpanData: io.opencensus.common.Timestamp getEndTimestamp()>
<io.opencensus.trace.export.SpanData: java.lang.Boolean getHasRemoteParent()>
<io.opencensus.trace.export.SpanData: io.opencensus.trace.Span$Kind getKind()>
<io.opencensus.trace.export.SpanData: io.opencensus.trace.export.SpanData$Links getLinks()>
<io.opencensus.trace.export.SpanData: io.opencensus.trace.export.SpanData$TimedEvents getMessageEvents()>
<io.opencensus.trace.export.SpanData: java.lang.String getName()>
<io.opencensus.trace.export.SpanData: io.opencensus.trace.SpanId getParentSpanId()>
<io.opencensus.trace.export.SpanData: io.opencensus.common.Timestamp getStartTimestamp()>
<io.opencensus.trace.export.SpanData: io.opencensus.trace.Status getStatus()>
io.opencensus.trace.export.SpanData$Attributes
    void <init>()
    {
        io.opencensus.trace.export.SpanData$Attributes $r0;

        $r0 := @this: io.opencensus.trace.export.SpanData$Attributes;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static io.opencensus.trace.export.SpanData$Attributes create(java.util.Map, int)
    {
        int $i0;
        java.util.Map $r0;
        java.lang.Object $r1;
        java.util.HashMap r2;
        io.opencensus.trace.export.AutoValue_SpanData_Attributes r3;

        $r0 := @parameter0: java.util.Map;

        $i0 := @parameter1: int;

        r3 = new io.opencensus.trace.export.AutoValue_SpanData_Attributes;

        r2 = new java.util.HashMap;

        $r1 = staticinvoke <io.opencensus.internal.Utils: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r0, "attributeMap");

        $r0 = (java.util.Map) $r1;

        specialinvoke r2.<java.util.HashMap: void <init>(java.util.Map)>($r0);

        $r0 = (java.util.Map) r2;

        $r0 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r0);

        specialinvoke r3.<io.opencensus.trace.export.AutoValue_SpanData_Attributes: void <init>(java.util.Map,int)>($r0, $i0);

        return r3;
    }

<io.opencensus.trace.export.SpanData$Attributes: java.util.Map getAttributeMap()>
<io.opencensus.trace.export.SpanData$Attributes: int getDroppedAttributesCount()>
io.opencensus.trace.export.SpanData$Links
    void <init>()
    {
        io.opencensus.trace.export.SpanData$Links $r0;

        $r0 := @this: io.opencensus.trace.export.SpanData$Links;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static io.opencensus.trace.export.SpanData$Links create(java.util.List, int)
    {
        int $i0;
        java.util.List $r0;
        java.lang.Object $r1;
        java.util.Collection $r2;
        java.util.ArrayList r3;
        io.opencensus.trace.export.AutoValue_SpanData_Links r4;

        $r0 := @parameter0: java.util.List;

        $i0 := @parameter1: int;

        r4 = new io.opencensus.trace.export.AutoValue_SpanData_Links;

        r3 = new java.util.ArrayList;

        $r1 = staticinvoke <io.opencensus.internal.Utils: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r0, "links");

        $r2 = (java.util.Collection) $r1;

        specialinvoke r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        $r0 = (java.util.List) r3;

        $r0 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r0);

        specialinvoke r4.<io.opencensus.trace.export.AutoValue_SpanData_Links: void <init>(java.util.List,int)>($r0, $i0);

        return r4;
    }

<io.opencensus.trace.export.SpanData$Links: int getDroppedLinksCount()>
<io.opencensus.trace.export.SpanData$Links: java.util.List getLinks()>
io.opencensus.trace.export.SpanData$TimedEvent
    void <init>()
    {
        io.opencensus.trace.export.SpanData$TimedEvent $r0;

        $r0 := @this: io.opencensus.trace.export.SpanData$TimedEvent;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static io.opencensus.trace.export.SpanData$TimedEvent create(io.opencensus.common.Timestamp, java.lang.Object)
    {
        io.opencensus.common.Timestamp $r0;
        java.lang.Object $r1;
        io.opencensus.trace.export.AutoValue_SpanData_TimedEvent $r2;

        $r0 := @parameter0: io.opencensus.common.Timestamp;

        $r1 := @parameter1: java.lang.Object;

        $r2 = new io.opencensus.trace.export.AutoValue_SpanData_TimedEvent;

        specialinvoke $r2.<io.opencensus.trace.export.AutoValue_SpanData_TimedEvent: void <init>(io.opencensus.common.Timestamp,java.lang.Object)>($r0, $r1);

        return $r2;
    }

<io.opencensus.trace.export.SpanData$TimedEvent: java.lang.Object getEvent()>
<io.opencensus.trace.export.SpanData$TimedEvent: io.opencensus.common.Timestamp getTimestamp()>
io.opencensus.trace.export.SpanData$TimedEvents
    void <init>()
    {
        io.opencensus.trace.export.SpanData$TimedEvents $r0;

        $r0 := @this: io.opencensus.trace.export.SpanData$TimedEvents;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static io.opencensus.trace.export.SpanData$TimedEvents create(java.util.List, int)
    {
        int $i0;
        java.util.List $r0;
        java.lang.Object $r1;
        java.util.Collection $r2;
        java.util.ArrayList r3;
        io.opencensus.trace.export.AutoValue_SpanData_TimedEvents r4;

        $r0 := @parameter0: java.util.List;

        $i0 := @parameter1: int;

        r4 = new io.opencensus.trace.export.AutoValue_SpanData_TimedEvents;

        r3 = new java.util.ArrayList;

        $r1 = staticinvoke <io.opencensus.internal.Utils: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r0, "events");

        $r2 = (java.util.Collection) $r1;

        specialinvoke r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        $r0 = (java.util.List) r3;

        $r0 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r0);

        specialinvoke r4.<io.opencensus.trace.export.AutoValue_SpanData_TimedEvents: void <init>(java.util.List,int)>($r0, $i0);

        return r4;
    }

<io.opencensus.trace.export.SpanData$TimedEvents: int getDroppedEventsCount()>
<io.opencensus.trace.export.SpanData$TimedEvents: java.util.List getEvents()>
