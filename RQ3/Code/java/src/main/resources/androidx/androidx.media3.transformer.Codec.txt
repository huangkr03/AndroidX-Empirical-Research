androidx.media3.transformer.Codec
<androidx.media3.transformer.Codec: int UNLIMITED_PENDING_FRAME_COUNT>
<androidx.media3.transformer.Codec: androidx.media3.common.Format getConfigurationFormat()>
<androidx.media3.transformer.Codec: java.lang.String getName()>
<androidx.media3.transformer.Codec: android.view.Surface getInputSurface()>
    public int getMaxPendingFrameCount()
    {
        androidx.media3.transformer.Codec r0;

        r0 := @this: androidx.media3.transformer.Codec;

        return 2147483647;
    }

<androidx.media3.transformer.Codec: boolean maybeDequeueInputBuffer(androidx.media3.decoder.DecoderInputBuffer)>
<androidx.media3.transformer.Codec: void queueInputBuffer(androidx.media3.decoder.DecoderInputBuffer)>
<androidx.media3.transformer.Codec: void signalEndOfInputStream()>
<androidx.media3.transformer.Codec: androidx.media3.common.Format getOutputFormat()>
<androidx.media3.transformer.Codec: java.nio.ByteBuffer getOutputBuffer()>
<androidx.media3.transformer.Codec: android.media.MediaCodec$BufferInfo getOutputBufferInfo()>
<androidx.media3.transformer.Codec: void releaseOutputBuffer(boolean)>
<androidx.media3.transformer.Codec: boolean isEnded()>
<androidx.media3.transformer.Codec: void release()>
androidx.media3.transformer.Codec$DecoderFactory
<androidx.media3.transformer.Codec$DecoderFactory: androidx.media3.transformer.Codec createForAudioDecoding(androidx.media3.common.Format)>
<androidx.media3.transformer.Codec$DecoderFactory: androidx.media3.transformer.Codec createForVideoDecoding(androidx.media3.common.Format,android.view.Surface,boolean)>
androidx.media3.transformer.Codec$EncoderFactory
<androidx.media3.transformer.Codec$EncoderFactory: androidx.media3.transformer.Codec createForAudioEncoding(androidx.media3.common.Format,java.util.List)>
<androidx.media3.transformer.Codec$EncoderFactory: androidx.media3.transformer.Codec createForVideoEncoding(androidx.media3.common.Format,java.util.List)>
    public boolean audioNeedsEncoding()
    {
        androidx.media3.transformer.Codec$EncoderFactory r0;

        r0 := @this: androidx.media3.transformer.Codec$EncoderFactory;

        return 0;
    }

    public boolean videoNeedsEncoding()
    {
        androidx.media3.transformer.Codec$EncoderFactory r0;

        r0 := @this: androidx.media3.transformer.Codec$EncoderFactory;

        return 0;
    }

