androidx.recyclerview.selection.EventBackstop
<androidx.recyclerview.selection.EventBackstop: boolean mLongPressFired>
    void <init>()
    {
        androidx.recyclerview.selection.EventBackstop r0;

        r0 := @this: androidx.recyclerview.selection.EventBackstop;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView, android.view.MotionEvent)
    {
        androidx.recyclerview.selection.EventBackstop r0;
        androidx.recyclerview.widget.RecyclerView r1;
        android.view.MotionEvent r2;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: androidx.recyclerview.selection.EventBackstop;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r2 := @parameter1: android.view.MotionEvent;

        $z0 = staticinvoke <androidx.recyclerview.selection.MotionEvents: boolean isActionUp(android.view.MotionEvent)>(r2);

        if $z0 == 0 goto label1;

        $z3 = r0.<androidx.recyclerview.selection.EventBackstop: boolean mLongPressFired>;

        if $z3 == 0 goto label1;

        r0.<androidx.recyclerview.selection.EventBackstop: boolean mLongPressFired> = 0;

        return 1;

     label1:
        $z1 = staticinvoke <androidx.recyclerview.selection.MotionEvents: boolean isActionDown(android.view.MotionEvent)>(r2);

        if $z1 == 0 goto label2;

        $z2 = virtualinvoke r0.<androidx.recyclerview.selection.EventBackstop: boolean isResetRequired()>();

        if $z2 == 0 goto label2;

        virtualinvoke r0.<androidx.recyclerview.selection.EventBackstop: void reset()>();

     label2:
        return 0;
    }

    public void onTouchEvent(androidx.recyclerview.widget.RecyclerView, android.view.MotionEvent)
    {
        androidx.recyclerview.selection.EventBackstop r0;
        androidx.recyclerview.widget.RecyclerView r1;
        android.view.MotionEvent r2;

        r0 := @this: androidx.recyclerview.selection.EventBackstop;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r2 := @parameter1: android.view.MotionEvent;

        return;
    }

    public void onRequestDisallowInterceptTouchEvent(boolean)
    {
        androidx.recyclerview.selection.EventBackstop r0;
        boolean z0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.recyclerview.selection.EventBackstop;

        z0 := @parameter0: boolean;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Wrap me in an InterceptFilter.");

        throw $r1;
    }

    public boolean isResetRequired()
    {
        androidx.recyclerview.selection.EventBackstop r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.selection.EventBackstop;

        $z0 = r0.<androidx.recyclerview.selection.EventBackstop: boolean mLongPressFired>;

        return $z0;
    }

    public void reset()
    {
        androidx.recyclerview.selection.EventBackstop r0;

        r0 := @this: androidx.recyclerview.selection.EventBackstop;

        r0.<androidx.recyclerview.selection.EventBackstop: boolean mLongPressFired> = 0;

        return;
    }

    void onLongPress()
    {
        androidx.recyclerview.selection.EventBackstop r0;

        r0 := @this: androidx.recyclerview.selection.EventBackstop;

        r0.<androidx.recyclerview.selection.EventBackstop: boolean mLongPressFired> = 1;

        return;
    }

