androidx.camera.core.imagecapture.RgbaImageProxy
<androidx.camera.core.imagecapture.RgbaImageProxy: java.lang.Object mLock>
<androidx.camera.core.imagecapture.RgbaImageProxy: int mWidth>
<androidx.camera.core.imagecapture.RgbaImageProxy: int mHeight>
<androidx.camera.core.imagecapture.RgbaImageProxy: android.graphics.Rect mCropRect>
<androidx.camera.core.imagecapture.RgbaImageProxy: androidx.camera.core.ImageProxy$PlaneProxy[] mPlaneProxy>
<androidx.camera.core.imagecapture.RgbaImageProxy: androidx.camera.core.ImageInfo mImageInfo>
    public void <init>(androidx.camera.core.processing.Packet)
    {
        androidx.camera.core.imagecapture.RgbaImageProxy r0;
        androidx.camera.core.processing.Packet r1;
        java.lang.Object $r2;
        android.graphics.Bitmap $r3;
        android.graphics.Rect $r4;
        int $i0;
        android.graphics.Matrix $r5;
        androidx.camera.core.impl.CameraCaptureResult $r6;
        long $l1;

        r0 := @this: androidx.camera.core.imagecapture.RgbaImageProxy;

        r1 := @parameter0: androidx.camera.core.processing.Packet;

        $r2 = virtualinvoke r1.<androidx.camera.core.processing.Packet: java.lang.Object getData()>();

        $r3 = (android.graphics.Bitmap) $r2;

        $r4 = virtualinvoke r1.<androidx.camera.core.processing.Packet: android.graphics.Rect getCropRect()>();

        $i0 = virtualinvoke r1.<androidx.camera.core.processing.Packet: int getRotationDegrees()>();

        $r5 = virtualinvoke r1.<androidx.camera.core.processing.Packet: android.graphics.Matrix getSensorToBufferTransform()>();

        $r6 = virtualinvoke r1.<androidx.camera.core.processing.Packet: androidx.camera.core.impl.CameraCaptureResult getCameraCaptureResult()>();

        $l1 = interfaceinvoke $r6.<androidx.camera.core.impl.CameraCaptureResult: long getTimestamp()>();

        specialinvoke r0.<androidx.camera.core.imagecapture.RgbaImageProxy: void <init>(android.graphics.Bitmap,android.graphics.Rect,int,android.graphics.Matrix,long)>($r3, $r4, $i0, $r5, $l1);

        return;
    }

    void <init>(android.graphics.Bitmap, android.graphics.Rect, int, android.graphics.Matrix, long)
    {
        androidx.camera.core.imagecapture.RgbaImageProxy r0;
        android.graphics.Bitmap r1;
        android.graphics.Rect r2;
        int i0, $i2, $i3;
        android.graphics.Matrix r3;
        long l1;
        java.nio.ByteBuffer $r4;

        r0 := @this: androidx.camera.core.imagecapture.RgbaImageProxy;

        r1 := @parameter0: android.graphics.Bitmap;

        r2 := @parameter1: android.graphics.Rect;

        i0 := @parameter2: int;

        r3 := @parameter3: android.graphics.Matrix;

        l1 := @parameter4: long;

        $r4 = staticinvoke <androidx.camera.core.internal.utils.ImageUtil: java.nio.ByteBuffer createDirectByteBuffer(android.graphics.Bitmap)>(r1);

        $i2 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        $i3 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        specialinvoke r0.<androidx.camera.core.imagecapture.RgbaImageProxy: void <init>(java.nio.ByteBuffer,int,int,int,android.graphics.Rect,int,android.graphics.Matrix,long)>($r4, 4, $i2, $i3, r2, i0, r3, l1);

        return;
    }

    public void <init>(java.nio.ByteBuffer, int, int, int, android.graphics.Rect, int, android.graphics.Matrix, long)
    {
        androidx.camera.core.imagecapture.RgbaImageProxy r0;
        java.nio.ByteBuffer r1;
        int i0, i1, i2, i3, $i5;
        android.graphics.Rect r2;
        android.graphics.Matrix r3;
        long l4;
        java.lang.Object $r4;
        androidx.camera.core.ImageInfo $r5;
        androidx.camera.core.ImageProxy$PlaneProxy[] $r7;
        androidx.camera.core.ImageProxy$PlaneProxy $r8;

        r0 := @this: androidx.camera.core.imagecapture.RgbaImageProxy;

        r1 := @parameter0: java.nio.ByteBuffer;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: android.graphics.Rect;

        i3 := @parameter5: int;

        r3 := @parameter6: android.graphics.Matrix;

        l4 := @parameter7: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.core.imagecapture.RgbaImageProxy: java.lang.Object mLock> = $r4;

        r0.<androidx.camera.core.imagecapture.RgbaImageProxy: int mWidth> = i1;

        r0.<androidx.camera.core.imagecapture.RgbaImageProxy: int mHeight> = i2;

        r0.<androidx.camera.core.imagecapture.RgbaImageProxy: android.graphics.Rect mCropRect> = r2;

        $r5 = staticinvoke <androidx.camera.core.imagecapture.RgbaImageProxy: androidx.camera.core.ImageInfo createImageInfo(long,int,android.graphics.Matrix)>(l4, i3, r3);

        r0.<androidx.camera.core.imagecapture.RgbaImageProxy: androidx.camera.core.ImageInfo mImageInfo> = $r5;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r7 = newarray (androidx.camera.core.ImageProxy$PlaneProxy)[1];

        $i5 = i1 * i0;

        $r8 = staticinvoke <androidx.camera.core.imagecapture.RgbaImageProxy: androidx.camera.core.ImageProxy$PlaneProxy createPlaneProxy(java.nio.ByteBuffer,int,int)>(r1, $i5, i0);

        $r7[0] = $r8;

        r0.<androidx.camera.core.imagecapture.RgbaImageProxy: androidx.camera.core.ImageProxy$PlaneProxy[] mPlaneProxy> = $r7;

        return;
    }

    public void close()
    {
        androidx.camera.core.imagecapture.RgbaImageProxy r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: androidx.camera.core.imagecapture.RgbaImageProxy;

        $r3 = r0.<androidx.camera.core.imagecapture.RgbaImageProxy: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        specialinvoke r0.<androidx.camera.core.imagecapture.RgbaImageProxy: void checkNotClosed()>();

        r0.<androidx.camera.core.imagecapture.RgbaImageProxy: androidx.camera.core.ImageProxy$PlaneProxy[] mPlaneProxy> = null;

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.graphics.Rect getCropRect()
    {
        androidx.camera.core.imagecapture.RgbaImageProxy r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        android.graphics.Rect $r4;

        r0 := @this: androidx.camera.core.imagecapture.RgbaImageProxy;

        $r3 = r0.<androidx.camera.core.imagecapture.RgbaImageProxy: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        specialinvoke r0.<androidx.camera.core.imagecapture.RgbaImageProxy: void checkNotClosed()>();

        $r4 = r0.<androidx.camera.core.imagecapture.RgbaImageProxy: android.graphics.Rect mCropRect>;

        exitmonitor r1;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setCropRect(android.graphics.Rect)
    {
        androidx.camera.core.imagecapture.RgbaImageProxy r0;
        android.graphics.Rect r1, $r5;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r6;

        r0 := @this: androidx.camera.core.imagecapture.RgbaImageProxy;

        r1 := @parameter0: android.graphics.Rect;

        $r4 = r0.<androidx.camera.core.imagecapture.RgbaImageProxy: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        specialinvoke r0.<androidx.camera.core.imagecapture.RgbaImageProxy: void checkNotClosed()>();

        if r1 == null goto label2;

        $r5 = r0.<androidx.camera.core.imagecapture.RgbaImageProxy: android.graphics.Rect mCropRect>;

        virtualinvoke $r5.<android.graphics.Rect: void set(android.graphics.Rect)>(r1);

     label2:
        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int getFormat()
    {
        androidx.camera.core.imagecapture.RgbaImageProxy r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: androidx.camera.core.imagecapture.RgbaImageProxy;

        $r3 = r0.<androidx.camera.core.imagecapture.RgbaImageProxy: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        specialinvoke r0.<androidx.camera.core.imagecapture.RgbaImageProxy: void checkNotClosed()>();

        exitmonitor r1;

     label2:
        return 1;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getHeight()
    {
        androidx.camera.core.imagecapture.RgbaImageProxy r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;
        int $i0;

        r0 := @this: androidx.camera.core.imagecapture.RgbaImageProxy;

        $r3 = r0.<androidx.camera.core.imagecapture.RgbaImageProxy: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        specialinvoke r0.<androidx.camera.core.imagecapture.RgbaImageProxy: void checkNotClosed()>();

        $i0 = r0.<androidx.camera.core.imagecapture.RgbaImageProxy: int mHeight>;

        exitmonitor r1;

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getWidth()
    {
        androidx.camera.core.imagecapture.RgbaImageProxy r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;
        int $i0;

        r0 := @this: androidx.camera.core.imagecapture.RgbaImageProxy;

        $r3 = r0.<androidx.camera.core.imagecapture.RgbaImageProxy: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        specialinvoke r0.<androidx.camera.core.imagecapture.RgbaImageProxy: void checkNotClosed()>();

        $i0 = r0.<androidx.camera.core.imagecapture.RgbaImageProxy: int mWidth>;

        exitmonitor r1;

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public androidx.camera.core.ImageProxy$PlaneProxy[] getPlanes()
    {
        androidx.camera.core.imagecapture.RgbaImageProxy r0;
        java.lang.Object r1, $r3, $r5;
        java.lang.Throwable r2, $r7;
        androidx.camera.core.ImageProxy$PlaneProxy[] $r4, $r6;

        r0 := @this: androidx.camera.core.imagecapture.RgbaImageProxy;

        $r3 = r0.<androidx.camera.core.imagecapture.RgbaImageProxy: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        specialinvoke r0.<androidx.camera.core.imagecapture.RgbaImageProxy: void checkNotClosed()>();

        $r4 = r0.<androidx.camera.core.imagecapture.RgbaImageProxy: androidx.camera.core.ImageProxy$PlaneProxy[] mPlaneProxy>;

        $r5 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r4);

        $r6 = (androidx.camera.core.ImageProxy$PlaneProxy[]) $r5;

        exitmonitor r1;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public androidx.camera.core.ImageInfo getImageInfo()
    {
        androidx.camera.core.imagecapture.RgbaImageProxy r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        androidx.camera.core.ImageInfo $r4;

        r0 := @this: androidx.camera.core.imagecapture.RgbaImageProxy;

        $r3 = r0.<androidx.camera.core.imagecapture.RgbaImageProxy: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        specialinvoke r0.<androidx.camera.core.imagecapture.RgbaImageProxy: void checkNotClosed()>();

        $r4 = r0.<androidx.camera.core.imagecapture.RgbaImageProxy: androidx.camera.core.ImageInfo mImageInfo>;

        exitmonitor r1;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.media.Image getImage()
    {
        androidx.camera.core.imagecapture.RgbaImageProxy r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: androidx.camera.core.imagecapture.RgbaImageProxy;

        $r3 = r0.<androidx.camera.core.imagecapture.RgbaImageProxy: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        specialinvoke r0.<androidx.camera.core.imagecapture.RgbaImageProxy: void checkNotClosed()>();

        exitmonitor r1;

     label2:
        return null;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.graphics.Bitmap createBitmap()
    {
        androidx.camera.core.imagecapture.RgbaImageProxy r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        androidx.camera.core.ImageProxy$PlaneProxy[] $r4;
        int $i0, $i1;
        android.graphics.Bitmap $r5;

        r0 := @this: androidx.camera.core.imagecapture.RgbaImageProxy;

        $r3 = r0.<androidx.camera.core.imagecapture.RgbaImageProxy: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        specialinvoke r0.<androidx.camera.core.imagecapture.RgbaImageProxy: void checkNotClosed()>();

        $r4 = virtualinvoke r0.<androidx.camera.core.imagecapture.RgbaImageProxy: androidx.camera.core.ImageProxy$PlaneProxy[] getPlanes()>();

        $i0 = virtualinvoke r0.<androidx.camera.core.imagecapture.RgbaImageProxy: int getWidth()>();

        $i1 = virtualinvoke r0.<androidx.camera.core.imagecapture.RgbaImageProxy: int getHeight()>();

        $r5 = staticinvoke <androidx.camera.core.internal.utils.ImageUtil: android.graphics.Bitmap createBitmapFromPlane(androidx.camera.core.ImageProxy$PlaneProxy[],int,int)>($r4, $i0, $i1);

        exitmonitor r1;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void checkNotClosed()
    {
        androidx.camera.core.imagecapture.RgbaImageProxy r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        androidx.camera.core.ImageProxy$PlaneProxy[] $r4;
        boolean $z0;

        r0 := @this: androidx.camera.core.imagecapture.RgbaImageProxy;

        $r3 = r0.<androidx.camera.core.imagecapture.RgbaImageProxy: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.camera.core.imagecapture.RgbaImageProxy: androidx.camera.core.ImageProxy$PlaneProxy[] mPlaneProxy>;

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        staticinvoke <androidx.core.util.Preconditions: void checkState(boolean,java.lang.String)>($z0, "The image is closed.");

        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private static androidx.camera.core.ImageProxy$PlaneProxy createPlaneProxy(java.nio.ByteBuffer, int, int)
    {
        java.nio.ByteBuffer r0;
        int i0, i1;
        androidx.camera.core.imagecapture.RgbaImageProxy$1 $r1;

        r0 := @parameter0: java.nio.ByteBuffer;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new androidx.camera.core.imagecapture.RgbaImageProxy$1;

        specialinvoke $r1.<androidx.camera.core.imagecapture.RgbaImageProxy$1: void <init>(int,int,java.nio.ByteBuffer)>(i0, i1, r0);

        return $r1;
    }

    private static androidx.camera.core.ImageInfo createImageInfo(long, int, android.graphics.Matrix)
    {
        long l0;
        int i1;
        android.graphics.Matrix r0;
        androidx.camera.core.imagecapture.RgbaImageProxy$2 $r1;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r0 := @parameter2: android.graphics.Matrix;

        $r1 = new androidx.camera.core.imagecapture.RgbaImageProxy$2;

        specialinvoke $r1.<androidx.camera.core.imagecapture.RgbaImageProxy$2: void <init>(long,int,android.graphics.Matrix)>(l0, i1, r0);

        return $r1;
    }

androidx.camera.core.imagecapture.RgbaImageProxy$1
<androidx.camera.core.imagecapture.RgbaImageProxy$1: int val$rowStride>
<androidx.camera.core.imagecapture.RgbaImageProxy$1: int val$pixelStride>
<androidx.camera.core.imagecapture.RgbaImageProxy$1: java.nio.ByteBuffer val$byteBuffer>
    void <init>(int, int, java.nio.ByteBuffer)
    {
        androidx.camera.core.imagecapture.RgbaImageProxy$1 r0;
        int i0, i1;
        java.nio.ByteBuffer r1;

        r0 := @this: androidx.camera.core.imagecapture.RgbaImageProxy$1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.nio.ByteBuffer;

        r0.<androidx.camera.core.imagecapture.RgbaImageProxy$1: int val$rowStride> = i0;

        r0.<androidx.camera.core.imagecapture.RgbaImageProxy$1: int val$pixelStride> = i1;

        r0.<androidx.camera.core.imagecapture.RgbaImageProxy$1: java.nio.ByteBuffer val$byteBuffer> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int getRowStride()
    {
        androidx.camera.core.imagecapture.RgbaImageProxy$1 r0;
        int $i0;

        r0 := @this: androidx.camera.core.imagecapture.RgbaImageProxy$1;

        $i0 = r0.<androidx.camera.core.imagecapture.RgbaImageProxy$1: int val$rowStride>;

        return $i0;
    }

    public int getPixelStride()
    {
        androidx.camera.core.imagecapture.RgbaImageProxy$1 r0;
        int $i0;

        r0 := @this: androidx.camera.core.imagecapture.RgbaImageProxy$1;

        $i0 = r0.<androidx.camera.core.imagecapture.RgbaImageProxy$1: int val$pixelStride>;

        return $i0;
    }

    public java.nio.ByteBuffer getBuffer()
    {
        androidx.camera.core.imagecapture.RgbaImageProxy$1 r0;
        java.nio.ByteBuffer $r1;

        r0 := @this: androidx.camera.core.imagecapture.RgbaImageProxy$1;

        $r1 = r0.<androidx.camera.core.imagecapture.RgbaImageProxy$1: java.nio.ByteBuffer val$byteBuffer>;

        return $r1;
    }

androidx.camera.core.imagecapture.RgbaImageProxy$2
<androidx.camera.core.imagecapture.RgbaImageProxy$2: long val$timestamp>
<androidx.camera.core.imagecapture.RgbaImageProxy$2: int val$rotationDegrees>
<androidx.camera.core.imagecapture.RgbaImageProxy$2: android.graphics.Matrix val$sensorToBuffer>
    void <init>(long, int, android.graphics.Matrix)
    {
        androidx.camera.core.imagecapture.RgbaImageProxy$2 r0;
        long l0;
        int i1;
        android.graphics.Matrix r1;

        r0 := @this: androidx.camera.core.imagecapture.RgbaImageProxy$2;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r1 := @parameter2: android.graphics.Matrix;

        r0.<androidx.camera.core.imagecapture.RgbaImageProxy$2: long val$timestamp> = l0;

        r0.<androidx.camera.core.imagecapture.RgbaImageProxy$2: int val$rotationDegrees> = i1;

        r0.<androidx.camera.core.imagecapture.RgbaImageProxy$2: android.graphics.Matrix val$sensorToBuffer> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.camera.core.impl.TagBundle getTagBundle()
    {
        androidx.camera.core.imagecapture.RgbaImageProxy$2 r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.camera.core.imagecapture.RgbaImageProxy$2;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Custom ImageProxy does not contain TagBundle");

        throw $r1;
    }

    public long getTimestamp()
    {
        androidx.camera.core.imagecapture.RgbaImageProxy$2 r0;
        long $l0;

        r0 := @this: androidx.camera.core.imagecapture.RgbaImageProxy$2;

        $l0 = r0.<androidx.camera.core.imagecapture.RgbaImageProxy$2: long val$timestamp>;

        return $l0;
    }

    public int getRotationDegrees()
    {
        androidx.camera.core.imagecapture.RgbaImageProxy$2 r0;
        int $i0;

        r0 := @this: androidx.camera.core.imagecapture.RgbaImageProxy$2;

        $i0 = r0.<androidx.camera.core.imagecapture.RgbaImageProxy$2: int val$rotationDegrees>;

        return $i0;
    }

    public android.graphics.Matrix getSensorToBufferTransformMatrix()
    {
        androidx.camera.core.imagecapture.RgbaImageProxy$2 r0;
        android.graphics.Matrix $r1, $r2;

        r0 := @this: androidx.camera.core.imagecapture.RgbaImageProxy$2;

        $r1 = new android.graphics.Matrix;

        $r2 = r0.<androidx.camera.core.imagecapture.RgbaImageProxy$2: android.graphics.Matrix val$sensorToBuffer>;

        specialinvoke $r1.<android.graphics.Matrix: void <init>(android.graphics.Matrix)>($r2);

        return $r1;
    }

    public void populateExifData(androidx.camera.core.impl.utils.ExifData$Builder)
    {
        androidx.camera.core.imagecapture.RgbaImageProxy$2 r0;
        androidx.camera.core.impl.utils.ExifData$Builder r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: androidx.camera.core.imagecapture.RgbaImageProxy$2;

        r1 := @parameter0: androidx.camera.core.impl.utils.ExifData$Builder;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Custom ImageProxy does not contain Exif data.");

        throw $r2;
    }

