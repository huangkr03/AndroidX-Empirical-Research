androidx.camera.view.PreviewViewImplementation
<androidx.camera.view.PreviewViewImplementation: android.util.Size mResolution>
<androidx.camera.view.PreviewViewImplementation: android.widget.FrameLayout mParent>
<androidx.camera.view.PreviewViewImplementation: androidx.camera.view.PreviewTransformation mPreviewTransform>
<androidx.camera.view.PreviewViewImplementation: boolean mWasSurfaceProvided>
<androidx.camera.view.PreviewViewImplementation: void initializePreview()>
<androidx.camera.view.PreviewViewImplementation: android.view.View getPreview()>
    void <init>(android.widget.FrameLayout, androidx.camera.view.PreviewTransformation)
    {
        androidx.camera.view.PreviewViewImplementation r0;
        android.widget.FrameLayout r1;
        androidx.camera.view.PreviewTransformation r2;

        r0 := @this: androidx.camera.view.PreviewViewImplementation;

        r1 := @parameter0: android.widget.FrameLayout;

        r2 := @parameter1: androidx.camera.view.PreviewTransformation;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.view.PreviewViewImplementation: boolean mWasSurfaceProvided> = 0;

        r0.<androidx.camera.view.PreviewViewImplementation: android.widget.FrameLayout mParent> = r1;

        r0.<androidx.camera.view.PreviewViewImplementation: androidx.camera.view.PreviewTransformation mPreviewTransform> = r2;

        return;
    }

<androidx.camera.view.PreviewViewImplementation: void onSurfaceRequested(androidx.camera.core.SurfaceRequest,androidx.camera.view.PreviewViewImplementation$OnSurfaceNotInUseListener)>
    void redrawPreview()
    {
        androidx.camera.view.PreviewViewImplementation r0;
        android.view.View r1;
        boolean $z0;
        android.util.Size $r2;
        android.widget.FrameLayout $r3, $r5, $r6;
        androidx.camera.view.PreviewTransformation $r4;
        int $i0, $i1, $i2;

        r0 := @this: androidx.camera.view.PreviewViewImplementation;

        r1 = virtualinvoke r0.<androidx.camera.view.PreviewViewImplementation: android.view.View getPreview()>();

        if r1 == null goto label1;

        $z0 = r0.<androidx.camera.view.PreviewViewImplementation: boolean mWasSurfaceProvided>;

        if $z0 != 0 goto label2;

     label1:
        return;

     label2:
        $r4 = r0.<androidx.camera.view.PreviewViewImplementation: androidx.camera.view.PreviewTransformation mPreviewTransform>;

        $r2 = new android.util.Size;

        $r3 = r0.<androidx.camera.view.PreviewViewImplementation: android.widget.FrameLayout mParent>;

        $i0 = virtualinvoke $r3.<android.widget.FrameLayout: int getWidth()>();

        $r5 = r0.<androidx.camera.view.PreviewViewImplementation: android.widget.FrameLayout mParent>;

        $i1 = virtualinvoke $r5.<android.widget.FrameLayout: int getHeight()>();

        specialinvoke $r2.<android.util.Size: void <init>(int,int)>($i0, $i1);

        $r6 = r0.<androidx.camera.view.PreviewViewImplementation: android.widget.FrameLayout mParent>;

        $i2 = virtualinvoke $r6.<android.widget.FrameLayout: int getLayoutDirection()>();

        virtualinvoke $r4.<androidx.camera.view.PreviewTransformation: void transformView(android.util.Size,int,android.view.View)>($r2, $i2, r1);

        return;
    }

    void onSurfaceProvided()
    {
        androidx.camera.view.PreviewViewImplementation r0;

        r0 := @this: androidx.camera.view.PreviewViewImplementation;

        r0.<androidx.camera.view.PreviewViewImplementation: boolean mWasSurfaceProvided> = 1;

        virtualinvoke r0.<androidx.camera.view.PreviewViewImplementation: void redrawPreview()>();

        return;
    }

<androidx.camera.view.PreviewViewImplementation: void onAttachedToWindow()>
<androidx.camera.view.PreviewViewImplementation: void onDetachedFromWindow()>
<androidx.camera.view.PreviewViewImplementation: com.google.common.util.concurrent.ListenableFuture waitForNextFrame()>
    android.graphics.Bitmap getBitmap()
    {
        androidx.camera.view.PreviewViewImplementation r0;
        android.graphics.Bitmap r1, $r7;
        android.util.Size $r2;
        android.widget.FrameLayout $r3, $r5, $r6;
        androidx.camera.view.PreviewTransformation $r4;
        int $i0, $i1, $i2;

        r0 := @this: androidx.camera.view.PreviewViewImplementation;

        r1 = virtualinvoke r0.<androidx.camera.view.PreviewViewImplementation: android.graphics.Bitmap getPreviewBitmap()>();

        if r1 != null goto label1;

        return null;

     label1:
        $r4 = r0.<androidx.camera.view.PreviewViewImplementation: androidx.camera.view.PreviewTransformation mPreviewTransform>;

        $r2 = new android.util.Size;

        $r3 = r0.<androidx.camera.view.PreviewViewImplementation: android.widget.FrameLayout mParent>;

        $i0 = virtualinvoke $r3.<android.widget.FrameLayout: int getWidth()>();

        $r5 = r0.<androidx.camera.view.PreviewViewImplementation: android.widget.FrameLayout mParent>;

        $i1 = virtualinvoke $r5.<android.widget.FrameLayout: int getHeight()>();

        specialinvoke $r2.<android.util.Size: void <init>(int,int)>($i0, $i1);

        $r6 = r0.<androidx.camera.view.PreviewViewImplementation: android.widget.FrameLayout mParent>;

        $i2 = virtualinvoke $r6.<android.widget.FrameLayout: int getLayoutDirection()>();

        $r7 = virtualinvoke $r4.<androidx.camera.view.PreviewTransformation: android.graphics.Bitmap createTransformedBitmap(android.graphics.Bitmap,android.util.Size,int)>(r1, $r2, $i2);

        return $r7;
    }

<androidx.camera.view.PreviewViewImplementation: android.graphics.Bitmap getPreviewBitmap()>
    void setFrameUpdateListener(java.util.concurrent.Executor, androidx.camera.view.PreviewView$OnFrameUpdateListener)
    {
        androidx.camera.view.PreviewViewImplementation r0;
        java.util.concurrent.Executor r1;
        androidx.camera.view.PreviewView$OnFrameUpdateListener r2;

        r0 := @this: androidx.camera.view.PreviewViewImplementation;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: androidx.camera.view.PreviewView$OnFrameUpdateListener;

        return;
    }

androidx.camera.view.PreviewViewImplementation$OnSurfaceNotInUseListener
<androidx.camera.view.PreviewViewImplementation$OnSurfaceNotInUseListener: void onSurfaceNotInUse()>
