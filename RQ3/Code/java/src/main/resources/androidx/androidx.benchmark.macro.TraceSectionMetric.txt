androidx.benchmark.macro.TraceSectionMetric
<androidx.benchmark.macro.TraceSectionMetric: java.lang.String sectionName>
    public void <init>(java.lang.String)
    {
        androidx.benchmark.macro.TraceSectionMetric r0;
        java.lang.String r1;

        r0 := @this: androidx.benchmark.macro.TraceSectionMetric;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "sectionName");

        specialinvoke r0.<androidx.benchmark.macro.Metric: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        r0.<androidx.benchmark.macro.TraceSectionMetric: java.lang.String sectionName> = r1;

        return;
    }

    public void configure$benchmark_macro_release(java.lang.String)
    {
        androidx.benchmark.macro.TraceSectionMetric r0;
        java.lang.String r1;

        r0 := @this: androidx.benchmark.macro.TraceSectionMetric;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "packageName");

        return;
    }

    public void start$benchmark_macro_release()
    {
        androidx.benchmark.macro.TraceSectionMetric r0;

        r0 := @this: androidx.benchmark.macro.TraceSectionMetric;

        return;
    }

    public void stop$benchmark_macro_release()
    {
        androidx.benchmark.macro.TraceSectionMetric r0;

        r0 := @this: androidx.benchmark.macro.TraceSectionMetric;

        return;
    }

    public androidx.benchmark.macro.IterationResult getMetrics$benchmark_macro_release(androidx.benchmark.macro.Metric$CaptureInfo, java.lang.String)
    {
        androidx.benchmark.macro.TraceSectionMetric r0;
        androidx.benchmark.macro.Metric$CaptureInfo r1;
        java.lang.String r2, $r5, $r9, $r10;
        androidx.benchmark.macro.perfetto.Slice r3;
        java.lang.String[] r4;
        androidx.benchmark.macro.perfetto.PerfettoTraceProcessor $r6;
        java.util.List $r7;
        java.lang.Object $r8;
        long $l0, $l1, $l2;
        double $d0, $d1;
        java.lang.Double $r11;
        kotlin.Pair $r12;
        java.util.Map $r13, $r14;
        kotlin.ranges.LongRange $r15;
        androidx.benchmark.macro.IterationResult$Companion $r16;
        androidx.benchmark.macro.IterationResult $r17;

        r0 := @this: androidx.benchmark.macro.TraceSectionMetric;

        r1 := @parameter0: androidx.benchmark.macro.Metric$CaptureInfo;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "captureInfo");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "tracePath");

        $r6 = <androidx.benchmark.macro.perfetto.PerfettoTraceProcessor: androidx.benchmark.macro.perfetto.PerfettoTraceProcessor INSTANCE>;

        r4 = newarray (java.lang.String)[1];

        $r5 = r0.<androidx.benchmark.macro.TraceSectionMetric: java.lang.String sectionName>;

        r4[0] = $r5;

        $r7 = virtualinvoke $r6.<androidx.benchmark.macro.perfetto.PerfettoTraceProcessor: java.util.List querySlices(java.lang.String,java.lang.String[])>(r2, r4);

        $r8 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object firstOrNull(java.util.List)>($r7);

        r3 = (androidx.benchmark.macro.perfetto.Slice) $r8;

        if r3 != null goto label1;

        $r16 = <androidx.benchmark.macro.IterationResult: androidx.benchmark.macro.IterationResult$Companion Companion>;

        $r17 = virtualinvoke $r16.<androidx.benchmark.macro.IterationResult$Companion: androidx.benchmark.macro.IterationResult getEMPTY()>();

        goto label2;

     label1:
        $r17 = new androidx.benchmark.macro.IterationResult;

        $r9 = r0.<androidx.benchmark.macro.TraceSectionMetric: java.lang.String sectionName>;

        $r10 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>($r9, "Ms");

        $l0 = virtualinvoke r3.<androidx.benchmark.macro.perfetto.Slice: long getDur()>();

        $d0 = (double) $l0;

        $d1 = $d0 / 1000000.0;

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r12 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r10, $r11);

        $r13 = staticinvoke <kotlin.collections.MapsKt: java.util.Map mapOf(kotlin.Pair)>($r12);

        $r14 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

        $r15 = new kotlin.ranges.LongRange;

        $l1 = virtualinvoke r3.<androidx.benchmark.macro.perfetto.Slice: long getTs()>();

        $l2 = virtualinvoke r3.<androidx.benchmark.macro.perfetto.Slice: long getEndTs()>();

        specialinvoke $r15.<kotlin.ranges.LongRange: void <init>(long,long)>($l1, $l2);

        specialinvoke $r17.<androidx.benchmark.macro.IterationResult: void <init>(java.util.Map,java.util.Map,kotlin.ranges.LongRange)>($r13, $r14, $r15);

     label2:
        return $r17;
    }

