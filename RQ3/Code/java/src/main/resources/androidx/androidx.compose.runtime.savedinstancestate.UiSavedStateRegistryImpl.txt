androidx.compose.runtime.savedinstancestate.UiSavedStateRegistryImpl
<androidx.compose.runtime.savedinstancestate.UiSavedStateRegistryImpl: kotlin.jvm.functions.Function1 canBeSaved>
<androidx.compose.runtime.savedinstancestate.UiSavedStateRegistryImpl: java.util.Map restored>
<androidx.compose.runtime.savedinstancestate.UiSavedStateRegistryImpl: java.util.Map valueProviders>
    public void <init>(java.util.Map, kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.savedinstancestate.UiSavedStateRegistryImpl r0;
        java.util.Map r1, $r4, r7, $r8, r9, $r10;
        kotlin.jvm.functions.Function1 r2;
        java.util.LinkedHashMap $r3, $r5;
        boolean z0, z1;

        r0 := @this: androidx.compose.runtime.savedinstancestate.UiSavedStateRegistryImpl;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "canBeSaved");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.runtime.savedinstancestate.UiSavedStateRegistryImpl: kotlin.jvm.functions.Function1 canBeSaved> = r2;

        r7 = r1;

        if r7 != null goto label1;

        $r8 = null;

        goto label2;

     label1:
        $r8 = staticinvoke <kotlin.collections.MapsKt: java.util.Map toMutableMap(java.util.Map)>(r7);

     label2:
        r9 = $r8;

        if r9 != null goto label3;

        z0 = 0;

        $r5 = new java.util.LinkedHashMap;

        specialinvoke $r5.<java.util.LinkedHashMap: void <init>()>();

        $r10 = (java.util.Map) $r5;

        goto label4;

     label3:
        $r10 = r9;

     label4:
        r0.<androidx.compose.runtime.savedinstancestate.UiSavedStateRegistryImpl: java.util.Map restored> = $r10;

        z1 = 0;

        $r3 = new java.util.LinkedHashMap;

        specialinvoke $r3.<java.util.LinkedHashMap: void <init>()>();

        $r4 = (java.util.Map) $r3;

        r0.<androidx.compose.runtime.savedinstancestate.UiSavedStateRegistryImpl: java.util.Map valueProviders> = $r4;

        return;
    }

    public boolean canBeSaved(java.lang.Object)
    {
        androidx.compose.runtime.savedinstancestate.UiSavedStateRegistryImpl r0;
        java.lang.Object r1, $r3;
        kotlin.jvm.functions.Function1 $r2;
        java.lang.Boolean $r4;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.savedinstancestate.UiSavedStateRegistryImpl;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = r0.<androidx.compose.runtime.savedinstancestate.UiSavedStateRegistryImpl: kotlin.jvm.functions.Function1 canBeSaved>;

        $r3 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public java.lang.Object consumeRestored(java.lang.String)
    {
        androidx.compose.runtime.savedinstancestate.UiSavedStateRegistryImpl r0;
        java.lang.String r1;
        java.util.List r2, r8;
        boolean z0, $z1, z2, $z3;
        java.util.Map $r3, r7;
        java.lang.Object $r4, $r9;
        int $i0, $i1;
        java.util.Collection r6;

        r0 := @this: androidx.compose.runtime.savedinstancestate.UiSavedStateRegistryImpl;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        $r3 = r0.<androidx.compose.runtime.savedinstancestate.UiSavedStateRegistryImpl: java.util.Map restored>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r2 = (java.util.List) $r4;

        if r2 == null goto label4;

        r6 = (java.util.Collection) r2;

        z2 = 0;

        $z1 = interfaceinvoke r6.<java.util.Collection: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        if $z3 == 0 goto label4;

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i0 <= 1 goto label3;

        r7 = r0.<androidx.compose.runtime.savedinstancestate.UiSavedStateRegistryImpl: java.util.Map restored>;

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        r8 = interfaceinvoke r2.<java.util.List: java.util.List subList(int,int)>(1, $i1);

        z0 = 0;

        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r8);

     label3:
        $r9 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        goto label5;

     label4:
        $r9 = null;

     label5:
        return $r9;
    }

    public void registerProvider(java.lang.String, kotlin.jvm.functions.Function0)
    {
        androidx.compose.runtime.savedinstancestate.UiSavedStateRegistryImpl r0;
        java.lang.String r1, $r7, r10;
        kotlin.jvm.functions.Function0 r2;
        boolean z0, $z1, $z4, z6;
        java.util.List $r3, $r13;
        java.util.ArrayList $r4;
        java.lang.IllegalArgumentException $r6;
        java.lang.Throwable $r8;
        java.lang.CharSequence $r9;
        java.util.Map $r11;
        java.lang.Object r12, $r14;

        r0 := @this: androidx.compose.runtime.savedinstancestate.UiSavedStateRegistryImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "valueProvider");

        $r9 = (java.lang.CharSequence) r1;

        $z1 = staticinvoke <kotlin.text.StringsKt: boolean isBlank(java.lang.CharSequence)>($r9);

        if $z1 != 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        z6 = 0;

        if $z4 != 0 goto label3;

        r10 = "Registered key is empty or blank";

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke r10.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        $r8 = (java.lang.Throwable) $r6;

        throw $r8;

     label3:
        $r11 = r0.<androidx.compose.runtime.savedinstancestate.UiSavedStateRegistryImpl: java.util.Map valueProviders>;

        r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        if r12 != null goto label4;

        z0 = 0;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r13 = (java.util.List) $r4;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r13);

        $r14 = $r13;

        goto label5;

     label4:
        $r14 = r12;

     label5:
        $r3 = (java.util.List) $r14;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        return;
    }

    public void unregisterProvider(java.lang.String, kotlin.jvm.functions.Function0)
    {
        androidx.compose.runtime.savedinstancestate.UiSavedStateRegistryImpl r0;
        java.lang.String r1, $r14, r18;
        kotlin.jvm.functions.Function0 r2;
        java.util.List r3, r16;
        java.lang.Boolean r4, $r7, $r17;
        java.util.Map $r5, r20;
        java.lang.Object $r6;
        boolean $z1, $z2, z3, z4, z5, z6, $z7, z8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12;
        java.lang.IllegalArgumentException $r13;
        java.lang.Throwable $r15;
        java.util.Collection r19;

        r0 := @this: androidx.compose.runtime.savedinstancestate.UiSavedStateRegistryImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "valueProvider");

        $r5 = r0.<androidx.compose.runtime.savedinstancestate.UiSavedStateRegistryImpl: java.util.Map valueProviders>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r3 = (java.util.List) $r6;

        r16 = r3;

        if r16 != null goto label1;

        $r17 = null;

        goto label2;

     label1:
        $z1 = interfaceinvoke r16.<java.util.List: boolean remove(java.lang.Object)>(r2);

        $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

     label2:
        r4 = $r17;

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r4, $r7);

        z4 = 0;

        z5 = 0;

        if z3 != 0 goto label3;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The given key ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , valueProvider pair wasn\'t previously registered");

        r18 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = new java.lang.IllegalArgumentException;

        $r14 = virtualinvoke r18.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        $r15 = (java.lang.Throwable) $r13;

        throw $r15;

     label3:
        r19 = (java.util.Collection) r3;

        z6 = 0;

        $z2 = interfaceinvoke r19.<java.util.Collection: boolean isEmpty()>();

        if $z2 != 0 goto label4;

        $z7 = 1;

        goto label5;

     label4:
        $z7 = 0;

     label5:
        if $z7 == 0 goto label6;

        r20 = r0.<androidx.compose.runtime.savedinstancestate.UiSavedStateRegistryImpl: java.util.Map valueProviders>;

        z8 = 0;

        interfaceinvoke r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3);

     label6:
        return;
    }

    public java.util.Map performSave()
    {
        androidx.compose.runtime.savedinstancestate.UiSavedStateRegistryImpl r0;
        java.util.Map r1, r2, $r13, r36;
        boolean z1, z4, z5, z6, $z7, $z8, z10, $z12, z16, z21, z22, z23;
        java.util.Iterator r3, r7;
        java.util.Map$Entry r4, r29, r30;
        java.lang.String r6, $r21, $r27, r33, r39;
        java.lang.Object r8, r11, r12, $r15, $r16, $r17, $r23, r32;
        kotlin.jvm.functions.Function0 r9, $r24;
        java.util.Collection r10, r38;
        java.util.Set $r14;
        int $i0, $i1;
        java.util.ArrayList $r18, $r35;
        java.lang.IllegalStateException $r20, $r26;
        java.lang.Throwable $r22, $r28;
        java.util.List r31, $r40;
        java.lang.Object[] $r34;
        java.lang.Iterable $r37;

        r0 := @this: androidx.compose.runtime.savedinstancestate.UiSavedStateRegistryImpl;

        $r13 = r0.<androidx.compose.runtime.savedinstancestate.UiSavedStateRegistryImpl: java.util.Map restored>;

        r1 = staticinvoke <kotlin.collections.MapsKt: java.util.Map toMutableMap(java.util.Map)>($r13);

        r2 = r0.<androidx.compose.runtime.savedinstancestate.UiSavedStateRegistryImpl: java.util.Map valueProviders>;

        z1 = 0;

        $r14 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z7 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label8;

        $r15 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r15;

        r29 = r4;

        z10 = 0;

        $r16 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getKey()>();

        r6 = (java.lang.String) $r16;

        r30 = r4;

        $r17 = interfaceinvoke r30.<java.util.Map$Entry: java.lang.Object getValue()>();

        r31 = (java.util.List) $r17;

        $i0 = interfaceinvoke r31.<java.util.List: int size()>();

        if $i0 != 1 goto label3;

        $r23 = interfaceinvoke r31.<java.util.List: java.lang.Object get(int)>(0);

        $r24 = (kotlin.jvm.functions.Function0) $r23;

        r32 = interfaceinvoke $r24.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        if r32 == null goto label7;

        $z12 = virtualinvoke r0.<androidx.compose.runtime.savedinstancestate.UiSavedStateRegistryImpl: boolean canBeSaved(java.lang.Object)>(r32);

        z16 = 0;

        if $z12 != 0 goto label2;

        r33 = "Check failed.";

        $r26 = new java.lang.IllegalStateException;

        $r27 = virtualinvoke r33.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r26.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r27);

        $r28 = (java.lang.Throwable) $r26;

        throw $r28;

     label2:
        $r34 = newarray (java.lang.Object)[1];

        $r34[0] = r32;

        $r35 = staticinvoke <kotlin.collections.CollectionsKt: java.util.ArrayList arrayListOf(java.lang.Object[])>($r34);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r35);

        goto label7;

     label3:
        r36 = r1;

        $r37 = (java.lang.Iterable) r31;

        $r18 = new java.util.ArrayList;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r37, 10);

        specialinvoke $r18.<java.util.ArrayList: void <init>(int)>($i1);

        r38 = (java.util.Collection) $r18;

        r7 = interfaceinvoke $r37.<java.lang.Iterable: java.util.Iterator iterator()>();

     label4:
        $z8 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label6;

        r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (kotlin.jvm.functions.Function0) r8;

        r10 = r38;

        r11 = interfaceinvoke r9.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        if r11 == null goto label5;

        z4 = virtualinvoke r0.<androidx.compose.runtime.savedinstancestate.UiSavedStateRegistryImpl: boolean canBeSaved(java.lang.Object)>(r11);

        z5 = 0;

        z21 = 0;

        z22 = 0;

        z23 = 0;

        if z4 != 0 goto label5;

        z6 = 0;

        r39 = "Check failed.";

        $r20 = new java.lang.IllegalStateException;

        $r21 = virtualinvoke r39.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r21);

        $r22 = (java.lang.Throwable) $r20;

        throw $r22;

     label5:
        r12 = r11;

        interfaceinvoke r10.<java.util.Collection: boolean add(java.lang.Object)>(r12);

        goto label4;

     label6:
        $r40 = (java.util.List) r38;

        interfaceinvoke r36.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r40);

     label7:
        goto label1;

     label8:
        return r1;
    }

