androidx.compose.runtime.ProduceFrameSignal
<androidx.compose.runtime.ProduceFrameSignal: java.lang.Object pendingFrameContinuation>
    public void <init>()
    {
        androidx.compose.runtime.ProduceFrameSignal r0;

        r0 := @this: androidx.compose.runtime.ProduceFrameSignal;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.Object awaitFrameRequest(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.compose.runtime.ProduceFrameSignal r0;
        java.lang.Object r1, r4, $r6, $r7, $r10, $r11, $r12, $r13, $r14, $r19, $r20, $r21, r24;
        kotlin.coroutines.Continuation $r2, $r9, $r18, r28;
        kotlinx.coroutines.CancellableContinuation r3, r5, $r30, r31;
        kotlinx.coroutines.CancellableContinuationImpl $r8, r29;
        kotlin.Unit $r15, $r17, r25, $r26;
        kotlin.Result$Companion $r16;
        java.lang.Throwable $r22, $r23, r32;

        r0 := @this: androidx.compose.runtime.ProduceFrameSignal;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r24 = r1;

        entermonitor r24;

     label01:
        $r6 = r0.<androidx.compose.runtime.ProduceFrameSignal: java.lang.Object pendingFrameContinuation>;

        $r7 = staticinvoke <androidx.compose.runtime.RecomposerKt: java.lang.Object access$getProduceAnotherFrame$p()>();

        if $r6 != $r7 goto label03;

        $r21 = staticinvoke <androidx.compose.runtime.RecomposerKt: java.lang.Object access$getFramePending$p()>();

        r0.<androidx.compose.runtime.ProduceFrameSignal: java.lang.Object pendingFrameContinuation> = $r21;

        r25 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label02:
        exitmonitor r24;

        return r25;

     label03:
        $r26 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label04:
        exitmonitor r24;

        goto label07;

     label05:
        $r22 := @caughtexception;

     label06:
        exitmonitor r24;

        throw $r22;

     label07:
        r28 = $r2;

        $r8 = new kotlinx.coroutines.CancellableContinuationImpl;

        $r9 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>(r28);

        specialinvoke $r8.<kotlinx.coroutines.CancellableContinuationImpl: void <init>(kotlin.coroutines.Continuation,int)>($r9, 1);

        r29 = $r8;

        virtualinvoke r29.<kotlinx.coroutines.CancellableContinuationImpl: void initCancellability()>();

        r3 = (kotlinx.coroutines.CancellableContinuation) r29;

        r4 = r1;

        entermonitor r4;

     label08:
        $r10 = staticinvoke <androidx.compose.runtime.ProduceFrameSignal: java.lang.Object access$getPendingFrameContinuation$p(androidx.compose.runtime.ProduceFrameSignal)>(r0);

        $r11 = staticinvoke <androidx.compose.runtime.RecomposerKt: java.lang.Object access$getProduceAnotherFrame$p()>();

        if $r10 != $r11 goto label09;

        $r20 = staticinvoke <androidx.compose.runtime.RecomposerKt: java.lang.Object access$getFramePending$p()>();

        staticinvoke <androidx.compose.runtime.ProduceFrameSignal: void access$setPendingFrameContinuation$p(androidx.compose.runtime.ProduceFrameSignal,java.lang.Object)>(r0, $r20);

        $r30 = r3;

        goto label10;

     label09:
        staticinvoke <androidx.compose.runtime.ProduceFrameSignal: void access$setPendingFrameContinuation$p(androidx.compose.runtime.ProduceFrameSignal,java.lang.Object)>(r0, r3);

        $r30 = (kotlinx.coroutines.CancellableContinuation) null;

     label10:
        r31 = $r30;

     label11:
        exitmonitor r4;

        goto label14;

     label12:
        $r23 := @caughtexception;

        r32 = $r23;

     label13:
        exitmonitor r4;

        throw r32;

     label14:
        r5 = r31;

        if r5 == null goto label15;

        $r18 = (kotlin.coroutines.Continuation) r5;

        $r16 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r17 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r19 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r17);

        interfaceinvoke $r18.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r19);

        goto label15;

     label15:
        $r12 = virtualinvoke r29.<kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getResult()>();

        $r13 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r12 != $r13 goto label16;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r2);

     label16:
        $r14 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r12 != $r14 goto label17;

        return $r12;

     label17:
        $r15 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r15;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label08 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public final void takeFrameRequestLocked()
    {
        androidx.compose.runtime.ProduceFrameSignal r0;
        java.lang.Object $r1, $r2;
        java.lang.String $r4, $r5;
        boolean $z0;
        java.lang.IllegalStateException r6;
        java.lang.Throwable r7;

        r0 := @this: androidx.compose.runtime.ProduceFrameSignal;

        $r1 = r0.<androidx.compose.runtime.ProduceFrameSignal: java.lang.Object pendingFrameContinuation>;

        $r2 = staticinvoke <androidx.compose.runtime.RecomposerKt: java.lang.Object access$getFramePending$p()>();

        if $r1 != $r2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $r5 = "frame not pending";

        r6 = new java.lang.IllegalStateException;

        $r4 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);

        r7 = (java.lang.Throwable) r6;

        throw r7;

     label3:
        r0.<androidx.compose.runtime.ProduceFrameSignal: java.lang.Object pendingFrameContinuation> = null;

        return;
    }

    public final kotlin.coroutines.Continuation requestFrameLocked()
    {
        androidx.compose.runtime.ProduceFrameSignal r0;
        java.lang.Object r1, $r2, $r3, $r10, $r11;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r6, $r7, r13;
        java.lang.String $r8, $r9;
        kotlin.coroutines.Continuation $r12;
        java.lang.IllegalStateException r14;
        java.lang.Throwable r15;

        r0 := @this: androidx.compose.runtime.ProduceFrameSignal;

        r1 = r0.<androidx.compose.runtime.ProduceFrameSignal: java.lang.Object pendingFrameContinuation>;

        $z0 = r1 instanceof kotlin.coroutines.Continuation;

        if $z0 == 0 goto label1;

        $r11 = staticinvoke <androidx.compose.runtime.RecomposerKt: java.lang.Object access$getFramePending$p()>();

        r0.<androidx.compose.runtime.ProduceFrameSignal: java.lang.Object pendingFrameContinuation> = $r11;

        $r12 = (kotlin.coroutines.Continuation) r1;

        goto label6;

     label1:
        $r2 = staticinvoke <androidx.compose.runtime.RecomposerKt: java.lang.Object access$getProduceAnotherFrame$p()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, $r2);

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $r3 = staticinvoke <androidx.compose.runtime.RecomposerKt: java.lang.Object access$getFramePending$p()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, $r3);

     label3:
        if $z2 == 0 goto label4;

        $r12 = null;

        goto label6;

     label4:
        if r1 != null goto label5;

        $r10 = staticinvoke <androidx.compose.runtime.RecomposerKt: java.lang.Object access$getProduceAnotherFrame$p()>();

        r0.<androidx.compose.runtime.ProduceFrameSignal: java.lang.Object pendingFrameContinuation> = $r10;

        $r12 = (kotlin.coroutines.Continuation) null;

        goto label6;

     label5:
        r14 = new java.lang.IllegalStateException;

        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid pendingFrameContinuation ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        r15 = (java.lang.Throwable) r14;

        throw r15;

     label6:
        return $r12;
    }

    public static final java.lang.Object access$getPendingFrameContinuation$p(androidx.compose.runtime.ProduceFrameSignal)
    {
        androidx.compose.runtime.ProduceFrameSignal $r0;
        java.lang.Object $r1;

        $r0 := @parameter0: androidx.compose.runtime.ProduceFrameSignal;

        $r1 = $r0.<androidx.compose.runtime.ProduceFrameSignal: java.lang.Object pendingFrameContinuation>;

        return $r1;
    }

    public static final void access$setPendingFrameContinuation$p(androidx.compose.runtime.ProduceFrameSignal, java.lang.Object)
    {
        androidx.compose.runtime.ProduceFrameSignal $r0;
        java.lang.Object r1;

        $r0 := @parameter0: androidx.compose.runtime.ProduceFrameSignal;

        r1 := @parameter1: java.lang.Object;

        $r0.<androidx.compose.runtime.ProduceFrameSignal: java.lang.Object pendingFrameContinuation> = r1;

        return;
    }

