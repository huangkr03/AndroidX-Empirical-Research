androidx.compose.runtime.snapshots.SnapshotMapKeySet
    public void <init>(androidx.compose.runtime.snapshots.SnapshotStateMap)
    {
        androidx.compose.runtime.snapshots.SnapshotMapKeySet r0;
        androidx.compose.runtime.snapshots.SnapshotStateMap r1;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotMapKeySet;

        r1 := @parameter0: androidx.compose.runtime.snapshots.SnapshotStateMap;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "map");

        specialinvoke r0.<androidx.compose.runtime.snapshots.SnapshotMapSet: void <init>(androidx.compose.runtime.snapshots.SnapshotStateMap)>(r1);

        return;
    }

    public java.lang.Void add(java.lang.Object)
    {
        androidx.compose.runtime.snapshots.SnapshotMapKeySet r0;
        java.lang.Object r1;
        kotlin.KotlinNothingValueException $r3;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotMapKeySet;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateMapKt: java.lang.Void unsupported()>();

        $r3 = new kotlin.KotlinNothingValueException;

        specialinvoke $r3.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r3;
    }

    public java.lang.Void addAll(java.util.Collection)
    {
        androidx.compose.runtime.snapshots.SnapshotMapKeySet r0;
        java.util.Collection r1;
        kotlin.KotlinNothingValueException $r3;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotMapKeySet;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateMapKt: java.lang.Void unsupported()>();

        $r3 = new kotlin.KotlinNothingValueException;

        specialinvoke $r3.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r3;
    }

    public androidx.compose.runtime.snapshots.StateMapMutableKeysIterator iterator()
    {
        androidx.compose.runtime.snapshots.SnapshotMapKeySet r0;
        androidx.compose.runtime.snapshots.StateMapMutableKeysIterator $r1;
        androidx.compose.runtime.snapshots.SnapshotStateMap $r2, $r3;
        androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord $r4;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap $r5;
        java.util.Set $r6;
        androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableSet $r7;
        java.util.Iterator $r8;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotMapKeySet;

        $r1 = new androidx.compose.runtime.snapshots.StateMapMutableKeysIterator;

        $r2 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotMapKeySet: androidx.compose.runtime.snapshots.SnapshotStateMap getMap()>();

        $r3 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotMapKeySet: androidx.compose.runtime.snapshots.SnapshotStateMap getMap()>();

        $r4 = virtualinvoke $r3.<androidx.compose.runtime.snapshots.SnapshotStateMap: androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord getReadable$runtime_release()>();

        $r5 = virtualinvoke $r4.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap getMap$runtime_release()>();

        $r6 = interfaceinvoke $r5.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap: java.util.Set entrySet()>();

        $r7 = (androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableSet) $r6;

        $r8 = interfaceinvoke $r7.<androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableSet: java.util.Iterator iterator()>();

        specialinvoke $r1.<androidx.compose.runtime.snapshots.StateMapMutableKeysIterator: void <init>(androidx.compose.runtime.snapshots.SnapshotStateMap,java.util.Iterator)>($r2, $r8);

        return $r1;
    }

    public boolean remove(java.lang.Object)
    {
        androidx.compose.runtime.snapshots.SnapshotMapKeySet r0;
        java.lang.Object r1, $r3;
        androidx.compose.runtime.snapshots.SnapshotStateMap $r2;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotMapKeySet;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotMapKeySet: androidx.compose.runtime.snapshots.SnapshotStateMap getMap()>();

        $r3 = virtualinvoke $r2.<androidx.compose.runtime.snapshots.SnapshotStateMap: java.lang.Object remove(java.lang.Object)>(r1);

        if $r3 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean removeAll(java.util.Collection)
    {
        androidx.compose.runtime.snapshots.SnapshotMapKeySet r0;
        java.util.Collection r1;
        java.lang.Iterable $r2;
        java.util.Iterator r3;
        java.lang.Object r4, r5, $r7;
        boolean $z2, z3, $z4;
        androidx.compose.runtime.snapshots.SnapshotStateMap $r6;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotMapKeySet;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        z3 = 0;

        $r2 = (java.lang.Iterable) r1;

        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = r4;

        $r6 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotMapKeySet: androidx.compose.runtime.snapshots.SnapshotStateMap getMap()>();

        $r7 = virtualinvoke $r6.<androidx.compose.runtime.snapshots.SnapshotStateMap: java.lang.Object remove(java.lang.Object)>(r5);

        if $r7 != null goto label2;

        if z3 == 0 goto label3;

     label2:
        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        z3 = $z4;

        goto label1;

     label5:
        return z3;
    }

    public boolean retainAll(java.util.Collection)
    {
        androidx.compose.runtime.snapshots.SnapshotMapKeySet r0;
        java.util.Collection r1;
        java.util.Set r2, $r14;
        androidx.compose.runtime.snapshots.SnapshotStateMap r3, r4, r30;
        java.util.Map r5;
        java.util.Iterator r6;
        java.util.Map$Entry r7, r36;
        java.lang.Object r8, $r22, $r23, $r24, r28, r29, r39, r40, r43;
        androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord $r9, $r12, $r16, r31;
        int i0, $i1, $i2, i3;
        java.lang.Iterable $r10;
        androidx.compose.runtime.snapshots.StateRecord $r11, $r13, $r15, $r19, $r21, $r42;
        boolean $z0, $z1, z2, $z3, $z4, $z5, z6;
        androidx.compose.runtime.snapshots.Snapshot$Companion $r17;
        androidx.compose.runtime.snapshots.StateObject $r18, $r20;
        java.lang.Throwable $r25, $r26, $r27, r45;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap r32, $r38;
        kotlin.Unit $r33, r37;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap$Builder r35;
        androidx.compose.runtime.snapshots.Snapshot r44;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotMapKeySet;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        $r10 = (java.lang.Iterable) r1;

        r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.Set toSet(java.lang.Iterable)>($r10);

        r3 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotMapKeySet: androidx.compose.runtime.snapshots.SnapshotStateMap getMap()>();

        z2 = 0;

        r4 = r3;

     label01:
        r28 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateMapKt: java.lang.Object access$getSync$p()>();

        r29 = r28;

        entermonitor r29;

     label02:
        r30 = r4;

        $r11 = virtualinvoke r30.<androidx.compose.runtime.snapshots.SnapshotStateMap: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r11, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateMap.StateMapStateRecord<K of androidx.compose.runtime.snapshots.SnapshotStateMap, V of androidx.compose.runtime.snapshots.SnapshotStateMap>");

        $r12 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r11;

        $r21 = (androidx.compose.runtime.snapshots.StateRecord) $r12;

        $r13 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord current(androidx.compose.runtime.snapshots.StateRecord)>($r21);

        r31 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r13;

        r32 = virtualinvoke r31.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap getMap$runtime_release()>();

        i3 = virtualinvoke r31.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: int getModification$runtime_release()>();

        $r33 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label03:
        exitmonitor r29;

        goto label06;

     label04:
        $r27 := @caughtexception;

     label05:
        exitmonitor r29;

        throw $r27;

     label06:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r32);

        r35 = interfaceinvoke r32.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap$Builder builder()>();

        r5 = (java.util.Map) r35;

        $r14 = virtualinvoke r3.<androidx.compose.runtime.snapshots.SnapshotStateMap: java.util.Set entrySet()>();

        r6 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label10;

        $r22 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r22;

        r36 = r7;

        $r23 = interfaceinvoke r36.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z1 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>($r23);

        if $z1 != 0 goto label08;

        $z4 = 1;

        goto label09;

     label08:
        $z4 = 0;

     label09:
        if $z4 == 0 goto label07;

        $r24 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r24);

        z2 = 1;

        goto label07;

     label10:
        r37 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r38 = interfaceinvoke r35.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap$Builder: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap build()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r38, r32);

        if $z0 != 0 goto label23;

        r39 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateMapKt: java.lang.Object access$getSync$p()>();

        r40 = r39;

        entermonitor r40;

     label11:
        $r15 = virtualinvoke r4.<androidx.compose.runtime.snapshots.SnapshotStateMap: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r15, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateMap.StateMapStateRecord<K of androidx.compose.runtime.snapshots.SnapshotStateMap, V of androidx.compose.runtime.snapshots.SnapshotStateMap>");

        $r16 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r15;

        $r42 = (androidx.compose.runtime.snapshots.StateRecord) $r16;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.Snapshot getSnapshotInitializer()>();

        r43 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r8 = r43;

        entermonitor r8;

     label12:
        $r17 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        r44 = virtualinvoke $r17.<androidx.compose.runtime.snapshots.Snapshot$Companion: androidx.compose.runtime.snapshots.Snapshot getCurrent()>();

        $r18 = (androidx.compose.runtime.snapshots.StateObject) r4;

        $r19 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord writableRecord(androidx.compose.runtime.snapshots.StateRecord,androidx.compose.runtime.snapshots.StateObject,androidx.compose.runtime.snapshots.Snapshot)>($r42, $r18, r44);

        $r9 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r19;

        $i1 = virtualinvoke $r9.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: int getModification$runtime_release()>();

        if $i1 != i3 goto label13;

        virtualinvoke $r9.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: void setMap$runtime_release(androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap)>($r38);

        i0 = virtualinvoke $r9.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: int getModification$runtime_release()>();

        $i2 = i0 + 1;

        virtualinvoke $r9.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: void setModification$runtime_release(int)>($i2);

        $z5 = 1;

        goto label14;

     label13:
        $z5 = 0;

     label14:
        z6 = $z5;

     label15:
        exitmonitor r8;

        goto label18;

     label16:
        $r25 := @caughtexception;

        r45 = $r25;

     label17:
        exitmonitor r8;

        throw r45;

     label18:
        $r20 = (androidx.compose.runtime.snapshots.StateObject) r4;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: void notifyWrite(androidx.compose.runtime.snapshots.Snapshot,androidx.compose.runtime.snapshots.StateObject)>(r44, $r20);

     label19:
        exitmonitor r40;

        goto label22;

     label20:
        $r26 := @caughtexception;

     label21:
        exitmonitor r40;

        throw $r26;

     label22:
        if z6 == 0 goto label01;

     label23:
        goto label24;

     label24:
        return z2;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label12 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
        catch java.lang.Throwable from label11 to label19 with label20;
        catch java.lang.Throwable from label20 to label21 with label20;
    }

    public boolean contains(java.lang.Object)
    {
        androidx.compose.runtime.snapshots.SnapshotMapKeySet r0;
        java.lang.Object r1;
        androidx.compose.runtime.snapshots.SnapshotStateMap $r2;
        java.util.Map $r3;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotMapKeySet;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotMapKeySet: androidx.compose.runtime.snapshots.SnapshotStateMap getMap()>();

        $r3 = (java.util.Map) $r2;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean containsAll(java.util.Collection)
    {
        androidx.compose.runtime.snapshots.SnapshotMapKeySet r0;
        java.util.Collection r1, $r6;
        java.lang.Iterable $r2;
        java.util.Iterator r3;
        java.lang.Object r4, r5;
        boolean $z2, $z3, $z4, $z5;
        androidx.compose.runtime.snapshots.SnapshotStateMap $r7;
        java.util.Map $r8;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotMapKeySet;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        $r2 = (java.lang.Iterable) r1;

        $r6 = (java.util.Collection) $r2;

        $z2 = interfaceinvoke $r6.<java.util.Collection: boolean isEmpty()>();

        if $z2 == 0 goto label1;

        $z5 = 1;

        goto label4;

     label1:
        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label3;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = r4;

        $r7 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotMapKeySet: androidx.compose.runtime.snapshots.SnapshotStateMap getMap()>();

        $r8 = (java.util.Map) $r7;

        $z4 = interfaceinvoke $r8.<java.util.Map: boolean containsKey(java.lang.Object)>(r5);

        if $z4 != 0 goto label2;

        $z5 = 0;

        goto label4;

     label3:
        $z5 = 1;

     label4:
        return $z5;
    }

    public volatile boolean add(java.lang.Object)
    {
        androidx.compose.runtime.snapshots.SnapshotMapKeySet r0;
        java.lang.Object r1;
        java.lang.Void $r2;
        java.lang.Boolean $r3;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotMapKeySet;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotMapKeySet: java.lang.Void add(java.lang.Object)>(r1);

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public volatile boolean addAll(java.util.Collection)
    {
        androidx.compose.runtime.snapshots.SnapshotMapKeySet r0;
        java.util.Collection r1;
        java.lang.Void $r2;
        java.lang.Boolean $r3;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotMapKeySet;

        r1 := @parameter0: java.util.Collection;

        $r2 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotMapKeySet: java.lang.Void addAll(java.util.Collection)>(r1);

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public volatile java.util.Iterator iterator()
    {
        androidx.compose.runtime.snapshots.SnapshotMapKeySet r0;
        androidx.compose.runtime.snapshots.StateMapMutableKeysIterator $r1;
        java.util.Iterator $r2;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotMapKeySet;

        $r1 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotMapKeySet: androidx.compose.runtime.snapshots.StateMapMutableKeysIterator iterator()>();

        $r2 = (java.util.Iterator) $r1;

        return $r2;
    }

