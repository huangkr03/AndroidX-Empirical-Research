kotlin.jvm.internal.SpreadBuilder
<kotlin.jvm.internal.SpreadBuilder: java.util.ArrayList list>
    public void <init>(int)
    {
        kotlin.jvm.internal.SpreadBuilder $r0;
        int $i0;
        java.util.ArrayList $r1;

        $r0 := @this: kotlin.jvm.internal.SpreadBuilder;

        $i0 := @parameter0: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i0);

        $r0.<kotlin.jvm.internal.SpreadBuilder: java.util.ArrayList list> = $r1;

        return;
    }

    public void add(java.lang.Object)
    {
        kotlin.jvm.internal.SpreadBuilder $r0;
        java.lang.Object $r1;
        java.util.ArrayList $r2;

        $r0 := @this: kotlin.jvm.internal.SpreadBuilder;

        $r1 := @parameter0: java.lang.Object;

        $r2 = $r0.<kotlin.jvm.internal.SpreadBuilder: java.util.ArrayList list>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void addSpread(java.lang.Object)
    {
        kotlin.jvm.internal.SpreadBuilder $r0;
        java.lang.Object $r1;
        boolean $z0;
        java.lang.Object[] $r2;
        int $i0, $i1;
        java.util.ArrayList $r3;
        java.util.Collection $r4;
        java.lang.Iterable $r5;
        java.util.Iterator $r6;
        java.lang.StringBuilder $r7, r10;
        java.lang.Class $r8;
        java.lang.String $r9;
        java.lang.UnsupportedOperationException r11;

        $r0 := @this: kotlin.jvm.internal.SpreadBuilder;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label01;

        return;

     label01:
        $z0 = $r1 instanceof java.lang.Object[];

        if $z0 == 0 goto label02;

        $r2 = (java.lang.Object[]) $r1;

        $i0 = lengthof $r2;

        if $i0 <= 0 goto label07;

        $r3 = $r0.<kotlin.jvm.internal.SpreadBuilder: java.util.ArrayList list>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $i1 = lengthof $r2;

        $i0 = $i0 + $i1;

        virtualinvoke $r3.<java.util.ArrayList: void ensureCapacity(int)>($i0);

        $r3 = $r0.<kotlin.jvm.internal.SpreadBuilder: java.util.ArrayList list>;

        $r4 = (java.util.Collection) $r3;

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>($r4, $r2);

        return;

     label02:
        $z0 = $r1 instanceof java.util.Collection;

        if $z0 == 0 goto label03;

        $r3 = $r0.<kotlin.jvm.internal.SpreadBuilder: java.util.ArrayList list>;

        $r4 = (java.util.Collection) $r1;

        virtualinvoke $r3.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r4);

        return;

     label03:
        $z0 = $r1 instanceof java.lang.Iterable;

        if $z0 == 0 goto label05;

        $r5 = (java.lang.Iterable) $r1;

        $r6 = interfaceinvoke $r5.<java.lang.Iterable: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r1 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r3 = $r0.<kotlin.jvm.internal.SpreadBuilder: java.util.ArrayList list>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        goto label04;

     label05:
        $z0 = $r1 instanceof java.util.Iterator;

        if $z0 == 0 goto label08;

        $r6 = (java.util.Iterator) $r1;

     label06:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r3 = $r0.<kotlin.jvm.internal.SpreadBuilder: java.util.ArrayList list>;

        $r1 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        goto label06;

     label07:
        return;

     label08:
        r11 = new java.lang.UnsupportedOperationException;

        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Don\'t know how to spread ");

        $r8 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r11.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r9);

        goto label09;

     label09:
        throw r11;

     label10:
        return;
    }

    public int size()
    {
        kotlin.jvm.internal.SpreadBuilder $r0;
        int $i0;
        java.util.ArrayList $r1;

        $r0 := @this: kotlin.jvm.internal.SpreadBuilder;

        $r1 = $r0.<kotlin.jvm.internal.SpreadBuilder: java.util.ArrayList list>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        return $i0;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        kotlin.jvm.internal.SpreadBuilder $r0;
        java.util.ArrayList $r1;
        java.lang.Object[] $r2;

        $r0 := @this: kotlin.jvm.internal.SpreadBuilder;

        $r2 := @parameter0: java.lang.Object[];

        $r1 = $r0.<kotlin.jvm.internal.SpreadBuilder: java.util.ArrayList list>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        return $r2;
    }

