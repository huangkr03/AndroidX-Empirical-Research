android.databinding.tool.expr.LambdaExpr
<android.databinding.tool.expr.LambdaExpr: java.util.concurrent.atomic.AtomicInteger sIdCounter>
<android.databinding.tool.expr.LambdaExpr: int mId>
<android.databinding.tool.expr.LambdaExpr: android.databinding.tool.CallbackWrapper mCallbackWrapper>
<android.databinding.tool.expr.LambdaExpr: android.databinding.tool.expr.CallbackExprModel mCallbackExprModel>
<android.databinding.tool.expr.LambdaExpr: int mCallbackId>
<android.databinding.tool.expr.LambdaExpr: android.databinding.tool.solver.ExecutionPath mExecutionPath>
    public void <init>(android.databinding.tool.expr.Expr, android.databinding.tool.expr.CallbackExprModel)
    {
        android.databinding.tool.expr.LambdaExpr r0;
        android.databinding.tool.expr.Expr r1;
        android.databinding.tool.expr.CallbackExprModel r2;
        android.databinding.tool.expr.Expr[] $r3;
        java.util.concurrent.atomic.AtomicInteger $r4;
        int $i0;

        r0 := @this: android.databinding.tool.expr.LambdaExpr;

        r1 := @parameter0: android.databinding.tool.expr.Expr;

        r2 := @parameter1: android.databinding.tool.expr.CallbackExprModel;

        $r3 = newarray (android.databinding.tool.expr.Expr)[1];

        $r3[0] = r1;

        specialinvoke r0.<android.databinding.tool.expr.Expr: void <init>(android.databinding.tool.expr.Expr[])>($r3);

        $r4 = <android.databinding.tool.expr.LambdaExpr: java.util.concurrent.atomic.AtomicInteger sIdCounter>;

        $i0 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        r0.<android.databinding.tool.expr.LambdaExpr: int mId> = $i0;

        r0.<android.databinding.tool.expr.LambdaExpr: android.databinding.tool.expr.CallbackExprModel mCallbackExprModel> = r2;

        return;
    }

    public android.databinding.tool.expr.Expr getExpr()
    {
        android.databinding.tool.expr.LambdaExpr r0;
        java.util.List $r1;
        java.lang.Object $r2;
        android.databinding.tool.expr.Expr $r3;

        r0 := @this: android.databinding.tool.expr.LambdaExpr;

        $r1 = virtualinvoke r0.<android.databinding.tool.expr.LambdaExpr: java.util.List getChildren()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (android.databinding.tool.expr.Expr) $r2;

        return $r3;
    }

    public android.databinding.tool.expr.CallbackExprModel getCallbackExprModel()
    {
        android.databinding.tool.expr.LambdaExpr r0;
        android.databinding.tool.expr.CallbackExprModel $r1;

        r0 := @this: android.databinding.tool.expr.LambdaExpr;

        $r1 = r0.<android.databinding.tool.expr.LambdaExpr: android.databinding.tool.expr.CallbackExprModel mCallbackExprModel>;

        return $r1;
    }

    protected android.databinding.tool.reflection.ModelClass resolveType(android.databinding.tool.reflection.ModelAnalyzer)
    {
        android.databinding.tool.expr.LambdaExpr r0;
        android.databinding.tool.reflection.ModelAnalyzer r1;
        java.lang.Object[] $r2;
        android.databinding.tool.CallbackWrapper $r3, $r4;
        android.databinding.tool.reflection.ModelClass $r5;

        r0 := @this: android.databinding.tool.expr.LambdaExpr;

        r1 := @parameter0: android.databinding.tool.reflection.ModelAnalyzer;

        $r3 = r0.<android.databinding.tool.expr.LambdaExpr: android.databinding.tool.CallbackWrapper mCallbackWrapper>;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <android.databinding.tool.util.Preconditions: void checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[])>($r3, "Lambda expression must be resolved to its setter first to get the type.", $r2);

        $r4 = r0.<android.databinding.tool.expr.LambdaExpr: android.databinding.tool.CallbackWrapper mCallbackWrapper>;

        $r5 = $r4.<android.databinding.tool.CallbackWrapper: android.databinding.tool.reflection.ModelClass klass>;

        return $r5;
    }

    protected java.util.List constructDependencies()
    {
        android.databinding.tool.expr.LambdaExpr r0;
        java.util.List $r1;

        r0 := @this: android.databinding.tool.expr.LambdaExpr;

        $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r1;
    }

    public android.databinding.tool.CallbackWrapper getCallbackWrapper()
    {
        android.databinding.tool.expr.LambdaExpr r0;
        android.databinding.tool.CallbackWrapper $r1;

        r0 := @this: android.databinding.tool.expr.LambdaExpr;

        $r1 = r0.<android.databinding.tool.expr.LambdaExpr: android.databinding.tool.CallbackWrapper mCallbackWrapper>;

        return $r1;
    }

    public android.databinding.tool.expr.Expr resolveListeners(android.databinding.tool.reflection.ModelClass, android.databinding.tool.expr.Expr)
    {
        android.databinding.tool.expr.LambdaExpr r0;
        android.databinding.tool.reflection.ModelClass r1;
        android.databinding.tool.expr.Expr r2;

        r0 := @this: android.databinding.tool.expr.LambdaExpr;

        r1 := @parameter0: android.databinding.tool.reflection.ModelClass;

        r2 := @parameter1: android.databinding.tool.expr.Expr;

        return r0;
    }

    protected java.lang.String computeUniqueKey()
    {
        android.databinding.tool.expr.LambdaExpr r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        int $i0;
        java.lang.String $r4;

        r0 := @this: android.databinding.tool.expr.LambdaExpr;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("callback");

        $i0 = r0.<android.databinding.tool.expr.LambdaExpr: int mId>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public boolean isDynamic()
    {
        android.databinding.tool.expr.LambdaExpr r0;

        r0 := @this: android.databinding.tool.expr.LambdaExpr;

        return 0;
    }

    public void injectSafeUnboxing(android.databinding.tool.reflection.ModelAnalyzer, android.databinding.tool.expr.ExprModel)
    {
        android.databinding.tool.expr.LambdaExpr r0;
        android.databinding.tool.reflection.ModelAnalyzer r1;
        android.databinding.tool.expr.ExprModel r2;

        r0 := @this: android.databinding.tool.expr.LambdaExpr;

        r1 := @parameter0: android.databinding.tool.reflection.ModelAnalyzer;

        r2 := @parameter1: android.databinding.tool.expr.ExprModel;

        return;
    }

    protected android.databinding.tool.writer.KCode generateCode()
    {
        android.databinding.tool.expr.LambdaExpr r0;
        android.databinding.tool.writer.KCode r1, $r5, $r13, $r14;
        int i0;
        java.lang.String r2, $r12;
        java.lang.Object[] $r3;
        android.databinding.tool.CallbackWrapper $r4, $r6;
        java.lang.StringBuilder $r8, $r9, $r10, $r11;

        r0 := @this: android.databinding.tool.expr.LambdaExpr;

        $r4 = r0.<android.databinding.tool.expr.LambdaExpr: android.databinding.tool.CallbackWrapper mCallbackWrapper>;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r0;

        staticinvoke <android.databinding.tool.util.Preconditions: void checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[])>($r4, "Cannot find the callback method for %s", $r3);

        $r5 = new android.databinding.tool.writer.KCode;

        specialinvoke $r5.<android.databinding.tool.writer.KCode: void <init>(java.lang.String)>("");

        r1 = $r5;

        $r6 = r0.<android.databinding.tool.expr.LambdaExpr: android.databinding.tool.CallbackWrapper mCallbackWrapper>;

        i0 = virtualinvoke $r6.<android.databinding.tool.CallbackWrapper: int getMinApi()>();

        r2 = staticinvoke <android.databinding.tool.writer.LayoutBinderWriterKt: java.lang.String getFieldName(android.databinding.tool.expr.Expr)>(r0);

        if i0 <= 1 goto label1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(getBuildSdkInt() < ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ? null : ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = virtualinvoke r1.<android.databinding.tool.writer.KCode: android.databinding.tool.writer.KCode app(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<android.databinding.tool.writer.KCode: android.databinding.tool.writer.KCode app(java.lang.String)>(r2);

        virtualinvoke $r14.<android.databinding.tool.writer.KCode: android.databinding.tool.writer.KCode app(java.lang.String)>(")");

        goto label2;

     label1:
        virtualinvoke r1.<android.databinding.tool.writer.KCode: android.databinding.tool.writer.KCode app(java.lang.String)>(r2);

     label2:
        return r1;
    }

    public android.databinding.tool.expr.Expr cloneToModel(android.databinding.tool.expr.ExprModel)
    {
        android.databinding.tool.expr.LambdaExpr r0, $r5;
        android.databinding.tool.expr.ExprModel r1;
        android.databinding.tool.expr.Expr $r2, $r3;
        android.databinding.tool.expr.CallbackExprModel $r4;

        r0 := @this: android.databinding.tool.expr.LambdaExpr;

        r1 := @parameter0: android.databinding.tool.expr.ExprModel;

        $r2 = virtualinvoke r0.<android.databinding.tool.expr.LambdaExpr: android.databinding.tool.expr.Expr getExpr()>();

        $r3 = virtualinvoke $r2.<android.databinding.tool.expr.Expr: android.databinding.tool.expr.Expr cloneToModel(android.databinding.tool.expr.ExprModel)>(r1);

        $r4 = (android.databinding.tool.expr.CallbackExprModel) r1;

        $r5 = virtualinvoke r1.<android.databinding.tool.expr.ExprModel: android.databinding.tool.expr.LambdaExpr lambdaExpr(android.databinding.tool.expr.Expr,android.databinding.tool.expr.CallbackExprModel)>($r3, $r4);

        return $r5;
    }

    public java.lang.String generateConstructor()
    {
        android.databinding.tool.expr.LambdaExpr r0;
        android.databinding.tool.CallbackWrapper $r1;
        int $i0;
        java.lang.String $r2;

        r0 := @this: android.databinding.tool.expr.LambdaExpr;

        $r1 = virtualinvoke r0.<android.databinding.tool.expr.LambdaExpr: android.databinding.tool.CallbackWrapper getCallbackWrapper()>();

        $i0 = r0.<android.databinding.tool.expr.LambdaExpr: int mCallbackId>;

        $r2 = virtualinvoke $r1.<android.databinding.tool.CallbackWrapper: java.lang.String constructForIdentifier(int)>($i0);

        return $r2;
    }

    public void markAsUsed()
    {
        android.databinding.tool.expr.LambdaExpr r0;

        r0 := @this: android.databinding.tool.expr.LambdaExpr;

        specialinvoke r0.<android.databinding.tool.expr.Expr: void markAsUsed()>();

        return;
    }

    protected java.lang.String getInvertibleError()
    {
        android.databinding.tool.expr.LambdaExpr r0;

        r0 := @this: android.databinding.tool.expr.LambdaExpr;

        return "Lambda expressions cannot be inverted";
    }

    public java.util.List toExecutionPath(java.util.List)
    {
        android.databinding.tool.expr.LambdaExpr r0;
        java.util.List r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: android.databinding.tool.expr.LambdaExpr;

        r1 := @parameter0: java.util.List;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("should not call toExecutionPath on a lambda expression");

        throw $r2;
    }

    public final android.databinding.tool.solver.ExecutionPath getExecutionPath()
    {
        android.databinding.tool.expr.LambdaExpr r0;
        android.databinding.tool.solver.ExecutionPath $r1;

        r0 := @this: android.databinding.tool.expr.LambdaExpr;

        $r1 = r0.<android.databinding.tool.expr.LambdaExpr: android.databinding.tool.solver.ExecutionPath mExecutionPath>;

        return $r1;
    }

    public int getCallbackId()
    {
        android.databinding.tool.expr.LambdaExpr r0;
        int $i0;

        r0 := @this: android.databinding.tool.expr.LambdaExpr;

        $i0 = r0.<android.databinding.tool.expr.LambdaExpr: int mCallbackId>;

        return $i0;
    }

    public void setup(android.databinding.tool.reflection.ModelClass, android.databinding.tool.reflection.ModelMethod, int)
    {
        android.databinding.tool.expr.LambdaExpr r0;
        android.databinding.tool.reflection.ModelClass r1, $r18;
        android.databinding.tool.reflection.ModelMethod r2;
        int i0, $i1, $i2, $i3, i4;
        android.databinding.tool.reflection.ModelClass[] r3;
        java.util.List r4;
        android.databinding.tool.expr.ExprModel $r5;
        android.databinding.tool.CallbackWrapper $r6;
        android.databinding.tool.expr.CallbackExprModel $r7, $r16;
        android.databinding.tool.expr.Expr $r8, $r10, $r13;
        android.databinding.tool.solver.ExecutionPath $r12, $r14;
        java.lang.Object $r17;
        android.databinding.tool.expr.CallbackArgExpr $r19;

        r0 := @this: android.databinding.tool.expr.LambdaExpr;

        r1 := @parameter0: android.databinding.tool.reflection.ModelClass;

        r2 := @parameter1: android.databinding.tool.reflection.ModelMethod;

        i0 := @parameter2: int;

        r0.<android.databinding.tool.expr.LambdaExpr: int mCallbackId> = i0;

        $r5 = virtualinvoke r0.<android.databinding.tool.expr.LambdaExpr: android.databinding.tool.expr.ExprModel getModel()>();

        $r6 = virtualinvoke $r5.<android.databinding.tool.expr.ExprModel: android.databinding.tool.CallbackWrapper callbackWrapper(android.databinding.tool.reflection.ModelClass,android.databinding.tool.reflection.ModelMethod)>(r1, r2);

        r0.<android.databinding.tool.expr.LambdaExpr: android.databinding.tool.CallbackWrapper mCallbackWrapper> = $r6;

        r3 = virtualinvoke r2.<android.databinding.tool.reflection.ModelMethod: android.databinding.tool.reflection.ModelClass[] getParameterTypes()>();

        $r7 = r0.<android.databinding.tool.expr.LambdaExpr: android.databinding.tool.expr.CallbackExprModel mCallbackExprModel>;

        r4 = virtualinvoke $r7.<android.databinding.tool.expr.CallbackExprModel: java.util.List getArguments()>();

        $i1 = lengthof r3;

        $i2 = interfaceinvoke r4.<java.util.List: int size()>();

        if $i1 != $i2 goto label2;

        i4 = 0;

     label1:
        $i3 = lengthof r3;

        if i4 >= $i3 goto label2;

        $r17 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i4);

        $r19 = (android.databinding.tool.expr.CallbackArgExpr) $r17;

        $r18 = r3[i4];

        virtualinvoke $r19.<android.databinding.tool.expr.CallbackArgExpr: void setClassFromCallback(android.databinding.tool.reflection.ModelClass)>($r18);

        i4 = i4 + 1;

        goto label1;

     label2:
        $r8 = virtualinvoke r0.<android.databinding.tool.expr.LambdaExpr: android.databinding.tool.expr.Expr getExpr()>();

        virtualinvoke $r8.<android.databinding.tool.expr.Expr: android.databinding.tool.expr.Expr resolveTwoWayExpressions(android.databinding.tool.expr.Expr)>(r0);

        $r10 = virtualinvoke r0.<android.databinding.tool.expr.LambdaExpr: android.databinding.tool.expr.Expr getExpr()>();

        virtualinvoke $r10.<android.databinding.tool.expr.Expr: android.databinding.tool.reflection.ModelClass getResolvedType()>();

        $r12 = staticinvoke <android.databinding.tool.solver.ExecutionPath: android.databinding.tool.solver.ExecutionPath createRoot()>();

        r0.<android.databinding.tool.expr.LambdaExpr: android.databinding.tool.solver.ExecutionPath mExecutionPath> = $r12;

        $r13 = virtualinvoke r0.<android.databinding.tool.expr.LambdaExpr: android.databinding.tool.expr.Expr getExpr()>();

        $r14 = r0.<android.databinding.tool.expr.LambdaExpr: android.databinding.tool.solver.ExecutionPath mExecutionPath>;

        virtualinvoke $r13.<android.databinding.tool.expr.Expr: java.util.List toExecutionPath(android.databinding.tool.solver.ExecutionPath)>($r14);

        $r16 = r0.<android.databinding.tool.expr.LambdaExpr: android.databinding.tool.expr.CallbackExprModel mCallbackExprModel>;

        virtualinvoke $r16.<android.databinding.tool.expr.CallbackExprModel: void seal()>();

        return;
    }

    public java.lang.String toString()
    {
        android.databinding.tool.expr.LambdaExpr r0;
        java.lang.String r1, $r15;
        android.databinding.tool.expr.CallbackExprModel $r2;
        java.util.List $r3;
        java.util.stream.Stream $r4, $r6;
        java.util.function.Function $r5;
        java.util.stream.Collector $r7;
        java.lang.Object $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r14;
        android.databinding.tool.expr.Expr $r13;

        r0 := @this: android.databinding.tool.expr.LambdaExpr;

        $r2 = r0.<android.databinding.tool.expr.LambdaExpr: android.databinding.tool.expr.CallbackExprModel mCallbackExprModel>;

        $r3 = virtualinvoke $r2.<android.databinding.tool.expr.CallbackExprModel: java.util.List getArguments()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.stream.Stream stream()>();

        $r5 = dynamicinvoke "apply" <java.util.function.Function ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <android.databinding.tool.expr.LambdaExpr: java.lang.String lambda$toString$0(android.databinding.tool.expr.CallbackArgExpr)>, methodtype: java.lang.String __METHODTYPE__(android.databinding.tool.expr.CallbackArgExpr));

        $r6 = interfaceinvoke $r4.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>($r5);

        $r7 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector joining(java.lang.CharSequence)>(", ");

        $r8 = interfaceinvoke $r6.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r7);

        r1 = (java.lang.String) $r8;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") -> ");

        $r13 = virtualinvoke r0.<android.databinding.tool.expr.LambdaExpr: android.databinding.tool.expr.Expr getExpr()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }

    private static java.lang.String lambda$toString$0(android.databinding.tool.expr.CallbackArgExpr)
    {
        android.databinding.tool.expr.CallbackArgExpr r0;
        java.lang.String $r1;

        r0 := @parameter0: android.databinding.tool.expr.CallbackArgExpr;

        $r1 = virtualinvoke r0.<android.databinding.tool.expr.CallbackArgExpr: java.lang.String getName()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.util.concurrent.atomic.AtomicInteger $r0;

        $r0 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r0.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        <android.databinding.tool.expr.LambdaExpr: java.util.concurrent.atomic.AtomicInteger sIdCounter> = $r0;

        return;
    }

