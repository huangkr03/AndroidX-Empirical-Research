androidx.paging.PageFetcher
<androidx.paging.PageFetcher: kotlin.jvm.functions.Function1 pagingSourceFactory>
<androidx.paging.PageFetcher: java.lang.Object initialKey>
<androidx.paging.PageFetcher: androidx.paging.PagingConfig config>
<androidx.paging.PageFetcher: androidx.paging.ConflatedEventBus refreshEvents>
<androidx.paging.PageFetcher: androidx.paging.ConflatedEventBus retryEvents>
<androidx.paging.PageFetcher: kotlinx.coroutines.flow.Flow flow>
    public void <init>(kotlin.jvm.functions.Function1, java.lang.Object, androidx.paging.PagingConfig, androidx.paging.RemoteMediator)
    {
        androidx.paging.PageFetcher r0;
        kotlin.jvm.functions.Function1 r1;
        java.lang.Object r2;
        androidx.paging.PagingConfig r3;
        androidx.paging.RemoteMediator r4;
        androidx.paging.ConflatedEventBus $r5, $r6;
        androidx.paging.PageFetcher$flow$1 $r7;
        kotlin.jvm.functions.Function2 $r8;
        kotlinx.coroutines.flow.Flow $r9;

        r0 := @this: androidx.paging.PageFetcher;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: androidx.paging.PagingConfig;

        r4 := @parameter3: androidx.paging.RemoteMediator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "pagingSourceFactory");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "config");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.paging.PageFetcher: kotlin.jvm.functions.Function1 pagingSourceFactory> = r1;

        r0.<androidx.paging.PageFetcher: java.lang.Object initialKey> = r2;

        r0.<androidx.paging.PageFetcher: androidx.paging.PagingConfig config> = r3;

        $r5 = new androidx.paging.ConflatedEventBus;

        specialinvoke $r5.<androidx.paging.ConflatedEventBus: void <init>(java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, 1, null);

        r0.<androidx.paging.PageFetcher: androidx.paging.ConflatedEventBus refreshEvents> = $r5;

        $r6 = new androidx.paging.ConflatedEventBus;

        specialinvoke $r6.<androidx.paging.ConflatedEventBus: void <init>(java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, 1, null);

        r0.<androidx.paging.PageFetcher: androidx.paging.ConflatedEventBus retryEvents> = $r6;

        $r7 = new androidx.paging.PageFetcher$flow$1;

        specialinvoke $r7.<androidx.paging.PageFetcher$flow$1: void <init>(androidx.paging.RemoteMediator,androidx.paging.PageFetcher,kotlin.coroutines.Continuation)>(r4, r0, null);

        $r8 = (kotlin.jvm.functions.Function2) $r7;

        $r9 = staticinvoke <androidx.paging.SimpleChannelFlowKt: kotlinx.coroutines.flow.Flow simpleChannelFlow(kotlin.jvm.functions.Function2)>($r8);

        r0.<androidx.paging.PageFetcher: kotlinx.coroutines.flow.Flow flow> = $r9;

        return;
    }

    public void <init>(kotlin.jvm.functions.Function1, java.lang.Object, androidx.paging.PagingConfig, androidx.paging.RemoteMediator, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.paging.PageFetcher r0;
        kotlin.jvm.functions.Function1 r1;
        java.lang.Object r2;
        androidx.paging.PagingConfig r3;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r4;
        androidx.paging.RemoteMediator r5;

        r0 := @this: androidx.paging.PageFetcher;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: androidx.paging.PagingConfig;

        r5 := @parameter3: androidx.paging.RemoteMediator;

        i0 := @parameter4: int;

        r4 := @parameter5: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 8;

        if $i1 == 0 goto label1;

        r5 = null;

     label1:
        specialinvoke r0.<androidx.paging.PageFetcher: void <init>(kotlin.jvm.functions.Function1,java.lang.Object,androidx.paging.PagingConfig,androidx.paging.RemoteMediator)>(r1, r2, r3, r5);

        return;
    }

    public final kotlinx.coroutines.flow.Flow getFlow()
    {
        androidx.paging.PageFetcher r0;
        kotlinx.coroutines.flow.Flow $r1;

        r0 := @this: androidx.paging.PageFetcher;

        $r1 = r0.<androidx.paging.PageFetcher: kotlinx.coroutines.flow.Flow flow>;

        return $r1;
    }

    public final void refresh()
    {
        androidx.paging.PageFetcher r0;
        androidx.paging.ConflatedEventBus $r1;
        java.lang.Boolean $r2;

        r0 := @this: androidx.paging.PageFetcher;

        $r1 = r0.<androidx.paging.PageFetcher: androidx.paging.ConflatedEventBus refreshEvents>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r1.<androidx.paging.ConflatedEventBus: void send(java.lang.Object)>($r2);

        return;
    }

    private final void invalidate()
    {
        androidx.paging.PageFetcher r0;
        androidx.paging.ConflatedEventBus $r1;
        java.lang.Boolean $r2;

        r0 := @this: androidx.paging.PageFetcher;

        $r1 = r0.<androidx.paging.PageFetcher: androidx.paging.ConflatedEventBus refreshEvents>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        virtualinvoke $r1.<androidx.paging.ConflatedEventBus: void send(java.lang.Object)>($r2);

        return;
    }

    private final kotlinx.coroutines.flow.Flow injectRemoteEvents(androidx.paging.PageFetcherSnapshot, kotlinx.coroutines.Job, androidx.paging.RemoteMediatorAccessor)
    {
        androidx.paging.PageFetcher r0;
        androidx.paging.PageFetcherSnapshot $r1;
        kotlinx.coroutines.Job r2;
        androidx.paging.RemoteMediatorAccessor r3;
        androidx.paging.MutableLoadStateCollection r4, $r5;
        androidx.paging.PageFetcher$injectRemoteEvents$1 $r6;
        kotlin.jvm.functions.Function2 $r7;
        kotlinx.coroutines.flow.Flow $r8, $r9;

        r0 := @this: androidx.paging.PageFetcher;

        $r1 := @parameter0: androidx.paging.PageFetcherSnapshot;

        r2 := @parameter1: kotlinx.coroutines.Job;

        r3 := @parameter2: androidx.paging.RemoteMediatorAccessor;

        if r3 != null goto label1;

        $r9 = virtualinvoke $r1.<androidx.paging.PageFetcherSnapshot: kotlinx.coroutines.flow.Flow getPageEventFlow()>();

        return $r9;

     label1:
        $r5 = new androidx.paging.MutableLoadStateCollection;

        specialinvoke $r5.<androidx.paging.MutableLoadStateCollection: void <init>()>();

        r4 = $r5;

        $r6 = new androidx.paging.PageFetcher$injectRemoteEvents$1;

        specialinvoke $r6.<androidx.paging.PageFetcher$injectRemoteEvents$1: void <init>(androidx.paging.RemoteMediatorAccessor,androidx.paging.PageFetcherSnapshot,androidx.paging.MutableLoadStateCollection,kotlin.coroutines.Continuation)>(r3, $r1, r4, null);

        $r7 = (kotlin.jvm.functions.Function2) $r6;

        $r8 = staticinvoke <androidx.paging.CancelableChannelFlowKt: kotlinx.coroutines.flow.Flow cancelableChannelFlow(kotlinx.coroutines.Job,kotlin.jvm.functions.Function2)>(r2, $r7);

        return $r8;
    }

    private final java.lang.Object generateNewPagingSource(androidx.paging.PagingSource, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation r0;
        androidx.paging.PagingSource r1, r19, r23, r24;
        boolean z0, $z2, $z3, $z4, z5, z6;
        java.lang.Object $r2, r3, $r5, $r6, $r21;
        androidx.paging.PageFetcher$generateNewPagingSource$1 $r4, $r20;
        androidx.paging.PageFetcher$generateNewPagingSource$3 $r7;
        kotlin.jvm.functions.Function0 $r8, $r10;
        androidx.paging.PageFetcher$generateNewPagingSource$4 $r9;
        java.lang.IllegalStateException $r11, $r17;
        java.lang.String $r12, r22;
        java.lang.Throwable $r13;
        androidx.paging.PagingConfig $r14;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        androidx.paging.LegacyPagingSource $r15;
        kotlin.jvm.functions.Function1 $r16;
        androidx.paging.PageFetcher r18;

        r18 := @this: androidx.paging.PageFetcher;

        r19 := @parameter0: androidx.paging.PagingSource;

        r0 := @parameter1: kotlin.coroutines.Continuation;

        $z2 = r0 instanceof androidx.paging.PageFetcher$generateNewPagingSource$1;

        if $z2 == 0 goto label01;

        $r20 = (androidx.paging.PageFetcher$generateNewPagingSource$1) r0;

        $i1 = $r20.<androidx.paging.PageFetcher$generateNewPagingSource$1: int label>;

        $i2 = $i1 & -2147483648;

        if $i2 == 0 goto label01;

        $i3 = $r20.<androidx.paging.PageFetcher$generateNewPagingSource$1: int label>;

        $i4 = $i3 - -2147483648;

        $r20.<androidx.paging.PageFetcher$generateNewPagingSource$1: int label> = $i4;

        goto label02;

     label01:
        $r4 = new androidx.paging.PageFetcher$generateNewPagingSource$1;

        specialinvoke $r4.<androidx.paging.PageFetcher$generateNewPagingSource$1: void <init>(androidx.paging.PageFetcher,kotlin.coroutines.Continuation)>(r18, r0);

        $r20 = $r4;

     label02:
        $r2 = $r20.<androidx.paging.PageFetcher$generateNewPagingSource$1: java.lang.Object result>;

        r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i5 = $r20.<androidx.paging.PageFetcher$generateNewPagingSource$1: int label>;

        tableswitch($i5)
        {
            case 0: goto label03;
            case 1: goto label04;
            default: goto label14;
        };

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        $r16 = r18.<androidx.paging.PageFetcher: kotlin.jvm.functions.Function1 pagingSourceFactory>;

        $r20.<androidx.paging.PageFetcher$generateNewPagingSource$1: java.lang.Object L$0> = r18;

        $r20.<androidx.paging.PageFetcher$generateNewPagingSource$1: java.lang.Object L$1> = r19;

        $r20.<androidx.paging.PageFetcher$generateNewPagingSource$1: int label> = 1;

        $r21 = interfaceinvoke $r16.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r20);

        if $r21 != r3 goto label05;

        return r3;

     label04:
        $r5 = $r20.<androidx.paging.PageFetcher$generateNewPagingSource$1: java.lang.Object L$1>;

        r19 = (androidx.paging.PagingSource) $r5;

        $r6 = $r20.<androidx.paging.PageFetcher$generateNewPagingSource$1: java.lang.Object L$0>;

        r18 = (androidx.paging.PageFetcher) $r6;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        $r21 = $r2;

     label05:
        r1 = (androidx.paging.PagingSource) $r21;

        $z3 = r1 instanceof androidx.paging.LegacyPagingSource;

        if $z3 == 0 goto label06;

        $r15 = (androidx.paging.LegacyPagingSource) r1;

        $r14 = r18.<androidx.paging.PageFetcher: androidx.paging.PagingConfig config>;

        $i0 = $r14.<androidx.paging.PagingConfig: int pageSize>;

        virtualinvoke $r15.<androidx.paging.LegacyPagingSource: void setPageSize(int)>($i0);

     label06:
        if r1 == r19 goto label07;

        $z4 = 1;

        goto label08;

     label07:
        $z4 = 0;

     label08:
        z5 = $z4;

        z0 = 0;

        z6 = 0;

        if z5 != 0 goto label09;

        r22 = "An instance of PagingSource was re-used when Pager expected to create a new\ninstance. Ensure that the pagingSourceFactory passed to Pager always returns a\nnew instance of PagingSource.";

        $r11 = new java.lang.IllegalStateException;

        $r12 = virtualinvoke r22.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        $r13 = (java.lang.Throwable) $r11;

        throw $r13;

     label09:
        $r7 = new androidx.paging.PageFetcher$generateNewPagingSource$3;

        specialinvoke $r7.<androidx.paging.PageFetcher$generateNewPagingSource$3: void <init>(java.lang.Object)>(r18);

        $r8 = (kotlin.jvm.functions.Function0) $r7;

        virtualinvoke r1.<androidx.paging.PagingSource: void registerInvalidatedCallback(kotlin.jvm.functions.Function0)>($r8);

        r23 = r19;

        if r23 != null goto label10;

        goto label11;

     label10:
        $r9 = new androidx.paging.PageFetcher$generateNewPagingSource$4;

        specialinvoke $r9.<androidx.paging.PageFetcher$generateNewPagingSource$4: void <init>(java.lang.Object)>(r18);

        $r10 = (kotlin.jvm.functions.Function0) $r9;

        virtualinvoke r23.<androidx.paging.PagingSource: void unregisterInvalidatedCallback(kotlin.jvm.functions.Function0)>($r10);

     label11:
        r24 = r19;

        if r24 != null goto label12;

        goto label13;

     label12:
        virtualinvoke r24.<androidx.paging.PagingSource: void invalidate()>();

     label13:
        return r1;

     label14:
        $r17 = new java.lang.IllegalStateException;

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r17;
    }

    public static final java.lang.Object access$generateNewPagingSource(androidx.paging.PageFetcher, androidx.paging.PagingSource, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageFetcher $r0;
        androidx.paging.PagingSource r1;
        kotlin.coroutines.Continuation $r2;
        java.lang.Object $r3;

        $r0 := @parameter0: androidx.paging.PageFetcher;

        r1 := @parameter1: androidx.paging.PagingSource;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = specialinvoke $r0.<androidx.paging.PageFetcher: java.lang.Object generateNewPagingSource(androidx.paging.PagingSource,kotlin.coroutines.Continuation)>(r1, $r2);

        return $r3;
    }

    public static final void access$invalidate(androidx.paging.PageFetcher)
    {
        androidx.paging.PageFetcher $r0;

        $r0 := @parameter0: androidx.paging.PageFetcher;

        specialinvoke $r0.<androidx.paging.PageFetcher: void invalidate()>();

        return;
    }

    public static final androidx.paging.ConflatedEventBus access$getRefreshEvents$p(androidx.paging.PageFetcher)
    {
        androidx.paging.PageFetcher $r0;
        androidx.paging.ConflatedEventBus $r1;

        $r0 := @parameter0: androidx.paging.PageFetcher;

        $r1 = $r0.<androidx.paging.PageFetcher: androidx.paging.ConflatedEventBus refreshEvents>;

        return $r1;
    }

    public static final java.lang.Object access$getInitialKey$p(androidx.paging.PageFetcher)
    {
        androidx.paging.PageFetcher $r0;
        java.lang.Object $r1;

        $r0 := @parameter0: androidx.paging.PageFetcher;

        $r1 = $r0.<androidx.paging.PageFetcher: java.lang.Object initialKey>;

        return $r1;
    }

    public static final androidx.paging.PagingConfig access$getConfig$p(androidx.paging.PageFetcher)
    {
        androidx.paging.PageFetcher $r0;
        androidx.paging.PagingConfig $r1;

        $r0 := @parameter0: androidx.paging.PageFetcher;

        $r1 = $r0.<androidx.paging.PageFetcher: androidx.paging.PagingConfig config>;

        return $r1;
    }

    public static final androidx.paging.ConflatedEventBus access$getRetryEvents$p(androidx.paging.PageFetcher)
    {
        androidx.paging.PageFetcher $r0;
        androidx.paging.ConflatedEventBus $r1;

        $r0 := @parameter0: androidx.paging.PageFetcher;

        $r1 = $r0.<androidx.paging.PageFetcher: androidx.paging.ConflatedEventBus retryEvents>;

        return $r1;
    }

    public static final kotlinx.coroutines.flow.Flow access$injectRemoteEvents(androidx.paging.PageFetcher, androidx.paging.PageFetcherSnapshot, kotlinx.coroutines.Job, androidx.paging.RemoteMediatorAccessor)
    {
        androidx.paging.PageFetcher $r0;
        androidx.paging.PageFetcherSnapshot $r1;
        kotlinx.coroutines.Job r2;
        androidx.paging.RemoteMediatorAccessor r3;
        kotlinx.coroutines.flow.Flow $r4;

        $r0 := @parameter0: androidx.paging.PageFetcher;

        $r1 := @parameter1: androidx.paging.PageFetcherSnapshot;

        r2 := @parameter2: kotlinx.coroutines.Job;

        r3 := @parameter3: androidx.paging.RemoteMediatorAccessor;

        $r4 = specialinvoke $r0.<androidx.paging.PageFetcher: kotlinx.coroutines.flow.Flow injectRemoteEvents(androidx.paging.PageFetcherSnapshot,kotlinx.coroutines.Job,androidx.paging.RemoteMediatorAccessor)>($r1, r2, r3);

        return $r4;
    }

androidx.paging.PageFetcher$flow$1$1
<androidx.paging.PageFetcher$flow$1$1: int label>
<androidx.paging.PageFetcher$flow$1$1: java.lang.Object L$0>
<androidx.paging.PageFetcher$flow$1$1: androidx.paging.RemoteMediatorAccessor $remoteMediatorAccessor>
    void <init>(androidx.paging.RemoteMediatorAccessor, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageFetcher$flow$1$1 r0;
        androidx.paging.RemoteMediatorAccessor $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.paging.PageFetcher$flow$1$1;

        $r1 := @parameter0: androidx.paging.RemoteMediatorAccessor;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.paging.PageFetcher$flow$1$1: androidx.paging.RemoteMediatorAccessor $remoteMediatorAccessor> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.paging.PageFetcher$flow$1$1 r0;
        java.lang.Object $r1, r3, r4, $r6, $r7, $r13, $r17;
        androidx.paging.RemoteMediatorAccessor r2;
        int $i0;
        kotlin.Unit $r5;
        kotlin.coroutines.Continuation $r8, $r16;
        java.lang.IllegalStateException $r9;
        kotlinx.coroutines.flow.FlowCollector $r10, r12;
        androidx.paging.RemoteMediator$InitializeAction $r11, $r14;
        boolean $z0;
        java.lang.Boolean $r15;

        r0 := @this: androidx.paging.PageFetcher$flow$1$1;

        $r1 := @parameter0: java.lang.Object;

        r4 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.paging.PageFetcher$flow$1$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label01;
            case 1: goto label03;
            case 2: goto label08;
            default: goto label10;
        };

     label01:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r7 = r0.<androidx.paging.PageFetcher$flow$1$1: java.lang.Object L$0>;

        $r10 = (kotlinx.coroutines.flow.FlowCollector) $r7;

        r2 = r0.<androidx.paging.PageFetcher$flow$1$1: androidx.paging.RemoteMediatorAccessor $remoteMediatorAccessor>;

        if r2 != null goto label02;

        $r11 = null;

        goto label05;

     label02:
        r12 = $r10;

        $r8 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.paging.PageFetcher$flow$1$1: java.lang.Object L$0> = r12;

        r0.<androidx.paging.PageFetcher$flow$1$1: int label> = 1;

        $r13 = interfaceinvoke r2.<androidx.paging.RemoteMediatorAccessor: java.lang.Object initialize(kotlin.coroutines.Continuation)>($r8);

        if $r13 != r4 goto label04;

        return r4;

     label03:
        $r6 = r0.<androidx.paging.PageFetcher$flow$1$1: java.lang.Object L$0>;

        r12 = (kotlinx.coroutines.flow.FlowCollector) $r6;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r13 = $r1;

     label04:
        r3 = $r13;

        $r10 = r12;

        $r11 = (androidx.paging.RemoteMediator$InitializeAction) r3;

     label05:
        $r14 = <androidx.paging.RemoteMediator$InitializeAction: androidx.paging.RemoteMediator$InitializeAction LAUNCH_INITIAL_REFRESH>;

        if $r11 != $r14 goto label06;

        $z0 = 1;

        goto label07;

     label06:
        $z0 = 0;

     label07:
        $r15 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Boolean boxBoolean(boolean)>($z0);

        $r16 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.paging.PageFetcher$flow$1$1: java.lang.Object L$0> = null;

        r0.<androidx.paging.PageFetcher$flow$1$1: int label> = 2;

        $r17 = interfaceinvoke $r10.<kotlinx.coroutines.flow.FlowCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)>($r15, $r16);

        if $r17 != r4 goto label09;

        return r4;

     label08:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label09:
        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r5;

     label10:
        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r9;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageFetcher$flow$1$1 r0, r3, $r4;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r6;
        androidx.paging.RemoteMediatorAccessor $r5;

        r0 := @this: androidx.paging.PageFetcher$flow$1$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = new androidx.paging.PageFetcher$flow$1$1;

        $r5 = r0.<androidx.paging.PageFetcher$flow$1$1: androidx.paging.RemoteMediatorAccessor $remoteMediatorAccessor>;

        specialinvoke $r4.<androidx.paging.PageFetcher$flow$1$1: void <init>(androidx.paging.RemoteMediatorAccessor,kotlin.coroutines.Continuation)>($r5, $r2);

        r3 = $r4;

        r3.<androidx.paging.PageFetcher$flow$1$1: java.lang.Object L$0> = r1;

        $r6 = (kotlin.coroutines.Continuation) r3;

        return $r6;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageFetcher$flow$1$1 r0, $r5;
        kotlinx.coroutines.flow.FlowCollector r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.paging.PageFetcher$flow$1$1;

        r1 := @parameter0: kotlinx.coroutines.flow.FlowCollector;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.paging.PageFetcher$flow$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.paging.PageFetcher$flow$1$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.paging.PageFetcher$flow$1$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.paging.PageFetcher$flow$1$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.flow.FlowCollector $r4;

        r0 := @this: androidx.paging.PageFetcher$flow$1$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.flow.FlowCollector) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.paging.PageFetcher$flow$1$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.paging.PageFetcher$flow$1$2$1
    void <init>(java.lang.Object)
    {
        androidx.paging.PageFetcher$flow$1$2$1 r0;
        java.lang.Object r1;

        r0 := @this: androidx.paging.PageFetcher$flow$1$2$1;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<kotlin.jvm.internal.FunctionReferenceImpl: void <init>(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)>(0, r1, class "Landroidx/paging/PageFetcher;", "refresh", "refresh()V", 0);

        return;
    }

    public final void invoke()
    {
        androidx.paging.PageFetcher$flow$1$2$1 r0;
        java.lang.Object $r1;
        androidx.paging.PageFetcher $r2;

        r0 := @this: androidx.paging.PageFetcher$flow$1$2$1;

        $r1 = r0.<androidx.paging.PageFetcher$flow$1$2$1: java.lang.Object receiver>;

        $r2 = (androidx.paging.PageFetcher) $r1;

        virtualinvoke $r2.<androidx.paging.PageFetcher: void refresh()>();

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.paging.PageFetcher$flow$1$2$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.paging.PageFetcher$flow$1$2$1;

        virtualinvoke r0.<androidx.paging.PageFetcher$flow$1$2$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.paging.PageFetcher$flow$1$2
<androidx.paging.PageFetcher$flow$1$2: java.lang.Object L$1>
<androidx.paging.PageFetcher$flow$1$2: int label>
<androidx.paging.PageFetcher$flow$1$2: java.lang.Object L$0>
<androidx.paging.PageFetcher$flow$1$2: boolean Z$0>
<androidx.paging.PageFetcher$flow$1$2: androidx.paging.PageFetcher this$0>
<androidx.paging.PageFetcher$flow$1$2: androidx.paging.RemoteMediatorAccessor $remoteMediatorAccessor>
    void <init>(androidx.paging.PageFetcher, androidx.paging.RemoteMediatorAccessor, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageFetcher$flow$1$2 r0;
        androidx.paging.PageFetcher $r1;
        androidx.paging.RemoteMediatorAccessor $r2;
        kotlin.coroutines.Continuation $r3;

        r0 := @this: androidx.paging.PageFetcher$flow$1$2;

        $r1 := @parameter0: androidx.paging.PageFetcher;

        $r2 := @parameter1: androidx.paging.RemoteMediatorAccessor;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        r0.<androidx.paging.PageFetcher$flow$1$2: androidx.paging.PageFetcher this$0> = $r1;

        r0.<androidx.paging.PageFetcher$flow$1$2: androidx.paging.RemoteMediatorAccessor $remoteMediatorAccessor> = $r2;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(3, $r3);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.paging.PageFetcher$flow$1$2 r0;
        java.lang.Object $r1, r3, $r4, $r5, $r23, $r25, $r33, $r38, $r53, r55, $r56, r57;
        boolean z0, $z2, $z3, z4, z5, z6, $z7, $z8, z9, $z10, z11, $z12;
        androidx.paging.PagingState r2, $r36, r39, r40, r44, r47, r51, r52, r54, r65;
        int $i0;
        androidx.paging.PageFetcher$GenerationInfo $r6, r29, r30, r35, r43, r49, r58, r60;
        androidx.paging.PageFetcher $r7, $r8, $r11, $r22, $r26;
        androidx.paging.ConflatedEventBus $r9;
        androidx.paging.PageFetcher$flow$1$2$1 $r10;
        androidx.paging.PageFetcherSnapshot $r12, r32, r37, r59;
        androidx.paging.RemoteMediatorAccessor $r13;
        kotlin.jvm.functions.Function0 $r14;
        androidx.paging.RemoteMediatorConnection $r15;
        kotlinx.coroutines.CompletableJob $r16;
        kotlinx.coroutines.Job $r17, r61;
        androidx.paging.PagingSource $r19, $r31, r34;
        kotlin.coroutines.Continuation $r24, $r27;
        java.lang.IllegalStateException $r28;
        java.util.List $r41, r45;
        java.util.Collection r42, r46;
        java.lang.Integer $r48, $r50;
        androidx.paging.PagingConfig r62;
        kotlinx.coroutines.flow.Flow r63;
        kotlin.reflect.KFunction r64;

        r0 := @this: androidx.paging.PageFetcher$flow$1$2;

        $r1 := @parameter0: java.lang.Object;

        r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.paging.PageFetcher$flow$1$2: int label>;

        tableswitch($i0)
        {
            case 0: goto label01;
            case 1: goto label04;
            case 2: goto label07;
            default: goto label39;
        };

     label01:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r25 = r0.<androidx.paging.PageFetcher$flow$1$2: java.lang.Object L$0>;

        r29 = (androidx.paging.PageFetcher$GenerationInfo) $r25;

        z4 = r0.<androidx.paging.PageFetcher$flow$1$2: boolean Z$0>;

        $r26 = r0.<androidx.paging.PageFetcher$flow$1$2: androidx.paging.PageFetcher this$0>;

        r30 = r29;

        if r30 != null goto label02;

        $r31 = null;

        goto label03;

     label02:
        r32 = virtualinvoke r30.<androidx.paging.PageFetcher$GenerationInfo: androidx.paging.PageFetcherSnapshot getSnapshot()>();

        $r31 = virtualinvoke r32.<androidx.paging.PageFetcherSnapshot: androidx.paging.PagingSource getPagingSource$paging_common()>();

     label03:
        $r27 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.paging.PageFetcher$flow$1$2: java.lang.Object L$0> = r29;

        r0.<androidx.paging.PageFetcher$flow$1$2: boolean Z$0> = z4;

        r0.<androidx.paging.PageFetcher$flow$1$2: int label> = 1;

        $r33 = staticinvoke <androidx.paging.PageFetcher: java.lang.Object access$generateNewPagingSource(androidx.paging.PageFetcher,androidx.paging.PagingSource,kotlin.coroutines.Continuation)>($r26, $r31, $r27);

        if $r33 != r3 goto label05;

        return r3;

     label04:
        z4 = r0.<androidx.paging.PageFetcher$flow$1$2: boolean Z$0>;

        $r23 = r0.<androidx.paging.PageFetcher$flow$1$2: java.lang.Object L$0>;

        r29 = (androidx.paging.PageFetcher$GenerationInfo) $r23;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r33 = $r1;

     label05:
        r34 = (androidx.paging.PagingSource) $r33;

        r35 = r29;

        if r35 != null goto label06;

        $r36 = null;

        goto label09;

     label06:
        r37 = virtualinvoke r35.<androidx.paging.PageFetcher$GenerationInfo: androidx.paging.PageFetcherSnapshot getSnapshot()>();

        $r24 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.paging.PageFetcher$flow$1$2: java.lang.Object L$0> = r29;

        r0.<androidx.paging.PageFetcher$flow$1$2: java.lang.Object L$1> = r34;

        r0.<androidx.paging.PageFetcher$flow$1$2: boolean Z$0> = z4;

        r0.<androidx.paging.PageFetcher$flow$1$2: int label> = 2;

        $r38 = virtualinvoke r37.<androidx.paging.PageFetcherSnapshot: java.lang.Object currentPagingState(kotlin.coroutines.Continuation)>($r24);

        if $r38 != r3 goto label08;

        return r3;

     label07:
        z4 = r0.<androidx.paging.PageFetcher$flow$1$2: boolean Z$0>;

        $r4 = r0.<androidx.paging.PageFetcher$flow$1$2: java.lang.Object L$1>;

        r34 = (androidx.paging.PagingSource) $r4;

        $r5 = r0.<androidx.paging.PageFetcher$flow$1$2: java.lang.Object L$0>;

        r29 = (androidx.paging.PageFetcher$GenerationInfo) $r5;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r38 = $r1;

     label08:
        $r36 = (androidx.paging.PagingState) $r38;

     label09:
        r39 = $r36;

        r40 = r39;

        if r40 != null goto label10;

        $r41 = null;

        goto label11;

     label10:
        $r41 = virtualinvoke r40.<androidx.paging.PagingState: java.util.List getPages()>();

     label11:
        r42 = (java.util.Collection) $r41;

        z5 = 0;

        z6 = 0;

        if r42 == null goto label12;

        $z3 = interfaceinvoke r42.<java.util.Collection: boolean isEmpty()>();

        if $z3 == 0 goto label13;

     label12:
        $z7 = 1;

        goto label14;

     label13:
        $z7 = 0;

     label14:
        if $z7 == 0 goto label22;

        r43 = r29;

        if r43 != null goto label15;

        $z8 = 0;

        goto label21;

     label15:
        r44 = virtualinvoke r43.<androidx.paging.PageFetcher$GenerationInfo: androidx.paging.PagingState getState()>();

        if r44 != null goto label16;

        $z8 = 0;

        goto label21;

     label16:
        r45 = virtualinvoke r44.<androidx.paging.PagingState: java.util.List getPages()>();

        if r45 != null goto label17;

        $z8 = 0;

        goto label21;

     label17:
        r46 = (java.util.Collection) r45;

        z9 = 0;

        $z2 = interfaceinvoke r46.<java.util.Collection: boolean isEmpty()>();

        if $z2 != 0 goto label18;

        $z10 = 1;

        goto label19;

     label18:
        $z10 = 0;

     label19:
        if $z10 != 1 goto label20;

        $z8 = 1;

        goto label21;

     label20:
        $z8 = 0;

     label21:
        if $z8 == 0 goto label22;

        r39 = virtualinvoke r29.<androidx.paging.PageFetcher$GenerationInfo: androidx.paging.PagingState getState()>();

     label22:
        r47 = r39;

        if r47 != null goto label23;

        $r48 = null;

        goto label24;

     label23:
        $r48 = virtualinvoke r47.<androidx.paging.PagingState: java.lang.Integer getAnchorPosition()>();

     label24:
        if $r48 != null goto label28;

        r49 = r29;

        if r49 != null goto label25;

        $r50 = null;

        goto label27;

     label25:
        r51 = virtualinvoke r49.<androidx.paging.PageFetcher$GenerationInfo: androidx.paging.PagingState getState()>();

        if r51 != null goto label26;

        $r50 = null;

        goto label27;

     label26:
        $r50 = virtualinvoke r51.<androidx.paging.PagingState: java.lang.Integer getAnchorPosition()>();

     label27:
        if $r50 == null goto label28;

        r39 = virtualinvoke r29.<androidx.paging.PageFetcher$GenerationInfo: androidx.paging.PagingState getState()>();

     label28:
        r52 = r39;

        if r52 != null goto label29;

        $r53 = null;

        goto label30;

     label29:
        r54 = r52;

        z11 = 0;

        z0 = 0;

        r2 = r54;

        $r53 = virtualinvoke r34.<androidx.paging.PagingSource: java.lang.Object getRefreshKey(androidx.paging.PagingState)>(r2);

     label30:
        r55 = $r53;

        if r55 != null goto label31;

        $r22 = r0.<androidx.paging.PageFetcher$flow$1$2: androidx.paging.PageFetcher this$0>;

        $r56 = staticinvoke <androidx.paging.PageFetcher: java.lang.Object access$getInitialKey$p(androidx.paging.PageFetcher)>($r22);

        goto label32;

     label31:
        $r56 = r55;

     label32:
        r57 = $r56;

        r58 = r29;

        if r58 != null goto label33;

        goto label34;

     label33:
        r59 = virtualinvoke r58.<androidx.paging.PageFetcher$GenerationInfo: androidx.paging.PageFetcherSnapshot getSnapshot()>();

        virtualinvoke r59.<androidx.paging.PageFetcherSnapshot: void close()>();

     label34:
        r60 = r29;

        if r60 != null goto label35;

        goto label36;

     label35:
        r61 = virtualinvoke r60.<androidx.paging.PageFetcher$GenerationInfo: kotlinx.coroutines.Job getJob()>();

        staticinvoke <kotlinx.coroutines.Job$DefaultImpls: void cancel$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object)>(r61, null, 1, null);

     label36:
        $r6 = new androidx.paging.PageFetcher$GenerationInfo;

        $r7 = r0.<androidx.paging.PageFetcher$flow$1$2: androidx.paging.PageFetcher this$0>;

        r62 = staticinvoke <androidx.paging.PageFetcher: androidx.paging.PagingConfig access$getConfig$p(androidx.paging.PageFetcher)>($r7);

        $r8 = r0.<androidx.paging.PageFetcher$flow$1$2: androidx.paging.PageFetcher this$0>;

        $r9 = staticinvoke <androidx.paging.PageFetcher: androidx.paging.ConflatedEventBus access$getRetryEvents$p(androidx.paging.PageFetcher)>($r8);

        r63 = virtualinvoke $r9.<androidx.paging.ConflatedEventBus: kotlinx.coroutines.flow.Flow getFlow()>();

        $r10 = new androidx.paging.PageFetcher$flow$1$2$1;

        $r11 = r0.<androidx.paging.PageFetcher$flow$1$2: androidx.paging.PageFetcher this$0>;

        specialinvoke $r10.<androidx.paging.PageFetcher$flow$1$2$1: void <init>(java.lang.Object)>($r11);

        r64 = (kotlin.reflect.KFunction) $r10;

        r65 = r39;

        $r12 = new androidx.paging.PageFetcherSnapshot;

        $r19 = r34;

        if z4 == 0 goto label37;

        $z12 = 1;

        goto label38;

     label37:
        $z12 = 0;

     label38:
        $r13 = r0.<androidx.paging.PageFetcher$flow$1$2: androidx.paging.RemoteMediatorAccessor $remoteMediatorAccessor>;

        $r15 = (androidx.paging.RemoteMediatorConnection) $r13;

        $r14 = (kotlin.jvm.functions.Function0) r64;

        specialinvoke $r12.<androidx.paging.PageFetcherSnapshot: void <init>(java.lang.Object,androidx.paging.PagingSource,androidx.paging.PagingConfig,kotlinx.coroutines.flow.Flow,boolean,androidx.paging.RemoteMediatorConnection,androidx.paging.PagingState,kotlin.jvm.functions.Function0)>(r57, $r19, r62, r63, $z12, $r15, r65, $r14);

        $r16 = staticinvoke <kotlinx.coroutines.JobKt: kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object)>(null, 1, null);

        $r17 = (kotlinx.coroutines.Job) $r16;

        specialinvoke $r6.<androidx.paging.PageFetcher$GenerationInfo: void <init>(androidx.paging.PageFetcherSnapshot,androidx.paging.PagingState,kotlinx.coroutines.Job)>($r12, r39, $r17);

        return $r6;

     label39:
        $r28 = new java.lang.IllegalStateException;

        specialinvoke $r28.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r28;
    }

    public final java.lang.Object invoke(androidx.paging.PageFetcher$GenerationInfo, boolean, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageFetcher$flow$1$2 r0, r3, $r4;
        androidx.paging.PageFetcher$GenerationInfo r1;
        boolean z0;
        kotlin.coroutines.Continuation r2;
        androidx.paging.RemoteMediatorAccessor $r5;
        androidx.paging.PageFetcher $r6;
        kotlin.Unit $r7;
        java.lang.Object $r8;

        r0 := @this: androidx.paging.PageFetcher$flow$1$2;

        r1 := @parameter0: androidx.paging.PageFetcher$GenerationInfo;

        z0 := @parameter1: boolean;

        r2 := @parameter2: kotlin.coroutines.Continuation;

        $r4 = new androidx.paging.PageFetcher$flow$1$2;

        $r6 = r0.<androidx.paging.PageFetcher$flow$1$2: androidx.paging.PageFetcher this$0>;

        $r5 = r0.<androidx.paging.PageFetcher$flow$1$2: androidx.paging.RemoteMediatorAccessor $remoteMediatorAccessor>;

        specialinvoke $r4.<androidx.paging.PageFetcher$flow$1$2: void <init>(androidx.paging.PageFetcher,androidx.paging.RemoteMediatorAccessor,kotlin.coroutines.Continuation)>($r6, $r5, r2);

        r3 = $r4;

        r3.<androidx.paging.PageFetcher$flow$1$2: java.lang.Object L$0> = r1;

        r3.<androidx.paging.PageFetcher$flow$1$2: boolean Z$0> = z0;

        $r7 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r8 = virtualinvoke r3.<androidx.paging.PageFetcher$flow$1$2: java.lang.Object invokeSuspend(java.lang.Object)>($r7);

        return $r8;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        androidx.paging.PageFetcher$flow$1$2 r0;
        java.lang.Object r1, r2, r3, $r7;
        java.lang.Boolean $r4;
        androidx.paging.PageFetcher$GenerationInfo $r5;
        boolean $z0;
        kotlin.coroutines.Continuation $r6;

        r0 := @this: androidx.paging.PageFetcher$flow$1$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r5 = (androidx.paging.PageFetcher$GenerationInfo) r1;

        $r4 = (java.lang.Boolean) r2;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        $r6 = (kotlin.coroutines.Continuation) r3;

        $r7 = virtualinvoke r0.<androidx.paging.PageFetcher$flow$1$2: java.lang.Object invoke(androidx.paging.PageFetcher$GenerationInfo,boolean,kotlin.coroutines.Continuation)>($r5, $z0, $r6);

        return $r7;
    }

androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$collect$1
<androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$collect$1: androidx.paging.SimpleProducerScope $receiver$inlined>
    public void <init>(androidx.paging.SimpleProducerScope)
    {
        androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$collect$1 r0;
        androidx.paging.SimpleProducerScope r1;

        r0 := @this: androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$collect$1;

        r1 := @parameter0: androidx.paging.SimpleProducerScope;

        r0.<androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$collect$1: androidx.paging.SimpleProducerScope $receiver$inlined> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object emit(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$collect$1 r0;
        java.lang.Object r1, $r6, $r7;
        kotlin.coroutines.Continuation $r2;
        androidx.paging.PagingData r4;
        androidx.paging.SimpleProducerScope $r5;
        kotlin.Unit $r8;

        r0 := @this: androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$collect$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r4 = (androidx.paging.PagingData) r1;

        $r5 = r0.<androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$collect$1: androidx.paging.SimpleProducerScope $receiver$inlined>;

        $r6 = interfaceinvoke $r5.<androidx.paging.SimpleProducerScope: java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation)>(r4, $r2);

        $r7 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r6 != $r7 goto label1;

        return $r6;

     label1:
        $r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r8;
    }

androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$simpleMapLatest$1
<androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$simpleMapLatest$1: int label>
<androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$simpleMapLatest$1: java.lang.Object L$0>
<androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$simpleMapLatest$1: java.lang.Object L$1>
<androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$simpleMapLatest$1: androidx.paging.PageFetcher this$0>
<androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$simpleMapLatest$1: androidx.paging.RemoteMediatorAccessor $remoteMediatorAccessor$inlined>
    public void <init>(kotlin.coroutines.Continuation, androidx.paging.PageFetcher, androidx.paging.RemoteMediatorAccessor)
    {
        androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$simpleMapLatest$1 r0;
        kotlin.coroutines.Continuation $r1;
        androidx.paging.PageFetcher r2;
        androidx.paging.RemoteMediatorAccessor r3;

        r0 := @this: androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$simpleMapLatest$1;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

        r2 := @parameter1: androidx.paging.PageFetcher;

        r3 := @parameter2: androidx.paging.RemoteMediatorAccessor;

        r0.<androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$simpleMapLatest$1: androidx.paging.PageFetcher this$0> = r2;

        r0.<androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$simpleMapLatest$1: androidx.paging.RemoteMediatorAccessor $remoteMediatorAccessor$inlined> = r3;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(3, $r1);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$simpleMapLatest$1 r0;
        java.lang.Object $r1, r2, r3, $r8, $r21;
        kotlinx.coroutines.flow.FlowCollector r4;
        kotlin.coroutines.Continuation r5, $r20;
        kotlinx.coroutines.flow.Flow r6;
        int $i0;
        kotlin.Unit $r7;
        androidx.paging.PageFetcher $r9, $r15, $r17;
        androidx.paging.PageFetcherSnapshot $r10, $r16;
        kotlinx.coroutines.Job $r11;
        androidx.paging.RemoteMediatorAccessor $r12;
        androidx.paging.PagingData $r13, r24;
        androidx.paging.PageFetcher$PagerUiReceiver $r14;
        androidx.paging.ConflatedEventBus $r18;
        androidx.paging.UiReceiver $r19;
        java.lang.IllegalStateException $r22;
        androidx.paging.PageFetcher$GenerationInfo r23;

        r0 := @this: androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$simpleMapLatest$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$simpleMapLatest$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r8 = r0.<androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$simpleMapLatest$1: java.lang.Object L$0>;

        r3 = r0.<androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$simpleMapLatest$1: java.lang.Object L$1>;

        r4 = (kotlinx.coroutines.flow.FlowCollector) $r8;

        r5 = (kotlin.coroutines.Continuation) r0;

        r23 = (androidx.paging.PageFetcher$GenerationInfo) r3;

        $r9 = r0.<androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$simpleMapLatest$1: androidx.paging.PageFetcher this$0>;

        $r10 = virtualinvoke r23.<androidx.paging.PageFetcher$GenerationInfo: androidx.paging.PageFetcherSnapshot getSnapshot()>();

        $r11 = virtualinvoke r23.<androidx.paging.PageFetcher$GenerationInfo: kotlinx.coroutines.Job getJob()>();

        $r12 = r0.<androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$simpleMapLatest$1: androidx.paging.RemoteMediatorAccessor $remoteMediatorAccessor$inlined>;

        r6 = staticinvoke <androidx.paging.PageFetcher: kotlinx.coroutines.flow.Flow access$injectRemoteEvents(androidx.paging.PageFetcher,androidx.paging.PageFetcherSnapshot,kotlinx.coroutines.Job,androidx.paging.RemoteMediatorAccessor)>($r9, $r10, $r11, $r12);

        $r13 = new androidx.paging.PagingData;

        $r14 = new androidx.paging.PageFetcher$PagerUiReceiver;

        $r15 = r0.<androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$simpleMapLatest$1: androidx.paging.PageFetcher this$0>;

        $r16 = virtualinvoke r23.<androidx.paging.PageFetcher$GenerationInfo: androidx.paging.PageFetcherSnapshot getSnapshot()>();

        $r17 = r0.<androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$simpleMapLatest$1: androidx.paging.PageFetcher this$0>;

        $r18 = staticinvoke <androidx.paging.PageFetcher: androidx.paging.ConflatedEventBus access$getRetryEvents$p(androidx.paging.PageFetcher)>($r17);

        specialinvoke $r14.<androidx.paging.PageFetcher$PagerUiReceiver: void <init>(androidx.paging.PageFetcher,androidx.paging.PageFetcherSnapshot,androidx.paging.ConflatedEventBus)>($r15, $r16, $r18);

        $r19 = (androidx.paging.UiReceiver) $r14;

        specialinvoke $r13.<androidx.paging.PagingData: void <init>(kotlinx.coroutines.flow.Flow,androidx.paging.UiReceiver)>(r6, $r19);

        r24 = $r13;

        $r20 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$simpleMapLatest$1: int label> = 1;

        $r21 = interfaceinvoke r4.<kotlinx.coroutines.flow.FlowCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)>(r24, $r20);

        if $r21 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r7 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r7;

     label4:
        $r22 = new java.lang.IllegalStateException;

        specialinvoke $r22.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r22;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector, java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$simpleMapLatest$1 r0, r4, $r5;
        kotlinx.coroutines.flow.FlowCollector r1;
        java.lang.Object r2, $r9;
        kotlin.coroutines.Continuation r3;
        androidx.paging.RemoteMediatorAccessor $r6;
        androidx.paging.PageFetcher $r7;
        kotlin.Unit $r8;

        r0 := @this: androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$simpleMapLatest$1;

        r1 := @parameter0: kotlinx.coroutines.flow.FlowCollector;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: kotlin.coroutines.Continuation;

        $r5 = new androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$simpleMapLatest$1;

        $r7 = r0.<androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$simpleMapLatest$1: androidx.paging.PageFetcher this$0>;

        $r6 = r0.<androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$simpleMapLatest$1: androidx.paging.RemoteMediatorAccessor $remoteMediatorAccessor$inlined>;

        specialinvoke $r5.<androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$simpleMapLatest$1: void <init>(kotlin.coroutines.Continuation,androidx.paging.PageFetcher,androidx.paging.RemoteMediatorAccessor)>(r3, $r7, $r6);

        r4 = $r5;

        r4.<androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$simpleMapLatest$1: java.lang.Object L$0> = r1;

        r4.<androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$simpleMapLatest$1: java.lang.Object L$1> = r2;

        $r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r9 = virtualinvoke r4.<androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$simpleMapLatest$1: java.lang.Object invokeSuspend(java.lang.Object)>($r8);

        return $r9;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$simpleMapLatest$1 r0;
        java.lang.Object r1, r2, r3, $r6;
        kotlin.coroutines.Continuation $r4;
        kotlinx.coroutines.flow.FlowCollector $r5;

        r0 := @this: androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$simpleMapLatest$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r5 = (kotlinx.coroutines.flow.FlowCollector) r1;

        $r4 = (kotlin.coroutines.Continuation) r3;

        $r6 = virtualinvoke r0.<androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$simpleMapLatest$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object,kotlin.coroutines.Continuation)>($r5, r2, $r4);

        return $r6;
    }

androidx.paging.PageFetcher$flow$1
<androidx.paging.PageFetcher$flow$1: int label>
<androidx.paging.PageFetcher$flow$1: java.lang.Object L$0>
<androidx.paging.PageFetcher$flow$1: androidx.paging.RemoteMediator $remoteMediator>
<androidx.paging.PageFetcher$flow$1: androidx.paging.PageFetcher this$0>
    void <init>(androidx.paging.RemoteMediator, androidx.paging.PageFetcher, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageFetcher$flow$1 r0;
        androidx.paging.RemoteMediator $r1;
        androidx.paging.PageFetcher $r2;
        kotlin.coroutines.Continuation $r3;

        r0 := @this: androidx.paging.PageFetcher$flow$1;

        $r1 := @parameter0: androidx.paging.RemoteMediator;

        $r2 := @parameter1: androidx.paging.PageFetcher;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        r0.<androidx.paging.PageFetcher$flow$1: androidx.paging.RemoteMediator $remoteMediator> = $r1;

        r0.<androidx.paging.PageFetcher$flow$1: androidx.paging.PageFetcher this$0> = $r2;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r3);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.paging.PageFetcher$flow$1 r0;
        java.lang.Object $r1, r5, $r7, $r24;
        androidx.paging.SimpleProducerScope $r2;
        androidx.paging.RemoteMediatorAccessor r3, $r29;
        boolean z0;
        androidx.paging.RemoteMediator r4, $r28;
        int $i0;
        kotlin.Unit $r6;
        kotlinx.coroutines.CoroutineScope $r8;
        androidx.paging.PageFetcher $r9, $r16, $r25;
        androidx.paging.ConflatedEventBus $r10;
        kotlinx.coroutines.flow.Flow $r11, $r14, $r18, $r26, $r30;
        androidx.paging.PageFetcher$flow$1$1 $r12;
        kotlin.jvm.functions.Function2 $r13;
        androidx.paging.PageFetcher$flow$1$2 $r15;
        kotlin.jvm.functions.Function3 $r17, $r20;
        androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$simpleMapLatest$1 $r19;
        androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$collect$1 $r21;
        kotlinx.coroutines.flow.FlowCollector $r22;
        kotlin.coroutines.Continuation $r23;
        java.lang.IllegalStateException $r27;

        r0 := @this: androidx.paging.PageFetcher$flow$1;

        $r1 := @parameter0: java.lang.Object;

        r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.paging.PageFetcher$flow$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label4;
            default: goto label6;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r7 = r0.<androidx.paging.PageFetcher$flow$1: java.lang.Object L$0>;

        $r2 = (androidx.paging.SimpleProducerScope) $r7;

        $r28 = r0.<androidx.paging.PageFetcher$flow$1: androidx.paging.RemoteMediator $remoteMediator>;

        if $r28 != null goto label2;

        $r29 = null;

        goto label3;

     label2:
        z0 = 0;

        r4 = $r28;

        $r8 = (kotlinx.coroutines.CoroutineScope) $r2;

        $r29 = staticinvoke <androidx.paging.RemoteMediatorAccessorKt: androidx.paging.RemoteMediatorAccessor RemoteMediatorAccessor(kotlinx.coroutines.CoroutineScope,androidx.paging.RemoteMediator)>($r8, r4);

     label3:
        r3 = $r29;

        $r9 = r0.<androidx.paging.PageFetcher$flow$1: androidx.paging.PageFetcher this$0>;

        $r10 = staticinvoke <androidx.paging.PageFetcher: androidx.paging.ConflatedEventBus access$getRefreshEvents$p(androidx.paging.PageFetcher)>($r9);

        $r11 = virtualinvoke $r10.<androidx.paging.ConflatedEventBus: kotlinx.coroutines.flow.Flow getFlow()>();

        $r12 = new androidx.paging.PageFetcher$flow$1$1;

        specialinvoke $r12.<androidx.paging.PageFetcher$flow$1$1: void <init>(androidx.paging.RemoteMediatorAccessor,kotlin.coroutines.Continuation)>(r3, null);

        $r13 = (kotlin.jvm.functions.Function2) $r12;

        $r14 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onStart(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)>($r11, $r13);

        $r15 = new androidx.paging.PageFetcher$flow$1$2;

        $r16 = r0.<androidx.paging.PageFetcher$flow$1: androidx.paging.PageFetcher this$0>;

        specialinvoke $r15.<androidx.paging.PageFetcher$flow$1$2: void <init>(androidx.paging.PageFetcher,androidx.paging.RemoteMediatorAccessor,kotlin.coroutines.Continuation)>($r16, r3, null);

        $r17 = (kotlin.jvm.functions.Function3) $r15;

        $r18 = staticinvoke <androidx.paging.FlowExtKt: kotlinx.coroutines.flow.Flow simpleScan(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function3)>($r14, null, $r17);

        $r30 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow filterNotNull(kotlinx.coroutines.flow.Flow)>($r18);

        $r19 = new androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$simpleMapLatest$1;

        $r25 = r0.<androidx.paging.PageFetcher$flow$1: androidx.paging.PageFetcher this$0>;

        specialinvoke $r19.<androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$simpleMapLatest$1: void <init>(kotlin.coroutines.Continuation,androidx.paging.PageFetcher,androidx.paging.RemoteMediatorAccessor)>(null, $r25, r3);

        $r20 = (kotlin.jvm.functions.Function3) $r19;

        $r26 = staticinvoke <androidx.paging.FlowExtKt: kotlinx.coroutines.flow.Flow simpleTransformLatest(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)>($r30, $r20);

        $r21 = new androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$collect$1;

        specialinvoke $r21.<androidx.paging.PageFetcher$flow$1$invokeSuspend$$inlined$collect$1: void <init>(androidx.paging.SimpleProducerScope)>($r2);

        $r22 = (kotlinx.coroutines.flow.FlowCollector) $r21;

        $r23 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.paging.PageFetcher$flow$1: int label> = 1;

        $r24 = interfaceinvoke $r26.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r22, $r23);

        if $r24 != r5 goto label5;

        return r5;

     label4:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label5:
        $r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r6;

     label6:
        $r27 = new java.lang.IllegalStateException;

        specialinvoke $r27.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r27;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageFetcher$flow$1 r0, r3, $r4;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r7;
        androidx.paging.PageFetcher $r5;
        androidx.paging.RemoteMediator $r6;

        r0 := @this: androidx.paging.PageFetcher$flow$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = new androidx.paging.PageFetcher$flow$1;

        $r6 = r0.<androidx.paging.PageFetcher$flow$1: androidx.paging.RemoteMediator $remoteMediator>;

        $r5 = r0.<androidx.paging.PageFetcher$flow$1: androidx.paging.PageFetcher this$0>;

        specialinvoke $r4.<androidx.paging.PageFetcher$flow$1: void <init>(androidx.paging.RemoteMediator,androidx.paging.PageFetcher,kotlin.coroutines.Continuation)>($r6, $r5, $r2);

        r3 = $r4;

        r3.<androidx.paging.PageFetcher$flow$1: java.lang.Object L$0> = r1;

        $r7 = (kotlin.coroutines.Continuation) r3;

        return $r7;
    }

    public final java.lang.Object invoke(androidx.paging.SimpleProducerScope, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageFetcher$flow$1 r0, $r5;
        androidx.paging.SimpleProducerScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.paging.PageFetcher$flow$1;

        r1 := @parameter0: androidx.paging.SimpleProducerScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.paging.PageFetcher$flow$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.paging.PageFetcher$flow$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.paging.PageFetcher$flow$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.paging.PageFetcher$flow$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        androidx.paging.SimpleProducerScope $r4;

        r0 := @this: androidx.paging.PageFetcher$flow$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.paging.SimpleProducerScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.paging.PageFetcher$flow$1: java.lang.Object invoke(androidx.paging.SimpleProducerScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.paging.PageFetcher$generateNewPagingSource$1
<androidx.paging.PageFetcher$generateNewPagingSource$1: java.lang.Object L$0>
<androidx.paging.PageFetcher$generateNewPagingSource$1: java.lang.Object L$1>
<androidx.paging.PageFetcher$generateNewPagingSource$1: java.lang.Object result>
<androidx.paging.PageFetcher$generateNewPagingSource$1: androidx.paging.PageFetcher this$0>
<androidx.paging.PageFetcher$generateNewPagingSource$1: int label>
    void <init>(androidx.paging.PageFetcher, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageFetcher$generateNewPagingSource$1 r0;
        androidx.paging.PageFetcher r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.paging.PageFetcher$generateNewPagingSource$1;

        r1 := @parameter0: androidx.paging.PageFetcher;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.paging.PageFetcher$generateNewPagingSource$1: androidx.paging.PageFetcher this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.paging.PageFetcher$generateNewPagingSource$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.paging.PageFetcher $r3;

        r0 := @this: androidx.paging.PageFetcher$generateNewPagingSource$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.paging.PageFetcher$generateNewPagingSource$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.paging.PageFetcher$generateNewPagingSource$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.paging.PageFetcher$generateNewPagingSource$1: int label> = $i1;

        $r3 = r0.<androidx.paging.PageFetcher$generateNewPagingSource$1: androidx.paging.PageFetcher this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = staticinvoke <androidx.paging.PageFetcher: java.lang.Object access$generateNewPagingSource(androidx.paging.PageFetcher,androidx.paging.PagingSource,kotlin.coroutines.Continuation)>($r3, null, $r2);

        return $r4;
    }

androidx.paging.PageFetcher$generateNewPagingSource$3
    void <init>(java.lang.Object)
    {
        androidx.paging.PageFetcher$generateNewPagingSource$3 r0;
        java.lang.Object r1;

        r0 := @this: androidx.paging.PageFetcher$generateNewPagingSource$3;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<kotlin.jvm.internal.FunctionReferenceImpl: void <init>(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)>(0, r1, class "Landroidx/paging/PageFetcher;", "invalidate", "invalidate()V", 0);

        return;
    }

    public final void invoke()
    {
        androidx.paging.PageFetcher$generateNewPagingSource$3 r0;
        java.lang.Object $r1;
        androidx.paging.PageFetcher $r2;

        r0 := @this: androidx.paging.PageFetcher$generateNewPagingSource$3;

        $r1 = r0.<androidx.paging.PageFetcher$generateNewPagingSource$3: java.lang.Object receiver>;

        $r2 = (androidx.paging.PageFetcher) $r1;

        staticinvoke <androidx.paging.PageFetcher: void access$invalidate(androidx.paging.PageFetcher)>($r2);

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.paging.PageFetcher$generateNewPagingSource$3 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.paging.PageFetcher$generateNewPagingSource$3;

        virtualinvoke r0.<androidx.paging.PageFetcher$generateNewPagingSource$3: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.paging.PageFetcher$generateNewPagingSource$4
    void <init>(java.lang.Object)
    {
        androidx.paging.PageFetcher$generateNewPagingSource$4 r0;
        java.lang.Object r1;

        r0 := @this: androidx.paging.PageFetcher$generateNewPagingSource$4;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<kotlin.jvm.internal.FunctionReferenceImpl: void <init>(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)>(0, r1, class "Landroidx/paging/PageFetcher;", "invalidate", "invalidate()V", 0);

        return;
    }

    public final void invoke()
    {
        androidx.paging.PageFetcher$generateNewPagingSource$4 r0;
        java.lang.Object $r1;
        androidx.paging.PageFetcher $r2;

        r0 := @this: androidx.paging.PageFetcher$generateNewPagingSource$4;

        $r1 = r0.<androidx.paging.PageFetcher$generateNewPagingSource$4: java.lang.Object receiver>;

        $r2 = (androidx.paging.PageFetcher) $r1;

        staticinvoke <androidx.paging.PageFetcher: void access$invalidate(androidx.paging.PageFetcher)>($r2);

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.paging.PageFetcher$generateNewPagingSource$4 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.paging.PageFetcher$generateNewPagingSource$4;

        virtualinvoke r0.<androidx.paging.PageFetcher$generateNewPagingSource$4: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.paging.PageFetcher$GenerationInfo
<androidx.paging.PageFetcher$GenerationInfo: androidx.paging.PageFetcherSnapshot snapshot>
<androidx.paging.PageFetcher$GenerationInfo: androidx.paging.PagingState state>
<androidx.paging.PageFetcher$GenerationInfo: kotlinx.coroutines.Job job>
    public void <init>(androidx.paging.PageFetcherSnapshot, androidx.paging.PagingState, kotlinx.coroutines.Job)
    {
        androidx.paging.PageFetcher$GenerationInfo r0;
        androidx.paging.PageFetcherSnapshot r1;
        androidx.paging.PagingState r2;
        kotlinx.coroutines.Job r3;

        r0 := @this: androidx.paging.PageFetcher$GenerationInfo;

        r1 := @parameter0: androidx.paging.PageFetcherSnapshot;

        r2 := @parameter1: androidx.paging.PagingState;

        r3 := @parameter2: kotlinx.coroutines.Job;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "snapshot");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "job");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.paging.PageFetcher$GenerationInfo: androidx.paging.PageFetcherSnapshot snapshot> = r1;

        r0.<androidx.paging.PageFetcher$GenerationInfo: androidx.paging.PagingState state> = r2;

        r0.<androidx.paging.PageFetcher$GenerationInfo: kotlinx.coroutines.Job job> = r3;

        return;
    }

    public final androidx.paging.PageFetcherSnapshot getSnapshot()
    {
        androidx.paging.PageFetcher$GenerationInfo r0;
        androidx.paging.PageFetcherSnapshot $r1;

        r0 := @this: androidx.paging.PageFetcher$GenerationInfo;

        $r1 = r0.<androidx.paging.PageFetcher$GenerationInfo: androidx.paging.PageFetcherSnapshot snapshot>;

        return $r1;
    }

    public final androidx.paging.PagingState getState()
    {
        androidx.paging.PageFetcher$GenerationInfo r0;
        androidx.paging.PagingState $r1;

        r0 := @this: androidx.paging.PageFetcher$GenerationInfo;

        $r1 = r0.<androidx.paging.PageFetcher$GenerationInfo: androidx.paging.PagingState state>;

        return $r1;
    }

    public final kotlinx.coroutines.Job getJob()
    {
        androidx.paging.PageFetcher$GenerationInfo r0;
        kotlinx.coroutines.Job $r1;

        r0 := @this: androidx.paging.PageFetcher$GenerationInfo;

        $r1 = r0.<androidx.paging.PageFetcher$GenerationInfo: kotlinx.coroutines.Job job>;

        return $r1;
    }

androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$collect$1
<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$collect$1: androidx.paging.SimpleProducerScope $$this$cancelableChannelFlow$inlined>
    public void <init>(androidx.paging.SimpleProducerScope)
    {
        androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$collect$1 r0;
        androidx.paging.SimpleProducerScope r1;

        r0 := @this: androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$collect$1;

        r1 := @parameter0: androidx.paging.SimpleProducerScope;

        r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$collect$1: androidx.paging.SimpleProducerScope $$this$cancelableChannelFlow$inlined> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object emit(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$collect$1 r0;
        java.lang.Object r1, $r6, $r7;
        kotlin.coroutines.Continuation $r2;
        androidx.paging.PageEvent r4;
        androidx.paging.SimpleProducerScope $r5;
        kotlin.Unit $r8;

        r0 := @this: androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$collect$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r4 = (androidx.paging.PageEvent) r1;

        $r5 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$collect$1: androidx.paging.SimpleProducerScope $$this$cancelableChannelFlow$inlined>;

        $r6 = interfaceinvoke $r5.<androidx.paging.SimpleProducerScope: java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation)>(r4, $r2);

        $r7 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r6 != $r7 goto label1;

        return $r6;

     label1:
        $r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r8;
    }

androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1
<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1: int label>
<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1: java.lang.Object L$0>
<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1: java.lang.Object L$1>
<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1: java.lang.Object L$2>
<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1: androidx.paging.SimpleProducerScope $$this$simpleChannelFlow>
<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1: androidx.paging.MutableLoadStateCollection $sourceStates$inlined>
    public void <init>(androidx.paging.SimpleProducerScope, kotlin.coroutines.Continuation, androidx.paging.MutableLoadStateCollection)
    {
        androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1 r0;
        androidx.paging.SimpleProducerScope $r1;
        kotlin.coroutines.Continuation $r2;
        androidx.paging.MutableLoadStateCollection r3;

        r0 := @this: androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1;

        $r1 := @parameter0: androidx.paging.SimpleProducerScope;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r3 := @parameter2: androidx.paging.MutableLoadStateCollection;

        r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1: androidx.paging.MutableLoadStateCollection $sourceStates$inlined> = r3;

        r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1: androidx.paging.SimpleProducerScope $$this$simpleChannelFlow> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(4, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1 r0;
        java.lang.Object $r1, r2, r3, r4, $r12, $r42;
        androidx.paging.CombineSource r5, r8, $r13;
        androidx.paging.SimpleProducerScope r6;
        kotlin.coroutines.Continuation r7, $r41;
        androidx.paging.PageEvent r9, r10, $r39, r40;
        int $i0;
        kotlin.Unit $r11;
        androidx.paging.PageEvent$LoadStateUpdate $r14, $r18, $r21, $r22;
        androidx.paging.MutableLoadStateCollection $r15, $r19, $r25, $r31;
        androidx.paging.LoadStates $r16, $r20, $r23, $r32, $r35, r38;
        boolean $z1, $z2, $z3;
        kotlin.NoWhenBranchMatchedException $r17;
        androidx.paging.PageEvent$Drop $r24;
        androidx.paging.LoadType $r26;
        androidx.paging.LoadState$NotLoading$Companion $r27;
        androidx.paging.LoadState$NotLoading $r28;
        androidx.paging.LoadState $r29;
        androidx.paging.PageEvent$Insert $r30, $r33, $r34, $r36;
        java.lang.IllegalStateException $r37;

        r0 := @this: androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label7;
            default: goto label9;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        r3 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1: java.lang.Object L$0>;

        r4 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1: java.lang.Object L$1>;

        $r12 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1: java.lang.Object L$2>;

        r5 = (androidx.paging.CombineSource) $r12;

        r6 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1: androidx.paging.SimpleProducerScope $$this$simpleChannelFlow>;

        r7 = (kotlin.coroutines.Continuation) r0;

        r8 = r5;

        r9 = (androidx.paging.PageEvent) r4;

        r38 = (androidx.paging.LoadStates) r3;

        $r13 = <androidx.paging.CombineSource: androidx.paging.CombineSource RECEIVER>;

        if r8 == $r13 goto label5;

        r10 = r9;

        $z1 = r10 instanceof androidx.paging.PageEvent$Insert;

        if $z1 == 0 goto label2;

        $r31 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1: androidx.paging.MutableLoadStateCollection $sourceStates$inlined>;

        $r30 = (androidx.paging.PageEvent$Insert) r9;

        $r32 = virtualinvoke $r30.<androidx.paging.PageEvent$Insert: androidx.paging.LoadStates getSourceLoadStates()>();

        virtualinvoke $r31.<androidx.paging.MutableLoadStateCollection: void set(androidx.paging.LoadStates)>($r32);

        $r34 = (androidx.paging.PageEvent$Insert) r9;

        $r33 = (androidx.paging.PageEvent$Insert) r9;

        $r35 = virtualinvoke $r33.<androidx.paging.PageEvent$Insert: androidx.paging.LoadStates getSourceLoadStates()>();

        $r36 = staticinvoke <androidx.paging.PageEvent$Insert: androidx.paging.PageEvent$Insert copy$default(androidx.paging.PageEvent$Insert,androidx.paging.LoadType,java.util.List,int,int,androidx.paging.LoadStates,androidx.paging.LoadStates,int,java.lang.Object)>($r34, null, null, 0, 0, $r35, r38, 15, null);

        $r39 = (androidx.paging.PageEvent) $r36;

        goto label6;

     label2:
        $z2 = r10 instanceof androidx.paging.PageEvent$Drop;

        if $z2 == 0 goto label3;

        $r25 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1: androidx.paging.MutableLoadStateCollection $sourceStates$inlined>;

        $r24 = (androidx.paging.PageEvent$Drop) r9;

        $r26 = virtualinvoke $r24.<androidx.paging.PageEvent$Drop: androidx.paging.LoadType getLoadType()>();

        $r27 = <androidx.paging.LoadState$NotLoading: androidx.paging.LoadState$NotLoading$Companion Companion>;

        $r28 = virtualinvoke $r27.<androidx.paging.LoadState$NotLoading$Companion: androidx.paging.LoadState$NotLoading getIncomplete$paging_common()>();

        $r29 = (androidx.paging.LoadState) $r28;

        virtualinvoke $r25.<androidx.paging.MutableLoadStateCollection: void set(androidx.paging.LoadType,androidx.paging.LoadState)>($r26, $r29);

        $r39 = r9;

        goto label6;

     label3:
        $z3 = r10 instanceof androidx.paging.PageEvent$LoadStateUpdate;

        if $z3 == 0 goto label4;

        $r19 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1: androidx.paging.MutableLoadStateCollection $sourceStates$inlined>;

        $r18 = (androidx.paging.PageEvent$LoadStateUpdate) r9;

        $r20 = virtualinvoke $r18.<androidx.paging.PageEvent$LoadStateUpdate: androidx.paging.LoadStates getSource()>();

        virtualinvoke $r19.<androidx.paging.MutableLoadStateCollection: void set(androidx.paging.LoadStates)>($r20);

        $r21 = new androidx.paging.PageEvent$LoadStateUpdate;

        $r22 = (androidx.paging.PageEvent$LoadStateUpdate) r9;

        $r23 = virtualinvoke $r22.<androidx.paging.PageEvent$LoadStateUpdate: androidx.paging.LoadStates getSource()>();

        specialinvoke $r21.<androidx.paging.PageEvent$LoadStateUpdate: void <init>(androidx.paging.LoadStates,androidx.paging.LoadStates)>($r23, r38);

        $r39 = (androidx.paging.PageEvent) $r21;

        goto label6;

     label4:
        $r17 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r17.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r17;

     label5:
        $r14 = new androidx.paging.PageEvent$LoadStateUpdate;

        $r15 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1: androidx.paging.MutableLoadStateCollection $sourceStates$inlined>;

        $r16 = virtualinvoke $r15.<androidx.paging.MutableLoadStateCollection: androidx.paging.LoadStates snapshot()>();

        specialinvoke $r14.<androidx.paging.PageEvent$LoadStateUpdate: void <init>(androidx.paging.LoadStates,androidx.paging.LoadStates)>($r16, r38);

        $r39 = (androidx.paging.PageEvent) $r14;

     label6:
        r40 = $r39;

        $r41 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1: int label> = 1;

        $r42 = interfaceinvoke r6.<androidx.paging.SimpleProducerScope: java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation)>(r40, $r41);

        if $r42 != r2 goto label8;

        return r2;

     label7:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label8:
        $r11 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r11;

     label9:
        $r37 = new java.lang.IllegalStateException;

        specialinvoke $r37.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r37;
    }

    public final java.lang.Object invoke(java.lang.Object, java.lang.Object, androidx.paging.CombineSource, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1 r0, r5, $r6;
        java.lang.Object r1, r2, $r10;
        androidx.paging.CombineSource r3;
        kotlin.coroutines.Continuation r4;
        androidx.paging.MutableLoadStateCollection $r7;
        androidx.paging.SimpleProducerScope $r8;
        kotlin.Unit $r9;

        r0 := @this: androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: androidx.paging.CombineSource;

        r4 := @parameter3: kotlin.coroutines.Continuation;

        $r6 = new androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1;

        $r8 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1: androidx.paging.SimpleProducerScope $$this$simpleChannelFlow>;

        $r7 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1: androidx.paging.MutableLoadStateCollection $sourceStates$inlined>;

        specialinvoke $r6.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1: void <init>(androidx.paging.SimpleProducerScope,kotlin.coroutines.Continuation,androidx.paging.MutableLoadStateCollection)>($r8, r4, $r7);

        r5 = $r6;

        r5.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1: java.lang.Object L$0> = r1;

        r5.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1: java.lang.Object L$1> = r2;

        r5.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1: java.lang.Object L$2> = r3;

        $r9 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r10 = virtualinvoke r5.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1: java.lang.Object invokeSuspend(java.lang.Object)>($r9);

        return $r10;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1 r0;
        java.lang.Object r1, r2, r3, r4, $r7;
        kotlin.coroutines.Continuation $r5;
        androidx.paging.CombineSource $r6;

        r0 := @this: androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        $r6 = (androidx.paging.CombineSource) r3;

        $r5 = (kotlin.coroutines.Continuation) r4;

        $r7 = virtualinvoke r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,androidx.paging.CombineSource,kotlin.coroutines.Continuation)>(r1, r2, $r6, $r5);

        return $r7;
    }

androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1$1
<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1$1: java.lang.Object result>
<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1$1: int label>
<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1$1: androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1 this$0>
    public void <init>(androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1$1 r0;
        androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1 r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1$1;

        r1 := @parameter0: androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1$1: androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1 this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1 $r3;

        r0 := @this: androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1$1: int label> = $i1;

        $r3 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1$1: androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1 this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)>(null, $r2);

        return $r4;
    }

androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1
<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1: androidx.paging.UnbatchedFlowCombiner $unbatchedFlowCombiner$inlined>
<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1: int $index$inlined>
    public void <init>(androidx.paging.UnbatchedFlowCombiner, int)
    {
        androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1 r0;
        androidx.paging.UnbatchedFlowCombiner r1;
        int i0;

        r0 := @this: androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1;

        r1 := @parameter0: androidx.paging.UnbatchedFlowCombiner;

        i0 := @parameter1: int;

        r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1: androidx.paging.UnbatchedFlowCombiner $unbatchedFlowCombiner$inlined> = r1;

        r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1: int $index$inlined> = i0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object emit(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1 r0;
        java.lang.Object r1, $r3, r4, r6, $r9, $r11;
        kotlin.coroutines.Continuation r2, r16, r17;
        androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1$1 r5, $r13, r14;
        boolean $z0;
        kotlin.Unit $r8;
        androidx.paging.UnbatchedFlowCombiner $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.IllegalStateException r15;

        r0 := @this: androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = r2 instanceof androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1$1;

        if $z0 == 0 goto label1;

        $r13 = (androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1$1) r2;

        $i1 = $r13.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1$1: int label>;

        $i2 = $i1 & -2147483648;

        if $i2 == 0 goto label1;

        $i3 = $r13.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1$1: int label>;

        $i4 = $i3 - -2147483648;

        $r13.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1$1: int label> = $i4;

        goto label2;

     label1:
        r14 = new androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1$1;

        specialinvoke r14.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1$1: void <init>(androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1,kotlin.coroutines.Continuation)>(r0, r2);

        $r13 = r14;

     label2:
        $r3 = $r13.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1$1: java.lang.Object result>;

        r4 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i5 = $r13.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1$1: int label>;

        tableswitch($i5)
        {
            case 0: goto label3;
            case 1: goto label4;
            case 2: goto label6;
            default: goto label8;
        };

     label3:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

        r5 = $r13;

        r6 = r1;

        $r10 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1: androidx.paging.UnbatchedFlowCombiner $unbatchedFlowCombiner$inlined>;

        $i0 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1: int $index$inlined>;

        $r13.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1$1: int label> = 1;

        r16 = (kotlin.coroutines.Continuation) $r13;

        $r11 = virtualinvoke $r10.<androidx.paging.UnbatchedFlowCombiner: java.lang.Object onNext(int,java.lang.Object,kotlin.coroutines.Continuation)>($i0, r6, r16);

        if $r11 != r4 goto label5;

        return r4;

     label4:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

     label5:
        $r13.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1$1: int label> = 2;

        r17 = (kotlin.coroutines.Continuation) $r13;

        $r9 = staticinvoke <kotlinx.coroutines.YieldKt: java.lang.Object yield(kotlin.coroutines.Continuation)>(r17);

        if $r9 != r4 goto label7;

        return r4;

     label6:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

     label7:
        $r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r8;

     label8:
        r15 = new java.lang.IllegalStateException;

        specialinvoke r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r15;
    }

androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2
<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2: int label>
<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2: androidx.paging.SimpleProducerScope $$this$simpleChannelFlow>
<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2: kotlinx.coroutines.flow.Flow $flow>
<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2: java.util.concurrent.atomic.AtomicInteger $incompleteFlows>
<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2: androidx.paging.UnbatchedFlowCombiner $unbatchedFlowCombiner>
<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2: int $index>
    public void <init>(kotlinx.coroutines.flow.Flow, java.util.concurrent.atomic.AtomicInteger, androidx.paging.SimpleProducerScope, androidx.paging.UnbatchedFlowCombiner, int, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2 r0;
        kotlinx.coroutines.flow.Flow $r1;
        java.util.concurrent.atomic.AtomicInteger $r2;
        androidx.paging.SimpleProducerScope $r3;
        androidx.paging.UnbatchedFlowCombiner $r4;
        int $i0;
        kotlin.coroutines.Continuation $r5;

        r0 := @this: androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2;

        $r1 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r2 := @parameter1: java.util.concurrent.atomic.AtomicInteger;

        $r3 := @parameter2: androidx.paging.SimpleProducerScope;

        $r4 := @parameter3: androidx.paging.UnbatchedFlowCombiner;

        $i0 := @parameter4: int;

        $r5 := @parameter5: kotlin.coroutines.Continuation;

        r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2: kotlinx.coroutines.flow.Flow $flow> = $r1;

        r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2: java.util.concurrent.atomic.AtomicInteger $incompleteFlows> = $r2;

        r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2: androidx.paging.UnbatchedFlowCombiner $unbatchedFlowCombiner> = $r4;

        r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2: int $index> = $i0;

        r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2: androidx.paging.SimpleProducerScope $$this$simpleChannelFlow> = $r3;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r5);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2 r0;
        java.lang.Object $r1, r2, r4, $r12;
        androidx.paging.UnbatchedFlowCombiner r3;
        int i0, $i1, $i2, $i3;
        java.util.concurrent.atomic.AtomicInteger $r5, $r15;
        kotlin.Unit $r6;
        androidx.paging.SimpleProducerScope $r7, $r16;
        kotlinx.coroutines.channels.SendChannel $r8, $r17;
        androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1 $r9;
        kotlinx.coroutines.flow.FlowCollector $r10;
        kotlin.coroutines.Continuation $r11;
        java.lang.IllegalStateException $r13;
        java.lang.Throwable $r14;
        kotlinx.coroutines.flow.Flow $r18;

        r0 := @this: androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i1 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2: int label>;

        tableswitch($i1)
        {
            case 0: goto label01;
            case 1: goto label04;
            default: goto label11;
        };

     label01:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label02:
        $r18 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2: kotlinx.coroutines.flow.Flow $flow>;

        r3 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2: androidx.paging.UnbatchedFlowCombiner $unbatchedFlowCombiner>;

        i0 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2: int $index>;

        $r9 = new androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1;

        specialinvoke $r9.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2$1: void <init>(androidx.paging.UnbatchedFlowCombiner,int)>(r3, i0);

        $r10 = (kotlinx.coroutines.flow.FlowCollector) $r9;

        $r11 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2: int label> = 1;

        $r12 = interfaceinvoke $r18.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r10, $r11);

     label03:
        if $r12 != r2 goto label05;

        r4 = r2;

        return r4;

     label04:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label05:
        $r5 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2: java.util.concurrent.atomic.AtomicInteger $incompleteFlows>;

        $i2 = virtualinvoke $r5.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();

        if $i2 != 0 goto label06;

        $r7 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2: androidx.paging.SimpleProducerScope $$this$simpleChannelFlow>;

        $r8 = (kotlinx.coroutines.channels.SendChannel) $r7;

        staticinvoke <kotlinx.coroutines.channels.SendChannel$DefaultImpls: boolean close$default(kotlinx.coroutines.channels.SendChannel,java.lang.Throwable,int,java.lang.Object)>($r8, null, 1, null);

     label06:
        goto label10;

     label07:
        $r14 := @caughtexception;

     label08:
        $r15 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2: java.util.concurrent.atomic.AtomicInteger $incompleteFlows>;

        $i3 = virtualinvoke $r15.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();

        if $i3 != 0 goto label09;

        $r16 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2: androidx.paging.SimpleProducerScope $$this$simpleChannelFlow>;

        $r17 = (kotlinx.coroutines.channels.SendChannel) $r16;

        staticinvoke <kotlinx.coroutines.channels.SendChannel$DefaultImpls: boolean close$default(kotlinx.coroutines.channels.SendChannel,java.lang.Throwable,int,java.lang.Object)>($r17, null, 1, null);

     label09:
        throw $r14;

     label10:
        $r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r6;

     label11:
        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r13;

        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r8;
        int $i0;
        androidx.paging.UnbatchedFlowCombiner $r4;
        androidx.paging.SimpleProducerScope $r5;
        java.util.concurrent.atomic.AtomicInteger $r6;
        kotlinx.coroutines.flow.Flow $r7;

        r0 := @this: androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2;

        $r7 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2: kotlinx.coroutines.flow.Flow $flow>;

        $r6 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2: java.util.concurrent.atomic.AtomicInteger $incompleteFlows>;

        $r5 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2: androidx.paging.SimpleProducerScope $$this$simpleChannelFlow>;

        $r4 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2: androidx.paging.UnbatchedFlowCombiner $unbatchedFlowCombiner>;

        $i0 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2: int $index>;

        specialinvoke $r3.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2: void <init>(kotlinx.coroutines.flow.Flow,java.util.concurrent.atomic.AtomicInteger,androidx.paging.SimpleProducerScope,androidx.paging.UnbatchedFlowCombiner,int,kotlin.coroutines.Continuation)>($r7, $r6, $r5, $r4, $i0, $r2);

        $r8 = (kotlin.coroutines.Continuation) $r3;

        return $r8;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$3
<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$3: kotlinx.coroutines.CompletableJob $parentJob>
    public void <init>(kotlinx.coroutines.CompletableJob)
    {
        androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$3 r0;
        kotlinx.coroutines.CompletableJob $r1;

        r0 := @this: androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$3;

        $r1 := @parameter0: kotlinx.coroutines.CompletableJob;

        r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$3: kotlinx.coroutines.CompletableJob $parentJob> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$3 r0;
        kotlinx.coroutines.CompletableJob $r1;
        kotlinx.coroutines.Job $r2;

        r0 := @this: androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$3;

        $r1 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$3: kotlinx.coroutines.CompletableJob $parentJob>;

        $r2 = (kotlinx.coroutines.Job) $r1;

        staticinvoke <kotlinx.coroutines.Job$DefaultImpls: void cancel$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object)>($r2, null, 1, null);

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$3 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$3;

        virtualinvoke r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$3: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1
<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1: int label>
<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1: java.lang.Object L$0>
<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1: kotlinx.coroutines.flow.Flow $this_combineWithoutBatching>
<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1: kotlinx.coroutines.flow.Flow $otherFlow>
<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1: androidx.paging.MutableLoadStateCollection $sourceStates$inlined>
    public void <init>(kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow, kotlin.coroutines.Continuation, androidx.paging.MutableLoadStateCollection)
    {
        androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1 r0;
        kotlinx.coroutines.flow.Flow $r1, $r2;
        kotlin.coroutines.Continuation $r3;
        androidx.paging.MutableLoadStateCollection r4;

        r0 := @this: androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1;

        $r1 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r2 := @parameter1: kotlinx.coroutines.flow.Flow;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        r4 := @parameter3: androidx.paging.MutableLoadStateCollection;

        r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1: kotlinx.coroutines.flow.Flow $this_combineWithoutBatching> = $r1;

        r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1: kotlinx.coroutines.flow.Flow $otherFlow> = $r2;

        r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1: androidx.paging.MutableLoadStateCollection $sourceStates$inlined> = r4;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r3);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1 r0;
        java.lang.Object $r1, r2, $r11, $r22;
        androidx.paging.SimpleProducerScope $r3;
        java.util.concurrent.atomic.AtomicInteger r4, $r12;
        androidx.paging.UnbatchedFlowCombiner r5, $r13;
        kotlinx.coroutines.CompletableJob r6;
        kotlinx.coroutines.flow.Flow[] r7, $r29;
        int i0, i1, $i2, $i3, i4, i5;
        kotlinx.coroutines.flow.Flow r8, r9, $r17, $r18;
        kotlin.Unit $r10;
        androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1 $r14;
        androidx.paging.MutableLoadStateCollection $r15;
        kotlin.jvm.functions.Function4 $r16;
        androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$3 $r19;
        kotlin.jvm.functions.Function0 $r20;
        kotlin.coroutines.Continuation $r21;
        androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2 $r23;
        kotlinx.coroutines.CoroutineScope $r24;
        kotlin.coroutines.CoroutineContext $r25;
        kotlin.jvm.functions.Function2 $r26;
        java.lang.IllegalStateException $r28;

        r0 := @this: androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i2 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1: int label>;

        tableswitch($i2)
        {
            case 0: goto label1;
            case 1: goto label4;
            default: goto label6;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r11 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1: java.lang.Object L$0>;

        $r3 = (androidx.paging.SimpleProducerScope) $r11;

        $r12 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r12.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(2);

        r4 = $r12;

        $r13 = new androidx.paging.UnbatchedFlowCombiner;

        $r14 = new androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1;

        $r15 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1: androidx.paging.MutableLoadStateCollection $sourceStates$inlined>;

        specialinvoke $r14.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$1: void <init>(androidx.paging.SimpleProducerScope,kotlin.coroutines.Continuation,androidx.paging.MutableLoadStateCollection)>($r3, null, $r15);

        $r16 = (kotlin.jvm.functions.Function4) $r14;

        specialinvoke $r13.<androidx.paging.UnbatchedFlowCombiner: void <init>(kotlin.jvm.functions.Function4)>($r16);

        r5 = $r13;

        r6 = staticinvoke <kotlinx.coroutines.JobKt: kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object)>(null, 1, null);

        $r29 = newarray (kotlinx.coroutines.flow.Flow)[2];

        $r17 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1: kotlinx.coroutines.flow.Flow $this_combineWithoutBatching>;

        $r29[0] = $r17;

        $r18 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1: kotlinx.coroutines.flow.Flow $otherFlow>;

        $r29[1] = $r18;

        i4 = 0;

        r7 = $r29;

        i0 = lengthof r7;

        i5 = 0;

     label2:
        if i5 >= i0 goto label3;

        r8 = r7[i5];

        $i3 = i4;

        i4 = i4 + 1;

        r9 = r8;

        i1 = $i3;

        $r24 = (kotlinx.coroutines.CoroutineScope) $r3;

        $r25 = (kotlin.coroutines.CoroutineContext) r6;

        $r23 = new androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2;

        specialinvoke $r23.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$2: void <init>(kotlinx.coroutines.flow.Flow,java.util.concurrent.atomic.AtomicInteger,androidx.paging.SimpleProducerScope,androidx.paging.UnbatchedFlowCombiner,int,kotlin.coroutines.Continuation)>(r9, r4, $r3, r5, i1, null);

        $r26 = (kotlin.jvm.functions.Function2) $r23;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r24, $r25, null, $r26, 2, null);

        i5 = i5 + 1;

        goto label2;

     label3:
        $r19 = new androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$3;

        specialinvoke $r19.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1$3: void <init>(kotlinx.coroutines.CompletableJob)>(r6);

        $r20 = (kotlin.jvm.functions.Function0) $r19;

        $r21 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1: int label> = 1;

        $r22 = interfaceinvoke $r3.<androidx.paging.SimpleProducerScope: java.lang.Object awaitClose(kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)>($r20, $r21);

        if $r22 != r2 goto label5;

        return r2;

     label4:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label5:
        $r10 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r10;

     label6:
        $r28 = new java.lang.IllegalStateException;

        specialinvoke $r28.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r28;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1 r0, r3, $r4;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r8;
        androidx.paging.MutableLoadStateCollection $r5;
        kotlinx.coroutines.flow.Flow $r6, $r7;

        r0 := @this: androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = new androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1;

        $r7 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1: kotlinx.coroutines.flow.Flow $this_combineWithoutBatching>;

        $r6 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1: kotlinx.coroutines.flow.Flow $otherFlow>;

        $r5 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1: androidx.paging.MutableLoadStateCollection $sourceStates$inlined>;

        specialinvoke $r4.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1: void <init>(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation,androidx.paging.MutableLoadStateCollection)>($r7, $r6, $r2, $r5);

        r3 = $r4;

        r3.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1: java.lang.Object L$0> = r1;

        $r8 = (kotlin.coroutines.Continuation) r3;

        return $r8;
    }

    public final java.lang.Object invoke(androidx.paging.SimpleProducerScope, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1 r0, $r5;
        androidx.paging.SimpleProducerScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1;

        r1 := @parameter0: androidx.paging.SimpleProducerScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        androidx.paging.SimpleProducerScope $r4;

        r0 := @this: androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.paging.SimpleProducerScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1: java.lang.Object invoke(androidx.paging.SimpleProducerScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.paging.PageFetcher$injectRemoteEvents$1
<androidx.paging.PageFetcher$injectRemoteEvents$1: int label>
<androidx.paging.PageFetcher$injectRemoteEvents$1: java.lang.Object L$0>
<androidx.paging.PageFetcher$injectRemoteEvents$1: androidx.paging.RemoteMediatorAccessor $accessor>
<androidx.paging.PageFetcher$injectRemoteEvents$1: androidx.paging.PageFetcherSnapshot $this_injectRemoteEvents>
<androidx.paging.PageFetcher$injectRemoteEvents$1: androidx.paging.MutableLoadStateCollection $sourceStates>
    void <init>(androidx.paging.RemoteMediatorAccessor, androidx.paging.PageFetcherSnapshot, androidx.paging.MutableLoadStateCollection, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageFetcher$injectRemoteEvents$1 r0;
        androidx.paging.RemoteMediatorAccessor $r1;
        androidx.paging.PageFetcherSnapshot $r2;
        androidx.paging.MutableLoadStateCollection $r3;
        kotlin.coroutines.Continuation $r4;

        r0 := @this: androidx.paging.PageFetcher$injectRemoteEvents$1;

        $r1 := @parameter0: androidx.paging.RemoteMediatorAccessor;

        $r2 := @parameter1: androidx.paging.PageFetcherSnapshot;

        $r3 := @parameter2: androidx.paging.MutableLoadStateCollection;

        $r4 := @parameter3: kotlin.coroutines.Continuation;

        r0.<androidx.paging.PageFetcher$injectRemoteEvents$1: androidx.paging.RemoteMediatorAccessor $accessor> = $r1;

        r0.<androidx.paging.PageFetcher$injectRemoteEvents$1: androidx.paging.PageFetcherSnapshot $this_injectRemoteEvents> = $r2;

        r0.<androidx.paging.PageFetcher$injectRemoteEvents$1: androidx.paging.MutableLoadStateCollection $sourceStates> = $r3;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r4);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.paging.PageFetcher$injectRemoteEvents$1 r0;
        java.lang.Object $r1, r4, $r6, $r15;
        androidx.paging.SimpleProducerScope $r2;
        androidx.paging.MutableLoadStateCollection r3;
        int $i0;
        kotlin.Unit $r5;
        androidx.paging.RemoteMediatorAccessor $r7;
        kotlinx.coroutines.flow.StateFlow $r8;
        androidx.paging.PageFetcherSnapshot $r9;
        androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1 $r10;
        kotlin.jvm.functions.Function2 $r11;
        androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$collect$1 $r12;
        kotlinx.coroutines.flow.FlowCollector $r13;
        kotlin.coroutines.Continuation $r14;
        java.lang.IllegalStateException $r16;
        kotlinx.coroutines.flow.Flow $r17, r18, $r19;
        boolean z1, z2;

        r0 := @this: androidx.paging.PageFetcher$injectRemoteEvents$1;

        $r1 := @parameter0: java.lang.Object;

        r4 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r6 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1: java.lang.Object L$0>;

        $r2 = (androidx.paging.SimpleProducerScope) $r6;

        $r7 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1: androidx.paging.RemoteMediatorAccessor $accessor>;

        $r8 = interfaceinvoke $r7.<androidx.paging.RemoteMediatorAccessor: kotlinx.coroutines.flow.StateFlow getState()>();

        $r17 = (kotlinx.coroutines.flow.Flow) $r8;

        $r9 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1: androidx.paging.PageFetcherSnapshot $this_injectRemoteEvents>;

        r18 = virtualinvoke $r9.<androidx.paging.PageFetcherSnapshot: kotlinx.coroutines.flow.Flow getPageEventFlow()>();

        r3 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1: androidx.paging.MutableLoadStateCollection $sourceStates>;

        $r10 = new androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1;

        specialinvoke $r10.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$combineWithoutBatching$1: void <init>(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation,androidx.paging.MutableLoadStateCollection)>($r17, r18, null, r3);

        $r11 = (kotlin.jvm.functions.Function2) $r10;

        $r19 = staticinvoke <androidx.paging.SimpleChannelFlowKt: kotlinx.coroutines.flow.Flow simpleChannelFlow(kotlin.jvm.functions.Function2)>($r11);

        z1 = 0;

        $r12 = new androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$collect$1;

        specialinvoke $r12.<androidx.paging.PageFetcher$injectRemoteEvents$1$invokeSuspend$$inlined$collect$1: void <init>(androidx.paging.SimpleProducerScope)>($r2);

        $r13 = (kotlinx.coroutines.flow.FlowCollector) $r12;

        $r14 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.paging.PageFetcher$injectRemoteEvents$1: int label> = 1;

        $r15 = interfaceinvoke $r19.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r13, $r14);

        if $r15 != r4 goto label3;

        return r4;

     label2:
        z2 = 0;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r5;

     label4:
        $r16 = new java.lang.IllegalStateException;

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r16;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageFetcher$injectRemoteEvents$1 r0, r3, $r4;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r8;
        androidx.paging.MutableLoadStateCollection $r5;
        androidx.paging.PageFetcherSnapshot $r6;
        androidx.paging.RemoteMediatorAccessor $r7;

        r0 := @this: androidx.paging.PageFetcher$injectRemoteEvents$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = new androidx.paging.PageFetcher$injectRemoteEvents$1;

        $r7 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1: androidx.paging.RemoteMediatorAccessor $accessor>;

        $r6 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1: androidx.paging.PageFetcherSnapshot $this_injectRemoteEvents>;

        $r5 = r0.<androidx.paging.PageFetcher$injectRemoteEvents$1: androidx.paging.MutableLoadStateCollection $sourceStates>;

        specialinvoke $r4.<androidx.paging.PageFetcher$injectRemoteEvents$1: void <init>(androidx.paging.RemoteMediatorAccessor,androidx.paging.PageFetcherSnapshot,androidx.paging.MutableLoadStateCollection,kotlin.coroutines.Continuation)>($r7, $r6, $r5, $r2);

        r3 = $r4;

        r3.<androidx.paging.PageFetcher$injectRemoteEvents$1: java.lang.Object L$0> = r1;

        $r8 = (kotlin.coroutines.Continuation) r3;

        return $r8;
    }

    public final java.lang.Object invoke(androidx.paging.SimpleProducerScope, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageFetcher$injectRemoteEvents$1 r0, $r5;
        androidx.paging.SimpleProducerScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.paging.PageFetcher$injectRemoteEvents$1;

        r1 := @parameter0: androidx.paging.SimpleProducerScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.paging.PageFetcher$injectRemoteEvents$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.paging.PageFetcher$injectRemoteEvents$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.paging.PageFetcher$injectRemoteEvents$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.paging.PageFetcher$injectRemoteEvents$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        androidx.paging.SimpleProducerScope $r4;

        r0 := @this: androidx.paging.PageFetcher$injectRemoteEvents$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.paging.SimpleProducerScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.paging.PageFetcher$injectRemoteEvents$1: java.lang.Object invoke(androidx.paging.SimpleProducerScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.paging.PageFetcher$PagerUiReceiver
<androidx.paging.PageFetcher$PagerUiReceiver: androidx.paging.PageFetcherSnapshot pageFetcherSnapshot>
<androidx.paging.PageFetcher$PagerUiReceiver: androidx.paging.ConflatedEventBus retryEventBus>
<androidx.paging.PageFetcher$PagerUiReceiver: androidx.paging.PageFetcher this$0>
    public void <init>(androidx.paging.PageFetcher, androidx.paging.PageFetcherSnapshot, androidx.paging.ConflatedEventBus)
    {
        androidx.paging.PageFetcher$PagerUiReceiver r0;
        androidx.paging.PageFetcher r1;
        androidx.paging.PageFetcherSnapshot r2;
        androidx.paging.ConflatedEventBus r3;

        r0 := @this: androidx.paging.PageFetcher$PagerUiReceiver;

        r1 := @parameter0: androidx.paging.PageFetcher;

        r2 := @parameter1: androidx.paging.PageFetcherSnapshot;

        r3 := @parameter2: androidx.paging.ConflatedEventBus;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "this$0");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "pageFetcherSnapshot");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "retryEventBus");

        r0.<androidx.paging.PageFetcher$PagerUiReceiver: androidx.paging.PageFetcher this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.paging.PageFetcher$PagerUiReceiver: androidx.paging.PageFetcherSnapshot pageFetcherSnapshot> = r2;

        r0.<androidx.paging.PageFetcher$PagerUiReceiver: androidx.paging.ConflatedEventBus retryEventBus> = r3;

        return;
    }

    public final androidx.paging.PageFetcherSnapshot getPageFetcherSnapshot$paging_common()
    {
        androidx.paging.PageFetcher$PagerUiReceiver r0;
        androidx.paging.PageFetcherSnapshot $r1;

        r0 := @this: androidx.paging.PageFetcher$PagerUiReceiver;

        $r1 = r0.<androidx.paging.PageFetcher$PagerUiReceiver: androidx.paging.PageFetcherSnapshot pageFetcherSnapshot>;

        return $r1;
    }

    public void accessHint(androidx.paging.ViewportHint)
    {
        androidx.paging.PageFetcher$PagerUiReceiver r0;
        androidx.paging.ViewportHint r1;
        androidx.paging.PageFetcherSnapshot $r2;

        r0 := @this: androidx.paging.PageFetcher$PagerUiReceiver;

        r1 := @parameter0: androidx.paging.ViewportHint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "viewportHint");

        $r2 = r0.<androidx.paging.PageFetcher$PagerUiReceiver: androidx.paging.PageFetcherSnapshot pageFetcherSnapshot>;

        virtualinvoke $r2.<androidx.paging.PageFetcherSnapshot: void accessHint(androidx.paging.ViewportHint)>(r1);

        return;
    }

    public void retry()
    {
        androidx.paging.PageFetcher$PagerUiReceiver r0;
        kotlin.Unit $r1;
        androidx.paging.ConflatedEventBus $r2;

        r0 := @this: androidx.paging.PageFetcher$PagerUiReceiver;

        $r2 = r0.<androidx.paging.PageFetcher$PagerUiReceiver: androidx.paging.ConflatedEventBus retryEventBus>;

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        virtualinvoke $r2.<androidx.paging.ConflatedEventBus: void send(java.lang.Object)>($r1);

        return;
    }

    public void refresh()
    {
        androidx.paging.PageFetcher$PagerUiReceiver r0;
        androidx.paging.PageFetcher $r1;

        r0 := @this: androidx.paging.PageFetcher$PagerUiReceiver;

        $r1 = r0.<androidx.paging.PageFetcher$PagerUiReceiver: androidx.paging.PageFetcher this$0>;

        virtualinvoke $r1.<androidx.paging.PageFetcher: void refresh()>();

        return;
    }

