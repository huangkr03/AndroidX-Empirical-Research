androidx.compose.ui.node.LayoutModifierNodeCoordinatorKt
    private static final int calculateAlignmentAndPlaceChildAsNeeded(androidx.compose.ui.node.LookaheadCapablePlaceable, androidx.compose.ui.layout.AlignmentLine)
    {
        androidx.compose.ui.node.LookaheadCapablePlaceable $r0, r2;
        androidx.compose.ui.layout.AlignmentLine r1;
        int i0, $i2, $i4, $i5, $i6;
        androidx.compose.ui.layout.MeasureResult $r3, $r5;
        java.util.Map $r4, $r6;
        boolean $z0, $z1, $z2;
        long $l1, $l3;
        java.lang.Object $r7;
        java.lang.Integer $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12;
        java.lang.IllegalStateException $r13;
        java.lang.String $r14, $r15;

        $r0 := @parameter0: androidx.compose.ui.node.LookaheadCapablePlaceable;

        r1 := @parameter1: androidx.compose.ui.layout.AlignmentLine;

        r2 = virtualinvoke $r0.<androidx.compose.ui.node.LookaheadCapablePlaceable: androidx.compose.ui.node.LookaheadCapablePlaceable getChild()>();

        if r2 == null goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        if $z2 != 0 goto label3;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Child of ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be null when calculating alignment line");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = new java.lang.IllegalStateException;

        $r14 = virtualinvoke $r15.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r14);

        throw $r13;

     label3:
        $r3 = virtualinvoke $r0.<androidx.compose.ui.node.LookaheadCapablePlaceable: androidx.compose.ui.layout.MeasureResult getMeasureResult$ui_release()>();

        $r4 = interfaceinvoke $r3.<androidx.compose.ui.layout.MeasureResult: java.util.Map getAlignmentLines()>();

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label6;

        $r5 = virtualinvoke $r0.<androidx.compose.ui.node.LookaheadCapablePlaceable: androidx.compose.ui.layout.MeasureResult getMeasureResult$ui_release()>();

        $r6 = interfaceinvoke $r5.<androidx.compose.ui.layout.MeasureResult: java.util.Map getAlignmentLines()>();

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r8 = (java.lang.Integer) $r7;

        if $r8 == null goto label4;

        $i5 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        goto label5;

     label4:
        $i5 = -2147483648;

     label5:
        return $i5;

     label6:
        i0 = virtualinvoke r2.<androidx.compose.ui.node.LookaheadCapablePlaceable: int get(androidx.compose.ui.layout.AlignmentLine)>(r1);

        if i0 != -2147483648 goto label7;

        return -2147483648;

     label7:
        virtualinvoke r2.<androidx.compose.ui.node.LookaheadCapablePlaceable: void setShallowPlacing$ui_release(boolean)>(1);

        virtualinvoke $r0.<androidx.compose.ui.node.LookaheadCapablePlaceable: void setPlacingForAlignment$ui_release(boolean)>(1);

        virtualinvoke $r0.<androidx.compose.ui.node.LookaheadCapablePlaceable: void replace$ui_release()>();

        virtualinvoke r2.<androidx.compose.ui.node.LookaheadCapablePlaceable: void setShallowPlacing$ui_release(boolean)>(0);

        virtualinvoke $r0.<androidx.compose.ui.node.LookaheadCapablePlaceable: void setPlacingForAlignment$ui_release(boolean)>(0);

        $z1 = r1 instanceof androidx.compose.ui.layout.HorizontalAlignmentLine;

        if $z1 == 0 goto label8;

        $l3 = virtualinvoke r2.<androidx.compose.ui.node.LookaheadCapablePlaceable: long getPosition-nOcc-ac()>();

        $i4 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>($l3);

        $i6 = i0 + $i4;

        goto label9;

     label8:
        $l1 = virtualinvoke r2.<androidx.compose.ui.node.LookaheadCapablePlaceable: long getPosition-nOcc-ac()>();

        $i2 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>($l1);

        $i6 = i0 + $i2;

     label9:
        return $i6;
    }

    public static final int access$calculateAlignmentAndPlaceChildAsNeeded(androidx.compose.ui.node.LookaheadCapablePlaceable, androidx.compose.ui.layout.AlignmentLine)
    {
        androidx.compose.ui.node.LookaheadCapablePlaceable $r0;
        androidx.compose.ui.layout.AlignmentLine r1;
        int $i0;

        $r0 := @parameter0: androidx.compose.ui.node.LookaheadCapablePlaceable;

        r1 := @parameter1: androidx.compose.ui.layout.AlignmentLine;

        $i0 = staticinvoke <androidx.compose.ui.node.LayoutModifierNodeCoordinatorKt: int calculateAlignmentAndPlaceChildAsNeeded(androidx.compose.ui.node.LookaheadCapablePlaceable,androidx.compose.ui.layout.AlignmentLine)>($r0, r1);

        return $i0;
    }

