androidx.compose.ObserverMap
<androidx.compose.ObserverMap: java.util.HashMap keyToValue>
<androidx.compose.ObserverMap: java.util.HashMap valueToKey>
<androidx.compose.ObserverMap: java.lang.ref.ReferenceQueue keyQueue>
<androidx.compose.ObserverMap: java.lang.ref.ReferenceQueue valueQueue>
    public void <init>()
    {
        androidx.compose.ObserverMap r0, r5, r7;
        java.util.HashMap $r1, $r2, r6, r8;
        java.lang.ref.ReferenceQueue $r3, $r4;
        boolean z0, z1;

        r0 := @this: androidx.compose.ObserverMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r5 = r0;

        z0 = 0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r6 = $r1;

        r5.<androidx.compose.ObserverMap: java.util.HashMap keyToValue> = r6;

        r7 = r0;

        z1 = 0;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r8 = $r2;

        r7.<androidx.compose.ObserverMap: java.util.HashMap valueToKey> = r8;

        $r3 = new java.lang.ref.ReferenceQueue;

        specialinvoke $r3.<java.lang.ref.ReferenceQueue: void <init>()>();

        r0.<androidx.compose.ObserverMap: java.lang.ref.ReferenceQueue keyQueue> = $r3;

        $r4 = new java.lang.ref.ReferenceQueue;

        specialinvoke $r4.<java.lang.ref.ReferenceQueue: void <init>()>();

        r0.<androidx.compose.ObserverMap: java.lang.ref.ReferenceQueue valueQueue> = $r4;

        return;
    }

    public final void add(java.lang.Object, java.lang.Object)
    {
        androidx.compose.ObserverMap r0;
        java.lang.Object r1, r2;
        androidx.compose.IdentityWeakReference r3, r4, $r5, $r7;
        java.lang.ref.ReferenceQueue $r6, $r8;
        java.util.HashMap $r9, $r11;
        java.util.Map $r10, $r12;

        r0 := @this: androidx.compose.ObserverMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "value");

        specialinvoke r0.<androidx.compose.ObserverMap: void clearReferences()>();

        $r5 = new androidx.compose.IdentityWeakReference;

        $r6 = r0.<androidx.compose.ObserverMap: java.lang.ref.ReferenceQueue keyQueue>;

        specialinvoke $r5.<androidx.compose.IdentityWeakReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>(r1, $r6);

        r3 = $r5;

        $r7 = new androidx.compose.IdentityWeakReference;

        $r8 = r0.<androidx.compose.ObserverMap: java.lang.ref.ReferenceQueue valueQueue>;

        specialinvoke $r7.<androidx.compose.IdentityWeakReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>(r2, $r8);

        r4 = $r7;

        $r9 = r0.<androidx.compose.ObserverMap: java.util.HashMap keyToValue>;

        $r10 = (java.util.Map) $r9;

        specialinvoke r0.<androidx.compose.ObserverMap: void addToSet(java.util.Map,androidx.compose.IdentityWeakReference,androidx.compose.IdentityWeakReference)>($r10, r3, r4);

        $r11 = r0.<androidx.compose.ObserverMap: java.util.HashMap valueToKey>;

        $r12 = (java.util.Map) $r11;

        specialinvoke r0.<androidx.compose.ObserverMap: void addToSet(java.util.Map,androidx.compose.IdentityWeakReference,androidx.compose.IdentityWeakReference)>($r12, r4, r3);

        return;
    }

    public final void remove(java.lang.Object)
    {
        androidx.compose.ObserverMap r0;
        java.lang.Object r1;
        androidx.compose.IdentityWeakReference r2, $r3;
        java.util.HashMap $r4, $r5;
        java.util.Map $r6, $r7;

        r0 := @this: androidx.compose.ObserverMap;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        specialinvoke r0.<androidx.compose.ObserverMap: void clearReferences()>();

        $r3 = new androidx.compose.IdentityWeakReference;

        specialinvoke $r3.<androidx.compose.IdentityWeakReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, null, 2, null);

        r2 = $r3;

        $r4 = r0.<androidx.compose.ObserverMap: java.util.HashMap keyToValue>;

        $r7 = (java.util.Map) $r4;

        $r5 = r0.<androidx.compose.ObserverMap: java.util.HashMap valueToKey>;

        $r6 = (java.util.Map) $r5;

        specialinvoke r0.<androidx.compose.ObserverMap: void removeFromSet(java.util.Map,java.util.Map,androidx.compose.IdentityWeakReference)>($r7, $r6, r2);

        return;
    }

    public final void remove(java.lang.Object, java.lang.Object)
    {
        androidx.compose.ObserverMap r0;
        java.lang.Object r1, r2, $r8, $r10;
        androidx.compose.IdentityWeakReference r3, r4, $r5, $r6;
        java.util.HashMap $r7, $r9;
        java.util.Set r13, r14;

        r0 := @this: androidx.compose.ObserverMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "value");

        specialinvoke r0.<androidx.compose.ObserverMap: void clearReferences()>();

        $r5 = new androidx.compose.IdentityWeakReference;

        specialinvoke $r5.<androidx.compose.IdentityWeakReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, null, 2, null);

        r3 = $r5;

        $r6 = new androidx.compose.IdentityWeakReference;

        specialinvoke $r6.<androidx.compose.IdentityWeakReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r2, null, 2, null);

        r4 = $r6;

        $r7 = r0.<androidx.compose.ObserverMap: java.util.HashMap keyToValue>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        r13 = (java.util.Set) $r8;

        if r13 != null goto label1;

        goto label2;

     label1:
        interfaceinvoke r13.<java.util.Set: boolean remove(java.lang.Object)>(r4);

     label2:
        $r9 = r0.<androidx.compose.ObserverMap: java.util.HashMap valueToKey>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4);

        r14 = (java.util.Set) $r10;

        if r14 != null goto label3;

        goto label4;

     label3:
        interfaceinvoke r14.<java.util.Set: boolean remove(java.lang.Object)>(r3);

     label4:
        return;
    }

    public final boolean contains(java.lang.Object, java.lang.Object)
    {
        androidx.compose.ObserverMap r0;
        java.lang.Object r1, r2, $r8;
        java.util.Set r3, r5;
        java.lang.Boolean r4, $r10;
        androidx.compose.IdentityWeakReference $r6, $r9;
        java.util.HashMap $r7;
        boolean $z0, $z1;

        r0 := @this: androidx.compose.ObserverMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "value");

        specialinvoke r0.<androidx.compose.ObserverMap: void clearReferences()>();

        $r7 = r0.<androidx.compose.ObserverMap: java.util.HashMap keyToValue>;

        $r6 = new androidx.compose.IdentityWeakReference;

        specialinvoke $r6.<androidx.compose.IdentityWeakReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, null, 2, null);

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        r3 = (java.util.Set) $r8;

        r5 = r3;

        if r5 != null goto label1;

        $r10 = (java.lang.Boolean) null;

        goto label2;

     label1:
        $r9 = new androidx.compose.IdentityWeakReference;

        specialinvoke $r9.<androidx.compose.IdentityWeakReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r2, null, 2, null);

        $z0 = interfaceinvoke r5.<java.util.Set: boolean contains(java.lang.Object)>($r9);

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

     label2:
        r4 = $r10;

        if r4 != null goto label3;

        $z1 = 0;

        goto label4;

     label3:
        $z1 = virtualinvoke r4.<java.lang.Boolean: boolean booleanValue()>();

     label4:
        return $z1;
    }

    public final void clear()
    {
        androidx.compose.ObserverMap r0;
        java.util.HashMap $r1, $r2;

        r0 := @this: androidx.compose.ObserverMap;

        $r1 = r0.<androidx.compose.ObserverMap: java.util.HashMap keyToValue>;

        virtualinvoke $r1.<java.util.HashMap: void clear()>();

        $r2 = r0.<androidx.compose.ObserverMap: java.util.HashMap valueToKey>;

        virtualinvoke $r2.<java.util.HashMap: void clear()>();

        specialinvoke r0.<androidx.compose.ObserverMap: void clearReferences()>();

        return;
    }

    public final java.util.List get(java.lang.Iterable)
    {
        androidx.compose.ObserverMap r0;
        java.lang.Iterable r1, $r22;
        java.util.Set r2, r17, r18, r19;
        java.lang.Object r3, r4, $r8, $r11, r14, r15, r24, r25;
        boolean z1, z2, $z4, $z5, z11, z14, z15;
        java.util.LinkedHashSet $r5;
        java.util.ArrayList $r6;
        java.util.List $r7;
        androidx.compose.IdentityWeakReference $r9, r16, r26;
        java.util.HashMap $r10;
        java.util.Iterator $r13, r23;
        java.util.Collection r20, r21;

        r0 := @this: androidx.compose.ObserverMap;

        r1 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "keys");

        specialinvoke r0.<androidx.compose.ObserverMap: void clearReferences()>();

        $r5 = new java.util.LinkedHashSet;

        specialinvoke $r5.<java.util.LinkedHashSet: void <init>()>();

        r2 = (java.util.Set) $r5;

        $r13 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z4 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label4;

        r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r15 = r14;

        $r9 = new androidx.compose.IdentityWeakReference;

        specialinvoke $r9.<androidx.compose.IdentityWeakReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r15, null, 2, null);

        r16 = $r9;

        $r10 = r0.<androidx.compose.ObserverMap: java.util.HashMap keyToValue>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r16);

        r17 = (java.util.Set) $r11;

        if r17 != null goto label2;

        goto label3;

     label2:
        r18 = r17;

        r19 = r18;

        z11 = 0;

        r20 = (java.util.Collection) r19;

        interfaceinvoke r2.<java.util.Set: boolean addAll(java.util.Collection)>(r20);

     label3:
        goto label1;

     label4:
        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r21 = (java.util.Collection) $r6;

        z14 = 0;

        $r22 = (java.lang.Iterable) r2;

        z15 = 0;

        r23 = interfaceinvoke $r22.<java.lang.Iterable: java.util.Iterator iterator()>();

     label5:
        $z5 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label7;

        r24 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>();

        r25 = r24;

        r26 = (androidx.compose.IdentityWeakReference) r25;

        $r8 = virtualinvoke r26.<androidx.compose.IdentityWeakReference: java.lang.Object get()>();

        if $r8 == null goto label6;

        r3 = $r8;

        z1 = 0;

        z2 = 0;

        r4 = r3;

        interfaceinvoke r21.<java.util.Collection: boolean add(java.lang.Object)>(r4);

        goto label6;

     label6:
        goto label5;

     label7:
        $r7 = (java.util.List) r21;

        return $r7;
    }

    public final java.util.List getValueOf(java.lang.Object)
    {
        androidx.compose.ObserverMap r0;
        java.lang.Object r1, r9, r10, r12, r13, $r16, $r19;
        androidx.compose.IdentityWeakReference r2, r11, $r14;
        java.util.List r3, r4, $r20, $r21, $r22;
        java.util.Set r5;
        java.util.Collection r6;
        java.lang.Iterable $r7, $r18;
        java.util.Iterator r8;
        boolean z5, z6, $z8;
        java.util.HashMap $r15;
        java.util.ArrayList $r17;

        r0 := @this: androidx.compose.ObserverMap;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        specialinvoke r0.<androidx.compose.ObserverMap: void clearReferences()>();

        $r14 = new androidx.compose.IdentityWeakReference;

        specialinvoke $r14.<androidx.compose.IdentityWeakReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, null, 2, null);

        r2 = $r14;

        $r15 = r0.<androidx.compose.ObserverMap: java.util.HashMap keyToValue>;

        $r16 = virtualinvoke $r15.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r5 = (java.util.Set) $r16;

        if r5 != null goto label1;

        $r20 = (java.util.List) null;

        goto label5;

     label1:
        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>()>();

        r6 = (java.util.Collection) $r17;

        $r7 = (java.lang.Iterable) r5;

        r8 = interfaceinvoke $r7.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z8 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label4;

        r9 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = r9;

        r11 = (androidx.compose.IdentityWeakReference) r10;

        $r19 = virtualinvoke r11.<androidx.compose.IdentityWeakReference: java.lang.Object get()>();

        if $r19 == null goto label3;

        r12 = $r19;

        z5 = 0;

        z6 = 0;

        r13 = r12;

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>(r13);

        goto label3;

     label3:
        goto label2;

     label4:
        $r20 = (java.util.List) r6;

     label5:
        r4 = $r20;

        if r4 != null goto label6;

        $r21 = (java.util.List) null;

        goto label7;

     label6:
        $r18 = (java.lang.Iterable) r4;

        $r21 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>($r18);

     label7:
        r3 = $r21;

        if r3 != null goto label8;

        $r22 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        goto label9;

     label8:
        $r22 = r3;

     label9:
        return $r22;
    }

    public final void clearValues(kotlin.jvm.functions.Function1)
    {
        androidx.compose.ObserverMap r0;
        kotlin.jvm.functions.Function1 r1;
        java.util.List r2;
        java.lang.Object r3, $r6, r11, r15, r16;
        java.util.ArrayList $r4;
        java.util.HashMap $r5;
        boolean $z0, $z1, $z2;
        java.lang.Boolean $r7;
        java.util.Set $r8;
        java.lang.Iterable $r9, $r13;
        java.util.Iterator r10, r14;
        androidx.compose.IdentityWeakReference r12;

        r0 := @this: androidx.compose.ObserverMap;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "predicate");

        specialinvoke r0.<androidx.compose.ObserverMap: void clearReferences()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r2 = (java.util.List) $r4;

        $r5 = r0.<androidx.compose.ObserverMap: java.util.HashMap valueToKey>;

        $r8 = virtualinvoke $r5.<java.util.HashMap: java.util.Set keySet()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "valueToKey.keys");

        $r9 = (java.lang.Iterable) $r8;

        r10 = interfaceinvoke $r9.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        r11 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (androidx.compose.IdentityWeakReference) r11;

        r3 = virtualinvoke r12.<androidx.compose.IdentityWeakReference: java.lang.Object get()>();

        if r3 == null goto label2;

        $r6 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r3);

        $r7 = (java.lang.Boolean) $r6;

        $z2 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 == 0 goto label2;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r3);

     label2:
        goto label1;

     label3:
        $r13 = (java.lang.Iterable) r2;

        r14 = interfaceinvoke $r13.<java.lang.Iterable: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        r15 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r16 = r15;

        virtualinvoke r0.<androidx.compose.ObserverMap: void removeValue(java.lang.Object)>(r16);

        goto label4;

     label5:
        return;
    }

    public final void removeValue(java.lang.Object)
    {
        androidx.compose.ObserverMap r0;
        java.lang.Object r1, r5, $r12, $r14, $r16;
        androidx.compose.IdentityWeakReference r2, r6, $r10;
        java.util.Set r3, r7, r8, r9, $r17;
        java.util.Iterator r4;
        java.util.HashMap $r11, $r13, $r15;
        boolean $z2, $z4;
        java.lang.Iterable $r18;

        r0 := @this: androidx.compose.ObserverMap;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        specialinvoke r0.<androidx.compose.ObserverMap: void clearReferences()>();

        $r10 = new androidx.compose.IdentityWeakReference;

        specialinvoke $r10.<androidx.compose.IdentityWeakReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, null, 2, null);

        r2 = $r10;

        $r11 = r0.<androidx.compose.ObserverMap: java.util.HashMap valueToKey>;

        $r12 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r2);

        r3 = (java.util.Set) $r12;

        if r3 != null goto label1;

        goto label4;

     label1:
        $r18 = (java.lang.Iterable) r3;

        r4 = interfaceinvoke $r18.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (androidx.compose.IdentityWeakReference) r5;

        $r13 = r0.<androidx.compose.ObserverMap: java.util.HashMap keyToValue>;

        $r14 = virtualinvoke $r13.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r6);

        r7 = (java.util.Set) $r14;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r7);

        r8 = r7;

        r9 = r8;

        interfaceinvoke r9.<java.util.Set: boolean remove(java.lang.Object)>(r2);

        $z4 = interfaceinvoke r9.<java.util.Set: boolean isEmpty()>();

        if $z4 == 0 goto label3;

        $r15 = r0.<androidx.compose.ObserverMap: java.util.HashMap keyToValue>;

        $r16 = virtualinvoke $r15.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r6);

        $r17 = (java.util.Set) $r16;

     label3:
        goto label2;

     label4:
        return;
    }

    private final void clearReferences()
    {
        androidx.compose.ObserverMap r0;
        java.util.HashMap $r1, $r2, $r6, $r7;
        java.util.Map $r3, $r4, $r8, $r9;
        java.lang.ref.ReferenceQueue $r5, $r10;

        r0 := @this: androidx.compose.ObserverMap;

        $r5 = r0.<androidx.compose.ObserverMap: java.lang.ref.ReferenceQueue keyQueue>;

        $r1 = r0.<androidx.compose.ObserverMap: java.util.HashMap keyToValue>;

        $r4 = (java.util.Map) $r1;

        $r2 = r0.<androidx.compose.ObserverMap: java.util.HashMap valueToKey>;

        $r3 = (java.util.Map) $r2;

        specialinvoke r0.<androidx.compose.ObserverMap: void pollQueue(java.lang.ref.ReferenceQueue,java.util.Map,java.util.Map)>($r5, $r4, $r3);

        $r10 = r0.<androidx.compose.ObserverMap: java.lang.ref.ReferenceQueue valueQueue>;

        $r6 = r0.<androidx.compose.ObserverMap: java.util.HashMap valueToKey>;

        $r9 = (java.util.Map) $r6;

        $r7 = r0.<androidx.compose.ObserverMap: java.util.HashMap keyToValue>;

        $r8 = (java.util.Map) $r7;

        specialinvoke r0.<androidx.compose.ObserverMap: void pollQueue(java.lang.ref.ReferenceQueue,java.util.Map,java.util.Map)>($r10, $r9, $r8);

        return;
    }

    private final void pollQueue(java.lang.ref.ReferenceQueue, java.util.Map, java.util.Map)
    {
        androidx.compose.ObserverMap r0;
        java.lang.ref.ReferenceQueue r1;
        java.util.Map r2, r3;
        java.lang.ref.Reference r4, r6;
        androidx.compose.IdentityWeakReference r5;

        r0 := @this: androidx.compose.ObserverMap;

        r1 := @parameter0: java.lang.ref.ReferenceQueue;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: java.util.Map;

     label1:
        r4 = virtualinvoke r1.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()>();

        if r4 == null goto label2;

        r6 = r4;

        r5 = (androidx.compose.IdentityWeakReference) r6;

        specialinvoke r0.<androidx.compose.ObserverMap: void removeFromSet(java.util.Map,java.util.Map,androidx.compose.IdentityWeakReference)>(r2, r3, r5);

     label2:
        if r4 != null goto label1;

        return;
    }

    private final void addToSet(java.util.Map, androidx.compose.IdentityWeakReference, androidx.compose.IdentityWeakReference)
    {
        androidx.compose.ObserverMap r0;
        java.util.Map r1;
        androidx.compose.IdentityWeakReference r2, r3;
        boolean z0;
        java.lang.Object $r4, $r6;
        java.util.HashSet $r5;
        java.util.Set $r7, r8;

        r0 := @this: androidx.compose.ObserverMap;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: androidx.compose.IdentityWeakReference;

        r3 := @parameter2: androidx.compose.IdentityWeakReference;

        $r4 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r8 = (java.util.Set) $r4;

        if r8 != null goto label1;

        z0 = 0;

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        r8 = (java.util.Set) $r5;

        $r6 = interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r8);

        $r7 = (java.util.Set) $r6;

     label1:
        interfaceinvoke r8.<java.util.Set: boolean add(java.lang.Object)>(r3);

        return;
    }

    private final void removeFromSet(java.util.Map, java.util.Map, androidx.compose.IdentityWeakReference)
    {
        androidx.compose.ObserverMap r0;
        java.util.Map r1, r2;
        androidx.compose.IdentityWeakReference r3, r8;
        java.util.Set r4, r9;
        java.lang.Iterable $r5;
        java.util.Iterator r6;
        java.lang.Object r7, $r10, $r11;
        boolean $z2;

        r0 := @this: androidx.compose.ObserverMap;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: androidx.compose.IdentityWeakReference;

        $r10 = interfaceinvoke r1.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r3);

        r4 = (java.util.Set) $r10;

        if r4 != null goto label1;

        goto label5;

     label1:
        $r5 = (java.lang.Iterable) r4;

        r6 = interfaceinvoke $r5.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (androidx.compose.IdentityWeakReference) r7;

        $r11 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8);

        r9 = (java.util.Set) $r11;

        if r9 != null goto label3;

        goto label4;

     label3:
        interfaceinvoke r9.<java.util.Set: boolean remove(java.lang.Object)>(r3);

     label4:
        goto label2;

     label5:
        return;
    }

