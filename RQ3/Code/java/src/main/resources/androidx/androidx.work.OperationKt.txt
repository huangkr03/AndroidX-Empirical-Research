androidx.work.OperationKt
    public static final java.lang.Object await(androidx.work.Operation, kotlin.coroutines.Continuation)
    {
        androidx.work.Operation $r0;
        kotlin.coroutines.Continuation r1, $r11, r34, r35;
        androidx.work.OperationKt$await$1 r2, $r22, r29;
        kotlinx.coroutines.CancellableContinuationImpl r3, r30;
        kotlinx.coroutines.CancellableContinuation r4;
        java.lang.Object $r5, r6, $r8, $r18, $r19, $r26;
        boolean $z2, $z3, z6, z9;
        com.google.common.util.concurrent.ListenableFuture $r9, $r23;
        androidx.work.DirectExecutor $r13;
        java.util.concurrent.Executor $r14;
        java.lang.Runnable $r15;
        kotlin.jvm.functions.Function1 $r17;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Throwable $r21, r27, $r28;
        androidx.work.ListenableFutureKt$await$2$1 r31;
        androidx.work.ListenableFutureKt$await$2$2 r32;
        java.lang.IllegalStateException r33;

        $r0 := @parameter0: androidx.work.Operation;

        r1 := @parameter1: kotlin.coroutines.Continuation;

        $z2 = r1 instanceof androidx.work.OperationKt$await$1;

        if $z2 == 0 goto label01;

        $r22 = (androidx.work.OperationKt$await$1) r1;

        $i0 = $r22.<androidx.work.OperationKt$await$1: int label>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label01;

        $i2 = $r22.<androidx.work.OperationKt$await$1: int label>;

        $i3 = $i2 - -2147483648;

        $r22.<androidx.work.OperationKt$await$1: int label> = $i3;

        goto label02;

     label01:
        r29 = new androidx.work.OperationKt$await$1;

        specialinvoke r29.<androidx.work.OperationKt$await$1: void <init>(kotlin.coroutines.Continuation)>(r1);

        $r22 = r29;

     label02:
        $r5 = $r22.<androidx.work.OperationKt$await$1: java.lang.Object result>;

        r6 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i4 = $r22.<androidx.work.OperationKt$await$1: int label>;

        tableswitch($i4)
        {
            case 0: goto label03;
            case 1: goto label09;
            default: goto label11;
        };

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r5);

        $r23 = interfaceinvoke $r0.<androidx.work.Operation: com.google.common.util.concurrent.ListenableFuture getResult()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r23, "result");

        $z3 = interfaceinvoke $r23.<com.google.common.util.concurrent.ListenableFuture: boolean isDone()>();

        if $z3 == 0 goto label07;

     label04:
        $r19 = interfaceinvoke $r23.<com.google.common.util.concurrent.ListenableFuture: java.lang.Object get()>();

        $r26 = $r19;

        goto label10;

     label05:
        $r21 := @caughtexception;

        r27 = $r21;

        $r28 = virtualinvoke r27.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        if $r28 != null goto label06;

        $r28 = (java.lang.Throwable) r27;

     label06:
        throw $r28;

     label07:
        z6 = 0;

        $r22.<androidx.work.OperationKt$await$1: java.lang.Object L$0> = $r23;

        $r22.<androidx.work.OperationKt$await$1: int label> = 1;

        r2 = $r22;

        r30 = new kotlinx.coroutines.CancellableContinuationImpl;

        r34 = (kotlin.coroutines.Continuation) r2;

        $r11 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>(r34);

        specialinvoke r30.<kotlinx.coroutines.CancellableContinuationImpl: void <init>(kotlin.coroutines.Continuation,int)>($r11, 1);

        r3 = r30;

        virtualinvoke r3.<kotlinx.coroutines.CancellableContinuationImpl: void initCancellability()>();

        r4 = (kotlinx.coroutines.CancellableContinuation) r3;

        r31 = new androidx.work.ListenableFutureKt$await$2$1;

        specialinvoke r31.<androidx.work.ListenableFutureKt$await$2$1: void <init>(kotlinx.coroutines.CancellableContinuation,com.google.common.util.concurrent.ListenableFuture)>(r4, $r23);

        $r15 = (java.lang.Runnable) r31;

        $r13 = <androidx.work.DirectExecutor: androidx.work.DirectExecutor INSTANCE>;

        $r14 = (java.util.concurrent.Executor) $r13;

        interfaceinvoke $r23.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r15, $r14);

        r32 = new androidx.work.ListenableFutureKt$await$2$2;

        specialinvoke r32.<androidx.work.ListenableFutureKt$await$2$2: void <init>(com.google.common.util.concurrent.ListenableFuture)>($r23);

        $r17 = (kotlin.jvm.functions.Function1) r32;

        interfaceinvoke r4.<kotlinx.coroutines.CancellableContinuation: void invokeOnCancellation(kotlin.jvm.functions.Function1)>($r17);

        $r26 = virtualinvoke r3.<kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getResult()>();

        $r18 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r26 != $r18 goto label08;

        r35 = (kotlin.coroutines.Continuation) $r22;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>(r35);

     label08:
        if $r26 != r6 goto label10;

        return r6;

     label09:
        z9 = 0;

        $r8 = $r22.<androidx.work.OperationKt$await$1: java.lang.Object L$0>;

        $r9 = (com.google.common.util.concurrent.ListenableFuture) $r8;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r5);

        $r26 = $r5;

     label10:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r26, "result.await()");

        return $r26;

     label11:
        r33 = new java.lang.IllegalStateException;

        specialinvoke r33.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r33;

        catch java.util.concurrent.ExecutionException from label04 to label05 with label05;
    }

    private static final java.lang.Object await$$forInline(androidx.work.Operation, kotlin.coroutines.Continuation)
    {
        androidx.work.Operation $r0;
        kotlin.coroutines.Continuation $r1, $r6, r22;
        java.lang.Object r2, $r14, $r18;
        kotlinx.coroutines.CancellableContinuationImpl r3, $r5;
        kotlinx.coroutines.CancellableContinuation r4;
        boolean $z4, z5;
        androidx.work.ListenableFutureKt$await$2$1 $r7;
        androidx.work.DirectExecutor $r8;
        java.util.concurrent.Executor $r9;
        java.lang.Runnable $r10;
        androidx.work.ListenableFutureKt$await$2$2 $r11;
        kotlin.jvm.functions.Function1 $r12;
        kotlin.Unit $r13;
        java.lang.Throwable $r15, r19, r20, $r21;
        com.google.common.util.concurrent.ListenableFuture $r16, $r17;

        $r0 := @parameter0: androidx.work.Operation;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $r16 = interfaceinvoke $r0.<androidx.work.Operation: com.google.common.util.concurrent.ListenableFuture getResult()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r16, "result");

        $r17 = (com.google.common.util.concurrent.ListenableFuture) $r16;

        $z4 = interfaceinvoke $r17.<com.google.common.util.concurrent.ListenableFuture: boolean isDone()>();

        if $z4 == 0 goto label5;

     label1:
        $r18 = interfaceinvoke $r17.<com.google.common.util.concurrent.ListenableFuture: java.lang.Object get()>();

        goto label9;

     label2:
        $r15 := @caughtexception;

        r19 = $r15;

        r20 = virtualinvoke r19.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        if r20 == null goto label3;

        $r21 = r20;

        goto label4;

     label3:
        $r21 = (java.lang.Throwable) r19;

     label4:
        throw $r21;

     label5:
        z5 = 0;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(0);

        r22 = $r1;

        $r5 = new kotlinx.coroutines.CancellableContinuationImpl;

        $r6 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>(r22);

        specialinvoke $r5.<kotlinx.coroutines.CancellableContinuationImpl: void <init>(kotlin.coroutines.Continuation,int)>($r6, 1);

        r3 = $r5;

        virtualinvoke r3.<kotlinx.coroutines.CancellableContinuationImpl: void initCancellability()>();

        r4 = (kotlinx.coroutines.CancellableContinuation) r3;

        $r7 = new androidx.work.ListenableFutureKt$await$2$1;

        specialinvoke $r7.<androidx.work.ListenableFutureKt$await$2$1: void <init>(kotlinx.coroutines.CancellableContinuation,com.google.common.util.concurrent.ListenableFuture)>(r4, $r17);

        $r10 = (java.lang.Runnable) $r7;

        $r8 = <androidx.work.DirectExecutor: androidx.work.DirectExecutor INSTANCE>;

        $r9 = (java.util.concurrent.Executor) $r8;

        interfaceinvoke $r17.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r10, $r9);

        $r11 = new androidx.work.ListenableFutureKt$await$2$2;

        specialinvoke $r11.<androidx.work.ListenableFutureKt$await$2$2: void <init>(com.google.common.util.concurrent.ListenableFuture)>($r17);

        $r12 = (kotlin.jvm.functions.Function1) $r11;

        interfaceinvoke r4.<kotlinx.coroutines.CancellableContinuation: void invokeOnCancellation(kotlin.jvm.functions.Function1)>($r12);

        goto label6;

     label6:
        $r13 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r18 = virtualinvoke r3.<kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getResult()>();

        $r14 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r18 != $r14 goto label7;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r1);

     label7:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(1);

        goto label8;

     label8:
        goto label9;

     label9:
        r2 = $r18;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "result.await()");

        return r2;

        catch java.util.concurrent.ExecutionException from label1 to label2 with label2;
    }

