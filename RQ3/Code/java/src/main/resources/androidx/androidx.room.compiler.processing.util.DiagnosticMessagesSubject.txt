androidx.room.compiler.processing.util.DiagnosticMessagesSubject
<androidx.room.compiler.processing.util.DiagnosticMessagesSubject: androidx.room.compiler.processing.util.DiagnosticMessagesSubject$Companion Companion>
<androidx.room.compiler.processing.util.DiagnosticMessagesSubject: java.util.List diagnosticMessages>
<androidx.room.compiler.processing.util.DiagnosticMessagesSubject: kotlin.Lazy lineContents$delegate>
<androidx.room.compiler.processing.util.DiagnosticMessagesSubject: kotlin.Lazy locations$delegate>
<androidx.room.compiler.processing.util.DiagnosticMessagesSubject: com.google.common.truth.Subject$Factory FACTORY>
    public void <init>(com.google.common.truth.FailureMetadata, java.util.List)
    {
        androidx.room.compiler.processing.util.DiagnosticMessagesSubject r0;
        com.google.common.truth.FailureMetadata r1;
        java.util.List r2;
        androidx.room.compiler.processing.util.DiagnosticMessagesSubject$lineContents$2 $r3;
        kotlin.jvm.functions.Function0 $r4, $r7;
        kotlin.Lazy $r5, $r8;
        androidx.room.compiler.processing.util.DiagnosticMessagesSubject$locations$2 $r6;

        r0 := @this: androidx.room.compiler.processing.util.DiagnosticMessagesSubject;

        r1 := @parameter0: com.google.common.truth.FailureMetadata;

        r2 := @parameter1: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "failureMetadata");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "diagnosticMessages");

        specialinvoke r0.<com.google.common.truth.Subject: void <init>(com.google.common.truth.FailureMetadata,java.lang.Object)>(r1, r2);

        r0.<androidx.room.compiler.processing.util.DiagnosticMessagesSubject: java.util.List diagnosticMessages> = r2;

        $r3 = new androidx.room.compiler.processing.util.DiagnosticMessagesSubject$lineContents$2;

        specialinvoke $r3.<androidx.room.compiler.processing.util.DiagnosticMessagesSubject$lineContents$2: void <init>(androidx.room.compiler.processing.util.DiagnosticMessagesSubject)>(r0);

        $r4 = (kotlin.jvm.functions.Function0) $r3;

        $r5 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r4);

        r0.<androidx.room.compiler.processing.util.DiagnosticMessagesSubject: kotlin.Lazy lineContents$delegate> = $r5;

        $r6 = new androidx.room.compiler.processing.util.DiagnosticMessagesSubject$locations$2;

        specialinvoke $r6.<androidx.room.compiler.processing.util.DiagnosticMessagesSubject$locations$2: void <init>(androidx.room.compiler.processing.util.DiagnosticMessagesSubject)>(r0);

        $r7 = (kotlin.jvm.functions.Function0) $r6;

        $r8 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r7);

        r0.<androidx.room.compiler.processing.util.DiagnosticMessagesSubject: kotlin.Lazy locations$delegate> = $r8;

        return;
    }

    private final java.util.List getLineContents()
    {
        androidx.room.compiler.processing.util.DiagnosticMessagesSubject r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.util.DiagnosticMessagesSubject;

        r1 = r0.<androidx.room.compiler.processing.util.DiagnosticMessagesSubject: kotlin.Lazy lineContents$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.util.List) $r2;

        return $r3;
    }

    private final java.util.List getLocations()
    {
        androidx.room.compiler.processing.util.DiagnosticMessagesSubject r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.util.DiagnosticMessagesSubject;

        r1 = r0.<androidx.room.compiler.processing.util.DiagnosticMessagesSubject: kotlin.Lazy locations$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.util.List) $r2;

        return $r3;
    }

    public final androidx.room.compiler.processing.util.DiagnosticMessagesSubject onLine(int)
    {
        androidx.room.compiler.processing.util.DiagnosticMessagesSubject r0, r1, $r2, $r8;
        int i0, $i1;
        java.lang.Iterable $r3, $r15;
        java.util.Iterator r4;
        java.lang.Object r5;
        androidx.room.compiler.processing.util.DiagnosticLocation r6;
        java.util.List $r7, $r13;
        boolean $z3, $z4, $z5, $z6, $z7;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r17;
        java.lang.CharSequence $r14;
        java.lang.String $r16, $r18;
        com.google.common.truth.Fact $r19;
        com.google.common.truth.Fact[] $r20;
        java.util.Collection $r21;

        r0 := @this: androidx.room.compiler.processing.util.DiagnosticMessagesSubject;

        i0 := @parameter0: int;

        r1 = r0;

        $r2 = (androidx.room.compiler.processing.util.DiagnosticMessagesSubject) r1;

        $r7 = specialinvoke $r2.<androidx.room.compiler.processing.util.DiagnosticMessagesSubject: java.util.List getLocations()>();

        $r3 = (java.lang.Iterable) $r7;

        $z3 = $r3 instanceof java.util.Collection;

        if $z3 == 0 goto label1;

        $r21 = (java.util.Collection) $r3;

        $z4 = interfaceinvoke $r21.<java.util.Collection: boolean isEmpty()>();

        if $z4 == 0 goto label1;

        $z5 = 1;

        goto label6;

     label1:
        r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z6 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label5;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (androidx.room.compiler.processing.util.DiagnosticLocation) r5;

        $i1 = virtualinvoke r6.<androidx.room.compiler.processing.util.DiagnosticLocation: int getLine()>();

        if $i1 != i0 goto label3;

        $z7 = 1;

        goto label4;

     label3:
        $z7 = 0;

     label4:
        if $z7 == 0 goto label2;

        $z5 = 0;

        goto label6;

     label5:
        $z5 = 1;

     label6:
        if $z5 == 0 goto label7;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected line ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but it was ");

        $r13 = specialinvoke $r2.<androidx.room.compiler.processing.util.DiagnosticMessagesSubject: java.util.List getLocations()>();

        $r15 = (java.lang.Iterable) $r13;

        $r14 = (java.lang.CharSequence) ",";

        $r16 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r15, $r14, null, null, 0, null, null, 62, null);

        $r17 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = staticinvoke <com.google.common.truth.Fact: com.google.common.truth.Fact simpleFact(java.lang.String)>($r18);

        $r20 = newarray (com.google.common.truth.Fact)[0];

        virtualinvoke $r2.<androidx.room.compiler.processing.util.DiagnosticMessagesSubject: void failWithActual(com.google.common.truth.Fact,com.google.common.truth.Fact[])>($r19, $r20);

     label7:
        $r8 = (androidx.room.compiler.processing.util.DiagnosticMessagesSubject) r1;

        return $r8;
    }

    public final androidx.room.compiler.processing.util.DiagnosticMessagesSubject hasCount(int)
    {
        androidx.room.compiler.processing.util.DiagnosticMessagesSubject r0, r1, $r2, $r4;
        int i0, $i1, $i2;
        java.util.List $r3, $r9;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r10;
        java.lang.String $r11;
        com.google.common.truth.Fact $r12;
        com.google.common.truth.Fact[] $r13;

        r0 := @this: androidx.room.compiler.processing.util.DiagnosticMessagesSubject;

        i0 := @parameter0: int;

        r1 = r0;

        $r2 = (androidx.room.compiler.processing.util.DiagnosticMessagesSubject) r1;

        $r3 = $r2.<androidx.room.compiler.processing.util.DiagnosticMessagesSubject: java.util.List diagnosticMessages>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i1 == i0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" messages, found ");

        $r9 = $r2.<androidx.room.compiler.processing.util.DiagnosticMessagesSubject: java.util.List diagnosticMessages>;

        $i2 = interfaceinvoke $r9.<java.util.List: int size()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = staticinvoke <com.google.common.truth.Fact: com.google.common.truth.Fact simpleFact(java.lang.String)>($r11);

        $r13 = newarray (com.google.common.truth.Fact)[0];

        virtualinvoke $r2.<androidx.room.compiler.processing.util.DiagnosticMessagesSubject: void failWithActual(com.google.common.truth.Fact,com.google.common.truth.Fact[])>($r12, $r13);

     label1:
        $r4 = (androidx.room.compiler.processing.util.DiagnosticMessagesSubject) r1;

        return $r4;
    }

    public final androidx.room.compiler.processing.util.DiagnosticMessagesSubject onLineContaining(java.lang.String)
    {
        androidx.room.compiler.processing.util.DiagnosticMessagesSubject r0, r2, $r3, $r10;
        java.lang.String r1, r7, $r18, $r20;
        java.lang.Iterable $r4, $r17;
        java.util.Iterator r5;
        java.lang.Object r6;
        java.util.List $r8, $r9, $r15;
        boolean $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r19;
        java.lang.CharSequence $r16, $r23, $r24;
        com.google.common.truth.Fact $r21, $r26;
        com.google.common.truth.Fact[] $r22, $r27;
        java.util.Collection $r25;

        r0 := @this: androidx.room.compiler.processing.util.DiagnosticMessagesSubject;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "content");

        r2 = r0;

        $r3 = (androidx.room.compiler.processing.util.DiagnosticMessagesSubject) r2;

        $r8 = specialinvoke $r3.<androidx.room.compiler.processing.util.DiagnosticMessagesSubject: java.util.List getLineContents()>();

        $z3 = interfaceinvoke $r8.<java.util.List: boolean isEmpty()>();

        if $z3 == 0 goto label1;

        $r26 = staticinvoke <com.google.common.truth.Fact: com.google.common.truth.Fact simpleFact(java.lang.String)>("Cannot validate line content due to missing location information");

        $r27 = newarray (com.google.common.truth.Fact)[0];

        virtualinvoke $r3.<androidx.room.compiler.processing.util.DiagnosticMessagesSubject: void failWithActual(com.google.common.truth.Fact,com.google.common.truth.Fact[])>($r26, $r27);

     label1:
        $r9 = specialinvoke $r3.<androidx.room.compiler.processing.util.DiagnosticMessagesSubject: java.util.List getLineContents()>();

        $r4 = (java.lang.Iterable) $r9;

        $z4 = $r4 instanceof java.util.Collection;

        if $z4 == 0 goto label2;

        $r25 = (java.util.Collection) $r4;

        $z6 = interfaceinvoke $r25.<java.util.Collection: boolean isEmpty()>();

        if $z6 == 0 goto label2;

        $z7 = 1;

        goto label5;

     label2:
        r5 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

     label3:
        $z8 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label4;

        r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) r6;

        $r24 = (java.lang.CharSequence) r7;

        $r23 = (java.lang.CharSequence) r1;

        $z5 = staticinvoke <kotlin.text.StringsKt: boolean contains$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)>($r24, $r23, 0, 2, null);

        if $z5 == 0 goto label3;

        $z7 = 0;

        goto label5;

     label4:
        $z7 = 1;

     label5:
        if $z7 == 0 goto label6;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected line content with ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but was ");

        $r15 = specialinvoke $r3.<androidx.room.compiler.processing.util.DiagnosticMessagesSubject: java.util.List getLineContents()>();

        $r17 = (java.lang.Iterable) $r15;

        $r16 = (java.lang.CharSequence) "\n";

        $r18 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r17, $r16, null, null, 0, null, null, 62, null);

        $r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = staticinvoke <com.google.common.truth.Fact: com.google.common.truth.Fact simpleFact(java.lang.String)>($r20);

        $r22 = newarray (com.google.common.truth.Fact)[0];

        virtualinvoke $r3.<androidx.room.compiler.processing.util.DiagnosticMessagesSubject: void failWithActual(com.google.common.truth.Fact,com.google.common.truth.Fact[])>($r21, $r22);

     label6:
        $r10 = (androidx.room.compiler.processing.util.DiagnosticMessagesSubject) r2;

        return $r10;
    }

    public final androidx.room.compiler.processing.util.DiagnosticMessagesSubject onSource(androidx.room.compiler.processing.util.Source)
    {
        androidx.room.compiler.processing.util.DiagnosticMessagesSubject r0, r2, $r3, $r9;
        androidx.room.compiler.processing.util.Source r1, $r24;
        java.lang.Iterable $r4, $r16;
        java.util.Iterator r5;
        java.lang.Object r6;
        androidx.room.compiler.processing.util.DiagnosticLocation r7;
        java.util.List $r8, $r14;
        boolean $z3, $z4, $z5, $z6, $z7;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r18, $r19;
        java.lang.CharSequence $r15;
        java.lang.String $r17, $r20, $r21;
        com.google.common.truth.Fact $r22;
        com.google.common.truth.Fact[] $r23;
        java.util.Collection $r25;

        r0 := @this: androidx.room.compiler.processing.util.DiagnosticMessagesSubject;

        r1 := @parameter0: androidx.room.compiler.processing.util.Source;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "source");

        r2 = r0;

        $r3 = (androidx.room.compiler.processing.util.DiagnosticMessagesSubject) r2;

        $r8 = specialinvoke $r3.<androidx.room.compiler.processing.util.DiagnosticMessagesSubject: java.util.List getLocations()>();

        $r4 = (java.lang.Iterable) $r8;

        $z3 = $r4 instanceof java.util.Collection;

        if $z3 == 0 goto label1;

        $r25 = (java.util.Collection) $r4;

        $z5 = interfaceinvoke $r25.<java.util.Collection: boolean isEmpty()>();

        if $z5 == 0 goto label1;

        $z6 = 1;

        goto label4;

     label1:
        r5 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z7 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label3;

        r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (androidx.room.compiler.processing.util.DiagnosticLocation) r6;

        $r24 = virtualinvoke r7.<androidx.room.compiler.processing.util.DiagnosticLocation: androidx.room.compiler.processing.util.Source getSource()>();

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r24, r1);

        if $z4 == 0 goto label2;

        $z6 = 0;

        goto label4;

     label3:
        $z6 = 1;

     label4:
        if $z6 == 0 goto label5;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n                    Expected diagnostic to be on ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but found it on\n                    ");

        $r14 = specialinvoke $r3.<androidx.room.compiler.processing.util.DiagnosticMessagesSubject: java.util.List getLocations()>();

        $r16 = (java.lang.Iterable) $r14;

        $r15 = (java.lang.CharSequence) ",";

        $r17 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r16, $r15, null, null, 0, null, null, 62, null);

        $r18 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n                    ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = staticinvoke <kotlin.text.StringsKt: java.lang.String trimIndent(java.lang.String)>($r20);

        $r22 = staticinvoke <com.google.common.truth.Fact: com.google.common.truth.Fact simpleFact(java.lang.String)>($r21);

        $r23 = newarray (com.google.common.truth.Fact)[0];

        virtualinvoke $r3.<androidx.room.compiler.processing.util.DiagnosticMessagesSubject: void failWithActual(com.google.common.truth.Fact,com.google.common.truth.Fact[])>($r22, $r23);

     label5:
        $r9 = (androidx.room.compiler.processing.util.DiagnosticMessagesSubject) r2;

        return $r9;
    }

    private static final androidx.room.compiler.processing.util.DiagnosticMessagesSubject FACTORY$lambda$7(com.google.common.truth.FailureMetadata, java.util.List)
    {
        com.google.common.truth.FailureMetadata r0;
        java.util.List r1;
        androidx.room.compiler.processing.util.DiagnosticMessagesSubject $r2;

        r0 := @parameter0: com.google.common.truth.FailureMetadata;

        r1 := @parameter1: java.util.List;

        $r2 = new androidx.room.compiler.processing.util.DiagnosticMessagesSubject;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r0, "metadata");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "actual");

        specialinvoke $r2.<androidx.room.compiler.processing.util.DiagnosticMessagesSubject: void <init>(com.google.common.truth.FailureMetadata,java.util.List)>(r0, r1);

        return $r2;
    }

    public static final com.google.common.truth.Subject$Factory access$getFACTORY$cp()
    {
        com.google.common.truth.Subject$Factory $r0;

        $r0 = <androidx.room.compiler.processing.util.DiagnosticMessagesSubject: com.google.common.truth.Subject$Factory FACTORY>;

        return $r0;
    }

    public static final java.util.List access$getDiagnosticMessages$p(androidx.room.compiler.processing.util.DiagnosticMessagesSubject)
    {
        androidx.room.compiler.processing.util.DiagnosticMessagesSubject $r0;
        java.util.List $r1;

        $r0 := @parameter0: androidx.room.compiler.processing.util.DiagnosticMessagesSubject;

        $r1 = $r0.<androidx.room.compiler.processing.util.DiagnosticMessagesSubject: java.util.List diagnosticMessages>;

        return $r1;
    }

    static void <clinit>()
    {
        androidx.room.compiler.processing.util.DiagnosticMessagesSubject$Companion $r0;
        com.google.common.truth.Subject$Factory $r1;

        $r0 = new androidx.room.compiler.processing.util.DiagnosticMessagesSubject$Companion;

        specialinvoke $r0.<androidx.room.compiler.processing.util.DiagnosticMessagesSubject$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.room.compiler.processing.util.DiagnosticMessagesSubject: androidx.room.compiler.processing.util.DiagnosticMessagesSubject$Companion Companion> = $r0;

        $r1 = dynamicinvoke "createSubject" <com.google.common.truth.Subject$Factory ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: com.google.common.truth.Subject __METHODTYPE__(com.google.common.truth.FailureMetadata,java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.room.compiler.processing.util.DiagnosticMessagesSubject: androidx.room.compiler.processing.util.DiagnosticMessagesSubject FACTORY$lambda$7(com.google.common.truth.FailureMetadata,java.util.List)>, methodtype: androidx.room.compiler.processing.util.DiagnosticMessagesSubject __METHODTYPE__(com.google.common.truth.FailureMetadata,java.util.List));

        <androidx.room.compiler.processing.util.DiagnosticMessagesSubject: com.google.common.truth.Subject$Factory FACTORY> = $r1;

        return;
    }

