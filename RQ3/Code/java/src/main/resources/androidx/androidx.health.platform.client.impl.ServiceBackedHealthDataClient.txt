androidx.health.platform.client.impl.ServiceBackedHealthDataClient
<androidx.health.platform.client.impl.ServiceBackedHealthDataClient: android.content.Context context>
<androidx.health.platform.client.impl.ServiceBackedHealthDataClient: java.lang.String callingPackageName>
<androidx.health.platform.client.impl.ServiceBackedHealthDataClient: java.util.concurrent.ScheduledExecutorService executorService>
    public void <init>(android.content.Context, androidx.health.platform.client.impl.ipc.ClientConfiguration, androidx.health.platform.client.impl.ipc.internal.ConnectionManager)
    {
        androidx.health.platform.client.impl.ServiceBackedHealthDataClient r0;
        android.content.Context r1, $r6;
        androidx.health.platform.client.impl.ipc.ClientConfiguration r2;
        androidx.health.platform.client.impl.ipc.internal.ConnectionManager r3;
        androidx.health.platform.client.impl.ipc.Client$ServiceGetter $r4;
        androidx.health.platform.client.impl.ipc.RemoteOperation $r5;
        java.lang.String $r7;
        java.util.concurrent.ScheduledExecutorService $r8;

        r0 := @this: androidx.health.platform.client.impl.ServiceBackedHealthDataClient;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.health.platform.client.impl.ipc.ClientConfiguration;

        r3 := @parameter2: androidx.health.platform.client.impl.ipc.internal.ConnectionManager;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "clientConfiguration");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "connectionManager");

        $r4 = dynamicinvoke "getService" <androidx.health.platform.client.impl.ipc.Client$ServiceGetter ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(android.os.IBinder), methodhandle: "REF_INVOKE_STATIC" <androidx.health.platform.client.service.IHealthDataService$Stub: androidx.health.platform.client.service.IHealthDataService asInterface(android.os.IBinder)>, methodtype: androidx.health.platform.client.service.IHealthDataService __METHODTYPE__(android.os.IBinder));

        $r5 = dynamicinvoke "execute" <androidx.health.platform.client.impl.ipc.RemoteOperation ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_INTERFACE" <androidx.health.platform.client.service.IHealthDataService: int getApiVersion()>, methodtype: java.lang.Integer __METHODTYPE__(androidx.health.platform.client.service.IHealthDataService));

        specialinvoke r0.<androidx.health.platform.client.impl.ipc.Client: void <init>(androidx.health.platform.client.impl.ipc.ClientConfiguration,androidx.health.platform.client.impl.ipc.internal.ConnectionManager,androidx.health.platform.client.impl.ipc.Client$ServiceGetter,androidx.health.platform.client.impl.ipc.RemoteOperation)>(r2, r3, $r4, $r5);

        r0.<androidx.health.platform.client.impl.ServiceBackedHealthDataClient: android.content.Context context> = r1;

        $r6 = r0.<androidx.health.platform.client.impl.ServiceBackedHealthDataClient: android.content.Context context>;

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.String getPackageName()>();

        r0.<androidx.health.platform.client.impl.ServiceBackedHealthDataClient: java.lang.String callingPackageName> = $r7;

        $r8 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newSingleThreadScheduledExecutor()>();

        r0.<androidx.health.platform.client.impl.ServiceBackedHealthDataClient: java.util.concurrent.ScheduledExecutorService executorService> = $r8;

        return;
    }

    public final androidx.health.platform.client.request.RequestContext getBackgroundRequestContext()
    {
        androidx.health.platform.client.impl.ServiceBackedHealthDataClient r0;
        androidx.health.platform.client.request.RequestContext $r1;
        java.lang.String $r2, $r4;
        android.content.Context $r3;

        r0 := @this: androidx.health.platform.client.impl.ServiceBackedHealthDataClient;

        $r1 = new androidx.health.platform.client.request.RequestContext;

        $r2 = r0.<androidx.health.platform.client.impl.ServiceBackedHealthDataClient: java.lang.String callingPackageName>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "callingPackageName");

        $r3 = r0.<androidx.health.platform.client.impl.ServiceBackedHealthDataClient: android.content.Context context>;

        $r4 = staticinvoke <androidx.health.platform.client.impl.permission.token.PermissionTokenManager: java.lang.String getCurrentToken(android.content.Context)>($r3);

        specialinvoke $r1.<androidx.health.platform.client.request.RequestContext: void <init>(java.lang.String,int,java.lang.String,boolean)>($r2, 1, $r4, 0);

        return $r1;
    }

    public final androidx.health.platform.client.request.RequestContext getRequestContext()
    {
        androidx.health.platform.client.impl.ServiceBackedHealthDataClient r0;
        androidx.health.platform.client.request.RequestContext $r1;
        java.lang.String $r2, $r4;
        android.content.Context $r3;

        r0 := @this: androidx.health.platform.client.impl.ServiceBackedHealthDataClient;

        $r1 = new androidx.health.platform.client.request.RequestContext;

        $r2 = r0.<androidx.health.platform.client.impl.ServiceBackedHealthDataClient: java.lang.String callingPackageName>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "callingPackageName");

        $r3 = r0.<androidx.health.platform.client.impl.ServiceBackedHealthDataClient: android.content.Context context>;

        $r4 = staticinvoke <androidx.health.platform.client.impl.permission.token.PermissionTokenManager: java.lang.String getCurrentToken(android.content.Context)>($r3);

        specialinvoke $r1.<androidx.health.platform.client.request.RequestContext: void <init>(java.lang.String,int,java.lang.String,boolean)>($r2, 1, $r4, 1);

        return $r1;
    }

    public void <init>(android.content.Context, androidx.health.platform.client.impl.ipc.ClientConfiguration)
    {
        androidx.health.platform.client.impl.ServiceBackedHealthDataClient r0;
        android.content.Context r1;
        androidx.health.platform.client.impl.ipc.ClientConfiguration r2;
        androidx.health.platform.client.impl.internal.ProviderConnectionManager $r3;
        androidx.health.platform.client.impl.ipc.internal.ConnectionManager $r4;

        r0 := @this: androidx.health.platform.client.impl.ServiceBackedHealthDataClient;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.health.platform.client.impl.ipc.ClientConfiguration;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "clientConfiguration");

        $r3 = <androidx.health.platform.client.impl.internal.ProviderConnectionManager: androidx.health.platform.client.impl.internal.ProviderConnectionManager INSTANCE>;

        $r4 = virtualinvoke $r3.<androidx.health.platform.client.impl.internal.ProviderConnectionManager: androidx.health.platform.client.impl.ipc.internal.ConnectionManager getInstance(android.content.Context)>(r1);

        specialinvoke r0.<androidx.health.platform.client.impl.ServiceBackedHealthDataClient: void <init>(android.content.Context,androidx.health.platform.client.impl.ipc.ClientConfiguration,androidx.health.platform.client.impl.ipc.internal.ConnectionManager)>(r1, r2, $r4);

        return;
    }

    public com.google.common.util.concurrent.ListenableFuture getGrantedPermissions(java.util.Set)
    {
        androidx.health.platform.client.impl.ServiceBackedHealthDataClient r0;
        java.util.Set r1;
        androidx.health.platform.client.impl.ipc.RemoteFutureOperation $r2;
        com.google.common.util.concurrent.ListenableFuture $r3;

        r0 := @this: androidx.health.platform.client.impl.ServiceBackedHealthDataClient;

        r1 := @parameter0: java.util.Set;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "permissions");

        $r2 = dynamicinvoke "execute" <androidx.health.platform.client.impl.ipc.RemoteFutureOperation (androidx.health.platform.client.impl.ServiceBackedHealthDataClient,java.util.Set)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,com.google.common.util.concurrent.SettableFuture), methodhandle: "REF_INVOKE_STATIC" <androidx.health.platform.client.impl.ServiceBackedHealthDataClient: void getGrantedPermissions$lambda-1(androidx.health.platform.client.impl.ServiceBackedHealthDataClient,java.util.Set,androidx.health.platform.client.service.IHealthDataService,com.google.common.util.concurrent.SettableFuture)>, methodtype: void __METHODTYPE__(androidx.health.platform.client.service.IHealthDataService,com.google.common.util.concurrent.SettableFuture));

        $r3 = virtualinvoke r0.<androidx.health.platform.client.impl.ServiceBackedHealthDataClient: com.google.common.util.concurrent.ListenableFuture executeWithVersionCheck(int,androidx.health.platform.client.impl.ipc.RemoteFutureOperation)>(1, $r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "executeWithVersionCheck(\u2026)\n            )\n        }");

        return $r3;
    }

    public com.google.common.util.concurrent.ListenableFuture revokeAllPermissions()
    {
        androidx.health.platform.client.impl.ServiceBackedHealthDataClient r0;
        androidx.health.platform.client.impl.ipc.RemoteFutureOperation $r1;
        com.google.common.util.concurrent.ListenableFuture $r2;

        r0 := @this: androidx.health.platform.client.impl.ServiceBackedHealthDataClient;

        $r1 = dynamicinvoke "execute" <androidx.health.platform.client.impl.ipc.RemoteFutureOperation (androidx.health.platform.client.impl.ServiceBackedHealthDataClient)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,com.google.common.util.concurrent.SettableFuture), methodhandle: "REF_INVOKE_STATIC" <androidx.health.platform.client.impl.ServiceBackedHealthDataClient: void revokeAllPermissions$lambda-2(androidx.health.platform.client.impl.ServiceBackedHealthDataClient,androidx.health.platform.client.service.IHealthDataService,com.google.common.util.concurrent.SettableFuture)>, methodtype: void __METHODTYPE__(androidx.health.platform.client.service.IHealthDataService,com.google.common.util.concurrent.SettableFuture));

        $r2 = virtualinvoke r0.<androidx.health.platform.client.impl.ServiceBackedHealthDataClient: com.google.common.util.concurrent.ListenableFuture executeWithVersionCheck(int,androidx.health.platform.client.impl.ipc.RemoteFutureOperation)>(1, $r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "executeWithVersionCheck(\u2026)\n            )\n        }");

        return $r2;
    }

    public com.google.common.util.concurrent.ListenableFuture insertData(java.util.List)
    {
        androidx.health.platform.client.impl.ServiceBackedHealthDataClient r0;
        java.util.List r1;
        androidx.health.platform.client.request.UpsertDataRequest r2, $r3;
        androidx.health.platform.client.impl.ipc.RemoteFutureOperation $r4;
        com.google.common.util.concurrent.ListenableFuture $r5;

        r0 := @this: androidx.health.platform.client.impl.ServiceBackedHealthDataClient;

        r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "dataCollection");

        $r3 = new androidx.health.platform.client.request.UpsertDataRequest;

        specialinvoke $r3.<androidx.health.platform.client.request.UpsertDataRequest: void <init>(java.util.List)>(r1);

        r2 = $r3;

        $r4 = dynamicinvoke "execute" <androidx.health.platform.client.impl.ipc.RemoteFutureOperation (androidx.health.platform.client.impl.ServiceBackedHealthDataClient,androidx.health.platform.client.request.UpsertDataRequest)>(r0, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,com.google.common.util.concurrent.SettableFuture), methodhandle: "REF_INVOKE_STATIC" <androidx.health.platform.client.impl.ServiceBackedHealthDataClient: void insertData$lambda-3(androidx.health.platform.client.impl.ServiceBackedHealthDataClient,androidx.health.platform.client.request.UpsertDataRequest,androidx.health.platform.client.service.IHealthDataService,com.google.common.util.concurrent.SettableFuture)>, methodtype: void __METHODTYPE__(androidx.health.platform.client.service.IHealthDataService,com.google.common.util.concurrent.SettableFuture));

        $r5 = virtualinvoke r0.<androidx.health.platform.client.impl.ServiceBackedHealthDataClient: com.google.common.util.concurrent.ListenableFuture executeWithVersionCheck(int,androidx.health.platform.client.impl.ipc.RemoteFutureOperation)>(1, $r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "executeWithVersionCheck(\u2026(resultFuture))\n        }");

        return $r5;
    }

    public com.google.common.util.concurrent.ListenableFuture updateData(java.util.List)
    {
        androidx.health.platform.client.impl.ServiceBackedHealthDataClient r0;
        java.util.List r1;
        androidx.health.platform.client.request.UpsertDataRequest r2, $r3;
        androidx.health.platform.client.impl.ipc.RemoteFutureOperation $r4;
        com.google.common.util.concurrent.ListenableFuture $r5;

        r0 := @this: androidx.health.platform.client.impl.ServiceBackedHealthDataClient;

        r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "dataCollection");

        $r3 = new androidx.health.platform.client.request.UpsertDataRequest;

        specialinvoke $r3.<androidx.health.platform.client.request.UpsertDataRequest: void <init>(java.util.List)>(r1);

        r2 = $r3;

        $r4 = dynamicinvoke "execute" <androidx.health.platform.client.impl.ipc.RemoteFutureOperation (androidx.health.platform.client.impl.ServiceBackedHealthDataClient,androidx.health.platform.client.request.UpsertDataRequest)>(r0, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,com.google.common.util.concurrent.SettableFuture), methodhandle: "REF_INVOKE_STATIC" <androidx.health.platform.client.impl.ServiceBackedHealthDataClient: void updateData$lambda-4(androidx.health.platform.client.impl.ServiceBackedHealthDataClient,androidx.health.platform.client.request.UpsertDataRequest,androidx.health.platform.client.service.IHealthDataService,com.google.common.util.concurrent.SettableFuture)>, methodtype: void __METHODTYPE__(androidx.health.platform.client.service.IHealthDataService,com.google.common.util.concurrent.SettableFuture));

        $r5 = virtualinvoke r0.<androidx.health.platform.client.impl.ServiceBackedHealthDataClient: com.google.common.util.concurrent.ListenableFuture executeWithVersionCheck(int,androidx.health.platform.client.impl.ipc.RemoteFutureOperation)>(1, $r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "executeWithVersionCheck(\u2026(resultFuture))\n        }");

        return $r5;
    }

    public com.google.common.util.concurrent.ListenableFuture deleteData(java.util.List, java.util.List)
    {
        androidx.health.platform.client.impl.ServiceBackedHealthDataClient r0;
        java.util.List r1, r2;
        androidx.health.platform.client.request.DeleteDataRequest r3, $r4;
        androidx.health.platform.client.impl.ipc.RemoteFutureOperation $r5;
        com.google.common.util.concurrent.ListenableFuture $r6;

        r0 := @this: androidx.health.platform.client.impl.ServiceBackedHealthDataClient;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "uidsCollection");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "clientIdsCollection");

        $r4 = new androidx.health.platform.client.request.DeleteDataRequest;

        specialinvoke $r4.<androidx.health.platform.client.request.DeleteDataRequest: void <init>(java.util.List,java.util.List)>(r1, r2);

        r3 = $r4;

        $r5 = dynamicinvoke "execute" <androidx.health.platform.client.impl.ipc.RemoteFutureOperation (androidx.health.platform.client.impl.ServiceBackedHealthDataClient,androidx.health.platform.client.request.DeleteDataRequest)>(r0, r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,com.google.common.util.concurrent.SettableFuture), methodhandle: "REF_INVOKE_STATIC" <androidx.health.platform.client.impl.ServiceBackedHealthDataClient: void deleteData$lambda-5(androidx.health.platform.client.impl.ServiceBackedHealthDataClient,androidx.health.platform.client.request.DeleteDataRequest,androidx.health.platform.client.service.IHealthDataService,com.google.common.util.concurrent.SettableFuture)>, methodtype: void __METHODTYPE__(androidx.health.platform.client.service.IHealthDataService,com.google.common.util.concurrent.SettableFuture));

        $r6 = virtualinvoke r0.<androidx.health.platform.client.impl.ServiceBackedHealthDataClient: com.google.common.util.concurrent.ListenableFuture executeWithVersionCheck(int,androidx.health.platform.client.impl.ipc.RemoteFutureOperation)>(1, $r5);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "executeWithVersionCheck(\u2026(resultFuture))\n        }");

        return $r6;
    }

    public com.google.common.util.concurrent.ListenableFuture deleteDataRange(androidx.health.platform.client.proto.RequestProto$DeleteDataRangeRequest)
    {
        androidx.health.platform.client.impl.ServiceBackedHealthDataClient r0;
        androidx.health.platform.client.proto.RequestProto$DeleteDataRangeRequest r1;
        androidx.health.platform.client.request.DeleteDataRangeRequest r2, $r3;
        androidx.health.platform.client.impl.ipc.RemoteFutureOperation $r4;
        com.google.common.util.concurrent.ListenableFuture $r5;

        r0 := @this: androidx.health.platform.client.impl.ServiceBackedHealthDataClient;

        r1 := @parameter0: androidx.health.platform.client.proto.RequestProto$DeleteDataRangeRequest;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "dataCollection");

        $r3 = new androidx.health.platform.client.request.DeleteDataRangeRequest;

        specialinvoke $r3.<androidx.health.platform.client.request.DeleteDataRangeRequest: void <init>(androidx.health.platform.client.proto.RequestProto$DeleteDataRangeRequest)>(r1);

        r2 = $r3;

        $r4 = dynamicinvoke "execute" <androidx.health.platform.client.impl.ipc.RemoteFutureOperation (androidx.health.platform.client.impl.ServiceBackedHealthDataClient,androidx.health.platform.client.request.DeleteDataRangeRequest)>(r0, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,com.google.common.util.concurrent.SettableFuture), methodhandle: "REF_INVOKE_STATIC" <androidx.health.platform.client.impl.ServiceBackedHealthDataClient: void deleteDataRange$lambda-6(androidx.health.platform.client.impl.ServiceBackedHealthDataClient,androidx.health.platform.client.request.DeleteDataRangeRequest,androidx.health.platform.client.service.IHealthDataService,com.google.common.util.concurrent.SettableFuture)>, methodtype: void __METHODTYPE__(androidx.health.platform.client.service.IHealthDataService,com.google.common.util.concurrent.SettableFuture));

        $r5 = virtualinvoke r0.<androidx.health.platform.client.impl.ServiceBackedHealthDataClient: com.google.common.util.concurrent.ListenableFuture executeWithVersionCheck(int,androidx.health.platform.client.impl.ipc.RemoteFutureOperation)>(1, $r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "executeWithVersionCheck(\u2026)\n            )\n        }");

        return $r5;
    }

    public com.google.common.util.concurrent.ListenableFuture readData(androidx.health.platform.client.proto.RequestProto$ReadDataRequest)
    {
        androidx.health.platform.client.impl.ServiceBackedHealthDataClient r0;
        androidx.health.platform.client.proto.RequestProto$ReadDataRequest r1;
        androidx.health.platform.client.request.ReadDataRequest r2, $r3;
        androidx.health.platform.client.impl.ipc.RemoteFutureOperation $r4;
        com.google.common.util.concurrent.ListenableFuture $r5;

        r0 := @this: androidx.health.platform.client.impl.ServiceBackedHealthDataClient;

        r1 := @parameter0: androidx.health.platform.client.proto.RequestProto$ReadDataRequest;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "dataCollection");

        $r3 = new androidx.health.platform.client.request.ReadDataRequest;

        specialinvoke $r3.<androidx.health.platform.client.request.ReadDataRequest: void <init>(androidx.health.platform.client.proto.RequestProto$ReadDataRequest)>(r1);

        r2 = $r3;

        $r4 = dynamicinvoke "execute" <androidx.health.platform.client.impl.ipc.RemoteFutureOperation (androidx.health.platform.client.impl.ServiceBackedHealthDataClient,androidx.health.platform.client.request.ReadDataRequest)>(r0, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,com.google.common.util.concurrent.SettableFuture), methodhandle: "REF_INVOKE_STATIC" <androidx.health.platform.client.impl.ServiceBackedHealthDataClient: void readData$lambda-7(androidx.health.platform.client.impl.ServiceBackedHealthDataClient,androidx.health.platform.client.request.ReadDataRequest,androidx.health.platform.client.service.IHealthDataService,com.google.common.util.concurrent.SettableFuture)>, methodtype: void __METHODTYPE__(androidx.health.platform.client.service.IHealthDataService,com.google.common.util.concurrent.SettableFuture));

        $r5 = virtualinvoke r0.<androidx.health.platform.client.impl.ServiceBackedHealthDataClient: com.google.common.util.concurrent.ListenableFuture executeWithVersionCheck(int,androidx.health.platform.client.impl.ipc.RemoteFutureOperation)>(1, $r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "executeWithVersionCheck(\u2026(resultFuture))\n        }");

        return $r5;
    }

    public com.google.common.util.concurrent.ListenableFuture readDataRange(androidx.health.platform.client.proto.RequestProto$ReadDataRangeRequest)
    {
        androidx.health.platform.client.impl.ServiceBackedHealthDataClient r0;
        androidx.health.platform.client.proto.RequestProto$ReadDataRangeRequest r1;
        androidx.health.platform.client.request.ReadDataRangeRequest r2, $r3;
        androidx.health.platform.client.impl.ipc.RemoteFutureOperation $r4;
        com.google.common.util.concurrent.ListenableFuture $r5;

        r0 := @this: androidx.health.platform.client.impl.ServiceBackedHealthDataClient;

        r1 := @parameter0: androidx.health.platform.client.proto.RequestProto$ReadDataRangeRequest;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "dataCollection");

        $r3 = new androidx.health.platform.client.request.ReadDataRangeRequest;

        specialinvoke $r3.<androidx.health.platform.client.request.ReadDataRangeRequest: void <init>(androidx.health.platform.client.proto.RequestProto$ReadDataRangeRequest)>(r1);

        r2 = $r3;

        $r4 = dynamicinvoke "execute" <androidx.health.platform.client.impl.ipc.RemoteFutureOperation (androidx.health.platform.client.impl.ServiceBackedHealthDataClient,androidx.health.platform.client.request.ReadDataRangeRequest)>(r0, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,com.google.common.util.concurrent.SettableFuture), methodhandle: "REF_INVOKE_STATIC" <androidx.health.platform.client.impl.ServiceBackedHealthDataClient: void readDataRange$lambda-8(androidx.health.platform.client.impl.ServiceBackedHealthDataClient,androidx.health.platform.client.request.ReadDataRangeRequest,androidx.health.platform.client.service.IHealthDataService,com.google.common.util.concurrent.SettableFuture)>, methodtype: void __METHODTYPE__(androidx.health.platform.client.service.IHealthDataService,com.google.common.util.concurrent.SettableFuture));

        $r5 = virtualinvoke r0.<androidx.health.platform.client.impl.ServiceBackedHealthDataClient: com.google.common.util.concurrent.ListenableFuture executeWithVersionCheck(int,androidx.health.platform.client.impl.ipc.RemoteFutureOperation)>(1, $r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "executeWithVersionCheck(\u2026(resultFuture))\n        }");

        return $r5;
    }

    public com.google.common.util.concurrent.ListenableFuture aggregate(androidx.health.platform.client.proto.RequestProto$AggregateDataRequest)
    {
        androidx.health.platform.client.impl.ServiceBackedHealthDataClient r0;
        androidx.health.platform.client.proto.RequestProto$AggregateDataRequest r1;
        androidx.health.platform.client.impl.ipc.RemoteFutureOperation $r2;
        com.google.common.util.concurrent.ListenableFuture $r3;

        r0 := @this: androidx.health.platform.client.impl.ServiceBackedHealthDataClient;

        r1 := @parameter0: androidx.health.platform.client.proto.RequestProto$AggregateDataRequest;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "request");

        $r2 = dynamicinvoke "execute" <androidx.health.platform.client.impl.ipc.RemoteFutureOperation (androidx.health.platform.client.impl.ServiceBackedHealthDataClient,androidx.health.platform.client.proto.RequestProto$AggregateDataRequest)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,com.google.common.util.concurrent.SettableFuture), methodhandle: "REF_INVOKE_STATIC" <androidx.health.platform.client.impl.ServiceBackedHealthDataClient: void aggregate$lambda-9(androidx.health.platform.client.impl.ServiceBackedHealthDataClient,androidx.health.platform.client.proto.RequestProto$AggregateDataRequest,androidx.health.platform.client.service.IHealthDataService,com.google.common.util.concurrent.SettableFuture)>, methodtype: void __METHODTYPE__(androidx.health.platform.client.service.IHealthDataService,com.google.common.util.concurrent.SettableFuture));

        $r3 = virtualinvoke r0.<androidx.health.platform.client.impl.ServiceBackedHealthDataClient: com.google.common.util.concurrent.ListenableFuture executeWithVersionCheck(int,androidx.health.platform.client.impl.ipc.RemoteFutureOperation)>(1, $r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "executeWithVersionCheck(\u2026)\n            )\n        }");

        return $r3;
    }

    public com.google.common.util.concurrent.ListenableFuture getChangesToken(androidx.health.platform.client.proto.RequestProto$GetChangesTokenRequest)
    {
        androidx.health.platform.client.impl.ServiceBackedHealthDataClient r0;
        androidx.health.platform.client.proto.RequestProto$GetChangesTokenRequest r1;
        androidx.health.platform.client.impl.ipc.RemoteFutureOperation $r2;
        com.google.common.util.concurrent.ListenableFuture $r3;

        r0 := @this: androidx.health.platform.client.impl.ServiceBackedHealthDataClient;

        r1 := @parameter0: androidx.health.platform.client.proto.RequestProto$GetChangesTokenRequest;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "request");

        $r2 = dynamicinvoke "execute" <androidx.health.platform.client.impl.ipc.RemoteFutureOperation (androidx.health.platform.client.impl.ServiceBackedHealthDataClient,androidx.health.platform.client.proto.RequestProto$GetChangesTokenRequest)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,com.google.common.util.concurrent.SettableFuture), methodhandle: "REF_INVOKE_STATIC" <androidx.health.platform.client.impl.ServiceBackedHealthDataClient: void getChangesToken$lambda-10(androidx.health.platform.client.impl.ServiceBackedHealthDataClient,androidx.health.platform.client.proto.RequestProto$GetChangesTokenRequest,androidx.health.platform.client.service.IHealthDataService,com.google.common.util.concurrent.SettableFuture)>, methodtype: void __METHODTYPE__(androidx.health.platform.client.service.IHealthDataService,com.google.common.util.concurrent.SettableFuture));

        $r3 = virtualinvoke r0.<androidx.health.platform.client.impl.ServiceBackedHealthDataClient: com.google.common.util.concurrent.ListenableFuture executeWithVersionCheck(int,androidx.health.platform.client.impl.ipc.RemoteFutureOperation)>(1, $r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "executeWithVersionCheck(\u2026)\n            )\n        }");

        return $r3;
    }

    public com.google.common.util.concurrent.ListenableFuture getChanges(androidx.health.platform.client.proto.RequestProto$GetChangesRequest)
    {
        androidx.health.platform.client.impl.ServiceBackedHealthDataClient r0;
        androidx.health.platform.client.proto.RequestProto$GetChangesRequest r1;
        androidx.health.platform.client.impl.ipc.RemoteFutureOperation $r2;
        com.google.common.util.concurrent.ListenableFuture $r3;

        r0 := @this: androidx.health.platform.client.impl.ServiceBackedHealthDataClient;

        r1 := @parameter0: androidx.health.platform.client.proto.RequestProto$GetChangesRequest;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "request");

        $r2 = dynamicinvoke "execute" <androidx.health.platform.client.impl.ipc.RemoteFutureOperation (androidx.health.platform.client.impl.ServiceBackedHealthDataClient,androidx.health.platform.client.proto.RequestProto$GetChangesRequest)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,com.google.common.util.concurrent.SettableFuture), methodhandle: "REF_INVOKE_STATIC" <androidx.health.platform.client.impl.ServiceBackedHealthDataClient: void getChanges$lambda-11(androidx.health.platform.client.impl.ServiceBackedHealthDataClient,androidx.health.platform.client.proto.RequestProto$GetChangesRequest,androidx.health.platform.client.service.IHealthDataService,com.google.common.util.concurrent.SettableFuture)>, methodtype: void __METHODTYPE__(androidx.health.platform.client.service.IHealthDataService,com.google.common.util.concurrent.SettableFuture));

        $r3 = virtualinvoke r0.<androidx.health.platform.client.impl.ServiceBackedHealthDataClient: com.google.common.util.concurrent.ListenableFuture executeWithVersionCheck(int,androidx.health.platform.client.impl.ipc.RemoteFutureOperation)>(1, $r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "executeWithVersionCheck(\u2026)\n            )\n        }");

        return $r3;
    }

    private static final void getGrantedPermissions$lambda-1(androidx.health.platform.client.impl.ServiceBackedHealthDataClient, java.util.Set, androidx.health.platform.client.service.IHealthDataService, com.google.common.util.concurrent.SettableFuture)
    {
        androidx.health.platform.client.impl.ServiceBackedHealthDataClient r0;
        java.util.Set $r1;
        androidx.health.platform.client.service.IHealthDataService r2, r9;
        com.google.common.util.concurrent.SettableFuture r3;
        java.lang.Iterable $r4, $r12;
        java.util.Collection r5, r17;
        java.util.Iterator r6;
        java.lang.Object r7;
        androidx.health.platform.client.proto.PermissionProto$Permission r8;
        androidx.health.platform.client.request.RequestContext r10;
        java.util.ArrayList $r11;
        int $i0;
        boolean $z3;
        java.util.List $r13, r18;
        androidx.health.platform.client.impl.GetGrantedPermissionsCallback $r14;
        androidx.health.platform.client.service.IGetGrantedPermissionsCallback $r15;
        androidx.health.platform.client.permission.Permission $r16;

        r0 := @parameter0: androidx.health.platform.client.impl.ServiceBackedHealthDataClient;

        $r1 := @parameter1: java.util.Set;

        r2 := @parameter2: androidx.health.platform.client.service.IHealthDataService;

        r3 := @parameter3: com.google.common.util.concurrent.SettableFuture;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$permissions");

        $r4 = (java.lang.Iterable) $r1;

        r10 = virtualinvoke r0.<androidx.health.platform.client.impl.ServiceBackedHealthDataClient: androidx.health.platform.client.request.RequestContext getRequestContext()>();

        r9 = r2;

        $r11 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r4, 10);

        specialinvoke $r11.<java.util.ArrayList: void <init>(int)>($i0);

        r5 = (java.util.Collection) $r11;

        r6 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (androidx.health.platform.client.proto.PermissionProto$Permission) r7;

        r17 = r5;

        $r16 = new androidx.health.platform.client.permission.Permission;

        specialinvoke $r16.<androidx.health.platform.client.permission.Permission: void <init>(androidx.health.platform.client.proto.PermissionProto$Permission)>(r8);

        interfaceinvoke r17.<java.util.Collection: boolean add(java.lang.Object)>($r16);

        goto label1;

     label2:
        r18 = (java.util.List) r5;

        $r12 = (java.lang.Iterable) r18;

        $r13 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>($r12);

        $r14 = new androidx.health.platform.client.impl.GetGrantedPermissionsCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "resultFuture");

        specialinvoke $r14.<androidx.health.platform.client.impl.GetGrantedPermissionsCallback: void <init>(com.google.common.util.concurrent.SettableFuture)>(r3);

        $r15 = (androidx.health.platform.client.service.IGetGrantedPermissionsCallback) $r14;

        interfaceinvoke r9.<androidx.health.platform.client.service.IHealthDataService: void getGrantedPermissions(androidx.health.platform.client.request.RequestContext,java.util.List,androidx.health.platform.client.service.IGetGrantedPermissionsCallback)>(r10, $r13, $r15);

        return;
    }

    private static final void revokeAllPermissions$lambda-2(androidx.health.platform.client.impl.ServiceBackedHealthDataClient, androidx.health.platform.client.service.IHealthDataService, com.google.common.util.concurrent.SettableFuture)
    {
        androidx.health.platform.client.impl.ServiceBackedHealthDataClient r0;
        androidx.health.platform.client.service.IHealthDataService r1;
        com.google.common.util.concurrent.SettableFuture r2;
        androidx.health.platform.client.request.RequestContext $r3;
        androidx.health.platform.client.impl.RevokeAllPermissionsCallback $r4;
        androidx.health.platform.client.service.IRevokeAllPermissionsCallback $r5;

        r0 := @parameter0: androidx.health.platform.client.impl.ServiceBackedHealthDataClient;

        r1 := @parameter1: androidx.health.platform.client.service.IHealthDataService;

        r2 := @parameter2: com.google.common.util.concurrent.SettableFuture;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        $r3 = virtualinvoke r0.<androidx.health.platform.client.impl.ServiceBackedHealthDataClient: androidx.health.platform.client.request.RequestContext getRequestContext()>();

        $r4 = new androidx.health.platform.client.impl.RevokeAllPermissionsCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "resultFuture");

        specialinvoke $r4.<androidx.health.platform.client.impl.RevokeAllPermissionsCallback: void <init>(com.google.common.util.concurrent.SettableFuture)>(r2);

        $r5 = (androidx.health.platform.client.service.IRevokeAllPermissionsCallback) $r4;

        interfaceinvoke r1.<androidx.health.platform.client.service.IHealthDataService: void revokeAllPermissions(androidx.health.platform.client.request.RequestContext,androidx.health.platform.client.service.IRevokeAllPermissionsCallback)>($r3, $r5);

        return;
    }

    private static final void insertData$lambda-3(androidx.health.platform.client.impl.ServiceBackedHealthDataClient, androidx.health.platform.client.request.UpsertDataRequest, androidx.health.platform.client.service.IHealthDataService, com.google.common.util.concurrent.SettableFuture)
    {
        androidx.health.platform.client.impl.ServiceBackedHealthDataClient r0;
        androidx.health.platform.client.request.UpsertDataRequest $r1;
        androidx.health.platform.client.service.IHealthDataService r2;
        com.google.common.util.concurrent.SettableFuture r3;
        androidx.health.platform.client.request.RequestContext $r4;
        androidx.health.platform.client.impl.InsertDataCallback $r5;
        androidx.health.platform.client.service.IInsertDataCallback $r6;

        r0 := @parameter0: androidx.health.platform.client.impl.ServiceBackedHealthDataClient;

        $r1 := @parameter1: androidx.health.platform.client.request.UpsertDataRequest;

        r2 := @parameter2: androidx.health.platform.client.service.IHealthDataService;

        r3 := @parameter3: com.google.common.util.concurrent.SettableFuture;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$request");

        $r4 = virtualinvoke r0.<androidx.health.platform.client.impl.ServiceBackedHealthDataClient: androidx.health.platform.client.request.RequestContext getRequestContext()>();

        $r5 = new androidx.health.platform.client.impl.InsertDataCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "resultFuture");

        specialinvoke $r5.<androidx.health.platform.client.impl.InsertDataCallback: void <init>(com.google.common.util.concurrent.SettableFuture)>(r3);

        $r6 = (androidx.health.platform.client.service.IInsertDataCallback) $r5;

        interfaceinvoke r2.<androidx.health.platform.client.service.IHealthDataService: void insertData(androidx.health.platform.client.request.RequestContext,androidx.health.platform.client.request.UpsertDataRequest,androidx.health.platform.client.service.IInsertDataCallback)>($r4, $r1, $r6);

        return;
    }

    private static final void updateData$lambda-4(androidx.health.platform.client.impl.ServiceBackedHealthDataClient, androidx.health.platform.client.request.UpsertDataRequest, androidx.health.platform.client.service.IHealthDataService, com.google.common.util.concurrent.SettableFuture)
    {
        androidx.health.platform.client.impl.ServiceBackedHealthDataClient r0;
        androidx.health.platform.client.request.UpsertDataRequest $r1;
        androidx.health.platform.client.service.IHealthDataService r2;
        com.google.common.util.concurrent.SettableFuture r3;
        androidx.health.platform.client.request.RequestContext $r4;
        androidx.health.platform.client.impl.UpdateDataCallback $r5;
        androidx.health.platform.client.service.IUpdateDataCallback $r6;

        r0 := @parameter0: androidx.health.platform.client.impl.ServiceBackedHealthDataClient;

        $r1 := @parameter1: androidx.health.platform.client.request.UpsertDataRequest;

        r2 := @parameter2: androidx.health.platform.client.service.IHealthDataService;

        r3 := @parameter3: com.google.common.util.concurrent.SettableFuture;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$request");

        $r4 = virtualinvoke r0.<androidx.health.platform.client.impl.ServiceBackedHealthDataClient: androidx.health.platform.client.request.RequestContext getRequestContext()>();

        $r5 = new androidx.health.platform.client.impl.UpdateDataCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "resultFuture");

        specialinvoke $r5.<androidx.health.platform.client.impl.UpdateDataCallback: void <init>(com.google.common.util.concurrent.SettableFuture)>(r3);

        $r6 = (androidx.health.platform.client.service.IUpdateDataCallback) $r5;

        interfaceinvoke r2.<androidx.health.platform.client.service.IHealthDataService: void updateData(androidx.health.platform.client.request.RequestContext,androidx.health.platform.client.request.UpsertDataRequest,androidx.health.platform.client.service.IUpdateDataCallback)>($r4, $r1, $r6);

        return;
    }

    private static final void deleteData$lambda-5(androidx.health.platform.client.impl.ServiceBackedHealthDataClient, androidx.health.platform.client.request.DeleteDataRequest, androidx.health.platform.client.service.IHealthDataService, com.google.common.util.concurrent.SettableFuture)
    {
        androidx.health.platform.client.impl.ServiceBackedHealthDataClient r0;
        androidx.health.platform.client.request.DeleteDataRequest $r1;
        androidx.health.platform.client.service.IHealthDataService r2;
        com.google.common.util.concurrent.SettableFuture r3;
        androidx.health.platform.client.request.RequestContext $r4;
        androidx.health.platform.client.impl.DeleteDataCallback $r5;
        androidx.health.platform.client.service.IDeleteDataCallback $r6;

        r0 := @parameter0: androidx.health.platform.client.impl.ServiceBackedHealthDataClient;

        $r1 := @parameter1: androidx.health.platform.client.request.DeleteDataRequest;

        r2 := @parameter2: androidx.health.platform.client.service.IHealthDataService;

        r3 := @parameter3: com.google.common.util.concurrent.SettableFuture;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$request");

        $r4 = virtualinvoke r0.<androidx.health.platform.client.impl.ServiceBackedHealthDataClient: androidx.health.platform.client.request.RequestContext getRequestContext()>();

        $r5 = new androidx.health.platform.client.impl.DeleteDataCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "resultFuture");

        specialinvoke $r5.<androidx.health.platform.client.impl.DeleteDataCallback: void <init>(com.google.common.util.concurrent.SettableFuture)>(r3);

        $r6 = (androidx.health.platform.client.service.IDeleteDataCallback) $r5;

        interfaceinvoke r2.<androidx.health.platform.client.service.IHealthDataService: void deleteData(androidx.health.platform.client.request.RequestContext,androidx.health.platform.client.request.DeleteDataRequest,androidx.health.platform.client.service.IDeleteDataCallback)>($r4, $r1, $r6);

        return;
    }

    private static final void deleteDataRange$lambda-6(androidx.health.platform.client.impl.ServiceBackedHealthDataClient, androidx.health.platform.client.request.DeleteDataRangeRequest, androidx.health.platform.client.service.IHealthDataService, com.google.common.util.concurrent.SettableFuture)
    {
        androidx.health.platform.client.impl.ServiceBackedHealthDataClient r0;
        androidx.health.platform.client.request.DeleteDataRangeRequest $r1;
        androidx.health.platform.client.service.IHealthDataService r2;
        com.google.common.util.concurrent.SettableFuture r3;
        androidx.health.platform.client.request.RequestContext $r4;
        androidx.health.platform.client.impl.DeleteDataRangeCallback $r5;
        androidx.health.platform.client.service.IDeleteDataRangeCallback $r6;

        r0 := @parameter0: androidx.health.platform.client.impl.ServiceBackedHealthDataClient;

        $r1 := @parameter1: androidx.health.platform.client.request.DeleteDataRangeRequest;

        r2 := @parameter2: androidx.health.platform.client.service.IHealthDataService;

        r3 := @parameter3: com.google.common.util.concurrent.SettableFuture;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$request");

        $r4 = virtualinvoke r0.<androidx.health.platform.client.impl.ServiceBackedHealthDataClient: androidx.health.platform.client.request.RequestContext getRequestContext()>();

        $r5 = new androidx.health.platform.client.impl.DeleteDataRangeCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "resultFuture");

        specialinvoke $r5.<androidx.health.platform.client.impl.DeleteDataRangeCallback: void <init>(com.google.common.util.concurrent.SettableFuture)>(r3);

        $r6 = (androidx.health.platform.client.service.IDeleteDataRangeCallback) $r5;

        interfaceinvoke r2.<androidx.health.platform.client.service.IHealthDataService: void deleteDataRange(androidx.health.platform.client.request.RequestContext,androidx.health.platform.client.request.DeleteDataRangeRequest,androidx.health.platform.client.service.IDeleteDataRangeCallback)>($r4, $r1, $r6);

        return;
    }

    private static final void readData$lambda-7(androidx.health.platform.client.impl.ServiceBackedHealthDataClient, androidx.health.platform.client.request.ReadDataRequest, androidx.health.platform.client.service.IHealthDataService, com.google.common.util.concurrent.SettableFuture)
    {
        androidx.health.platform.client.impl.ServiceBackedHealthDataClient r0;
        androidx.health.platform.client.request.ReadDataRequest $r1;
        androidx.health.platform.client.service.IHealthDataService r2;
        com.google.common.util.concurrent.SettableFuture r3;
        androidx.health.platform.client.request.RequestContext $r4;
        androidx.health.platform.client.impl.ReadDataCallback $r5;
        androidx.health.platform.client.service.IReadDataCallback $r6;

        r0 := @parameter0: androidx.health.platform.client.impl.ServiceBackedHealthDataClient;

        $r1 := @parameter1: androidx.health.platform.client.request.ReadDataRequest;

        r2 := @parameter2: androidx.health.platform.client.service.IHealthDataService;

        r3 := @parameter3: com.google.common.util.concurrent.SettableFuture;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$request");

        $r4 = virtualinvoke r0.<androidx.health.platform.client.impl.ServiceBackedHealthDataClient: androidx.health.platform.client.request.RequestContext getRequestContext()>();

        $r5 = new androidx.health.platform.client.impl.ReadDataCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "resultFuture");

        specialinvoke $r5.<androidx.health.platform.client.impl.ReadDataCallback: void <init>(com.google.common.util.concurrent.SettableFuture)>(r3);

        $r6 = (androidx.health.platform.client.service.IReadDataCallback) $r5;

        interfaceinvoke r2.<androidx.health.platform.client.service.IHealthDataService: void readData(androidx.health.platform.client.request.RequestContext,androidx.health.platform.client.request.ReadDataRequest,androidx.health.platform.client.service.IReadDataCallback)>($r4, $r1, $r6);

        return;
    }

    private static final void readDataRange$lambda-8(androidx.health.platform.client.impl.ServiceBackedHealthDataClient, androidx.health.platform.client.request.ReadDataRangeRequest, androidx.health.platform.client.service.IHealthDataService, com.google.common.util.concurrent.SettableFuture)
    {
        androidx.health.platform.client.impl.ServiceBackedHealthDataClient r0;
        androidx.health.platform.client.request.ReadDataRangeRequest $r1;
        androidx.health.platform.client.service.IHealthDataService r2;
        com.google.common.util.concurrent.SettableFuture r3;
        androidx.health.platform.client.request.RequestContext $r4;
        androidx.health.platform.client.impl.ReadDataRangeCallback $r5;
        androidx.health.platform.client.service.IReadDataRangeCallback $r6;

        r0 := @parameter0: androidx.health.platform.client.impl.ServiceBackedHealthDataClient;

        $r1 := @parameter1: androidx.health.platform.client.request.ReadDataRangeRequest;

        r2 := @parameter2: androidx.health.platform.client.service.IHealthDataService;

        r3 := @parameter3: com.google.common.util.concurrent.SettableFuture;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$request");

        $r4 = virtualinvoke r0.<androidx.health.platform.client.impl.ServiceBackedHealthDataClient: androidx.health.platform.client.request.RequestContext getRequestContext()>();

        $r5 = new androidx.health.platform.client.impl.ReadDataRangeCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "resultFuture");

        specialinvoke $r5.<androidx.health.platform.client.impl.ReadDataRangeCallback: void <init>(com.google.common.util.concurrent.SettableFuture)>(r3);

        $r6 = (androidx.health.platform.client.service.IReadDataRangeCallback) $r5;

        interfaceinvoke r2.<androidx.health.platform.client.service.IHealthDataService: void readDataRange(androidx.health.platform.client.request.RequestContext,androidx.health.platform.client.request.ReadDataRangeRequest,androidx.health.platform.client.service.IReadDataRangeCallback)>($r4, $r1, $r6);

        return;
    }

    private static final void aggregate$lambda-9(androidx.health.platform.client.impl.ServiceBackedHealthDataClient, androidx.health.platform.client.proto.RequestProto$AggregateDataRequest, androidx.health.platform.client.service.IHealthDataService, com.google.common.util.concurrent.SettableFuture)
    {
        androidx.health.platform.client.impl.ServiceBackedHealthDataClient r0;
        androidx.health.platform.client.proto.RequestProto$AggregateDataRequest $r1;
        androidx.health.platform.client.service.IHealthDataService r2;
        com.google.common.util.concurrent.SettableFuture r3;
        androidx.health.platform.client.request.RequestContext $r4;
        androidx.health.platform.client.request.AggregateDataRequest $r5;
        androidx.health.platform.client.impl.AggregateDataCallback $r6;
        androidx.health.platform.client.service.IAggregateDataCallback $r7;

        r0 := @parameter0: androidx.health.platform.client.impl.ServiceBackedHealthDataClient;

        $r1 := @parameter1: androidx.health.platform.client.proto.RequestProto$AggregateDataRequest;

        r2 := @parameter2: androidx.health.platform.client.service.IHealthDataService;

        r3 := @parameter3: com.google.common.util.concurrent.SettableFuture;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$request");

        $r4 = virtualinvoke r0.<androidx.health.platform.client.impl.ServiceBackedHealthDataClient: androidx.health.platform.client.request.RequestContext getRequestContext()>();

        $r5 = new androidx.health.platform.client.request.AggregateDataRequest;

        specialinvoke $r5.<androidx.health.platform.client.request.AggregateDataRequest: void <init>(androidx.health.platform.client.proto.RequestProto$AggregateDataRequest)>($r1);

        $r6 = new androidx.health.platform.client.impl.AggregateDataCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "resultFuture");

        specialinvoke $r6.<androidx.health.platform.client.impl.AggregateDataCallback: void <init>(com.google.common.util.concurrent.SettableFuture)>(r3);

        $r7 = (androidx.health.platform.client.service.IAggregateDataCallback) $r6;

        interfaceinvoke r2.<androidx.health.platform.client.service.IHealthDataService: void aggregate(androidx.health.platform.client.request.RequestContext,androidx.health.platform.client.request.AggregateDataRequest,androidx.health.platform.client.service.IAggregateDataCallback)>($r4, $r5, $r7);

        return;
    }

    private static final void getChangesToken$lambda-10(androidx.health.platform.client.impl.ServiceBackedHealthDataClient, androidx.health.platform.client.proto.RequestProto$GetChangesTokenRequest, androidx.health.platform.client.service.IHealthDataService, com.google.common.util.concurrent.SettableFuture)
    {
        androidx.health.platform.client.impl.ServiceBackedHealthDataClient r0;
        androidx.health.platform.client.proto.RequestProto$GetChangesTokenRequest $r1;
        androidx.health.platform.client.service.IHealthDataService r2;
        com.google.common.util.concurrent.SettableFuture r3;
        androidx.health.platform.client.request.RequestContext $r4;
        androidx.health.platform.client.request.GetChangesTokenRequest $r5;
        androidx.health.platform.client.impl.GetChangesTokenCallback $r6;
        androidx.health.platform.client.service.IGetChangesTokenCallback $r7;

        r0 := @parameter0: androidx.health.platform.client.impl.ServiceBackedHealthDataClient;

        $r1 := @parameter1: androidx.health.platform.client.proto.RequestProto$GetChangesTokenRequest;

        r2 := @parameter2: androidx.health.platform.client.service.IHealthDataService;

        r3 := @parameter3: com.google.common.util.concurrent.SettableFuture;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$request");

        $r4 = virtualinvoke r0.<androidx.health.platform.client.impl.ServiceBackedHealthDataClient: androidx.health.platform.client.request.RequestContext getRequestContext()>();

        $r5 = new androidx.health.platform.client.request.GetChangesTokenRequest;

        specialinvoke $r5.<androidx.health.platform.client.request.GetChangesTokenRequest: void <init>(androidx.health.platform.client.proto.RequestProto$GetChangesTokenRequest)>($r1);

        $r6 = new androidx.health.platform.client.impl.GetChangesTokenCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "resultFuture");

        specialinvoke $r6.<androidx.health.platform.client.impl.GetChangesTokenCallback: void <init>(com.google.common.util.concurrent.SettableFuture)>(r3);

        $r7 = (androidx.health.platform.client.service.IGetChangesTokenCallback) $r6;

        interfaceinvoke r2.<androidx.health.platform.client.service.IHealthDataService: void getChangesToken(androidx.health.platform.client.request.RequestContext,androidx.health.platform.client.request.GetChangesTokenRequest,androidx.health.platform.client.service.IGetChangesTokenCallback)>($r4, $r5, $r7);

        return;
    }

    private static final void getChanges$lambda-11(androidx.health.platform.client.impl.ServiceBackedHealthDataClient, androidx.health.platform.client.proto.RequestProto$GetChangesRequest, androidx.health.platform.client.service.IHealthDataService, com.google.common.util.concurrent.SettableFuture)
    {
        androidx.health.platform.client.impl.ServiceBackedHealthDataClient r0;
        androidx.health.platform.client.proto.RequestProto$GetChangesRequest $r1;
        androidx.health.platform.client.service.IHealthDataService r2;
        com.google.common.util.concurrent.SettableFuture r3;
        androidx.health.platform.client.request.RequestContext $r4;
        androidx.health.platform.client.request.GetChangesRequest $r5;
        androidx.health.platform.client.impl.GetChangesCallback $r6;
        androidx.health.platform.client.service.IGetChangesCallback $r7;

        r0 := @parameter0: androidx.health.platform.client.impl.ServiceBackedHealthDataClient;

        $r1 := @parameter1: androidx.health.platform.client.proto.RequestProto$GetChangesRequest;

        r2 := @parameter2: androidx.health.platform.client.service.IHealthDataService;

        r3 := @parameter3: com.google.common.util.concurrent.SettableFuture;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$request");

        $r4 = virtualinvoke r0.<androidx.health.platform.client.impl.ServiceBackedHealthDataClient: androidx.health.platform.client.request.RequestContext getRequestContext()>();

        $r5 = new androidx.health.platform.client.request.GetChangesRequest;

        specialinvoke $r5.<androidx.health.platform.client.request.GetChangesRequest: void <init>(androidx.health.platform.client.proto.RequestProto$GetChangesRequest)>($r1);

        $r6 = new androidx.health.platform.client.impl.GetChangesCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "resultFuture");

        specialinvoke $r6.<androidx.health.platform.client.impl.GetChangesCallback: void <init>(com.google.common.util.concurrent.SettableFuture)>(r3);

        $r7 = (androidx.health.platform.client.service.IGetChangesCallback) $r6;

        interfaceinvoke r2.<androidx.health.platform.client.service.IHealthDataService: void getChanges(androidx.health.platform.client.request.RequestContext,androidx.health.platform.client.request.GetChangesRequest,androidx.health.platform.client.service.IGetChangesCallback)>($r4, $r5, $r7);

        return;
    }

