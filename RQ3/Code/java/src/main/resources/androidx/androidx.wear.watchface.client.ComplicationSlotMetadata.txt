androidx.wear.watchface.client.ComplicationSlotMetadata
<androidx.wear.watchface.client.ComplicationSlotMetadata: androidx.wear.complications.ComplicationSlotBounds bounds>
<androidx.wear.watchface.client.ComplicationSlotMetadata: int boundsType>
<androidx.wear.watchface.client.ComplicationSlotMetadata: java.util.List supportedTypes>
<androidx.wear.watchface.client.ComplicationSlotMetadata: androidx.wear.complications.DefaultComplicationDataSourcePolicy defaultDataSourcePolicy>
<androidx.wear.watchface.client.ComplicationSlotMetadata: androidx.wear.complications.data.ComplicationType defaultDataSourceType>
<androidx.wear.watchface.client.ComplicationSlotMetadata: boolean isInitiallyEnabled>
<androidx.wear.watchface.client.ComplicationSlotMetadata: boolean fixedComplicationDataSource>
<androidx.wear.watchface.client.ComplicationSlotMetadata: android.os.Bundle complicationConfigExtras>
    public void <init>(androidx.wear.complications.ComplicationSlotBounds, int, java.util.List, androidx.wear.complications.DefaultComplicationDataSourcePolicy, androidx.wear.complications.data.ComplicationType, boolean, boolean, android.os.Bundle)
    {
        androidx.wear.watchface.client.ComplicationSlotMetadata r0;
        androidx.wear.complications.ComplicationSlotBounds r1;
        int i0;
        java.util.List r2;
        androidx.wear.complications.DefaultComplicationDataSourcePolicy r3;
        androidx.wear.complications.data.ComplicationType r4;
        boolean z0, z1;
        android.os.Bundle r5;

        r0 := @this: androidx.wear.watchface.client.ComplicationSlotMetadata;

        r1 := @parameter0: androidx.wear.complications.ComplicationSlotBounds;

        i0 := @parameter1: int;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: androidx.wear.complications.DefaultComplicationDataSourcePolicy;

        r4 := @parameter4: androidx.wear.complications.data.ComplicationType;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        r5 := @parameter7: android.os.Bundle;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "supportedTypes");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "defaultDataSourcePolicy");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "defaultDataSourceType");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "complicationConfigExtras");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.wear.watchface.client.ComplicationSlotMetadata: androidx.wear.complications.ComplicationSlotBounds bounds> = r1;

        r0.<androidx.wear.watchface.client.ComplicationSlotMetadata: int boundsType> = i0;

        r0.<androidx.wear.watchface.client.ComplicationSlotMetadata: java.util.List supportedTypes> = r2;

        r0.<androidx.wear.watchface.client.ComplicationSlotMetadata: androidx.wear.complications.DefaultComplicationDataSourcePolicy defaultDataSourcePolicy> = r3;

        r0.<androidx.wear.watchface.client.ComplicationSlotMetadata: androidx.wear.complications.data.ComplicationType defaultDataSourceType> = r4;

        r0.<androidx.wear.watchface.client.ComplicationSlotMetadata: boolean isInitiallyEnabled> = z0;

        r0.<androidx.wear.watchface.client.ComplicationSlotMetadata: boolean fixedComplicationDataSource> = z1;

        r0.<androidx.wear.watchface.client.ComplicationSlotMetadata: android.os.Bundle complicationConfigExtras> = r5;

        return;
    }

    public final androidx.wear.complications.ComplicationSlotBounds getBounds()
    {
        androidx.wear.watchface.client.ComplicationSlotMetadata r0;
        androidx.wear.complications.ComplicationSlotBounds $r1;

        r0 := @this: androidx.wear.watchface.client.ComplicationSlotMetadata;

        $r1 = r0.<androidx.wear.watchface.client.ComplicationSlotMetadata: androidx.wear.complications.ComplicationSlotBounds bounds>;

        return $r1;
    }

    public final int getBoundsType()
    {
        androidx.wear.watchface.client.ComplicationSlotMetadata r0;
        int $i0;

        r0 := @this: androidx.wear.watchface.client.ComplicationSlotMetadata;

        $i0 = r0.<androidx.wear.watchface.client.ComplicationSlotMetadata: int boundsType>;

        return $i0;
    }

    public final java.util.List getSupportedTypes()
    {
        androidx.wear.watchface.client.ComplicationSlotMetadata r0;
        java.util.List $r1;

        r0 := @this: androidx.wear.watchface.client.ComplicationSlotMetadata;

        $r1 = r0.<androidx.wear.watchface.client.ComplicationSlotMetadata: java.util.List supportedTypes>;

        return $r1;
    }

    public final androidx.wear.complications.DefaultComplicationDataSourcePolicy getDefaultDataSourcePolicy()
    {
        androidx.wear.watchface.client.ComplicationSlotMetadata r0;
        androidx.wear.complications.DefaultComplicationDataSourcePolicy $r1;

        r0 := @this: androidx.wear.watchface.client.ComplicationSlotMetadata;

        $r1 = r0.<androidx.wear.watchface.client.ComplicationSlotMetadata: androidx.wear.complications.DefaultComplicationDataSourcePolicy defaultDataSourcePolicy>;

        return $r1;
    }

    public final androidx.wear.complications.data.ComplicationType getDefaultDataSourceType()
    {
        androidx.wear.watchface.client.ComplicationSlotMetadata r0;
        androidx.wear.complications.data.ComplicationType $r1;

        r0 := @this: androidx.wear.watchface.client.ComplicationSlotMetadata;

        $r1 = r0.<androidx.wear.watchface.client.ComplicationSlotMetadata: androidx.wear.complications.data.ComplicationType defaultDataSourceType>;

        return $r1;
    }

    public final boolean isInitiallyEnabled()
    {
        androidx.wear.watchface.client.ComplicationSlotMetadata r0;
        boolean $z0;

        r0 := @this: androidx.wear.watchface.client.ComplicationSlotMetadata;

        $z0 = r0.<androidx.wear.watchface.client.ComplicationSlotMetadata: boolean isInitiallyEnabled>;

        return $z0;
    }

    public final boolean getFixedComplicationDataSource()
    {
        androidx.wear.watchface.client.ComplicationSlotMetadata r0;
        boolean $z0;

        r0 := @this: androidx.wear.watchface.client.ComplicationSlotMetadata;

        $z0 = r0.<androidx.wear.watchface.client.ComplicationSlotMetadata: boolean fixedComplicationDataSource>;

        return $z0;
    }

    public final android.os.Bundle getComplicationConfigExtras()
    {
        androidx.wear.watchface.client.ComplicationSlotMetadata r0;
        android.os.Bundle $r1;

        r0 := @this: androidx.wear.watchface.client.ComplicationSlotMetadata;

        $r1 = r0.<androidx.wear.watchface.client.ComplicationSlotMetadata: android.os.Bundle complicationConfigExtras>;

        return $r1;
    }

