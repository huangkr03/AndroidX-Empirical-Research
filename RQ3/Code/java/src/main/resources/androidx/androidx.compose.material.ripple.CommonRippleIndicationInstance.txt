androidx.compose.material.ripple.CommonRippleIndicationInstance
<androidx.compose.material.ripple.CommonRippleIndicationInstance: boolean bounded>
<androidx.compose.material.ripple.CommonRippleIndicationInstance: float radius>
<androidx.compose.material.ripple.CommonRippleIndicationInstance: androidx.compose.runtime.State color>
<androidx.compose.material.ripple.CommonRippleIndicationInstance: androidx.compose.runtime.State rippleAlpha>
<androidx.compose.material.ripple.CommonRippleIndicationInstance: androidx.compose.runtime.snapshots.SnapshotStateMap ripples>
    private void <init>(boolean, float, androidx.compose.runtime.State, androidx.compose.runtime.State)
    {
        androidx.compose.material.ripple.CommonRippleIndicationInstance r0;
        boolean z0;
        float f0;
        androidx.compose.runtime.State r1, r2;
        androidx.compose.runtime.snapshots.SnapshotStateMap $r3;

        r0 := @this: androidx.compose.material.ripple.CommonRippleIndicationInstance;

        z0 := @parameter0: boolean;

        f0 := @parameter1: float;

        r1 := @parameter2: androidx.compose.runtime.State;

        r2 := @parameter3: androidx.compose.runtime.State;

        specialinvoke r0.<androidx.compose.material.ripple.RippleIndicationInstance: void <init>(boolean,androidx.compose.runtime.State)>(z0, r2);

        r0.<androidx.compose.material.ripple.CommonRippleIndicationInstance: boolean bounded> = z0;

        r0.<androidx.compose.material.ripple.CommonRippleIndicationInstance: float radius> = f0;

        r0.<androidx.compose.material.ripple.CommonRippleIndicationInstance: androidx.compose.runtime.State color> = r1;

        r0.<androidx.compose.material.ripple.CommonRippleIndicationInstance: androidx.compose.runtime.State rippleAlpha> = r2;

        $r3 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.snapshots.SnapshotStateMap mutableStateMapOf()>();

        r0.<androidx.compose.material.ripple.CommonRippleIndicationInstance: androidx.compose.runtime.snapshots.SnapshotStateMap ripples> = $r3;

        return;
    }

    public void drawIndication(androidx.compose.ui.graphics.drawscope.ContentDrawScope)
    {
        androidx.compose.material.ripple.CommonRippleIndicationInstance r0;
        androidx.compose.ui.graphics.drawscope.ContentDrawScope $r1;
        long l0;
        androidx.compose.runtime.State $r2;
        java.lang.Object $r3;
        androidx.compose.ui.graphics.Color $r4;
        float $f0;
        androidx.compose.ui.graphics.drawscope.DrawScope $r5, $r6;

        r0 := @this: androidx.compose.material.ripple.CommonRippleIndicationInstance;

        $r1 := @parameter0: androidx.compose.ui.graphics.drawscope.ContentDrawScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r2 = r0.<androidx.compose.material.ripple.CommonRippleIndicationInstance: androidx.compose.runtime.State color>;

        $r3 = interfaceinvoke $r2.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (androidx.compose.ui.graphics.Color) $r3;

        l0 = virtualinvoke $r4.<androidx.compose.ui.graphics.Color: long unbox-impl()>();

        interfaceinvoke $r1.<androidx.compose.ui.graphics.drawscope.ContentDrawScope: void drawContent()>();

        $r5 = (androidx.compose.ui.graphics.drawscope.DrawScope) $r1;

        $f0 = r0.<androidx.compose.material.ripple.CommonRippleIndicationInstance: float radius>;

        virtualinvoke r0.<androidx.compose.material.ripple.CommonRippleIndicationInstance: void drawStateLayer-H2RKhps(androidx.compose.ui.graphics.drawscope.DrawScope,float,long)>($r5, $f0, l0);

        $r6 = (androidx.compose.ui.graphics.drawscope.DrawScope) $r1;

        specialinvoke r0.<androidx.compose.material.ripple.CommonRippleIndicationInstance: void drawRipples-4WTKRHQ(androidx.compose.ui.graphics.drawscope.DrawScope,long)>($r6, l0);

        return;
    }

    public void addRipple(androidx.compose.foundation.interaction.PressInteraction$Press, kotlinx.coroutines.CoroutineScope)
    {
        androidx.compose.material.ripple.CommonRippleIndicationInstance r0;
        androidx.compose.foundation.interaction.PressInteraction$Press r1;
        kotlinx.coroutines.CoroutineScope r2;
        java.util.Iterator r3;
        java.util.Map$Entry r4, r5;
        androidx.compose.material.ripple.RippleAnimation r6, $r9;
        androidx.compose.runtime.snapshots.SnapshotStateMap $r7, $r10;
        java.util.Set $r8;
        boolean $z1, $z2, $z3;
        float $f0;
        java.util.Map $r11, $r18;
        androidx.compose.material.ripple.CommonRippleIndicationInstance$addRipple$2 $r13;
        kotlin.jvm.functions.Function2 $r14;
        long $l0;
        java.lang.Object $r16, $r17;
        androidx.compose.ui.geometry.Offset $r19;

        r0 := @this: androidx.compose.material.ripple.CommonRippleIndicationInstance;

        r1 := @parameter0: androidx.compose.foundation.interaction.PressInteraction$Press;

        r2 := @parameter1: kotlinx.coroutines.CoroutineScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "interaction");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "scope");

        $r7 = r0.<androidx.compose.material.ripple.CommonRippleIndicationInstance: androidx.compose.runtime.snapshots.SnapshotStateMap ripples>;

        $r18 = (java.util.Map) $r7;

        $r8 = interfaceinvoke $r18.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r16 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r16;

        r5 = r4;

        $r17 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        r6 = (androidx.compose.material.ripple.RippleAnimation) $r17;

        virtualinvoke r6.<androidx.compose.material.ripple.RippleAnimation: void finish()>();

        goto label1;

     label2:
        $z2 = r0.<androidx.compose.material.ripple.CommonRippleIndicationInstance: boolean bounded>;

        if $z2 == 0 goto label3;

        $l0 = virtualinvoke r1.<androidx.compose.foundation.interaction.PressInteraction$Press: long getPressPosition-F1C5BW0()>();

        $r19 = staticinvoke <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset box-impl(long)>($l0);

        goto label4;

     label3:
        $r19 = null;

     label4:
        $r9 = new androidx.compose.material.ripple.RippleAnimation;

        $f0 = r0.<androidx.compose.material.ripple.CommonRippleIndicationInstance: float radius>;

        $z3 = r0.<androidx.compose.material.ripple.CommonRippleIndicationInstance: boolean bounded>;

        specialinvoke $r9.<androidx.compose.material.ripple.RippleAnimation: void <init>(androidx.compose.ui.geometry.Offset,float,boolean,kotlin.jvm.internal.DefaultConstructorMarker)>($r19, $f0, $z3, null);

        $r10 = r0.<androidx.compose.material.ripple.CommonRippleIndicationInstance: androidx.compose.runtime.snapshots.SnapshotStateMap ripples>;

        $r11 = (java.util.Map) $r10;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r9);

        $r13 = new androidx.compose.material.ripple.CommonRippleIndicationInstance$addRipple$2;

        specialinvoke $r13.<androidx.compose.material.ripple.CommonRippleIndicationInstance$addRipple$2: void <init>(androidx.compose.material.ripple.RippleAnimation,androidx.compose.material.ripple.CommonRippleIndicationInstance,androidx.compose.foundation.interaction.PressInteraction$Press,kotlin.coroutines.Continuation)>($r9, r0, r1, null);

        $r14 = (kotlin.jvm.functions.Function2) $r13;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>(r2, null, null, $r14, 3, null);

        return;
    }

    public void removeRipple(androidx.compose.foundation.interaction.PressInteraction$Press)
    {
        androidx.compose.material.ripple.CommonRippleIndicationInstance r0;
        androidx.compose.foundation.interaction.PressInteraction$Press r1;
        androidx.compose.runtime.snapshots.SnapshotStateMap $r2;
        java.lang.Object $r3;
        androidx.compose.material.ripple.RippleAnimation $r4;

        r0 := @this: androidx.compose.material.ripple.CommonRippleIndicationInstance;

        r1 := @parameter0: androidx.compose.foundation.interaction.PressInteraction$Press;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "interaction");

        $r2 = r0.<androidx.compose.material.ripple.CommonRippleIndicationInstance: androidx.compose.runtime.snapshots.SnapshotStateMap ripples>;

        $r3 = virtualinvoke $r2.<androidx.compose.runtime.snapshots.SnapshotStateMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (androidx.compose.material.ripple.RippleAnimation) $r3;

        if $r4 == null goto label1;

        virtualinvoke $r4.<androidx.compose.material.ripple.RippleAnimation: void finish()>();

        goto label1;

     label1:
        return;
    }

    private final void drawRipples-4WTKRHQ(androidx.compose.ui.graphics.drawscope.DrawScope, long)
    {
        androidx.compose.material.ripple.CommonRippleIndicationInstance r0;
        androidx.compose.ui.graphics.drawscope.DrawScope $r1;
        long l0, $l2;
        java.util.Map $r2;
        java.util.Iterator r3;
        java.util.Map$Entry r4, r5;
        androidx.compose.material.ripple.RippleAnimation r6;
        float f0;
        androidx.compose.runtime.snapshots.SnapshotStateMap $r8;
        java.util.Set $r9;
        boolean $z3, $z4;
        java.lang.Object $r10, $r11, $r13;
        androidx.compose.runtime.State $r12;
        androidx.compose.material.ripple.RippleAlpha $r14;
        byte $b1;

        r0 := @this: androidx.compose.material.ripple.CommonRippleIndicationInstance;

        $r1 := @parameter0: androidx.compose.ui.graphics.drawscope.DrawScope;

        l0 := @parameter1: long;

        $r8 = r0.<androidx.compose.material.ripple.CommonRippleIndicationInstance: androidx.compose.runtime.snapshots.SnapshotStateMap ripples>;

        $r2 = (java.util.Map) $r8;

        $r9 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r10;

        r5 = r4;

        $r11 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        r6 = (androidx.compose.material.ripple.RippleAnimation) $r11;

        $r12 = r0.<androidx.compose.material.ripple.CommonRippleIndicationInstance: androidx.compose.runtime.State rippleAlpha>;

        $r13 = interfaceinvoke $r12.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r14 = (androidx.compose.material.ripple.RippleAlpha) $r13;

        f0 = virtualinvoke $r14.<androidx.compose.material.ripple.RippleAlpha: float getPressedAlpha()>();

        $b1 = f0 cmpg 0.0F;

        if $b1 != 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        if $z4 != 0 goto label4;

        $l2 = staticinvoke <androidx.compose.ui.graphics.Color: long copy-wmQWz5c$default(long,float,float,float,float,int,java.lang.Object)>(l0, f0, 0.0F, 0.0F, 0.0F, 14, null);

        virtualinvoke r6.<androidx.compose.material.ripple.RippleAnimation: void draw-4WTKRHQ(androidx.compose.ui.graphics.drawscope.DrawScope,long)>($r1, $l2);

     label4:
        goto label1;

     label5:
        return;
    }

    public void onRemembered()
    {
        androidx.compose.material.ripple.CommonRippleIndicationInstance r0;

        r0 := @this: androidx.compose.material.ripple.CommonRippleIndicationInstance;

        return;
    }

    public void onForgotten()
    {
        androidx.compose.material.ripple.CommonRippleIndicationInstance r0;
        androidx.compose.runtime.snapshots.SnapshotStateMap $r1;

        r0 := @this: androidx.compose.material.ripple.CommonRippleIndicationInstance;

        $r1 = r0.<androidx.compose.material.ripple.CommonRippleIndicationInstance: androidx.compose.runtime.snapshots.SnapshotStateMap ripples>;

        virtualinvoke $r1.<androidx.compose.runtime.snapshots.SnapshotStateMap: void clear()>();

        return;
    }

    public void onAbandoned()
    {
        androidx.compose.material.ripple.CommonRippleIndicationInstance r0;
        androidx.compose.runtime.snapshots.SnapshotStateMap $r1;

        r0 := @this: androidx.compose.material.ripple.CommonRippleIndicationInstance;

        $r1 = r0.<androidx.compose.material.ripple.CommonRippleIndicationInstance: androidx.compose.runtime.snapshots.SnapshotStateMap ripples>;

        virtualinvoke $r1.<androidx.compose.runtime.snapshots.SnapshotStateMap: void clear()>();

        return;
    }

    public void <init>(boolean, float, androidx.compose.runtime.State, androidx.compose.runtime.State, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.material.ripple.CommonRippleIndicationInstance r0;
        boolean z0;
        float f0;
        androidx.compose.runtime.State r1, r2;
        kotlin.jvm.internal.DefaultConstructorMarker $r3;

        r0 := @this: androidx.compose.material.ripple.CommonRippleIndicationInstance;

        z0 := @parameter0: boolean;

        f0 := @parameter1: float;

        r1 := @parameter2: androidx.compose.runtime.State;

        r2 := @parameter3: androidx.compose.runtime.State;

        $r3 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.material.ripple.CommonRippleIndicationInstance: void <init>(boolean,float,androidx.compose.runtime.State,androidx.compose.runtime.State)>(z0, f0, r1, r2);

        return;
    }

    public static final androidx.compose.runtime.snapshots.SnapshotStateMap access$getRipples$p(androidx.compose.material.ripple.CommonRippleIndicationInstance)
    {
        androidx.compose.material.ripple.CommonRippleIndicationInstance $r0;
        androidx.compose.runtime.snapshots.SnapshotStateMap $r1;

        $r0 := @parameter0: androidx.compose.material.ripple.CommonRippleIndicationInstance;

        $r1 = $r0.<androidx.compose.material.ripple.CommonRippleIndicationInstance: androidx.compose.runtime.snapshots.SnapshotStateMap ripples>;

        return $r1;
    }

androidx.compose.material.ripple.CommonRippleIndicationInstance$addRipple$2
<androidx.compose.material.ripple.CommonRippleIndicationInstance$addRipple$2: int label>
<androidx.compose.material.ripple.CommonRippleIndicationInstance$addRipple$2: androidx.compose.material.ripple.RippleAnimation $rippleAnimation>
<androidx.compose.material.ripple.CommonRippleIndicationInstance$addRipple$2: androidx.compose.material.ripple.CommonRippleIndicationInstance this$0>
<androidx.compose.material.ripple.CommonRippleIndicationInstance$addRipple$2: androidx.compose.foundation.interaction.PressInteraction$Press $interaction>
    void <init>(androidx.compose.material.ripple.RippleAnimation, androidx.compose.material.ripple.CommonRippleIndicationInstance, androidx.compose.foundation.interaction.PressInteraction$Press, kotlin.coroutines.Continuation)
    {
        androidx.compose.material.ripple.CommonRippleIndicationInstance$addRipple$2 r0;
        androidx.compose.material.ripple.RippleAnimation $r1;
        androidx.compose.material.ripple.CommonRippleIndicationInstance $r2;
        androidx.compose.foundation.interaction.PressInteraction$Press $r3;
        kotlin.coroutines.Continuation $r4;

        r0 := @this: androidx.compose.material.ripple.CommonRippleIndicationInstance$addRipple$2;

        $r1 := @parameter0: androidx.compose.material.ripple.RippleAnimation;

        $r2 := @parameter1: androidx.compose.material.ripple.CommonRippleIndicationInstance;

        $r3 := @parameter2: androidx.compose.foundation.interaction.PressInteraction$Press;

        $r4 := @parameter3: kotlin.coroutines.Continuation;

        r0.<androidx.compose.material.ripple.CommonRippleIndicationInstance$addRipple$2: androidx.compose.material.ripple.RippleAnimation $rippleAnimation> = $r1;

        r0.<androidx.compose.material.ripple.CommonRippleIndicationInstance$addRipple$2: androidx.compose.material.ripple.CommonRippleIndicationInstance this$0> = $r2;

        r0.<androidx.compose.material.ripple.CommonRippleIndicationInstance$addRipple$2: androidx.compose.foundation.interaction.PressInteraction$Press $interaction> = $r3;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r4);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.compose.material.ripple.CommonRippleIndicationInstance$addRipple$2 r0;
        java.lang.Object $r1, r3, $r11;
        java.lang.Throwable r2, $r13;
        int $i0;
        androidx.compose.material.ripple.CommonRippleIndicationInstance $r4, $r14;
        androidx.compose.runtime.snapshots.SnapshotStateMap $r5, $r15;
        androidx.compose.foundation.interaction.PressInteraction$Press $r6, $r16;
        kotlin.Unit $r8;
        androidx.compose.material.ripple.RippleAnimation $r9;
        kotlin.coroutines.Continuation $r10;
        java.lang.IllegalStateException $r12;

        r0 := @this: androidx.compose.material.ripple.CommonRippleIndicationInstance$addRipple$2;

        $r1 := @parameter0: java.lang.Object;

        r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.compose.material.ripple.CommonRippleIndicationInstance$addRipple$2: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label4;
            default: goto label9;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label2:
        $r9 = r0.<androidx.compose.material.ripple.CommonRippleIndicationInstance$addRipple$2: androidx.compose.material.ripple.RippleAnimation $rippleAnimation>;

        $r10 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.compose.material.ripple.CommonRippleIndicationInstance$addRipple$2: int label> = 1;

        $r11 = virtualinvoke $r9.<androidx.compose.material.ripple.RippleAnimation: java.lang.Object animate(kotlin.coroutines.Continuation)>($r10);

     label3:
        if $r11 != r3 goto label5;

        return r3;

     label4:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label5:
        $r4 = r0.<androidx.compose.material.ripple.CommonRippleIndicationInstance$addRipple$2: androidx.compose.material.ripple.CommonRippleIndicationInstance this$0>;

        $r5 = staticinvoke <androidx.compose.material.ripple.CommonRippleIndicationInstance: androidx.compose.runtime.snapshots.SnapshotStateMap access$getRipples$p(androidx.compose.material.ripple.CommonRippleIndicationInstance)>($r4);

        $r6 = r0.<androidx.compose.material.ripple.CommonRippleIndicationInstance$addRipple$2: androidx.compose.foundation.interaction.PressInteraction$Press $interaction>;

        virtualinvoke $r5.<androidx.compose.runtime.snapshots.SnapshotStateMap: java.lang.Object remove(java.lang.Object)>($r6);

        goto label8;

     label6:
        $r13 := @caughtexception;

        r2 = $r13;

     label7:
        $r14 = r0.<androidx.compose.material.ripple.CommonRippleIndicationInstance$addRipple$2: androidx.compose.material.ripple.CommonRippleIndicationInstance this$0>;

        $r15 = staticinvoke <androidx.compose.material.ripple.CommonRippleIndicationInstance: androidx.compose.runtime.snapshots.SnapshotStateMap access$getRipples$p(androidx.compose.material.ripple.CommonRippleIndicationInstance)>($r14);

        $r16 = r0.<androidx.compose.material.ripple.CommonRippleIndicationInstance$addRipple$2: androidx.compose.foundation.interaction.PressInteraction$Press $interaction>;

        virtualinvoke $r15.<androidx.compose.runtime.snapshots.SnapshotStateMap: java.lang.Object remove(java.lang.Object)>($r16);

        throw r2;

     label8:
        $r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r8;

     label9:
        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r12;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.compose.material.ripple.CommonRippleIndicationInstance$addRipple$2 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r7;
        androidx.compose.foundation.interaction.PressInteraction$Press $r4;
        androidx.compose.material.ripple.CommonRippleIndicationInstance $r5;
        androidx.compose.material.ripple.RippleAnimation $r6;

        r0 := @this: androidx.compose.material.ripple.CommonRippleIndicationInstance$addRipple$2;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.compose.material.ripple.CommonRippleIndicationInstance$addRipple$2;

        $r6 = r0.<androidx.compose.material.ripple.CommonRippleIndicationInstance$addRipple$2: androidx.compose.material.ripple.RippleAnimation $rippleAnimation>;

        $r5 = r0.<androidx.compose.material.ripple.CommonRippleIndicationInstance$addRipple$2: androidx.compose.material.ripple.CommonRippleIndicationInstance this$0>;

        $r4 = r0.<androidx.compose.material.ripple.CommonRippleIndicationInstance$addRipple$2: androidx.compose.foundation.interaction.PressInteraction$Press $interaction>;

        specialinvoke $r3.<androidx.compose.material.ripple.CommonRippleIndicationInstance$addRipple$2: void <init>(androidx.compose.material.ripple.RippleAnimation,androidx.compose.material.ripple.CommonRippleIndicationInstance,androidx.compose.foundation.interaction.PressInteraction$Press,kotlin.coroutines.Continuation)>($r6, $r5, $r4, $r2);

        $r7 = (kotlin.coroutines.Continuation) $r3;

        return $r7;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.compose.material.ripple.CommonRippleIndicationInstance$addRipple$2 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.compose.material.ripple.CommonRippleIndicationInstance$addRipple$2;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.compose.material.ripple.CommonRippleIndicationInstance$addRipple$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.compose.material.ripple.CommonRippleIndicationInstance$addRipple$2) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.compose.material.ripple.CommonRippleIndicationInstance$addRipple$2: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.material.ripple.CommonRippleIndicationInstance$addRipple$2 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.compose.material.ripple.CommonRippleIndicationInstance$addRipple$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.compose.material.ripple.CommonRippleIndicationInstance$addRipple$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

