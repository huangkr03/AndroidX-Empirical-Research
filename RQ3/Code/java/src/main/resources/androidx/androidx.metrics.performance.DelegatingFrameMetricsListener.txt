androidx.metrics.performance.DelegatingFrameMetricsListener
<androidx.metrics.performance.DelegatingFrameMetricsListener: java.util.List delegates>
<androidx.metrics.performance.DelegatingFrameMetricsListener: boolean iterating>
<androidx.metrics.performance.DelegatingFrameMetricsListener: java.util.List toBeAdded>
<androidx.metrics.performance.DelegatingFrameMetricsListener: java.util.List toBeRemoved>
    public void <init>(java.util.List)
    {
        androidx.metrics.performance.DelegatingFrameMetricsListener r0;
        java.util.List r1, $r3, $r5;
        java.util.ArrayList $r2, $r4;

        r0 := @this: androidx.metrics.performance.DelegatingFrameMetricsListener;

        r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "delegates");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.metrics.performance.DelegatingFrameMetricsListener: java.util.List delegates> = r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = (java.util.List) $r2;

        r0.<androidx.metrics.performance.DelegatingFrameMetricsListener: java.util.List toBeAdded> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = (java.util.List) $r4;

        r0.<androidx.metrics.performance.DelegatingFrameMetricsListener: java.util.List toBeRemoved> = $r5;

        return;
    }

    public final java.util.List getDelegates()
    {
        androidx.metrics.performance.DelegatingFrameMetricsListener r0;
        java.util.List $r1;

        r0 := @this: androidx.metrics.performance.DelegatingFrameMetricsListener;

        $r1 = r0.<androidx.metrics.performance.DelegatingFrameMetricsListener: java.util.List delegates>;

        return $r1;
    }

    public final boolean getIterating()
    {
        androidx.metrics.performance.DelegatingFrameMetricsListener r0;
        boolean $z0;

        r0 := @this: androidx.metrics.performance.DelegatingFrameMetricsListener;

        $z0 = r0.<androidx.metrics.performance.DelegatingFrameMetricsListener: boolean iterating>;

        return $z0;
    }

    public final void setIterating(boolean)
    {
        androidx.metrics.performance.DelegatingFrameMetricsListener r0;
        boolean z0;

        r0 := @this: androidx.metrics.performance.DelegatingFrameMetricsListener;

        z0 := @parameter0: boolean;

        r0.<androidx.metrics.performance.DelegatingFrameMetricsListener: boolean iterating> = z0;

        return;
    }

    public final java.util.List getToBeAdded()
    {
        androidx.metrics.performance.DelegatingFrameMetricsListener r0;
        java.util.List $r1;

        r0 := @this: androidx.metrics.performance.DelegatingFrameMetricsListener;

        $r1 = r0.<androidx.metrics.performance.DelegatingFrameMetricsListener: java.util.List toBeAdded>;

        return $r1;
    }

    public final java.util.List getToBeRemoved()
    {
        androidx.metrics.performance.DelegatingFrameMetricsListener r0;
        java.util.List $r1;

        r0 := @this: androidx.metrics.performance.DelegatingFrameMetricsListener;

        $r1 = r0.<androidx.metrics.performance.DelegatingFrameMetricsListener: java.util.List toBeRemoved>;

        return $r1;
    }

    public void onFrameMetricsAvailable(android.view.Window, android.view.FrameMetrics, int)
    {
        androidx.metrics.performance.DelegatingFrameMetricsListener r0, r28;
        android.view.Window r1;
        android.view.FrameMetrics r2;
        int i0, $i1;
        android.view.Window$OnFrameMetricsAvailableListener r3, $r18, r30, r32;
        java.util.List $r4, $r5, $r7, $r12, $r14, $r15, $r16, $r21, $r22, $r23, $r25;
        boolean $z0, $z1, $z2, $z3, $z4, $z6, $z9, $z10, $z11, z12, $z13;
        java.util.Collection $r6, $r8, $r13;
        androidx.metrics.performance.PerformanceMetricsState$Companion $r9;
        android.view.View $r10, $r17;
        androidx.metrics.performance.PerformanceMetricsState $r11;
        java.lang.Object $r20, $r24, $r26;
        java.lang.Throwable $r27;
        java.util.Iterator r29, r31, r33;
        kotlin.Unit $r34;
        androidx.metrics.performance.PerformanceMetricsState$Holder r36;

        r0 := @this: androidx.metrics.performance.DelegatingFrameMetricsListener;

        r1 := @parameter0: android.view.Window;

        r2 := @parameter1: android.view.FrameMetrics;

        i0 := @parameter2: int;

        r28 = r0;

        entermonitor r28;

     label01:
        r0.<androidx.metrics.performance.DelegatingFrameMetricsListener: boolean iterating> = 1;

        $r4 = r0.<androidx.metrics.performance.DelegatingFrameMetricsListener: java.util.List delegates>;

        r29 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r26 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>();

        r30 = (android.view.Window$OnFrameMetricsAvailableListener) $r26;

        interfaceinvoke r30.<android.view.Window$OnFrameMetricsAvailableListener: void onFrameMetricsAvailable(android.view.Window,android.view.FrameMetrics,int)>(r1, r2, i0);

        goto label02;

     label03:
        $r5 = r0.<androidx.metrics.performance.DelegatingFrameMetricsListener: java.util.List toBeAdded>;

        $r6 = (java.util.Collection) $r5;

        $z1 = interfaceinvoke $r6.<java.util.Collection: boolean isEmpty()>();

        if $z1 != 0 goto label04;

        $z9 = 1;

        goto label05;

     label04:
        $z9 = 0;

     label05:
        if $z9 == 0 goto label08;

        $r22 = r0.<androidx.metrics.performance.DelegatingFrameMetricsListener: java.util.List toBeAdded>;

        r31 = interfaceinvoke $r22.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z6 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label07;

        $r24 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>();

        r32 = (android.view.Window$OnFrameMetricsAvailableListener) $r24;

        $r25 = r0.<androidx.metrics.performance.DelegatingFrameMetricsListener: java.util.List delegates>;

        interfaceinvoke $r25.<java.util.List: boolean add(java.lang.Object)>(r32);

        goto label06;

     label07:
        $r23 = r0.<androidx.metrics.performance.DelegatingFrameMetricsListener: java.util.List toBeAdded>;

        interfaceinvoke $r23.<java.util.List: void clear()>();

     label08:
        $r7 = r0.<androidx.metrics.performance.DelegatingFrameMetricsListener: java.util.List toBeRemoved>;

        $r8 = (java.util.Collection) $r7;

        $z2 = interfaceinvoke $r8.<java.util.Collection: boolean isEmpty()>();

        if $z2 != 0 goto label09;

        $z10 = 1;

        goto label10;

     label09:
        $z10 = 0;

     label10:
        if $z10 == 0 goto label16;

        $r12 = r0.<androidx.metrics.performance.DelegatingFrameMetricsListener: java.util.List delegates>;

        $r13 = (java.util.Collection) $r12;

        $z3 = interfaceinvoke $r13.<java.util.Collection: boolean isEmpty()>();

        if $z3 != 0 goto label11;

        $z11 = 1;

        goto label12;

     label11:
        $z11 = 0;

     label12:
        z12 = $z11;

        $r14 = r0.<androidx.metrics.performance.DelegatingFrameMetricsListener: java.util.List toBeRemoved>;

        r33 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>();

     label13:
        $z13 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label14;

        $r20 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.view.Window$OnFrameMetricsAvailableListener) $r20;

        $r21 = r0.<androidx.metrics.performance.DelegatingFrameMetricsListener: java.util.List delegates>;

        interfaceinvoke $r21.<java.util.List: boolean remove(java.lang.Object)>(r3);

        goto label13;

     label14:
        $r15 = r0.<androidx.metrics.performance.DelegatingFrameMetricsListener: java.util.List toBeRemoved>;

        interfaceinvoke $r15.<java.util.List: void clear()>();

        if z12 == 0 goto label16;

        $r16 = r0.<androidx.metrics.performance.DelegatingFrameMetricsListener: java.util.List delegates>;

        $z4 = interfaceinvoke $r16.<java.util.List: boolean isEmpty()>();

        if $z4 == 0 goto label16;

        if r1 == null goto label15;

        $r18 = (android.view.Window$OnFrameMetricsAvailableListener) r0;

        virtualinvoke r1.<android.view.Window: void removeOnFrameMetricsAvailableListener(android.view.Window$OnFrameMetricsAvailableListener)>($r18);

        goto label15;

     label15:
        if r1 == null goto label16;

        $r17 = virtualinvoke r1.<android.view.Window: android.view.View getDecorView()>();

        if $r17 == null goto label16;

        $i1 = <androidx.metrics.performance.R$id: int metricsDelegator>;

        virtualinvoke $r17.<android.view.View: void setTag(int,java.lang.Object)>($i1, null);

        goto label16;

     label16:
        r0.<androidx.metrics.performance.DelegatingFrameMetricsListener: boolean iterating> = 0;

        $r34 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label17:
        exitmonitor r28;

        goto label20;

     label18:
        $r27 := @caughtexception;

     label19:
        exitmonitor r28;

        throw $r27;

     label20:
        if r1 == null goto label21;

        $r9 = <androidx.metrics.performance.PerformanceMetricsState: androidx.metrics.performance.PerformanceMetricsState$Companion Companion>;

        $r10 = virtualinvoke r1.<android.view.Window: android.view.View getDecorView()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r10, "window.decorView");

        r36 = virtualinvoke $r9.<androidx.metrics.performance.PerformanceMetricsState$Companion: androidx.metrics.performance.PerformanceMetricsState$Holder getHolderForHierarchy(android.view.View)>($r10);

        $r11 = virtualinvoke r36.<androidx.metrics.performance.PerformanceMetricsState$Holder: androidx.metrics.performance.PerformanceMetricsState getState()>();

        if $r11 == null goto label21;

        virtualinvoke $r11.<androidx.metrics.performance.PerformanceMetricsState: void cleanupSingleFrameStates$metrics_performance_release()>();

        goto label21;

     label21:
        return;

        catch java.lang.Throwable from label01 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
    }

    public final void add(android.view.Window$OnFrameMetricsAvailableListener)
    {
        androidx.metrics.performance.DelegatingFrameMetricsListener r0, r2;
        android.view.Window$OnFrameMetricsAvailableListener r1;
        boolean $z0;
        java.util.List $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: androidx.metrics.performance.DelegatingFrameMetricsListener;

        r1 := @parameter0: android.view.Window$OnFrameMetricsAvailableListener;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "delegate");

        r2 = r0;

        entermonitor r2;

     label1:
        $z0 = r0.<androidx.metrics.performance.DelegatingFrameMetricsListener: boolean iterating>;

        if $z0 == 0 goto label2;

        $r4 = r0.<androidx.metrics.performance.DelegatingFrameMetricsListener: java.util.List toBeAdded>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r1);

        goto label3;

     label2:
        $r3 = r0.<androidx.metrics.performance.DelegatingFrameMetricsListener: java.util.List delegates>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

     label3:
        exitmonitor r2;

        goto label6;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor r2;

        throw $r5;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public final void remove(android.view.Window$OnFrameMetricsAvailableListener, android.view.Window)
    {
        androidx.metrics.performance.DelegatingFrameMetricsListener r0, r3;
        android.view.Window$OnFrameMetricsAvailableListener r1, $r8;
        android.view.Window r2;
        boolean z0, $z1, $z2, $z4, $z5, $z7;
        java.util.List $r4, $r6, $r7, $r10;
        java.util.Collection $r5;
        android.view.View $r9;
        int $i0;
        java.lang.Throwable $r11;
        java.lang.Object $r12;

        r0 := @this: androidx.metrics.performance.DelegatingFrameMetricsListener;

        r1 := @parameter0: android.view.Window$OnFrameMetricsAvailableListener;

        r2 := @parameter1: android.view.Window;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "delegate");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "window");

        r3 = r0;

        entermonitor r3;

     label1:
        $z1 = r0.<androidx.metrics.performance.DelegatingFrameMetricsListener: boolean iterating>;

        if $z1 == 0 goto label2;

        $r10 = r0.<androidx.metrics.performance.DelegatingFrameMetricsListener: java.util.List toBeRemoved>;

        $z5 = interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r1);

        staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5);

        goto label6;

     label2:
        $r4 = r0.<androidx.metrics.performance.DelegatingFrameMetricsListener: java.util.List delegates>;

        $r5 = (java.util.Collection) $r4;

        $z2 = interfaceinvoke $r5.<java.util.Collection: boolean isEmpty()>();

        if $z2 != 0 goto label3;

        $z7 = 1;

        goto label4;

     label3:
        $z7 = 0;

     label4:
        z0 = $z7;

        $r6 = r0.<androidx.metrics.performance.DelegatingFrameMetricsListener: java.util.List delegates>;

        interfaceinvoke $r6.<java.util.List: boolean remove(java.lang.Object)>(r1);

        if z0 == 0 goto label5;

        $r7 = r0.<androidx.metrics.performance.DelegatingFrameMetricsListener: java.util.List delegates>;

        $z4 = interfaceinvoke $r7.<java.util.List: boolean isEmpty()>();

        if $z4 == 0 goto label5;

        $r8 = (android.view.Window$OnFrameMetricsAvailableListener) r0;

        virtualinvoke r2.<android.view.Window: void removeOnFrameMetricsAvailableListener(android.view.Window$OnFrameMetricsAvailableListener)>($r8);

        $r9 = virtualinvoke r2.<android.view.Window: android.view.View getDecorView()>();

        $i0 = <androidx.metrics.performance.R$id: int metricsDelegator>;

        virtualinvoke $r9.<android.view.View: void setTag(int,java.lang.Object)>($i0, null);

     label5:
        $r12 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label6:
        exitmonitor r3;

        goto label9;

     label7:
        $r11 := @caughtexception;

     label8:
        exitmonitor r3;

        throw $r11;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

