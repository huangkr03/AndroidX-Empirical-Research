androidx.media3.extractor.TrackOutput
<androidx.media3.extractor.TrackOutput: int SAMPLE_DATA_PART_MAIN>
<androidx.media3.extractor.TrackOutput: int SAMPLE_DATA_PART_ENCRYPTION>
<androidx.media3.extractor.TrackOutput: int SAMPLE_DATA_PART_SUPPLEMENTAL>
<androidx.media3.extractor.TrackOutput: void format(androidx.media3.common.Format)>
    public int sampleData(androidx.media3.common.DataReader, int, boolean) throws java.io.IOException
    {
        androidx.media3.extractor.TrackOutput r0;
        androidx.media3.common.DataReader r1;
        int i0, $i1;
        boolean z0;

        r0 := @this: androidx.media3.extractor.TrackOutput;

        r1 := @parameter0: androidx.media3.common.DataReader;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $i1 = interfaceinvoke r0.<androidx.media3.extractor.TrackOutput: int sampleData(androidx.media3.common.DataReader,int,boolean,int)>(r1, i0, z0, 0);

        return $i1;
    }

    public void sampleData(androidx.media3.common.util.ParsableByteArray, int)
    {
        androidx.media3.extractor.TrackOutput r0;
        androidx.media3.common.util.ParsableByteArray r1;
        int i0;

        r0 := @this: androidx.media3.extractor.TrackOutput;

        r1 := @parameter0: androidx.media3.common.util.ParsableByteArray;

        i0 := @parameter1: int;

        interfaceinvoke r0.<androidx.media3.extractor.TrackOutput: void sampleData(androidx.media3.common.util.ParsableByteArray,int,int)>(r1, i0, 0);

        return;
    }

<androidx.media3.extractor.TrackOutput: int sampleData(androidx.media3.common.DataReader,int,boolean,int)>
<androidx.media3.extractor.TrackOutput: void sampleData(androidx.media3.common.util.ParsableByteArray,int,int)>
<androidx.media3.extractor.TrackOutput: void sampleMetadata(long,int,int,int,androidx.media3.extractor.TrackOutput$CryptoData)>
