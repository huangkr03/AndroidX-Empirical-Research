androidx.compose.ui.test.SelectorsKt
    public static final java.util.List getSiblings(androidx.compose.ui.semantics.SemanticsNode)
    {
        androidx.compose.ui.semantics.SemanticsNode $r0, r1, r6, $r7;
        java.lang.Iterable $r2;
        java.util.Collection r3;
        java.util.Iterator r4;
        java.lang.Object r5;
        java.util.List $r8, $r10;
        java.util.ArrayList $r9;
        int $i0, $i1;
        boolean $z5, $z6;

        $r0 := @parameter0: androidx.compose.ui.semantics.SemanticsNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r1 = $r0;

        $r7 = virtualinvoke $r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsNode getParent()>();

        if $r7 == null goto label5;

        $r8 = virtualinvoke $r7.<androidx.compose.ui.semantics.SemanticsNode: java.util.List getChildren()>();

        $r2 = (java.lang.Iterable) $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r3 = (java.util.Collection) $r9;

        r4 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z5 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label4;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (androidx.compose.ui.semantics.SemanticsNode) r5;

        $i0 = virtualinvoke r6.<androidx.compose.ui.semantics.SemanticsNode: int getId()>();

        $i1 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsNode: int getId()>();

        if $i0 == $i1 goto label2;

        $z6 = 1;

        goto label3;

     label2:
        $z6 = 0;

     label3:
        if $z6 == 0 goto label1;

        interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>(r5);

        goto label1;

     label4:
        $r10 = (java.util.List) r3;

        goto label6;

     label5:
        $r10 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label6:
        return $r10;
    }

    public static final androidx.compose.ui.test.SemanticsNodeInteraction onParent(androidx.compose.ui.test.SemanticsNodeInteraction)
    {
        androidx.compose.ui.test.SemanticsNodeInteraction $r0, $r1;
        androidx.compose.ui.test.TestContext $r2;
        boolean $z0;
        androidx.compose.ui.test.SemanticsSelector $r3, $r6;
        androidx.compose.ui.test.SelectorsKt$onParent$1 $r4;
        kotlin.jvm.functions.Function1 $r5;

        $r0 := @parameter0: androidx.compose.ui.test.SemanticsNodeInteraction;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = new androidx.compose.ui.test.SemanticsNodeInteraction;

        $r2 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsNodeInteraction: androidx.compose.ui.test.TestContext getTestContext$ui_test_release()>();

        $z0 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsNodeInteraction: boolean getUseUnmergedTree$ui_test_release()>();

        $r3 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsNodeInteraction: androidx.compose.ui.test.SemanticsSelector getSelector$ui_test_release()>();

        $r4 = <androidx.compose.ui.test.SelectorsKt$onParent$1: androidx.compose.ui.test.SelectorsKt$onParent$1 INSTANCE>;

        $r5 = (kotlin.jvm.functions.Function1) $r4;

        $r6 = staticinvoke <androidx.compose.ui.test.SemanticsSelectorKt: androidx.compose.ui.test.SemanticsSelector addSelectionFromSingleNode(androidx.compose.ui.test.SemanticsSelector,java.lang.String,kotlin.jvm.functions.Function1)>($r3, "parent", $r5);

        specialinvoke $r1.<androidx.compose.ui.test.SemanticsNodeInteraction: void <init>(androidx.compose.ui.test.TestContext,boolean,androidx.compose.ui.test.SemanticsSelector)>($r2, $z0, $r6);

        return $r1;
    }

    public static final androidx.compose.ui.test.SemanticsNodeInteractionCollection onChildren(androidx.compose.ui.test.SemanticsNodeInteraction)
    {
        androidx.compose.ui.test.SemanticsNodeInteraction $r0;
        androidx.compose.ui.test.SemanticsNodeInteractionCollection $r1;
        androidx.compose.ui.test.TestContext $r2;
        boolean $z0;
        androidx.compose.ui.test.SemanticsSelector $r3, $r6;
        androidx.compose.ui.test.SelectorsKt$onChildren$1 $r4;
        kotlin.jvm.functions.Function1 $r5;

        $r0 := @parameter0: androidx.compose.ui.test.SemanticsNodeInteraction;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = new androidx.compose.ui.test.SemanticsNodeInteractionCollection;

        $r2 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsNodeInteraction: androidx.compose.ui.test.TestContext getTestContext$ui_test_release()>();

        $z0 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsNodeInteraction: boolean getUseUnmergedTree$ui_test_release()>();

        $r3 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsNodeInteraction: androidx.compose.ui.test.SemanticsSelector getSelector$ui_test_release()>();

        $r4 = <androidx.compose.ui.test.SelectorsKt$onChildren$1: androidx.compose.ui.test.SelectorsKt$onChildren$1 INSTANCE>;

        $r5 = (kotlin.jvm.functions.Function1) $r4;

        $r6 = staticinvoke <androidx.compose.ui.test.SemanticsSelectorKt: androidx.compose.ui.test.SemanticsSelector addSelectionFromSingleNode(androidx.compose.ui.test.SemanticsSelector,java.lang.String,kotlin.jvm.functions.Function1)>($r3, "children", $r5);

        specialinvoke $r1.<androidx.compose.ui.test.SemanticsNodeInteractionCollection: void <init>(androidx.compose.ui.test.TestContext,boolean,androidx.compose.ui.test.SemanticsSelector)>($r2, $z0, $r6);

        return $r1;
    }

    public static final androidx.compose.ui.test.SemanticsNodeInteraction onChild(androidx.compose.ui.test.SemanticsNodeInteraction)
    {
        androidx.compose.ui.test.SemanticsNodeInteraction $r0, $r1;
        androidx.compose.ui.test.TestContext $r2;
        boolean $z0;
        androidx.compose.ui.test.SemanticsSelector $r3, $r6;
        androidx.compose.ui.test.SelectorsKt$onChild$1 $r4;
        kotlin.jvm.functions.Function1 $r5;

        $r0 := @parameter0: androidx.compose.ui.test.SemanticsNodeInteraction;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = new androidx.compose.ui.test.SemanticsNodeInteraction;

        $r2 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsNodeInteraction: androidx.compose.ui.test.TestContext getTestContext$ui_test_release()>();

        $z0 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsNodeInteraction: boolean getUseUnmergedTree$ui_test_release()>();

        $r3 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsNodeInteraction: androidx.compose.ui.test.SemanticsSelector getSelector$ui_test_release()>();

        $r4 = <androidx.compose.ui.test.SelectorsKt$onChild$1: androidx.compose.ui.test.SelectorsKt$onChild$1 INSTANCE>;

        $r5 = (kotlin.jvm.functions.Function1) $r4;

        $r6 = staticinvoke <androidx.compose.ui.test.SemanticsSelectorKt: androidx.compose.ui.test.SemanticsSelector addSelectionFromSingleNode(androidx.compose.ui.test.SemanticsSelector,java.lang.String,kotlin.jvm.functions.Function1)>($r3, "child", $r5);

        specialinvoke $r1.<androidx.compose.ui.test.SemanticsNodeInteraction: void <init>(androidx.compose.ui.test.TestContext,boolean,androidx.compose.ui.test.SemanticsSelector)>($r2, $z0, $r6);

        return $r1;
    }

    public static final androidx.compose.ui.test.SemanticsNodeInteraction onChildAt(androidx.compose.ui.test.SemanticsNodeInteraction, int)
    {
        androidx.compose.ui.test.SemanticsNodeInteraction $r0, $r2;
        int i0;
        androidx.compose.ui.test.SemanticsNodeInteractionCollection $r1;

        $r0 := @parameter0: androidx.compose.ui.test.SemanticsNodeInteraction;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <androidx.compose.ui.test.SelectorsKt: androidx.compose.ui.test.SemanticsNodeInteractionCollection onChildren(androidx.compose.ui.test.SemanticsNodeInteraction)>($r0);

        $r2 = virtualinvoke $r1.<androidx.compose.ui.test.SemanticsNodeInteractionCollection: androidx.compose.ui.test.SemanticsNodeInteraction get(int)>(i0);

        return $r2;
    }

    public static final androidx.compose.ui.test.SemanticsNodeInteractionCollection onSiblings(androidx.compose.ui.test.SemanticsNodeInteraction)
    {
        androidx.compose.ui.test.SemanticsNodeInteraction $r0;
        androidx.compose.ui.test.SemanticsNodeInteractionCollection $r1;
        androidx.compose.ui.test.TestContext $r2;
        boolean $z0;
        androidx.compose.ui.test.SemanticsSelector $r3, $r6;
        androidx.compose.ui.test.SelectorsKt$onSiblings$1 $r4;
        kotlin.jvm.functions.Function1 $r5;

        $r0 := @parameter0: androidx.compose.ui.test.SemanticsNodeInteraction;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = new androidx.compose.ui.test.SemanticsNodeInteractionCollection;

        $r2 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsNodeInteraction: androidx.compose.ui.test.TestContext getTestContext$ui_test_release()>();

        $z0 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsNodeInteraction: boolean getUseUnmergedTree$ui_test_release()>();

        $r3 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsNodeInteraction: androidx.compose.ui.test.SemanticsSelector getSelector$ui_test_release()>();

        $r4 = <androidx.compose.ui.test.SelectorsKt$onSiblings$1: androidx.compose.ui.test.SelectorsKt$onSiblings$1 INSTANCE>;

        $r5 = (kotlin.jvm.functions.Function1) $r4;

        $r6 = staticinvoke <androidx.compose.ui.test.SemanticsSelectorKt: androidx.compose.ui.test.SemanticsSelector addSelectionFromSingleNode(androidx.compose.ui.test.SemanticsSelector,java.lang.String,kotlin.jvm.functions.Function1)>($r3, "siblings", $r5);

        specialinvoke $r1.<androidx.compose.ui.test.SemanticsNodeInteractionCollection: void <init>(androidx.compose.ui.test.TestContext,boolean,androidx.compose.ui.test.SemanticsSelector)>($r2, $z0, $r6);

        return $r1;
    }

    public static final androidx.compose.ui.test.SemanticsNodeInteraction onSibling(androidx.compose.ui.test.SemanticsNodeInteraction)
    {
        androidx.compose.ui.test.SemanticsNodeInteraction $r0, $r1;
        androidx.compose.ui.test.TestContext $r2;
        boolean $z0;
        androidx.compose.ui.test.SemanticsSelector $r3, $r6;
        androidx.compose.ui.test.SelectorsKt$onSibling$1 $r4;
        kotlin.jvm.functions.Function1 $r5;

        $r0 := @parameter0: androidx.compose.ui.test.SemanticsNodeInteraction;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = new androidx.compose.ui.test.SemanticsNodeInteraction;

        $r2 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsNodeInteraction: androidx.compose.ui.test.TestContext getTestContext$ui_test_release()>();

        $z0 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsNodeInteraction: boolean getUseUnmergedTree$ui_test_release()>();

        $r3 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsNodeInteraction: androidx.compose.ui.test.SemanticsSelector getSelector$ui_test_release()>();

        $r4 = <androidx.compose.ui.test.SelectorsKt$onSibling$1: androidx.compose.ui.test.SelectorsKt$onSibling$1 INSTANCE>;

        $r5 = (kotlin.jvm.functions.Function1) $r4;

        $r6 = staticinvoke <androidx.compose.ui.test.SemanticsSelectorKt: androidx.compose.ui.test.SemanticsSelector addSelectionFromSingleNode(androidx.compose.ui.test.SemanticsSelector,java.lang.String,kotlin.jvm.functions.Function1)>($r3, "sibling", $r5);

        specialinvoke $r1.<androidx.compose.ui.test.SemanticsNodeInteraction: void <init>(androidx.compose.ui.test.TestContext,boolean,androidx.compose.ui.test.SemanticsSelector)>($r2, $z0, $r6);

        return $r1;
    }

    public static final androidx.compose.ui.test.SemanticsNodeInteractionCollection onAncestors(androidx.compose.ui.test.SemanticsNodeInteraction)
    {
        androidx.compose.ui.test.SemanticsNodeInteraction $r0;
        androidx.compose.ui.test.SemanticsNodeInteractionCollection $r1;
        androidx.compose.ui.test.TestContext $r2;
        boolean $z0;
        androidx.compose.ui.test.SemanticsSelector $r3, $r6;
        androidx.compose.ui.test.SelectorsKt$onAncestors$1 $r4;
        kotlin.jvm.functions.Function1 $r5;

        $r0 := @parameter0: androidx.compose.ui.test.SemanticsNodeInteraction;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = new androidx.compose.ui.test.SemanticsNodeInteractionCollection;

        $r2 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsNodeInteraction: androidx.compose.ui.test.TestContext getTestContext$ui_test_release()>();

        $z0 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsNodeInteraction: boolean getUseUnmergedTree$ui_test_release()>();

        $r3 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsNodeInteraction: androidx.compose.ui.test.SemanticsSelector getSelector$ui_test_release()>();

        $r4 = <androidx.compose.ui.test.SelectorsKt$onAncestors$1: androidx.compose.ui.test.SelectorsKt$onAncestors$1 INSTANCE>;

        $r5 = (kotlin.jvm.functions.Function1) $r4;

        $r6 = staticinvoke <androidx.compose.ui.test.SemanticsSelectorKt: androidx.compose.ui.test.SemanticsSelector addSelectionFromSingleNode(androidx.compose.ui.test.SemanticsSelector,java.lang.String,kotlin.jvm.functions.Function1)>($r3, "ancestors", $r5);

        specialinvoke $r1.<androidx.compose.ui.test.SemanticsNodeInteractionCollection: void <init>(androidx.compose.ui.test.TestContext,boolean,androidx.compose.ui.test.SemanticsSelector)>($r2, $z0, $r6);

        return $r1;
    }

    public static final androidx.compose.ui.test.SemanticsNodeInteraction onFirst(androidx.compose.ui.test.SemanticsNodeInteractionCollection)
    {
        androidx.compose.ui.test.SemanticsNodeInteractionCollection $r0;
        androidx.compose.ui.test.SemanticsNodeInteraction $r1;

        $r0 := @parameter0: androidx.compose.ui.test.SemanticsNodeInteractionCollection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsNodeInteractionCollection: androidx.compose.ui.test.SemanticsNodeInteraction get(int)>(0);

        return $r1;
    }

    public static final androidx.compose.ui.test.SemanticsNodeInteraction onLast(androidx.compose.ui.test.SemanticsNodeInteractionCollection)
    {
        androidx.compose.ui.test.SemanticsNodeInteractionCollection $r0;
        androidx.compose.ui.test.SemanticsNodeInteraction $r1;
        androidx.compose.ui.test.TestContext $r2;
        boolean $z0;
        androidx.compose.ui.test.SemanticsSelector $r3, $r4;

        $r0 := @parameter0: androidx.compose.ui.test.SemanticsNodeInteractionCollection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = new androidx.compose.ui.test.SemanticsNodeInteraction;

        $r2 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsNodeInteractionCollection: androidx.compose.ui.test.TestContext getTestContext$ui_test_release()>();

        $z0 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsNodeInteractionCollection: boolean getUseUnmergedTree$ui_test_release()>();

        $r3 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsNodeInteractionCollection: androidx.compose.ui.test.SemanticsSelector getSelector$ui_test_release()>();

        $r4 = staticinvoke <androidx.compose.ui.test.SemanticsSelectorKt: androidx.compose.ui.test.SemanticsSelector addLastNodeSelector(androidx.compose.ui.test.SemanticsSelector)>($r3);

        specialinvoke $r1.<androidx.compose.ui.test.SemanticsNodeInteraction: void <init>(androidx.compose.ui.test.TestContext,boolean,androidx.compose.ui.test.SemanticsSelector)>($r2, $z0, $r4);

        return $r1;
    }

    public static final androidx.compose.ui.test.SemanticsNodeInteractionCollection filter(androidx.compose.ui.test.SemanticsNodeInteractionCollection, androidx.compose.ui.test.SemanticsMatcher)
    {
        androidx.compose.ui.test.SemanticsNodeInteractionCollection $r0, $r2;
        androidx.compose.ui.test.SemanticsMatcher r1;
        androidx.compose.ui.test.TestContext $r3;
        boolean $z0;
        androidx.compose.ui.test.SemanticsSelector $r4, $r5;

        $r0 := @parameter0: androidx.compose.ui.test.SemanticsNodeInteractionCollection;

        r1 := @parameter1: androidx.compose.ui.test.SemanticsMatcher;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "matcher");

        $r2 = new androidx.compose.ui.test.SemanticsNodeInteractionCollection;

        $r3 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsNodeInteractionCollection: androidx.compose.ui.test.TestContext getTestContext$ui_test_release()>();

        $z0 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsNodeInteractionCollection: boolean getUseUnmergedTree$ui_test_release()>();

        $r4 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsNodeInteractionCollection: androidx.compose.ui.test.SemanticsSelector getSelector$ui_test_release()>();

        $r5 = staticinvoke <androidx.compose.ui.test.SemanticsSelectorKt: androidx.compose.ui.test.SemanticsSelector addSelectorViaMatcher(androidx.compose.ui.test.SemanticsSelector,java.lang.String,androidx.compose.ui.test.SemanticsMatcher)>($r4, "filter", r1);

        specialinvoke $r2.<androidx.compose.ui.test.SemanticsNodeInteractionCollection: void <init>(androidx.compose.ui.test.TestContext,boolean,androidx.compose.ui.test.SemanticsSelector)>($r3, $z0, $r5);

        return $r2;
    }

    public static final androidx.compose.ui.test.SemanticsNodeInteraction filterToOne(androidx.compose.ui.test.SemanticsNodeInteractionCollection, androidx.compose.ui.test.SemanticsMatcher)
    {
        androidx.compose.ui.test.SemanticsNodeInteractionCollection $r0;
        androidx.compose.ui.test.SemanticsMatcher r1;
        androidx.compose.ui.test.SemanticsNodeInteraction $r2;
        androidx.compose.ui.test.TestContext $r3;
        boolean $z0;
        androidx.compose.ui.test.SemanticsSelector $r4, $r5;

        $r0 := @parameter0: androidx.compose.ui.test.SemanticsNodeInteractionCollection;

        r1 := @parameter1: androidx.compose.ui.test.SemanticsMatcher;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "matcher");

        $r2 = new androidx.compose.ui.test.SemanticsNodeInteraction;

        $r3 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsNodeInteractionCollection: androidx.compose.ui.test.TestContext getTestContext$ui_test_release()>();

        $z0 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsNodeInteractionCollection: boolean getUseUnmergedTree$ui_test_release()>();

        $r4 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsNodeInteractionCollection: androidx.compose.ui.test.SemanticsSelector getSelector$ui_test_release()>();

        $r5 = staticinvoke <androidx.compose.ui.test.SemanticsSelectorKt: androidx.compose.ui.test.SemanticsSelector addSelectorViaMatcher(androidx.compose.ui.test.SemanticsSelector,java.lang.String,androidx.compose.ui.test.SemanticsMatcher)>($r4, "filterToOne", r1);

        specialinvoke $r2.<androidx.compose.ui.test.SemanticsNodeInteraction: void <init>(androidx.compose.ui.test.TestContext,boolean,androidx.compose.ui.test.SemanticsSelector)>($r3, $z0, $r5);

        return $r2;
    }

