androidx.test.services.events.run.TestFailureEvent
<androidx.test.services.events.run.TestFailureEvent: androidx.test.services.events.FailureInfo failure>
    androidx.test.services.events.run.TestRunEvent$EventType instanceType()
    {
        androidx.test.services.events.run.TestFailureEvent r0;
        androidx.test.services.events.run.TestRunEvent$EventType $r1;

        r0 := @this: androidx.test.services.events.run.TestFailureEvent;

        $r1 = <androidx.test.services.events.run.TestRunEvent$EventType: androidx.test.services.events.run.TestRunEvent$EventType TEST_FAILURE>;

        return $r1;
    }

    void <init>(android.os.Parcel)
    {
        androidx.test.services.events.run.TestFailureEvent r0;
        android.os.Parcel r1;
        androidx.test.services.events.FailureInfo $r2;

        r0 := @this: androidx.test.services.events.run.TestFailureEvent;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<androidx.test.services.events.run.TestRunEventWithTestCase: void <init>(android.os.Parcel)>(r1);

        $r2 = new androidx.test.services.events.FailureInfo;

        specialinvoke $r2.<androidx.test.services.events.FailureInfo: void <init>(android.os.Parcel)>(r1);

        r0.<androidx.test.services.events.run.TestFailureEvent: androidx.test.services.events.FailureInfo failure> = $r2;

        return;
    }

    public void <init>(androidx.test.services.events.TestCaseInfo, androidx.test.services.events.FailureInfo)
    {
        androidx.test.services.events.run.TestFailureEvent r0;
        androidx.test.services.events.TestCaseInfo r1;
        androidx.test.services.events.FailureInfo r2;

        r0 := @this: androidx.test.services.events.run.TestFailureEvent;

        r1 := @parameter0: androidx.test.services.events.TestCaseInfo;

        r2 := @parameter1: androidx.test.services.events.FailureInfo;

        specialinvoke r0.<androidx.test.services.events.run.TestRunEventWithTestCase: void <init>(androidx.test.services.events.TestCaseInfo)>(r1);

        staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "failure cannot be null");

        r0.<androidx.test.services.events.run.TestFailureEvent: androidx.test.services.events.FailureInfo failure> = r2;

        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        androidx.test.services.events.run.TestFailureEvent r0;
        android.os.Parcel r1;
        int i0;
        androidx.test.services.events.FailureInfo $r2;

        r0 := @this: androidx.test.services.events.run.TestFailureEvent;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        specialinvoke r0.<androidx.test.services.events.run.TestRunEventWithTestCase: void writeToParcel(android.os.Parcel,int)>(r1, 0);

        $r2 = r0.<androidx.test.services.events.run.TestFailureEvent: androidx.test.services.events.FailureInfo failure>;

        virtualinvoke $r2.<androidx.test.services.events.FailureInfo: void writeToParcel(android.os.Parcel,int)>(r1, 0);

        return;
    }

