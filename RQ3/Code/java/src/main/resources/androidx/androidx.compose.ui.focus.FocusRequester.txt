androidx.compose.ui.focus.FocusRequester
<androidx.compose.ui.focus.FocusRequester: androidx.compose.ui.focus.FocusRequester$Companion Companion>
<androidx.compose.ui.focus.FocusRequester: androidx.compose.runtime.collection.MutableVector focusRequesterModifierLocals>
<androidx.compose.ui.focus.FocusRequester: int $stable>
<androidx.compose.ui.focus.FocusRequester: androidx.compose.ui.focus.FocusRequester Default>
<androidx.compose.ui.focus.FocusRequester: androidx.compose.ui.focus.FocusRequester Cancel>
    public void <init>()
    {
        androidx.compose.ui.focus.FocusRequester r0;
        byte b0;
        androidx.compose.runtime.collection.MutableVector $r1;
        androidx.compose.ui.focus.FocusRequesterModifierLocal[] $r2;

        r0 := @this: androidx.compose.ui.focus.FocusRequester;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        b0 = 16;

        $r1 = new androidx.compose.runtime.collection.MutableVector;

        $r2 = newarray (androidx.compose.ui.focus.FocusRequesterModifierLocal)[b0];

        specialinvoke $r1.<androidx.compose.runtime.collection.MutableVector: void <init>(java.lang.Object[],int)>($r2, 0);

        r0.<androidx.compose.ui.focus.FocusRequester: androidx.compose.runtime.collection.MutableVector focusRequesterModifierLocals> = $r1;

        return;
    }

    public final androidx.compose.runtime.collection.MutableVector getFocusRequesterModifierLocals$ui_release()
    {
        androidx.compose.ui.focus.FocusRequester r0;
        androidx.compose.runtime.collection.MutableVector $r1;

        r0 := @this: androidx.compose.ui.focus.FocusRequester;

        $r1 = r0.<androidx.compose.ui.focus.FocusRequester: androidx.compose.runtime.collection.MutableVector focusRequesterModifierLocals>;

        return $r1;
    }

    public final void requestFocus()
    {
        androidx.compose.ui.focus.FocusRequester r0;
        androidx.compose.runtime.collection.MutableVector $r1;
        boolean $z0;
        androidx.compose.ui.focus.FocusRequester$requestFocus$2 $r2;
        kotlin.jvm.functions.Function1 $r3;
        java.lang.IllegalStateException $r5;
        java.lang.String $r6, $r7;

        r0 := @this: androidx.compose.ui.focus.FocusRequester;

        $r1 = r0.<androidx.compose.ui.focus.FocusRequester: androidx.compose.runtime.collection.MutableVector focusRequesterModifierLocals>;

        $z0 = virtualinvoke $r1.<androidx.compose.runtime.collection.MutableVector: boolean isNotEmpty()>();

        if $z0 != 0 goto label1;

        $r7 = "\n   FocusRequester is not initialized. Here are some possible fixes:\n\n   1. Remember the FocusRequester: val focusRequester = remember { FocusRequester() }\n   2. Did you forget to add a Modifier.focusRequester() ?\n   3. Are you attempting to request focus during composition? Focus requests should be made in\n   response to some event. Eg Modifier.clickable { focusRequester.requestFocus() }\n";

        $r5 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label1:
        $r2 = <androidx.compose.ui.focus.FocusRequester$requestFocus$2: androidx.compose.ui.focus.FocusRequester$requestFocus$2 INSTANCE>;

        $r3 = (kotlin.jvm.functions.Function1) $r2;

        virtualinvoke r0.<androidx.compose.ui.focus.FocusRequester: java.lang.Boolean performRequestFocus$ui_release(kotlin.jvm.functions.Function1)>($r3);

        return;
    }

    public final java.lang.Boolean performRequestFocus$ui_release(kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.focus.FocusRequester r0, r2, $r7, $r8;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.runtime.collection.MutableVector r3;
        int i0, i1;
        java.lang.Object[] r4, $r9;
        androidx.compose.ui.focus.FocusRequesterModifierLocal r5;
        androidx.compose.ui.focus.FocusModifier r6, $r11;
        boolean $z3, $z4, $z5, z6, $z7;
        java.lang.Object $r10, $r12;
        java.lang.Boolean $r13, $r14;

        r0 := @this: androidx.compose.ui.focus.FocusRequester;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "onFound");

        r2 = r0;

        $r7 = <androidx.compose.ui.focus.FocusRequester: androidx.compose.ui.focus.FocusRequester Cancel>;

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r7);

        if $z3 == 0 goto label1;

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        goto label9;

     label1:
        $r8 = <androidx.compose.ui.focus.FocusRequester: androidx.compose.ui.focus.FocusRequester Default>;

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r8);

        if $z4 == 0 goto label2;

        $r14 = null;

        goto label9;

     label2:
        z6 = 0;

        r3 = r0.<androidx.compose.ui.focus.FocusRequester: androidx.compose.runtime.collection.MutableVector focusRequesterModifierLocals>;

        i0 = virtualinvoke r3.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if i0 <= 0 goto label8;

        i1 = 0;

        $r9 = virtualinvoke r3.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r9, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r4 = $r9;

     label3:
        $r10 = r4[i1];

        r5 = (androidx.compose.ui.focus.FocusRequesterModifierLocal) $r10;

        $r11 = virtualinvoke r5.<androidx.compose.ui.focus.FocusRequesterModifierLocal: androidx.compose.ui.focus.FocusModifier findFocusNode()>();

        if $r11 == null goto label7;

        r6 = $r11;

        $r12 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r6);

        $r13 = (java.lang.Boolean) $r12;

        $z5 = virtualinvoke $r13.<java.lang.Boolean: boolean booleanValue()>();

        if $z5 != 0 goto label4;

        if z6 == 0 goto label5;

     label4:
        $z7 = 1;

        goto label6;

     label5:
        $z7 = 0;

     label6:
        z6 = $z7;

        goto label7;

     label7:
        i1 = i1 + 1;

        if i1 < i0 goto label3;

     label8:
        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z6);

     label9:
        return $r14;
    }

    public final boolean captureFocus()
    {
        androidx.compose.ui.focus.FocusRequester r0;
        int i0, i1;
        java.lang.Object[] r1, $r5;
        androidx.compose.ui.focus.FocusRequesterModifierLocal r2;
        androidx.compose.ui.focus.FocusModifier r3, $r7;
        androidx.compose.runtime.collection.MutableVector $r4, $r11;
        boolean $z3, $z4, z6;
        java.lang.Object $r6;
        java.lang.IllegalStateException $r8;
        java.lang.String $r9, $r10;

        r0 := @this: androidx.compose.ui.focus.FocusRequester;

        $r4 = r0.<androidx.compose.ui.focus.FocusRequester: androidx.compose.runtime.collection.MutableVector focusRequesterModifierLocals>;

        $z3 = virtualinvoke $r4.<androidx.compose.runtime.collection.MutableVector: boolean isNotEmpty()>();

        if $z3 != 0 goto label1;

        $r10 = "\n   FocusRequester is not initialized. Here are some possible fixes:\n\n   1. Remember the FocusRequester: val focusRequester = remember { FocusRequester() }\n   2. Did you forget to add a Modifier.focusRequester() ?\n   3. Are you attempting to request focus during composition? Focus requests should be made in\n   response to some event. Eg Modifier.clickable { focusRequester.requestFocus() }\n";

        $r8 = new java.lang.IllegalStateException;

        $r9 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label1:
        z6 = 0;

        $r11 = r0.<androidx.compose.ui.focus.FocusRequester: androidx.compose.runtime.collection.MutableVector focusRequesterModifierLocals>;

        i0 = virtualinvoke $r11.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if i0 <= 0 goto label5;

        i1 = 0;

        $r5 = virtualinvoke $r11.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r5, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r1 = $r5;

     label2:
        $r6 = r1[i1];

        r2 = (androidx.compose.ui.focus.FocusRequesterModifierLocal) $r6;

        $r7 = virtualinvoke r2.<androidx.compose.ui.focus.FocusRequesterModifierLocal: androidx.compose.ui.focus.FocusModifier findFocusNode()>();

        if $r7 == null goto label4;

        r3 = $r7;

        $z4 = staticinvoke <androidx.compose.ui.focus.FocusTransactionsKt: boolean captureFocus(androidx.compose.ui.focus.FocusModifier)>(r3);

        if $z4 == 0 goto label3;

        z6 = 1;

     label3:
        goto label4;

     label4:
        i1 = i1 + 1;

        if i1 < i0 goto label2;

     label5:
        return z6;
    }

    public final boolean freeFocus()
    {
        androidx.compose.ui.focus.FocusRequester r0;
        int i0, i1;
        java.lang.Object[] r1, $r5;
        androidx.compose.ui.focus.FocusRequesterModifierLocal r2;
        androidx.compose.ui.focus.FocusModifier r3, $r7;
        androidx.compose.runtime.collection.MutableVector $r4, $r11;
        boolean $z3, $z4, z6;
        java.lang.Object $r6;
        java.lang.IllegalStateException $r8;
        java.lang.String $r9, $r10;

        r0 := @this: androidx.compose.ui.focus.FocusRequester;

        $r4 = r0.<androidx.compose.ui.focus.FocusRequester: androidx.compose.runtime.collection.MutableVector focusRequesterModifierLocals>;

        $z3 = virtualinvoke $r4.<androidx.compose.runtime.collection.MutableVector: boolean isNotEmpty()>();

        if $z3 != 0 goto label1;

        $r10 = "\n   FocusRequester is not initialized. Here are some possible fixes:\n\n   1. Remember the FocusRequester: val focusRequester = remember { FocusRequester() }\n   2. Did you forget to add a Modifier.focusRequester() ?\n   3. Are you attempting to request focus during composition? Focus requests should be made in\n   response to some event. Eg Modifier.clickable { focusRequester.requestFocus() }\n";

        $r8 = new java.lang.IllegalStateException;

        $r9 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label1:
        z6 = 0;

        $r11 = r0.<androidx.compose.ui.focus.FocusRequester: androidx.compose.runtime.collection.MutableVector focusRequesterModifierLocals>;

        i0 = virtualinvoke $r11.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if i0 <= 0 goto label5;

        i1 = 0;

        $r5 = virtualinvoke $r11.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r5, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r1 = $r5;

     label2:
        $r6 = r1[i1];

        r2 = (androidx.compose.ui.focus.FocusRequesterModifierLocal) $r6;

        $r7 = virtualinvoke r2.<androidx.compose.ui.focus.FocusRequesterModifierLocal: androidx.compose.ui.focus.FocusModifier findFocusNode()>();

        if $r7 == null goto label4;

        r3 = $r7;

        $z4 = staticinvoke <androidx.compose.ui.focus.FocusTransactionsKt: boolean freeFocus(androidx.compose.ui.focus.FocusModifier)>(r3);

        if $z4 == 0 goto label3;

        z6 = 1;

     label3:
        goto label4;

     label4:
        i1 = i1 + 1;

        if i1 < i0 goto label2;

     label5:
        return z6;
    }

    public static final androidx.compose.ui.focus.FocusRequester access$getDefault$cp()
    {
        androidx.compose.ui.focus.FocusRequester $r0;

        $r0 = <androidx.compose.ui.focus.FocusRequester: androidx.compose.ui.focus.FocusRequester Default>;

        return $r0;
    }

    public static final androidx.compose.ui.focus.FocusRequester access$getCancel$cp()
    {
        androidx.compose.ui.focus.FocusRequester $r0;

        $r0 = <androidx.compose.ui.focus.FocusRequester: androidx.compose.ui.focus.FocusRequester Cancel>;

        return $r0;
    }

    static void <clinit>()
    {
        androidx.compose.ui.focus.FocusRequester$Companion $r0;
        int $i0;
        androidx.compose.ui.focus.FocusRequester $r1, $r2;

        $r0 = new androidx.compose.ui.focus.FocusRequester$Companion;

        specialinvoke $r0.<androidx.compose.ui.focus.FocusRequester$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.compose.ui.focus.FocusRequester: androidx.compose.ui.focus.FocusRequester$Companion Companion> = $r0;

        $i0 = <androidx.compose.runtime.collection.MutableVector: int $stable>;

        <androidx.compose.ui.focus.FocusRequester: int $stable> = $i0;

        $r1 = new androidx.compose.ui.focus.FocusRequester;

        specialinvoke $r1.<androidx.compose.ui.focus.FocusRequester: void <init>()>();

        <androidx.compose.ui.focus.FocusRequester: androidx.compose.ui.focus.FocusRequester Default> = $r1;

        $r2 = new androidx.compose.ui.focus.FocusRequester;

        specialinvoke $r2.<androidx.compose.ui.focus.FocusRequester: void <init>()>();

        <androidx.compose.ui.focus.FocusRequester: androidx.compose.ui.focus.FocusRequester Cancel> = $r2;

        return;
    }

androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory
<androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory: androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory INSTANCE>
<androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory: int $stable>
    private void <init>()
    {
        androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory r0;

        r0 := @this: androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.compose.ui.focus.FocusRequester component1()
    {
        androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory r0;
        androidx.compose.ui.focus.FocusRequester $r1;

        r0 := @this: androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory;

        $r1 = new androidx.compose.ui.focus.FocusRequester;

        specialinvoke $r1.<androidx.compose.ui.focus.FocusRequester: void <init>()>();

        return $r1;
    }

    public final androidx.compose.ui.focus.FocusRequester component2()
    {
        androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory r0;
        androidx.compose.ui.focus.FocusRequester $r1;

        r0 := @this: androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory;

        $r1 = new androidx.compose.ui.focus.FocusRequester;

        specialinvoke $r1.<androidx.compose.ui.focus.FocusRequester: void <init>()>();

        return $r1;
    }

    public final androidx.compose.ui.focus.FocusRequester component3()
    {
        androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory r0;
        androidx.compose.ui.focus.FocusRequester $r1;

        r0 := @this: androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory;

        $r1 = new androidx.compose.ui.focus.FocusRequester;

        specialinvoke $r1.<androidx.compose.ui.focus.FocusRequester: void <init>()>();

        return $r1;
    }

    public final androidx.compose.ui.focus.FocusRequester component4()
    {
        androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory r0;
        androidx.compose.ui.focus.FocusRequester $r1;

        r0 := @this: androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory;

        $r1 = new androidx.compose.ui.focus.FocusRequester;

        specialinvoke $r1.<androidx.compose.ui.focus.FocusRequester: void <init>()>();

        return $r1;
    }

    public final androidx.compose.ui.focus.FocusRequester component5()
    {
        androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory r0;
        androidx.compose.ui.focus.FocusRequester $r1;

        r0 := @this: androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory;

        $r1 = new androidx.compose.ui.focus.FocusRequester;

        specialinvoke $r1.<androidx.compose.ui.focus.FocusRequester: void <init>()>();

        return $r1;
    }

    public final androidx.compose.ui.focus.FocusRequester component6()
    {
        androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory r0;
        androidx.compose.ui.focus.FocusRequester $r1;

        r0 := @this: androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory;

        $r1 = new androidx.compose.ui.focus.FocusRequester;

        specialinvoke $r1.<androidx.compose.ui.focus.FocusRequester: void <init>()>();

        return $r1;
    }

    public final androidx.compose.ui.focus.FocusRequester component7()
    {
        androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory r0;
        androidx.compose.ui.focus.FocusRequester $r1;

        r0 := @this: androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory;

        $r1 = new androidx.compose.ui.focus.FocusRequester;

        specialinvoke $r1.<androidx.compose.ui.focus.FocusRequester: void <init>()>();

        return $r1;
    }

    public final androidx.compose.ui.focus.FocusRequester component8()
    {
        androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory r0;
        androidx.compose.ui.focus.FocusRequester $r1;

        r0 := @this: androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory;

        $r1 = new androidx.compose.ui.focus.FocusRequester;

        specialinvoke $r1.<androidx.compose.ui.focus.FocusRequester: void <init>()>();

        return $r1;
    }

    public final androidx.compose.ui.focus.FocusRequester component9()
    {
        androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory r0;
        androidx.compose.ui.focus.FocusRequester $r1;

        r0 := @this: androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory;

        $r1 = new androidx.compose.ui.focus.FocusRequester;

        specialinvoke $r1.<androidx.compose.ui.focus.FocusRequester: void <init>()>();

        return $r1;
    }

    public final androidx.compose.ui.focus.FocusRequester component10()
    {
        androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory r0;
        androidx.compose.ui.focus.FocusRequester $r1;

        r0 := @this: androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory;

        $r1 = new androidx.compose.ui.focus.FocusRequester;

        specialinvoke $r1.<androidx.compose.ui.focus.FocusRequester: void <init>()>();

        return $r1;
    }

    public final androidx.compose.ui.focus.FocusRequester component11()
    {
        androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory r0;
        androidx.compose.ui.focus.FocusRequester $r1;

        r0 := @this: androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory;

        $r1 = new androidx.compose.ui.focus.FocusRequester;

        specialinvoke $r1.<androidx.compose.ui.focus.FocusRequester: void <init>()>();

        return $r1;
    }

    public final androidx.compose.ui.focus.FocusRequester component12()
    {
        androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory r0;
        androidx.compose.ui.focus.FocusRequester $r1;

        r0 := @this: androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory;

        $r1 = new androidx.compose.ui.focus.FocusRequester;

        specialinvoke $r1.<androidx.compose.ui.focus.FocusRequester: void <init>()>();

        return $r1;
    }

    public final androidx.compose.ui.focus.FocusRequester component13()
    {
        androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory r0;
        androidx.compose.ui.focus.FocusRequester $r1;

        r0 := @this: androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory;

        $r1 = new androidx.compose.ui.focus.FocusRequester;

        specialinvoke $r1.<androidx.compose.ui.focus.FocusRequester: void <init>()>();

        return $r1;
    }

    public final androidx.compose.ui.focus.FocusRequester component14()
    {
        androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory r0;
        androidx.compose.ui.focus.FocusRequester $r1;

        r0 := @this: androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory;

        $r1 = new androidx.compose.ui.focus.FocusRequester;

        specialinvoke $r1.<androidx.compose.ui.focus.FocusRequester: void <init>()>();

        return $r1;
    }

    public final androidx.compose.ui.focus.FocusRequester component15()
    {
        androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory r0;
        androidx.compose.ui.focus.FocusRequester $r1;

        r0 := @this: androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory;

        $r1 = new androidx.compose.ui.focus.FocusRequester;

        specialinvoke $r1.<androidx.compose.ui.focus.FocusRequester: void <init>()>();

        return $r1;
    }

    public final androidx.compose.ui.focus.FocusRequester component16()
    {
        androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory r0;
        androidx.compose.ui.focus.FocusRequester $r1;

        r0 := @this: androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory;

        $r1 = new androidx.compose.ui.focus.FocusRequester;

        specialinvoke $r1.<androidx.compose.ui.focus.FocusRequester: void <init>()>();

        return $r1;
    }

    static void <clinit>()
    {
        androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory $r0;

        $r0 = new androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory;

        specialinvoke $r0.<androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory: void <init>()>();

        <androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory: androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory INSTANCE> = $r0;

        return;
    }

androidx.compose.ui.focus.FocusRequester$Companion
    private void <init>()
    {
        androidx.compose.ui.focus.FocusRequester$Companion r0;

        r0 := @this: androidx.compose.ui.focus.FocusRequester$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.compose.ui.focus.FocusRequester getDefault()
    {
        androidx.compose.ui.focus.FocusRequester$Companion r0;
        androidx.compose.ui.focus.FocusRequester $r1;

        r0 := @this: androidx.compose.ui.focus.FocusRequester$Companion;

        $r1 = staticinvoke <androidx.compose.ui.focus.FocusRequester: androidx.compose.ui.focus.FocusRequester access$getDefault$cp()>();

        return $r1;
    }

    public final androidx.compose.ui.focus.FocusRequester getCancel()
    {
        androidx.compose.ui.focus.FocusRequester$Companion r0;
        androidx.compose.ui.focus.FocusRequester $r1;

        r0 := @this: androidx.compose.ui.focus.FocusRequester$Companion;

        $r1 = staticinvoke <androidx.compose.ui.focus.FocusRequester: androidx.compose.ui.focus.FocusRequester access$getCancel$cp()>();

        return $r1;
    }

    public static void getCancel$annotations()
    {
        return;
    }

    public final androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory createRefs()
    {
        androidx.compose.ui.focus.FocusRequester$Companion r0;
        androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory $r1;

        r0 := @this: androidx.compose.ui.focus.FocusRequester$Companion;

        $r1 = <androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory: androidx.compose.ui.focus.FocusRequester$Companion$FocusRequesterFactory INSTANCE>;

        return $r1;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.ui.focus.FocusRequester$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.compose.ui.focus.FocusRequester$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.ui.focus.FocusRequester$Companion: void <init>()>();

        return;
    }

androidx.compose.ui.focus.FocusRequester$requestFocus$2
<androidx.compose.ui.focus.FocusRequester$requestFocus$2: androidx.compose.ui.focus.FocusRequester$requestFocus$2 INSTANCE>
    void <init>()
    {
        androidx.compose.ui.focus.FocusRequester$requestFocus$2 r0;

        r0 := @this: androidx.compose.ui.focus.FocusRequester$requestFocus$2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Boolean invoke(androidx.compose.ui.focus.FocusModifier)
    {
        androidx.compose.ui.focus.FocusRequester$requestFocus$2 r0;
        androidx.compose.ui.focus.FocusModifier r1;
        java.lang.Boolean $r2;

        r0 := @this: androidx.compose.ui.focus.FocusRequester$requestFocus$2;

        r1 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        staticinvoke <androidx.compose.ui.focus.FocusTransactionsKt: void requestFocus(androidx.compose.ui.focus.FocusModifier)>(r1);

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.ui.focus.FocusRequester$requestFocus$2 r0;
        java.lang.Object r1;
        androidx.compose.ui.focus.FocusModifier $r2;
        java.lang.Boolean $r3;

        r0 := @this: androidx.compose.ui.focus.FocusRequester$requestFocus$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.focus.FocusModifier) r1;

        $r3 = virtualinvoke r0.<androidx.compose.ui.focus.FocusRequester$requestFocus$2: java.lang.Boolean invoke(androidx.compose.ui.focus.FocusModifier)>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        androidx.compose.ui.focus.FocusRequester$requestFocus$2 $r0;

        $r0 = new androidx.compose.ui.focus.FocusRequester$requestFocus$2;

        specialinvoke $r0.<androidx.compose.ui.focus.FocusRequester$requestFocus$2: void <init>()>();

        <androidx.compose.ui.focus.FocusRequester$requestFocus$2: androidx.compose.ui.focus.FocusRequester$requestFocus$2 INSTANCE> = $r0;

        return;
    }

