io.grpc.internal.GzipInflatingBuffer
<io.grpc.internal.GzipInflatingBuffer: int bytesConsumed>
<io.grpc.internal.GzipInflatingBuffer: boolean closed>
<io.grpc.internal.GzipInflatingBuffer: java.util.zip.CRC32 crc>
<io.grpc.internal.GzipInflatingBuffer: int deflatedBytesConsumed>
<io.grpc.internal.GzipInflatingBuffer: long expectedGzipTrailerIsize>
<io.grpc.internal.GzipInflatingBuffer: int gzipHeaderFlag>
<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader gzipMetadataReader>
<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.CompositeReadableBuffer gzippedData>
<io.grpc.internal.GzipInflatingBuffer: int headerExtraToRead>
<io.grpc.internal.GzipInflatingBuffer: java.util.zip.Inflater inflater>
<io.grpc.internal.GzipInflatingBuffer: byte[] inflaterInput>
<io.grpc.internal.GzipInflatingBuffer: int inflaterInputEnd>
<io.grpc.internal.GzipInflatingBuffer: int inflaterInputStart>
<io.grpc.internal.GzipInflatingBuffer: boolean isStalled>
<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$State state>
    void <init>()
    {
        io.grpc.internal.GzipInflatingBuffer $r0;
        io.grpc.internal.CompositeReadableBuffer $r1;
        java.util.zip.CRC32 $r2;
        io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader $r3;
        byte[] $r4;
        io.grpc.internal.GzipInflatingBuffer$State $r5;

        $r0 := @this: io.grpc.internal.GzipInflatingBuffer;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new io.grpc.internal.CompositeReadableBuffer;

        specialinvoke $r1.<io.grpc.internal.CompositeReadableBuffer: void <init>()>();

        $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.CompositeReadableBuffer gzippedData> = $r1;

        $r2 = new java.util.zip.CRC32;

        specialinvoke $r2.<java.util.zip.CRC32: void <init>()>();

        $r0.<io.grpc.internal.GzipInflatingBuffer: java.util.zip.CRC32 crc> = $r2;

        $r3 = new io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader;

        specialinvoke $r3.<io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: void <init>(io.grpc.internal.GzipInflatingBuffer,io.grpc.internal.GzipInflatingBuffer$1)>($r0, null);

        $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader gzipMetadataReader> = $r3;

        $r4 = newarray (byte)[512];

        $r0.<io.grpc.internal.GzipInflatingBuffer: byte[] inflaterInput> = $r4;

        $r5 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER>;

        $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$State state> = $r5;

        $r0.<io.grpc.internal.GzipInflatingBuffer: boolean closed> = 0;

        $r0.<io.grpc.internal.GzipInflatingBuffer: int bytesConsumed> = 0;

        $r0.<io.grpc.internal.GzipInflatingBuffer: int deflatedBytesConsumed> = 0;

        $r0.<io.grpc.internal.GzipInflatingBuffer: boolean isStalled> = 1;

        return;
    }

    static int access$000(io.grpc.internal.GzipInflatingBuffer)
    {
        io.grpc.internal.GzipInflatingBuffer $r0;
        int i0;

        $r0 := @parameter0: io.grpc.internal.GzipInflatingBuffer;

        i0 = $r0.<io.grpc.internal.GzipInflatingBuffer: int inflaterInputEnd>;

        return i0;
    }

    static int access$100(io.grpc.internal.GzipInflatingBuffer)
    {
        io.grpc.internal.GzipInflatingBuffer $r0;
        int i0;

        $r0 := @parameter0: io.grpc.internal.GzipInflatingBuffer;

        i0 = $r0.<io.grpc.internal.GzipInflatingBuffer: int inflaterInputStart>;

        return i0;
    }

    static int access$112(io.grpc.internal.GzipInflatingBuffer, int)
    {
        io.grpc.internal.GzipInflatingBuffer $r0;
        int $i0, $i1;

        $r0 := @parameter0: io.grpc.internal.GzipInflatingBuffer;

        $i0 := @parameter1: int;

        $i1 = $r0.<io.grpc.internal.GzipInflatingBuffer: int inflaterInputStart>;

        $i0 = $i1 + $i0;

        $r0.<io.grpc.internal.GzipInflatingBuffer: int inflaterInputStart> = $i0;

        return $i0;
    }

    static byte[] access$200(io.grpc.internal.GzipInflatingBuffer)
    {
        io.grpc.internal.GzipInflatingBuffer $r0;
        byte[] r1;

        $r0 := @parameter0: io.grpc.internal.GzipInflatingBuffer;

        r1 = $r0.<io.grpc.internal.GzipInflatingBuffer: byte[] inflaterInput>;

        return r1;
    }

    static io.grpc.internal.CompositeReadableBuffer access$300(io.grpc.internal.GzipInflatingBuffer)
    {
        io.grpc.internal.GzipInflatingBuffer $r0;
        io.grpc.internal.CompositeReadableBuffer r1;

        $r0 := @parameter0: io.grpc.internal.GzipInflatingBuffer;

        r1 = $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.CompositeReadableBuffer gzippedData>;

        return r1;
    }

    static java.util.zip.CRC32 access$400(io.grpc.internal.GzipInflatingBuffer)
    {
        io.grpc.internal.GzipInflatingBuffer $r0;
        java.util.zip.CRC32 r1;

        $r0 := @parameter0: io.grpc.internal.GzipInflatingBuffer;

        r1 = $r0.<io.grpc.internal.GzipInflatingBuffer: java.util.zip.CRC32 crc>;

        return r1;
    }

    static int access$512(io.grpc.internal.GzipInflatingBuffer, int)
    {
        io.grpc.internal.GzipInflatingBuffer $r0;
        int $i0, $i1;

        $r0 := @parameter0: io.grpc.internal.GzipInflatingBuffer;

        $i0 := @parameter1: int;

        $i1 = $r0.<io.grpc.internal.GzipInflatingBuffer: int bytesConsumed>;

        $i0 = $i1 + $i0;

        $r0.<io.grpc.internal.GzipInflatingBuffer: int bytesConsumed> = $i0;

        return $i0;
    }

    private boolean fill()
    {
        io.grpc.internal.GzipInflatingBuffer $r0;
        java.util.zip.Inflater $r1;
        boolean $z0;
        int $i0, $i1;
        io.grpc.internal.CompositeReadableBuffer $r2;
        byte[] $r3;
        io.grpc.internal.GzipInflatingBuffer$State $r4;

        $r0 := @this: io.grpc.internal.GzipInflatingBuffer;

        $r1 = $r0.<io.grpc.internal.GzipInflatingBuffer: java.util.zip.Inflater inflater>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "inflater is null");

        $i0 = $r0.<io.grpc.internal.GzipInflatingBuffer: int inflaterInputStart>;

        $i1 = $r0.<io.grpc.internal.GzipInflatingBuffer: int inflaterInputEnd>;

        if $i0 != $i1 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "inflaterInput has unconsumed bytes");

        $r2 = $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.CompositeReadableBuffer gzippedData>;

        $i0 = virtualinvoke $r2.<io.grpc.internal.CompositeReadableBuffer: int readableBytes()>();

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, 512);

        if $i0 != 0 goto label5;

        return 0;

     label5:
        $r0.<io.grpc.internal.GzipInflatingBuffer: int inflaterInputStart> = 0;

        $r0.<io.grpc.internal.GzipInflatingBuffer: int inflaterInputEnd> = $i0;

        $r2 = $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.CompositeReadableBuffer gzippedData>;

        $r3 = $r0.<io.grpc.internal.GzipInflatingBuffer: byte[] inflaterInput>;

        virtualinvoke $r2.<io.grpc.internal.CompositeReadableBuffer: void readBytes(byte[],int,int)>($r3, 0, $i0);

        $r1 = $r0.<io.grpc.internal.GzipInflatingBuffer: java.util.zip.Inflater inflater>;

        $r3 = $r0.<io.grpc.internal.GzipInflatingBuffer: byte[] inflaterInput>;

        $i1 = $r0.<io.grpc.internal.GzipInflatingBuffer: int inflaterInputStart>;

        virtualinvoke $r1.<java.util.zip.Inflater: void setInput(byte[],int,int)>($r3, $i1, $i0);

        $r4 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State INFLATING>;

        $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$State state> = $r4;

        return 1;
    }

    private int inflate(byte[], int, int) throws java.util.zip.DataFormatException, java.util.zip.ZipException
    {
        io.grpc.internal.GzipInflatingBuffer $r0;
        byte[] $r1;
        int $i0, $i1, $i2, $i3;
        java.util.zip.Inflater $r2;
        boolean $z0;
        java.util.zip.CRC32 $r3;
        long $l4;
        io.grpc.internal.GzipInflatingBuffer$State $r4;
        java.lang.Throwable $r5;
        java.lang.StringBuilder $r6, r8;
        java.lang.String $r7;
        java.util.zip.DataFormatException r9, r10;

        $r0 := @this: io.grpc.internal.GzipInflatingBuffer;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = $r0.<io.grpc.internal.GzipInflatingBuffer: java.util.zip.Inflater inflater>;

        if $r2 == null goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "inflater is null");

        $r2 = $r0.<io.grpc.internal.GzipInflatingBuffer: java.util.zip.Inflater inflater>;

     label03:
        $i2 = virtualinvoke $r2.<java.util.zip.Inflater: int getTotalIn()>();

     label04:
        $r2 = $r0.<io.grpc.internal.GzipInflatingBuffer: java.util.zip.Inflater inflater>;

     label05:
        $i1 = virtualinvoke $r2.<java.util.zip.Inflater: int inflate(byte[],int,int)>($r1, $i0, $i1);

     label06:
        $r2 = $r0.<io.grpc.internal.GzipInflatingBuffer: java.util.zip.Inflater inflater>;

     label07:
        $i3 = virtualinvoke $r2.<java.util.zip.Inflater: int getTotalIn()>();

     label08:
        $i2 = $i3 - $i2;

        $i3 = $r0.<io.grpc.internal.GzipInflatingBuffer: int bytesConsumed>;

        $i3 = $i3 + $i2;

        $r0.<io.grpc.internal.GzipInflatingBuffer: int bytesConsumed> = $i3;

        $i3 = $r0.<io.grpc.internal.GzipInflatingBuffer: int deflatedBytesConsumed>;

        $i3 = $i3 + $i2;

        $r0.<io.grpc.internal.GzipInflatingBuffer: int deflatedBytesConsumed> = $i3;

        $i3 = $r0.<io.grpc.internal.GzipInflatingBuffer: int inflaterInputStart>;

        $i2 = $i3 + $i2;

        $r0.<io.grpc.internal.GzipInflatingBuffer: int inflaterInputStart> = $i2;

        $r3 = $r0.<io.grpc.internal.GzipInflatingBuffer: java.util.zip.CRC32 crc>;

     label09:
        virtualinvoke $r3.<java.util.zip.CRC32: void update(byte[],int,int)>($r1, $i0, $i1);

     label10:
        $r2 = $r0.<io.grpc.internal.GzipInflatingBuffer: java.util.zip.Inflater inflater>;

     label11:
        $z0 = virtualinvoke $r2.<java.util.zip.Inflater: boolean finished()>();

     label12:
        if $z0 == 0 goto label15;

        $r2 = $r0.<io.grpc.internal.GzipInflatingBuffer: java.util.zip.Inflater inflater>;

     label13:
        $l4 = virtualinvoke $r2.<java.util.zip.Inflater: long getBytesWritten()>();

     label14:
        $l4 = $l4 & 4294967295L;

        $r0.<io.grpc.internal.GzipInflatingBuffer: long expectedGzipTrailerIsize> = $l4;

        $r4 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State TRAILER>;

        $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$State state> = $r4;

        return $i1;

     label15:
        $r2 = $r0.<io.grpc.internal.GzipInflatingBuffer: java.util.zip.Inflater inflater>;

     label16:
        $z0 = virtualinvoke $r2.<java.util.zip.Inflater: boolean needsInput()>();

     label17:
        if $z0 == 0 goto label19;

        $r4 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State INFLATER_NEEDS_INPUT>;

        $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$State state> = $r4;

        return $i1;

     label18:
        $r5 := @caughtexception;

        r9 = new java.util.zip.DataFormatException;

        r8 = new java.lang.StringBuilder;

        specialinvoke r8.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Inflater data format exception: ");

        r10 = (java.util.zip.DataFormatException) $r5;

        $r7 = virtualinvoke r10.<java.util.zip.DataFormatException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r9.<java.util.zip.DataFormatException: void <init>(java.lang.String)>($r7);

        throw r9;

     label19:
        return $i1;

        catch java.util.zip.DataFormatException from label03 to label04 with label18;
        catch java.util.zip.DataFormatException from label05 to label06 with label18;
        catch java.util.zip.DataFormatException from label07 to label08 with label18;
        catch java.util.zip.DataFormatException from label09 to label10 with label18;
        catch java.util.zip.DataFormatException from label11 to label12 with label18;
        catch java.util.zip.DataFormatException from label13 to label14 with label18;
        catch java.util.zip.DataFormatException from label16 to label17 with label18;
    }

    private boolean initializeInflater()
    {
        io.grpc.internal.GzipInflatingBuffer $r0;
        int $i0, $i1;
        java.util.zip.Inflater $r1;
        byte[] $r2;
        java.util.zip.CRC32 $r3;
        io.grpc.internal.GzipInflatingBuffer$State $r4;

        $r0 := @this: io.grpc.internal.GzipInflatingBuffer;

        $r1 = $r0.<io.grpc.internal.GzipInflatingBuffer: java.util.zip.Inflater inflater>;

        if $r1 != null goto label1;

        $r1 = new java.util.zip.Inflater;

        specialinvoke $r1.<java.util.zip.Inflater: void <init>(boolean)>(1);

        $r0.<io.grpc.internal.GzipInflatingBuffer: java.util.zip.Inflater inflater> = $r1;

        goto label2;

     label1:
        virtualinvoke $r1.<java.util.zip.Inflater: void reset()>();

     label2:
        $r3 = $r0.<io.grpc.internal.GzipInflatingBuffer: java.util.zip.CRC32 crc>;

        virtualinvoke $r3.<java.util.zip.CRC32: void reset()>();

        $i1 = $r0.<io.grpc.internal.GzipInflatingBuffer: int inflaterInputEnd>;

        $i0 = $r0.<io.grpc.internal.GzipInflatingBuffer: int inflaterInputStart>;

        $i1 = $i1 - $i0;

        if $i1 <= 0 goto label3;

        $r1 = $r0.<io.grpc.internal.GzipInflatingBuffer: java.util.zip.Inflater inflater>;

        $r2 = $r0.<io.grpc.internal.GzipInflatingBuffer: byte[] inflaterInput>;

        virtualinvoke $r1.<java.util.zip.Inflater: void setInput(byte[],int,int)>($r2, $i0, $i1);

        $r4 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State INFLATING>;

        $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$State state> = $r4;

        goto label4;

     label3:
        $r4 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State INFLATER_NEEDS_INPUT>;

        $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$State state> = $r4;

     label4:
        return 1;
    }

    private boolean processHeader() throws java.util.zip.ZipException
    {
        io.grpc.internal.GzipInflatingBuffer $r0;
        io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader $r1;
        int $i0;
        io.grpc.internal.GzipInflatingBuffer$State $r2;
        java.util.zip.ZipException $r3;

        $r0 := @this: io.grpc.internal.GzipInflatingBuffer;

        $r1 = $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader gzipMetadataReader>;

        $i0 = staticinvoke <io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: int access$700(io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader)>($r1);

        if $i0 >= 10 goto label1;

        return 0;

     label1:
        $r1 = $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader gzipMetadataReader>;

        $i0 = staticinvoke <io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: int access$800(io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader)>($r1);

        if $i0 != 35615 goto label3;

        $r1 = $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader gzipMetadataReader>;

        $i0 = staticinvoke <io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: int access$900(io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader)>($r1);

        if $i0 != 8 goto label2;

        $r1 = $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader gzipMetadataReader>;

        $i0 = staticinvoke <io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: int access$900(io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader)>($r1);

        $r0.<io.grpc.internal.GzipInflatingBuffer: int gzipHeaderFlag> = $i0;

        $r1 = $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader gzipMetadataReader>;

        staticinvoke <io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: void access$1000(io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader,int)>($r1, 6);

        $r2 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER_EXTRA_LEN>;

        $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$State state> = $r2;

        return 1;

     label2:
        $r3 = new java.util.zip.ZipException;

        specialinvoke $r3.<java.util.zip.ZipException: void <init>(java.lang.String)>("Unsupported compression method");

        throw $r3;

     label3:
        $r3 = new java.util.zip.ZipException;

        specialinvoke $r3.<java.util.zip.ZipException: void <init>(java.lang.String)>("Not in GZIP format");

        throw $r3;
    }

    private boolean processHeaderComment()
    {
        io.grpc.internal.GzipInflatingBuffer $r0;
        boolean $z0;
        int $i0;
        io.grpc.internal.GzipInflatingBuffer$State $r1;
        io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader $r2;

        $r0 := @this: io.grpc.internal.GzipInflatingBuffer;

        $i0 = $r0.<io.grpc.internal.GzipInflatingBuffer: int gzipHeaderFlag>;

        $i0 = $i0 & 16;

        if $i0 == 16 goto label1;

        $r1 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER_CRC>;

        $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$State state> = $r1;

        return 1;

     label1:
        $r2 = $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader gzipMetadataReader>;

        $z0 = staticinvoke <io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: boolean access$1100(io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader)>($r2);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r1 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER_CRC>;

        $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$State state> = $r1;

        return 1;
    }

    private boolean processHeaderCrc() throws java.util.zip.ZipException
    {
        io.grpc.internal.GzipInflatingBuffer $r0;
        int $i0;
        io.grpc.internal.GzipInflatingBuffer$State $r1;
        io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader $r2;
        java.util.zip.CRC32 $r3;
        long $l1;
        char $c2;
        java.util.zip.ZipException $r4;

        $r0 := @this: io.grpc.internal.GzipInflatingBuffer;

        $i0 = $r0.<io.grpc.internal.GzipInflatingBuffer: int gzipHeaderFlag>;

        $i0 = $i0 & 2;

        if $i0 == 2 goto label1;

        $r1 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State INITIALIZE_INFLATER>;

        $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$State state> = $r1;

        return 1;

     label1:
        $r2 = $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader gzipMetadataReader>;

        $i0 = staticinvoke <io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: int access$700(io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader)>($r2);

        if $i0 >= 2 goto label2;

        return 0;

     label2:
        $r3 = $r0.<io.grpc.internal.GzipInflatingBuffer: java.util.zip.CRC32 crc>;

        $l1 = virtualinvoke $r3.<java.util.zip.CRC32: long getValue()>();

        $i0 = (int) $l1;

        $c2 = (char) $i0;

        $r2 = $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader gzipMetadataReader>;

        $i0 = staticinvoke <io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: int access$800(io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader)>($r2);

        if $c2 != $i0 goto label3;

        $r1 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State INITIALIZE_INFLATER>;

        $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$State state> = $r1;

        return 1;

     label3:
        $r4 = new java.util.zip.ZipException;

        specialinvoke $r4.<java.util.zip.ZipException: void <init>(java.lang.String)>("Corrupt GZIP header");

        throw $r4;
    }

    private boolean processHeaderExtra()
    {
        io.grpc.internal.GzipInflatingBuffer $r0;
        int $i0, $i1;
        io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader $r1;
        io.grpc.internal.GzipInflatingBuffer$State $r2;

        $r0 := @this: io.grpc.internal.GzipInflatingBuffer;

        $r1 = $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader gzipMetadataReader>;

        $i1 = staticinvoke <io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: int access$700(io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader)>($r1);

        $i0 = $r0.<io.grpc.internal.GzipInflatingBuffer: int headerExtraToRead>;

        if $i1 >= $i0 goto label1;

        return 0;

     label1:
        $r1 = $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader gzipMetadataReader>;

        staticinvoke <io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: void access$1000(io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader,int)>($r1, $i0);

        $r2 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER_NAME>;

        $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$State state> = $r2;

        return 1;
    }

    private boolean processHeaderExtraLen()
    {
        io.grpc.internal.GzipInflatingBuffer $r0;
        int $i0;
        io.grpc.internal.GzipInflatingBuffer$State $r1;
        io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader $r2;

        $r0 := @this: io.grpc.internal.GzipInflatingBuffer;

        $i0 = $r0.<io.grpc.internal.GzipInflatingBuffer: int gzipHeaderFlag>;

        $i0 = $i0 & 4;

        if $i0 == 4 goto label1;

        $r1 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER_NAME>;

        $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$State state> = $r1;

        return 1;

     label1:
        $r2 = $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader gzipMetadataReader>;

        $i0 = staticinvoke <io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: int access$700(io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader)>($r2);

        if $i0 >= 2 goto label2;

        return 0;

     label2:
        $r2 = $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader gzipMetadataReader>;

        $i0 = staticinvoke <io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: int access$800(io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader)>($r2);

        $r0.<io.grpc.internal.GzipInflatingBuffer: int headerExtraToRead> = $i0;

        $r1 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER_EXTRA>;

        $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$State state> = $r1;

        return 1;
    }

    private boolean processHeaderName()
    {
        io.grpc.internal.GzipInflatingBuffer $r0;
        boolean $z0;
        int $i0;
        io.grpc.internal.GzipInflatingBuffer$State $r1;
        io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader $r2;

        $r0 := @this: io.grpc.internal.GzipInflatingBuffer;

        $i0 = $r0.<io.grpc.internal.GzipInflatingBuffer: int gzipHeaderFlag>;

        $i0 = $i0 & 8;

        if $i0 == 8 goto label1;

        $r1 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER_COMMENT>;

        $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$State state> = $r1;

        return 1;

     label1:
        $r2 = $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader gzipMetadataReader>;

        $z0 = staticinvoke <io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: boolean access$1100(io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader)>($r2);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r1 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER_COMMENT>;

        $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$State state> = $r1;

        return 1;
    }

    private boolean processTrailer() throws java.util.zip.ZipException
    {
        io.grpc.internal.GzipInflatingBuffer $r0;
        java.util.zip.Inflater $r1;
        io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader $r2;
        int $i0;
        java.util.zip.CRC32 $r3;
        long $l1, $l2;
        byte $b3;
        io.grpc.internal.GzipInflatingBuffer$State $r4;
        java.util.zip.ZipException $r5;

        $r0 := @this: io.grpc.internal.GzipInflatingBuffer;

        $r1 = $r0.<io.grpc.internal.GzipInflatingBuffer: java.util.zip.Inflater inflater>;

        if $r1 == null goto label1;

        $r2 = $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader gzipMetadataReader>;

        $i0 = staticinvoke <io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: int access$700(io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader)>($r2);

        if $i0 > 18 goto label1;

        $r1 = $r0.<io.grpc.internal.GzipInflatingBuffer: java.util.zip.Inflater inflater>;

        virtualinvoke $r1.<java.util.zip.Inflater: void end()>();

        $r0.<io.grpc.internal.GzipInflatingBuffer: java.util.zip.Inflater inflater> = null;

     label1:
        $r2 = $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader gzipMetadataReader>;

        $i0 = staticinvoke <io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: int access$700(io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader)>($r2);

        if $i0 >= 8 goto label2;

        return 0;

     label2:
        $r3 = $r0.<io.grpc.internal.GzipInflatingBuffer: java.util.zip.CRC32 crc>;

        $l1 = virtualinvoke $r3.<java.util.zip.CRC32: long getValue()>();

        $r2 = $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader gzipMetadataReader>;

        $l2 = staticinvoke <io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: long access$1200(io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader)>($r2);

        $b3 = $l1 cmp $l2;

        if $b3 != 0 goto label3;

        $l1 = $r0.<io.grpc.internal.GzipInflatingBuffer: long expectedGzipTrailerIsize>;

        $r2 = $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader gzipMetadataReader>;

        $l2 = staticinvoke <io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: long access$1200(io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader)>($r2);

        $b3 = $l1 cmp $l2;

        if $b3 != 0 goto label3;

        $r3 = $r0.<io.grpc.internal.GzipInflatingBuffer: java.util.zip.CRC32 crc>;

        virtualinvoke $r3.<java.util.zip.CRC32: void reset()>();

        $r4 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER>;

        $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$State state> = $r4;

        return 1;

     label3:
        $r5 = new java.util.zip.ZipException;

        specialinvoke $r5.<java.util.zip.ZipException: void <init>(java.lang.String)>("Corrupt GZIP trailer");

        throw $r5;
    }

    void addGzippedBytes(io.grpc.internal.ReadableBuffer)
    {
        io.grpc.internal.GzipInflatingBuffer $r0;
        io.grpc.internal.ReadableBuffer $r1;
        boolean $z0;
        io.grpc.internal.CompositeReadableBuffer $r2;

        $r0 := @this: io.grpc.internal.GzipInflatingBuffer;

        $r1 := @parameter0: io.grpc.internal.ReadableBuffer;

        $z0 = $r0.<io.grpc.internal.GzipInflatingBuffer: boolean closed>;

        if $z0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "GzipInflatingBuffer is closed");

        $r2 = $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.CompositeReadableBuffer gzippedData>;

        virtualinvoke $r2.<io.grpc.internal.CompositeReadableBuffer: void addBuffer(io.grpc.internal.ReadableBuffer)>($r1);

        $r0.<io.grpc.internal.GzipInflatingBuffer: boolean isStalled> = 0;

        return;
    }

    public void close()
    {
        io.grpc.internal.GzipInflatingBuffer $r0;
        boolean $z0;
        io.grpc.internal.CompositeReadableBuffer $r1;
        java.util.zip.Inflater $r2;

        $r0 := @this: io.grpc.internal.GzipInflatingBuffer;

        $z0 = $r0.<io.grpc.internal.GzipInflatingBuffer: boolean closed>;

        if $z0 != 0 goto label1;

        $r0.<io.grpc.internal.GzipInflatingBuffer: boolean closed> = 1;

        $r1 = $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.CompositeReadableBuffer gzippedData>;

        virtualinvoke $r1.<io.grpc.internal.CompositeReadableBuffer: void close()>();

        $r2 = $r0.<io.grpc.internal.GzipInflatingBuffer: java.util.zip.Inflater inflater>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<java.util.zip.Inflater: void end()>();

        $r0.<io.grpc.internal.GzipInflatingBuffer: java.util.zip.Inflater inflater> = null;

     label1:
        return;
    }

    int getAndResetBytesConsumed()
    {
        io.grpc.internal.GzipInflatingBuffer $r0;
        int i0;

        $r0 := @this: io.grpc.internal.GzipInflatingBuffer;

        i0 = $r0.<io.grpc.internal.GzipInflatingBuffer: int bytesConsumed>;

        $r0.<io.grpc.internal.GzipInflatingBuffer: int bytesConsumed> = 0;

        return i0;
    }

    int getAndResetDeflatedBytesConsumed()
    {
        io.grpc.internal.GzipInflatingBuffer $r0;
        int i0;

        $r0 := @this: io.grpc.internal.GzipInflatingBuffer;

        i0 = $r0.<io.grpc.internal.GzipInflatingBuffer: int deflatedBytesConsumed>;

        $r0.<io.grpc.internal.GzipInflatingBuffer: int deflatedBytesConsumed> = 0;

        return i0;
    }

    boolean hasPartialData()
    {
        io.grpc.internal.GzipInflatingBuffer $r0;
        int $i0;
        boolean $z0;
        io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader $r1;
        io.grpc.internal.GzipInflatingBuffer$State $r2, $r3;

        $r0 := @this: io.grpc.internal.GzipInflatingBuffer;

        $z0 = $r0.<io.grpc.internal.GzipInflatingBuffer: boolean closed>;

        if $z0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "GzipInflatingBuffer is closed");

        $r1 = $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader gzipMetadataReader>;

        $i0 = staticinvoke <io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: int access$700(io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader)>($r1);

        if $i0 != 0 goto label4;

        $r2 = $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$State state>;

        $r3 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER>;

        if $r2 == $r3 goto label3;

        return 1;

     label3:
        return 0;

     label4:
        return 1;
    }

    int inflateBytes(byte[], int, int) throws java.util.zip.DataFormatException, java.util.zip.ZipException
    {
        io.grpc.internal.GzipInflatingBuffer $r0;
        byte[] $r1;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1;
        int[] $r2;
        io.grpc.internal.GzipInflatingBuffer$State $r3, $r7;
        java.lang.AssertionError $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader $r8;

        $r0 := @this: io.grpc.internal.GzipInflatingBuffer;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = $r0.<io.grpc.internal.GzipInflatingBuffer: boolean closed>;

        $z1 = 0;

        if $z0 != 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "GzipInflatingBuffer is closed");

        $z0 = 1;

        $i2 = 0;

     label03:
        if $z0 == 0 goto label16;

        $i3 = $i1 - $i2;

        if $i3 <= 0 goto label16;

        $r2 = <io.grpc.internal.GzipInflatingBuffer$1: int[] $SwitchMap$io$grpc$internal$GzipInflatingBuffer$State>;

        $r3 = $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$State state>;

        $i4 = virtualinvoke $r3.<io.grpc.internal.GzipInflatingBuffer$State: int ordinal()>();

        $i4 = $r2[$i4];

        lookupswitch($i4)
        {
            case 1: goto label15;
            case 2: goto label14;
            case 3: goto label13;
            case 4: goto label12;
            case 5: goto label11;
            case 6: goto label10;
            case 7: goto label09;
            case 8: goto label07;
            case 9: goto label06;
            case 10: goto label05;
            default: goto label04;
        };

     label04:
        $r4 = new java.lang.AssertionError;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid state: ");

        $r3 = $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$State state>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>($r6);

        throw $r4;

     label05:
        $z0 = specialinvoke $r0.<io.grpc.internal.GzipInflatingBuffer: boolean processTrailer()>();

        goto label03;

     label06:
        $z0 = specialinvoke $r0.<io.grpc.internal.GzipInflatingBuffer: boolean fill()>();

        goto label03;

     label07:
        $i4 = $i0 + $i2;

        $i3 = specialinvoke $r0.<io.grpc.internal.GzipInflatingBuffer: int inflate(byte[],int,int)>($r1, $i4, $i3);

        $i2 = $i2 + $i3;

        $r3 = $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$State state>;

        $r7 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State TRAILER>;

        if $r3 != $r7 goto label08;

        $z0 = specialinvoke $r0.<io.grpc.internal.GzipInflatingBuffer: boolean processTrailer()>();

        goto label03;

     label08:
        $z0 = 1;

        goto label03;

     label09:
        $z0 = specialinvoke $r0.<io.grpc.internal.GzipInflatingBuffer: boolean initializeInflater()>();

        goto label03;

     label10:
        $z0 = specialinvoke $r0.<io.grpc.internal.GzipInflatingBuffer: boolean processHeaderCrc()>();

        goto label03;

     label11:
        $z0 = specialinvoke $r0.<io.grpc.internal.GzipInflatingBuffer: boolean processHeaderComment()>();

        goto label03;

     label12:
        $z0 = specialinvoke $r0.<io.grpc.internal.GzipInflatingBuffer: boolean processHeaderName()>();

        goto label03;

     label13:
        $z0 = specialinvoke $r0.<io.grpc.internal.GzipInflatingBuffer: boolean processHeaderExtra()>();

        goto label03;

     label14:
        $z0 = specialinvoke $r0.<io.grpc.internal.GzipInflatingBuffer: boolean processHeaderExtraLen()>();

        goto label03;

     label15:
        $z0 = specialinvoke $r0.<io.grpc.internal.GzipInflatingBuffer: boolean processHeader()>();

        goto label03;

     label16:
        if $z0 == 0 goto label18;

        $r3 = $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$State state>;

        $r7 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER>;

        if $r3 != $r7 goto label17;

        $r8 = $r0.<io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader gzipMetadataReader>;

        $i0 = staticinvoke <io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: int access$700(io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader)>($r8);

        if $i0 >= 10 goto label17;

        goto label18;

     label17:
        goto label19;

     label18:
        $z1 = 1;

     label19:
        $r0.<io.grpc.internal.GzipInflatingBuffer: boolean isStalled> = $z1;

        return $i2;
    }

    boolean isStalled()
    {
        io.grpc.internal.GzipInflatingBuffer $r0;
        boolean $z0;

        $r0 := @this: io.grpc.internal.GzipInflatingBuffer;

        $z0 = $r0.<io.grpc.internal.GzipInflatingBuffer: boolean closed>;

        if $z0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "GzipInflatingBuffer is closed");

        $z0 = $r0.<io.grpc.internal.GzipInflatingBuffer: boolean isStalled>;

        return $z0;
    }

io.grpc.internal.GzipInflatingBuffer$1
<io.grpc.internal.GzipInflatingBuffer$1: int[] $SwitchMap$io$grpc$internal$GzipInflatingBuffer$State>
    static void <clinit>()
    {
        io.grpc.internal.GzipInflatingBuffer$State[] $r0;
        int $i0;
        int[] $r1;
        io.grpc.internal.GzipInflatingBuffer$State $r2;
        java.lang.Throwable $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        $r0 = staticinvoke <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <io.grpc.internal.GzipInflatingBuffer$1: int[] $SwitchMap$io$grpc$internal$GzipInflatingBuffer$State> = $r1;

        $r2 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER>;

     label01:
        $i0 = virtualinvoke $r2.<io.grpc.internal.GzipInflatingBuffer$State: int ordinal()>();

     label02:
        $r1[$i0] = 1;

        goto label04;

     label03:
        $r3 := @caughtexception;

     label04:
        $r1 = <io.grpc.internal.GzipInflatingBuffer$1: int[] $SwitchMap$io$grpc$internal$GzipInflatingBuffer$State>;

        $r2 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER_EXTRA_LEN>;

     label05:
        $i0 = virtualinvoke $r2.<io.grpc.internal.GzipInflatingBuffer$State: int ordinal()>();

     label06:
        $r1[$i0] = 2;

        goto label08;

     label07:
        $r4 := @caughtexception;

     label08:
        $r1 = <io.grpc.internal.GzipInflatingBuffer$1: int[] $SwitchMap$io$grpc$internal$GzipInflatingBuffer$State>;

        $r2 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER_EXTRA>;

     label09:
        $i0 = virtualinvoke $r2.<io.grpc.internal.GzipInflatingBuffer$State: int ordinal()>();

     label10:
        $r1[$i0] = 3;

        goto label12;

     label11:
        $r5 := @caughtexception;

     label12:
        $r1 = <io.grpc.internal.GzipInflatingBuffer$1: int[] $SwitchMap$io$grpc$internal$GzipInflatingBuffer$State>;

        $r2 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER_NAME>;

     label13:
        $i0 = virtualinvoke $r2.<io.grpc.internal.GzipInflatingBuffer$State: int ordinal()>();

     label14:
        $r1[$i0] = 4;

        goto label16;

     label15:
        $r6 := @caughtexception;

     label16:
        $r1 = <io.grpc.internal.GzipInflatingBuffer$1: int[] $SwitchMap$io$grpc$internal$GzipInflatingBuffer$State>;

        $r2 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER_COMMENT>;

     label17:
        $i0 = virtualinvoke $r2.<io.grpc.internal.GzipInflatingBuffer$State: int ordinal()>();

     label18:
        $r1[$i0] = 5;

        goto label20;

     label19:
        $r7 := @caughtexception;

     label20:
        $r1 = <io.grpc.internal.GzipInflatingBuffer$1: int[] $SwitchMap$io$grpc$internal$GzipInflatingBuffer$State>;

        $r2 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER_CRC>;

     label21:
        $i0 = virtualinvoke $r2.<io.grpc.internal.GzipInflatingBuffer$State: int ordinal()>();

     label22:
        $r1[$i0] = 6;

        goto label24;

     label23:
        $r8 := @caughtexception;

     label24:
        $r1 = <io.grpc.internal.GzipInflatingBuffer$1: int[] $SwitchMap$io$grpc$internal$GzipInflatingBuffer$State>;

        $r2 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State INITIALIZE_INFLATER>;

     label25:
        $i0 = virtualinvoke $r2.<io.grpc.internal.GzipInflatingBuffer$State: int ordinal()>();

     label26:
        $r1[$i0] = 7;

        goto label28;

     label27:
        $r9 := @caughtexception;

     label28:
        $r1 = <io.grpc.internal.GzipInflatingBuffer$1: int[] $SwitchMap$io$grpc$internal$GzipInflatingBuffer$State>;

        $r2 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State INFLATING>;

     label29:
        $i0 = virtualinvoke $r2.<io.grpc.internal.GzipInflatingBuffer$State: int ordinal()>();

     label30:
        $r1[$i0] = 8;

        goto label32;

     label31:
        $r10 := @caughtexception;

     label32:
        $r1 = <io.grpc.internal.GzipInflatingBuffer$1: int[] $SwitchMap$io$grpc$internal$GzipInflatingBuffer$State>;

        $r2 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State INFLATER_NEEDS_INPUT>;

     label33:
        $i0 = virtualinvoke $r2.<io.grpc.internal.GzipInflatingBuffer$State: int ordinal()>();

     label34:
        $r1[$i0] = 9;

        goto label36;

     label35:
        $r11 := @caughtexception;

     label36:
        $r1 = <io.grpc.internal.GzipInflatingBuffer$1: int[] $SwitchMap$io$grpc$internal$GzipInflatingBuffer$State>;

        $r2 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State TRAILER>;

     label37:
        $i0 = virtualinvoke $r2.<io.grpc.internal.GzipInflatingBuffer$State: int ordinal()>();

     label38:
        $r1[$i0] = 10;

        return;

     label39:
        $r12 := @caughtexception;

        return;

        catch java.lang.NoSuchFieldError from label01 to label02 with label03;
        catch java.lang.NoSuchFieldError from label05 to label06 with label07;
        catch java.lang.NoSuchFieldError from label09 to label10 with label11;
        catch java.lang.NoSuchFieldError from label13 to label14 with label15;
        catch java.lang.NoSuchFieldError from label17 to label18 with label19;
        catch java.lang.NoSuchFieldError from label21 to label22 with label23;
        catch java.lang.NoSuchFieldError from label25 to label26 with label27;
        catch java.lang.NoSuchFieldError from label29 to label30 with label31;
        catch java.lang.NoSuchFieldError from label33 to label34 with label35;
        catch java.lang.NoSuchFieldError from label37 to label38 with label39;
    }

io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader
<io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: io.grpc.internal.GzipInflatingBuffer this$0>
    private void <init>(io.grpc.internal.GzipInflatingBuffer)
    {
        io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader $r0;
        io.grpc.internal.GzipInflatingBuffer $r1;

        $r0 := @this: io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader;

        $r1 := @parameter0: io.grpc.internal.GzipInflatingBuffer;

        $r0.<io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: io.grpc.internal.GzipInflatingBuffer this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(io.grpc.internal.GzipInflatingBuffer, io.grpc.internal.GzipInflatingBuffer$1)
    {
        io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader $r0;
        io.grpc.internal.GzipInflatingBuffer $r1;
        io.grpc.internal.GzipInflatingBuffer$1 $r2;

        $r0 := @this: io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader;

        $r1 := @parameter0: io.grpc.internal.GzipInflatingBuffer;

        $r2 := @parameter1: io.grpc.internal.GzipInflatingBuffer$1;

        specialinvoke $r0.<io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: void <init>(io.grpc.internal.GzipInflatingBuffer)>($r1);

        return;
    }

    static void access$1000(io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader, int)
    {
        io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader $r0;
        int $i0;

        $r0 := @parameter0: io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader;

        $i0 := @parameter1: int;

        specialinvoke $r0.<io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: void skipBytes(int)>($i0);

        return;
    }

    static boolean access$1100(io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader)
    {
        boolean $z0;
        io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader $r0;

        $r0 := @parameter0: io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader;

        $z0 = specialinvoke $r0.<io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: boolean readBytesUntilZero()>();

        return $z0;
    }

    static long access$1200(io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader)
    {
        io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader $r0;
        long $l0;

        $r0 := @parameter0: io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader;

        $l0 = specialinvoke $r0.<io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: long readUnsignedInt()>();

        return $l0;
    }

    static int access$700(io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader)
    {
        int $i0;
        io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader $r0;

        $r0 := @parameter0: io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader;

        $i0 = specialinvoke $r0.<io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: int readableBytes()>();

        return $i0;
    }

    static int access$800(io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader)
    {
        int $i0;
        io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader $r0;

        $r0 := @parameter0: io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader;

        $i0 = specialinvoke $r0.<io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: int readUnsignedShort()>();

        return $i0;
    }

    static int access$900(io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader)
    {
        int $i0;
        io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader $r0;

        $r0 := @parameter0: io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader;

        $i0 = specialinvoke $r0.<io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: int readUnsignedByte()>();

        return $i0;
    }

    private boolean readBytesUntilZero()
    {
        io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader $r0;
        int $i0;

        $r0 := @this: io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader;

     label1:
        $i0 = specialinvoke $r0.<io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: int readableBytes()>();

        if $i0 <= 0 goto label2;

        $i0 = specialinvoke $r0.<io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: int readUnsignedByte()>();

        if $i0 != 0 goto label1;

        return 1;

     label2:
        return 0;
    }

    private int readUnsignedByte()
    {
        io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader $r0;
        io.grpc.internal.GzipInflatingBuffer $r1;
        int $i0, $i1;
        byte[] $r2;
        byte $b2;
        io.grpc.internal.CompositeReadableBuffer $r3;
        java.util.zip.CRC32 $r4;

        $r0 := @this: io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader;

        $r1 = $r0.<io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: io.grpc.internal.GzipInflatingBuffer this$0>;

        $i0 = staticinvoke <io.grpc.internal.GzipInflatingBuffer: int access$000(io.grpc.internal.GzipInflatingBuffer)>($r1);

        $r1 = $r0.<io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: io.grpc.internal.GzipInflatingBuffer this$0>;

        $i1 = staticinvoke <io.grpc.internal.GzipInflatingBuffer: int access$100(io.grpc.internal.GzipInflatingBuffer)>($r1);

        $i0 = $i0 - $i1;

        if $i0 <= 0 goto label1;

        $r1 = $r0.<io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: io.grpc.internal.GzipInflatingBuffer this$0>;

        $r2 = staticinvoke <io.grpc.internal.GzipInflatingBuffer: byte[] access$200(io.grpc.internal.GzipInflatingBuffer)>($r1);

        $r1 = $r0.<io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: io.grpc.internal.GzipInflatingBuffer this$0>;

        $i0 = staticinvoke <io.grpc.internal.GzipInflatingBuffer: int access$100(io.grpc.internal.GzipInflatingBuffer)>($r1);

        $b2 = $r2[$i0];

        $i0 = $b2 & 255;

        $r1 = $r0.<io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: io.grpc.internal.GzipInflatingBuffer this$0>;

        staticinvoke <io.grpc.internal.GzipInflatingBuffer: int access$112(io.grpc.internal.GzipInflatingBuffer,int)>($r1, 1);

        goto label2;

     label1:
        $r1 = $r0.<io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: io.grpc.internal.GzipInflatingBuffer this$0>;

        $r3 = staticinvoke <io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.CompositeReadableBuffer access$300(io.grpc.internal.GzipInflatingBuffer)>($r1);

        $i0 = virtualinvoke $r3.<io.grpc.internal.CompositeReadableBuffer: int readUnsignedByte()>();

     label2:
        $r1 = $r0.<io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: io.grpc.internal.GzipInflatingBuffer this$0>;

        $r4 = staticinvoke <io.grpc.internal.GzipInflatingBuffer: java.util.zip.CRC32 access$400(io.grpc.internal.GzipInflatingBuffer)>($r1);

        virtualinvoke $r4.<java.util.zip.CRC32: void update(int)>($i0);

        $r1 = $r0.<io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: io.grpc.internal.GzipInflatingBuffer this$0>;

        staticinvoke <io.grpc.internal.GzipInflatingBuffer: int access$512(io.grpc.internal.GzipInflatingBuffer,int)>($r1, 1);

        return $i0;
    }

    private long readUnsignedInt()
    {
        io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader $r0;
        int $i0, $i1;
        long $l2, $l3;

        $r0 := @this: io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader;

        $i0 = specialinvoke $r0.<io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: int readUnsignedShort()>();

        $i1 = specialinvoke $r0.<io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: int readUnsignedShort()>();

        $l2 = (long) $i1;

        $l2 = $l2 << 16;

        $l3 = (long) $i0;

        $l2 = $l2 | $l3;

        return $l2;
    }

    private int readUnsignedShort()
    {
        io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader $r0;
        int $i0, $i1;

        $r0 := @this: io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader;

        $i0 = specialinvoke $r0.<io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: int readUnsignedByte()>();

        $i1 = specialinvoke $r0.<io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: int readUnsignedByte()>();

        $i1 = $i1 << 8;

        $i0 = $i0 | $i1;

        return $i0;
    }

    private int readableBytes()
    {
        io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader $r0;
        io.grpc.internal.GzipInflatingBuffer $r1;
        int $i0, $i1;
        io.grpc.internal.CompositeReadableBuffer $r2;

        $r0 := @this: io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader;

        $r1 = $r0.<io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: io.grpc.internal.GzipInflatingBuffer this$0>;

        $i0 = staticinvoke <io.grpc.internal.GzipInflatingBuffer: int access$000(io.grpc.internal.GzipInflatingBuffer)>($r1);

        $r1 = $r0.<io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: io.grpc.internal.GzipInflatingBuffer this$0>;

        $i1 = staticinvoke <io.grpc.internal.GzipInflatingBuffer: int access$100(io.grpc.internal.GzipInflatingBuffer)>($r1);

        $i0 = $i0 - $i1;

        $r1 = $r0.<io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: io.grpc.internal.GzipInflatingBuffer this$0>;

        $r2 = staticinvoke <io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.CompositeReadableBuffer access$300(io.grpc.internal.GzipInflatingBuffer)>($r1);

        $i1 = virtualinvoke $r2.<io.grpc.internal.CompositeReadableBuffer: int readableBytes()>();

        $i0 = $i0 + $i1;

        return $i0;
    }

    private void skipBytes(int)
    {
        io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader $r0;
        int $i0, $i1, $i2, $i3;
        io.grpc.internal.GzipInflatingBuffer $r1;
        java.util.zip.CRC32 $r2;
        byte[] $r3;
        io.grpc.internal.CompositeReadableBuffer $r4;

        $r0 := @this: io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader;

        $i0 := @parameter0: int;

        $r1 = $r0.<io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: io.grpc.internal.GzipInflatingBuffer this$0>;

        $i1 = staticinvoke <io.grpc.internal.GzipInflatingBuffer: int access$000(io.grpc.internal.GzipInflatingBuffer)>($r1);

        $r1 = $r0.<io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: io.grpc.internal.GzipInflatingBuffer this$0>;

        $i2 = staticinvoke <io.grpc.internal.GzipInflatingBuffer: int access$100(io.grpc.internal.GzipInflatingBuffer)>($r1);

        $i1 = $i1 - $i2;

        if $i1 <= 0 goto label1;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i0);

        $r1 = $r0.<io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: io.grpc.internal.GzipInflatingBuffer this$0>;

        $r2 = staticinvoke <io.grpc.internal.GzipInflatingBuffer: java.util.zip.CRC32 access$400(io.grpc.internal.GzipInflatingBuffer)>($r1);

        $r1 = $r0.<io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: io.grpc.internal.GzipInflatingBuffer this$0>;

        $r3 = staticinvoke <io.grpc.internal.GzipInflatingBuffer: byte[] access$200(io.grpc.internal.GzipInflatingBuffer)>($r1);

        $r1 = $r0.<io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: io.grpc.internal.GzipInflatingBuffer this$0>;

        $i2 = staticinvoke <io.grpc.internal.GzipInflatingBuffer: int access$100(io.grpc.internal.GzipInflatingBuffer)>($r1);

        virtualinvoke $r2.<java.util.zip.CRC32: void update(byte[],int,int)>($r3, $i2, $i1);

        $r1 = $r0.<io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: io.grpc.internal.GzipInflatingBuffer this$0>;

        staticinvoke <io.grpc.internal.GzipInflatingBuffer: int access$112(io.grpc.internal.GzipInflatingBuffer,int)>($r1, $i1);

        $i1 = $i0 - $i1;

        goto label2;

     label1:
        $i1 = $i0;

     label2:
        if $i1 <= 0 goto label4;

        $r3 = newarray (byte)[512];

        $i2 = 0;

     label3:
        if $i2 >= $i1 goto label4;

        $i3 = $i1 - $i2;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i3, 512);

        $r1 = $r0.<io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: io.grpc.internal.GzipInflatingBuffer this$0>;

        $r4 = staticinvoke <io.grpc.internal.GzipInflatingBuffer: io.grpc.internal.CompositeReadableBuffer access$300(io.grpc.internal.GzipInflatingBuffer)>($r1);

        virtualinvoke $r4.<io.grpc.internal.CompositeReadableBuffer: void readBytes(byte[],int,int)>($r3, 0, $i3);

        $r1 = $r0.<io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: io.grpc.internal.GzipInflatingBuffer this$0>;

        $r2 = staticinvoke <io.grpc.internal.GzipInflatingBuffer: java.util.zip.CRC32 access$400(io.grpc.internal.GzipInflatingBuffer)>($r1);

        virtualinvoke $r2.<java.util.zip.CRC32: void update(byte[],int,int)>($r3, 0, $i3);

        $i2 = $i2 + $i3;

        goto label3;

     label4:
        $r1 = $r0.<io.grpc.internal.GzipInflatingBuffer$GzipMetadataReader: io.grpc.internal.GzipInflatingBuffer this$0>;

        staticinvoke <io.grpc.internal.GzipInflatingBuffer: int access$512(io.grpc.internal.GzipInflatingBuffer,int)>($r1, $i0);

        return;
    }

io.grpc.internal.GzipInflatingBuffer$State
<io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State[] $VALUES>
<io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER>
<io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER_COMMENT>
<io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER_CRC>
<io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER_EXTRA>
<io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER_EXTRA_LEN>
<io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER_NAME>
<io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State INFLATER_NEEDS_INPUT>
<io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State INFLATING>
<io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State INITIALIZE_INFLATER>
<io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State TRAILER>
    private static io.grpc.internal.GzipInflatingBuffer$State[] $values()
    {
        io.grpc.internal.GzipInflatingBuffer$State[] $r0;
        io.grpc.internal.GzipInflatingBuffer$State $r1;

        $r0 = newarray (io.grpc.internal.GzipInflatingBuffer$State)[10];

        $r1 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER>;

        $r0[0] = $r1;

        $r1 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER_EXTRA_LEN>;

        $r0[1] = $r1;

        $r1 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER_EXTRA>;

        $r0[2] = $r1;

        $r1 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER_NAME>;

        $r0[3] = $r1;

        $r1 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER_COMMENT>;

        $r0[4] = $r1;

        $r1 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER_CRC>;

        $r0[5] = $r1;

        $r1 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State INITIALIZE_INFLATER>;

        $r0[6] = $r1;

        $r1 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State INFLATING>;

        $r0[7] = $r1;

        $r1 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State INFLATER_NEEDS_INPUT>;

        $r0[8] = $r1;

        $r1 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State TRAILER>;

        $r0[9] = $r1;

        return $r0;
    }

    static void <clinit>()
    {
        io.grpc.internal.GzipInflatingBuffer$State[] $r0;
        io.grpc.internal.GzipInflatingBuffer$State $r1;

        $r1 = new io.grpc.internal.GzipInflatingBuffer$State;

        specialinvoke $r1.<io.grpc.internal.GzipInflatingBuffer$State: void <init>(java.lang.String,int)>("HEADER", 0);

        <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER> = $r1;

        $r1 = new io.grpc.internal.GzipInflatingBuffer$State;

        specialinvoke $r1.<io.grpc.internal.GzipInflatingBuffer$State: void <init>(java.lang.String,int)>("HEADER_EXTRA_LEN", 1);

        <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER_EXTRA_LEN> = $r1;

        $r1 = new io.grpc.internal.GzipInflatingBuffer$State;

        specialinvoke $r1.<io.grpc.internal.GzipInflatingBuffer$State: void <init>(java.lang.String,int)>("HEADER_EXTRA", 2);

        <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER_EXTRA> = $r1;

        $r1 = new io.grpc.internal.GzipInflatingBuffer$State;

        specialinvoke $r1.<io.grpc.internal.GzipInflatingBuffer$State: void <init>(java.lang.String,int)>("HEADER_NAME", 3);

        <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER_NAME> = $r1;

        $r1 = new io.grpc.internal.GzipInflatingBuffer$State;

        specialinvoke $r1.<io.grpc.internal.GzipInflatingBuffer$State: void <init>(java.lang.String,int)>("HEADER_COMMENT", 4);

        <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER_COMMENT> = $r1;

        $r1 = new io.grpc.internal.GzipInflatingBuffer$State;

        specialinvoke $r1.<io.grpc.internal.GzipInflatingBuffer$State: void <init>(java.lang.String,int)>("HEADER_CRC", 5);

        <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State HEADER_CRC> = $r1;

        $r1 = new io.grpc.internal.GzipInflatingBuffer$State;

        specialinvoke $r1.<io.grpc.internal.GzipInflatingBuffer$State: void <init>(java.lang.String,int)>("INITIALIZE_INFLATER", 6);

        <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State INITIALIZE_INFLATER> = $r1;

        $r1 = new io.grpc.internal.GzipInflatingBuffer$State;

        specialinvoke $r1.<io.grpc.internal.GzipInflatingBuffer$State: void <init>(java.lang.String,int)>("INFLATING", 7);

        <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State INFLATING> = $r1;

        $r1 = new io.grpc.internal.GzipInflatingBuffer$State;

        specialinvoke $r1.<io.grpc.internal.GzipInflatingBuffer$State: void <init>(java.lang.String,int)>("INFLATER_NEEDS_INPUT", 8);

        <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State INFLATER_NEEDS_INPUT> = $r1;

        $r1 = new io.grpc.internal.GzipInflatingBuffer$State;

        specialinvoke $r1.<io.grpc.internal.GzipInflatingBuffer$State: void <init>(java.lang.String,int)>("TRAILER", 9);

        <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State TRAILER> = $r1;

        $r0 = staticinvoke <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State[] $values()>();

        <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State[] $VALUES> = $r0;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        io.grpc.internal.GzipInflatingBuffer$State $r0;
        java.lang.String $r1;
        int $i0;

        $r0 := @this: io.grpc.internal.GzipInflatingBuffer$State;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke $r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static io.grpc.internal.GzipInflatingBuffer$State[] values()
    {
        java.lang.Object $r0;
        io.grpc.internal.GzipInflatingBuffer$State[] $r1;

        $r1 = <io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (io.grpc.internal.GzipInflatingBuffer$State[]) $r0;

        return $r1;
    }

