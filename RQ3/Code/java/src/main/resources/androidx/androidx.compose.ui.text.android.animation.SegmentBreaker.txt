androidx.compose.ui.text.android.animation.SegmentBreaker
<androidx.compose.ui.text.android.animation.SegmentBreaker: androidx.compose.ui.text.android.animation.SegmentBreaker INSTANCE>
    private final java.util.List breakInWords(androidx.compose.ui.text.android.LayoutHelper)
    {
        androidx.compose.ui.text.android.animation.SegmentBreaker r0;
        androidx.compose.ui.text.android.LayoutHelper r1;
        java.lang.CharSequence r2;
        java.util.List r3, $r11;
        java.util.SortedSet r4;
        int i0, i1, i2, $i3, $i4, i5, i6;
        java.text.Bidi r5, $r12;
        android.text.Layout $r6;
        java.util.Locale $r7;
        java.text.BreakIterator $r8;
        java.lang.Iterable $r9, $r10;
        java.lang.Integer $r13;

        r0 := @this: androidx.compose.ui.text.android.animation.SegmentBreaker;

        r1 := @parameter0: androidx.compose.ui.text.android.LayoutHelper;

        $r6 = virtualinvoke r1.<androidx.compose.ui.text.android.LayoutHelper: android.text.Layout getLayout()>();

        r2 = virtualinvoke $r6.<android.text.Layout: java.lang.CharSequence getText()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "text");

        $r7 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r8 = staticinvoke <java.text.BreakIterator: java.text.BreakIterator getLineInstance(java.util.Locale)>($r7);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "BreakIterator.getLineInstance(Locale.getDefault())");

        r3 = specialinvoke r0.<androidx.compose.ui.text.android.animation.SegmentBreaker: java.util.List breakWithBreakIterator(java.lang.CharSequence,java.text.BreakIterator)>(r2, $r8);

        $r9 = (java.lang.Iterable) r3;

        r4 = staticinvoke <kotlin.collections.CollectionsKt: java.util.SortedSet toSortedSet(java.lang.Iterable)>($r9);

        i5 = 0;

        i0 = virtualinvoke r1.<androidx.compose.ui.text.android.LayoutHelper: int getParagraphCount()>();

     label1:
        if i5 >= i0 goto label6;

        $r12 = virtualinvoke r1.<androidx.compose.ui.text.android.LayoutHelper: java.text.Bidi analyzeBidi(int)>(i5);

        if $r12 == null goto label2;

        goto label3;

     label2:
        goto label5;

     label3:
        r5 = $r12;

        i1 = virtualinvoke r1.<androidx.compose.ui.text.android.LayoutHelper: int getParagraphStart(int)>(i5);

        i6 = 0;

        i2 = virtualinvoke r5.<java.text.Bidi: int getRunCount()>();

     label4:
        if i6 >= i2 goto label5;

        $i3 = virtualinvoke r5.<java.text.Bidi: int getRunStart(int)>(i6);

        $i4 = $i3 + i1;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        interfaceinvoke r4.<java.util.SortedSet: boolean add(java.lang.Object)>($r13);

        i6 = i6 + 1;

        goto label4;

     label5:
        i5 = i5 + 1;

        goto label1;

     label6:
        $r10 = (java.lang.Iterable) r4;

        $r11 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>($r10);

        return $r11;
    }

    private final java.util.List breakWithBreakIterator(java.lang.CharSequence, java.text.BreakIterator)
    {
        androidx.compose.ui.text.android.animation.SegmentBreaker r0;
        java.lang.CharSequence r1;
        java.text.BreakIterator r2;
        androidx.compose.ui.text.android.CharSequenceCharacterIterator r3, $r5;
        java.util.List r4;
        int $i0, $i1, $i2;
        java.lang.Integer[] $r6;
        java.lang.Integer $r7, $r9;
        java.text.CharacterIterator $r8;

        r0 := @this: androidx.compose.ui.text.android.animation.SegmentBreaker;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: java.text.BreakIterator;

        $r5 = new androidx.compose.ui.text.android.CharSequenceCharacterIterator;

        $i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        specialinvoke $r5.<androidx.compose.ui.text.android.CharSequenceCharacterIterator: void <init>(java.lang.CharSequence,int,int)>(r1, 0, $i0);

        r3 = $r5;

        $r6 = newarray (java.lang.Integer)[1];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r6[0] = $r7;

        r4 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List mutableListOf(java.lang.Object[])>($r6);

        $r8 = (java.text.CharacterIterator) r3;

        virtualinvoke r2.<java.text.BreakIterator: void setText(java.text.CharacterIterator)>($r8);

     label1:
        $i1 = virtualinvoke r2.<java.text.BreakIterator: int next()>();

        if $i1 == -1 goto label2;

        $i2 = virtualinvoke r2.<java.text.BreakIterator: int current()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r9);

        goto label1;

     label2:
        return r4;
    }

    public final java.util.List breakOffsets(androidx.compose.ui.text.android.LayoutHelper, androidx.compose.ui.text.android.animation.SegmentType)
    {
        androidx.compose.ui.text.android.animation.SegmentBreaker r0;
        androidx.compose.ui.text.android.LayoutHelper r1;
        androidx.compose.ui.text.android.animation.SegmentType r2;
        android.text.Layout r3;
        java.lang.CharSequence r4;
        int[] $r5;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8;
        java.util.Locale $r6;
        java.text.BreakIterator $r7;
        java.lang.Integer[] $r8, $r11, $r14;
        java.lang.Integer $r9, $r10, $r12, $r13, $r15, $r16;
        kotlin.NoWhenBranchMatchedException $r17;
        java.util.List $r18, r19, r20, r21, r22;
        boolean z2, z3, z5, z6;

        r0 := @this: androidx.compose.ui.text.android.animation.SegmentBreaker;

        r1 := @parameter0: androidx.compose.ui.text.android.LayoutHelper;

        r2 := @parameter1: androidx.compose.ui.text.android.animation.SegmentType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "layoutHelper");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "segmentType");

        r3 = virtualinvoke r1.<androidx.compose.ui.text.android.LayoutHelper: android.text.Layout getLayout()>();

        r4 = virtualinvoke r3.<android.text.Layout: java.lang.CharSequence getText()>();

        $r5 = <androidx.compose.ui.text.android.animation.SegmentBreaker$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke r2.<androidx.compose.ui.text.android.animation.SegmentType: int ordinal()>();

        $i1 = $r5[$i0];

        tableswitch($i1)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label05;
            case 4: goto label08;
            case 5: goto label09;
            default: goto label10;
        };

     label01:
        $r14 = newarray (java.lang.Integer)[2];

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r14[0] = $r15;

        $i4 = interfaceinvoke r4.<java.lang.CharSequence: int length()>();

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r14[1] = $r16;

        $r18 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object[])>($r14);

        goto label11;

     label02:
        $r11 = newarray (java.lang.Integer)[1];

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r11[0] = $r12;

        r19 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List mutableListOf(java.lang.Object[])>($r11);

        z2 = 0;

        z3 = 0;

        r20 = r19;

        i5 = 0;

        i6 = virtualinvoke r1.<androidx.compose.ui.text.android.LayoutHelper: int getParagraphCount()>();

     label03:
        if i5 >= i6 goto label04;

        $i3 = virtualinvoke r1.<androidx.compose.ui.text.android.LayoutHelper: int getParagraphEnd(int)>(i5);

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        interfaceinvoke r20.<java.util.List: boolean add(java.lang.Object)>($r13);

        i5 = i5 + 1;

        goto label03;

     label04:
        $r18 = r19;

        goto label11;

     label05:
        $r8 = newarray (java.lang.Integer)[1];

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r8[0] = $r9;

        r21 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List mutableListOf(java.lang.Object[])>($r8);

        z5 = 0;

        z6 = 0;

        r22 = r21;

        i7 = 0;

        i8 = virtualinvoke r3.<android.text.Layout: int getLineCount()>();

     label06:
        if i7 >= i8 goto label07;

        $i2 = virtualinvoke r3.<android.text.Layout: int getLineEnd(int)>(i7);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke r22.<java.util.List: boolean add(java.lang.Object)>($r10);

        i7 = i7 + 1;

        goto label06;

     label07:
        $r18 = r21;

        goto label11;

     label08:
        $r18 = specialinvoke r0.<androidx.compose.ui.text.android.animation.SegmentBreaker: java.util.List breakInWords(androidx.compose.ui.text.android.LayoutHelper)>(r1);

        goto label11;

     label09:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r4, "text");

        $r6 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r7 = staticinvoke <java.text.BreakIterator: java.text.BreakIterator getCharacterInstance(java.util.Locale)>($r6);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r7, "BreakIterator.getCharact\u2026ance(Locale.getDefault())");

        $r18 = specialinvoke r0.<androidx.compose.ui.text.android.animation.SegmentBreaker: java.util.List breakWithBreakIterator(java.lang.CharSequence,java.text.BreakIterator)>(r4, $r7);

        goto label11;

     label10:
        $r17 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r17.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r17;

     label11:
        return $r18;
    }

    public final java.util.List breakSegments(androidx.compose.ui.text.android.LayoutHelper, androidx.compose.ui.text.android.animation.SegmentType, boolean)
    {
        androidx.compose.ui.text.android.animation.SegmentBreaker r0;
        androidx.compose.ui.text.android.LayoutHelper r1;
        androidx.compose.ui.text.android.animation.SegmentType r2;
        boolean z0;
        int[] $r3;
        int $i0, $i1;
        kotlin.NoWhenBranchMatchedException $r4;
        java.util.List $r5;

        r0 := @this: androidx.compose.ui.text.android.animation.SegmentBreaker;

        r1 := @parameter0: androidx.compose.ui.text.android.LayoutHelper;

        r2 := @parameter1: androidx.compose.ui.text.android.animation.SegmentType;

        z0 := @parameter2: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "layoutHelper");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "segmentType");

        $r3 = <androidx.compose.ui.text.android.animation.SegmentBreaker$WhenMappings: int[] $EnumSwitchMapping$1>;

        $i0 = virtualinvoke r2.<androidx.compose.ui.text.android.animation.SegmentType: int ordinal()>();

        $i1 = $r3[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            default: goto label6;
        };

     label1:
        $r5 = specialinvoke r0.<androidx.compose.ui.text.android.animation.SegmentBreaker: java.util.List breakSegmentWithDocument(androidx.compose.ui.text.android.LayoutHelper)>(r1);

        goto label7;

     label2:
        $r5 = specialinvoke r0.<androidx.compose.ui.text.android.animation.SegmentBreaker: java.util.List breakSegmentWithParagraph(androidx.compose.ui.text.android.LayoutHelper)>(r1);

        goto label7;

     label3:
        $r5 = specialinvoke r0.<androidx.compose.ui.text.android.animation.SegmentBreaker: java.util.List breakSegmentWithLine(androidx.compose.ui.text.android.LayoutHelper,boolean)>(r1, z0);

        goto label7;

     label4:
        $r5 = specialinvoke r0.<androidx.compose.ui.text.android.animation.SegmentBreaker: java.util.List breakSegmentWithWord(androidx.compose.ui.text.android.LayoutHelper,boolean)>(r1, z0);

        goto label7;

     label5:
        $r5 = specialinvoke r0.<androidx.compose.ui.text.android.animation.SegmentBreaker: java.util.List breakSegmentWithChar(androidx.compose.ui.text.android.LayoutHelper,boolean)>(r1, z0);

        goto label7;

     label6:
        $r4 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r4.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r4;

     label7:
        return $r5;
    }

    private final java.util.List breakSegmentWithDocument(androidx.compose.ui.text.android.LayoutHelper)
    {
        androidx.compose.ui.text.android.animation.SegmentBreaker r0;
        androidx.compose.ui.text.android.LayoutHelper r1;
        androidx.compose.ui.text.android.animation.Segment $r2;
        android.text.Layout $r3, $r5, $r6;
        java.lang.CharSequence $r4;
        int $i0, $i1, $i2;
        java.util.List $r7;

        r0 := @this: androidx.compose.ui.text.android.animation.SegmentBreaker;

        r1 := @parameter0: androidx.compose.ui.text.android.LayoutHelper;

        $r2 = new androidx.compose.ui.text.android.animation.Segment;

        $r3 = virtualinvoke r1.<androidx.compose.ui.text.android.LayoutHelper: android.text.Layout getLayout()>();

        $r4 = virtualinvoke $r3.<android.text.Layout: java.lang.CharSequence getText()>();

        $i0 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        $r5 = virtualinvoke r1.<androidx.compose.ui.text.android.LayoutHelper: android.text.Layout getLayout()>();

        $i1 = virtualinvoke $r5.<android.text.Layout: int getWidth()>();

        $r6 = virtualinvoke r1.<androidx.compose.ui.text.android.LayoutHelper: android.text.Layout getLayout()>();

        $i2 = virtualinvoke $r6.<android.text.Layout: int getHeight()>();

        specialinvoke $r2.<androidx.compose.ui.text.android.animation.Segment: void <init>(int,int,int,int,int,int)>(0, $i0, 0, 0, $i1, $i2);

        $r7 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r7;
    }

    private final java.util.List breakSegmentWithParagraph(androidx.compose.ui.text.android.LayoutHelper)
    {
        androidx.compose.ui.text.android.animation.SegmentBreaker r0;
        androidx.compose.ui.text.android.LayoutHelper r1;
        java.util.List r2;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, i8;
        java.util.ArrayList $r3;
        androidx.compose.ui.text.android.animation.Segment $r4;
        boolean z1;
        android.text.Layout r5;

        r0 := @this: androidx.compose.ui.text.android.animation.SegmentBreaker;

        r1 := @parameter0: androidx.compose.ui.text.android.LayoutHelper;

        z1 = 0;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r2 = (java.util.List) $r3;

        r5 = virtualinvoke r1.<androidx.compose.ui.text.android.LayoutHelper: android.text.Layout getLayout()>();

        i8 = 0;

        i0 = virtualinvoke r1.<androidx.compose.ui.text.android.LayoutHelper: int getParagraphCount()>();

     label1:
        if i8 >= i0 goto label2;

        i1 = virtualinvoke r1.<androidx.compose.ui.text.android.LayoutHelper: int getParagraphStart(int)>(i8);

        i2 = virtualinvoke r1.<androidx.compose.ui.text.android.LayoutHelper: int getParagraphEnd(int)>(i8);

        i3 = staticinvoke <androidx.compose.ui.text.android.LayoutCompatKt: int getLineForOffset(android.text.Layout,int,boolean)>(r5, i1, 0);

        i4 = staticinvoke <androidx.compose.ui.text.android.LayoutCompatKt: int getLineForOffset(android.text.Layout,int,boolean)>(r5, i2, 1);

        $r4 = new androidx.compose.ui.text.android.animation.Segment;

        $i5 = virtualinvoke r5.<android.text.Layout: int getLineTop(int)>(i3);

        $i6 = virtualinvoke r5.<android.text.Layout: int getWidth()>();

        $i7 = virtualinvoke r5.<android.text.Layout: int getLineBottom(int)>(i4);

        specialinvoke $r4.<androidx.compose.ui.text.android.animation.Segment: void <init>(int,int,int,int,int,int)>(i1, i2, 0, $i5, $i6, $i7);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r4);

        i8 = i8 + 1;

        goto label1;

     label2:
        return r2;
    }

    private final java.util.List breakSegmentWithLine(androidx.compose.ui.text.android.LayoutHelper, boolean)
    {
        androidx.compose.ui.text.android.animation.SegmentBreaker r0;
        androidx.compose.ui.text.android.LayoutHelper r1;
        boolean z0, z2, z3, z4;
        java.util.List r2;
        int i0, $i1, i2, $i3, $i4, $i6, $i7, $i8, $i9;
        java.util.ArrayList $r3;
        android.text.Layout $r4, r5;
        double $d0, $d1, $d2, $d3;
        float $f0, $f1, f2, f3;
        androidx.compose.ui.text.android.animation.Segment $r7;

        r0 := @this: androidx.compose.ui.text.android.animation.SegmentBreaker;

        r1 := @parameter0: androidx.compose.ui.text.android.LayoutHelper;

        z0 := @parameter1: boolean;

        z2 = 0;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r2 = (java.util.List) $r3;

        r5 = virtualinvoke r1.<androidx.compose.ui.text.android.LayoutHelper: android.text.Layout getLayout()>();

        i2 = 0;

        $r4 = virtualinvoke r1.<androidx.compose.ui.text.android.LayoutHelper: android.text.Layout getLayout()>();

        i0 = virtualinvoke $r4.<android.text.Layout: int getLineCount()>();

     label1:
        if i2 >= i0 goto label6;

        $r7 = new androidx.compose.ui.text.android.animation.Segment;

        $i3 = virtualinvoke r5.<android.text.Layout: int getLineStart(int)>(i2);

        $i4 = virtualinvoke r5.<android.text.Layout: int getLineEnd(int)>(i2);

        if z0 == 0 goto label2;

        f2 = virtualinvoke r5.<android.text.Layout: float getLineLeft(int)>(i2);

        z3 = 0;

        $d2 = (double) f2;

        $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d2);

        $f1 = (float) $d3;

        $i1 = (int) $f1;

        $i6 = $i1;

        goto label3;

     label2:
        $i6 = 0;

     label3:
        $i7 = virtualinvoke r5.<android.text.Layout: int getLineTop(int)>(i2);

        if z0 == 0 goto label4;

        f3 = virtualinvoke r5.<android.text.Layout: float getLineRight(int)>(i2);

        z4 = 0;

        $d0 = (double) f3;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $f0 = (float) $d1;

        $i8 = (int) $f0;

        goto label5;

     label4:
        $i8 = virtualinvoke r5.<android.text.Layout: int getWidth()>();

     label5:
        $i9 = virtualinvoke r5.<android.text.Layout: int getLineBottom(int)>(i2);

        specialinvoke $r7.<androidx.compose.ui.text.android.animation.Segment: void <init>(int,int,int,int,int,int)>($i3, $i4, $i6, $i7, $i8, $i9);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r7);

        i2 = i2 + 1;

        goto label1;

     label6:
        return r2;
    }

    private final java.util.List breakSegmentWithWord(androidx.compose.ui.text.android.LayoutHelper, boolean)
    {
        androidx.compose.ui.text.android.animation.SegmentBreaker r0;
        androidx.compose.ui.text.android.LayoutHelper r1;
        boolean z0, z2, z3, $z4, $z5, z9, $z10, $z11, z12, $z13, z14, z15, z16;
        android.text.Layout r2;
        int i0, i1, i2, i3, i4, $i5, $i6, i10, i11, i12, i13, $i14, $i15;
        java.util.Iterator r3;
        java.util.List r4, r6, $r10, $r18;
        java.lang.Object r5, r19;
        androidx.compose.ui.text.android.animation.Segment r7, $r20;
        android.text.TextPaint $r8;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        float $f0, $f1, $f2, $f3, f4, f5;
        androidx.compose.ui.text.android.animation.SegmentType $r9;
        java.util.ArrayList $r11;
        java.lang.Number $r12, $r13;
        java.lang.CharSequence $r14;
        char $c7;
        java.lang.Iterable $r17;

        r0 := @this: androidx.compose.ui.text.android.animation.SegmentBreaker;

        r1 := @parameter0: androidx.compose.ui.text.android.LayoutHelper;

        z0 := @parameter1: boolean;

        r2 = virtualinvoke r1.<androidx.compose.ui.text.android.LayoutHelper: android.text.Layout getLayout()>();

        $r8 = virtualinvoke r2.<android.text.Layout: android.text.TextPaint getPaint()>();

        $f3 = virtualinvoke $r8.<android.text.TextPaint: float measureText(java.lang.String)>(" ");

        $d0 = (double) $f3;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $f0 = (float) $d1;

        i0 = (int) $f0;

        $r9 = <androidx.compose.ui.text.android.animation.SegmentType: androidx.compose.ui.text.android.animation.SegmentType Word>;

        $r10 = virtualinvoke r0.<androidx.compose.ui.text.android.animation.SegmentBreaker: java.util.List breakOffsets(androidx.compose.ui.text.android.LayoutHelper,androidx.compose.ui.text.android.animation.SegmentType)>(r1, $r9);

        $r17 = (java.lang.Iterable) $r10;

        r3 = interfaceinvoke $r17.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z4 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z4 != 0 goto label01;

        $r18 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        goto label12;

     label01:
        z9 = 0;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r4 = (java.util.List) $r11;

        r19 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

     label02:
        $z5 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label11;

        r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (java.lang.Number) r5;

        i1 = virtualinvoke $r12.<java.lang.Number: int intValue()>();

        $r13 = (java.lang.Number) r19;

        i2 = virtualinvoke $r13.<java.lang.Number: int intValue()>();

        r6 = r4;

        i3 = staticinvoke <androidx.compose.ui.text.android.LayoutCompatKt: int getLineForOffset(android.text.Layout,int,boolean)>(r2, i2, 0);

        $i5 = virtualinvoke r2.<android.text.Layout: int getParagraphDirection(int)>(i3);

        if $i5 != -1 goto label03;

        $z10 = 1;

        goto label04;

     label03:
        $z10 = 0;

     label04:
        z2 = $z10;

        z3 = virtualinvoke r2.<android.text.Layout: boolean isRtlCharAt(int)>(i2);

        if z3 != z2 goto label05;

        $z11 = 1;

        goto label06;

     label05:
        $z11 = 0;

     label06:
        f4 = virtualinvoke r1.<androidx.compose.ui.text.android.LayoutHelper: float getHorizontalPosition(int,boolean,boolean)>(i2, $z11, 0);

        z12 = 0;

        $d2 = (double) f4;

        $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d2);

        $f1 = (float) $d3;

        i4 = (int) $f1;

        if z3 != z2 goto label07;

        $z13 = 1;

        goto label08;

     label07:
        $z13 = 0;

     label08:
        f5 = virtualinvoke r1.<androidx.compose.ui.text.android.LayoutHelper: float getHorizontalPosition(int,boolean,boolean)>(i1, $z13, 1);

        z14 = 0;

        $d4 = (double) f5;

        $d5 = staticinvoke <java.lang.Math: double ceil(double)>($d4);

        $f2 = (float) $d5;

        i10 = (int) $f2;

        z15 = 0;

        i11 = staticinvoke <java.lang.Math: int min(int,int)>(i4, i10);

        z16 = 0;

        i12 = staticinvoke <java.lang.Math: int max(int,int)>(i4, i10);

        if z0 == 0 goto label10;

        if i1 == 0 goto label10;

        $r14 = virtualinvoke r2.<android.text.Layout: java.lang.CharSequence getText()>();

        $i6 = i1 - 1;

        $c7 = interfaceinvoke $r14.<java.lang.CharSequence: char charAt(int)>($i6);

        if $c7 != 32 goto label10;

        i13 = virtualinvoke r2.<android.text.Layout: int getLineEnd(int)>(i3);

        if i13 == i1 goto label10;

        if z3 == 0 goto label09;

        i11 = i11 + i0;

        goto label10;

     label09:
        i12 = i12 - i0;

     label10:
        $r20 = new androidx.compose.ui.text.android.animation.Segment;

        $i14 = virtualinvoke r2.<android.text.Layout: int getLineTop(int)>(i3);

        $i15 = virtualinvoke r2.<android.text.Layout: int getLineBottom(int)>(i3);

        specialinvoke $r20.<androidx.compose.ui.text.android.animation.Segment: void <init>(int,int,int,int,int,int)>(i2, i1, i11, $i14, i12, $i15);

        r7 = $r20;

        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r7);

        r19 = r5;

        goto label02;

     label11:
        $r18 = r4;

     label12:
        return $r18;
    }

    private final java.util.List breakSegmentWithChar(androidx.compose.ui.text.android.LayoutHelper, boolean)
    {
        androidx.compose.ui.text.android.animation.SegmentBreaker r0;
        androidx.compose.ui.text.android.LayoutHelper r1;
        boolean z0, z3, z4, z5, $z6, $z7, $z10, z12, $z13, $z14, z15, $z16, z17, z18;
        java.util.List r2, r4, r7, $r11;
        java.util.Iterator r3;
        java.lang.Object r5, r21;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i10, $i12, i13;
        android.text.Layout r6;
        kotlin.Unit r8;
        java.util.ArrayList $r9, $r12;
        androidx.compose.ui.text.android.animation.SegmentType $r10;
        java.lang.Number $r13, $r14;
        double $d0, $d1, $d2, $d3;
        float $f0, $f1, f2, f3;
        androidx.compose.ui.text.android.animation.Segment $r15;
        java.lang.CharSequence $r18;
        char $c11;
        java.lang.Iterable $r20;

        r0 := @this: androidx.compose.ui.text.android.animation.SegmentBreaker;

        r1 := @parameter0: androidx.compose.ui.text.android.LayoutHelper;

        z0 := @parameter1: boolean;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r2 = (java.util.List) $r9;

        $r10 = <androidx.compose.ui.text.android.animation.SegmentType: androidx.compose.ui.text.android.animation.SegmentType Character>;

        $r11 = virtualinvoke r0.<androidx.compose.ui.text.android.animation.SegmentBreaker: java.util.List breakOffsets(androidx.compose.ui.text.android.LayoutHelper,androidx.compose.ui.text.android.animation.SegmentType)>(r1, $r10);

        $r20 = (java.lang.Iterable) $r11;

        r3 = interfaceinvoke $r20.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z6 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z6 != 0 goto label01;

        staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        goto label11;

     label01:
        z12 = 0;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r4 = (java.util.List) $r12;

        r21 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

     label02:
        $z7 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label11;

        r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (java.lang.Number) r5;

        i0 = virtualinvoke $r13.<java.lang.Number: int intValue()>();

        $r14 = (java.lang.Number) r21;

        i1 = virtualinvoke $r14.<java.lang.Number: int intValue()>();

        r7 = r4;

        r6 = virtualinvoke r1.<androidx.compose.ui.text.android.LayoutHelper: android.text.Layout getLayout()>();

        if z0 == 0 goto label03;

        $i10 = i1 + 1;

        if i0 != $i10 goto label03;

        $r18 = virtualinvoke r6.<android.text.Layout: java.lang.CharSequence getText()>();

        $c11 = interfaceinvoke $r18.<java.lang.CharSequence: char charAt(int)>(i1);

        $z10 = virtualinvoke r1.<androidx.compose.ui.text.android.LayoutHelper: boolean isLineEndSpace(char)>($c11);

        if $z10 == 0 goto label03;

        goto label10;

     label03:
        i2 = staticinvoke <androidx.compose.ui.text.android.LayoutCompatKt: int getLineForOffset(android.text.Layout,int,boolean)>(r6, i1, 0);

        $i12 = virtualinvoke r6.<android.text.Layout: int getParagraphDirection(int)>(i2);

        if $i12 != -1 goto label04;

        $z13 = 1;

        goto label05;

     label04:
        $z13 = 0;

     label05:
        z3 = $z13;

        z4 = virtualinvoke r6.<android.text.Layout: boolean isRtlCharAt(int)>(i1);

        if z4 != z3 goto label06;

        $z14 = 1;

        goto label07;

     label06:
        $z14 = 0;

     label07:
        f2 = virtualinvoke r1.<androidx.compose.ui.text.android.LayoutHelper: float getHorizontalPosition(int,boolean,boolean)>(i1, $z14, 0);

        z15 = 0;

        $d0 = (double) f2;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $f0 = (float) $d1;

        i3 = (int) $f0;

        if z4 != z3 goto label08;

        $z16 = 1;

        goto label09;

     label08:
        $z16 = 0;

     label09:
        f3 = virtualinvoke r1.<androidx.compose.ui.text.android.LayoutHelper: float getHorizontalPosition(int,boolean,boolean)>(i0, $z16, 1);

        z5 = 0;

        $d2 = (double) f3;

        $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d2);

        $f1 = (float) $d3;

        i13 = (int) $f1;

        $r15 = new androidx.compose.ui.text.android.animation.Segment;

        z17 = 0;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>(i3, i13);

        $i5 = virtualinvoke r6.<android.text.Layout: int getLineTop(int)>(i2);

        z18 = 0;

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>(i3, i13);

        $i7 = virtualinvoke r6.<android.text.Layout: int getLineBottom(int)>(i2);

        specialinvoke $r15.<androidx.compose.ui.text.android.animation.Segment: void <init>(int,int,int,int,int,int)>(i1, i0, $i4, $i5, $i6, $i7);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r15);

     label10:
        r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r8);

        r21 = r5;

        goto label02;

     label11:
        return r2;
    }

    private void <init>()
    {
        androidx.compose.ui.text.android.animation.SegmentBreaker r0;

        r0 := @this: androidx.compose.ui.text.android.animation.SegmentBreaker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        androidx.compose.ui.text.android.animation.SegmentBreaker r0, $r1;

        $r1 = new androidx.compose.ui.text.android.animation.SegmentBreaker;

        specialinvoke $r1.<androidx.compose.ui.text.android.animation.SegmentBreaker: void <init>()>();

        r0 = $r1;

        <androidx.compose.ui.text.android.animation.SegmentBreaker: androidx.compose.ui.text.android.animation.SegmentBreaker INSTANCE> = r0;

        return;
    }

androidx.compose.ui.text.android.animation.SegmentBreaker$WhenMappings
<androidx.compose.ui.text.android.animation.SegmentBreaker$WhenMappings: int[] $EnumSwitchMapping$0>
<androidx.compose.ui.text.android.animation.SegmentBreaker$WhenMappings: int[] $EnumSwitchMapping$1>
    static void <clinit>()
    {
        androidx.compose.ui.text.android.animation.SegmentType[] $r0, $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        int[] $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23;
        androidx.compose.ui.text.android.animation.SegmentType $r2, $r4, $r6, $r8, $r10, $r14, $r16, $r18, $r20, $r22;

        $r0 = staticinvoke <androidx.compose.ui.text.android.animation.SegmentType: androidx.compose.ui.text.android.animation.SegmentType[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <androidx.compose.ui.text.android.animation.SegmentBreaker$WhenMappings: int[] $EnumSwitchMapping$0> = $r1;

        $r3 = <androidx.compose.ui.text.android.animation.SegmentBreaker$WhenMappings: int[] $EnumSwitchMapping$0>;

        $r2 = <androidx.compose.ui.text.android.animation.SegmentType: androidx.compose.ui.text.android.animation.SegmentType Document>;

        $i1 = virtualinvoke $r2.<androidx.compose.ui.text.android.animation.SegmentType: int ordinal()>();

        $r3[$i1] = 1;

        $r5 = <androidx.compose.ui.text.android.animation.SegmentBreaker$WhenMappings: int[] $EnumSwitchMapping$0>;

        $r4 = <androidx.compose.ui.text.android.animation.SegmentType: androidx.compose.ui.text.android.animation.SegmentType Paragraph>;

        $i2 = virtualinvoke $r4.<androidx.compose.ui.text.android.animation.SegmentType: int ordinal()>();

        $r5[$i2] = 2;

        $r7 = <androidx.compose.ui.text.android.animation.SegmentBreaker$WhenMappings: int[] $EnumSwitchMapping$0>;

        $r6 = <androidx.compose.ui.text.android.animation.SegmentType: androidx.compose.ui.text.android.animation.SegmentType Line>;

        $i3 = virtualinvoke $r6.<androidx.compose.ui.text.android.animation.SegmentType: int ordinal()>();

        $r7[$i3] = 3;

        $r9 = <androidx.compose.ui.text.android.animation.SegmentBreaker$WhenMappings: int[] $EnumSwitchMapping$0>;

        $r8 = <androidx.compose.ui.text.android.animation.SegmentType: androidx.compose.ui.text.android.animation.SegmentType Word>;

        $i4 = virtualinvoke $r8.<androidx.compose.ui.text.android.animation.SegmentType: int ordinal()>();

        $r9[$i4] = 4;

        $r11 = <androidx.compose.ui.text.android.animation.SegmentBreaker$WhenMappings: int[] $EnumSwitchMapping$0>;

        $r10 = <androidx.compose.ui.text.android.animation.SegmentType: androidx.compose.ui.text.android.animation.SegmentType Character>;

        $i5 = virtualinvoke $r10.<androidx.compose.ui.text.android.animation.SegmentType: int ordinal()>();

        $r11[$i5] = 5;

        $r12 = staticinvoke <androidx.compose.ui.text.android.animation.SegmentType: androidx.compose.ui.text.android.animation.SegmentType[] values()>();

        $i6 = lengthof $r12;

        $r13 = newarray (int)[$i6];

        <androidx.compose.ui.text.android.animation.SegmentBreaker$WhenMappings: int[] $EnumSwitchMapping$1> = $r13;

        $r15 = <androidx.compose.ui.text.android.animation.SegmentBreaker$WhenMappings: int[] $EnumSwitchMapping$1>;

        $r14 = <androidx.compose.ui.text.android.animation.SegmentType: androidx.compose.ui.text.android.animation.SegmentType Document>;

        $i7 = virtualinvoke $r14.<androidx.compose.ui.text.android.animation.SegmentType: int ordinal()>();

        $r15[$i7] = 1;

        $r17 = <androidx.compose.ui.text.android.animation.SegmentBreaker$WhenMappings: int[] $EnumSwitchMapping$1>;

        $r16 = <androidx.compose.ui.text.android.animation.SegmentType: androidx.compose.ui.text.android.animation.SegmentType Paragraph>;

        $i8 = virtualinvoke $r16.<androidx.compose.ui.text.android.animation.SegmentType: int ordinal()>();

        $r17[$i8] = 2;

        $r19 = <androidx.compose.ui.text.android.animation.SegmentBreaker$WhenMappings: int[] $EnumSwitchMapping$1>;

        $r18 = <androidx.compose.ui.text.android.animation.SegmentType: androidx.compose.ui.text.android.animation.SegmentType Line>;

        $i9 = virtualinvoke $r18.<androidx.compose.ui.text.android.animation.SegmentType: int ordinal()>();

        $r19[$i9] = 3;

        $r21 = <androidx.compose.ui.text.android.animation.SegmentBreaker$WhenMappings: int[] $EnumSwitchMapping$1>;

        $r20 = <androidx.compose.ui.text.android.animation.SegmentType: androidx.compose.ui.text.android.animation.SegmentType Word>;

        $i10 = virtualinvoke $r20.<androidx.compose.ui.text.android.animation.SegmentType: int ordinal()>();

        $r21[$i10] = 4;

        $r23 = <androidx.compose.ui.text.android.animation.SegmentBreaker$WhenMappings: int[] $EnumSwitchMapping$1>;

        $r22 = <androidx.compose.ui.text.android.animation.SegmentType: androidx.compose.ui.text.android.animation.SegmentType Character>;

        $i11 = virtualinvoke $r22.<androidx.compose.ui.text.android.animation.SegmentType: int ordinal()>();

        $r23[$i11] = 5;

        return;
    }

