androidx.ui.core.LayoutNodeWrapper
<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper$Companion Companion>
<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.LayoutNode layoutNode>
<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper wrapped>
<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper wrappedBy>
<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.Constraints measurementConstraints>
<androidx.ui.core.LayoutNodeWrapper: boolean invalidateLayerOnBoundsChange>
<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.MeasureScope$MeasureResult _measureResult>
<androidx.ui.core.LayoutNodeWrapper: androidx.ui.unit.IntPxPosition position>
<androidx.ui.core.LayoutNodeWrapper: android.graphics.RectF rectCache>
<androidx.ui.core.LayoutNodeWrapper: java.lang.String ExpectAttachedLayoutCoordinates>
<androidx.ui.core.LayoutNodeWrapper: java.lang.String UnmeasuredError>
    public void <init>(androidx.ui.core.LayoutNode)
    {
        androidx.ui.core.LayoutNodeWrapper r0;
        androidx.ui.core.LayoutNode r1;
        androidx.ui.core.Constraints $r2;
        androidx.ui.unit.IntPxPosition$Companion $r3;
        androidx.ui.unit.IntPxPosition $r4;

        r0 := @this: androidx.ui.core.LayoutNodeWrapper;

        r1 := @parameter0: androidx.ui.core.LayoutNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "layoutNode");

        specialinvoke r0.<androidx.ui.core.Placeable: void <init>()>();

        r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.LayoutNode layoutNode> = r1;

        $r2 = new androidx.ui.core.Constraints;

        specialinvoke $r2.<androidx.ui.core.Constraints: void <init>(int,int,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0, 0, 0, 0, 15, null);

        r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.Constraints measurementConstraints> = $r2;

        r0.<androidx.ui.core.LayoutNodeWrapper: boolean invalidateLayerOnBoundsChange> = 1;

        $r3 = <androidx.ui.unit.IntPxPosition: androidx.ui.unit.IntPxPosition$Companion Companion>;

        $r4 = virtualinvoke $r3.<androidx.ui.unit.IntPxPosition$Companion: androidx.ui.unit.IntPxPosition getOrigin()>();

        r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.unit.IntPxPosition position> = $r4;

        return;
    }

    public final androidx.ui.core.LayoutNode getLayoutNode$ui_platform_release()
    {
        androidx.ui.core.LayoutNodeWrapper r0;
        androidx.ui.core.LayoutNode $r1;

        r0 := @this: androidx.ui.core.LayoutNodeWrapper;

        $r1 = r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.LayoutNode layoutNode>;

        return $r1;
    }

    public androidx.ui.core.LayoutNodeWrapper getWrapped$ui_platform_release()
    {
        androidx.ui.core.LayoutNodeWrapper r0, $r1;

        r0 := @this: androidx.ui.core.LayoutNodeWrapper;

        $r1 = r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper wrapped>;

        return $r1;
    }

    public final androidx.ui.core.LayoutNodeWrapper getWrappedBy$ui_platform_release()
    {
        androidx.ui.core.LayoutNodeWrapper r0, $r1;

        r0 := @this: androidx.ui.core.LayoutNodeWrapper;

        $r1 = r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper wrappedBy>;

        return $r1;
    }

    public final void setWrappedBy$ui_platform_release(androidx.ui.core.LayoutNodeWrapper)
    {
        androidx.ui.core.LayoutNodeWrapper r0, r1;

        r0 := @this: androidx.ui.core.LayoutNodeWrapper;

        r1 := @parameter0: androidx.ui.core.LayoutNodeWrapper;

        r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper wrappedBy> = r1;

        return;
    }

<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.MeasureScope getMeasureScope()>
    protected final androidx.ui.unit.IntPxSize getMeasuredSize()
    {
        androidx.ui.core.LayoutNodeWrapper r0;
        int i0, i1, i2, i3;
        long l4, l5, $l6, $l7, $l8, $l9;
        androidx.ui.core.MeasureScope$MeasureResult $r1, $r2;
        androidx.ui.unit.IntPxSize $r3;

        r0 := @this: androidx.ui.core.LayoutNodeWrapper;

        $r1 = virtualinvoke r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.MeasureScope$MeasureResult getMeasureResult()>();

        i0 = interfaceinvoke $r1.<androidx.ui.core.MeasureScope$MeasureResult: int getWidth()>();

        $r2 = virtualinvoke r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.MeasureScope$MeasureResult getMeasureResult()>();

        i1 = interfaceinvoke $r2.<androidx.ui.core.MeasureScope$MeasureResult: int getHeight()>();

        i2 = i0;

        i3 = i1;

        $l6 = (long) i2;

        $l9 = $l6 << 32;

        $l7 = (long) i3;

        $l8 = $l7 & 4294967295L;

        l4 = $l9 | $l8;

        l5 = l4;

        $r3 = new androidx.ui.unit.IntPxSize;

        specialinvoke $r3.<androidx.ui.unit.IntPxSize: void <init>(long)>(l5);

        return $r3;
    }

    public final androidx.ui.unit.IntPxSize getSize()
    {
        androidx.ui.core.LayoutNodeWrapper r0;
        androidx.ui.unit.IntPxSize $r1;

        r0 := @this: androidx.ui.core.LayoutNodeWrapper;

        $r1 = virtualinvoke r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.unit.IntPxSize getMeasuredSize()>();

        return $r1;
    }

    protected final androidx.ui.core.Constraints getMeasurementConstraints()
    {
        androidx.ui.core.LayoutNodeWrapper r0;
        androidx.ui.core.Constraints $r1;

        r0 := @this: androidx.ui.core.LayoutNodeWrapper;

        $r1 = r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.Constraints measurementConstraints>;

        return $r1;
    }

    public final void setMeasurementConstraints(androidx.ui.core.Constraints)
    {
        androidx.ui.core.LayoutNodeWrapper r0;
        androidx.ui.core.Constraints r1;

        r0 := @this: androidx.ui.core.LayoutNodeWrapper;

        r1 := @parameter0: androidx.ui.core.Constraints;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.Constraints measurementConstraints> = r1;

        return;
    }

    public boolean getInvalidateLayerOnBoundsChange()
    {
        androidx.ui.core.LayoutNodeWrapper r0;
        boolean $z0;

        r0 := @this: androidx.ui.core.LayoutNodeWrapper;

        $z0 = r0.<androidx.ui.core.LayoutNodeWrapper: boolean invalidateLayerOnBoundsChange>;

        return $z0;
    }

    public final androidx.ui.core.MeasureScope$MeasureResult getMeasureResult()
    {
        androidx.ui.core.LayoutNodeWrapper r0;
        androidx.ui.core.MeasureScope$MeasureResult r1;
        java.lang.String r2, $r4;
        boolean z0;
        java.lang.IllegalStateException $r3;
        java.lang.Throwable $r5;

        r0 := @this: androidx.ui.core.LayoutNodeWrapper;

        r1 = r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.MeasureScope$MeasureResult _measureResult>;

        if r1 != null goto label1;

        r2 = "Asking for measurement result of unmeasured layout modifier";

        z0 = 0;

        $r3 = new java.lang.IllegalStateException;

        $r4 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);

        $r5 = (java.lang.Throwable) $r3;

        throw $r5;

     label1:
        return r1;
    }

    public final void setMeasureResult$ui_platform_release(androidx.ui.core.MeasureScope$MeasureResult)
    {
        androidx.ui.core.LayoutNodeWrapper r0;
        androidx.ui.core.MeasureScope$MeasureResult r1, r2, r4;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3;
        androidx.ui.unit.IntPx $r3, $r5;
        androidx.ui.core.OwnedLayer r6;

        r0 := @this: androidx.ui.core.LayoutNodeWrapper;

        r1 := @parameter0: androidx.ui.core.MeasureScope$MeasureResult;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $z0 = virtualinvoke r0.<androidx.ui.core.LayoutNodeWrapper: boolean getInvalidateLayerOnBoundsChange()>();

        if $z0 == 0 goto label7;

        $i0 = interfaceinvoke r1.<androidx.ui.core.MeasureScope$MeasureResult: int getWidth()>();

        r2 = r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.MeasureScope$MeasureResult _measureResult>;

        if r2 != null goto label1;

        $r3 = (androidx.ui.unit.IntPx) null;

        goto label2;

     label1:
        $i1 = interfaceinvoke r2.<androidx.ui.core.MeasureScope$MeasureResult: int getWidth()>();

        $r3 = staticinvoke <androidx.ui.unit.IntPx: androidx.ui.unit.IntPx box-impl(int)>($i1);

     label2:
        $z1 = staticinvoke <androidx.ui.unit.IntPx: boolean equals-impl(int,java.lang.Object)>($i0, $r3);

        if $z1 == 0 goto label5;

        $i2 = interfaceinvoke r1.<androidx.ui.core.MeasureScope$MeasureResult: int getHeight()>();

        r4 = r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.MeasureScope$MeasureResult _measureResult>;

        if r4 != null goto label3;

        $r5 = (androidx.ui.unit.IntPx) null;

        goto label4;

     label3:
        $i3 = interfaceinvoke r4.<androidx.ui.core.MeasureScope$MeasureResult: int getHeight()>();

        $r5 = staticinvoke <androidx.ui.unit.IntPx: androidx.ui.unit.IntPx box-impl(int)>($i3);

     label4:
        $z2 = staticinvoke <androidx.ui.unit.IntPx: boolean equals-impl(int,java.lang.Object)>($i2, $r5);

        if $z2 != 0 goto label7;

     label5:
        r6 = virtualinvoke r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.OwnedLayer findLayer()>();

        if r6 != null goto label6;

        goto label7;

     label6:
        interfaceinvoke r6.<androidx.ui.core.OwnedLayer: void invalidate()>();

     label7:
        r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.MeasureScope$MeasureResult _measureResult> = r1;

        return;
    }

    public final androidx.ui.unit.IntPxPosition getPosition()
    {
        androidx.ui.core.LayoutNodeWrapper r0;
        androidx.ui.unit.IntPxPosition $r1;

        r0 := @this: androidx.ui.core.LayoutNodeWrapper;

        $r1 = r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.unit.IntPxPosition position>;

        return $r1;
    }

    public final void setPosition$ui_platform_release(androidx.ui.unit.IntPxPosition)
    {
        androidx.ui.core.LayoutNodeWrapper r0;
        androidx.ui.unit.IntPxPosition r1, $r3;
        androidx.ui.core.OwnedLayer r2;
        boolean $z0, $z1;

        r0 := @this: androidx.ui.core.LayoutNodeWrapper;

        r1 := @parameter0: androidx.ui.unit.IntPxPosition;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $z0 = virtualinvoke r0.<androidx.ui.core.LayoutNodeWrapper: boolean getInvalidateLayerOnBoundsChange()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.unit.IntPxPosition position>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, $r3);

        if $z1 != 0 goto label2;

        r2 = virtualinvoke r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.OwnedLayer findLayer()>();

        if r2 != null goto label1;

        goto label2;

     label1:
        interfaceinvoke r2.<androidx.ui.core.OwnedLayer: void invalidate()>();

     label2:
        r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.unit.IntPxPosition position> = r1;

        return;
    }

    public androidx.ui.core.LayoutCoordinates getParentCoordinates()
    {
        androidx.ui.core.LayoutNodeWrapper r0, $r2, $r3;
        boolean z0, z1, z3;
        androidx.ui.core.LayoutNode $r1;
        androidx.ui.core.LayoutCoordinates $r4;
        java.lang.IllegalStateException $r5;
        java.lang.String $r6, r8;
        java.lang.Throwable $r7;

        r0 := @this: androidx.ui.core.LayoutNodeWrapper;

        z0 = virtualinvoke r0.<androidx.ui.core.LayoutNodeWrapper: boolean isAttached()>();

        z1 = 0;

        z3 = 0;

        if z0 != 0 goto label1;

        r8 = "LayoutCoordinate operations are only valid when isAttached is true";

        $r5 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke r8.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        $r7 = (java.lang.Throwable) $r5;

        throw $r7;

     label1:
        $r1 = virtualinvoke r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.LayoutNode getLayoutNode$ui_platform_release()>();

        $r2 = virtualinvoke $r1.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper getLayoutNodeWrapper$ui_platform_release()>();

        $r3 = virtualinvoke $r2.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper getWrappedBy$ui_platform_release()>();

        $r4 = (androidx.ui.core.LayoutCoordinates) $r3;

        return $r4;
    }

    public final boolean isGlobalPointerInBounds(androidx.ui.unit.PxPosition)
    {
        androidx.ui.core.LayoutNodeWrapper r0;
        androidx.ui.unit.PxPosition r1, r2, r3, r5, r8, r10;
        long $l0, $l2, $l3, $l5, $l7, $l8, l10, l12, l14, l17, l19, l21;
        float $f0, $f1, $f2, $f3, $f4, $f5, f6, $f7, $f8, f9;
        byte $b1, $b6;
        int $i4, $i9, $i11, $i13, $i15, $i16, $i18, $i20, $i22, $i23;
        kotlin.jvm.internal.FloatCompanionObject $r4, $r6, $r9, $r11;
        androidx.ui.unit.IntPxSize $r7, $r12;
        boolean z8, z11, z20, z23, $z24;

        r0 := @this: androidx.ui.core.LayoutNodeWrapper;

        r1 := @parameter0: androidx.ui.unit.PxPosition;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "globalPointerPosition");

        r2 = virtualinvoke r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.unit.PxPosition globalToLocal(androidx.ui.unit.PxPosition)>(r1);

        r3 = r2;

        l10 = virtualinvoke r3.<androidx.ui.unit.PxPosition: long getValue()>();

        $r4 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l0 = l10 >> 32;

        $i11 = (int) $l0;

        $f4 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i11);

        $f0 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f4);

        $b1 = $f0 cmpl 0.0F;

        if $b1 < 0 goto label1;

        r5 = r2;

        l12 = virtualinvoke r5.<androidx.ui.unit.PxPosition: long getValue()>();

        $r6 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l2 = l12 >> 32;

        $i13 = (int) $l2;

        $f5 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i13);

        f6 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f5);

        $r7 = virtualinvoke r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.unit.IntPxSize getMeasuredSize()>();

        z8 = 0;

        l14 = virtualinvoke $r7.<androidx.ui.unit.IntPxSize: long getValue()>();

        $l3 = l14 >> 32;

        $i15 = (int) $l3;

        $i16 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i15);

        z11 = 0;

        $f1 = (float) $i16;

        $i4 = staticinvoke <java.lang.Float: int compare(float,float)>(f6, $f1);

        if $i4 >= 0 goto label1;

        r8 = r2;

        l17 = virtualinvoke r8.<androidx.ui.unit.PxPosition: long getValue()>();

        $r9 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l5 = l17 & 4294967295L;

        $i18 = (int) $l5;

        $f7 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i18);

        $f2 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f7);

        $b6 = $f2 cmpl 0.0F;

        if $b6 < 0 goto label1;

        r10 = r2;

        l19 = virtualinvoke r10.<androidx.ui.unit.PxPosition: long getValue()>();

        $r11 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l7 = l19 & 4294967295L;

        $i20 = (int) $l7;

        $f8 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i20);

        f9 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f8);

        $r12 = virtualinvoke r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.unit.IntPxSize getMeasuredSize()>();

        z20 = 0;

        l21 = virtualinvoke $r12.<androidx.ui.unit.IntPxSize: long getValue()>();

        $l8 = l21 & 4294967295L;

        $i22 = (int) $l8;

        $i23 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i22);

        z23 = 0;

        $f3 = (float) $i23;

        $i9 = staticinvoke <java.lang.Float: int compare(float,float)>(f9, $f3);

        if $i9 >= 0 goto label1;

        $z24 = 1;

        goto label2;

     label1:
        $z24 = 0;

     label2:
        return $z24;
    }

<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.Placeable performMeasure(androidx.ui.core.Constraints,androidx.ui.core.LayoutDirection)>
    public final androidx.ui.core.Placeable measure(androidx.ui.core.Constraints, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.core.LayoutNodeWrapper r0;
        androidx.ui.core.Constraints r1;
        androidx.ui.core.LayoutDirection r2;
        androidx.ui.core.Placeable $r3;

        r0 := @this: androidx.ui.core.LayoutNodeWrapper;

        r1 := @parameter0: androidx.ui.core.Constraints;

        r2 := @parameter1: androidx.ui.core.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "constraints");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "layoutDirection");

        virtualinvoke r0.<androidx.ui.core.LayoutNodeWrapper: void setMeasurementConstraints(androidx.ui.core.Constraints)>(r1);

        $r3 = virtualinvoke r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.Placeable performMeasure(androidx.ui.core.Constraints,androidx.ui.core.LayoutDirection)>(r1, r2);

        return $r3;
    }

<androidx.ui.core.LayoutNodeWrapper: void place(androidx.ui.unit.IntPxPosition)>
<androidx.ui.core.LayoutNodeWrapper: void draw(androidx.ui.graphics.Canvas)>
<androidx.ui.core.LayoutNodeWrapper: boolean hitTest(androidx.ui.unit.PxPosition,java.util.List)>
    public androidx.ui.unit.PxPosition childToLocal(androidx.ui.core.LayoutCoordinates, androidx.ui.unit.PxPosition)
    {
        androidx.ui.core.LayoutNodeWrapper r0, r18, r20;
        androidx.ui.core.LayoutCoordinates r1;
        androidx.ui.unit.PxPosition r2, r19;
        boolean z0, z2, z3, z4, z6, z7, z8, $z10, z11;
        java.lang.IllegalStateException $r3, $r10, $r13;
        java.lang.String $r4, $r11, $r14, r16, r17, r21;
        java.lang.Throwable $r5, $r12, $r15;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;

        r0 := @this: androidx.ui.core.LayoutNodeWrapper;

        r1 := @parameter0: androidx.ui.core.LayoutCoordinates;

        r2 := @parameter1: androidx.ui.unit.PxPosition;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "child");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "childLocal");

        z2 = virtualinvoke r0.<androidx.ui.core.LayoutNodeWrapper: boolean isAttached()>();

        z3 = 0;

        z4 = 0;

        if z2 != 0 goto label1;

        r16 = "LayoutCoordinate operations are only valid when isAttached is true";

        $r13 = new java.lang.IllegalStateException;

        $r14 = virtualinvoke r16.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r14);

        $r15 = (java.lang.Throwable) $r13;

        throw $r15;

     label1:
        z6 = interfaceinvoke r1.<androidx.ui.core.LayoutCoordinates: boolean isAttached()>();

        z7 = 0;

        z8 = 0;

        if z6 != 0 goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Child ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not attached!");

        r17 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = new java.lang.IllegalStateException;

        $r11 = virtualinvoke r17.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        $r12 = (java.lang.Throwable) $r10;

        throw $r12;

     label2:
        r18 = (androidx.ui.core.LayoutNodeWrapper) r1;

        r19 = r2;

     label3:
        if r18 == r0 goto label7;

        r19 = virtualinvoke r18.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.unit.PxPosition toParentPosition(androidx.ui.unit.PxPosition)>(r19);

        r20 = virtualinvoke r18.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper getWrappedBy$ui_platform_release()>();

        if r20 == null goto label4;

        $z10 = 1;

        goto label5;

     label4:
        $z10 = 0;

     label5:
        z0 = 0;

        z11 = 0;

        if $z10 != 0 goto label6;

        r21 = "childToLocal: child parameter is not a child of the LayoutCoordinates";

        $r3 = new java.lang.IllegalStateException;

        $r4 = virtualinvoke r21.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);

        $r5 = (java.lang.Throwable) $r3;

        throw $r5;

     label6:
        r18 = r20;

        goto label3;

     label7:
        return r19;
    }

    public androidx.ui.unit.PxPosition globalToLocal(androidx.ui.unit.PxPosition)
    {
        androidx.ui.core.LayoutNodeWrapper r0, r14, r17, r21, r28;
        androidx.ui.unit.PxPosition r1, $r2, $r3, $r7, $r8, $r9, r15, r19, r22, r27;
        long l0, l1, l2, l3, l4, $l5, $l6, $l9, $l10, $l11, $l12, $l13, $l14, $l17, $l18, l19, l22, l25, l26, l27, $l29, $l31, l33, l35;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, f7, f8, $f9, $f10, f11, $f12, $f13, $f14, $f15, $f16, f17;
        androidx.ui.core.LayoutNode $r4;
        androidx.ui.core.ComponentNode $r5;
        androidx.ui.core.Owner $r6;
        int $i7, $i8, $i15, $i16, $i20, i21, $i23, $i24, $i28, $i30, $i32, i34;
        java.lang.IllegalStateException $r10;
        java.lang.String $r11, r13;
        java.lang.Throwable $r12;
        boolean z1, z2, z3, z19, z27, z32, z42;
        androidx.ui.unit.IntPxPosition $r16, r18;
        kotlin.jvm.internal.FloatCompanionObject $r23, $r24, $r25, $r26;

        r0 := @this: androidx.ui.core.LayoutNodeWrapper;

        r1 := @parameter0: androidx.ui.unit.PxPosition;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "global");

        z1 = virtualinvoke r0.<androidx.ui.core.LayoutNodeWrapper: boolean isAttached()>();

        z2 = 0;

        z3 = 0;

        if z1 != 0 goto label1;

        r13 = "LayoutCoordinate operations are only valid when isAttached is true";

        $r10 = new java.lang.IllegalStateException;

        $r11 = virtualinvoke r13.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        $r12 = (java.lang.Throwable) $r10;

        throw $r12;

     label1:
        r14 = virtualinvoke r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper getWrappedBy$ui_platform_release()>();

        if r14 != null goto label2;

        r15 = r1;

        $r4 = virtualinvoke r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.LayoutNode getLayoutNode$ui_platform_release()>();

        $r5 = (androidx.ui.core.ComponentNode) $r4;

        $r6 = staticinvoke <androidx.ui.core.ComponentNodesKt: androidx.ui.core.Owner requireOwner(androidx.ui.core.ComponentNode)>($r5);

        $r16 = interfaceinvoke $r6.<androidx.ui.core.Owner: androidx.ui.unit.IntPxPosition calculatePosition()>();

        r17 = r0;

        r18 = $r16;

        l19 = virtualinvoke r18.<androidx.ui.unit.IntPxPosition: long getValue()>();

        $l5 = l19 >> 32;

        $i20 = (int) $l5;

        i21 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i20);

        l22 = virtualinvoke $r16.<androidx.ui.unit.IntPxPosition: long getValue()>();

        $l6 = l22 & 4294967295L;

        $i23 = (int) $l6;

        $i24 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i23);

        $f1 = (float) i21;

        $f5 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f1);

        $f2 = (float) $i24;

        $f6 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f2);

        $i7 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f5);

        l25 = (long) $i7;

        z19 = 0;

        $i8 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f6);

        l0 = (long) $i8;

        $l10 = l25 << 32;

        $l9 = l0 & 4294967295L;

        l26 = $l10 | $l9;

        l2 = l26;

        $r7 = new androidx.ui.unit.PxPosition;

        specialinvoke $r7.<androidx.ui.unit.PxPosition: void <init>(long)>(l2);

        r19 = $r7;

        r21 = r17;

        r22 = r15;

        l27 = virtualinvoke r22.<androidx.ui.unit.PxPosition: long getValue()>();

        $r23 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l11 = l27 >> 32;

        $i28 = (int) $l11;

        f7 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i28);

        f8 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>(f7);

        $l29 = virtualinvoke r19.<androidx.ui.unit.PxPosition: long getValue()>();

        $r24 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l12 = $l29 >> 32;

        $i30 = (int) $l12;

        z27 = 0;

        $f9 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i30);

        $f10 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f9);

        $f3 = f8 - $f10;

        f11 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f3);

        $l31 = virtualinvoke r15.<androidx.ui.unit.PxPosition: long getValue()>();

        $r25 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l13 = $l31 & 4294967295L;

        $i32 = (int) $l13;

        z32 = 0;

        $f12 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i32);

        $f13 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f12);

        l33 = virtualinvoke r19.<androidx.ui.unit.PxPosition: long getValue()>();

        $r26 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l14 = l33 & 4294967295L;

        i34 = (int) $l14;

        $f14 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>(i34);

        $f15 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f14);

        $f4 = $f13 - $f15;

        $f16 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f4);

        f17 = f11;

        $i15 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f17);

        l35 = (long) $i15;

        f0 = $f16;

        z42 = 0;

        $i16 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f0);

        l1 = (long) $i16;

        $l18 = l35 << 32;

        $l17 = l1 & 4294967295L;

        l3 = $l18 | $l17;

        l4 = l3;

        $r8 = new androidx.ui.unit.PxPosition;

        specialinvoke $r8.<androidx.ui.unit.PxPosition: void <init>(long)>(l4);

        r27 = $r8;

        $r9 = virtualinvoke r21.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.unit.PxPosition fromParentPosition(androidx.ui.unit.PxPosition)>(r27);

        return $r9;

     label2:
        r28 = r14;

        $r2 = virtualinvoke r28.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.unit.PxPosition globalToLocal(androidx.ui.unit.PxPosition)>(r1);

        $r3 = virtualinvoke r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.unit.PxPosition fromParentPosition(androidx.ui.unit.PxPosition)>($r2);

        return $r3;
    }

    public androidx.ui.unit.PxPosition localToGlobal(androidx.ui.unit.PxPosition)
    {
        androidx.ui.core.LayoutNodeWrapper r0;
        androidx.ui.unit.PxPosition r1, r2, $r7, r8;
        androidx.ui.unit.IntPxPosition r3;
        long l0, l1, l2, l3, l4, l5, $l6, $l7, $l8, $l9, $l12, $l13, l15, l18;
        float f0, $f1, $f2, $f3, $f4, $f5, f6, f7, $f8, $f9, $f10;
        boolean z2;
        androidx.ui.core.LayoutNode $r4;
        androidx.ui.core.ComponentNode $r5;
        androidx.ui.core.Owner $r6;
        int $i10, $i11, $i14, $i16, $i17, $i19, $i20, $i21;
        kotlin.jvm.internal.FloatCompanionObject $r9, $r10;

        r0 := @this: androidx.ui.core.LayoutNodeWrapper;

        r1 := @parameter0: androidx.ui.unit.PxPosition;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "local");

        r2 = virtualinvoke r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.unit.PxPosition localToRoot(androidx.ui.unit.PxPosition)>(r1);

        $r4 = virtualinvoke r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.LayoutNode getLayoutNode$ui_platform_release()>();

        $r5 = (androidx.ui.core.ComponentNode) $r4;

        $r6 = staticinvoke <androidx.ui.core.ComponentNodesKt: androidx.ui.core.Owner requireOwner(androidx.ui.core.ComponentNode)>($r5);

        r3 = interfaceinvoke $r6.<androidx.ui.core.Owner: androidx.ui.unit.IntPxPosition calculatePosition()>();

        r8 = r2;

        l0 = virtualinvoke r8.<androidx.ui.unit.PxPosition: long getValue()>();

        $r9 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l6 = l0 >> 32;

        $i14 = (int) $l6;

        $f5 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i14);

        f6 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f5);

        l15 = virtualinvoke r3.<androidx.ui.unit.IntPxPosition: long getValue()>();

        $l7 = l15 >> 32;

        $i16 = (int) $l7;

        $i17 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i16);

        $f1 = (float) $i17;

        $f2 = f6 + $f1;

        f7 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f2);

        l18 = virtualinvoke r2.<androidx.ui.unit.PxPosition: long getValue()>();

        $r10 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l8 = l18 & 4294967295L;

        $i19 = (int) $l8;

        $f8 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i19);

        $f9 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f8);

        l1 = virtualinvoke r3.<androidx.ui.unit.IntPxPosition: long getValue()>();

        $l9 = l1 & 4294967295L;

        $i20 = (int) $l9;

        $i21 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i20);

        $f3 = (float) $i21;

        $f4 = $f9 + $f3;

        $f10 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f4);

        $i10 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f7);

        l2 = (long) $i10;

        f0 = $f10;

        z2 = 0;

        $i11 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f0);

        l3 = (long) $i11;

        $l13 = l2 << 32;

        $l12 = l3 & 4294967295L;

        l4 = $l13 | $l12;

        l5 = l4;

        $r7 = new androidx.ui.unit.PxPosition;

        specialinvoke $r7.<androidx.ui.unit.PxPosition: void <init>(long)>(l5);

        return $r7;
    }

    public androidx.ui.unit.PxPosition localToRoot(androidx.ui.unit.PxPosition)
    {
        androidx.ui.core.LayoutNodeWrapper r0, r6;
        androidx.ui.unit.PxPosition r1, r7;
        java.lang.IllegalStateException $r2;
        java.lang.String $r3, r5;
        java.lang.Throwable $r4;
        boolean z1, z2, z3;

        r0 := @this: androidx.ui.core.LayoutNodeWrapper;

        r1 := @parameter0: androidx.ui.unit.PxPosition;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "local");

        z1 = virtualinvoke r0.<androidx.ui.core.LayoutNodeWrapper: boolean isAttached()>();

        z2 = 0;

        z3 = 0;

        if z1 != 0 goto label1;

        r5 = "LayoutCoordinate operations are only valid when isAttached is true";

        $r2 = new java.lang.IllegalStateException;

        $r3 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        $r4 = (java.lang.Throwable) $r2;

        throw $r4;

     label1:
        r6 = r0;

        r7 = r1;

     label2:
        if r6 == null goto label3;

        r7 = virtualinvoke r6.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.unit.PxPosition toParentPosition(androidx.ui.unit.PxPosition)>(r7);

        r6 = virtualinvoke r6.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper getWrappedBy$ui_platform_release()>();

        goto label2;

     label3:
        return r7;
    }

    protected final void withPositionTranslation(androidx.ui.graphics.Canvas, kotlin.jvm.functions.Function1)
    {
        androidx.ui.core.LayoutNodeWrapper r0;
        androidx.ui.graphics.Canvas r1;
        kotlin.jvm.functions.Function1 r2;
        float f0, $f1, $f2, f3;
        long l0, $l1, $l3, l5;
        int $i2, $i4, $i6, $i7;
        androidx.ui.unit.IntPxPosition r4, $r5;
        boolean z5;

        r0 := @this: androidx.ui.core.LayoutNodeWrapper;

        r1 := @parameter0: androidx.ui.graphics.Canvas;

        r2 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "canvas");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "block");

        r4 = virtualinvoke r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.unit.IntPxPosition getPosition()>();

        l5 = virtualinvoke r4.<androidx.ui.unit.IntPxPosition: long getValue()>();

        $l1 = l5 >> 32;

        $i6 = (int) $l1;

        $i2 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i6);

        f0 = (float) $i2;

        $r5 = virtualinvoke r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.unit.IntPxPosition getPosition()>();

        z5 = 0;

        l0 = virtualinvoke $r5.<androidx.ui.unit.IntPxPosition: long getValue()>();

        $l3 = l0 & 4294967295L;

        $i7 = (int) $l3;

        $i4 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i7);

        f3 = (float) $i4;

        interfaceinvoke r1.<androidx.ui.graphics.Canvas: void translate(float,float)>(f0, f3);

        interfaceinvoke r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        $f2 = neg f0;

        $f1 = neg f3;

        interfaceinvoke r1.<androidx.ui.graphics.Canvas: void translate(float,float)>($f2, $f1);

        return;
    }

    public androidx.ui.unit.PxPosition toParentPosition(androidx.ui.unit.PxPosition)
    {
        androidx.ui.core.LayoutNodeWrapper r0;
        androidx.ui.unit.PxPosition r1, r2, $r4, r5;
        androidx.ui.unit.IntPxPosition r3;
        long l0, l1, l2, l3, l4, l5, $l6, $l7, $l8, $l9, $l12, $l13, l15, l18;
        float f0, $f1, $f2, $f3, $f4, $f5, f6, f7, $f8, $f9, $f10;
        boolean z2;
        int $i10, $i11, $i14, $i16, $i17, $i19, $i20, $i21;
        kotlin.jvm.internal.FloatCompanionObject $r6, $r7;

        r0 := @this: androidx.ui.core.LayoutNodeWrapper;

        r1 := @parameter0: androidx.ui.unit.PxPosition;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "position");

        r2 = r1;

        r3 = virtualinvoke r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.unit.IntPxPosition getPosition()>();

        r5 = r2;

        l0 = virtualinvoke r5.<androidx.ui.unit.PxPosition: long getValue()>();

        $r6 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l6 = l0 >> 32;

        $i14 = (int) $l6;

        $f5 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i14);

        f6 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f5);

        l15 = virtualinvoke r3.<androidx.ui.unit.IntPxPosition: long getValue()>();

        $l7 = l15 >> 32;

        $i16 = (int) $l7;

        $i17 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i16);

        $f1 = (float) $i17;

        $f2 = f6 + $f1;

        f7 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f2);

        l18 = virtualinvoke r2.<androidx.ui.unit.PxPosition: long getValue()>();

        $r7 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l8 = l18 & 4294967295L;

        $i19 = (int) $l8;

        $f8 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i19);

        $f9 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f8);

        l1 = virtualinvoke r3.<androidx.ui.unit.IntPxPosition: long getValue()>();

        $l9 = l1 & 4294967295L;

        $i20 = (int) $l9;

        $i21 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i20);

        $f3 = (float) $i21;

        $f4 = $f9 + $f3;

        $f10 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f4);

        $i10 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f7);

        l2 = (long) $i10;

        f0 = $f10;

        z2 = 0;

        $i11 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f0);

        l3 = (long) $i11;

        $l13 = l2 << 32;

        $l12 = l3 & 4294967295L;

        l4 = $l13 | $l12;

        l5 = l4;

        $r4 = new androidx.ui.unit.PxPosition;

        specialinvoke $r4.<androidx.ui.unit.PxPosition: void <init>(long)>(l5);

        return $r4;
    }

    public androidx.ui.unit.PxPosition fromParentPosition(androidx.ui.unit.PxPosition)
    {
        androidx.ui.core.LayoutNodeWrapper r0;
        androidx.ui.unit.PxPosition r1, r2, $r4, r5;
        androidx.ui.unit.IntPxPosition r3;
        long l0, l1, l2, l3, l4, l5, $l6, $l7, $l8, $l9, $l12, $l13, l15, l18;
        float f0, $f1, $f2, $f3, $f4, $f5, f6, f7, $f8, $f9, $f10;
        boolean z2;
        int $i10, $i11, $i14, $i16, $i17, $i19, $i20, $i21;
        kotlin.jvm.internal.FloatCompanionObject $r6, $r7;

        r0 := @this: androidx.ui.core.LayoutNodeWrapper;

        r1 := @parameter0: androidx.ui.unit.PxPosition;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "position");

        r2 = r1;

        r3 = virtualinvoke r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.unit.IntPxPosition getPosition()>();

        r5 = r2;

        l0 = virtualinvoke r5.<androidx.ui.unit.PxPosition: long getValue()>();

        $r6 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l6 = l0 >> 32;

        $i14 = (int) $l6;

        $f5 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i14);

        f6 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f5);

        l15 = virtualinvoke r3.<androidx.ui.unit.IntPxPosition: long getValue()>();

        $l7 = l15 >> 32;

        $i16 = (int) $l7;

        $i17 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i16);

        $f1 = (float) $i17;

        $f2 = f6 - $f1;

        f7 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f2);

        l18 = virtualinvoke r2.<androidx.ui.unit.PxPosition: long getValue()>();

        $r7 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l8 = l18 & 4294967295L;

        $i19 = (int) $l8;

        $f8 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i19);

        $f9 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f8);

        l1 = virtualinvoke r3.<androidx.ui.unit.IntPxPosition: long getValue()>();

        $l9 = l1 & 4294967295L;

        $i20 = (int) $l9;

        $i21 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i20);

        $f3 = (float) $i21;

        $f4 = $f9 - $f3;

        $f10 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f4);

        $i10 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f7);

        l2 = (long) $i10;

        f0 = $f10;

        z2 = 0;

        $i11 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f0);

        l3 = (long) $i11;

        $l13 = l2 << 32;

        $l12 = l3 & 4294967295L;

        l4 = $l13 | $l12;

        l5 = l4;

        $r4 = new androidx.ui.unit.PxPosition;

        specialinvoke $r4.<androidx.ui.unit.PxPosition: void <init>(long)>(l5);

        return $r4;
    }

    protected final void drawBorder(androidx.ui.graphics.Canvas, androidx.ui.graphics.Paint)
    {
        androidx.ui.core.LayoutNodeWrapper r0;
        androidx.ui.graphics.Canvas r1;
        androidx.ui.graphics.Paint r2;
        androidx.ui.geometry.Rect r3, $r4;
        int i0, $i4, i5, $i7;
        float f0, f1, f2, f3, $f4, $f5, f6, f7, f8, f9, f10;
        long $l1, $l2, l3, l6;
        androidx.ui.unit.IntPxSize r5, r6;

        r0 := @this: androidx.ui.core.LayoutNodeWrapper;

        r1 := @parameter0: androidx.ui.graphics.Canvas;

        r2 := @parameter1: androidx.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "canvas");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "paint");

        r5 = virtualinvoke r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.unit.IntPxSize getMeasuredSize()>();

        f6 = 0.5F;

        f7 = 0.5F;

        l3 = virtualinvoke r5.<androidx.ui.unit.IntPxSize: long getValue()>();

        $l1 = l3 >> 32;

        $i4 = (int) $l1;

        i5 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i4);

        $f4 = (float) i5;

        r6 = virtualinvoke r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.unit.IntPxSize getMeasuredSize()>();

        f8 = $f4 - 0.5F;

        f9 = f6;

        f10 = f7;

        l6 = virtualinvoke r6.<androidx.ui.unit.IntPxSize: long getValue()>();

        $l2 = l6 & 4294967295L;

        $i7 = (int) $l2;

        i0 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i7);

        $f5 = (float) i0;

        f0 = $f5 - 0.5F;

        f1 = f8;

        f2 = f9;

        f3 = f10;

        $r4 = new androidx.ui.geometry.Rect;

        specialinvoke $r4.<androidx.ui.geometry.Rect: void <init>(float,float,float,float)>(f3, f2, f1, f0);

        r3 = $r4;

        interfaceinvoke r1.<androidx.ui.graphics.Canvas: void drawRect(androidx.ui.geometry.Rect,androidx.ui.graphics.Paint)>(r3, r2);

        return;
    }

<androidx.ui.core.LayoutNodeWrapper: void detach()>
    protected void rectInParent(android.graphics.RectF)
    {
        androidx.ui.core.LayoutNodeWrapper r0;
        android.graphics.RectF r1, r3, r4;
        int i0, $i5, $i6, i7;
        long l1, $l2, $l3, l4;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        androidx.ui.unit.IntPxPosition r2, $r5;
        boolean z4;

        r0 := @this: androidx.ui.core.LayoutNodeWrapper;

        r1 := @parameter0: android.graphics.RectF;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "bounds");

        r2 = virtualinvoke r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.unit.IntPxPosition getPosition()>();

        l4 = virtualinvoke r2.<androidx.ui.unit.IntPxPosition: long getValue()>();

        $l2 = l4 >> 32;

        $i5 = (int) $l2;

        i0 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i5);

        r3 = r1;

        $f1 = r3.<android.graphics.RectF: float left>;

        $f0 = (float) i0;

        $f2 = $f1 + $f0;

        r3.<android.graphics.RectF: float left> = $f2;

        r4 = r1;

        $f4 = r4.<android.graphics.RectF: float right>;

        $f3 = (float) i0;

        $f5 = $f4 + $f3;

        r4.<android.graphics.RectF: float right> = $f5;

        $r5 = virtualinvoke r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.unit.IntPxPosition getPosition()>();

        z4 = 0;

        l1 = virtualinvoke $r5.<androidx.ui.unit.IntPxPosition: long getValue()>();

        $l3 = l1 & 4294967295L;

        $i6 = (int) $l3;

        i7 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i6);

        $f7 = r1.<android.graphics.RectF: float top>;

        $f6 = (float) i7;

        $f8 = $f7 + $f6;

        r1.<android.graphics.RectF: float top> = $f8;

        $f10 = r1.<android.graphics.RectF: float bottom>;

        $f9 = (float) i7;

        $f11 = $f10 + $f9;

        r1.<android.graphics.RectF: float bottom> = $f11;

        return;
    }

    public androidx.ui.unit.PxBounds childBoundingBox(androidx.ui.core.LayoutCoordinates)
    {
        androidx.ui.core.LayoutNodeWrapper r0, r28, $r29;
        androidx.ui.core.LayoutCoordinates r1;
        float f0, f1, f2, f3, f4, $f5, f6, $f7, f8, $f9, f10, f11, $f12, f13, f14, f15, $f16, f17, f18, f19;
        long $l0, $l1, $l2, $l4;
        androidx.ui.unit.PxBounds $r2;
        java.lang.IllegalStateException $r3, $r11, $r14;
        java.lang.String $r4, $r12, $r15, $r17, $r18, r30;
        java.lang.Throwable $r5, $r13, $r16;
        android.graphics.RectF $r6, r19, r21, $r22, r23, r25, r27;
        int $i3, $i5, i6, i7;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;
        boolean z0, z1, $z2;
        androidx.ui.unit.IntPxSize r24, r26;

        r0 := @this: androidx.ui.core.LayoutNodeWrapper;

        r1 := @parameter0: androidx.ui.core.LayoutCoordinates;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "child");

        z0 = virtualinvoke r0.<androidx.ui.core.LayoutNodeWrapper: boolean isAttached()>();

        if z0 != 0 goto label1;

        $r17 = "LayoutCoordinate operations are only valid when isAttached is true";

        $r14 = new java.lang.IllegalStateException;

        $r15 = virtualinvoke $r17.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r15);

        $r16 = (java.lang.Throwable) $r14;

        throw $r16;

     label1:
        z1 = interfaceinvoke r1.<androidx.ui.core.LayoutCoordinates: boolean isAttached()>();

        if z1 != 0 goto label2;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Child ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not attached!");

        $r18 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = new java.lang.IllegalStateException;

        $r12 = virtualinvoke $r18.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        $r13 = (java.lang.Throwable) $r11;

        throw $r13;

     label2:
        r19 = r0.<androidx.ui.core.LayoutNodeWrapper: android.graphics.RectF rectCache>;

        if r19 != null goto label3;

        $r6 = new android.graphics.RectF;

        specialinvoke $r6.<android.graphics.RectF: void <init>()>();

        r21 = $r6;

        r0.<androidx.ui.core.LayoutNodeWrapper: android.graphics.RectF rectCache> = r21;

        $r22 = $r6;

        goto label4;

     label3:
        $r22 = r19;

     label4:
        r23 = $r22;

        r24 = interfaceinvoke r1.<androidx.ui.core.LayoutCoordinates: androidx.ui.unit.IntPxSize getSize()>();

        r25 = r23;

        $l2 = virtualinvoke r24.<androidx.ui.unit.IntPxSize: long getValue()>();

        $l0 = $l2 >> 32;

        $i3 = (int) $l0;

        i6 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i3);

        r26 = interfaceinvoke r1.<androidx.ui.core.LayoutCoordinates: androidx.ui.unit.IntPxSize getSize()>();

        f6 = (float) i6;

        r27 = r25;

        $l4 = virtualinvoke r26.<androidx.ui.unit.IntPxSize: long getValue()>();

        $l1 = $l4 & 4294967295L;

        $i5 = (int) $l1;

        i7 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i5);

        $f5 = (float) i7;

        virtualinvoke r27.<android.graphics.RectF: void set(float,float,float,float)>(0.0F, 0.0F, f6, $f5);

        r28 = (androidx.ui.core.LayoutNodeWrapper) r1;

     label5:
        if r28 == r0 goto label9;

        virtualinvoke r28.<androidx.ui.core.LayoutNodeWrapper: void rectInParent(android.graphics.RectF)>(r23);

        $r29 = virtualinvoke r28.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper getWrappedBy$ui_platform_release()>();

        if $r29 == null goto label6;

        $z2 = 1;

        goto label7;

     label6:
        $z2 = 0;

     label7:
        if $z2 != 0 goto label8;

        r30 = "childToLocal: child parameter is not a child of the LayoutCoordinates";

        $r3 = new java.lang.IllegalStateException;

        $r4 = virtualinvoke r30.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);

        $r5 = (java.lang.Throwable) $r3;

        throw $r5;

     label8:
        r28 = $r29;

        goto label5;

     label9:
        $f7 = r23.<android.graphics.RectF: float left>;

        f8 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f7);

        $f9 = r23.<android.graphics.RectF: float top>;

        f10 = f8;

        f11 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f9);

        $f12 = r23.<android.graphics.RectF: float right>;

        f13 = f11;

        f14 = f10;

        f15 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f12);

        $f16 = r23.<android.graphics.RectF: float bottom>;

        f17 = f15;

        f18 = f13;

        f19 = f14;

        f0 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f16);

        f1 = f0;

        f2 = f17;

        f3 = f18;

        f4 = f19;

        $r2 = new androidx.ui.unit.PxBounds;

        specialinvoke $r2.<androidx.ui.unit.PxBounds: void <init>(float,float,float,float,kotlin.jvm.internal.DefaultConstructorMarker)>(f4, f3, f2, f1, null);

        return $r2;
    }

    public androidx.ui.core.OwnedLayer findLayer()
    {
        androidx.ui.core.LayoutNodeWrapper r0, r1;
        androidx.ui.core.OwnedLayer $r2;

        r0 := @this: androidx.ui.core.LayoutNodeWrapper;

        r1 = virtualinvoke r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper getWrappedBy$ui_platform_release()>();

        if r1 != null goto label1;

        $r2 = (androidx.ui.core.OwnedLayer) null;

        goto label2;

     label1:
        $r2 = virtualinvoke r1.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.OwnedLayer findLayer()>();

     label2:
        return $r2;
    }

<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.focus.ModifiedFocusNode findFocusWrapperWrappingThisWrapper()>
<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.focus.ModifiedFocusNode findFocusWrapperWrappedByThisWrapper()>
<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.focus.ModifiedFocusNode findLastFocusWrapper()>
    public final androidx.ui.core.focus.ModifiedFocusNode findParentFocusNode$ui_platform_release()
    {
        androidx.ui.core.LayoutNodeWrapper r0, $r3, r4;
        androidx.ui.core.LayoutNode $r1, r7;
        androidx.ui.core.focus.ModifiedFocusNode $r2, $r5, r6, r8;

        r0 := @this: androidx.ui.core.LayoutNodeWrapper;

        r4 = virtualinvoke r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper getWrappedBy$ui_platform_release()>();

        if r4 != null goto label1;

        $r5 = (androidx.ui.core.focus.ModifiedFocusNode) null;

        goto label2;

     label1:
        $r5 = virtualinvoke r4.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.focus.ModifiedFocusNode findFocusWrapperWrappingThisWrapper()>();

     label2:
        r6 = $r5;

        if r6 == null goto label3;

        return r6;

     label3:
        $r1 = virtualinvoke r0.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.LayoutNode getLayoutNode$ui_platform_release()>();

        r7 = virtualinvoke $r1.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode getParentLayoutNode()>();

     label4:
        if r7 == null goto label6;

        $r3 = virtualinvoke r7.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper getLayoutNodeWrapper$ui_platform_release()>();

        r8 = virtualinvoke $r3.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.focus.ModifiedFocusNode findLastFocusWrapper()>();

        if r8 == null goto label5;

        return r8;

     label5:
        r7 = virtualinvoke r7.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode getParentLayoutNode()>();

        goto label4;

     label6:
        $r2 = (androidx.ui.core.focus.ModifiedFocusNode) null;

        return $r2;
    }

    public static final void <clinit>()
    {
        androidx.ui.core.LayoutNodeWrapper$Companion $r0;

        $r0 = new androidx.ui.core.LayoutNodeWrapper$Companion;

        specialinvoke $r0.<androidx.ui.core.LayoutNodeWrapper$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper$Companion Companion> = $r0;

        return;
    }

androidx.ui.core.LayoutNodeWrapper$Companion
    private void <init>()
    {
        androidx.ui.core.LayoutNodeWrapper$Companion r0;

        r0 := @this: androidx.ui.core.LayoutNodeWrapper$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.ui.core.LayoutNodeWrapper$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker r1;

        r0 := @this: androidx.ui.core.LayoutNodeWrapper$Companion;

        r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.ui.core.LayoutNodeWrapper$Companion: void <init>()>();

        return;
    }

