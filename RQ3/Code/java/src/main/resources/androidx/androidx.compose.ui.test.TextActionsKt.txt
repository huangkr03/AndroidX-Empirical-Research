androidx.compose.ui.test.TextActionsKt
    public static final void performTextClearance(androidx.compose.ui.test.SemanticsNodeInteraction)
    {
        androidx.compose.ui.test.SemanticsNodeInteraction $r0;
        androidx.compose.ui.text.input.DeleteAllCommand $r1;
        java.util.List $r2;

        $r0 := @parameter0: androidx.compose.ui.test.SemanticsNodeInteraction;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = new androidx.compose.ui.text.input.DeleteAllCommand;

        specialinvoke $r1.<androidx.compose.ui.text.input.DeleteAllCommand: void <init>()>();

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r1);

        staticinvoke <androidx.compose.ui.test.TextActionsKt: void sendTextInputCommand(androidx.compose.ui.test.SemanticsNodeInteraction,java.util.List)>($r0, $r2);

        return;
    }

    public static final void performTextInput(androidx.compose.ui.test.SemanticsNodeInteraction, java.lang.String)
    {
        androidx.compose.ui.test.SemanticsNodeInteraction $r0;
        java.lang.String r1;
        androidx.compose.ui.text.input.CommitTextCommand $r2;
        java.util.List $r3;

        $r0 := @parameter0: androidx.compose.ui.test.SemanticsNodeInteraction;

        r1 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "text");

        $r2 = new androidx.compose.ui.text.input.CommitTextCommand;

        specialinvoke $r2.<androidx.compose.ui.text.input.CommitTextCommand: void <init>(java.lang.String,int)>(r1, 1);

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        staticinvoke <androidx.compose.ui.test.TextActionsKt: void sendTextInputCommand(androidx.compose.ui.test.SemanticsNodeInteraction,java.util.List)>($r0, $r3);

        return;
    }

    public static final void performTextInputSelection-FDrldGo(androidx.compose.ui.test.SemanticsNodeInteraction, long)
    {
        androidx.compose.ui.test.SemanticsNodeInteraction $r0;
        long l0;
        androidx.compose.ui.text.input.SetSelectionCommand $r1;
        int $i1, $i2;
        java.util.List $r2;

        $r0 := @parameter0: androidx.compose.ui.test.SemanticsNodeInteraction;

        l0 := @parameter1: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$performTextInputSelection");

        $r1 = new androidx.compose.ui.text.input.SetSelectionCommand;

        $i1 = staticinvoke <androidx.compose.ui.text.TextRange: int getMin-impl(long)>(l0);

        $i2 = staticinvoke <androidx.compose.ui.text.TextRange: int getMax-impl(long)>(l0);

        specialinvoke $r1.<androidx.compose.ui.text.input.SetSelectionCommand: void <init>(int,int)>($i1, $i2);

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r1);

        staticinvoke <androidx.compose.ui.test.TextActionsKt: void sendTextInputCommand(androidx.compose.ui.test.SemanticsNodeInteraction,java.util.List)>($r0, $r2);

        return;
    }

    public static final void performTextReplacement(androidx.compose.ui.test.SemanticsNodeInteraction, java.lang.String)
    {
        androidx.compose.ui.test.SemanticsNodeInteraction $r0;
        java.lang.String r1;
        androidx.compose.ui.text.input.EditCommand[] r2;
        androidx.compose.ui.text.input.DeleteAllCommand $r3;
        androidx.compose.ui.text.input.EditCommand $r4, $r6;
        androidx.compose.ui.text.input.CommitTextCommand $r5;
        java.util.List $r7;

        $r0 := @parameter0: androidx.compose.ui.test.SemanticsNodeInteraction;

        r1 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "text");

        r2 = newarray (androidx.compose.ui.text.input.EditCommand)[2];

        $r3 = new androidx.compose.ui.text.input.DeleteAllCommand;

        specialinvoke $r3.<androidx.compose.ui.text.input.DeleteAllCommand: void <init>()>();

        $r4 = (androidx.compose.ui.text.input.EditCommand) $r3;

        r2[0] = $r4;

        $r5 = new androidx.compose.ui.text.input.CommitTextCommand;

        specialinvoke $r5.<androidx.compose.ui.text.input.CommitTextCommand: void <init>(java.lang.String,int)>(r1, 1);

        $r6 = (androidx.compose.ui.text.input.EditCommand) $r5;

        r2[1] = $r6;

        $r7 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object[])>(r2);

        staticinvoke <androidx.compose.ui.test.TextActionsKt: void sendTextInputCommand(androidx.compose.ui.test.SemanticsNodeInteraction,java.util.List)>($r0, $r7);

        return;
    }

    public static final void performImeAction(androidx.compose.ui.test.SemanticsNodeInteraction)
    {
        androidx.compose.ui.test.SemanticsNodeInteraction $r0;
        java.lang.String r1, $r21;
        androidx.compose.ui.semantics.SemanticsNode r2;
        int i0, $i1;
        androidx.compose.ui.test.SemanticsMatcher $r3, $r15;
        androidx.compose.ui.test.TextActionsKt$performImeAction$1 $r4;
        kotlin.jvm.functions.Function0 $r5, $r11;
        androidx.compose.ui.semantics.SemanticsConfiguration $r7;
        androidx.compose.ui.semantics.SemanticsProperties $r8;
        androidx.compose.ui.semantics.SemanticsPropertyKey $r9;
        androidx.compose.ui.test.TextActionsKt$performImeAction$actionSpecified$1 $r10;
        java.lang.Object $r12;
        androidx.compose.ui.text.input.ImeAction $r13;
        androidx.compose.ui.text.input.ImeAction$Companion $r14;
        boolean $z0, $z1;
        androidx.compose.ui.test.TestContext $r16;
        androidx.compose.ui.test.TestOwner $r17;
        java.lang.AssertionError $r19;
        androidx.compose.ui.test.SemanticsSelector $r20;

        $r0 := @parameter0: androidx.compose.ui.test.SemanticsNodeInteraction;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r1 = "Failed to perform IME action.";

        r2 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsNodeInteraction: androidx.compose.ui.semantics.SemanticsNode fetchSemanticsNode(java.lang.String)>(r1);

        $r3 = staticinvoke <androidx.compose.ui.test.FiltersKt: androidx.compose.ui.test.SemanticsMatcher hasSetTextAction()>();

        $r4 = new androidx.compose.ui.test.TextActionsKt$performImeAction$1;

        specialinvoke $r4.<androidx.compose.ui.test.TextActionsKt$performImeAction$1: void <init>(java.lang.String)>(r1);

        $r5 = (kotlin.jvm.functions.Function0) $r4;

        staticinvoke <androidx.compose.ui.test.AssertionsKt: androidx.compose.ui.test.SemanticsNodeInteraction assert(androidx.compose.ui.test.SemanticsNodeInteraction,androidx.compose.ui.test.SemanticsMatcher,kotlin.jvm.functions.Function0)>($r0, $r3, $r5);

        $r7 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getConfig()>();

        $r8 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r9 = virtualinvoke $r8.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getImeAction()>();

        $r10 = <androidx.compose.ui.test.TextActionsKt$performImeAction$actionSpecified$1: androidx.compose.ui.test.TextActionsKt$performImeAction$actionSpecified$1 INSTANCE>;

        $r11 = (kotlin.jvm.functions.Function0) $r10;

        $r12 = virtualinvoke $r7.<androidx.compose.ui.semantics.SemanticsConfiguration: java.lang.Object getOrElse(androidx.compose.ui.semantics.SemanticsPropertyKey,kotlin.jvm.functions.Function0)>($r9, $r11);

        $r13 = (androidx.compose.ui.text.input.ImeAction) $r12;

        i0 = virtualinvoke $r13.<androidx.compose.ui.text.input.ImeAction: int unbox-impl()>();

        $r14 = <androidx.compose.ui.text.input.ImeAction: androidx.compose.ui.text.input.ImeAction$Companion Companion>;

        $i1 = virtualinvoke $r14.<androidx.compose.ui.text.input.ImeAction$Companion: int getDefault-eUduSuo()>();

        $z0 = staticinvoke <androidx.compose.ui.text.input.ImeAction: boolean equals-impl0(int,int)>(i0, $i1);

        if $z0 == 0 goto label1;

        $r19 = new java.lang.AssertionError;

        $r20 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsNodeInteraction: androidx.compose.ui.test.SemanticsSelector getSelector$ui_test_release()>();

        $r21 = staticinvoke <androidx.compose.ui.test.ErrorMessagesKt: java.lang.String buildGeneralErrorMessage(java.lang.String,androidx.compose.ui.test.SemanticsSelector,androidx.compose.ui.semantics.SemanticsNode)>("Failed to perform IME action as current node does not specify any.", $r20, r2);

        specialinvoke $r19.<java.lang.AssertionError: void <init>(java.lang.Object)>($r21);

        throw $r19;

     label1:
        $r15 = staticinvoke <androidx.compose.ui.test.FiltersKt: androidx.compose.ui.test.SemanticsMatcher isFocused()>();

        $z1 = virtualinvoke $r15.<androidx.compose.ui.test.SemanticsMatcher: boolean matches(androidx.compose.ui.semantics.SemanticsNode)>(r2);

        if $z1 != 0 goto label2;

        staticinvoke <androidx.compose.ui.test.ActionsKt: androidx.compose.ui.test.SemanticsNodeInteraction performClick(androidx.compose.ui.test.SemanticsNodeInteraction)>($r0);

     label2:
        $r16 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsNodeInteraction: androidx.compose.ui.test.TestContext getTestContext$ui_test_release()>();

        $r17 = virtualinvoke $r16.<androidx.compose.ui.test.TestContext: androidx.compose.ui.test.TestOwner getTestOwner$ui_test_release()>();

        interfaceinvoke $r17.<androidx.compose.ui.test.TestOwner: void sendImeAction-4L7nppU(androidx.compose.ui.semantics.SemanticsNode,int)>(r2, i0);

        return;
    }

    public static final void sendTextInputCommand(androidx.compose.ui.test.SemanticsNodeInteraction, java.util.List)
    {
        androidx.compose.ui.test.SemanticsNodeInteraction $r0;
        java.util.List r1;
        java.lang.String r2;
        androidx.compose.ui.semantics.SemanticsNode r3;
        androidx.compose.ui.test.SemanticsMatcher $r4, $r8;
        androidx.compose.ui.test.TextActionsKt$sendTextInputCommand$1 $r5;
        kotlin.jvm.functions.Function0 $r6;
        boolean $z0;
        androidx.compose.ui.test.TestContext $r9;
        androidx.compose.ui.test.TestOwner $r10;

        $r0 := @parameter0: androidx.compose.ui.test.SemanticsNodeInteraction;

        r1 := @parameter1: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "command");

        r2 = "Failed to perform text input.";

        r3 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsNodeInteraction: androidx.compose.ui.semantics.SemanticsNode fetchSemanticsNode(java.lang.String)>(r2);

        $r4 = staticinvoke <androidx.compose.ui.test.FiltersKt: androidx.compose.ui.test.SemanticsMatcher hasSetTextAction()>();

        $r5 = new androidx.compose.ui.test.TextActionsKt$sendTextInputCommand$1;

        specialinvoke $r5.<androidx.compose.ui.test.TextActionsKt$sendTextInputCommand$1: void <init>(java.lang.String)>(r2);

        $r6 = (kotlin.jvm.functions.Function0) $r5;

        staticinvoke <androidx.compose.ui.test.AssertionsKt: androidx.compose.ui.test.SemanticsNodeInteraction assert(androidx.compose.ui.test.SemanticsNodeInteraction,androidx.compose.ui.test.SemanticsMatcher,kotlin.jvm.functions.Function0)>($r0, $r4, $r6);

        $r8 = staticinvoke <androidx.compose.ui.test.FiltersKt: androidx.compose.ui.test.SemanticsMatcher isFocused()>();

        $z0 = virtualinvoke $r8.<androidx.compose.ui.test.SemanticsMatcher: boolean matches(androidx.compose.ui.semantics.SemanticsNode)>(r3);

        if $z0 != 0 goto label1;

        staticinvoke <androidx.compose.ui.test.ActionsKt: androidx.compose.ui.test.SemanticsNodeInteraction performClick(androidx.compose.ui.test.SemanticsNodeInteraction)>($r0);

     label1:
        $r9 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsNodeInteraction: androidx.compose.ui.test.TestContext getTestContext$ui_test_release()>();

        $r10 = virtualinvoke $r9.<androidx.compose.ui.test.TestContext: androidx.compose.ui.test.TestOwner getTestOwner$ui_test_release()>();

        interfaceinvoke $r10.<androidx.compose.ui.test.TestOwner: void sendTextInputCommand(androidx.compose.ui.semantics.SemanticsNode,java.util.List)>(r3, r1);

        return;
    }

