androidx.room.compiler.processing.SyntheticKspProcessor
<androidx.room.compiler.processing.SyntheticKspProcessor: androidx.room.compiler.processing.SyntheticProcessorImpl impl>
    private void <init>(com.google.devtools.ksp.processing.SymbolProcessorEnvironment, androidx.room.compiler.processing.XProcessingEnvConfig, androidx.room.compiler.processing.SyntheticProcessorImpl)
    {
        androidx.room.compiler.processing.SyntheticKspProcessor r0;
        com.google.devtools.ksp.processing.SymbolProcessorEnvironment r1;
        androidx.room.compiler.processing.XProcessingEnvConfig r2;
        androidx.room.compiler.processing.SyntheticProcessorImpl r3;

        r0 := @this: androidx.room.compiler.processing.SyntheticKspProcessor;

        r1 := @parameter0: com.google.devtools.ksp.processing.SymbolProcessorEnvironment;

        r2 := @parameter1: androidx.room.compiler.processing.XProcessingEnvConfig;

        r3 := @parameter2: androidx.room.compiler.processing.SyntheticProcessorImpl;

        specialinvoke r0.<androidx.room.compiler.processing.ksp.KspBasicAnnotationProcessor: void <init>(com.google.devtools.ksp.processing.SymbolProcessorEnvironment,androidx.room.compiler.processing.XProcessingEnvConfig)>(r1, r2);

        r0.<androidx.room.compiler.processing.SyntheticKspProcessor: androidx.room.compiler.processing.SyntheticProcessorImpl impl> = r3;

        return;
    }

    public java.util.List getInvocationInstances()
    {
        androidx.room.compiler.processing.SyntheticKspProcessor r0;
        androidx.room.compiler.processing.SyntheticProcessorImpl $r1;
        java.util.List $r2;

        r0 := @this: androidx.room.compiler.processing.SyntheticKspProcessor;

        $r1 = r0.<androidx.room.compiler.processing.SyntheticKspProcessor: androidx.room.compiler.processing.SyntheticProcessorImpl impl>;

        $r2 = virtualinvoke $r1.<androidx.room.compiler.processing.SyntheticProcessorImpl: java.util.List getInvocationInstances()>();

        return $r2;
    }

    public boolean expectsAnotherRound()
    {
        androidx.room.compiler.processing.SyntheticKspProcessor r0;
        androidx.room.compiler.processing.SyntheticProcessorImpl $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.SyntheticKspProcessor;

        $r1 = r0.<androidx.room.compiler.processing.SyntheticKspProcessor: androidx.room.compiler.processing.SyntheticProcessorImpl impl>;

        $z0 = virtualinvoke $r1.<androidx.room.compiler.processing.SyntheticProcessorImpl: boolean expectsAnotherRound()>();

        return $z0;
    }

    public java.lang.Throwable getProcessingException()
    {
        androidx.room.compiler.processing.SyntheticKspProcessor r0;
        androidx.room.compiler.processing.SyntheticProcessorImpl $r1;
        java.lang.Throwable $r2;

        r0 := @this: androidx.room.compiler.processing.SyntheticKspProcessor;

        $r1 = r0.<androidx.room.compiler.processing.SyntheticKspProcessor: androidx.room.compiler.processing.SyntheticProcessorImpl impl>;

        $r2 = virtualinvoke $r1.<androidx.room.compiler.processing.SyntheticProcessorImpl: java.lang.Throwable getProcessingException()>();

        return $r2;
    }

    public void <init>(com.google.devtools.ksp.processing.SymbolProcessorEnvironment, androidx.room.compiler.processing.XProcessingEnvConfig, java.util.List)
    {
        androidx.room.compiler.processing.SyntheticKspProcessor r0;
        com.google.devtools.ksp.processing.SymbolProcessorEnvironment r1;
        androidx.room.compiler.processing.XProcessingEnvConfig r2;
        java.util.List r3;
        androidx.room.compiler.processing.SyntheticProcessorImpl $r4;

        r0 := @this: androidx.room.compiler.processing.SyntheticKspProcessor;

        r1 := @parameter0: com.google.devtools.ksp.processing.SymbolProcessorEnvironment;

        r2 := @parameter1: androidx.room.compiler.processing.XProcessingEnvConfig;

        r3 := @parameter2: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "symbolProcessorEnvironment");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "config");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "handlers");

        $r4 = new androidx.room.compiler.processing.SyntheticProcessorImpl;

        specialinvoke $r4.<androidx.room.compiler.processing.SyntheticProcessorImpl: void <init>(java.util.List)>(r3);

        specialinvoke r0.<androidx.room.compiler.processing.SyntheticKspProcessor: void <init>(com.google.devtools.ksp.processing.SymbolProcessorEnvironment,androidx.room.compiler.processing.XProcessingEnvConfig,androidx.room.compiler.processing.SyntheticProcessorImpl)>(r1, r2, $r4);

        return;
    }

    public java.lang.Iterable processingSteps()
    {
        androidx.room.compiler.processing.SyntheticKspProcessor r0;
        androidx.room.compiler.processing.SyntheticProcessorImpl $r1;
        java.util.List $r2;
        java.lang.Iterable $r3;

        r0 := @this: androidx.room.compiler.processing.SyntheticKspProcessor;

        $r1 = r0.<androidx.room.compiler.processing.SyntheticKspProcessor: androidx.room.compiler.processing.SyntheticProcessorImpl impl>;

        $r2 = virtualinvoke $r1.<androidx.room.compiler.processing.SyntheticProcessorImpl: java.util.List processingSteps$room_compiler_processing_testing()>();

        $r3 = (java.lang.Iterable) $r2;

        return $r3;
    }

    public void postRound(androidx.room.compiler.processing.XProcessingEnv, androidx.room.compiler.processing.XRoundEnv)
    {
        androidx.room.compiler.processing.SyntheticKspProcessor r0;
        androidx.room.compiler.processing.XProcessingEnv r1;
        androidx.room.compiler.processing.XRoundEnv r2;
        boolean $z0;
        androidx.room.compiler.processing.SyntheticProcessorImpl $r3;

        r0 := @this: androidx.room.compiler.processing.SyntheticKspProcessor;

        r1 := @parameter0: androidx.room.compiler.processing.XProcessingEnv;

        r2 := @parameter1: androidx.room.compiler.processing.XRoundEnv;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "round");

        $z0 = interfaceinvoke r2.<androidx.room.compiler.processing.XRoundEnv: boolean isProcessingOver()>();

        if $z0 != 0 goto label1;

        $r3 = r0.<androidx.room.compiler.processing.SyntheticKspProcessor: androidx.room.compiler.processing.SyntheticProcessorImpl impl>;

        virtualinvoke $r3.<androidx.room.compiler.processing.SyntheticProcessorImpl: void postRound$room_compiler_processing_testing(androidx.room.compiler.processing.XProcessingEnv,androidx.room.compiler.processing.XRoundEnv)>(r1, r2);

     label1:
        return;
    }

