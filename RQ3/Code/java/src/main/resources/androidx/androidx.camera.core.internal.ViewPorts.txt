androidx.camera.core.internal.ViewPorts
    private void <init>()
    {
        androidx.camera.core.internal.ViewPorts r0;

        r0 := @this: androidx.camera.core.internal.ViewPorts;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.Map calculateViewPortRects(android.graphics.Rect, boolean, android.util.Rational, int, int, int, java.util.Map)
    {
        android.graphics.Rect r0, r8, $r16;
        boolean z0, $z1, $z7, $z8;
        android.util.Rational r1, r41;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        java.util.Map r2;
        android.graphics.RectF r3, r5, $r10, $r22, $r31, $r32, $r34, r39, r40, r42, r44;
        java.util.HashMap r4, $r9, $r33, r43;
        java.util.Iterator r6, r36;
        java.util.Map$Entry r7, r37;
        android.graphics.Matrix $r11, $r15, $r21, r38, r45;
        java.util.Set $r12, $r35;
        java.lang.Object $r13, $r14, $r17, $r20, $r23, $r25, $r28;
        androidx.camera.core.UseCase $r18, $r29;
        android.util.Size $r24, $r26;
        float $f0, $f1;
        android.graphics.Matrix$ScaleToFit $r27;

        r0 := @parameter0: android.graphics.Rect;

        z0 := @parameter1: boolean;

        r1 := @parameter2: android.util.Rational;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        r2 := @parameter6: java.util.Map;

        $i3 = virtualinvoke r0.<android.graphics.Rect: int width()>();

        if $i3 <= 0 goto label1;

        $i6 = virtualinvoke r0.<android.graphics.Rect: int height()>();

        if $i6 <= 0 goto label1;

        $z7 = 1;

        goto label2;

     label1:
        $z7 = 0;

     label2:
        staticinvoke <androidx.core.util.Preconditions: void checkArgument(boolean,java.lang.Object)>($z7, "Cannot compute viewport crop rects zero sized sensor rect.");

        $r32 = new android.graphics.RectF;

        specialinvoke $r32.<android.graphics.RectF: void <init>(android.graphics.Rect)>(r0);

        r3 = $r32;

        $r33 = new java.util.HashMap;

        specialinvoke $r33.<java.util.HashMap: void <init>()>();

        r4 = $r33;

        $r34 = new android.graphics.RectF;

        specialinvoke $r34.<android.graphics.RectF: void <init>(android.graphics.Rect)>(r0);

        r5 = $r34;

        $r35 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        r36 = interfaceinvoke $r35.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z8 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label4;

        $r20 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>();

        r37 = (java.util.Map$Entry) $r20;

        $r21 = new android.graphics.Matrix;

        specialinvoke $r21.<android.graphics.Matrix: void <init>()>();

        r38 = $r21;

        $r22 = new android.graphics.RectF;

        $r23 = interfaceinvoke r37.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r24 = (android.util.Size) $r23;

        $i4 = virtualinvoke $r24.<android.util.Size: int getWidth()>();

        $f0 = (float) $i4;

        $r25 = interfaceinvoke r37.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r26 = (android.util.Size) $r25;

        $i5 = virtualinvoke $r26.<android.util.Size: int getHeight()>();

        $f1 = (float) $i5;

        specialinvoke $r22.<android.graphics.RectF: void <init>(float,float,float,float)>(0.0F, 0.0F, $f0, $f1);

        r39 = $r22;

        $r27 = <android.graphics.Matrix$ScaleToFit: android.graphics.Matrix$ScaleToFit CENTER>;

        virtualinvoke r38.<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit)>(r39, r3, $r27);

        $r28 = interfaceinvoke r37.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r29 = (androidx.camera.core.UseCase) $r28;

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r29, r38);

        $r31 = new android.graphics.RectF;

        specialinvoke $r31.<android.graphics.RectF: void <init>()>();

        r40 = $r31;

        virtualinvoke r38.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF,android.graphics.RectF)>(r40, r39);

        virtualinvoke r5.<android.graphics.RectF: boolean intersect(android.graphics.RectF)>(r40);

        goto label3;

     label4:
        r41 = staticinvoke <androidx.camera.core.internal.utils.ImageUtil: android.util.Rational getRotatedAspectRatio(int,android.util.Rational)>(i0, r1);

        r42 = staticinvoke <androidx.camera.core.internal.ViewPorts: android.graphics.RectF getScaledRect(android.graphics.RectF,android.util.Rational,int,boolean,int,int)>(r5, r41, i1, z0, i2, i0);

        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        r43 = $r9;

        $r10 = new android.graphics.RectF;

        specialinvoke $r10.<android.graphics.RectF: void <init>()>();

        r44 = $r10;

        $r11 = new android.graphics.Matrix;

        specialinvoke $r11.<android.graphics.Matrix: void <init>()>();

        r45 = $r11;

        $r12 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>();

        r6 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r13 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r13;

        $r14 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r15 = (android.graphics.Matrix) $r14;

        virtualinvoke $r15.<android.graphics.Matrix: boolean invert(android.graphics.Matrix)>(r45);

        virtualinvoke r45.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF,android.graphics.RectF)>(r44, r42);

        $r16 = new android.graphics.Rect;

        specialinvoke $r16.<android.graphics.Rect: void <init>()>();

        r8 = $r16;

        virtualinvoke r44.<android.graphics.RectF: void round(android.graphics.Rect)>(r8);

        $r17 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r18 = (androidx.camera.core.UseCase) $r17;

        interfaceinvoke r43.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, r8);

        goto label5;

     label6:
        return r43;
    }

    public static android.graphics.RectF getScaledRect(android.graphics.RectF, android.util.Rational, int, boolean, int, int)
    {
        android.graphics.RectF r0, r3, r4, $r6, $r15, $r16;
        android.util.Rational r1;
        int i0, i1, i2, $i3, $i4;
        boolean z0, $z5;
        android.graphics.Matrix r2, $r5;
        float $f0, $f1;
        android.graphics.Matrix$ScaleToFit $r7, $r8, $r9;
        java.lang.IllegalStateException $r10;
        java.lang.StringBuilder $r11, $r12, $r13;
        java.lang.String $r14;

        r0 := @parameter0: android.graphics.RectF;

        r1 := @parameter1: android.util.Rational;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        if i0 != 3 goto label1;

        return r0;

     label1:
        $r5 = new android.graphics.Matrix;

        specialinvoke $r5.<android.graphics.Matrix: void <init>()>();

        r2 = $r5;

        $r6 = new android.graphics.RectF;

        $i3 = virtualinvoke r1.<android.util.Rational: int getNumerator()>();

        $f0 = (float) $i3;

        $i4 = virtualinvoke r1.<android.util.Rational: int getDenominator()>();

        $f1 = (float) $i4;

        specialinvoke $r6.<android.graphics.RectF: void <init>(float,float,float,float)>(0.0F, 0.0F, $f0, $f1);

        r3 = $r6;

        tableswitch(i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            case 2: goto label4;
            default: goto label5;
        };

     label2:
        $r8 = <android.graphics.Matrix$ScaleToFit: android.graphics.Matrix$ScaleToFit CENTER>;

        virtualinvoke r2.<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit)>(r3, r0, $r8);

        goto label6;

     label3:
        $r9 = <android.graphics.Matrix$ScaleToFit: android.graphics.Matrix$ScaleToFit START>;

        virtualinvoke r2.<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit)>(r3, r0, $r9);

        goto label6;

     label4:
        $r7 = <android.graphics.Matrix$ScaleToFit: android.graphics.Matrix$ScaleToFit END>;

        virtualinvoke r2.<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit)>(r3, r0, $r7);

        goto label6;

     label5:
        $r10 = new java.lang.IllegalStateException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected scale type: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r14);

        throw $r10;

     label6:
        $r15 = new android.graphics.RectF;

        specialinvoke $r15.<android.graphics.RectF: void <init>()>();

        r4 = $r15;

        virtualinvoke r2.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF,android.graphics.RectF)>(r4, r3);

        $z5 = staticinvoke <androidx.camera.core.internal.ViewPorts: boolean shouldMirrorStartAndEnd(boolean,int)>(z0, i1);

        $r16 = staticinvoke <androidx.camera.core.internal.ViewPorts: android.graphics.RectF correctStartOrEnd(boolean,int,android.graphics.RectF,android.graphics.RectF)>($z5, i2, r0, r4);

        return $r16;
    }

    private static android.graphics.RectF correctStartOrEnd(boolean, int, android.graphics.RectF, android.graphics.RectF)
    {
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        int i0;
        android.graphics.RectF r0, r1, $r2, $r3, $r4, $r5;
        float $f0, $f1, $f2, $f3;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11;
        java.lang.String $r12;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r0 := @parameter2: android.graphics.RectF;

        r1 := @parameter3: android.graphics.RectF;

        if i0 != 0 goto label01;

        if z0 != 0 goto label01;

        $z9 = 1;

        goto label02;

     label01:
        $z9 = 0;

     label02:
        z1 = $z9;

        if i0 != 90 goto label03;

        if z0 == 0 goto label03;

        $z10 = 1;

        goto label04;

     label03:
        $z10 = 0;

     label04:
        z2 = $z10;

        if z1 != 0 goto label05;

        if z2 == 0 goto label06;

     label05:
        return r1;

     label06:
        if i0 != 0 goto label07;

        if z0 == 0 goto label07;

        $z11 = 1;

        goto label08;

     label07:
        $z11 = 0;

     label08:
        z3 = $z11;

        if i0 != 270 goto label09;

        if z0 != 0 goto label09;

        $z12 = 1;

        goto label10;

     label09:
        $z12 = 0;

     label10:
        z4 = $z12;

        if z3 != 0 goto label11;

        if z4 == 0 goto label12;

     label11:
        $f0 = virtualinvoke r0.<android.graphics.RectF: float centerX()>();

        $r2 = staticinvoke <androidx.camera.core.internal.ViewPorts: android.graphics.RectF flipHorizontally(android.graphics.RectF,float)>(r1, $f0);

        return $r2;

     label12:
        if i0 != 90 goto label13;

        if z0 != 0 goto label13;

        $z13 = 1;

        goto label14;

     label13:
        $z13 = 0;

     label14:
        z5 = $z13;

        if i0 != 180 goto label15;

        if z0 == 0 goto label15;

        $z14 = 1;

        goto label16;

     label15:
        $z14 = 0;

     label16:
        z6 = $z14;

        if z5 != 0 goto label17;

        if z6 == 0 goto label18;

     label17:
        $f1 = virtualinvoke r0.<android.graphics.RectF: float centerY()>();

        $r3 = staticinvoke <androidx.camera.core.internal.ViewPorts: android.graphics.RectF flipVertically(android.graphics.RectF,float)>(r1, $f1);

        return $r3;

     label18:
        if i0 != 180 goto label19;

        if z0 != 0 goto label19;

        $z15 = 1;

        goto label20;

     label19:
        $z15 = 0;

     label20:
        z7 = $z15;

        if i0 != 270 goto label21;

        if z0 == 0 goto label21;

        $z16 = 1;

        goto label22;

     label21:
        $z16 = 0;

     label22:
        z8 = $z16;

        if z7 != 0 goto label23;

        if z8 == 0 goto label24;

     label23:
        $f2 = virtualinvoke r0.<android.graphics.RectF: float centerY()>();

        $r4 = staticinvoke <androidx.camera.core.internal.ViewPorts: android.graphics.RectF flipVertically(android.graphics.RectF,float)>(r1, $f2);

        $f3 = virtualinvoke r0.<android.graphics.RectF: float centerX()>();

        $r5 = staticinvoke <androidx.camera.core.internal.ViewPorts: android.graphics.RectF flipHorizontally(android.graphics.RectF,float)>($r4, $f3);

        return $r5;

     label24:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid argument: mirrored ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rotation ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r6;
    }

    private static boolean shouldMirrorStartAndEnd(boolean, int)
    {
        boolean z0, $z1, $z3;
        int i0;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        if i0 != 1 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        $z1 = z0 ^ $z3;

        return $z1;
    }

    private static android.graphics.RectF flipHorizontally(android.graphics.RectF, float)
    {
        android.graphics.RectF r0, $r1;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6;

        r0 := @parameter0: android.graphics.RectF;

        f0 := @parameter1: float;

        $r1 = new android.graphics.RectF;

        $f1 = r0.<android.graphics.RectF: float right>;

        $f2 = staticinvoke <androidx.camera.core.internal.ViewPorts: float flipX(float,float)>($f1, f0);

        $f4 = r0.<android.graphics.RectF: float top>;

        $f3 = r0.<android.graphics.RectF: float left>;

        $f5 = staticinvoke <androidx.camera.core.internal.ViewPorts: float flipX(float,float)>($f3, f0);

        $f6 = r0.<android.graphics.RectF: float bottom>;

        specialinvoke $r1.<android.graphics.RectF: void <init>(float,float,float,float)>($f2, $f4, $f5, $f6);

        return $r1;
    }

    private static android.graphics.RectF flipVertically(android.graphics.RectF, float)
    {
        android.graphics.RectF r0, $r1;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6;

        r0 := @parameter0: android.graphics.RectF;

        f0 := @parameter1: float;

        $r1 = new android.graphics.RectF;

        $f2 = r0.<android.graphics.RectF: float left>;

        $f1 = r0.<android.graphics.RectF: float bottom>;

        $f3 = staticinvoke <androidx.camera.core.internal.ViewPorts: float flipY(float,float)>($f1, f0);

        $f5 = r0.<android.graphics.RectF: float right>;

        $f4 = r0.<android.graphics.RectF: float top>;

        $f6 = staticinvoke <androidx.camera.core.internal.ViewPorts: float flipY(float,float)>($f4, f0);

        specialinvoke $r1.<android.graphics.RectF: void <init>(float,float,float,float)>($f2, $f3, $f5, $f6);

        return $r1;
    }

    private static float flipX(float, float)
    {
        float f0, f1, $f2, $f3;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $f2 = f1 + f1;

        $f3 = $f2 - f0;

        return $f3;
    }

    private static float flipY(float, float)
    {
        float f0, f1, $f2, $f3;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $f2 = f1 + f1;

        $f3 = $f2 - f0;

        return $f3;
    }

