androidx.compose.runtime.saveable.SaveableStateRegistryImpl
<androidx.compose.runtime.saveable.SaveableStateRegistryImpl: kotlin.jvm.functions.Function1 canBeSaved>
<androidx.compose.runtime.saveable.SaveableStateRegistryImpl: java.util.Map restored>
<androidx.compose.runtime.saveable.SaveableStateRegistryImpl: java.util.Map valueProviders>
    public void <init>(java.util.Map, kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.saveable.SaveableStateRegistryImpl r0;
        java.util.Map r1, $r5, $r7;
        kotlin.jvm.functions.Function1 r2;
        java.util.LinkedHashMap $r3, $r6;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateRegistryImpl;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "canBeSaved");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.runtime.saveable.SaveableStateRegistryImpl: kotlin.jvm.functions.Function1 canBeSaved> = r2;

        if r1 == null goto label1;

        $r5 = staticinvoke <kotlin.collections.MapsKt: java.util.Map toMutableMap(java.util.Map)>(r1);

        if $r5 != null goto label2;

     label1:
        $r3 = new java.util.LinkedHashMap;

        specialinvoke $r3.<java.util.LinkedHashMap: void <init>()>();

        $r5 = (java.util.Map) $r3;

     label2:
        r0.<androidx.compose.runtime.saveable.SaveableStateRegistryImpl: java.util.Map restored> = $r5;

        $r6 = new java.util.LinkedHashMap;

        specialinvoke $r6.<java.util.LinkedHashMap: void <init>()>();

        $r7 = (java.util.Map) $r6;

        r0.<androidx.compose.runtime.saveable.SaveableStateRegistryImpl: java.util.Map valueProviders> = $r7;

        return;
    }

    public boolean canBeSaved(java.lang.Object)
    {
        androidx.compose.runtime.saveable.SaveableStateRegistryImpl r0;
        java.lang.Object r1, $r3;
        kotlin.jvm.functions.Function1 $r2;
        java.lang.Boolean $r4;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateRegistryImpl;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = r0.<androidx.compose.runtime.saveable.SaveableStateRegistryImpl: kotlin.jvm.functions.Function1 canBeSaved>;

        $r3 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public java.lang.Object consumeRestored(java.lang.String)
    {
        androidx.compose.runtime.saveable.SaveableStateRegistryImpl r0;
        java.lang.String r1;
        java.util.List r2, $r7;
        java.util.Map $r3, $r6;
        java.lang.Object $r4, $r9;
        java.util.Collection $r5;
        boolean $z0, $z1;
        int $i0, $i1;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateRegistryImpl;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        $r3 = r0.<androidx.compose.runtime.saveable.SaveableStateRegistryImpl: java.util.Map restored>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r2 = (java.util.List) $r4;

        if r2 == null goto label4;

        $r5 = (java.util.Collection) r2;

        $z0 = interfaceinvoke $r5.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 == 0 goto label4;

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i0 <= 1 goto label3;

        $r6 = r0.<androidx.compose.runtime.saveable.SaveableStateRegistryImpl: java.util.Map restored>;

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        $r7 = interfaceinvoke r2.<java.util.List: java.util.List subList(int,int)>(1, $i1);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r7);

     label3:
        $r9 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        goto label5;

     label4:
        $r9 = null;

     label5:
        return $r9;
    }

    public androidx.compose.runtime.saveable.SaveableStateRegistry$Entry registerProvider(java.lang.String, kotlin.jvm.functions.Function0)
    {
        androidx.compose.runtime.saveable.SaveableStateRegistryImpl r0;
        java.lang.String r1, $r12, $r13;
        kotlin.jvm.functions.Function0 r2;
        java.util.Map $r3;
        java.lang.Object r4, $r15;
        java.lang.CharSequence $r5;
        boolean $z0, $z2;
        java.util.List $r6, $r14;
        androidx.compose.runtime.saveable.SaveableStateRegistryImpl$registerProvider$3 $r7;
        androidx.compose.runtime.saveable.SaveableStateRegistry$Entry $r8;
        java.util.ArrayList $r9;
        java.lang.IllegalArgumentException $r11;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateRegistryImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "valueProvider");

        $r5 = (java.lang.CharSequence) r1;

        $z0 = staticinvoke <kotlin.text.StringsKt: boolean isBlank(java.lang.CharSequence)>($r5);

        if $z0 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        if $z2 != 0 goto label3;

        $r13 = "Registered key is empty or blank";

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = virtualinvoke $r13.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r11;

     label3:
        $r3 = r0.<androidx.compose.runtime.saveable.SaveableStateRegistryImpl: java.util.Map valueProviders>;

        r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        if r4 != null goto label4;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        $r14 = (java.util.List) $r9;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r14);

        $r15 = $r14;

        goto label5;

     label4:
        $r15 = r4;

     label5:
        $r6 = (java.util.List) $r15;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r2);

        $r7 = new androidx.compose.runtime.saveable.SaveableStateRegistryImpl$registerProvider$3;

        specialinvoke $r7.<androidx.compose.runtime.saveable.SaveableStateRegistryImpl$registerProvider$3: void <init>(androidx.compose.runtime.saveable.SaveableStateRegistryImpl,java.lang.String,kotlin.jvm.functions.Function0)>(r0, r1, r2);

        $r8 = (androidx.compose.runtime.saveable.SaveableStateRegistry$Entry) $r7;

        return $r8;
    }

    public java.util.Map performSave()
    {
        androidx.compose.runtime.saveable.SaveableStateRegistryImpl r0;
        java.util.Map r1, $r2, $r11, r29, r32;
        java.util.Iterator r3;
        java.util.Map$Entry r4, r5;
        java.lang.String r6, r10, $r21, $r26, r28;
        java.util.List r7, r34;
        int i0, i1, $i2, i3, i4;
        java.util.ArrayList r8, $r16, r31, r33;
        java.lang.Object r9, $r13, $r14, $r15, $r18, $r22, r27;
        java.util.Set $r12;
        boolean $z3, $z5, $z6;
        kotlin.jvm.functions.Function0 $r19, $r23;
        java.lang.IllegalStateException $r20, $r25;
        java.lang.Object[] r30;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateRegistryImpl;

        $r11 = r0.<androidx.compose.runtime.saveable.SaveableStateRegistryImpl: java.util.Map restored>;

        r1 = staticinvoke <kotlin.collections.MapsKt: java.util.Map toMutableMap(java.util.Map)>($r11);

        $r2 = r0.<androidx.compose.runtime.saveable.SaveableStateRegistryImpl: java.util.Map valueProviders>;

        $r12 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label8;

        $r13 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r13;

        r5 = r4;

        $r14 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        r6 = (java.lang.String) $r14;

        $r15 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        r7 = (java.util.List) $r15;

        $i2 = interfaceinvoke r7.<java.util.List: int size()>();

        if $i2 != 1 goto label3;

        $r22 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(0);

        $r23 = (kotlin.jvm.functions.Function0) $r22;

        r27 = interfaceinvoke $r23.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        if r27 == null goto label7;

        $z6 = virtualinvoke r0.<androidx.compose.runtime.saveable.SaveableStateRegistryImpl: boolean canBeSaved(java.lang.Object)>(r27);

        if $z6 != 0 goto label2;

        r28 = "Check failed.";

        $r25 = new java.lang.IllegalStateException;

        $r26 = virtualinvoke r28.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r25.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r26);

        throw $r25;

     label2:
        r29 = r1;

        r30 = newarray (java.lang.Object)[1];

        r30[0] = r27;

        r31 = staticinvoke <kotlin.collections.CollectionsKt: java.util.ArrayList arrayListOf(java.lang.Object[])>(r30);

        interfaceinvoke r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r31);

        goto label7;

     label3:
        r32 = r1;

        i3 = interfaceinvoke r7.<java.util.List: int size()>();

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>(int)>(i3);

        r33 = $r16;

        i4 = 0;

     label4:
        if i4 >= i3 goto label6;

        i0 = i4;

        i1 = i0;

        r8 = r33;

        $r18 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(i1);

        $r19 = (kotlin.jvm.functions.Function0) $r18;

        r9 = interfaceinvoke $r19.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        if r9 == null goto label5;

        $z5 = virtualinvoke r0.<androidx.compose.runtime.saveable.SaveableStateRegistryImpl: boolean canBeSaved(java.lang.Object)>(r9);

        if $z5 != 0 goto label5;

        r10 = "Check failed.";

        $r20 = new java.lang.IllegalStateException;

        $r21 = virtualinvoke r10.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r21);

        throw $r20;

     label5:
        virtualinvoke r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r9);

        i4 = i4 + 1;

        goto label4;

     label6:
        r34 = (java.util.List) r33;

        interfaceinvoke r32.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r34);

     label7:
        goto label1;

     label8:
        return r1;
    }

    public static final java.util.Map access$getValueProviders$p(androidx.compose.runtime.saveable.SaveableStateRegistryImpl)
    {
        androidx.compose.runtime.saveable.SaveableStateRegistryImpl $r0;
        java.util.Map $r1;

        $r0 := @parameter0: androidx.compose.runtime.saveable.SaveableStateRegistryImpl;

        $r1 = $r0.<androidx.compose.runtime.saveable.SaveableStateRegistryImpl: java.util.Map valueProviders>;

        return $r1;
    }

androidx.compose.runtime.saveable.SaveableStateRegistryImpl$registerProvider$3
<androidx.compose.runtime.saveable.SaveableStateRegistryImpl$registerProvider$3: androidx.compose.runtime.saveable.SaveableStateRegistryImpl this$0>
<androidx.compose.runtime.saveable.SaveableStateRegistryImpl$registerProvider$3: java.lang.String $key>
<androidx.compose.runtime.saveable.SaveableStateRegistryImpl$registerProvider$3: kotlin.jvm.functions.Function0 $valueProvider>
    void <init>(androidx.compose.runtime.saveable.SaveableStateRegistryImpl, java.lang.String, kotlin.jvm.functions.Function0)
    {
        androidx.compose.runtime.saveable.SaveableStateRegistryImpl$registerProvider$3 r0;
        androidx.compose.runtime.saveable.SaveableStateRegistryImpl $r1;
        java.lang.String $r2;
        kotlin.jvm.functions.Function0 $r3;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateRegistryImpl$registerProvider$3;

        $r1 := @parameter0: androidx.compose.runtime.saveable.SaveableStateRegistryImpl;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: kotlin.jvm.functions.Function0;

        r0.<androidx.compose.runtime.saveable.SaveableStateRegistryImpl$registerProvider$3: androidx.compose.runtime.saveable.SaveableStateRegistryImpl this$0> = $r1;

        r0.<androidx.compose.runtime.saveable.SaveableStateRegistryImpl$registerProvider$3: java.lang.String $key> = $r2;

        r0.<androidx.compose.runtime.saveable.SaveableStateRegistryImpl$registerProvider$3: kotlin.jvm.functions.Function0 $valueProvider> = $r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void unregister()
    {
        androidx.compose.runtime.saveable.SaveableStateRegistryImpl$registerProvider$3 r0;
        java.util.List r1;
        androidx.compose.runtime.saveable.SaveableStateRegistryImpl $r2, $r7;
        java.util.Map $r3, $r8;
        java.lang.String $r4, $r9;
        java.lang.Object $r5;
        java.util.Collection $r6;
        boolean $z0, $z2;
        kotlin.jvm.functions.Function0 $r11;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateRegistryImpl$registerProvider$3;

        $r2 = r0.<androidx.compose.runtime.saveable.SaveableStateRegistryImpl$registerProvider$3: androidx.compose.runtime.saveable.SaveableStateRegistryImpl this$0>;

        $r3 = staticinvoke <androidx.compose.runtime.saveable.SaveableStateRegistryImpl: java.util.Map access$getValueProviders$p(androidx.compose.runtime.saveable.SaveableStateRegistryImpl)>($r2);

        $r4 = r0.<androidx.compose.runtime.saveable.SaveableStateRegistryImpl$registerProvider$3: java.lang.String $key>;

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r4);

        r1 = (java.util.List) $r5;

        if r1 == null goto label1;

        $r11 = r0.<androidx.compose.runtime.saveable.SaveableStateRegistryImpl$registerProvider$3: kotlin.jvm.functions.Function0 $valueProvider>;

        interfaceinvoke r1.<java.util.List: boolean remove(java.lang.Object)>($r11);

        goto label1;

     label1:
        if r1 == null goto label4;

        $r6 = (java.util.Collection) r1;

        $z0 = interfaceinvoke $r6.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        if $z2 == 0 goto label4;

        $r7 = r0.<androidx.compose.runtime.saveable.SaveableStateRegistryImpl$registerProvider$3: androidx.compose.runtime.saveable.SaveableStateRegistryImpl this$0>;

        $r8 = staticinvoke <androidx.compose.runtime.saveable.SaveableStateRegistryImpl: java.util.Map access$getValueProviders$p(androidx.compose.runtime.saveable.SaveableStateRegistryImpl)>($r7);

        $r9 = r0.<androidx.compose.runtime.saveable.SaveableStateRegistryImpl$registerProvider$3: java.lang.String $key>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r1);

     label4:
        return;
    }

