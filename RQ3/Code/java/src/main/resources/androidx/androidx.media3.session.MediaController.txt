androidx.media3.session.MediaController
<androidx.media3.session.MediaController: long RELEASE_UNBIND_TIMEOUT_MS>
<androidx.media3.session.MediaController: java.lang.String TAG>
<androidx.media3.session.MediaController: java.lang.String WRONG_THREAD_ERROR_MESSAGE>
<androidx.media3.session.MediaController: androidx.media3.common.Timeline$Window window>
<androidx.media3.session.MediaController: boolean released>
<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>
<androidx.media3.session.MediaController: androidx.media3.session.MediaController$Listener listener>
<androidx.media3.session.MediaController: android.os.Handler applicationHandler>
<androidx.media3.session.MediaController: long timeDiffMs>
<androidx.media3.session.MediaController: boolean connectionNotified>
<androidx.media3.session.MediaController: androidx.media3.session.MediaController$ConnectionCallback connectionCallback>
    void <init>(android.content.Context, androidx.media3.session.SessionToken, android.os.Bundle, androidx.media3.session.MediaController$Listener, android.os.Looper, androidx.media3.session.MediaController$ConnectionCallback, androidx.media3.session.BitmapLoader)
    {
        androidx.media3.session.MediaController r0;
        android.content.Context r1;
        androidx.media3.session.SessionToken r2;
        android.os.Bundle r3;
        androidx.media3.session.MediaController$Listener r4;
        android.os.Looper r5;
        androidx.media3.session.MediaController$ConnectionCallback r6;
        androidx.media3.session.BitmapLoader r7;
        androidx.media3.common.Timeline$Window $r10;
        android.os.Handler $r11;
        androidx.media3.session.MediaController$MediaControllerImpl $r12, $r13;

        r0 := @this: androidx.media3.session.MediaController;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media3.session.SessionToken;

        r3 := @parameter2: android.os.Bundle;

        r4 := @parameter3: androidx.media3.session.MediaController$Listener;

        r5 := @parameter4: android.os.Looper;

        r6 := @parameter5: androidx.media3.session.MediaController$ConnectionCallback;

        r7 := @parameter6: androidx.media3.session.BitmapLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "context must not be null");

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "token must not be null");

        $r10 = new androidx.media3.common.Timeline$Window;

        specialinvoke $r10.<androidx.media3.common.Timeline$Window: void <init>()>();

        r0.<androidx.media3.session.MediaController: androidx.media3.common.Timeline$Window window> = $r10;

        r0.<androidx.media3.session.MediaController: long timeDiffMs> = -9223372036854775807L;

        r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$Listener listener> = r4;

        $r11 = new android.os.Handler;

        specialinvoke $r11.<android.os.Handler: void <init>(android.os.Looper)>(r5);

        r0.<androidx.media3.session.MediaController: android.os.Handler applicationHandler> = $r11;

        r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$ConnectionCallback connectionCallback> = r6;

        $r12 = virtualinvoke r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl createImpl(android.content.Context,androidx.media3.session.SessionToken,android.os.Bundle,android.os.Looper,androidx.media3.session.BitmapLoader)>(r1, r2, r3, r5, r7);

        r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl> = $r12;

        $r13 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r13.<androidx.media3.session.MediaController$MediaControllerImpl: void connect()>();

        return;
    }

    androidx.media3.session.MediaController$MediaControllerImpl createImpl(android.content.Context, androidx.media3.session.SessionToken, android.os.Bundle, android.os.Looper, androidx.media3.session.BitmapLoader)
    {
        androidx.media3.session.MediaController r0;
        android.content.Context r1;
        androidx.media3.session.SessionToken r2;
        android.os.Bundle r3;
        android.os.Looper r4;
        androidx.media3.session.BitmapLoader r5, $r9;
        boolean $z0;
        androidx.media3.session.MediaControllerImplBase $r6;
        androidx.media3.session.MediaControllerImplLegacy $r7;
        java.lang.Object $r8;

        r0 := @this: androidx.media3.session.MediaController;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media3.session.SessionToken;

        r3 := @parameter2: android.os.Bundle;

        r4 := @parameter3: android.os.Looper;

        r5 := @parameter4: androidx.media3.session.BitmapLoader;

        $z0 = virtualinvoke r2.<androidx.media3.session.SessionToken: boolean isLegacySession()>();

        if $z0 == 0 goto label1;

        $r7 = new androidx.media3.session.MediaControllerImplLegacy;

        $r8 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r5);

        $r9 = (androidx.media3.session.BitmapLoader) $r8;

        specialinvoke $r7.<androidx.media3.session.MediaControllerImplLegacy: void <init>(android.content.Context,androidx.media3.session.MediaController,androidx.media3.session.SessionToken,android.os.Looper,androidx.media3.session.BitmapLoader)>(r1, r0, r2, r4, $r9);

        return $r7;

     label1:
        $r6 = new androidx.media3.session.MediaControllerImplBase;

        specialinvoke $r6.<androidx.media3.session.MediaControllerImplBase: void <init>(android.content.Context,androidx.media3.session.MediaController,androidx.media3.session.SessionToken,android.os.Bundle,android.os.Looper)>(r1, r0, r2, r3, r4);

        return $r6;
    }

    public void stop()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring stop().");

        return;

     label1:
        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: void stop()>();

        return;
    }

    public void stop(boolean)
    {
        androidx.media3.session.MediaController r0;
        boolean z0;

        r0 := @this: androidx.media3.session.MediaController;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<androidx.media3.session.MediaController: void stop()>();

        if z0 == 0 goto label1;

        virtualinvoke r0.<androidx.media3.session.MediaController: void clearMediaItems()>();

     label1:
        return;
    }

    public void release()
    {
        androidx.media3.session.MediaController r0;
        java.lang.Throwable r1, $r6;
        boolean $z0, $z1;
        android.os.Handler $r2;
        androidx.media3.session.MediaController$MediaControllerImpl $r3;
        androidx.media3.session.MediaController$ConnectionCallback $r4;
        androidx.media3.common.util.Consumer $r5;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = r0.<androidx.media3.session.MediaController: boolean released>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<androidx.media3.session.MediaController: boolean released> = 1;

        $r2 = r0.<androidx.media3.session.MediaController: android.os.Handler applicationHandler>;

        virtualinvoke $r2.<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>(null);

     label2:
        $r3 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r3.<androidx.media3.session.MediaController$MediaControllerImpl: void release()>();

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        r1 = $r6;

        staticinvoke <androidx.media3.common.util.Log: void d(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaController", "Exception while releasing impl", r1);

     label5:
        $z1 = r0.<androidx.media3.session.MediaController: boolean connectionNotified>;

        if $z1 == 0 goto label6;

        $r5 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer (androidx.media3.session.MediaController)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaController: void lambda$release$0(androidx.media3.session.MediaController$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaController$Listener));

        virtualinvoke r0.<androidx.media3.session.MediaController: void notifyControllerListener(androidx.media3.common.util.Consumer)>($r5);

        goto label7;

     label6:
        r0.<androidx.media3.session.MediaController: boolean connectionNotified> = 1;

        $r4 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$ConnectionCallback connectionCallback>;

        interfaceinvoke $r4.<androidx.media3.session.MediaController$ConnectionCallback: void onRejected()>();

     label7:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public static void releaseFuture(java.util.concurrent.Future)
    {
        java.util.concurrent.Future r0;
        androidx.media3.session.MediaController r1;
        java.lang.Throwable r2, $r4;
        boolean $z0;
        java.lang.Object $r3;

        r0 := @parameter0: java.util.concurrent.Future;

        $z0 = interfaceinvoke r0.<java.util.concurrent.Future: boolean isDone()>();

        if $z0 != 0 goto label1;

        interfaceinvoke r0.<java.util.concurrent.Future: boolean cancel(boolean)>(1);

        return;

     label1:
        $r3 = interfaceinvoke r0.<java.util.concurrent.Future: java.lang.Object get()>();

        r1 = (androidx.media3.session.MediaController) $r3;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        return;

     label4:
        virtualinvoke r1.<androidx.media3.session.MediaController: void release()>();

        return;

        catch java.util.concurrent.CancellationException from label1 to label2 with label3;
        catch java.util.concurrent.ExecutionException from label1 to label2 with label3;
        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public androidx.media3.session.SessionToken getConnectedToken()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        androidx.media3.session.SessionToken $r2;

        r0 := @this: androidx.media3.session.MediaController;

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $r2 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: androidx.media3.session.SessionToken getConnectedToken()>();

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public boolean isConnected()
    {
        androidx.media3.session.MediaController r0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaController;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $z0 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: boolean isConnected()>();

        return $z0;
    }

    public void play()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring play().");

        return;

     label1:
        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: void play()>();

        return;
    }

    public void pause()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring pause().");

        return;

     label1:
        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: void pause()>();

        return;
    }

    public void prepare()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring prepare().");

        return;

     label1:
        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: void prepare()>();

        return;
    }

    public void seekToDefaultPosition()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring seekTo().");

        return;

     label1:
        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: void seekToDefaultPosition()>();

        return;
    }

    public void seekToDefaultPosition(int)
    {
        androidx.media3.session.MediaController r0;
        int i0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;

        r0 := @this: androidx.media3.session.MediaController;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring seekTo().");

        return;

     label1:
        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: void seekToDefaultPosition(int)>(i0);

        return;
    }

    public void seekTo(long)
    {
        androidx.media3.session.MediaController r0;
        long l0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;

        r0 := @this: androidx.media3.session.MediaController;

        l0 := @parameter0: long;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring seekTo().");

        return;

     label1:
        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: void seekTo(long)>(l0);

        return;
    }

    public void seekTo(int, long)
    {
        androidx.media3.session.MediaController r0;
        int i0;
        long l1;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;

        r0 := @this: androidx.media3.session.MediaController;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring seekTo().");

        return;

     label1:
        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: void seekTo(int,long)>(i0, l1);

        return;
    }

    public long getSeekBackIncrement()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        long $l0;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $l0 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: long getSeekBackIncrement()>();

        goto label2;

     label1:
        $l0 = 0L;

     label2:
        return $l0;
    }

    public void seekBack()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring seekBack().");

        return;

     label1:
        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: void seekBack()>();

        return;
    }

    public long getSeekForwardIncrement()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        long $l0;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $l0 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: long getSeekForwardIncrement()>();

        goto label2;

     label1:
        $l0 = 0L;

     label2:
        return $l0;
    }

    public void seekForward()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring seekForward().");

        return;

     label1:
        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: void seekForward()>();

        return;
    }

    public android.app.PendingIntent getSessionActivity()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        android.app.PendingIntent $r2;

        r0 := @this: androidx.media3.session.MediaController;

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $r2 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: android.app.PendingIntent getSessionActivity()>();

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public androidx.media3.common.PlaybackException getPlayerError()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        androidx.media3.common.PlaybackException $r2;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $r2 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: androidx.media3.common.PlaybackException getPlayerError()>();

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public void setPlayWhenReady(boolean)
    {
        androidx.media3.session.MediaController r0;
        boolean z0, $z1;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;

        r0 := @this: androidx.media3.session.MediaController;

        z0 := @parameter0: boolean;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z1 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z1 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: void setPlayWhenReady(boolean)>(z0);

     label1:
        return;
    }

    public boolean getPlayWhenReady()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0, $z1, $z2;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $z1 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: boolean getPlayWhenReady()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public int getPlaybackSuppressionReason()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        int $i0;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $i0 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: int getPlaybackSuppressionReason()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public int getPlaybackState()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        int $i0;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $i0 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: int getPlaybackState()>();

        goto label2;

     label1:
        $i0 = 1;

     label2:
        return $i0;
    }

    public boolean isPlaying()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0, $z1, $z2;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $z1 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: boolean isPlaying()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean isLoading()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0, $z1, $z2;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $z1 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: boolean isLoading()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public long getDuration()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        long $l0;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $l0 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: long getDuration()>();

        goto label2;

     label1:
        $l0 = -9223372036854775807L;

     label2:
        return $l0;
    }

    public long getCurrentPosition()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        long $l0;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $l0 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: long getCurrentPosition()>();

        goto label2;

     label1:
        $l0 = 0L;

     label2:
        return $l0;
    }

    public long getBufferedPosition()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        long $l0;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $l0 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: long getBufferedPosition()>();

        goto label2;

     label1:
        $l0 = 0L;

     label2:
        return $l0;
    }

    public int getBufferedPercentage()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        int $i0;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $i0 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: int getBufferedPercentage()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public long getTotalBufferedDuration()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        long $l0;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $l0 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: long getTotalBufferedDuration()>();

        goto label2;

     label1:
        $l0 = 0L;

     label2:
        return $l0;
    }

    public long getCurrentLiveOffset()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        long $l0;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $l0 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: long getCurrentLiveOffset()>();

        goto label2;

     label1:
        $l0 = -9223372036854775807L;

     label2:
        return $l0;
    }

    public long getContentDuration()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        long $l0;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $l0 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: long getContentDuration()>();

        goto label2;

     label1:
        $l0 = -9223372036854775807L;

     label2:
        return $l0;
    }

    public long getContentPosition()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        long $l0;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $l0 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: long getContentPosition()>();

        goto label2;

     label1:
        $l0 = 0L;

     label2:
        return $l0;
    }

    public long getContentBufferedPosition()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        long $l0;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $l0 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: long getContentBufferedPosition()>();

        goto label2;

     label1:
        $l0 = 0L;

     label2:
        return $l0;
    }

    public boolean isPlayingAd()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0, $z1, $z2;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $z1 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: boolean isPlayingAd()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public int getCurrentAdGroupIndex()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        int $i0;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $i0 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: int getCurrentAdGroupIndex()>();

        goto label2;

     label1:
        $i0 = -1;

     label2:
        return $i0;
    }

    public int getCurrentAdIndexInAdGroup()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        int $i0;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $i0 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: int getCurrentAdIndexInAdGroup()>();

        goto label2;

     label1:
        $i0 = -1;

     label2:
        return $i0;
    }

    public void setPlaybackParameters(androidx.media3.common.PlaybackParameters)
    {
        androidx.media3.session.MediaController r0;
        androidx.media3.common.PlaybackParameters r1;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r3;

        r0 := @this: androidx.media3.session.MediaController;

        r1 := @parameter0: androidx.media3.common.PlaybackParameters;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "playbackParameters must not be null");

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring setPlaybackParameters().");

        return;

     label1:
        $r3 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r3.<androidx.media3.session.MediaController$MediaControllerImpl: void setPlaybackParameters(androidx.media3.common.PlaybackParameters)>(r1);

        return;
    }

    public void setPlaybackSpeed(float)
    {
        androidx.media3.session.MediaController r0;
        float f0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;

        r0 := @this: androidx.media3.session.MediaController;

        f0 := @parameter0: float;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring setPlaybackSpeed().");

        return;

     label1:
        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: void setPlaybackSpeed(float)>(f0);

        return;
    }

    public androidx.media3.common.PlaybackParameters getPlaybackParameters()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        androidx.media3.common.PlaybackParameters $r2;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $r2 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: androidx.media3.common.PlaybackParameters getPlaybackParameters()>();

        goto label2;

     label1:
        $r2 = <androidx.media3.common.PlaybackParameters: androidx.media3.common.PlaybackParameters DEFAULT>;

     label2:
        return $r2;
    }

    public androidx.media3.common.AudioAttributes getAudioAttributes()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        androidx.media3.common.AudioAttributes $r2, $r3;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        $r3 = <androidx.media3.common.AudioAttributes: androidx.media3.common.AudioAttributes DEFAULT>;

        return $r3;

     label1:
        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $r2 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: androidx.media3.common.AudioAttributes getAudioAttributes()>();

        return $r2;
    }

    public com.google.common.util.concurrent.ListenableFuture setRating(java.lang.String, androidx.media3.common.Rating)
    {
        androidx.media3.session.MediaController r0;
        java.lang.String r1;
        androidx.media3.common.Rating r2;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r6, $r8;
        androidx.media3.session.MediaController$MediaControllerImpl $r7;

        r0 := @this: androidx.media3.session.MediaController;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.media3.common.Rating;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "mediaId must not be null");

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.String checkNotEmpty(java.lang.String,java.lang.Object)>(r1, "mediaId must not be empty");

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "rating must not be null");

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $r8 = interfaceinvoke $r7.<androidx.media3.session.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture setRating(java.lang.String,androidx.media3.common.Rating)>(r1, r2);

        return $r8;

     label1:
        $r6 = staticinvoke <androidx.media3.session.MediaController: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r6;
    }

    public com.google.common.util.concurrent.ListenableFuture setRating(androidx.media3.common.Rating)
    {
        androidx.media3.session.MediaController r0;
        androidx.media3.common.Rating r1;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r3, $r5;
        androidx.media3.session.MediaController$MediaControllerImpl $r4;

        r0 := @this: androidx.media3.session.MediaController;

        r1 := @parameter0: androidx.media3.common.Rating;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "rating must not be null");

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $r5 = interfaceinvoke $r4.<androidx.media3.session.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture setRating(androidx.media3.common.Rating)>(r1);

        return $r5;

     label1:
        $r3 = staticinvoke <androidx.media3.session.MediaController: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r3;
    }

    public com.google.common.util.concurrent.ListenableFuture sendCustomCommand(androidx.media3.session.SessionCommand, android.os.Bundle)
    {
        androidx.media3.session.MediaController r0;
        androidx.media3.session.SessionCommand r1;
        android.os.Bundle r2;
        int $i0;
        boolean $z0, $z1;
        com.google.common.util.concurrent.ListenableFuture $r4, $r6;
        androidx.media3.session.MediaController$MediaControllerImpl $r5;

        r0 := @this: androidx.media3.session.MediaController;

        r1 := @parameter0: androidx.media3.session.SessionCommand;

        r2 := @parameter1: android.os.Bundle;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "command must not be null");

        $i0 = r1.<androidx.media3.session.SessionCommand: int commandCode>;

        if $i0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean,java.lang.Object)>($z1, "command must be a custom command");

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label3;

        $r5 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $r6 = interfaceinvoke $r5.<androidx.media3.session.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture sendCustomCommand(androidx.media3.session.SessionCommand,android.os.Bundle)>(r1, r2);

        return $r6;

     label3:
        $r4 = staticinvoke <androidx.media3.session.MediaController: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r4;
    }

    public java.lang.Object getCurrentManifest()
    {
        androidx.media3.session.MediaController r0;

        r0 := @this: androidx.media3.session.MediaController;

        return null;
    }

    public androidx.media3.common.Timeline getCurrentTimeline()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        androidx.media3.common.Timeline $r2;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $r2 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: androidx.media3.common.Timeline getCurrentTimeline()>();

        goto label2;

     label1:
        $r2 = <androidx.media3.common.Timeline: androidx.media3.common.Timeline EMPTY>;

     label2:
        return $r2;
    }

    public void setMediaItem(androidx.media3.common.MediaItem)
    {
        androidx.media3.session.MediaController r0;
        androidx.media3.common.MediaItem r1;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r3;

        r0 := @this: androidx.media3.session.MediaController;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "mediaItems must not be null");

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring setMediaItem().");

        return;

     label1:
        $r3 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r3.<androidx.media3.session.MediaController$MediaControllerImpl: void setMediaItem(androidx.media3.common.MediaItem)>(r1);

        return;
    }

    public void setMediaItem(androidx.media3.common.MediaItem, long)
    {
        androidx.media3.session.MediaController r0;
        androidx.media3.common.MediaItem r1;
        long l0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r3;

        r0 := @this: androidx.media3.session.MediaController;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        l0 := @parameter1: long;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "mediaItems must not be null");

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring setMediaItem().");

        return;

     label1:
        $r3 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r3.<androidx.media3.session.MediaController$MediaControllerImpl: void setMediaItem(androidx.media3.common.MediaItem,long)>(r1, l0);

        return;
    }

    public void setMediaItem(androidx.media3.common.MediaItem, boolean)
    {
        androidx.media3.session.MediaController r0;
        androidx.media3.common.MediaItem r1;
        boolean z0, $z1;
        androidx.media3.session.MediaController$MediaControllerImpl $r3;

        r0 := @this: androidx.media3.session.MediaController;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        z0 := @parameter1: boolean;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "mediaItems must not be null");

        $z1 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z1 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring setMediaItems().");

        return;

     label1:
        $r3 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r3.<androidx.media3.session.MediaController$MediaControllerImpl: void setMediaItem(androidx.media3.common.MediaItem,boolean)>(r1, z0);

        return;
    }

    public void setMediaItems(java.util.List)
    {
        androidx.media3.session.MediaController r0;
        java.util.List r1;
        int $i0, i1;
        boolean $z0, $z1;
        androidx.media3.session.MediaController$MediaControllerImpl $r3;
        java.lang.Object $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: androidx.media3.session.MediaController;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "mediaItems must not be null");

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i1 >= $i0 goto label4;

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        if $r4 == null goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("items must not contain null, index=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean,java.lang.Object)>($z1, $r8);

        i1 = i1 + 1;

        goto label1;

     label4:
        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label5;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring setMediaItems().");

        return;

     label5:
        $r3 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r3.<androidx.media3.session.MediaController$MediaControllerImpl: void setMediaItems(java.util.List)>(r1);

        return;
    }

    public void setMediaItems(java.util.List, boolean)
    {
        androidx.media3.session.MediaController r0;
        java.util.List r1;
        boolean z0, $z1, $z2;
        int $i0, i1;
        androidx.media3.session.MediaController$MediaControllerImpl $r3;
        java.lang.Object $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: androidx.media3.session.MediaController;

        r1 := @parameter0: java.util.List;

        z0 := @parameter1: boolean;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "mediaItems must not be null");

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i1 >= $i0 goto label4;

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        if $r4 == null goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("items must not contain null, index=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean,java.lang.Object)>($z2, $r8);

        i1 = i1 + 1;

        goto label1;

     label4:
        $z1 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z1 != 0 goto label5;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring setMediaItems().");

        return;

     label5:
        $r3 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r3.<androidx.media3.session.MediaController$MediaControllerImpl: void setMediaItems(java.util.List,boolean)>(r1, z0);

        return;
    }

    public void setMediaItems(java.util.List, int, long)
    {
        androidx.media3.session.MediaController r0;
        java.util.List r1;
        int i0, $i2, i3;
        long l1;
        boolean $z0, $z1;
        androidx.media3.session.MediaController$MediaControllerImpl $r3;
        java.lang.Object $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: androidx.media3.session.MediaController;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "mediaItems must not be null");

        i3 = 0;

     label1:
        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        if i3 >= $i2 goto label4;

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);

        if $r4 == null goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("items must not contain null, index=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean,java.lang.Object)>($z1, $r8);

        i3 = i3 + 1;

        goto label1;

     label4:
        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label5;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring setMediaItems().");

        return;

     label5:
        $r3 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r3.<androidx.media3.session.MediaController$MediaControllerImpl: void setMediaItems(java.util.List,int,long)>(r1, i0, l1);

        return;
    }

    public void setPlaylistMetadata(androidx.media3.common.MediaMetadata)
    {
        androidx.media3.session.MediaController r0;
        androidx.media3.common.MediaMetadata r1;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r3;

        r0 := @this: androidx.media3.session.MediaController;

        r1 := @parameter0: androidx.media3.common.MediaMetadata;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "playlistMetadata must not be null");

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring setPlaylistMetadata().");

        return;

     label1:
        $r3 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r3.<androidx.media3.session.MediaController$MediaControllerImpl: void setPlaylistMetadata(androidx.media3.common.MediaMetadata)>(r1);

        return;
    }

    public androidx.media3.common.MediaMetadata getPlaylistMetadata()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        androidx.media3.common.MediaMetadata $r2;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $r2 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: androidx.media3.common.MediaMetadata getPlaylistMetadata()>();

        goto label2;

     label1:
        $r2 = <androidx.media3.common.MediaMetadata: androidx.media3.common.MediaMetadata EMPTY>;

     label2:
        return $r2;
    }

    public void addMediaItem(androidx.media3.common.MediaItem)
    {
        androidx.media3.session.MediaController r0;
        androidx.media3.common.MediaItem r1;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r2;

        r0 := @this: androidx.media3.session.MediaController;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring addMediaItem().");

        return;

     label1:
        $r2 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r2.<androidx.media3.session.MediaController$MediaControllerImpl: void addMediaItem(androidx.media3.common.MediaItem)>(r1);

        return;
    }

    public void addMediaItem(int, androidx.media3.common.MediaItem)
    {
        androidx.media3.session.MediaController r0;
        int i0;
        androidx.media3.common.MediaItem r1;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r2;

        r0 := @this: androidx.media3.session.MediaController;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.MediaItem;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring addMediaItem().");

        return;

     label1:
        $r2 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r2.<androidx.media3.session.MediaController$MediaControllerImpl: void addMediaItem(int,androidx.media3.common.MediaItem)>(i0, r1);

        return;
    }

    public void addMediaItems(java.util.List)
    {
        androidx.media3.session.MediaController r0;
        java.util.List r1;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r2;

        r0 := @this: androidx.media3.session.MediaController;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring addMediaItems().");

        return;

     label1:
        $r2 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r2.<androidx.media3.session.MediaController$MediaControllerImpl: void addMediaItems(java.util.List)>(r1);

        return;
    }

    public void addMediaItems(int, java.util.List)
    {
        androidx.media3.session.MediaController r0;
        int i0;
        java.util.List r1;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r2;

        r0 := @this: androidx.media3.session.MediaController;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring addMediaItems().");

        return;

     label1:
        $r2 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r2.<androidx.media3.session.MediaController$MediaControllerImpl: void addMediaItems(int,java.util.List)>(i0, r1);

        return;
    }

    public void removeMediaItem(int)
    {
        androidx.media3.session.MediaController r0;
        int i0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;

        r0 := @this: androidx.media3.session.MediaController;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring removeMediaItem().");

        return;

     label1:
        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: void removeMediaItem(int)>(i0);

        return;
    }

    public void removeMediaItems(int, int)
    {
        androidx.media3.session.MediaController r0;
        int i0, i1;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;

        r0 := @this: androidx.media3.session.MediaController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring removeMediaItems().");

        return;

     label1:
        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: void removeMediaItems(int,int)>(i0, i1);

        return;
    }

    public void clearMediaItems()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring clearMediaItems().");

        return;

     label1:
        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: void clearMediaItems()>();

        return;
    }

    public void moveMediaItem(int, int)
    {
        androidx.media3.session.MediaController r0;
        int i0, i1;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;

        r0 := @this: androidx.media3.session.MediaController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring moveMediaItem().");

        return;

     label1:
        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: void moveMediaItem(int,int)>(i0, i1);

        return;
    }

    public void moveMediaItems(int, int, int)
    {
        androidx.media3.session.MediaController r0;
        int i0, i1, i2;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;

        r0 := @this: androidx.media3.session.MediaController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring moveMediaItems().");

        return;

     label1:
        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: void moveMediaItems(int,int,int)>(i0, i1, i2);

        return;
    }

    public boolean isCurrentWindowDynamic()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaController;

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isCurrentMediaItemDynamic()>();

        return $z0;
    }

    public boolean isCurrentMediaItemDynamic()
    {
        androidx.media3.session.MediaController r0;
        androidx.media3.common.Timeline r1;
        boolean $z0, $z1, $z2;
        int $i0;
        androidx.media3.common.Timeline$Window $r2, $r3;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        r1 = virtualinvoke r0.<androidx.media3.session.MediaController: androidx.media3.common.Timeline getCurrentTimeline()>();

        $z0 = virtualinvoke r1.<androidx.media3.common.Timeline: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $i0 = virtualinvoke r0.<androidx.media3.session.MediaController: int getCurrentMediaItemIndex()>();

        $r2 = r0.<androidx.media3.session.MediaController: androidx.media3.common.Timeline$Window window>;

        $r3 = virtualinvoke r1.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window)>($i0, $r2);

        $z1 = $r3.<androidx.media3.common.Timeline$Window: boolean isDynamic>;

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean isCurrentWindowLive()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaController;

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isCurrentMediaItemLive()>();

        return $z0;
    }

    public boolean isCurrentMediaItemLive()
    {
        androidx.media3.session.MediaController r0;
        androidx.media3.common.Timeline r1;
        boolean $z0, $z1, $z2;
        int $i0;
        androidx.media3.common.Timeline$Window $r2, $r3;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        r1 = virtualinvoke r0.<androidx.media3.session.MediaController: androidx.media3.common.Timeline getCurrentTimeline()>();

        $z0 = virtualinvoke r1.<androidx.media3.common.Timeline: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $i0 = virtualinvoke r0.<androidx.media3.session.MediaController: int getCurrentMediaItemIndex()>();

        $r2 = r0.<androidx.media3.session.MediaController: androidx.media3.common.Timeline$Window window>;

        $r3 = virtualinvoke r1.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window)>($i0, $r2);

        $z1 = virtualinvoke $r3.<androidx.media3.common.Timeline$Window: boolean isLive()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean isCurrentWindowSeekable()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaController;

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isCurrentMediaItemSeekable()>();

        return $z0;
    }

    public boolean isCurrentMediaItemSeekable()
    {
        androidx.media3.session.MediaController r0;
        androidx.media3.common.Timeline r1;
        boolean $z0, $z1, $z2;
        int $i0;
        androidx.media3.common.Timeline$Window $r2, $r3;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        r1 = virtualinvoke r0.<androidx.media3.session.MediaController: androidx.media3.common.Timeline getCurrentTimeline()>();

        $z0 = virtualinvoke r1.<androidx.media3.common.Timeline: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $i0 = virtualinvoke r0.<androidx.media3.session.MediaController: int getCurrentMediaItemIndex()>();

        $r2 = r0.<androidx.media3.session.MediaController: androidx.media3.common.Timeline$Window window>;

        $r3 = virtualinvoke r1.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window)>($i0, $r2);

        $z1 = $r3.<androidx.media3.common.Timeline$Window: boolean isSeekable>;

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean canAdvertiseSession()
    {
        androidx.media3.session.MediaController r0;

        r0 := @this: androidx.media3.session.MediaController;

        return 0;
    }

    public androidx.media3.common.MediaItem getCurrentMediaItem()
    {
        androidx.media3.session.MediaController r0;
        androidx.media3.common.Timeline r1;
        boolean $z0;
        int $i0;
        androidx.media3.common.Timeline$Window $r2, $r3;
        androidx.media3.common.MediaItem $r4;

        r0 := @this: androidx.media3.session.MediaController;

        r1 = virtualinvoke r0.<androidx.media3.session.MediaController: androidx.media3.common.Timeline getCurrentTimeline()>();

        $z0 = virtualinvoke r1.<androidx.media3.common.Timeline: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r4 = null;

        goto label2;

     label1:
        $i0 = virtualinvoke r0.<androidx.media3.session.MediaController: int getCurrentMediaItemIndex()>();

        $r2 = r0.<androidx.media3.session.MediaController: androidx.media3.common.Timeline$Window window>;

        $r3 = virtualinvoke r1.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window)>($i0, $r2);

        $r4 = $r3.<androidx.media3.common.Timeline$Window: androidx.media3.common.MediaItem mediaItem>;

     label2:
        return $r4;
    }

    public int getMediaItemCount()
    {
        androidx.media3.session.MediaController r0;
        androidx.media3.common.Timeline $r1;
        int $i0;

        r0 := @this: androidx.media3.session.MediaController;

        $r1 = virtualinvoke r0.<androidx.media3.session.MediaController: androidx.media3.common.Timeline getCurrentTimeline()>();

        $i0 = virtualinvoke $r1.<androidx.media3.common.Timeline: int getWindowCount()>();

        return $i0;
    }

    public androidx.media3.common.MediaItem getMediaItemAt(int)
    {
        androidx.media3.session.MediaController r0;
        int i0;
        androidx.media3.common.Timeline $r1;
        androidx.media3.common.Timeline$Window $r2, $r3;
        androidx.media3.common.MediaItem $r4;

        r0 := @this: androidx.media3.session.MediaController;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.media3.session.MediaController: androidx.media3.common.Timeline getCurrentTimeline()>();

        $r2 = r0.<androidx.media3.session.MediaController: androidx.media3.common.Timeline$Window window>;

        $r3 = virtualinvoke $r1.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window)>(i0, $r2);

        $r4 = $r3.<androidx.media3.common.Timeline$Window: androidx.media3.common.MediaItem mediaItem>;

        return $r4;
    }

    public int getCurrentPeriodIndex()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        int $i0;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $i0 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: int getCurrentPeriodIndex()>();

        goto label2;

     label1:
        $i0 = -1;

     label2:
        return $i0;
    }

    public int getCurrentWindowIndex()
    {
        androidx.media3.session.MediaController r0;
        int $i0;

        r0 := @this: androidx.media3.session.MediaController;

        $i0 = virtualinvoke r0.<androidx.media3.session.MediaController: int getCurrentMediaItemIndex()>();

        return $i0;
    }

    public int getCurrentMediaItemIndex()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        int $i0;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $i0 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: int getCurrentMediaItemIndex()>();

        goto label2;

     label1:
        $i0 = -1;

     label2:
        return $i0;
    }

    public int getPreviousWindowIndex()
    {
        androidx.media3.session.MediaController r0;
        int $i0;

        r0 := @this: androidx.media3.session.MediaController;

        $i0 = virtualinvoke r0.<androidx.media3.session.MediaController: int getPreviousMediaItemIndex()>();

        return $i0;
    }

    public int getPreviousMediaItemIndex()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        int $i0;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $i0 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: int getPreviousMediaItemIndex()>();

        goto label2;

     label1:
        $i0 = -1;

     label2:
        return $i0;
    }

    public int getNextWindowIndex()
    {
        androidx.media3.session.MediaController r0;
        int $i0;

        r0 := @this: androidx.media3.session.MediaController;

        $i0 = virtualinvoke r0.<androidx.media3.session.MediaController: int getNextMediaItemIndex()>();

        return $i0;
    }

    public int getNextMediaItemIndex()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        int $i0;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $i0 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: int getNextMediaItemIndex()>();

        goto label2;

     label1:
        $i0 = -1;

     label2:
        return $i0;
    }

    public boolean hasPrevious()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaController;

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean hasPreviousMediaItem()>();

        return $z0;
    }

    public boolean hasNext()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaController;

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean hasNextMediaItem()>();

        return $z0;
    }

    public boolean hasPreviousWindow()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaController;

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean hasPreviousMediaItem()>();

        return $z0;
    }

    public boolean hasNextWindow()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaController;

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean hasNextMediaItem()>();

        return $z0;
    }

    public boolean hasPreviousMediaItem()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0, $z1, $z2;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $z1 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: boolean hasPreviousMediaItem()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean hasNextMediaItem()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0, $z1, $z2;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $z1 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: boolean hasNextMediaItem()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public void previous()
    {
        androidx.media3.session.MediaController r0;

        r0 := @this: androidx.media3.session.MediaController;

        virtualinvoke r0.<androidx.media3.session.MediaController: void seekToPreviousMediaItem()>();

        return;
    }

    public void next()
    {
        androidx.media3.session.MediaController r0;

        r0 := @this: androidx.media3.session.MediaController;

        virtualinvoke r0.<androidx.media3.session.MediaController: void seekToNextMediaItem()>();

        return;
    }

    public void seekToPreviousWindow()
    {
        androidx.media3.session.MediaController r0;

        r0 := @this: androidx.media3.session.MediaController;

        virtualinvoke r0.<androidx.media3.session.MediaController: void seekToPreviousMediaItem()>();

        return;
    }

    public void seekToPreviousMediaItem()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring seekToPreviousMediaItem().");

        return;

     label1:
        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: void seekToPreviousMediaItem()>();

        return;
    }

    public void seekToNextWindow()
    {
        androidx.media3.session.MediaController r0;

        r0 := @this: androidx.media3.session.MediaController;

        virtualinvoke r0.<androidx.media3.session.MediaController: void seekToNextMediaItem()>();

        return;
    }

    public void seekToNextMediaItem()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring seekToNextMediaItem().");

        return;

     label1:
        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: void seekToNextMediaItem()>();

        return;
    }

    public void seekToPrevious()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring seekToPrevious().");

        return;

     label1:
        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: void seekToPrevious()>();

        return;
    }

    public long getMaxSeekToPreviousPosition()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        long $l0;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $l0 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: long getMaxSeekToPreviousPosition()>();

        goto label2;

     label1:
        $l0 = 0L;

     label2:
        return $l0;
    }

    public void seekToNext()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring seekToNext().");

        return;

     label1:
        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: void seekToNext()>();

        return;
    }

    public int getRepeatMode()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        int $i0;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $i0 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: int getRepeatMode()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public void setRepeatMode(int)
    {
        androidx.media3.session.MediaController r0;
        int i0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;

        r0 := @this: androidx.media3.session.MediaController;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring setRepeatMode().");

        return;

     label1:
        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: void setRepeatMode(int)>(i0);

        return;
    }

    public boolean getShuffleModeEnabled()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0, $z1, $z2;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $z1 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: boolean getShuffleModeEnabled()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public void setShuffleModeEnabled(boolean)
    {
        androidx.media3.session.MediaController r0;
        boolean z0, $z1;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;

        r0 := @this: androidx.media3.session.MediaController;

        z0 := @parameter0: boolean;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z1 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z1 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring setShuffleMode().");

        return;

     label1:
        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: void setShuffleModeEnabled(boolean)>(z0);

        return;
    }

    public androidx.media3.common.VideoSize getVideoSize()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        androidx.media3.common.VideoSize $r2;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $r2 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: androidx.media3.common.VideoSize getVideoSize()>();

        goto label2;

     label1:
        $r2 = <androidx.media3.common.VideoSize: androidx.media3.common.VideoSize UNKNOWN>;

     label2:
        return $r2;
    }

    public androidx.media3.common.util.Size getSurfaceSize()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        androidx.media3.common.util.Size $r2;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $r2 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: androidx.media3.common.util.Size getSurfaceSize()>();

        goto label2;

     label1:
        $r2 = <androidx.media3.common.util.Size: androidx.media3.common.util.Size UNKNOWN>;

     label2:
        return $r2;
    }

    public void clearVideoSurface()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring clearVideoSurface().");

        return;

     label1:
        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: void clearVideoSurface()>();

        return;
    }

    public void clearVideoSurface(android.view.Surface)
    {
        androidx.media3.session.MediaController r0;
        android.view.Surface r1;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r2;

        r0 := @this: androidx.media3.session.MediaController;

        r1 := @parameter0: android.view.Surface;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring clearVideoSurface().");

        return;

     label1:
        $r2 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r2.<androidx.media3.session.MediaController$MediaControllerImpl: void clearVideoSurface(android.view.Surface)>(r1);

        return;
    }

    public void setVideoSurface(android.view.Surface)
    {
        androidx.media3.session.MediaController r0;
        android.view.Surface r1;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r2;

        r0 := @this: androidx.media3.session.MediaController;

        r1 := @parameter0: android.view.Surface;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring setVideoSurface().");

        return;

     label1:
        $r2 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r2.<androidx.media3.session.MediaController$MediaControllerImpl: void setVideoSurface(android.view.Surface)>(r1);

        return;
    }

    public void setVideoSurfaceHolder(android.view.SurfaceHolder)
    {
        androidx.media3.session.MediaController r0;
        android.view.SurfaceHolder r1;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r2;

        r0 := @this: androidx.media3.session.MediaController;

        r1 := @parameter0: android.view.SurfaceHolder;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring setVideoSurfaceHolder().");

        return;

     label1:
        $r2 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r2.<androidx.media3.session.MediaController$MediaControllerImpl: void setVideoSurfaceHolder(android.view.SurfaceHolder)>(r1);

        return;
    }

    public void clearVideoSurfaceHolder(android.view.SurfaceHolder)
    {
        androidx.media3.session.MediaController r0;
        android.view.SurfaceHolder r1;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r2;

        r0 := @this: androidx.media3.session.MediaController;

        r1 := @parameter0: android.view.SurfaceHolder;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring clearVideoSurfaceHolder().");

        return;

     label1:
        $r2 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r2.<androidx.media3.session.MediaController$MediaControllerImpl: void clearVideoSurfaceHolder(android.view.SurfaceHolder)>(r1);

        return;
    }

    public void setVideoSurfaceView(android.view.SurfaceView)
    {
        androidx.media3.session.MediaController r0;
        android.view.SurfaceView r1;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r2;

        r0 := @this: androidx.media3.session.MediaController;

        r1 := @parameter0: android.view.SurfaceView;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring setVideoSurfaceView().");

        return;

     label1:
        $r2 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r2.<androidx.media3.session.MediaController$MediaControllerImpl: void setVideoSurfaceView(android.view.SurfaceView)>(r1);

        return;
    }

    public void clearVideoSurfaceView(android.view.SurfaceView)
    {
        androidx.media3.session.MediaController r0;
        android.view.SurfaceView r1;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r2;

        r0 := @this: androidx.media3.session.MediaController;

        r1 := @parameter0: android.view.SurfaceView;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring clearVideoSurfaceView().");

        return;

     label1:
        $r2 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r2.<androidx.media3.session.MediaController$MediaControllerImpl: void clearVideoSurfaceView(android.view.SurfaceView)>(r1);

        return;
    }

    public void setVideoTextureView(android.view.TextureView)
    {
        androidx.media3.session.MediaController r0;
        android.view.TextureView r1;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r2;

        r0 := @this: androidx.media3.session.MediaController;

        r1 := @parameter0: android.view.TextureView;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring setVideoTextureView().");

        return;

     label1:
        $r2 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r2.<androidx.media3.session.MediaController$MediaControllerImpl: void setVideoTextureView(android.view.TextureView)>(r1);

        return;
    }

    public void clearVideoTextureView(android.view.TextureView)
    {
        androidx.media3.session.MediaController r0;
        android.view.TextureView r1;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r2;

        r0 := @this: androidx.media3.session.MediaController;

        r1 := @parameter0: android.view.TextureView;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring clearVideoTextureView().");

        return;

     label1:
        $r2 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r2.<androidx.media3.session.MediaController$MediaControllerImpl: void clearVideoTextureView(android.view.TextureView)>(r1);

        return;
    }

    public androidx.media3.common.text.CueGroup getCurrentCues()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        androidx.media3.common.text.CueGroup $r2;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $r2 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: androidx.media3.common.text.CueGroup getCurrentCues()>();

        goto label2;

     label1:
        $r2 = <androidx.media3.common.text.CueGroup: androidx.media3.common.text.CueGroup EMPTY_TIME_ZERO>;

     label2:
        return $r2;
    }

    public float getVolume()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        float $f0;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $f0 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: float getVolume()>();

        goto label2;

     label1:
        $f0 = 1.0F;

     label2:
        return $f0;
    }

    public void setVolume(float)
    {
        androidx.media3.session.MediaController r0;
        float f0;
        byte $b0, $b1;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        boolean $z0, $z1;

        r0 := @this: androidx.media3.session.MediaController;

        f0 := @parameter0: float;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $b0 = f0 cmpl 0.0F;

        if $b0 < 0 goto label1;

        $b1 = f0 cmpg 1.0F;

        if $b1 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean,java.lang.Object)>($z0, "volume must be between 0 and 1");

        $z1 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z1 != 0 goto label3;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring setVolume().");

        return;

     label3:
        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: void setVolume(float)>(f0);

        return;
    }

    public androidx.media3.common.DeviceInfo getDeviceInfo()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        androidx.media3.common.DeviceInfo $r2, $r3;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        $r3 = <androidx.media3.common.DeviceInfo: androidx.media3.common.DeviceInfo UNKNOWN>;

        return $r3;

     label1:
        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $r2 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: androidx.media3.common.DeviceInfo getDeviceInfo()>();

        return $r2;
    }

    public int getDeviceVolume()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        int $i0;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $i0 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: int getDeviceVolume()>();

        return $i0;
    }

    public boolean isDeviceMuted()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0, $z1;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $z1 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: boolean isDeviceMuted()>();

        return $z1;
    }

    public void setDeviceVolume(int)
    {
        androidx.media3.session.MediaController r0;
        int i0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;

        r0 := @this: androidx.media3.session.MediaController;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring setDeviceVolume().");

        return;

     label1:
        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: void setDeviceVolume(int)>(i0);

        return;
    }

    public void increaseDeviceVolume()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring increaseDeviceVolume().");

        return;

     label1:
        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: void increaseDeviceVolume()>();

        return;
    }

    public void decreaseDeviceVolume()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring decreaseDeviceVolume().");

        return;

     label1:
        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: void decreaseDeviceVolume()>();

        return;
    }

    public void setDeviceMuted(boolean)
    {
        androidx.media3.session.MediaController r0;
        boolean z0, $z1;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;

        r0 := @this: androidx.media3.session.MediaController;

        z0 := @parameter0: boolean;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z1 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z1 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring setDeviceMuted().");

        return;

     label1:
        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: void setDeviceMuted(boolean)>(z0);

        return;
    }

    public androidx.media3.common.MediaMetadata getMediaMetadata()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        androidx.media3.common.MediaMetadata $r2;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $r2 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: androidx.media3.common.MediaMetadata getMediaMetadata()>();

        goto label2;

     label1:
        $r2 = <androidx.media3.common.MediaMetadata: androidx.media3.common.MediaMetadata EMPTY>;

     label2:
        return $r2;
    }

    public androidx.media3.common.Tracks getCurrentTracks()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        androidx.media3.common.Tracks $r2;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $r2 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: androidx.media3.common.Tracks getCurrentTracks()>();

        goto label2;

     label1:
        $r2 = <androidx.media3.common.Tracks: androidx.media3.common.Tracks EMPTY>;

     label2:
        return $r2;
    }

    public androidx.media3.common.TrackSelectionParameters getTrackSelectionParameters()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        androidx.media3.common.TrackSelectionParameters $r2, $r3;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        $r3 = <androidx.media3.common.TrackSelectionParameters: androidx.media3.common.TrackSelectionParameters DEFAULT_WITHOUT_CONTEXT>;

        return $r3;

     label1:
        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $r2 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: androidx.media3.common.TrackSelectionParameters getTrackSelectionParameters()>();

        return $r2;
    }

    public void setTrackSelectionParameters(androidx.media3.common.TrackSelectionParameters)
    {
        androidx.media3.session.MediaController r0;
        androidx.media3.common.TrackSelectionParameters r1;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r2;

        r0 := @this: androidx.media3.session.MediaController;

        r1 := @parameter0: androidx.media3.common.TrackSelectionParameters;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaController", "The controller is not connected. Ignoring setTrackSelectionParameters().");

     label1:
        $r2 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r2.<androidx.media3.session.MediaController$MediaControllerImpl: void setTrackSelectionParameters(androidx.media3.common.TrackSelectionParameters)>(r1);

        return;
    }

    public android.os.Looper getApplicationLooper()
    {
        androidx.media3.session.MediaController r0;
        android.os.Handler $r1;
        android.os.Looper $r2;

        r0 := @this: androidx.media3.session.MediaController;

        $r1 = r0.<androidx.media3.session.MediaController: android.os.Handler applicationHandler>;

        $r2 = virtualinvoke $r1.<android.os.Handler: android.os.Looper getLooper()>();

        return $r2;
    }

    long getTimeDiffMs()
    {
        androidx.media3.session.MediaController r0;
        long $l0;

        r0 := @this: androidx.media3.session.MediaController;

        $l0 = r0.<androidx.media3.session.MediaController: long timeDiffMs>;

        return $l0;
    }

    void setTimeDiffMs(long)
    {
        androidx.media3.session.MediaController r0;
        long l0;

        r0 := @this: androidx.media3.session.MediaController;

        l0 := @parameter0: long;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        r0.<androidx.media3.session.MediaController: long timeDiffMs> = l0;

        return;
    }

    public void addListener(androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.MediaController r0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.session.MediaController$MediaControllerImpl $r3;

        r0 := @this: androidx.media3.session.MediaController;

        r1 := @parameter0: androidx.media3.common.Player$Listener;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "listener must not be null");

        $r3 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r3.<androidx.media3.session.MediaController$MediaControllerImpl: void addListener(androidx.media3.common.Player$Listener)>(r1);

        return;
    }

    public void removeListener(androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.MediaController r0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.session.MediaController$MediaControllerImpl $r3;

        r0 := @this: androidx.media3.session.MediaController;

        r1 := @parameter0: androidx.media3.common.Player$Listener;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "listener must not be null");

        $r3 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        interfaceinvoke $r3.<androidx.media3.session.MediaController$MediaControllerImpl: void removeListener(androidx.media3.common.Player$Listener)>(r1);

        return;
    }

    public boolean isCommandAvailable(int)
    {
        androidx.media3.session.MediaController r0;
        int i0;
        androidx.media3.common.Player$Commands $r1;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaController;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.media3.session.MediaController: androidx.media3.common.Player$Commands getAvailableCommands()>();

        $z0 = virtualinvoke $r1.<androidx.media3.common.Player$Commands: boolean contains(int)>(i0);

        return $z0;
    }

    public androidx.media3.common.Player$Commands getAvailableCommands()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        androidx.media3.common.Player$Commands $r2, $r3;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        $r3 = <androidx.media3.common.Player$Commands: androidx.media3.common.Player$Commands EMPTY>;

        return $r3;

     label1:
        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $r2 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: androidx.media3.common.Player$Commands getAvailableCommands()>();

        return $r2;
    }

    public boolean isSessionCommandAvailable(int)
    {
        androidx.media3.session.MediaController r0;
        int i0;
        androidx.media3.session.SessionCommands $r1;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaController;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.media3.session.MediaController: androidx.media3.session.SessionCommands getAvailableSessionCommands()>();

        $z0 = virtualinvoke $r1.<androidx.media3.session.SessionCommands: boolean contains(int)>(i0);

        return $z0;
    }

    public boolean isSessionCommandAvailable(androidx.media3.session.SessionCommand)
    {
        androidx.media3.session.MediaController r0;
        androidx.media3.session.SessionCommand r1;
        androidx.media3.session.SessionCommands $r2;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaController;

        r1 := @parameter0: androidx.media3.session.SessionCommand;

        $r2 = virtualinvoke r0.<androidx.media3.session.MediaController: androidx.media3.session.SessionCommands getAvailableSessionCommands()>();

        $z0 = virtualinvoke $r2.<androidx.media3.session.SessionCommands: boolean contains(androidx.media3.session.SessionCommand)>(r1);

        return $z0;
    }

    public androidx.media3.session.SessionCommands getAvailableSessionCommands()
    {
        androidx.media3.session.MediaController r0;
        boolean $z0;
        androidx.media3.session.MediaController$MediaControllerImpl $r1;
        androidx.media3.session.SessionCommands $r2, $r3;

        r0 := @this: androidx.media3.session.MediaController;

        specialinvoke r0.<androidx.media3.session.MediaController: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaController: boolean isConnected()>();

        if $z0 != 0 goto label1;

        $r3 = <androidx.media3.session.SessionCommands: androidx.media3.session.SessionCommands EMPTY>;

        return $r3;

     label1:
        $r1 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$MediaControllerImpl impl>;

        $r2 = interfaceinvoke $r1.<androidx.media3.session.MediaController$MediaControllerImpl: androidx.media3.session.SessionCommands getAvailableSessionCommands()>();

        return $r2;
    }

    private static com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()
    {
        androidx.media3.session.SessionResult $r0;
        com.google.common.util.concurrent.ListenableFuture $r1;

        $r0 = new androidx.media3.session.SessionResult;

        specialinvoke $r0.<androidx.media3.session.SessionResult: void <init>(int)>(-100);

        $r1 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)>($r0);

        return $r1;
    }

    void runOnApplicationLooper(java.lang.Runnable)
    {
        androidx.media3.session.MediaController r0;
        java.lang.Runnable r1;
        android.os.Handler $r2;

        r0 := @this: androidx.media3.session.MediaController;

        r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<androidx.media3.session.MediaController: android.os.Handler applicationHandler>;

        staticinvoke <androidx.media3.common.util.Util: boolean postOrRun(android.os.Handler,java.lang.Runnable)>($r2, r1);

        return;
    }

    void notifyControllerListener(androidx.media3.common.util.Consumer)
    {
        androidx.media3.session.MediaController r0;
        androidx.media3.common.util.Consumer r1;
        android.os.Looper $r2, $r3;
        androidx.media3.session.MediaController$Listener $r4;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaController;

        r1 := @parameter0: androidx.media3.common.util.Consumer;

        $r2 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r3 = virtualinvoke r0.<androidx.media3.session.MediaController: android.os.Looper getApplicationLooper()>();

        if $r2 != $r3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z0);

        $r4 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$Listener listener>;

        interfaceinvoke r1.<androidx.media3.common.util.Consumer: void accept(java.lang.Object)>($r4);

        return;
    }

    void notifyAccepted()
    {
        androidx.media3.session.MediaController r0;
        android.os.Looper $r1, $r2;
        boolean $z0, $z1, $z2;
        androidx.media3.session.MediaController$ConnectionCallback $r3;

        r0 := @this: androidx.media3.session.MediaController;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r2 = virtualinvoke r0.<androidx.media3.session.MediaController: android.os.Looper getApplicationLooper()>();

        if $r1 != $r2 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z1);

        $z0 = r0.<androidx.media3.session.MediaController: boolean connectionNotified>;

        if $z0 != 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z2);

        r0.<androidx.media3.session.MediaController: boolean connectionNotified> = 1;

        $r3 = r0.<androidx.media3.session.MediaController: androidx.media3.session.MediaController$ConnectionCallback connectionCallback>;

        interfaceinvoke $r3.<androidx.media3.session.MediaController$ConnectionCallback: void onAccepted()>();

        return;
    }

    private void verifyApplicationThread()
    {
        androidx.media3.session.MediaController r0;
        android.os.Looper $r1, $r2;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaController;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r2 = virtualinvoke r0.<androidx.media3.session.MediaController: android.os.Looper getApplicationLooper()>();

        if $r1 != $r2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean,java.lang.Object)>($z0, "MediaController method is called from a wrong thread. See javadoc of MediaController for details.");

        return;
    }

    private void lambda$release$0(androidx.media3.session.MediaController$Listener)
    {
        androidx.media3.session.MediaController r0;
        androidx.media3.session.MediaController$Listener r1;

        r0 := @this: androidx.media3.session.MediaController;

        r1 := @parameter0: androidx.media3.session.MediaController$Listener;

        interfaceinvoke r1.<androidx.media3.session.MediaController$Listener: void onDisconnected(androidx.media3.session.MediaController)>(r0);

        return;
    }

androidx.media3.session.MediaController$Builder$1
    void <init>(androidx.media3.session.MediaController$Builder)
    {
        androidx.media3.session.MediaController$Builder$1 r0;
        androidx.media3.session.MediaController$Builder r1;

        r0 := @this: androidx.media3.session.MediaController$Builder$1;

        r1 := @parameter0: androidx.media3.session.MediaController$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.media3.session.MediaController$Builder
<androidx.media3.session.MediaController$Builder: android.content.Context context>
<androidx.media3.session.MediaController$Builder: androidx.media3.session.SessionToken token>
<androidx.media3.session.MediaController$Builder: android.os.Bundle connectionHints>
<androidx.media3.session.MediaController$Builder: androidx.media3.session.MediaController$Listener listener>
<androidx.media3.session.MediaController$Builder: android.os.Looper applicationLooper>
<androidx.media3.session.MediaController$Builder: androidx.media3.session.BitmapLoader bitmapLoader>
    public void <init>(android.content.Context, androidx.media3.session.SessionToken)
    {
        androidx.media3.session.MediaController$Builder r0;
        android.content.Context r1, $r4;
        androidx.media3.session.SessionToken r2, $r6;
        java.lang.Object $r3, $r5;
        android.os.Bundle $r7;
        androidx.media3.session.MediaController$Builder$1 $r8;
        android.os.Looper $r9;

        r0 := @this: androidx.media3.session.MediaController$Builder;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media3.session.SessionToken;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (android.content.Context) $r3;

        r0.<androidx.media3.session.MediaController$Builder: android.content.Context context> = $r4;

        $r5 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r6 = (androidx.media3.session.SessionToken) $r5;

        r0.<androidx.media3.session.MediaController$Builder: androidx.media3.session.SessionToken token> = $r6;

        $r7 = <android.os.Bundle: android.os.Bundle EMPTY>;

        r0.<androidx.media3.session.MediaController$Builder: android.os.Bundle connectionHints> = $r7;

        $r8 = new androidx.media3.session.MediaController$Builder$1;

        specialinvoke $r8.<androidx.media3.session.MediaController$Builder$1: void <init>(androidx.media3.session.MediaController$Builder)>(r0);

        r0.<androidx.media3.session.MediaController$Builder: androidx.media3.session.MediaController$Listener listener> = $r8;

        $r9 = staticinvoke <androidx.media3.common.util.Util: android.os.Looper getCurrentOrMainLooper()>();

        r0.<androidx.media3.session.MediaController$Builder: android.os.Looper applicationLooper> = $r9;

        return;
    }

    public androidx.media3.session.MediaController$Builder setConnectionHints(android.os.Bundle)
    {
        androidx.media3.session.MediaController$Builder r0;
        android.os.Bundle r1, $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: androidx.media3.session.MediaController$Builder;

        r1 := @parameter0: android.os.Bundle;

        $r2 = new android.os.Bundle;

        $r3 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (android.os.Bundle) $r3;

        specialinvoke $r2.<android.os.Bundle: void <init>(android.os.Bundle)>($r4);

        r0.<androidx.media3.session.MediaController$Builder: android.os.Bundle connectionHints> = $r2;

        return r0;
    }

    public androidx.media3.session.MediaController$Builder setListener(androidx.media3.session.MediaController$Listener)
    {
        androidx.media3.session.MediaController$Builder r0;
        androidx.media3.session.MediaController$Listener r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.session.MediaController$Builder;

        r1 := @parameter0: androidx.media3.session.MediaController$Listener;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (androidx.media3.session.MediaController$Listener) $r2;

        r0.<androidx.media3.session.MediaController$Builder: androidx.media3.session.MediaController$Listener listener> = $r3;

        return r0;
    }

    public androidx.media3.session.MediaController$Builder setApplicationLooper(android.os.Looper)
    {
        androidx.media3.session.MediaController$Builder r0;
        android.os.Looper r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.session.MediaController$Builder;

        r1 := @parameter0: android.os.Looper;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (android.os.Looper) $r2;

        r0.<androidx.media3.session.MediaController$Builder: android.os.Looper applicationLooper> = $r3;

        return r0;
    }

    public androidx.media3.session.MediaController$Builder setBitmapLoader(androidx.media3.session.BitmapLoader)
    {
        androidx.media3.session.MediaController$Builder r0;
        androidx.media3.session.BitmapLoader r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.session.MediaController$Builder;

        r1 := @parameter0: androidx.media3.session.BitmapLoader;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (androidx.media3.session.BitmapLoader) $r2;

        r0.<androidx.media3.session.MediaController$Builder: androidx.media3.session.BitmapLoader bitmapLoader> = $r3;

        return r0;
    }

    public com.google.common.util.concurrent.ListenableFuture buildAsync()
    {
        androidx.media3.session.MediaController$Builder r0;
        androidx.media3.session.MediaControllerHolder r1, r19;
        androidx.media3.session.MediaController r2, r22;
        android.os.Looper $r4, $r14, $r17;
        androidx.media3.session.SessionToken $r5, $r11;
        boolean $z0;
        androidx.media3.session.BitmapLoader $r6, $r15;
        android.content.Context $r10;
        android.os.Bundle $r12;
        androidx.media3.session.MediaController$Listener $r13;
        java.lang.Runnable $r18;
        androidx.media3.session.SimpleBitmapLoader r20;
        androidx.media3.session.CacheBitmapLoader r21;
        android.os.Handler r23;
        com.google.common.util.concurrent.ListenableFuture r24;

        r0 := @this: androidx.media3.session.MediaController$Builder;

        r19 = new androidx.media3.session.MediaControllerHolder;

        $r4 = r0.<androidx.media3.session.MediaController$Builder: android.os.Looper applicationLooper>;

        specialinvoke r19.<androidx.media3.session.MediaControllerHolder: void <init>(android.os.Looper)>($r4);

        r1 = r19;

        $r5 = r0.<androidx.media3.session.MediaController$Builder: androidx.media3.session.SessionToken token>;

        $z0 = virtualinvoke $r5.<androidx.media3.session.SessionToken: boolean isLegacySession()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<androidx.media3.session.MediaController$Builder: androidx.media3.session.BitmapLoader bitmapLoader>;

        if $r6 != null goto label1;

        r21 = new androidx.media3.session.CacheBitmapLoader;

        r20 = new androidx.media3.session.SimpleBitmapLoader;

        specialinvoke r20.<androidx.media3.session.SimpleBitmapLoader: void <init>()>();

        specialinvoke r21.<androidx.media3.session.CacheBitmapLoader: void <init>(androidx.media3.session.BitmapLoader)>(r20);

        r0.<androidx.media3.session.MediaController$Builder: androidx.media3.session.BitmapLoader bitmapLoader> = r21;

     label1:
        r22 = new androidx.media3.session.MediaController;

        $r10 = r0.<androidx.media3.session.MediaController$Builder: android.content.Context context>;

        $r11 = r0.<androidx.media3.session.MediaController$Builder: androidx.media3.session.SessionToken token>;

        $r12 = r0.<androidx.media3.session.MediaController$Builder: android.os.Bundle connectionHints>;

        $r13 = r0.<androidx.media3.session.MediaController$Builder: androidx.media3.session.MediaController$Listener listener>;

        $r14 = r0.<androidx.media3.session.MediaController$Builder: android.os.Looper applicationLooper>;

        $r15 = r0.<androidx.media3.session.MediaController$Builder: androidx.media3.session.BitmapLoader bitmapLoader>;

        specialinvoke r22.<androidx.media3.session.MediaController: void <init>(android.content.Context,androidx.media3.session.SessionToken,android.os.Bundle,androidx.media3.session.MediaController$Listener,android.os.Looper,androidx.media3.session.MediaController$ConnectionCallback,androidx.media3.session.BitmapLoader)>($r10, $r11, $r12, $r13, $r14, r1, $r15);

        r2 = r22;

        r23 = new android.os.Handler;

        $r17 = r0.<androidx.media3.session.MediaController$Builder: android.os.Looper applicationLooper>;

        specialinvoke r23.<android.os.Handler: void <init>(android.os.Looper)>($r17);

        $r18 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaControllerHolder,androidx.media3.session.MediaController)>(r1, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaController$Builder: void lambda$buildAsync$0(androidx.media3.session.MediaControllerHolder,androidx.media3.session.MediaController)>, methodtype: void __METHODTYPE__());

        staticinvoke <androidx.media3.common.util.Util: boolean postOrRun(android.os.Handler,java.lang.Runnable)>(r23, $r18);

        r24 = (com.google.common.util.concurrent.ListenableFuture) r1;

        return r24;
    }

    private static void lambda$buildAsync$0(androidx.media3.session.MediaControllerHolder, androidx.media3.session.MediaController)
    {
        androidx.media3.session.MediaControllerHolder r0;
        androidx.media3.session.MediaController r1;

        r0 := @parameter0: androidx.media3.session.MediaControllerHolder;

        r1 := @parameter1: androidx.media3.session.MediaController;

        virtualinvoke r0.<androidx.media3.session.MediaControllerHolder: void setController(androidx.media3.session.MediaController)>(r1);

        return;
    }

androidx.media3.session.MediaController$ConnectionCallback
<androidx.media3.session.MediaController$ConnectionCallback: void onAccepted()>
<androidx.media3.session.MediaController$ConnectionCallback: void onRejected()>
androidx.media3.session.MediaController$Listener
    public void onDisconnected(androidx.media3.session.MediaController)
    {
        androidx.media3.session.MediaController$Listener r0;
        androidx.media3.session.MediaController r1;

        r0 := @this: androidx.media3.session.MediaController$Listener;

        r1 := @parameter0: androidx.media3.session.MediaController;

        return;
    }

    public com.google.common.util.concurrent.ListenableFuture onSetCustomLayout(androidx.media3.session.MediaController, java.util.List)
    {
        androidx.media3.session.MediaController$Listener r0;
        androidx.media3.session.MediaController r1;
        java.util.List r2;
        androidx.media3.session.SessionResult $r3;
        com.google.common.util.concurrent.ListenableFuture $r4;

        r0 := @this: androidx.media3.session.MediaController$Listener;

        r1 := @parameter0: androidx.media3.session.MediaController;

        r2 := @parameter1: java.util.List;

        $r3 = new androidx.media3.session.SessionResult;

        specialinvoke $r3.<androidx.media3.session.SessionResult: void <init>(int)>(-6);

        $r4 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)>($r3);

        return $r4;
    }

    public void onAvailableSessionCommandsChanged(androidx.media3.session.MediaController, androidx.media3.session.SessionCommands)
    {
        androidx.media3.session.MediaController$Listener r0;
        androidx.media3.session.MediaController r1;
        androidx.media3.session.SessionCommands r2;

        r0 := @this: androidx.media3.session.MediaController$Listener;

        r1 := @parameter0: androidx.media3.session.MediaController;

        r2 := @parameter1: androidx.media3.session.SessionCommands;

        return;
    }

    public com.google.common.util.concurrent.ListenableFuture onCustomCommand(androidx.media3.session.MediaController, androidx.media3.session.SessionCommand, android.os.Bundle)
    {
        androidx.media3.session.MediaController$Listener r0;
        androidx.media3.session.MediaController r1;
        androidx.media3.session.SessionCommand r2;
        android.os.Bundle r3;
        androidx.media3.session.SessionResult $r4;
        com.google.common.util.concurrent.ListenableFuture $r5;

        r0 := @this: androidx.media3.session.MediaController$Listener;

        r1 := @parameter0: androidx.media3.session.MediaController;

        r2 := @parameter1: androidx.media3.session.SessionCommand;

        r3 := @parameter2: android.os.Bundle;

        $r4 = new androidx.media3.session.SessionResult;

        specialinvoke $r4.<androidx.media3.session.SessionResult: void <init>(int)>(-6);

        $r5 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)>($r4);

        return $r5;
    }

    public void onExtrasChanged(androidx.media3.session.MediaController, android.os.Bundle)
    {
        androidx.media3.session.MediaController$Listener r0;
        androidx.media3.session.MediaController r1;
        android.os.Bundle r2;

        r0 := @this: androidx.media3.session.MediaController$Listener;

        r1 := @parameter0: androidx.media3.session.MediaController;

        r2 := @parameter1: android.os.Bundle;

        return;
    }

androidx.media3.session.MediaController$MediaControllerImpl
<androidx.media3.session.MediaController$MediaControllerImpl: void connect()>
<androidx.media3.session.MediaController$MediaControllerImpl: void addListener(androidx.media3.common.Player$Listener)>
<androidx.media3.session.MediaController$MediaControllerImpl: void removeListener(androidx.media3.common.Player$Listener)>
<androidx.media3.session.MediaController$MediaControllerImpl: androidx.media3.session.SessionToken getConnectedToken()>
<androidx.media3.session.MediaController$MediaControllerImpl: boolean isConnected()>
<androidx.media3.session.MediaController$MediaControllerImpl: void play()>
<androidx.media3.session.MediaController$MediaControllerImpl: void pause()>
<androidx.media3.session.MediaController$MediaControllerImpl: void setPlayWhenReady(boolean)>
<androidx.media3.session.MediaController$MediaControllerImpl: void prepare()>
<androidx.media3.session.MediaController$MediaControllerImpl: void stop()>
<androidx.media3.session.MediaController$MediaControllerImpl: void release()>
<androidx.media3.session.MediaController$MediaControllerImpl: void seekToDefaultPosition()>
<androidx.media3.session.MediaController$MediaControllerImpl: void seekToDefaultPosition(int)>
<androidx.media3.session.MediaController$MediaControllerImpl: void seekTo(long)>
<androidx.media3.session.MediaController$MediaControllerImpl: void seekTo(int,long)>
<androidx.media3.session.MediaController$MediaControllerImpl: long getSeekBackIncrement()>
<androidx.media3.session.MediaController$MediaControllerImpl: void seekBack()>
<androidx.media3.session.MediaController$MediaControllerImpl: long getSeekForwardIncrement()>
<androidx.media3.session.MediaController$MediaControllerImpl: void seekForward()>
<androidx.media3.session.MediaController$MediaControllerImpl: android.app.PendingIntent getSessionActivity()>
<androidx.media3.session.MediaController$MediaControllerImpl: androidx.media3.common.PlaybackException getPlayerError()>
<androidx.media3.session.MediaController$MediaControllerImpl: long getDuration()>
<androidx.media3.session.MediaController$MediaControllerImpl: long getCurrentPosition()>
<androidx.media3.session.MediaController$MediaControllerImpl: long getBufferedPosition()>
<androidx.media3.session.MediaController$MediaControllerImpl: int getBufferedPercentage()>
<androidx.media3.session.MediaController$MediaControllerImpl: long getTotalBufferedDuration()>
<androidx.media3.session.MediaController$MediaControllerImpl: long getCurrentLiveOffset()>
<androidx.media3.session.MediaController$MediaControllerImpl: long getContentDuration()>
<androidx.media3.session.MediaController$MediaControllerImpl: long getContentPosition()>
<androidx.media3.session.MediaController$MediaControllerImpl: long getContentBufferedPosition()>
<androidx.media3.session.MediaController$MediaControllerImpl: boolean isPlayingAd()>
<androidx.media3.session.MediaController$MediaControllerImpl: int getCurrentAdGroupIndex()>
<androidx.media3.session.MediaController$MediaControllerImpl: int getCurrentAdIndexInAdGroup()>
<androidx.media3.session.MediaController$MediaControllerImpl: void setPlaybackParameters(androidx.media3.common.PlaybackParameters)>
<androidx.media3.session.MediaController$MediaControllerImpl: void setPlaybackSpeed(float)>
<androidx.media3.session.MediaController$MediaControllerImpl: androidx.media3.common.PlaybackParameters getPlaybackParameters()>
<androidx.media3.session.MediaController$MediaControllerImpl: androidx.media3.common.AudioAttributes getAudioAttributes()>
<androidx.media3.session.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture setRating(java.lang.String,androidx.media3.common.Rating)>
<androidx.media3.session.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture setRating(androidx.media3.common.Rating)>
<androidx.media3.session.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture sendCustomCommand(androidx.media3.session.SessionCommand,android.os.Bundle)>
<androidx.media3.session.MediaController$MediaControllerImpl: androidx.media3.common.Timeline getCurrentTimeline()>
<androidx.media3.session.MediaController$MediaControllerImpl: void setMediaItem(androidx.media3.common.MediaItem)>
<androidx.media3.session.MediaController$MediaControllerImpl: void setMediaItem(androidx.media3.common.MediaItem,long)>
<androidx.media3.session.MediaController$MediaControllerImpl: void setMediaItem(androidx.media3.common.MediaItem,boolean)>
<androidx.media3.session.MediaController$MediaControllerImpl: void setMediaItems(java.util.List)>
<androidx.media3.session.MediaController$MediaControllerImpl: void setMediaItems(java.util.List,boolean)>
<androidx.media3.session.MediaController$MediaControllerImpl: void setMediaItems(java.util.List,int,long)>
<androidx.media3.session.MediaController$MediaControllerImpl: void setPlaylistMetadata(androidx.media3.common.MediaMetadata)>
<androidx.media3.session.MediaController$MediaControllerImpl: androidx.media3.common.MediaMetadata getPlaylistMetadata()>
<androidx.media3.session.MediaController$MediaControllerImpl: void addMediaItem(androidx.media3.common.MediaItem)>
<androidx.media3.session.MediaController$MediaControllerImpl: void addMediaItem(int,androidx.media3.common.MediaItem)>
<androidx.media3.session.MediaController$MediaControllerImpl: void addMediaItems(java.util.List)>
<androidx.media3.session.MediaController$MediaControllerImpl: void addMediaItems(int,java.util.List)>
<androidx.media3.session.MediaController$MediaControllerImpl: void removeMediaItem(int)>
<androidx.media3.session.MediaController$MediaControllerImpl: void removeMediaItems(int,int)>
<androidx.media3.session.MediaController$MediaControllerImpl: void clearMediaItems()>
<androidx.media3.session.MediaController$MediaControllerImpl: void moveMediaItem(int,int)>
<androidx.media3.session.MediaController$MediaControllerImpl: void moveMediaItems(int,int,int)>
<androidx.media3.session.MediaController$MediaControllerImpl: int getCurrentPeriodIndex()>
<androidx.media3.session.MediaController$MediaControllerImpl: int getCurrentMediaItemIndex()>
<androidx.media3.session.MediaController$MediaControllerImpl: int getPreviousMediaItemIndex()>
<androidx.media3.session.MediaController$MediaControllerImpl: int getNextMediaItemIndex()>
<androidx.media3.session.MediaController$MediaControllerImpl: boolean hasPreviousMediaItem()>
<androidx.media3.session.MediaController$MediaControllerImpl: boolean hasNextMediaItem()>
<androidx.media3.session.MediaController$MediaControllerImpl: void seekToPreviousMediaItem()>
<androidx.media3.session.MediaController$MediaControllerImpl: void seekToNextMediaItem()>
<androidx.media3.session.MediaController$MediaControllerImpl: void seekToPrevious()>
<androidx.media3.session.MediaController$MediaControllerImpl: long getMaxSeekToPreviousPosition()>
<androidx.media3.session.MediaController$MediaControllerImpl: void seekToNext()>
<androidx.media3.session.MediaController$MediaControllerImpl: int getRepeatMode()>
<androidx.media3.session.MediaController$MediaControllerImpl: void setRepeatMode(int)>
<androidx.media3.session.MediaController$MediaControllerImpl: boolean getShuffleModeEnabled()>
<androidx.media3.session.MediaController$MediaControllerImpl: void setShuffleModeEnabled(boolean)>
<androidx.media3.session.MediaController$MediaControllerImpl: androidx.media3.common.VideoSize getVideoSize()>
<androidx.media3.session.MediaController$MediaControllerImpl: androidx.media3.common.util.Size getSurfaceSize()>
<androidx.media3.session.MediaController$MediaControllerImpl: void clearVideoSurface()>
<androidx.media3.session.MediaController$MediaControllerImpl: void clearVideoSurface(android.view.Surface)>
<androidx.media3.session.MediaController$MediaControllerImpl: void setVideoSurface(android.view.Surface)>
<androidx.media3.session.MediaController$MediaControllerImpl: void setVideoSurfaceHolder(android.view.SurfaceHolder)>
<androidx.media3.session.MediaController$MediaControllerImpl: void clearVideoSurfaceHolder(android.view.SurfaceHolder)>
<androidx.media3.session.MediaController$MediaControllerImpl: void setVideoSurfaceView(android.view.SurfaceView)>
<androidx.media3.session.MediaController$MediaControllerImpl: void clearVideoSurfaceView(android.view.SurfaceView)>
<androidx.media3.session.MediaController$MediaControllerImpl: void setVideoTextureView(android.view.TextureView)>
<androidx.media3.session.MediaController$MediaControllerImpl: void clearVideoTextureView(android.view.TextureView)>
<androidx.media3.session.MediaController$MediaControllerImpl: androidx.media3.common.text.CueGroup getCurrentCues()>
<androidx.media3.session.MediaController$MediaControllerImpl: float getVolume()>
<androidx.media3.session.MediaController$MediaControllerImpl: void setVolume(float)>
<androidx.media3.session.MediaController$MediaControllerImpl: androidx.media3.common.DeviceInfo getDeviceInfo()>
<androidx.media3.session.MediaController$MediaControllerImpl: int getDeviceVolume()>
<androidx.media3.session.MediaController$MediaControllerImpl: boolean isDeviceMuted()>
<androidx.media3.session.MediaController$MediaControllerImpl: void setDeviceVolume(int)>
<androidx.media3.session.MediaController$MediaControllerImpl: void increaseDeviceVolume()>
<androidx.media3.session.MediaController$MediaControllerImpl: void decreaseDeviceVolume()>
<androidx.media3.session.MediaController$MediaControllerImpl: void setDeviceMuted(boolean)>
<androidx.media3.session.MediaController$MediaControllerImpl: boolean getPlayWhenReady()>
<androidx.media3.session.MediaController$MediaControllerImpl: int getPlaybackSuppressionReason()>
<androidx.media3.session.MediaController$MediaControllerImpl: int getPlaybackState()>
<androidx.media3.session.MediaController$MediaControllerImpl: boolean isPlaying()>
<androidx.media3.session.MediaController$MediaControllerImpl: boolean isLoading()>
<androidx.media3.session.MediaController$MediaControllerImpl: androidx.media3.common.MediaMetadata getMediaMetadata()>
<androidx.media3.session.MediaController$MediaControllerImpl: androidx.media3.common.Player$Commands getAvailableCommands()>
<androidx.media3.session.MediaController$MediaControllerImpl: androidx.media3.common.Tracks getCurrentTracks()>
<androidx.media3.session.MediaController$MediaControllerImpl: androidx.media3.common.TrackSelectionParameters getTrackSelectionParameters()>
<androidx.media3.session.MediaController$MediaControllerImpl: void setTrackSelectionParameters(androidx.media3.common.TrackSelectionParameters)>
<androidx.media3.session.MediaController$MediaControllerImpl: androidx.media3.session.SessionCommands getAvailableSessionCommands()>
<androidx.media3.session.MediaController$MediaControllerImpl: android.content.Context getContext()>
<androidx.media3.session.MediaController$MediaControllerImpl: android.support.v4.media.MediaBrowserCompat getBrowserCompat()>
