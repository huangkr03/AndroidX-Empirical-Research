androidx.compose.runtime.SnapshotStateKt__SnapshotStateKt
    public static final androidx.compose.runtime.MutableState mutableStateOf(java.lang.Object, androidx.compose.runtime.SnapshotMutationPolicy)
    {
        java.lang.Object r0;
        androidx.compose.runtime.SnapshotMutationPolicy r1;
        androidx.compose.runtime.snapshots.SnapshotMutableState $r2;
        androidx.compose.runtime.MutableState $r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: androidx.compose.runtime.SnapshotMutationPolicy;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "policy");

        $r2 = staticinvoke <androidx.compose.runtime.ActualAndroid_androidKt: androidx.compose.runtime.snapshots.SnapshotMutableState createSnapshotMutableState(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy)>(r0, r1);

        $r3 = (androidx.compose.runtime.MutableState) $r2;

        return $r3;
    }

    public static androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object, androidx.compose.runtime.SnapshotMutationPolicy, int, java.lang.Object)
    {
        java.lang.Object r0, r1;
        int i0, $i1;
        androidx.compose.runtime.MutableState $r2;
        androidx.compose.runtime.SnapshotMutationPolicy r3;

        r0 := @parameter0: java.lang.Object;

        r3 := @parameter1: androidx.compose.runtime.SnapshotMutationPolicy;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r3 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.SnapshotMutationPolicy structuralEqualityPolicy()>();

     label1:
        $r2 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy)>(r0, r3);

        return $r2;
    }

    public static final java.lang.Object getValue(androidx.compose.runtime.State, java.lang.Object, kotlin.reflect.KProperty)
    {
        androidx.compose.runtime.State $r0;
        java.lang.Object r1, $r3;
        kotlin.reflect.KProperty r2;

        $r0 := @parameter0: androidx.compose.runtime.State;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: kotlin.reflect.KProperty;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "property");

        $r3 = interfaceinvoke $r0.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        return $r3;
    }

    public static final void setValue(androidx.compose.runtime.MutableState, java.lang.Object, kotlin.reflect.KProperty, java.lang.Object)
    {
        androidx.compose.runtime.MutableState $r0;
        java.lang.Object r1, r3;
        kotlin.reflect.KProperty r2;

        $r0 := @parameter0: androidx.compose.runtime.MutableState;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: kotlin.reflect.KProperty;

        r3 := @parameter3: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "property");

        interfaceinvoke $r0.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r3);

        return;
    }

    public static final androidx.compose.runtime.snapshots.SnapshotStateList mutableStateListOf()
    {
        androidx.compose.runtime.snapshots.SnapshotStateList $r0;

        $r0 = new androidx.compose.runtime.snapshots.SnapshotStateList;

        specialinvoke $r0.<androidx.compose.runtime.snapshots.SnapshotStateList: void <init>()>();

        return $r0;
    }

    public static final transient androidx.compose.runtime.snapshots.SnapshotStateList mutableStateListOf(java.lang.Object[])
    {
        java.lang.Object[] r0;
        androidx.compose.runtime.snapshots.SnapshotStateList r1, r2, $r3;
        java.util.List $r4;
        java.util.Collection $r5;

        r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "elements");

        $r3 = new androidx.compose.runtime.snapshots.SnapshotStateList;

        specialinvoke $r3.<androidx.compose.runtime.snapshots.SnapshotStateList: void <init>()>();

        r1 = $r3;

        r2 = r1;

        $r4 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toList(java.lang.Object[])>(r0);

        $r5 = (java.util.Collection) $r4;

        virtualinvoke r2.<androidx.compose.runtime.snapshots.SnapshotStateList: boolean addAll(java.util.Collection)>($r5);

        return r1;
    }

    public static final androidx.compose.runtime.snapshots.SnapshotStateList toMutableStateList(java.util.Collection)
    {
        java.util.Collection $r0;
        androidx.compose.runtime.snapshots.SnapshotStateList r1, r2, $r3;

        $r0 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r3 = new androidx.compose.runtime.snapshots.SnapshotStateList;

        specialinvoke $r3.<androidx.compose.runtime.snapshots.SnapshotStateList: void <init>()>();

        r1 = $r3;

        r2 = r1;

        virtualinvoke r2.<androidx.compose.runtime.snapshots.SnapshotStateList: boolean addAll(java.util.Collection)>($r0);

        return r1;
    }

    public static final androidx.compose.runtime.snapshots.SnapshotStateMap mutableStateMapOf()
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap $r0;

        $r0 = new androidx.compose.runtime.snapshots.SnapshotStateMap;

        specialinvoke $r0.<androidx.compose.runtime.snapshots.SnapshotStateMap: void <init>()>();

        return $r0;
    }

    public static final transient androidx.compose.runtime.snapshots.SnapshotStateMap mutableStateMapOf(kotlin.Pair[])
    {
        kotlin.Pair[] r0;
        androidx.compose.runtime.snapshots.SnapshotStateMap r1, $r2;
        java.util.Map $r3;

        r0 := @parameter0: kotlin.Pair[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "pairs");

        $r2 = new androidx.compose.runtime.snapshots.SnapshotStateMap;

        specialinvoke $r2.<androidx.compose.runtime.snapshots.SnapshotStateMap: void <init>()>();

        r1 = $r2;

        $r3 = staticinvoke <kotlin.collections.MapsKt: java.util.Map toMap(kotlin.Pair[])>(r0);

        virtualinvoke r1.<androidx.compose.runtime.snapshots.SnapshotStateMap: void putAll(java.util.Map)>($r3);

        return r1;
    }

    public static final androidx.compose.runtime.snapshots.SnapshotStateMap toMutableStateMap(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        androidx.compose.runtime.snapshots.SnapshotStateMap r1, r2, $r3;
        java.util.Map $r4;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r3 = new androidx.compose.runtime.snapshots.SnapshotStateMap;

        specialinvoke $r3.<androidx.compose.runtime.snapshots.SnapshotStateMap: void <init>()>();

        r1 = $r3;

        r2 = r1;

        $r4 = staticinvoke <kotlin.collections.MapsKt: java.util.Map toMap(java.lang.Iterable)>($r0);

        virtualinvoke r2.<androidx.compose.runtime.snapshots.SnapshotStateMap: void putAll(java.util.Map)>($r4);

        return r1;
    }

    public static final androidx.compose.runtime.State rememberUpdatedState(java.lang.Object, androidx.compose.runtime.Composer, int)
    {
        java.lang.Object r0, r3, r5, $r7, $r11;
        androidx.compose.runtime.Composer $r1;
        int $i0;
        androidx.compose.runtime.MutableState r2, r4, $r9;
        boolean z0, $z4, $z5;
        androidx.compose.runtime.Composer$Companion $r6;
        androidx.compose.runtime.State $r8;

        r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: androidx.compose.runtime.Composer;

        $i0 := @parameter2: int;

        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-1058319986);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r1, "C(rememberUpdatedState)*294@9997L41:SnapshotState.kt#9igjgp");

        $z4 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z4 == 0 goto label1;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(-1058319986, $i0, -1, "androidx.compose.runtime.rememberUpdatedState (SnapshotState.kt:294)");

     label1:
        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-492369756);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r1, "C(remember):Composables.kt#9igjgp");

        z0 = 0;

        r3 = interfaceinvoke $r1.<androidx.compose.runtime.Composer: java.lang.Object rememberedValue()>();

        $r6 = <androidx.compose.runtime.Composer: androidx.compose.runtime.Composer$Companion Companion>;

        $r7 = virtualinvoke $r6.<androidx.compose.runtime.Composer$Companion: java.lang.Object getEmpty()>();

        if r3 != $r7 goto label2;

        r4 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>(r0, null, 2, null);

        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void updateRememberedValue(java.lang.Object)>(r4);

        $r11 = r4;

        goto label3;

     label2:
        $r11 = r3;

     label3:
        r5 = $r11;

        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        $r9 = (androidx.compose.runtime.MutableState) r5;

        interfaceinvoke $r9.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r0);

        r2 = (androidx.compose.runtime.MutableState) r5;

        $z5 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z5 == 0 goto label4;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

     label4:
        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        $r8 = (androidx.compose.runtime.State) r2;

        return $r8;
    }

