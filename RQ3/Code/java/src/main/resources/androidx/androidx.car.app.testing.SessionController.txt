androidx.car.app.testing.SessionController
<androidx.car.app.testing.SessionController: androidx.car.app.Session mSession>
<androidx.car.app.testing.SessionController: androidx.car.app.testing.TestCarContext mTestCarContext>
<androidx.car.app.testing.SessionController: android.content.Intent mIntent>
<androidx.car.app.testing.SessionController: androidx.car.app.testing.TestLifecycleOwner mLifecycleOwner>
    public void <init>(androidx.car.app.Session, androidx.car.app.testing.TestCarContext, android.content.Intent)
    {
        androidx.car.app.testing.SessionController r0;
        androidx.car.app.Session r1, $r5, $r15, $r17;
        androidx.car.app.testing.TestCarContext r2, $r7, $r14, $r16;
        android.content.Intent r3, $r9;
        java.lang.Object $r4, $r6, $r8;
        androidx.car.app.testing.TestLifecycleOwner $r11, $r18, r20;
        androidx.lifecycle.LifecycleRegistry $r12, $r19;
        androidx.car.app.testing.SessionController$SessionLifecycleObserver r21;
        androidx.lifecycle.LifecycleObserver r22;

        r0 := @this: androidx.car.app.testing.SessionController;

        r1 := @parameter0: androidx.car.app.Session;

        r2 := @parameter1: androidx.car.app.testing.TestCarContext;

        r3 := @parameter2: android.content.Intent;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r5 = (androidx.car.app.Session) $r4;

        r0.<androidx.car.app.testing.SessionController: androidx.car.app.Session mSession> = $r5;

        $r6 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r7 = (androidx.car.app.testing.TestCarContext) $r6;

        r0.<androidx.car.app.testing.SessionController: androidx.car.app.testing.TestCarContext mTestCarContext> = $r7;

        $r8 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r3);

        $r9 = (android.content.Intent) $r8;

        r0.<androidx.car.app.testing.SessionController: android.content.Intent mIntent> = $r9;

        r20 = new androidx.car.app.testing.TestLifecycleOwner;

        specialinvoke r20.<androidx.car.app.testing.TestLifecycleOwner: void <init>()>();

        r0.<androidx.car.app.testing.SessionController: androidx.car.app.testing.TestLifecycleOwner mLifecycleOwner> = r20;

        $r11 = r0.<androidx.car.app.testing.SessionController: androidx.car.app.testing.TestLifecycleOwner mLifecycleOwner>;

        $r12 = virtualinvoke $r11.<androidx.car.app.testing.TestLifecycleOwner: androidx.lifecycle.LifecycleRegistry getRegistry()>();

        r21 = new androidx.car.app.testing.SessionController$SessionLifecycleObserver;

        specialinvoke r21.<androidx.car.app.testing.SessionController$SessionLifecycleObserver: void <init>(androidx.car.app.testing.SessionController)>(r0);

        r22 = (androidx.lifecycle.LifecycleObserver) r21;

        virtualinvoke $r12.<androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>(r22);

        $r15 = r0.<androidx.car.app.testing.SessionController: androidx.car.app.Session mSession>;

        $r14 = r0.<androidx.car.app.testing.SessionController: androidx.car.app.testing.TestCarContext mTestCarContext>;

        virtualinvoke $r15.<androidx.car.app.Session: void setCarContextInternal(androidx.car.app.CarContext)>($r14);

        $r17 = r0.<androidx.car.app.testing.SessionController: androidx.car.app.Session mSession>;

        $r16 = r0.<androidx.car.app.testing.SessionController: androidx.car.app.testing.TestCarContext mTestCarContext>;

        $r18 = virtualinvoke $r16.<androidx.car.app.testing.TestCarContext: androidx.car.app.testing.TestLifecycleOwner getLifecycleOwner()>();

        $r19 = virtualinvoke $r18.<androidx.car.app.testing.TestLifecycleOwner: androidx.lifecycle.LifecycleRegistry getRegistry()>();

        virtualinvoke $r17.<androidx.car.app.Session: void setLifecycleRegistryInternal(androidx.lifecycle.LifecycleRegistry)>($r19);

        return;
    }

    public androidx.car.app.Session getSession()
    {
        androidx.car.app.testing.SessionController r0;
        androidx.car.app.Session $r1;

        r0 := @this: androidx.car.app.testing.SessionController;

        $r1 = r0.<androidx.car.app.testing.SessionController: androidx.car.app.Session mSession>;

        return $r1;
    }

    public androidx.car.app.testing.SessionController moveToState(androidx.lifecycle.Lifecycle$State)
    {
        androidx.car.app.testing.SessionController r0;
        androidx.lifecycle.Lifecycle$State r1;
        androidx.car.app.testing.TestLifecycleOwner $r2;
        androidx.lifecycle.LifecycleRegistry $r3;

        r0 := @this: androidx.car.app.testing.SessionController;

        r1 := @parameter0: androidx.lifecycle.Lifecycle$State;

        $r2 = r0.<androidx.car.app.testing.SessionController: androidx.car.app.testing.TestLifecycleOwner mLifecycleOwner>;

        $r3 = virtualinvoke $r2.<androidx.car.app.testing.TestLifecycleOwner: androidx.lifecycle.LifecycleRegistry getRegistry()>();

        virtualinvoke $r3.<androidx.lifecycle.LifecycleRegistry: void setCurrentState(androidx.lifecycle.Lifecycle$State)>(r1);

        return r0;
    }

androidx.car.app.testing.SessionController$SessionLifecycleObserver
<androidx.car.app.testing.SessionController$SessionLifecycleObserver: androidx.car.app.testing.SessionController this$0>
    void <init>(androidx.car.app.testing.SessionController)
    {
        androidx.car.app.testing.SessionController$SessionLifecycleObserver r0;
        androidx.car.app.testing.SessionController r1;

        r0 := @this: androidx.car.app.testing.SessionController$SessionLifecycleObserver;

        r1 := @parameter0: androidx.car.app.testing.SessionController;

        r0.<androidx.car.app.testing.SessionController$SessionLifecycleObserver: androidx.car.app.testing.SessionController this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onCreate(androidx.lifecycle.LifecycleOwner)
    {
        androidx.car.app.testing.SessionController$SessionLifecycleObserver r0;
        androidx.lifecycle.LifecycleOwner r1;
        androidx.lifecycle.LifecycleRegistry r2;
        androidx.car.app.testing.TestScreenManager r3;
        androidx.car.app.testing.SessionController $r4, $r7, $r11, $r12;
        androidx.car.app.Session $r5, $r14;
        androidx.lifecycle.Lifecycle $r6;
        androidx.car.app.testing.TestCarContext $r8;
        java.lang.Object $r9;
        androidx.lifecycle.Lifecycle$Event $r10;
        android.content.Intent $r13;
        androidx.car.app.Screen $r15;

        r0 := @this: androidx.car.app.testing.SessionController$SessionLifecycleObserver;

        r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        $r4 = r0.<androidx.car.app.testing.SessionController$SessionLifecycleObserver: androidx.car.app.testing.SessionController this$0>;

        $r5 = $r4.<androidx.car.app.testing.SessionController: androidx.car.app.Session mSession>;

        $r6 = virtualinvoke $r5.<androidx.car.app.Session: androidx.lifecycle.Lifecycle getLifecycle()>();

        r2 = (androidx.lifecycle.LifecycleRegistry) $r6;

        $r7 = r0.<androidx.car.app.testing.SessionController$SessionLifecycleObserver: androidx.car.app.testing.SessionController this$0>;

        $r8 = $r7.<androidx.car.app.testing.SessionController: androidx.car.app.testing.TestCarContext mTestCarContext>;

        $r9 = virtualinvoke $r8.<androidx.car.app.testing.TestCarContext: java.lang.Object getCarService(java.lang.Class)>(class "Landroidx/car/app/testing/TestScreenManager;");

        r3 = (androidx.car.app.testing.TestScreenManager) $r9;

        $r10 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE>;

        virtualinvoke r2.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r10);

        $r11 = r0.<androidx.car.app.testing.SessionController$SessionLifecycleObserver: androidx.car.app.testing.SessionController this$0>;

        $r14 = $r11.<androidx.car.app.testing.SessionController: androidx.car.app.Session mSession>;

        $r12 = r0.<androidx.car.app.testing.SessionController$SessionLifecycleObserver: androidx.car.app.testing.SessionController this$0>;

        $r13 = $r12.<androidx.car.app.testing.SessionController: android.content.Intent mIntent>;

        $r15 = virtualinvoke $r14.<androidx.car.app.Session: androidx.car.app.Screen onCreateScreen(android.content.Intent)>($r13);

        virtualinvoke r3.<androidx.car.app.testing.TestScreenManager: void push(androidx.car.app.Screen)>($r15);

        return;
    }

    public void onStart(androidx.lifecycle.LifecycleOwner)
    {
        androidx.car.app.testing.SessionController$SessionLifecycleObserver r0;
        androidx.lifecycle.LifecycleOwner r1;
        androidx.lifecycle.LifecycleRegistry r2;
        androidx.car.app.testing.SessionController $r3;
        androidx.car.app.Session $r4;
        androidx.lifecycle.Lifecycle $r5;
        androidx.lifecycle.Lifecycle$Event $r6;

        r0 := @this: androidx.car.app.testing.SessionController$SessionLifecycleObserver;

        r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        $r3 = r0.<androidx.car.app.testing.SessionController$SessionLifecycleObserver: androidx.car.app.testing.SessionController this$0>;

        $r4 = $r3.<androidx.car.app.testing.SessionController: androidx.car.app.Session mSession>;

        $r5 = virtualinvoke $r4.<androidx.car.app.Session: androidx.lifecycle.Lifecycle getLifecycle()>();

        r2 = (androidx.lifecycle.LifecycleRegistry) $r5;

        $r6 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START>;

        virtualinvoke r2.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r6);

        return;
    }

    public void onResume(androidx.lifecycle.LifecycleOwner)
    {
        androidx.car.app.testing.SessionController$SessionLifecycleObserver r0;
        androidx.lifecycle.LifecycleOwner r1;
        androidx.lifecycle.LifecycleRegistry r2;
        androidx.car.app.testing.SessionController $r3;
        androidx.car.app.Session $r4;
        androidx.lifecycle.Lifecycle $r5;
        androidx.lifecycle.Lifecycle$Event $r6;

        r0 := @this: androidx.car.app.testing.SessionController$SessionLifecycleObserver;

        r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        $r3 = r0.<androidx.car.app.testing.SessionController$SessionLifecycleObserver: androidx.car.app.testing.SessionController this$0>;

        $r4 = $r3.<androidx.car.app.testing.SessionController: androidx.car.app.Session mSession>;

        $r5 = virtualinvoke $r4.<androidx.car.app.Session: androidx.lifecycle.Lifecycle getLifecycle()>();

        r2 = (androidx.lifecycle.LifecycleRegistry) $r5;

        $r6 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME>;

        virtualinvoke r2.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r6);

        return;
    }

    public void onPause(androidx.lifecycle.LifecycleOwner)
    {
        androidx.car.app.testing.SessionController$SessionLifecycleObserver r0;
        androidx.lifecycle.LifecycleOwner r1;
        androidx.lifecycle.LifecycleRegistry r2;
        androidx.car.app.testing.SessionController $r3;
        androidx.car.app.Session $r4;
        androidx.lifecycle.Lifecycle $r5;
        androidx.lifecycle.Lifecycle$Event $r6;

        r0 := @this: androidx.car.app.testing.SessionController$SessionLifecycleObserver;

        r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        $r3 = r0.<androidx.car.app.testing.SessionController$SessionLifecycleObserver: androidx.car.app.testing.SessionController this$0>;

        $r4 = $r3.<androidx.car.app.testing.SessionController: androidx.car.app.Session mSession>;

        $r5 = virtualinvoke $r4.<androidx.car.app.Session: androidx.lifecycle.Lifecycle getLifecycle()>();

        r2 = (androidx.lifecycle.LifecycleRegistry) $r5;

        $r6 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE>;

        virtualinvoke r2.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r6);

        return;
    }

    public void onStop(androidx.lifecycle.LifecycleOwner)
    {
        androidx.car.app.testing.SessionController$SessionLifecycleObserver r0;
        androidx.lifecycle.LifecycleOwner r1;
        androidx.lifecycle.LifecycleRegistry r2;
        androidx.car.app.testing.SessionController $r3;
        androidx.car.app.Session $r4;
        androidx.lifecycle.Lifecycle $r5;
        androidx.lifecycle.Lifecycle$Event $r6;

        r0 := @this: androidx.car.app.testing.SessionController$SessionLifecycleObserver;

        r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        $r3 = r0.<androidx.car.app.testing.SessionController$SessionLifecycleObserver: androidx.car.app.testing.SessionController this$0>;

        $r4 = $r3.<androidx.car.app.testing.SessionController: androidx.car.app.Session mSession>;

        $r5 = virtualinvoke $r4.<androidx.car.app.Session: androidx.lifecycle.Lifecycle getLifecycle()>();

        r2 = (androidx.lifecycle.LifecycleRegistry) $r5;

        $r6 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP>;

        virtualinvoke r2.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r6);

        return;
    }

    public void onDestroy(androidx.lifecycle.LifecycleOwner)
    {
        androidx.car.app.testing.SessionController$SessionLifecycleObserver r0;
        androidx.lifecycle.LifecycleOwner r1;
        androidx.lifecycle.LifecycleRegistry r2;
        androidx.car.app.testing.SessionController $r3;
        androidx.car.app.Session $r4;
        androidx.lifecycle.Lifecycle $r5;
        androidx.lifecycle.Lifecycle$Event $r6;

        r0 := @this: androidx.car.app.testing.SessionController$SessionLifecycleObserver;

        r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        $r3 = r0.<androidx.car.app.testing.SessionController$SessionLifecycleObserver: androidx.car.app.testing.SessionController this$0>;

        $r4 = $r3.<androidx.car.app.testing.SessionController: androidx.car.app.Session mSession>;

        $r5 = virtualinvoke $r4.<androidx.car.app.Session: androidx.lifecycle.Lifecycle getLifecycle()>();

        r2 = (androidx.lifecycle.LifecycleRegistry) $r5;

        $r6 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY>;

        virtualinvoke r2.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r6);

        return;
    }

