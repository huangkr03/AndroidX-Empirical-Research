androidx.test.espresso.base.ViewFinderImpl
<androidx.test.espresso.base.ViewFinderImpl: org.hamcrest.Matcher viewMatcher>
<androidx.test.espresso.base.ViewFinderImpl: javax.inject.Provider rootViewProvider>
    public android.view.View getView() throws androidx.test.espresso.AmbiguousViewMatcherException, androidx.test.espresso.NoMatchingViewException
    {
        androidx.test.espresso.base.ViewFinderImpl r0;
        android.view.View r1, $r32, r40;
        org.hamcrest.Matcher $r2, $r4, $r9, $r15, $r22, $r27;
        java.lang.Object $r3, $r6, $r26, $r31;
        javax.inject.Provider $r5;
        java.lang.Iterable $r7, $r8, $r10, $r11, r57;
        boolean $z0, $z1;
        java.util.Iterator $r12, r39;
        androidx.test.espresso.core.internal.deps.guava.base.Joiner $r13;
        java.lang.String $r14, r47;
        androidx.test.espresso.NoMatchingViewException$Builder $r16, $r17, $r18, $r20, $r23, $r24, r44, r48, r52, r53;
        androidx.test.espresso.util.EspressoOptional $r19;
        androidx.test.espresso.NoMatchingViewException $r21, $r25;
        androidx.test.espresso.AmbiguousViewMatcherException$Builder $r28, $r29, $r30, $r33, $r36, r41, r50;
        java.lang.Object[] $r34, r46;
        android.view.View[] $r35;
        androidx.test.espresso.AmbiguousViewMatcherException $r37;
        androidx.test.espresso.base.ViewFinderImpl$MatcherPredicateAdapter r38, r42, r49, r51;
        java.util.ArrayList r43;
        java.util.Locale r45;
        java.lang.Throwable r54, r56, r59;
        java.util.List r55, r58;

        r0 := @this: androidx.test.espresso.base.ViewFinderImpl;

        specialinvoke r0.<androidx.test.espresso.base.ViewFinderImpl: void checkMainThread()>();

        r49 = new androidx.test.espresso.base.ViewFinderImpl$MatcherPredicateAdapter;

        r38 = r49;

        $r2 = r0.<androidx.test.espresso.base.ViewFinderImpl: org.hamcrest.Matcher viewMatcher>;

        $r3 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $r4 = (org.hamcrest.Matcher) $r3;

        specialinvoke r49.<androidx.test.espresso.base.ViewFinderImpl$MatcherPredicateAdapter: void <init>(org.hamcrest.Matcher,androidx.test.espresso.base.ViewFinderImpl$MatcherPredicateAdapter-IA)>($r4, null);

        $r5 = r0.<androidx.test.espresso.base.ViewFinderImpl: javax.inject.Provider rootViewProvider>;

        $r6 = interfaceinvoke $r5.<javax.inject.Provider: java.lang.Object get()>();

        r1 = (android.view.View) $r6;

        $r7 = staticinvoke <androidx.test.espresso.util.TreeIterables: java.lang.Iterable breadthFirstViewTraversal(android.view.View)>(r1);

        $r8 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.collect.Iterables: java.lang.Iterable filter(java.lang.Iterable,androidx.test.espresso.core.internal.deps.guava.base.Predicate)>($r7, r38);

        r39 = interfaceinvoke $r8.<java.lang.Iterable: java.util.Iterator iterator()>();

        r40 = null;

     label1:
        $z0 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        if r40 == null goto label2;

        r50 = new androidx.test.espresso.AmbiguousViewMatcherException$Builder;

        r41 = r50;

        specialinvoke r50.<androidx.test.espresso.AmbiguousViewMatcherException$Builder: void <init>()>();

        $r27 = r0.<androidx.test.espresso.base.ViewFinderImpl: org.hamcrest.Matcher viewMatcher>;

        $r28 = virtualinvoke r41.<androidx.test.espresso.AmbiguousViewMatcherException$Builder: androidx.test.espresso.AmbiguousViewMatcherException$Builder withViewMatcher(org.hamcrest.Matcher)>($r27);

        $r29 = virtualinvoke $r28.<androidx.test.espresso.AmbiguousViewMatcherException$Builder: androidx.test.espresso.AmbiguousViewMatcherException$Builder withRootView(android.view.View)>(r1);

        $r30 = virtualinvoke $r29.<androidx.test.espresso.AmbiguousViewMatcherException$Builder: androidx.test.espresso.AmbiguousViewMatcherException$Builder withView1(android.view.View)>(r40);

        $r31 = interfaceinvoke r39.<java.util.Iterator: java.lang.Object next()>();

        $r32 = (android.view.View) $r31;

        $r33 = virtualinvoke $r30.<androidx.test.espresso.AmbiguousViewMatcherException$Builder: androidx.test.espresso.AmbiguousViewMatcherException$Builder withView2(android.view.View)>($r32);

        $r34 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.collect.Iterators: java.lang.Object[] toArray(java.util.Iterator,java.lang.Class)>(r39, class "Landroid/view/View;");

        $r35 = (android.view.View[]) $r34;

        $r36 = virtualinvoke $r33.<androidx.test.espresso.AmbiguousViewMatcherException$Builder: androidx.test.espresso.AmbiguousViewMatcherException$Builder withOtherAmbiguousViews(android.view.View[])>($r35);

        $r37 = virtualinvoke $r36.<androidx.test.espresso.AmbiguousViewMatcherException$Builder: androidx.test.espresso.AmbiguousViewMatcherException build()>();

        r54 = (java.lang.Throwable) $r37;

        throw r54;

     label2:
        $r26 = interfaceinvoke r39.<java.util.Iterator: java.lang.Object next()>();

        r40 = (android.view.View) $r26;

        goto label1;

     label3:
        if r40 != null goto label5;

        r51 = new androidx.test.espresso.base.ViewFinderImpl$MatcherPredicateAdapter;

        r42 = r51;

        $r9 = staticinvoke <androidx.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher isAssignableFrom(java.lang.Class)>(class "Landroid/widget/AdapterView;");

        specialinvoke r51.<androidx.test.espresso.base.ViewFinderImpl$MatcherPredicateAdapter: void <init>(org.hamcrest.Matcher,androidx.test.espresso.base.ViewFinderImpl$MatcherPredicateAdapter-IA)>($r9, null);

        $r10 = staticinvoke <androidx.test.espresso.util.TreeIterables: java.lang.Iterable breadthFirstViewTraversal(android.view.View)>(r1);

        $r11 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.collect.Iterables: java.lang.Iterable filter(java.lang.Iterable,androidx.test.espresso.core.internal.deps.guava.base.Predicate)>($r10, r42);

        $r12 = interfaceinvoke $r11.<java.lang.Iterable: java.util.Iterator iterator()>();

        r43 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.collect.Lists: java.util.ArrayList newArrayList(java.util.Iterator)>($r12);

        r55 = (java.util.List) r43;

        $z1 = interfaceinvoke r55.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label4;

        r52 = new androidx.test.espresso.NoMatchingViewException$Builder;

        r44 = r52;

        specialinvoke r52.<androidx.test.espresso.NoMatchingViewException$Builder: void <init>()>();

        $r22 = r0.<androidx.test.espresso.base.ViewFinderImpl: org.hamcrest.Matcher viewMatcher>;

        $r23 = virtualinvoke r44.<androidx.test.espresso.NoMatchingViewException$Builder: androidx.test.espresso.NoMatchingViewException$Builder withViewMatcher(org.hamcrest.Matcher)>($r22);

        $r24 = virtualinvoke $r23.<androidx.test.espresso.NoMatchingViewException$Builder: androidx.test.espresso.NoMatchingViewException$Builder withRootView(android.view.View)>(r1);

        $r25 = virtualinvoke $r24.<androidx.test.espresso.NoMatchingViewException$Builder: androidx.test.espresso.NoMatchingViewException build()>();

        r56 = (java.lang.Throwable) $r25;

        throw r56;

     label4:
        r45 = <java.util.Locale: java.util.Locale ROOT>;

        r46 = newarray (java.lang.Object)[1];

        $r13 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Joiner: androidx.test.espresso.core.internal.deps.guava.base.Joiner on(java.lang.String)>("\n- ");

        r57 = (java.lang.Iterable) r43;

        $r14 = virtualinvoke $r13.<androidx.test.espresso.core.internal.deps.guava.base.Joiner: java.lang.String join(java.lang.Iterable)>(r57);

        r46[0] = $r14;

        r47 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r45, "\nIf the target view is not part of the view hierarchy, you may need to use Espresso.onData to load it from one of the following AdapterViews:%s", r46);

        r53 = new androidx.test.espresso.NoMatchingViewException$Builder;

        r48 = r53;

        specialinvoke r53.<androidx.test.espresso.NoMatchingViewException$Builder: void <init>()>();

        $r15 = r0.<androidx.test.espresso.base.ViewFinderImpl: org.hamcrest.Matcher viewMatcher>;

        $r16 = virtualinvoke r48.<androidx.test.espresso.NoMatchingViewException$Builder: androidx.test.espresso.NoMatchingViewException$Builder withViewMatcher(org.hamcrest.Matcher)>($r15);

        $r17 = virtualinvoke $r16.<androidx.test.espresso.NoMatchingViewException$Builder: androidx.test.espresso.NoMatchingViewException$Builder withRootView(android.view.View)>(r1);

        r58 = (java.util.List) r43;

        $r18 = virtualinvoke $r17.<androidx.test.espresso.NoMatchingViewException$Builder: androidx.test.espresso.NoMatchingViewException$Builder withAdapterViews(java.util.List)>(r58);

        $r19 = staticinvoke <androidx.test.espresso.util.EspressoOptional: androidx.test.espresso.util.EspressoOptional of(java.lang.Object)>(r47);

        $r20 = virtualinvoke $r18.<androidx.test.espresso.NoMatchingViewException$Builder: androidx.test.espresso.NoMatchingViewException$Builder withAdapterViewWarning(androidx.test.espresso.util.EspressoOptional)>($r19);

        $r21 = virtualinvoke $r20.<androidx.test.espresso.NoMatchingViewException$Builder: androidx.test.espresso.NoMatchingViewException build()>();

        r59 = (java.lang.Throwable) $r21;

        throw r59;

     label5:
        return r40;
    }

    void <init>(org.hamcrest.Matcher, javax.inject.Provider)
    {
        androidx.test.espresso.base.ViewFinderImpl r0;
        org.hamcrest.Matcher r1;
        javax.inject.Provider r2;

        r0 := @this: androidx.test.espresso.base.ViewFinderImpl;

        r1 := @parameter0: org.hamcrest.Matcher;

        r2 := @parameter1: javax.inject.Provider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.test.espresso.base.ViewFinderImpl: org.hamcrest.Matcher viewMatcher> = r1;

        r0.<androidx.test.espresso.base.ViewFinderImpl: javax.inject.Provider rootViewProvider> = r2;

        return;
    }

    private void checkMainThread()
    {
        androidx.test.espresso.base.ViewFinderImpl r0;
        java.lang.Thread $r1, $r3, $r4;
        android.os.Looper $r2;
        boolean $z0;
        java.lang.String $r5;

        r0 := @this: androidx.test.espresso.base.ViewFinderImpl;

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r2 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $r3 = virtualinvoke $r2.<android.os.Looper: java.lang.Thread getThread()>();

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        $r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r5 = virtualinvoke $r4.<java.lang.Thread: java.lang.String getName()>();

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: void checkState(boolean,java.lang.String,java.lang.Object)>($z0, "Executing a query on the view hierarchy outside of the main thread (on: %s)", $r5);

        return;
    }

androidx.test.espresso.base.ViewFinderImpl$MatcherPredicateAdapter-IA
androidx.test.espresso.base.ViewFinderImpl$MatcherPredicateAdapter
<androidx.test.espresso.base.ViewFinderImpl$MatcherPredicateAdapter: org.hamcrest.Matcher matcher>
    private void <init>(org.hamcrest.Matcher)
    {
        androidx.test.espresso.base.ViewFinderImpl$MatcherPredicateAdapter r0;
        org.hamcrest.Matcher r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.test.espresso.base.ViewFinderImpl$MatcherPredicateAdapter;

        r1 := @parameter0: org.hamcrest.Matcher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (org.hamcrest.Matcher) $r2;

        r0.<androidx.test.espresso.base.ViewFinderImpl$MatcherPredicateAdapter: org.hamcrest.Matcher matcher> = $r3;

        return;
    }

    void <init>(org.hamcrest.Matcher, androidx.test.espresso.base.ViewFinderImpl$MatcherPredicateAdapter-IA)
    {
        androidx.test.espresso.base.ViewFinderImpl$MatcherPredicateAdapter r0;
        org.hamcrest.Matcher r1;
        androidx.test.espresso.base.ViewFinderImpl$MatcherPredicateAdapter-IA r2;

        r0 := @this: androidx.test.espresso.base.ViewFinderImpl$MatcherPredicateAdapter;

        r1 := @parameter0: org.hamcrest.Matcher;

        r2 := @parameter1: androidx.test.espresso.base.ViewFinderImpl$MatcherPredicateAdapter-IA;

        specialinvoke r0.<androidx.test.espresso.base.ViewFinderImpl$MatcherPredicateAdapter: void <init>(org.hamcrest.Matcher)>(r1);

        return;
    }

    public boolean apply(java.lang.Object)
    {
        androidx.test.espresso.base.ViewFinderImpl$MatcherPredicateAdapter r0;
        java.lang.Object r1;
        org.hamcrest.Matcher $r2;
        boolean $z0;

        r0 := @this: androidx.test.espresso.base.ViewFinderImpl$MatcherPredicateAdapter;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.test.espresso.base.ViewFinderImpl$MatcherPredicateAdapter: org.hamcrest.Matcher matcher>;

        $z0 = interfaceinvoke $r2.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>(r1);

        return $z0;
    }

