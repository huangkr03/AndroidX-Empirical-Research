androidx.compose.foundation.layout.WindowInsetsHolder
<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.WindowInsetsHolder$Companion Companion>
<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets captionBar>
<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets displayCutout>
<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets ime>
<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets mandatorySystemGestures>
<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets navigationBars>
<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets statusBars>
<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets systemBars>
<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets systemGestures>
<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets tappableElement>
<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.ValueInsets waterfall>
<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.WindowInsets safeDrawing>
<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.WindowInsets safeGestures>
<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.WindowInsets safeContent>
<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.ValueInsets captionBarIgnoringVisibility>
<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.ValueInsets navigationBarsIgnoringVisibility>
<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.ValueInsets statusBarsIgnoringVisibility>
<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.ValueInsets systemBarsIgnoringVisibility>
<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.ValueInsets tappableElementIgnoringVisibility>
<androidx.compose.foundation.layout.WindowInsetsHolder: boolean consumes>
<androidx.compose.foundation.layout.WindowInsetsHolder: int accessCount>
<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.InsetsListener insetsListener>
<androidx.compose.foundation.layout.WindowInsetsHolder: java.util.WeakHashMap viewMap>
<androidx.compose.foundation.layout.WindowInsetsHolder: boolean testInsets>
    private void <init>(androidx.core.view.WindowInsetsCompat, android.view.View)
    {
        androidx.compose.foundation.layout.WindowInsetsHolder r0;
        androidx.core.view.WindowInsetsCompat r1;
        android.view.View r2, $r63;
        java.lang.Object r3, $r64;
        android.view.ViewParent r4;
        androidx.compose.foundation.layout.WindowInsetsHolder$Companion $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r53, $r55, $r57, $r59, $r61;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        androidx.compose.foundation.layout.AndroidWindowInsets $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r31, $r33, $r36, $r39, $r41, $r44;
        boolean $z0, $z1, $z2;
        androidx.compose.foundation.layout.InsetsListener $r23;
        androidx.core.view.DisplayCutoutCompat $r25;
        androidx.core.graphics.Insets $r26, $r29;
        androidx.compose.foundation.layout.ValueInsets $r30, $r47, $r54, $r56, $r58, $r60, $r62;
        androidx.compose.foundation.layout.WindowInsets $r32, $r34, $r35, $r37, $r38, $r40, $r42, $r43, $r45, $r46, $r48, $r49, $r50, $r51, $r52;
        java.lang.Boolean $r65;

        r0 := @this: androidx.compose.foundation.layout.WindowInsetsHolder;

        r1 := @parameter0: androidx.core.view.WindowInsetsCompat;

        r2 := @parameter1: android.view.View;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = <androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.WindowInsetsHolder$Companion Companion>;

        $i0 = staticinvoke <androidx.core.view.WindowInsetsCompat$Type: int captionBar()>();

        $r6 = staticinvoke <androidx.compose.foundation.layout.WindowInsetsHolder$Companion: androidx.compose.foundation.layout.AndroidWindowInsets access$systemInsets(androidx.compose.foundation.layout.WindowInsetsHolder$Companion,androidx.core.view.WindowInsetsCompat,int,java.lang.String)>($r5, r1, $i0, "captionBar");

        r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets captionBar> = $r6;

        $r7 = <androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.WindowInsetsHolder$Companion Companion>;

        $i1 = staticinvoke <androidx.core.view.WindowInsetsCompat$Type: int displayCutout()>();

        $r8 = staticinvoke <androidx.compose.foundation.layout.WindowInsetsHolder$Companion: androidx.compose.foundation.layout.AndroidWindowInsets access$systemInsets(androidx.compose.foundation.layout.WindowInsetsHolder$Companion,androidx.core.view.WindowInsetsCompat,int,java.lang.String)>($r7, r1, $i1, "displayCutout");

        r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets displayCutout> = $r8;

        $r9 = <androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.WindowInsetsHolder$Companion Companion>;

        $i2 = staticinvoke <androidx.core.view.WindowInsetsCompat$Type: int ime()>();

        $r10 = staticinvoke <androidx.compose.foundation.layout.WindowInsetsHolder$Companion: androidx.compose.foundation.layout.AndroidWindowInsets access$systemInsets(androidx.compose.foundation.layout.WindowInsetsHolder$Companion,androidx.core.view.WindowInsetsCompat,int,java.lang.String)>($r9, r1, $i2, "ime");

        r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets ime> = $r10;

        $r11 = <androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.WindowInsetsHolder$Companion Companion>;

        $i3 = staticinvoke <androidx.core.view.WindowInsetsCompat$Type: int mandatorySystemGestures()>();

        $r12 = staticinvoke <androidx.compose.foundation.layout.WindowInsetsHolder$Companion: androidx.compose.foundation.layout.AndroidWindowInsets access$systemInsets(androidx.compose.foundation.layout.WindowInsetsHolder$Companion,androidx.core.view.WindowInsetsCompat,int,java.lang.String)>($r11, r1, $i3, "mandatorySystemGestures");

        r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets mandatorySystemGestures> = $r12;

        $r13 = <androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.WindowInsetsHolder$Companion Companion>;

        $i4 = staticinvoke <androidx.core.view.WindowInsetsCompat$Type: int navigationBars()>();

        $r14 = staticinvoke <androidx.compose.foundation.layout.WindowInsetsHolder$Companion: androidx.compose.foundation.layout.AndroidWindowInsets access$systemInsets(androidx.compose.foundation.layout.WindowInsetsHolder$Companion,androidx.core.view.WindowInsetsCompat,int,java.lang.String)>($r13, r1, $i4, "navigationBars");

        r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets navigationBars> = $r14;

        $r15 = <androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.WindowInsetsHolder$Companion Companion>;

        $i5 = staticinvoke <androidx.core.view.WindowInsetsCompat$Type: int statusBars()>();

        $r16 = staticinvoke <androidx.compose.foundation.layout.WindowInsetsHolder$Companion: androidx.compose.foundation.layout.AndroidWindowInsets access$systemInsets(androidx.compose.foundation.layout.WindowInsetsHolder$Companion,androidx.core.view.WindowInsetsCompat,int,java.lang.String)>($r15, r1, $i5, "statusBars");

        r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets statusBars> = $r16;

        $r17 = <androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.WindowInsetsHolder$Companion Companion>;

        $i6 = staticinvoke <androidx.core.view.WindowInsetsCompat$Type: int systemBars()>();

        $r18 = staticinvoke <androidx.compose.foundation.layout.WindowInsetsHolder$Companion: androidx.compose.foundation.layout.AndroidWindowInsets access$systemInsets(androidx.compose.foundation.layout.WindowInsetsHolder$Companion,androidx.core.view.WindowInsetsCompat,int,java.lang.String)>($r17, r1, $i6, "systemBars");

        r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets systemBars> = $r18;

        $r19 = <androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.WindowInsetsHolder$Companion Companion>;

        $i7 = staticinvoke <androidx.core.view.WindowInsetsCompat$Type: int systemGestures()>();

        $r20 = staticinvoke <androidx.compose.foundation.layout.WindowInsetsHolder$Companion: androidx.compose.foundation.layout.AndroidWindowInsets access$systemInsets(androidx.compose.foundation.layout.WindowInsetsHolder$Companion,androidx.core.view.WindowInsetsCompat,int,java.lang.String)>($r19, r1, $i7, "systemGestures");

        r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets systemGestures> = $r20;

        $r21 = <androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.WindowInsetsHolder$Companion Companion>;

        $i8 = staticinvoke <androidx.core.view.WindowInsetsCompat$Type: int tappableElement()>();

        $r22 = staticinvoke <androidx.compose.foundation.layout.WindowInsetsHolder$Companion: androidx.compose.foundation.layout.AndroidWindowInsets access$systemInsets(androidx.compose.foundation.layout.WindowInsetsHolder$Companion,androidx.core.view.WindowInsetsCompat,int,java.lang.String)>($r21, r1, $i8, "tappableElement");

        r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets tappableElement> = $r22;

        if r1 == null goto label01;

        $r25 = virtualinvoke r1.<androidx.core.view.WindowInsetsCompat: androidx.core.view.DisplayCutoutCompat getDisplayCutout()>();

        if $r25 == null goto label01;

        $r26 = virtualinvoke $r25.<androidx.core.view.DisplayCutoutCompat: androidx.core.graphics.Insets getWaterfallInsets()>();

        $r29 = $r26;

        if $r26 != null goto label02;

     label01:
        $r29 = <androidx.core.graphics.Insets: androidx.core.graphics.Insets NONE>;

     label02:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r29, "insets?.displayCutout?.w\u2026ts ?: AndroidXInsets.NONE");

        $r30 = staticinvoke <androidx.compose.foundation.layout.WindowInsets_androidKt: androidx.compose.foundation.layout.ValueInsets ValueInsets(androidx.core.graphics.Insets,java.lang.String)>($r29, "waterfall");

        r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.ValueInsets waterfall> = $r30;

        $r31 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets systemBars>;

        $r32 = (androidx.compose.foundation.layout.WindowInsets) $r31;

        $r33 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets ime>;

        $r34 = (androidx.compose.foundation.layout.WindowInsets) $r33;

        $r35 = staticinvoke <androidx.compose.foundation.layout.WindowInsetsKt: androidx.compose.foundation.layout.WindowInsets union(androidx.compose.foundation.layout.WindowInsets,androidx.compose.foundation.layout.WindowInsets)>($r32, $r34);

        $r36 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets displayCutout>;

        $r37 = (androidx.compose.foundation.layout.WindowInsets) $r36;

        $r38 = staticinvoke <androidx.compose.foundation.layout.WindowInsetsKt: androidx.compose.foundation.layout.WindowInsets union(androidx.compose.foundation.layout.WindowInsets,androidx.compose.foundation.layout.WindowInsets)>($r35, $r37);

        r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.WindowInsets safeDrawing> = $r38;

        $r39 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets tappableElement>;

        $r40 = (androidx.compose.foundation.layout.WindowInsets) $r39;

        $r41 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets mandatorySystemGestures>;

        $r42 = (androidx.compose.foundation.layout.WindowInsets) $r41;

        $r43 = staticinvoke <androidx.compose.foundation.layout.WindowInsetsKt: androidx.compose.foundation.layout.WindowInsets union(androidx.compose.foundation.layout.WindowInsets,androidx.compose.foundation.layout.WindowInsets)>($r40, $r42);

        $r44 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets systemGestures>;

        $r45 = (androidx.compose.foundation.layout.WindowInsets) $r44;

        $r46 = staticinvoke <androidx.compose.foundation.layout.WindowInsetsKt: androidx.compose.foundation.layout.WindowInsets union(androidx.compose.foundation.layout.WindowInsets,androidx.compose.foundation.layout.WindowInsets)>($r43, $r45);

        $r47 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.ValueInsets waterfall>;

        $r48 = (androidx.compose.foundation.layout.WindowInsets) $r47;

        $r49 = staticinvoke <androidx.compose.foundation.layout.WindowInsetsKt: androidx.compose.foundation.layout.WindowInsets union(androidx.compose.foundation.layout.WindowInsets,androidx.compose.foundation.layout.WindowInsets)>($r46, $r48);

        r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.WindowInsets safeGestures> = $r49;

        $r50 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.WindowInsets safeDrawing>;

        $r51 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.WindowInsets safeGestures>;

        $r52 = staticinvoke <androidx.compose.foundation.layout.WindowInsetsKt: androidx.compose.foundation.layout.WindowInsets union(androidx.compose.foundation.layout.WindowInsets,androidx.compose.foundation.layout.WindowInsets)>($r50, $r51);

        r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.WindowInsets safeContent> = $r52;

        $r53 = <androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.WindowInsetsHolder$Companion Companion>;

        $i10 = staticinvoke <androidx.core.view.WindowInsetsCompat$Type: int captionBar()>();

        $r54 = staticinvoke <androidx.compose.foundation.layout.WindowInsetsHolder$Companion: androidx.compose.foundation.layout.ValueInsets access$valueInsetsIgnoringVisibility(androidx.compose.foundation.layout.WindowInsetsHolder$Companion,androidx.core.view.WindowInsetsCompat,int,java.lang.String)>($r53, r1, $i10, "captionBarIgnoringVisibility");

        r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.ValueInsets captionBarIgnoringVisibility> = $r54;

        $r55 = <androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.WindowInsetsHolder$Companion Companion>;

        $i11 = staticinvoke <androidx.core.view.WindowInsetsCompat$Type: int navigationBars()>();

        $r56 = staticinvoke <androidx.compose.foundation.layout.WindowInsetsHolder$Companion: androidx.compose.foundation.layout.ValueInsets access$valueInsetsIgnoringVisibility(androidx.compose.foundation.layout.WindowInsetsHolder$Companion,androidx.core.view.WindowInsetsCompat,int,java.lang.String)>($r55, r1, $i11, "navigationBarsIgnoringVisibility");

        r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.ValueInsets navigationBarsIgnoringVisibility> = $r56;

        $r57 = <androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.WindowInsetsHolder$Companion Companion>;

        $i12 = staticinvoke <androidx.core.view.WindowInsetsCompat$Type: int statusBars()>();

        $r58 = staticinvoke <androidx.compose.foundation.layout.WindowInsetsHolder$Companion: androidx.compose.foundation.layout.ValueInsets access$valueInsetsIgnoringVisibility(androidx.compose.foundation.layout.WindowInsetsHolder$Companion,androidx.core.view.WindowInsetsCompat,int,java.lang.String)>($r57, r1, $i12, "statusBarsIgnoringVisibility");

        r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.ValueInsets statusBarsIgnoringVisibility> = $r58;

        $r59 = <androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.WindowInsetsHolder$Companion Companion>;

        $i13 = staticinvoke <androidx.core.view.WindowInsetsCompat$Type: int systemBars()>();

        $r60 = staticinvoke <androidx.compose.foundation.layout.WindowInsetsHolder$Companion: androidx.compose.foundation.layout.ValueInsets access$valueInsetsIgnoringVisibility(androidx.compose.foundation.layout.WindowInsetsHolder$Companion,androidx.core.view.WindowInsetsCompat,int,java.lang.String)>($r59, r1, $i13, "systemBarsIgnoringVisibility");

        r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.ValueInsets systemBarsIgnoringVisibility> = $r60;

        $r61 = <androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.WindowInsetsHolder$Companion Companion>;

        $i14 = staticinvoke <androidx.core.view.WindowInsetsCompat$Type: int tappableElement()>();

        $r62 = staticinvoke <androidx.compose.foundation.layout.WindowInsetsHolder$Companion: androidx.compose.foundation.layout.ValueInsets access$valueInsetsIgnoringVisibility(androidx.compose.foundation.layout.WindowInsetsHolder$Companion,androidx.core.view.WindowInsetsCompat,int,java.lang.String)>($r61, r1, $i14, "tappableElementIgnoringVisibility");

        r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.ValueInsets tappableElementIgnoringVisibility> = $r62;

        r4 = virtualinvoke r2.<android.view.View: android.view.ViewParent getParent()>();

        $z1 = r4 instanceof android.view.View;

        if $z1 == 0 goto label03;

        $r63 = (android.view.View) r4;

        goto label04;

     label03:
        $r63 = null;

     label04:
        if $r63 == null goto label05;

        $i9 = <androidx.compose.ui.R$id: int consume_window_insets_tag>;

        $r64 = virtualinvoke $r63.<android.view.View: java.lang.Object getTag(int)>($i9);

        goto label06;

     label05:
        $r64 = null;

     label06:
        r3 = $r64;

        $z0 = r3 instanceof java.lang.Boolean;

        if $z0 == 0 goto label07;

        $r65 = (java.lang.Boolean) r3;

        goto label08;

     label07:
        $r65 = null;

     label08:
        if $r65 == null goto label09;

        $z2 = virtualinvoke $r65.<java.lang.Boolean: boolean booleanValue()>();

        goto label10;

     label09:
        $z2 = 1;

     label10:
        r0.<androidx.compose.foundation.layout.WindowInsetsHolder: boolean consumes> = $z2;

        $r23 = new androidx.compose.foundation.layout.InsetsListener;

        specialinvoke $r23.<androidx.compose.foundation.layout.InsetsListener: void <init>(androidx.compose.foundation.layout.WindowInsetsHolder)>(r0);

        r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.InsetsListener insetsListener> = $r23;

        return;
    }

    public final androidx.compose.foundation.layout.AndroidWindowInsets getCaptionBar()
    {
        androidx.compose.foundation.layout.WindowInsetsHolder r0;
        androidx.compose.foundation.layout.AndroidWindowInsets $r1;

        r0 := @this: androidx.compose.foundation.layout.WindowInsetsHolder;

        $r1 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets captionBar>;

        return $r1;
    }

    public final androidx.compose.foundation.layout.AndroidWindowInsets getDisplayCutout()
    {
        androidx.compose.foundation.layout.WindowInsetsHolder r0;
        androidx.compose.foundation.layout.AndroidWindowInsets $r1;

        r0 := @this: androidx.compose.foundation.layout.WindowInsetsHolder;

        $r1 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets displayCutout>;

        return $r1;
    }

    public final androidx.compose.foundation.layout.AndroidWindowInsets getIme()
    {
        androidx.compose.foundation.layout.WindowInsetsHolder r0;
        androidx.compose.foundation.layout.AndroidWindowInsets $r1;

        r0 := @this: androidx.compose.foundation.layout.WindowInsetsHolder;

        $r1 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets ime>;

        return $r1;
    }

    public final androidx.compose.foundation.layout.AndroidWindowInsets getMandatorySystemGestures()
    {
        androidx.compose.foundation.layout.WindowInsetsHolder r0;
        androidx.compose.foundation.layout.AndroidWindowInsets $r1;

        r0 := @this: androidx.compose.foundation.layout.WindowInsetsHolder;

        $r1 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets mandatorySystemGestures>;

        return $r1;
    }

    public final androidx.compose.foundation.layout.AndroidWindowInsets getNavigationBars()
    {
        androidx.compose.foundation.layout.WindowInsetsHolder r0;
        androidx.compose.foundation.layout.AndroidWindowInsets $r1;

        r0 := @this: androidx.compose.foundation.layout.WindowInsetsHolder;

        $r1 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets navigationBars>;

        return $r1;
    }

    public final androidx.compose.foundation.layout.AndroidWindowInsets getStatusBars()
    {
        androidx.compose.foundation.layout.WindowInsetsHolder r0;
        androidx.compose.foundation.layout.AndroidWindowInsets $r1;

        r0 := @this: androidx.compose.foundation.layout.WindowInsetsHolder;

        $r1 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets statusBars>;

        return $r1;
    }

    public final androidx.compose.foundation.layout.AndroidWindowInsets getSystemBars()
    {
        androidx.compose.foundation.layout.WindowInsetsHolder r0;
        androidx.compose.foundation.layout.AndroidWindowInsets $r1;

        r0 := @this: androidx.compose.foundation.layout.WindowInsetsHolder;

        $r1 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets systemBars>;

        return $r1;
    }

    public final androidx.compose.foundation.layout.AndroidWindowInsets getSystemGestures()
    {
        androidx.compose.foundation.layout.WindowInsetsHolder r0;
        androidx.compose.foundation.layout.AndroidWindowInsets $r1;

        r0 := @this: androidx.compose.foundation.layout.WindowInsetsHolder;

        $r1 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets systemGestures>;

        return $r1;
    }

    public final androidx.compose.foundation.layout.AndroidWindowInsets getTappableElement()
    {
        androidx.compose.foundation.layout.WindowInsetsHolder r0;
        androidx.compose.foundation.layout.AndroidWindowInsets $r1;

        r0 := @this: androidx.compose.foundation.layout.WindowInsetsHolder;

        $r1 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets tappableElement>;

        return $r1;
    }

    public final androidx.compose.foundation.layout.ValueInsets getWaterfall()
    {
        androidx.compose.foundation.layout.WindowInsetsHolder r0;
        androidx.compose.foundation.layout.ValueInsets $r1;

        r0 := @this: androidx.compose.foundation.layout.WindowInsetsHolder;

        $r1 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.ValueInsets waterfall>;

        return $r1;
    }

    public final androidx.compose.foundation.layout.WindowInsets getSafeDrawing()
    {
        androidx.compose.foundation.layout.WindowInsetsHolder r0;
        androidx.compose.foundation.layout.WindowInsets $r1;

        r0 := @this: androidx.compose.foundation.layout.WindowInsetsHolder;

        $r1 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.WindowInsets safeDrawing>;

        return $r1;
    }

    public final androidx.compose.foundation.layout.WindowInsets getSafeGestures()
    {
        androidx.compose.foundation.layout.WindowInsetsHolder r0;
        androidx.compose.foundation.layout.WindowInsets $r1;

        r0 := @this: androidx.compose.foundation.layout.WindowInsetsHolder;

        $r1 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.WindowInsets safeGestures>;

        return $r1;
    }

    public final androidx.compose.foundation.layout.WindowInsets getSafeContent()
    {
        androidx.compose.foundation.layout.WindowInsetsHolder r0;
        androidx.compose.foundation.layout.WindowInsets $r1;

        r0 := @this: androidx.compose.foundation.layout.WindowInsetsHolder;

        $r1 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.WindowInsets safeContent>;

        return $r1;
    }

    public final androidx.compose.foundation.layout.ValueInsets getCaptionBarIgnoringVisibility()
    {
        androidx.compose.foundation.layout.WindowInsetsHolder r0;
        androidx.compose.foundation.layout.ValueInsets $r1;

        r0 := @this: androidx.compose.foundation.layout.WindowInsetsHolder;

        $r1 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.ValueInsets captionBarIgnoringVisibility>;

        return $r1;
    }

    public final androidx.compose.foundation.layout.ValueInsets getNavigationBarsIgnoringVisibility()
    {
        androidx.compose.foundation.layout.WindowInsetsHolder r0;
        androidx.compose.foundation.layout.ValueInsets $r1;

        r0 := @this: androidx.compose.foundation.layout.WindowInsetsHolder;

        $r1 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.ValueInsets navigationBarsIgnoringVisibility>;

        return $r1;
    }

    public final androidx.compose.foundation.layout.ValueInsets getStatusBarsIgnoringVisibility()
    {
        androidx.compose.foundation.layout.WindowInsetsHolder r0;
        androidx.compose.foundation.layout.ValueInsets $r1;

        r0 := @this: androidx.compose.foundation.layout.WindowInsetsHolder;

        $r1 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.ValueInsets statusBarsIgnoringVisibility>;

        return $r1;
    }

    public final androidx.compose.foundation.layout.ValueInsets getSystemBarsIgnoringVisibility()
    {
        androidx.compose.foundation.layout.WindowInsetsHolder r0;
        androidx.compose.foundation.layout.ValueInsets $r1;

        r0 := @this: androidx.compose.foundation.layout.WindowInsetsHolder;

        $r1 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.ValueInsets systemBarsIgnoringVisibility>;

        return $r1;
    }

    public final androidx.compose.foundation.layout.ValueInsets getTappableElementIgnoringVisibility()
    {
        androidx.compose.foundation.layout.WindowInsetsHolder r0;
        androidx.compose.foundation.layout.ValueInsets $r1;

        r0 := @this: androidx.compose.foundation.layout.WindowInsetsHolder;

        $r1 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.ValueInsets tappableElementIgnoringVisibility>;

        return $r1;
    }

    public final boolean getConsumes()
    {
        androidx.compose.foundation.layout.WindowInsetsHolder r0;
        boolean $z0;

        r0 := @this: androidx.compose.foundation.layout.WindowInsetsHolder;

        $z0 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: boolean consumes>;

        return $z0;
    }

    public final void incrementAccessors(android.view.View)
    {
        androidx.compose.foundation.layout.WindowInsetsHolder r0;
        android.view.View r1;
        int i0, $i1, $i2, $i3;
        androidx.compose.foundation.layout.InsetsListener $r2, $r4, $r6;
        androidx.core.view.OnApplyWindowInsetsListener $r3;
        boolean $z0;
        android.view.View$OnAttachStateChangeListener $r5;
        androidx.core.view.WindowInsetsAnimationCompat$Callback $r7;

        r0 := @this: androidx.compose.foundation.layout.WindowInsetsHolder;

        r1 := @parameter0: android.view.View;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "view");

        $i1 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: int accessCount>;

        if $i1 != 0 goto label2;

        $r2 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.InsetsListener insetsListener>;

        $r3 = (androidx.core.view.OnApplyWindowInsetsListener) $r2;

        staticinvoke <androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>(r1, $r3);

        $z0 = virtualinvoke r1.<android.view.View: boolean isAttachedToWindow()>();

        if $z0 == 0 goto label1;

        virtualinvoke r1.<android.view.View: void requestApplyInsets()>();

     label1:
        $r4 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.InsetsListener insetsListener>;

        $r5 = (android.view.View$OnAttachStateChangeListener) $r4;

        virtualinvoke r1.<android.view.View: void addOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>($r5);

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 30 goto label2;

        $r6 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.InsetsListener insetsListener>;

        $r7 = (androidx.core.view.WindowInsetsAnimationCompat$Callback) $r6;

        staticinvoke <androidx.core.view.ViewCompat: void setWindowInsetsAnimationCallback(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback)>(r1, $r7);

     label2:
        i0 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: int accessCount>;

        $i3 = i0 + 1;

        r0.<androidx.compose.foundation.layout.WindowInsetsHolder: int accessCount> = $i3;

        return;
    }

    public final void decrementAccessors(android.view.View)
    {
        androidx.compose.foundation.layout.WindowInsetsHolder r0;
        android.view.View r1;
        int i0, $i1, $i2;
        androidx.compose.foundation.layout.InsetsListener $r2;
        android.view.View$OnAttachStateChangeListener $r3;

        r0 := @this: androidx.compose.foundation.layout.WindowInsetsHolder;

        r1 := @parameter0: android.view.View;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "view");

        i0 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: int accessCount>;

        $i1 = i0 + -1;

        r0.<androidx.compose.foundation.layout.WindowInsetsHolder: int accessCount> = $i1;

        $i2 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: int accessCount>;

        if $i2 != 0 goto label1;

        staticinvoke <androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>(r1, null);

        staticinvoke <androidx.core.view.ViewCompat: void setWindowInsetsAnimationCallback(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback)>(r1, null);

        $r2 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.InsetsListener insetsListener>;

        $r3 = (android.view.View$OnAttachStateChangeListener) $r2;

        virtualinvoke r1.<android.view.View: void removeOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>($r3);

     label1:
        return;
    }

    public final void update(androidx.core.view.WindowInsetsCompat, int)
    {
        androidx.compose.foundation.layout.WindowInsetsHolder r0;
        androidx.core.view.WindowInsetsCompat r1, r2, $r33;
        int i0, $i1, $i2, $i3, $i4, $i5;
        androidx.core.view.DisplayCutoutCompat r3;
        androidx.core.graphics.Insets r4, $r15, $r18, $r21, $r24, $r27, $r29;
        boolean $z0;
        androidx.compose.foundation.layout.AndroidWindowInsets $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        androidx.compose.foundation.layout.ValueInsets $r14, $r17, $r20, $r23, $r26, $r30;
        androidx.compose.foundation.layout.InsetsValues $r16, $r19, $r22, $r25, $r28, $r31;
        android.view.WindowInsets $r32;
        androidx.compose.runtime.snapshots.Snapshot$Companion $r34;

        r0 := @this: androidx.compose.foundation.layout.WindowInsetsHolder;

        r1 := @parameter0: androidx.core.view.WindowInsetsCompat;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "windowInsets");

        $z0 = <androidx.compose.foundation.layout.WindowInsetsHolder: boolean testInsets>;

        if $z0 == 0 goto label1;

        $r32 = virtualinvoke r1.<androidx.core.view.WindowInsetsCompat: android.view.WindowInsets toWindowInsets()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r32);

        $r33 = staticinvoke <androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets)>($r32);

        goto label2;

     label1:
        $r33 = r1;

     label2:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r33, "if (testInsets) {\n      \u2026   windowInsets\n        }");

        r2 = $r33;

        $r5 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets captionBar>;

        virtualinvoke $r5.<androidx.compose.foundation.layout.AndroidWindowInsets: void update$foundation_layout_release(androidx.core.view.WindowInsetsCompat,int)>(r2, i0);

        $r6 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets ime>;

        virtualinvoke $r6.<androidx.compose.foundation.layout.AndroidWindowInsets: void update$foundation_layout_release(androidx.core.view.WindowInsetsCompat,int)>(r2, i0);

        $r7 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets displayCutout>;

        virtualinvoke $r7.<androidx.compose.foundation.layout.AndroidWindowInsets: void update$foundation_layout_release(androidx.core.view.WindowInsetsCompat,int)>(r2, i0);

        $r8 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets navigationBars>;

        virtualinvoke $r8.<androidx.compose.foundation.layout.AndroidWindowInsets: void update$foundation_layout_release(androidx.core.view.WindowInsetsCompat,int)>(r2, i0);

        $r9 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets statusBars>;

        virtualinvoke $r9.<androidx.compose.foundation.layout.AndroidWindowInsets: void update$foundation_layout_release(androidx.core.view.WindowInsetsCompat,int)>(r2, i0);

        $r10 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets systemBars>;

        virtualinvoke $r10.<androidx.compose.foundation.layout.AndroidWindowInsets: void update$foundation_layout_release(androidx.core.view.WindowInsetsCompat,int)>(r2, i0);

        $r11 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets systemGestures>;

        virtualinvoke $r11.<androidx.compose.foundation.layout.AndroidWindowInsets: void update$foundation_layout_release(androidx.core.view.WindowInsetsCompat,int)>(r2, i0);

        $r12 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets tappableElement>;

        virtualinvoke $r12.<androidx.compose.foundation.layout.AndroidWindowInsets: void update$foundation_layout_release(androidx.core.view.WindowInsetsCompat,int)>(r2, i0);

        $r13 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.AndroidWindowInsets mandatorySystemGestures>;

        virtualinvoke $r13.<androidx.compose.foundation.layout.AndroidWindowInsets: void update$foundation_layout_release(androidx.core.view.WindowInsetsCompat,int)>(r2, i0);

        if i0 != 0 goto label3;

        $r14 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.ValueInsets captionBarIgnoringVisibility>;

        $i1 = staticinvoke <androidx.core.view.WindowInsetsCompat$Type: int captionBar()>();

        $r15 = virtualinvoke r2.<androidx.core.view.WindowInsetsCompat: androidx.core.graphics.Insets getInsetsIgnoringVisibility(int)>($i1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r15, "insets.getInsetsIgnoring\u2026aptionBar()\n            )");

        $r16 = staticinvoke <androidx.compose.foundation.layout.WindowInsets_androidKt: androidx.compose.foundation.layout.InsetsValues toInsetsValues(androidx.core.graphics.Insets)>($r15);

        virtualinvoke $r14.<androidx.compose.foundation.layout.ValueInsets: void setValue$foundation_layout_release(androidx.compose.foundation.layout.InsetsValues)>($r16);

        $r17 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.ValueInsets navigationBarsIgnoringVisibility>;

        $i2 = staticinvoke <androidx.core.view.WindowInsetsCompat$Type: int navigationBars()>();

        $r18 = virtualinvoke r2.<androidx.core.view.WindowInsetsCompat: androidx.core.graphics.Insets getInsetsIgnoringVisibility(int)>($i2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r18, "insets.getInsetsIgnoring\u2026ationBars()\n            )");

        $r19 = staticinvoke <androidx.compose.foundation.layout.WindowInsets_androidKt: androidx.compose.foundation.layout.InsetsValues toInsetsValues(androidx.core.graphics.Insets)>($r18);

        virtualinvoke $r17.<androidx.compose.foundation.layout.ValueInsets: void setValue$foundation_layout_release(androidx.compose.foundation.layout.InsetsValues)>($r19);

        $r20 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.ValueInsets statusBarsIgnoringVisibility>;

        $i3 = staticinvoke <androidx.core.view.WindowInsetsCompat$Type: int statusBars()>();

        $r21 = virtualinvoke r2.<androidx.core.view.WindowInsetsCompat: androidx.core.graphics.Insets getInsetsIgnoringVisibility(int)>($i3);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r21, "insets.getInsetsIgnoring\u2026tatusBars()\n            )");

        $r22 = staticinvoke <androidx.compose.foundation.layout.WindowInsets_androidKt: androidx.compose.foundation.layout.InsetsValues toInsetsValues(androidx.core.graphics.Insets)>($r21);

        virtualinvoke $r20.<androidx.compose.foundation.layout.ValueInsets: void setValue$foundation_layout_release(androidx.compose.foundation.layout.InsetsValues)>($r22);

        $r23 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.ValueInsets systemBarsIgnoringVisibility>;

        $i4 = staticinvoke <androidx.core.view.WindowInsetsCompat$Type: int systemBars()>();

        $r24 = virtualinvoke r2.<androidx.core.view.WindowInsetsCompat: androidx.core.graphics.Insets getInsetsIgnoringVisibility(int)>($i4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r24, "insets.getInsetsIgnoring\u2026ystemBars()\n            )");

        $r25 = staticinvoke <androidx.compose.foundation.layout.WindowInsets_androidKt: androidx.compose.foundation.layout.InsetsValues toInsetsValues(androidx.core.graphics.Insets)>($r24);

        virtualinvoke $r23.<androidx.compose.foundation.layout.ValueInsets: void setValue$foundation_layout_release(androidx.compose.foundation.layout.InsetsValues)>($r25);

        $r26 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.ValueInsets tappableElementIgnoringVisibility>;

        $i5 = staticinvoke <androidx.core.view.WindowInsetsCompat$Type: int tappableElement()>();

        $r27 = virtualinvoke r2.<androidx.core.view.WindowInsetsCompat: androidx.core.graphics.Insets getInsetsIgnoringVisibility(int)>($i5);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r27, "insets.getInsetsIgnoring\u2026leElement()\n            )");

        $r28 = staticinvoke <androidx.compose.foundation.layout.WindowInsets_androidKt: androidx.compose.foundation.layout.InsetsValues toInsetsValues(androidx.core.graphics.Insets)>($r27);

        virtualinvoke $r26.<androidx.compose.foundation.layout.ValueInsets: void setValue$foundation_layout_release(androidx.compose.foundation.layout.InsetsValues)>($r28);

        r3 = virtualinvoke r2.<androidx.core.view.WindowInsetsCompat: androidx.core.view.DisplayCutoutCompat getDisplayCutout()>();

        if r3 == null goto label3;

        $r29 = virtualinvoke r3.<androidx.core.view.DisplayCutoutCompat: androidx.core.graphics.Insets getWaterfallInsets()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r29, "cutout.waterfallInsets");

        r4 = $r29;

        $r30 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.ValueInsets waterfall>;

        $r31 = staticinvoke <androidx.compose.foundation.layout.WindowInsets_androidKt: androidx.compose.foundation.layout.InsetsValues toInsetsValues(androidx.core.graphics.Insets)>(r4);

        virtualinvoke $r30.<androidx.compose.foundation.layout.ValueInsets: void setValue$foundation_layout_release(androidx.compose.foundation.layout.InsetsValues)>($r31);

     label3:
        $r34 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        virtualinvoke $r34.<androidx.compose.runtime.snapshots.Snapshot$Companion: void sendApplyNotifications()>();

        return;
    }

    public static void update$default(androidx.compose.foundation.layout.WindowInsetsHolder, androidx.core.view.WindowInsetsCompat, int, int, java.lang.Object)
    {
        androidx.compose.foundation.layout.WindowInsetsHolder r0;
        androidx.core.view.WindowInsetsCompat r1;
        int i0, $i1, i2;
        java.lang.Object r2;

        r0 := @parameter0: androidx.compose.foundation.layout.WindowInsetsHolder;

        r1 := @parameter1: androidx.core.view.WindowInsetsCompat;

        i2 := @parameter2: int;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        i2 = 0;

     label1:
        virtualinvoke r0.<androidx.compose.foundation.layout.WindowInsetsHolder: void update(androidx.core.view.WindowInsetsCompat,int)>(r1, i2);

        return;
    }

    public static final void access$setTestInsets$cp(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <androidx.compose.foundation.layout.WindowInsetsHolder: boolean testInsets> = z0;

        return;
    }

    public static final java.util.WeakHashMap access$getViewMap$cp()
    {
        java.util.WeakHashMap $r0;

        $r0 = <androidx.compose.foundation.layout.WindowInsetsHolder: java.util.WeakHashMap viewMap>;

        return $r0;
    }

    public void <init>(androidx.core.view.WindowInsetsCompat, android.view.View, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.foundation.layout.WindowInsetsHolder r0;
        androidx.core.view.WindowInsetsCompat r1;
        android.view.View r2;
        kotlin.jvm.internal.DefaultConstructorMarker $r3;

        r0 := @this: androidx.compose.foundation.layout.WindowInsetsHolder;

        r1 := @parameter0: androidx.core.view.WindowInsetsCompat;

        r2 := @parameter1: android.view.View;

        $r3 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.foundation.layout.WindowInsetsHolder: void <init>(androidx.core.view.WindowInsetsCompat,android.view.View)>(r1, r2);

        return;
    }

    static void <clinit>()
    {
        androidx.compose.foundation.layout.WindowInsetsHolder$Companion $r0;
        java.util.WeakHashMap $r1;

        $r0 = new androidx.compose.foundation.layout.WindowInsetsHolder$Companion;

        specialinvoke $r0.<androidx.compose.foundation.layout.WindowInsetsHolder$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.compose.foundation.layout.WindowInsetsHolder: androidx.compose.foundation.layout.WindowInsetsHolder$Companion Companion> = $r0;

        $r1 = new java.util.WeakHashMap;

        specialinvoke $r1.<java.util.WeakHashMap: void <init>()>();

        <androidx.compose.foundation.layout.WindowInsetsHolder: java.util.WeakHashMap viewMap> = $r1;

        return;
    }

androidx.compose.foundation.layout.WindowInsetsHolder$Companion$current$1$invoke$$inlined$onDispose$1
<androidx.compose.foundation.layout.WindowInsetsHolder$Companion$current$1$invoke$$inlined$onDispose$1: androidx.compose.foundation.layout.WindowInsetsHolder $insets$inlined>
<androidx.compose.foundation.layout.WindowInsetsHolder$Companion$current$1$invoke$$inlined$onDispose$1: android.view.View $view$inlined>
    public void <init>(androidx.compose.foundation.layout.WindowInsetsHolder, android.view.View)
    {
        androidx.compose.foundation.layout.WindowInsetsHolder$Companion$current$1$invoke$$inlined$onDispose$1 r0;
        androidx.compose.foundation.layout.WindowInsetsHolder r1;
        android.view.View r2;

        r0 := @this: androidx.compose.foundation.layout.WindowInsetsHolder$Companion$current$1$invoke$$inlined$onDispose$1;

        r1 := @parameter0: androidx.compose.foundation.layout.WindowInsetsHolder;

        r2 := @parameter1: android.view.View;

        r0.<androidx.compose.foundation.layout.WindowInsetsHolder$Companion$current$1$invoke$$inlined$onDispose$1: androidx.compose.foundation.layout.WindowInsetsHolder $insets$inlined> = r1;

        r0.<androidx.compose.foundation.layout.WindowInsetsHolder$Companion$current$1$invoke$$inlined$onDispose$1: android.view.View $view$inlined> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void dispose()
    {
        androidx.compose.foundation.layout.WindowInsetsHolder$Companion$current$1$invoke$$inlined$onDispose$1 r0;
        android.view.View $r1;
        androidx.compose.foundation.layout.WindowInsetsHolder $r2;

        r0 := @this: androidx.compose.foundation.layout.WindowInsetsHolder$Companion$current$1$invoke$$inlined$onDispose$1;

        $r2 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder$Companion$current$1$invoke$$inlined$onDispose$1: androidx.compose.foundation.layout.WindowInsetsHolder $insets$inlined>;

        $r1 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder$Companion$current$1$invoke$$inlined$onDispose$1: android.view.View $view$inlined>;

        virtualinvoke $r2.<androidx.compose.foundation.layout.WindowInsetsHolder: void decrementAccessors(android.view.View)>($r1);

        return;
    }

androidx.compose.foundation.layout.WindowInsetsHolder$Companion$current$1
<androidx.compose.foundation.layout.WindowInsetsHolder$Companion$current$1: androidx.compose.foundation.layout.WindowInsetsHolder $insets>
<androidx.compose.foundation.layout.WindowInsetsHolder$Companion$current$1: android.view.View $view>
    void <init>(androidx.compose.foundation.layout.WindowInsetsHolder, android.view.View)
    {
        androidx.compose.foundation.layout.WindowInsetsHolder$Companion$current$1 r0;
        androidx.compose.foundation.layout.WindowInsetsHolder $r1;
        android.view.View $r2;

        r0 := @this: androidx.compose.foundation.layout.WindowInsetsHolder$Companion$current$1;

        $r1 := @parameter0: androidx.compose.foundation.layout.WindowInsetsHolder;

        $r2 := @parameter1: android.view.View;

        r0.<androidx.compose.foundation.layout.WindowInsetsHolder$Companion$current$1: androidx.compose.foundation.layout.WindowInsetsHolder $insets> = $r1;

        r0.<androidx.compose.foundation.layout.WindowInsetsHolder$Companion$current$1: android.view.View $view> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final androidx.compose.runtime.DisposableEffectResult invoke(androidx.compose.runtime.DisposableEffectScope)
    {
        androidx.compose.foundation.layout.WindowInsetsHolder$Companion$current$1 r0;
        androidx.compose.runtime.DisposableEffectScope $r1, r2;
        androidx.compose.foundation.layout.WindowInsetsHolder r3, $r6;
        android.view.View r4, $r5;
        androidx.compose.foundation.layout.WindowInsetsHolder$Companion$current$1$invoke$$inlined$onDispose$1 $r7;
        androidx.compose.runtime.DisposableEffectResult $r8;

        r0 := @this: androidx.compose.foundation.layout.WindowInsetsHolder$Companion$current$1;

        $r1 := @parameter0: androidx.compose.runtime.DisposableEffectScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$DisposableEffect");

        $r6 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder$Companion$current$1: androidx.compose.foundation.layout.WindowInsetsHolder $insets>;

        $r5 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder$Companion$current$1: android.view.View $view>;

        virtualinvoke $r6.<androidx.compose.foundation.layout.WindowInsetsHolder: void incrementAccessors(android.view.View)>($r5);

        r2 = $r1;

        r3 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder$Companion$current$1: androidx.compose.foundation.layout.WindowInsetsHolder $insets>;

        r4 = r0.<androidx.compose.foundation.layout.WindowInsetsHolder$Companion$current$1: android.view.View $view>;

        $r7 = new androidx.compose.foundation.layout.WindowInsetsHolder$Companion$current$1$invoke$$inlined$onDispose$1;

        specialinvoke $r7.<androidx.compose.foundation.layout.WindowInsetsHolder$Companion$current$1$invoke$$inlined$onDispose$1: void <init>(androidx.compose.foundation.layout.WindowInsetsHolder,android.view.View)>(r3, r4);

        $r8 = (androidx.compose.runtime.DisposableEffectResult) $r7;

        return $r8;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.foundation.layout.WindowInsetsHolder$Companion$current$1 r0;
        java.lang.Object r1;
        androidx.compose.runtime.DisposableEffectScope $r2;
        androidx.compose.runtime.DisposableEffectResult $r3;

        r0 := @this: androidx.compose.foundation.layout.WindowInsetsHolder$Companion$current$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.runtime.DisposableEffectScope) r1;

        $r3 = virtualinvoke r0.<androidx.compose.foundation.layout.WindowInsetsHolder$Companion$current$1: androidx.compose.runtime.DisposableEffectResult invoke(androidx.compose.runtime.DisposableEffectScope)>($r2);

        return $r3;
    }

androidx.compose.foundation.layout.WindowInsetsHolder$Companion
    private void <init>()
    {
        androidx.compose.foundation.layout.WindowInsetsHolder$Companion r0;

        r0 := @this: androidx.compose.foundation.layout.WindowInsetsHolder$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final void setUseTestInsets(boolean)
    {
        androidx.compose.foundation.layout.WindowInsetsHolder$Companion r0;
        boolean z0;

        r0 := @this: androidx.compose.foundation.layout.WindowInsetsHolder$Companion;

        z0 := @parameter0: boolean;

        staticinvoke <androidx.compose.foundation.layout.WindowInsetsHolder: void access$setTestInsets$cp(boolean)>(z0);

        return;
    }

    public final androidx.compose.foundation.layout.WindowInsetsHolder current(androidx.compose.runtime.Composer, int)
    {
        androidx.compose.foundation.layout.WindowInsetsHolder$Companion r0;
        androidx.compose.runtime.Composer $r1;
        int $i0;
        android.view.View r2;
        java.lang.Object r3;
        boolean $z2, $z3;
        androidx.compose.runtime.ProvidableCompositionLocal $r4;
        androidx.compose.foundation.layout.WindowInsetsHolder$Companion$current$1 $r5;
        kotlin.jvm.functions.Function1 $r6;
        androidx.compose.runtime.CompositionLocal r7;
        androidx.compose.foundation.layout.WindowInsetsHolder r8;

        r0 := @this: androidx.compose.foundation.layout.WindowInsetsHolder$Companion;

        $r1 := @parameter0: androidx.compose.runtime.Composer;

        $i0 := @parameter1: int;

        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-1366542614);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r1, "C(current)555@20288L7,558@20355L186:WindowInsets.android.kt#2w3rfo");

        $z2 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z2 == 0 goto label1;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(-1366542614, $i0, -1, "androidx.compose.foundation.layout.WindowInsetsHolder.Companion.current (WindowInsets.android.kt:554)");

     label1:
        $r4 = staticinvoke <androidx.compose.ui.platform.AndroidCompositionLocals_androidKt: androidx.compose.runtime.ProvidableCompositionLocal getLocalView()>();

        r7 = (androidx.compose.runtime.CompositionLocal) $r4;

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformationMarkerStart(androidx.compose.runtime.Composer,int,java.lang.String)>($r1, 2023513938, "C:CompositionLocal.kt#9igjgp");

        r3 = interfaceinvoke $r1.<androidx.compose.runtime.Composer: java.lang.Object consume(androidx.compose.runtime.CompositionLocal)>(r7);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformationMarkerEnd(androidx.compose.runtime.Composer)>($r1);

        r2 = (android.view.View) r3;

        r8 = specialinvoke r0.<androidx.compose.foundation.layout.WindowInsetsHolder$Companion: androidx.compose.foundation.layout.WindowInsetsHolder getOrCreateFor(android.view.View)>(r2);

        $r5 = new androidx.compose.foundation.layout.WindowInsetsHolder$Companion$current$1;

        specialinvoke $r5.<androidx.compose.foundation.layout.WindowInsetsHolder$Companion$current$1: void <init>(androidx.compose.foundation.layout.WindowInsetsHolder,android.view.View)>(r8, r2);

        $r6 = (kotlin.jvm.functions.Function1) $r5;

        staticinvoke <androidx.compose.runtime.EffectsKt: void DisposableEffect(java.lang.Object,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int)>(r8, $r6, $r1, 8);

        $z3 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z3 == 0 goto label2;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

     label2:
        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        return r8;
    }

    private final androidx.compose.foundation.layout.WindowInsetsHolder getOrCreateFor(android.view.View)
    {
        androidx.compose.foundation.layout.WindowInsetsHolder$Companion r0;
        android.view.View r1;
        java.util.WeakHashMap r2, $r5;
        java.util.Map $r3;
        java.lang.Object r4, $r10;
        androidx.compose.foundation.layout.WindowInsetsHolder $r6, $r11;
        java.lang.Throwable $r8;

        r0 := @this: androidx.compose.foundation.layout.WindowInsetsHolder$Companion;

        r1 := @parameter0: android.view.View;

        r2 = staticinvoke <androidx.compose.foundation.layout.WindowInsetsHolder: java.util.WeakHashMap access$getViewMap$cp()>();

        entermonitor r2;

     label1:
        $r5 = staticinvoke <androidx.compose.foundation.layout.WindowInsetsHolder: java.util.WeakHashMap access$getViewMap$cp()>();

        $r3 = (java.util.Map) $r5;

        r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        if r4 != null goto label2;

        $r6 = new androidx.compose.foundation.layout.WindowInsetsHolder;

        specialinvoke $r6.<androidx.compose.foundation.layout.WindowInsetsHolder: void <init>(androidx.core.view.WindowInsetsCompat,android.view.View,kotlin.jvm.internal.DefaultConstructorMarker)>(null, r1, null);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6);

        $r10 = $r6;

        goto label3;

     label2:
        $r10 = r4;

     label3:
        $r11 = (androidx.compose.foundation.layout.WindowInsetsHolder) $r10;

     label4:
        exitmonitor r2;

        goto label7;

     label5:
        $r8 := @caughtexception;

     label6:
        exitmonitor r2;

        throw $r8;

     label7:
        return $r11;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private final androidx.compose.foundation.layout.AndroidWindowInsets systemInsets(androidx.core.view.WindowInsetsCompat, int, java.lang.String)
    {
        androidx.compose.foundation.layout.WindowInsetsHolder$Companion r0;
        androidx.core.view.WindowInsetsCompat r1, r4;
        int i0;
        java.lang.String r2;
        androidx.compose.foundation.layout.AndroidWindowInsets r3, $r5;

        r0 := @this: androidx.compose.foundation.layout.WindowInsetsHolder$Companion;

        r1 := @parameter0: androidx.core.view.WindowInsetsCompat;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $r5 = new androidx.compose.foundation.layout.AndroidWindowInsets;

        specialinvoke $r5.<androidx.compose.foundation.layout.AndroidWindowInsets: void <init>(int,java.lang.String)>(i0, r2);

        r3 = $r5;

        if r1 == null goto label1;

        r4 = r1;

        virtualinvoke r3.<androidx.compose.foundation.layout.AndroidWindowInsets: void update$foundation_layout_release(androidx.core.view.WindowInsetsCompat,int)>(r4, i0);

        goto label1;

     label1:
        return r3;
    }

    private final androidx.compose.foundation.layout.ValueInsets valueInsetsIgnoringVisibility(androidx.core.view.WindowInsetsCompat, int, java.lang.String)
    {
        androidx.compose.foundation.layout.WindowInsetsHolder$Companion r0;
        androidx.core.view.WindowInsetsCompat r1;
        int i0;
        java.lang.String r2;
        androidx.core.graphics.Insets r3, $r4;
        androidx.compose.foundation.layout.ValueInsets $r5;

        r0 := @this: androidx.compose.foundation.layout.WindowInsetsHolder$Companion;

        r1 := @parameter0: androidx.core.view.WindowInsetsCompat;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        if r1 == null goto label1;

        $r4 = virtualinvoke r1.<androidx.core.view.WindowInsetsCompat: androidx.core.graphics.Insets getInsetsIgnoringVisibility(int)>(i0);

        if $r4 != null goto label2;

     label1:
        $r4 = <androidx.core.graphics.Insets: androidx.core.graphics.Insets NONE>;

     label2:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "windowInsets?.getInsetsI\u2026e) ?: AndroidXInsets.NONE");

        r3 = $r4;

        $r5 = staticinvoke <androidx.compose.foundation.layout.WindowInsets_androidKt: androidx.compose.foundation.layout.ValueInsets ValueInsets(androidx.core.graphics.Insets,java.lang.String)>(r3, r2);

        return $r5;
    }

    public static final androidx.compose.foundation.layout.AndroidWindowInsets access$systemInsets(androidx.compose.foundation.layout.WindowInsetsHolder$Companion, androidx.core.view.WindowInsetsCompat, int, java.lang.String)
    {
        androidx.compose.foundation.layout.WindowInsetsHolder$Companion $r0;
        androidx.core.view.WindowInsetsCompat r1;
        int i0;
        java.lang.String r2;
        androidx.compose.foundation.layout.AndroidWindowInsets $r3;

        $r0 := @parameter0: androidx.compose.foundation.layout.WindowInsetsHolder$Companion;

        r1 := @parameter1: androidx.core.view.WindowInsetsCompat;

        i0 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        $r3 = specialinvoke $r0.<androidx.compose.foundation.layout.WindowInsetsHolder$Companion: androidx.compose.foundation.layout.AndroidWindowInsets systemInsets(androidx.core.view.WindowInsetsCompat,int,java.lang.String)>(r1, i0, r2);

        return $r3;
    }

    public static final androidx.compose.foundation.layout.ValueInsets access$valueInsetsIgnoringVisibility(androidx.compose.foundation.layout.WindowInsetsHolder$Companion, androidx.core.view.WindowInsetsCompat, int, java.lang.String)
    {
        androidx.compose.foundation.layout.WindowInsetsHolder$Companion $r0;
        androidx.core.view.WindowInsetsCompat r1;
        int i0;
        java.lang.String r2;
        androidx.compose.foundation.layout.ValueInsets $r3;

        $r0 := @parameter0: androidx.compose.foundation.layout.WindowInsetsHolder$Companion;

        r1 := @parameter1: androidx.core.view.WindowInsetsCompat;

        i0 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        $r3 = specialinvoke $r0.<androidx.compose.foundation.layout.WindowInsetsHolder$Companion: androidx.compose.foundation.layout.ValueInsets valueInsetsIgnoringVisibility(androidx.core.view.WindowInsetsCompat,int,java.lang.String)>(r1, i0, r2);

        return $r3;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.foundation.layout.WindowInsetsHolder$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.compose.foundation.layout.WindowInsetsHolder$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.foundation.layout.WindowInsetsHolder$Companion: void <init>()>();

        return;
    }

