androidx.room.compiler.codegen.XTypeSpecKt
    public static final androidx.room.compiler.codegen.XTypeSpec$Builder addOriginatingElement(androidx.room.compiler.codegen.XTypeSpec$Builder, androidx.room.compiler.processing.XElement)
    {
        androidx.room.compiler.codegen.XTypeSpec$Builder $r0, r2;
        androidx.room.compiler.processing.XElement r1;
        androidx.room.compiler.codegen.CodeLanguage $r4;
        int[] $r5;
        int $i0, $i1;
        boolean $z1, $z2;
        androidx.room.compiler.codegen.kotlin.KotlinTypeSpec$Builder $r6;
        com.squareup.kotlinpoet.TypeSpec$Builder $r7;
        com.squareup.kotlinpoet.OriginatingElementsHolder$Builder $r8;
        java.lang.IllegalStateException $r10, $r15;
        java.lang.String $r11, $r16, r17, r18;
        androidx.room.compiler.codegen.java.JavaTypeSpec$Builder $r12;
        com.squareup.javapoet.TypeSpec$Builder $r13;

        $r0 := @parameter0: androidx.room.compiler.codegen.XTypeSpec$Builder;

        r1 := @parameter1: androidx.room.compiler.processing.XElement;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "element");

        r2 = $r0;

        $r4 = interfaceinvoke r2.<androidx.room.compiler.codegen.XTypeSpec$Builder: androidx.room.compiler.codegen.CodeLanguage getLanguage()>();

        $r5 = <androidx.room.compiler.codegen.XTypeSpecKt$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke $r4.<androidx.room.compiler.codegen.CodeLanguage: int ordinal()>();

        $i1 = $r5[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label3;
            default: goto label5;
        };

     label1:
        $z2 = r2 instanceof androidx.room.compiler.codegen.java.JavaTypeSpec$Builder;

        if $z2 != 0 goto label2;

        r17 = "Check failed.";

        $r15 = new java.lang.IllegalStateException;

        $r16 = virtualinvoke r17.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label2:
        $r12 = (androidx.room.compiler.codegen.java.JavaTypeSpec$Builder) r2;

        $r13 = virtualinvoke $r12.<androidx.room.compiler.codegen.java.JavaTypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder getActual$room_compiler_processing()>();

        staticinvoke <androidx.room.compiler.processing.JavaPoetExtKt: com.squareup.javapoet.TypeSpec$Builder addOriginatingElement(com.squareup.javapoet.TypeSpec$Builder,androidx.room.compiler.processing.XElement)>($r13, r1);

        goto label5;

     label3:
        $z1 = r2 instanceof androidx.room.compiler.codegen.kotlin.KotlinTypeSpec$Builder;

        if $z1 != 0 goto label4;

        r18 = "Check failed.";

        $r10 = new java.lang.IllegalStateException;

        $r11 = virtualinvoke r18.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label4:
        $r6 = (androidx.room.compiler.codegen.kotlin.KotlinTypeSpec$Builder) r2;

        $r7 = virtualinvoke $r6.<androidx.room.compiler.codegen.kotlin.KotlinTypeSpec$Builder: com.squareup.kotlinpoet.TypeSpec$Builder getActual$room_compiler_processing()>();

        $r8 = (com.squareup.kotlinpoet.OriginatingElementsHolder$Builder) $r7;

        staticinvoke <androidx.room.compiler.processing.KotlinPoetExtKt: com.squareup.kotlinpoet.OriginatingElementsHolder$Builder addOriginatingElement(com.squareup.kotlinpoet.OriginatingElementsHolder$Builder,androidx.room.compiler.processing.XElement)>($r8, r1);

     label5:
        return r2;
    }

