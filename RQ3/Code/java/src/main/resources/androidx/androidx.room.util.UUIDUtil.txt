androidx.room.util.UUIDUtil
    public static final java.util.UUID convertByteToUUID(byte[])
    {
        byte[] r0;
        java.nio.ByteBuffer r1;
        long l0, l1;
        java.util.UUID $r2;

        r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "bytes");

        r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r0);

        l0 = virtualinvoke r1.<java.nio.ByteBuffer: long getLong()>();

        l1 = virtualinvoke r1.<java.nio.ByteBuffer: long getLong()>();

        $r2 = new java.util.UUID;

        specialinvoke $r2.<java.util.UUID: void <init>(long,long)>(l0, l1);

        return $r2;
    }

    public static final byte[] convertUUIDToByte(java.util.UUID)
    {
        java.util.UUID r0;
        byte[] r1, $r5;
        java.nio.ByteBuffer r2;
        long $l0, $l1;

        r0 := @parameter0: java.util.UUID;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "uuid");

        r1 = newarray (byte)[16];

        r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r1);

        $l0 = virtualinvoke r0.<java.util.UUID: long getMostSignificantBits()>();

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putLong(long)>($l0);

        $l1 = virtualinvoke r0.<java.util.UUID: long getLeastSignificantBits()>();

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putLong(long)>($l1);

        $r5 = virtualinvoke r2.<java.nio.ByteBuffer: byte[] array()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "buffer.array()");

        return $r5;
    }

