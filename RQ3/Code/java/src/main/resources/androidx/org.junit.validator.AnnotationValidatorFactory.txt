org.junit.validator.AnnotationValidatorFactory
<org.junit.validator.AnnotationValidatorFactory: java.util.concurrent.ConcurrentHashMap VALIDATORS_FOR_ANNOTATION_TYPES>
    static void <clinit>()
    {
        java.util.concurrent.ConcurrentHashMap $r0;

        $r0 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r0.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        <org.junit.validator.AnnotationValidatorFactory: java.util.concurrent.ConcurrentHashMap VALIDATORS_FOR_ANNOTATION_TYPES> = $r0;

        return;
    }

    public void <init>()
    {
        org.junit.validator.AnnotationValidatorFactory $r0;

        $r0 := @this: org.junit.validator.AnnotationValidatorFactory;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.junit.validator.AnnotationValidator createAnnotationValidator(org.junit.validator.ValidateWith)
    {
        org.junit.validator.AnnotationValidatorFactory $r0;
        org.junit.validator.ValidateWith $r1;
        java.lang.String $r2, $r8;
        java.util.concurrent.ConcurrentHashMap $r3;
        java.lang.Object $r4;
        org.junit.validator.AnnotationValidator $r5;
        java.lang.Class $r6;
        java.lang.IllegalArgumentException $r7, r11;
        int $i0;
        java.lang.Throwable $r9;
        java.lang.RuntimeException $r10, r12;

        $r0 := @this: org.junit.validator.AnnotationValidatorFactory;

        $r1 := @parameter0: org.junit.validator.ValidateWith;

        $r3 = <org.junit.validator.AnnotationValidatorFactory: java.util.concurrent.ConcurrentHashMap VALIDATORS_FOR_ANNOTATION_TYPES>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (org.junit.validator.AnnotationValidator) $r4;

        if $r5 == null goto label01;

        return $r5;

     label01:
        $r6 = interfaceinvoke $r1.<org.junit.validator.ValidateWith: java.lang.Class value()>();

        if $r6 != null goto label04;

        r11 = new java.lang.IllegalArgumentException;

        $r7 = r11;

        $r2 = "Can\'t create validator, value is null in annotation ";

        $r6 = interfaceinvoke $r1.<org.junit.validator.ValidateWith: java.lang.Class annotationType()>();

        $r8 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r8);

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i0 == 0 goto label03;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String concat(java.lang.String)>($r8);

     label02:
        specialinvoke r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r7;

     label03:
        $r8 = new java.lang.String;

        $r2 = $r8;

        specialinvoke $r8.<java.lang.String: void <init>(java.lang.String)>("Can\'t create validator, value is null in annotation ");

        goto label02;

     label04:
        $r4 = virtualinvoke $r6.<java.lang.Class: java.lang.Object newInstance()>();

     label05:
        $r5 = (org.junit.validator.AnnotationValidator) $r4;

        $r3 = <org.junit.validator.AnnotationValidatorFactory: java.util.concurrent.ConcurrentHashMap VALIDATORS_FOR_ANNOTATION_TYPES>;

     label06:
        virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>($r1, $r5);

     label07:
        $r3 = <org.junit.validator.AnnotationValidatorFactory: java.util.concurrent.ConcurrentHashMap VALIDATORS_FOR_ANNOTATION_TYPES>;

     label08:
        $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r1);

     label09:
        $r5 = (org.junit.validator.AnnotationValidator) $r4;

        return $r5;

     label10:
        $r9 := @caughtexception;

        r12 = new java.lang.RuntimeException;

        $r10 = r12;

        $r2 = "Exception received when creating AnnotationValidator class ";

        $r8 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r8);

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i0 == 0 goto label12;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String concat(java.lang.String)>($r8);

     label11:
        specialinvoke r12.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r2, $r9);

        $r9 = (java.lang.Throwable) $r10;

        throw $r9;

     label12:
        $r8 = new java.lang.String;

        $r2 = $r8;

        specialinvoke $r8.<java.lang.String: void <init>(java.lang.String)>("Exception received when creating AnnotationValidator class ");

        goto label11;

        catch java.lang.Exception from label04 to label05 with label10;
        catch java.lang.Exception from label06 to label07 with label10;
        catch java.lang.Exception from label08 to label09 with label10;
    }

