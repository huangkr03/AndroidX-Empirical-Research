androidx.work.impl.utils.WakeLocksHolder
<androidx.work.impl.utils.WakeLocksHolder: androidx.work.impl.utils.WakeLocksHolder INSTANCE>
<androidx.work.impl.utils.WakeLocksHolder: java.util.WeakHashMap wakeLocks>
    private void <init>()
    {
        androidx.work.impl.utils.WakeLocksHolder r0;

        r0 := @this: androidx.work.impl.utils.WakeLocksHolder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.util.WeakHashMap getWakeLocks()
    {
        androidx.work.impl.utils.WakeLocksHolder r0;
        java.util.WeakHashMap $r1;

        r0 := @this: androidx.work.impl.utils.WakeLocksHolder;

        $r1 = <androidx.work.impl.utils.WakeLocksHolder: java.util.WeakHashMap wakeLocks>;

        return $r1;
    }

    static void <clinit>()
    {
        androidx.work.impl.utils.WakeLocksHolder $r0;
        java.util.WeakHashMap $r1;

        $r0 = new androidx.work.impl.utils.WakeLocksHolder;

        specialinvoke $r0.<androidx.work.impl.utils.WakeLocksHolder: void <init>()>();

        <androidx.work.impl.utils.WakeLocksHolder: androidx.work.impl.utils.WakeLocksHolder INSTANCE> = $r0;

        $r1 = new java.util.WeakHashMap;

        specialinvoke $r1.<java.util.WeakHashMap: void <init>()>();

        <androidx.work.impl.utils.WakeLocksHolder: java.util.WeakHashMap wakeLocks> = $r1;

        return;
    }

