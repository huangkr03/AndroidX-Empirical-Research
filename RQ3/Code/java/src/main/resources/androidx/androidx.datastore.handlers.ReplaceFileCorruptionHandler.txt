androidx.datastore.handlers.ReplaceFileCorruptionHandler
<androidx.datastore.handlers.ReplaceFileCorruptionHandler: kotlin.jvm.functions.Function1 produceNewData>
    public java.lang.Object handleCorruption(androidx.datastore.CorruptionException, kotlin.coroutines.Continuation) throws java.io.IOException
    {
        androidx.datastore.handlers.ReplaceFileCorruptionHandler r0;
        androidx.datastore.CorruptionException r1;
        kotlin.coroutines.Continuation $r2;
        kotlin.jvm.functions.Function1 $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.datastore.handlers.ReplaceFileCorruptionHandler;

        r1 := @parameter0: androidx.datastore.CorruptionException;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = r0.<androidx.datastore.handlers.ReplaceFileCorruptionHandler: kotlin.jvm.functions.Function1 produceNewData>;

        $r4 = interfaceinvoke $r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        return $r4;
    }

    public void <init>(kotlin.jvm.functions.Function1)
    {
        androidx.datastore.handlers.ReplaceFileCorruptionHandler r0;
        kotlin.jvm.functions.Function1 r1;

        r0 := @this: androidx.datastore.handlers.ReplaceFileCorruptionHandler;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "produceNewData");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.datastore.handlers.ReplaceFileCorruptionHandler: kotlin.jvm.functions.Function1 produceNewData> = r1;

        return;
    }

