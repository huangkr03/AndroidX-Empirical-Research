androidx.compose.foundation.lazy.layout.LazySaveableStateHolder
<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion Companion>
<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder: androidx.compose.runtime.saveable.SaveableStateRegistry wrappedRegistry>
<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder: androidx.compose.runtime.MutableState wrappedHolder$delegate>
<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder: java.util.Set previouslyComposedKeys>
    public void <init>(androidx.compose.runtime.saveable.SaveableStateRegistry)
    {
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder r0;
        androidx.compose.runtime.saveable.SaveableStateRegistry r1;
        androidx.compose.runtime.MutableState $r2;
        java.util.LinkedHashSet $r3;
        java.util.Set $r4;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder;

        r1 := @parameter0: androidx.compose.runtime.saveable.SaveableStateRegistry;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "wrappedRegistry");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder: androidx.compose.runtime.saveable.SaveableStateRegistry wrappedRegistry> = r1;

        $r2 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>(null, null, 2, null);

        r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder: androidx.compose.runtime.MutableState wrappedHolder$delegate> = $r2;

        $r3 = new java.util.LinkedHashSet;

        specialinvoke $r3.<java.util.LinkedHashSet: void <init>()>();

        $r4 = (java.util.Set) $r3;

        r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder: java.util.Set previouslyComposedKeys> = $r4;

        return;
    }

    public boolean canBeSaved(java.lang.Object)
    {
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder r0;
        java.lang.Object r1;
        androidx.compose.runtime.saveable.SaveableStateRegistry $r2;
        boolean $z0;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder: androidx.compose.runtime.saveable.SaveableStateRegistry wrappedRegistry>;

        $z0 = interfaceinvoke $r2.<androidx.compose.runtime.saveable.SaveableStateRegistry: boolean canBeSaved(java.lang.Object)>(r1);

        return $z0;
    }

    public java.lang.Object consumeRestored(java.lang.String)
    {
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder r0;
        java.lang.String r1;
        androidx.compose.runtime.saveable.SaveableStateRegistry $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        $r2 = r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder: androidx.compose.runtime.saveable.SaveableStateRegistry wrappedRegistry>;

        $r3 = interfaceinvoke $r2.<androidx.compose.runtime.saveable.SaveableStateRegistry: java.lang.Object consumeRestored(java.lang.String)>(r1);

        return $r3;
    }

    public androidx.compose.runtime.saveable.SaveableStateRegistry$Entry registerProvider(java.lang.String, kotlin.jvm.functions.Function0)
    {
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder r0;
        java.lang.String r1;
        kotlin.jvm.functions.Function0 r2;
        androidx.compose.runtime.saveable.SaveableStateRegistry $r3;
        androidx.compose.runtime.saveable.SaveableStateRegistry$Entry $r4;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "valueProvider");

        $r3 = r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder: androidx.compose.runtime.saveable.SaveableStateRegistry wrappedRegistry>;

        $r4 = interfaceinvoke $r3.<androidx.compose.runtime.saveable.SaveableStateRegistry: androidx.compose.runtime.saveable.SaveableStateRegistry$Entry registerProvider(java.lang.String,kotlin.jvm.functions.Function0)>(r1, r2);

        return $r4;
    }

    public void <init>(androidx.compose.runtime.saveable.SaveableStateRegistry, java.util.Map)
    {
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder r0;
        androidx.compose.runtime.saveable.SaveableStateRegistry r1, $r5;
        java.util.Map r2;
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$1 $r3;
        kotlin.jvm.functions.Function1 $r4;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder;

        r1 := @parameter0: androidx.compose.runtime.saveable.SaveableStateRegistry;

        r2 := @parameter1: java.util.Map;

        $r3 = new androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$1;

        specialinvoke $r3.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$1: void <init>(androidx.compose.runtime.saveable.SaveableStateRegistry)>(r1);

        $r4 = (kotlin.jvm.functions.Function1) $r3;

        $r5 = staticinvoke <androidx.compose.runtime.saveable.SaveableStateRegistryKt: androidx.compose.runtime.saveable.SaveableStateRegistry SaveableStateRegistry(java.util.Map,kotlin.jvm.functions.Function1)>(r2, $r4);

        specialinvoke r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder: void <init>(androidx.compose.runtime.saveable.SaveableStateRegistry)>($r5);

        return;
    }

    public final androidx.compose.runtime.saveable.SaveableStateHolder getWrappedHolder()
    {
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        androidx.compose.runtime.saveable.SaveableStateHolder $r4;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder;

        $r2 = r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder: androidx.compose.runtime.MutableState wrappedHolder$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (androidx.compose.runtime.saveable.SaveableStateHolder) $r3;

        return $r4;
    }

    public final void setWrappedHolder(androidx.compose.runtime.saveable.SaveableStateHolder)
    {
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder r0;
        androidx.compose.runtime.saveable.SaveableStateHolder r1;
        androidx.compose.runtime.MutableState $r2;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder;

        r1 := @parameter0: androidx.compose.runtime.saveable.SaveableStateHolder;

        $r2 = r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder: androidx.compose.runtime.MutableState wrappedHolder$delegate>;

        interfaceinvoke $r2.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r1);

        return;
    }

    public java.util.Map performSave()
    {
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder r0;
        androidx.compose.runtime.saveable.SaveableStateHolder r1;
        java.lang.Iterable $r2;
        java.util.Iterator r3;
        java.lang.Object r4, r5;
        androidx.compose.runtime.saveable.SaveableStateRegistry $r6;
        java.util.Map $r7;
        java.util.Set $r8;
        boolean $z2;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder;

        r1 = virtualinvoke r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder: androidx.compose.runtime.saveable.SaveableStateHolder getWrappedHolder()>();

        if r1 == null goto label2;

        $r8 = r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder: java.util.Set previouslyComposedKeys>;

        $r2 = (java.lang.Iterable) $r8;

        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = r4;

        interfaceinvoke r1.<androidx.compose.runtime.saveable.SaveableStateHolder: void removeState(java.lang.Object)>(r5);

        goto label1;

     label2:
        $r6 = r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder: androidx.compose.runtime.saveable.SaveableStateRegistry wrappedRegistry>;

        $r7 = interfaceinvoke $r6.<androidx.compose.runtime.saveable.SaveableStateRegistry: java.util.Map performSave()>();

        return $r7;
    }

    public void SaveableStateProvider(java.lang.Object, kotlin.jvm.functions.Function2, androidx.compose.runtime.Composer, int)
    {
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder r0;
        java.lang.Object r1;
        kotlin.jvm.functions.Function2 r2, $r9;
        int $i0, $i2, $i3;
        java.lang.String r3, $r11;
        boolean $z0, $z1;
        androidx.compose.runtime.saveable.SaveableStateHolder $r4;
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$1 $r5;
        kotlin.jvm.functions.Function1 $r6;
        androidx.compose.runtime.ScopeUpdateScope $r7;
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$2 $r8;
        java.lang.IllegalArgumentException $r10;
        androidx.compose.runtime.Composer $r12, $r13;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.jvm.functions.Function2;

        $r12 := @parameter2: androidx.compose.runtime.Composer;

        $i0 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "content");

        $r13 = interfaceinvoke $r12.<androidx.compose.runtime.Composer: androidx.compose.runtime.Composer startRestartGroup(int)>(-697180401);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r13, "C(SaveableStateProvider)P(1)83@3415L35,84@3459L159:LazySaveableStateHolder.kt#wow0x6");

        $z0 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z0 == 0 goto label1;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(-697180401, $i0, -1, "androidx.compose.foundation.lazy.layout.LazySaveableStateHolder.SaveableStateProvider (LazySaveableStateHolder.kt:82)");

     label1:
        $r4 = virtualinvoke r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder: androidx.compose.runtime.saveable.SaveableStateHolder getWrappedHolder()>();

        if $r4 != null goto label2;

        r3 = "Required value was null.";

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label2:
        $i2 = 112 & $i0;

        $i3 = 520 | $i2;

        interfaceinvoke $r4.<androidx.compose.runtime.saveable.SaveableStateHolder: void SaveableStateProvider(java.lang.Object,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int)>(r1, r2, $r13, $i3);

        $r5 = new androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$1;

        specialinvoke $r5.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$1: void <init>(androidx.compose.foundation.lazy.layout.LazySaveableStateHolder,java.lang.Object)>(r0, r1);

        $r6 = (kotlin.jvm.functions.Function1) $r5;

        staticinvoke <androidx.compose.runtime.EffectsKt: void DisposableEffect(java.lang.Object,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int)>(r1, $r6, $r13, 8);

        $z1 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z1 == 0 goto label3;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

     label3:
        $r7 = interfaceinvoke $r13.<androidx.compose.runtime.Composer: androidx.compose.runtime.ScopeUpdateScope endRestartGroup()>();

        if $r7 != null goto label4;

        goto label5;

     label4:
        $r8 = new androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$2;

        specialinvoke $r8.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$2: void <init>(androidx.compose.foundation.lazy.layout.LazySaveableStateHolder,java.lang.Object,kotlin.jvm.functions.Function2,int)>(r0, r1, r2, $i0);

        $r9 = (kotlin.jvm.functions.Function2) $r8;

        interfaceinvoke $r7.<androidx.compose.runtime.ScopeUpdateScope: void updateScope(kotlin.jvm.functions.Function2)>($r9);

     label5:
        return;
    }

    public void removeState(java.lang.Object)
    {
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder r0;
        java.lang.Object r1;
        java.lang.String r2, $r5;
        androidx.compose.runtime.saveable.SaveableStateHolder $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        $r3 = virtualinvoke r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder: androidx.compose.runtime.saveable.SaveableStateHolder getWrappedHolder()>();

        if $r3 != null goto label1;

        r2 = "Required value was null.";

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label1:
        interfaceinvoke $r3.<androidx.compose.runtime.saveable.SaveableStateHolder: void removeState(java.lang.Object)>(r1);

        return;
    }

    public static final java.util.Set access$getPreviouslyComposedKeys$p(androidx.compose.foundation.lazy.layout.LazySaveableStateHolder)
    {
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder $r0;
        java.util.Set $r1;

        $r0 := @parameter0: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder;

        $r1 = $r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder: java.util.Set previouslyComposedKeys>;

        return $r1;
    }

    static void <clinit>()
    {
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion $r0;

        $r0 = new androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion;

        specialinvoke $r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.compose.foundation.lazy.layout.LazySaveableStateHolder: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion Companion> = $r0;

        return;
    }

androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$1
<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$1: androidx.compose.runtime.saveable.SaveableStateRegistry $parentRegistry>
    void <init>(androidx.compose.runtime.saveable.SaveableStateRegistry)
    {
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$1 r0;
        androidx.compose.runtime.saveable.SaveableStateRegistry $r1;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$1;

        $r1 := @parameter0: androidx.compose.runtime.saveable.SaveableStateRegistry;

        r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$1: androidx.compose.runtime.saveable.SaveableStateRegistry $parentRegistry> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Boolean invoke(java.lang.Object)
    {
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$1 r0;
        java.lang.Object r1;
        androidx.compose.runtime.saveable.SaveableStateRegistry $r2;
        java.lang.Boolean $r3;
        boolean $z0;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$1;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$1: androidx.compose.runtime.saveable.SaveableStateRegistry $parentRegistry>;

        if $r2 == null goto label1;

        $z0 = interfaceinvoke $r2.<androidx.compose.runtime.saveable.SaveableStateRegistry: boolean canBeSaved(java.lang.Object)>(r1);

        goto label2;

     label1:
        $z0 = 1;

     label2:
        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r3;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$1 r0;
        java.lang.Object r1;
        java.lang.Boolean $r2;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$1: java.lang.Boolean invoke(java.lang.Object)>(r1);

        return $r2;
    }

androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion$saver$1
<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion$saver$1: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion$saver$1 INSTANCE>
    void <init>()
    {
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion$saver$1 r0;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion$saver$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public final java.util.Map invoke(androidx.compose.runtime.saveable.SaverScope, androidx.compose.foundation.lazy.layout.LazySaveableStateHolder)
    {
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion$saver$1 r0;
        androidx.compose.runtime.saveable.SaverScope $r1;
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder r2;
        java.util.Map r3, $r4;
        boolean $z1;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion$saver$1;

        $r1 := @parameter0: androidx.compose.runtime.saveable.SaverScope;

        r2 := @parameter1: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$Saver");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "it");

        r3 = virtualinvoke r2.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder: java.util.Map performSave()>();

        $z1 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r4 = r3;

     label2:
        return $r4;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion$saver$1 r0;
        java.lang.Object r1, r2;
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder $r3;
        androidx.compose.runtime.saveable.SaverScope $r4;
        java.util.Map $r5;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion$saver$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.compose.runtime.saveable.SaverScope) r1;

        $r3 = (androidx.compose.foundation.lazy.layout.LazySaveableStateHolder) r2;

        $r5 = virtualinvoke r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion$saver$1: java.util.Map invoke(androidx.compose.runtime.saveable.SaverScope,androidx.compose.foundation.lazy.layout.LazySaveableStateHolder)>($r4, $r3);

        return $r5;
    }

    static void <clinit>()
    {
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion$saver$1 $r0;

        $r0 = new androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion$saver$1;

        specialinvoke $r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion$saver$1: void <init>()>();

        <androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion$saver$1: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion$saver$1 INSTANCE> = $r0;

        return;
    }

androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion$saver$2
<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion$saver$2: androidx.compose.runtime.saveable.SaveableStateRegistry $parentRegistry>
    void <init>(androidx.compose.runtime.saveable.SaveableStateRegistry)
    {
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion$saver$2 r0;
        androidx.compose.runtime.saveable.SaveableStateRegistry $r1;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion$saver$2;

        $r1 := @parameter0: androidx.compose.runtime.saveable.SaveableStateRegistry;

        r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion$saver$2: androidx.compose.runtime.saveable.SaveableStateRegistry $parentRegistry> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final androidx.compose.foundation.lazy.layout.LazySaveableStateHolder invoke(java.util.Map)
    {
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion$saver$2 r0;
        java.util.Map r1;
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder $r2;
        androidx.compose.runtime.saveable.SaveableStateRegistry $r3;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion$saver$2;

        r1 := @parameter0: java.util.Map;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "restored");

        $r2 = new androidx.compose.foundation.lazy.layout.LazySaveableStateHolder;

        $r3 = r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion$saver$2: androidx.compose.runtime.saveable.SaveableStateRegistry $parentRegistry>;

        specialinvoke $r2.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder: void <init>(androidx.compose.runtime.saveable.SaveableStateRegistry,java.util.Map)>($r3, r1);

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion$saver$2 r0;
        java.lang.Object r1;
        java.util.Map $r2;
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder $r3;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion$saver$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.Map) r1;

        $r3 = virtualinvoke r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion$saver$2: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder invoke(java.util.Map)>($r2);

        return $r3;
    }

androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion
    private void <init>()
    {
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion r0;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.compose.runtime.saveable.Saver saver(androidx.compose.runtime.saveable.SaveableStateRegistry)
    {
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion r0;
        androidx.compose.runtime.saveable.SaveableStateRegistry r1;
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion$saver$1 $r2;
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion$saver$2 $r3;
        kotlin.jvm.functions.Function2 $r4;
        kotlin.jvm.functions.Function1 $r5;
        androidx.compose.runtime.saveable.Saver $r6;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion;

        r1 := @parameter0: androidx.compose.runtime.saveable.SaveableStateRegistry;

        $r2 = <androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion$saver$1: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion$saver$1 INSTANCE>;

        $r4 = (kotlin.jvm.functions.Function2) $r2;

        $r3 = new androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion$saver$2;

        specialinvoke $r3.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion$saver$2: void <init>(androidx.compose.runtime.saveable.SaveableStateRegistry)>(r1);

        $r5 = (kotlin.jvm.functions.Function1) $r3;

        $r6 = staticinvoke <androidx.compose.runtime.saveable.SaverKt: androidx.compose.runtime.saveable.Saver Saver(kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1)>($r4, $r5);

        return $r6;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$Companion: void <init>()>();

        return;
    }

androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$1$invoke$$inlined$onDispose$1
<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$1$invoke$$inlined$onDispose$1: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder this$0>
<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$1$invoke$$inlined$onDispose$1: java.lang.Object $key$inlined>
    public void <init>(androidx.compose.foundation.lazy.layout.LazySaveableStateHolder, java.lang.Object)
    {
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$1$invoke$$inlined$onDispose$1 r0;
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder r1;
        java.lang.Object r2;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$1$invoke$$inlined$onDispose$1;

        r1 := @parameter0: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder;

        r2 := @parameter1: java.lang.Object;

        r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$1$invoke$$inlined$onDispose$1: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder this$0> = r1;

        r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$1$invoke$$inlined$onDispose$1: java.lang.Object $key$inlined> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void dispose()
    {
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$1$invoke$$inlined$onDispose$1 r0;
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder $r1;
        java.util.Set $r2;
        java.lang.Object $r3;
        java.util.Collection $r4;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$1$invoke$$inlined$onDispose$1;

        $r1 = r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$1$invoke$$inlined$onDispose$1: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder this$0>;

        $r2 = staticinvoke <androidx.compose.foundation.lazy.layout.LazySaveableStateHolder: java.util.Set access$getPreviouslyComposedKeys$p(androidx.compose.foundation.lazy.layout.LazySaveableStateHolder)>($r1);

        $r4 = (java.util.Collection) $r2;

        $r3 = r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$1$invoke$$inlined$onDispose$1: java.lang.Object $key$inlined>;

        interfaceinvoke $r4.<java.util.Collection: boolean add(java.lang.Object)>($r3);

        return;
    }

androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$1
<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$1: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder this$0>
<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$1: java.lang.Object $key>
    void <init>(androidx.compose.foundation.lazy.layout.LazySaveableStateHolder, java.lang.Object)
    {
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$1 r0;
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$1;

        $r1 := @parameter0: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder;

        $r2 := @parameter1: java.lang.Object;

        r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$1: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder this$0> = $r1;

        r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$1: java.lang.Object $key> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final androidx.compose.runtime.DisposableEffectResult invoke(androidx.compose.runtime.DisposableEffectScope)
    {
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$1 r0;
        androidx.compose.runtime.DisposableEffectScope $r1, r2;
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder r3, $r5;
        java.lang.Object r4, $r7;
        java.util.Set $r6;
        java.util.Collection $r8;
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$1$invoke$$inlined$onDispose$1 $r9;
        androidx.compose.runtime.DisposableEffectResult $r10;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$1;

        $r1 := @parameter0: androidx.compose.runtime.DisposableEffectScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$DisposableEffect");

        $r5 = r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$1: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder this$0>;

        $r6 = staticinvoke <androidx.compose.foundation.lazy.layout.LazySaveableStateHolder: java.util.Set access$getPreviouslyComposedKeys$p(androidx.compose.foundation.lazy.layout.LazySaveableStateHolder)>($r5);

        $r8 = (java.util.Collection) $r6;

        $r7 = r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$1: java.lang.Object $key>;

        interfaceinvoke $r8.<java.util.Collection: boolean remove(java.lang.Object)>($r7);

        r2 = $r1;

        r3 = r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$1: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder this$0>;

        r4 = r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$1: java.lang.Object $key>;

        $r9 = new androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$1$invoke$$inlined$onDispose$1;

        specialinvoke $r9.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$1$invoke$$inlined$onDispose$1: void <init>(androidx.compose.foundation.lazy.layout.LazySaveableStateHolder,java.lang.Object)>(r3, r4);

        $r10 = (androidx.compose.runtime.DisposableEffectResult) $r9;

        return $r10;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$1 r0;
        java.lang.Object r1;
        androidx.compose.runtime.DisposableEffectScope $r2;
        androidx.compose.runtime.DisposableEffectResult $r3;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.runtime.DisposableEffectScope) r1;

        $r3 = virtualinvoke r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$1: androidx.compose.runtime.DisposableEffectResult invoke(androidx.compose.runtime.DisposableEffectScope)>($r2);

        return $r3;
    }

androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$2
<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$2: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder $tmp0_rcvr>
<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$2: java.lang.Object $key>
<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$2: kotlin.jvm.functions.Function2 $content>
<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$2: int $$changed>
    void <init>(androidx.compose.foundation.lazy.layout.LazySaveableStateHolder, java.lang.Object, kotlin.jvm.functions.Function2, int)
    {
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$2 r0;
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder $r1;
        java.lang.Object $r2;
        kotlin.jvm.functions.Function2 $r3;
        int $i0;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$2;

        $r1 := @parameter0: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: kotlin.jvm.functions.Function2;

        $i0 := @parameter3: int;

        r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$2: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder $tmp0_rcvr> = $r1;

        r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$2: java.lang.Object $key> = $r2;

        r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$2: kotlin.jvm.functions.Function2 $content> = $r3;

        r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$2: int $$changed> = $i0;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public final void invoke(androidx.compose.runtime.Composer, int)
    {
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$2 r0;
        androidx.compose.runtime.Composer $r1;
        int $i0, $i1, $i2;
        kotlin.jvm.functions.Function2 $r2;
        java.lang.Object $r3;
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder $r4;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$2;

        $r1 := @parameter0: androidx.compose.runtime.Composer;

        $i0 := @parameter1: int;

        $r4 = r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$2: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder $tmp0_rcvr>;

        $r3 = r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$2: java.lang.Object $key>;

        $r2 = r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$2: kotlin.jvm.functions.Function2 $content>;

        $i1 = r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$2: int $$changed>;

        $i2 = $i1 | 1;

        virtualinvoke $r4.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder: void SaveableStateProvider(java.lang.Object,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int)>($r3, $r2, $r1, $i2);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$2 r0;
        java.lang.Object r1, r2;
        java.lang.Number $r3;
        androidx.compose.runtime.Composer $r4;
        int $i0;
        kotlin.Unit $r5;

        r0 := @this: androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.compose.runtime.Composer) r1;

        $r3 = (java.lang.Number) r2;

        $i0 = virtualinvoke $r3.<java.lang.Number: int intValue()>();

        virtualinvoke r0.<androidx.compose.foundation.lazy.layout.LazySaveableStateHolder$SaveableStateProvider$2: void invoke(androidx.compose.runtime.Composer,int)>($r4, $i0);

        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r5;
    }

