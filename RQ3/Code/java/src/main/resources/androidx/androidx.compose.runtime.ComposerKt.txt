androidx.compose.runtime.ComposerKt
<androidx.compose.runtime.ComposerKt: androidx.compose.runtime.CompositionTracer compositionTracer>
<androidx.compose.runtime.ComposerKt: kotlin.jvm.functions.Function3 removeCurrentGroupInstance>
<androidx.compose.runtime.ComposerKt: kotlin.jvm.functions.Function3 skipToGroupEndInstance>
<androidx.compose.runtime.ComposerKt: kotlin.jvm.functions.Function3 endGroupInstance>
<androidx.compose.runtime.ComposerKt: kotlin.jvm.functions.Function3 startRootGroup>
<androidx.compose.runtime.ComposerKt: kotlin.jvm.functions.Function3 resetSlotsInstance>
<androidx.compose.runtime.ComposerKt: int rootKey>
<androidx.compose.runtime.ComposerKt: int nodeKey>
<androidx.compose.runtime.ComposerKt: int nodeKeyReplace>
<androidx.compose.runtime.ComposerKt: int defaultsKey>
<androidx.compose.runtime.ComposerKt: int invocationKey>
<androidx.compose.runtime.ComposerKt: java.lang.Object invocation>
<androidx.compose.runtime.ComposerKt: int providerKey>
<androidx.compose.runtime.ComposerKt: java.lang.Object provider>
<androidx.compose.runtime.ComposerKt: int compositionLocalMapKey>
<androidx.compose.runtime.ComposerKt: java.lang.Object compositionLocalMap>
<androidx.compose.runtime.ComposerKt: int providerValuesKey>
<androidx.compose.runtime.ComposerKt: java.lang.Object providerValues>
<androidx.compose.runtime.ComposerKt: int providerMapsKey>
<androidx.compose.runtime.ComposerKt: java.lang.Object providerMaps>
<androidx.compose.runtime.ComposerKt: int referenceKey>
<androidx.compose.runtime.ComposerKt: java.lang.Object reference>
<androidx.compose.runtime.ComposerKt: int reuseKey>
<androidx.compose.runtime.ComposerKt: int invalidGroupLocation>
    public static final androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap mutate(androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap, kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap $r0, $r4;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap$Builder r2;

        $r0 := @parameter0: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "mutator");

        r2 = interfaceinvoke $r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap$Builder builder()>();

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r2);

        $r4 = interfaceinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap$Builder: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap build()>();

        return $r4;
    }

    public static final boolean contains(androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap, androidx.compose.runtime.CompositionLocal)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap $r0;
        androidx.compose.runtime.CompositionLocal r1;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap;

        r1 := @parameter1: androidx.compose.runtime.CompositionLocal;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        $z0 = interfaceinvoke $r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public static final java.lang.Object getValueOf(androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap, androidx.compose.runtime.CompositionLocal)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap $r0;
        androidx.compose.runtime.CompositionLocal r1;
        java.lang.Object $r2, $r4;
        androidx.compose.runtime.State $r3;

        $r0 := @parameter0: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap;

        r1 := @parameter1: androidx.compose.runtime.CompositionLocal;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        $r2 = interfaceinvoke $r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap: java.lang.Object get(java.lang.Object)>(r1);

        $r3 = (androidx.compose.runtime.State) $r2;

        if $r3 == null goto label1;

        $r4 = interfaceinvoke $r3.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        goto label2;

     label1:
        $r4 = null;

     label2:
        return $r4;
    }

    private static final androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap compositionLocalMapOf(androidx.compose.runtime.ProvidedValue[], androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap, androidx.compose.runtime.Composer, int)
    {
        androidx.compose.runtime.ProvidedValue[] r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap r1, r3, r4;
        androidx.compose.runtime.Composer $r2;
        int $i0, i1, i2;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap$Builder r5;
        java.util.Map r6, r8;
        androidx.compose.runtime.ProvidedValue r7;
        androidx.compose.runtime.CompositionLocal r9, $r11, $r12, $r15;
        androidx.compose.runtime.State r10;
        boolean $z2, $z3, $z4, $z5;
        java.lang.Object $r13;

        r0 := @parameter0: androidx.compose.runtime.ProvidedValue[];

        r1 := @parameter1: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap;

        $r2 := @parameter2: androidx.compose.runtime.Composer;

        $i0 := @parameter3: int;

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(721128344);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r2, "C(compositionLocalMapOf)P(1):Composer.kt#9igjgp");

        $z2 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z2 == 0 goto label1;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(721128344, $i0, -1, "androidx.compose.runtime.compositionLocalMapOf (Composer.kt:307)");

     label1:
        r3 = staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.ExtensionsKt: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap persistentHashMapOf()>();

        r5 = interfaceinvoke r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap$Builder builder()>();

        r6 = (java.util.Map) r5;

        i2 = 0;

        i1 = lengthof r0;

     label2:
        if i2 >= i1 goto label5;

        r7 = r0[i2];

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(680852989);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r2, "*317@11596L24");

        $z4 = virtualinvoke r7.<androidx.compose.runtime.ProvidedValue: boolean getCanOverride()>();

        if $z4 != 0 goto label3;

        $r15 = virtualinvoke r7.<androidx.compose.runtime.ProvidedValue: androidx.compose.runtime.CompositionLocal getCompositionLocal()>();

        $z5 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean contains(androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap,androidx.compose.runtime.CompositionLocal)>(r1, $r15);

        if $z5 != 0 goto label4;

     label3:
        r8 = r6;

        $r11 = virtualinvoke r7.<androidx.compose.runtime.ProvidedValue: androidx.compose.runtime.CompositionLocal getCompositionLocal()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r11, "null cannot be cast to non-null type androidx.compose.runtime.CompositionLocal<kotlin.Any?>");

        r9 = $r11;

        $r12 = virtualinvoke r7.<androidx.compose.runtime.ProvidedValue: androidx.compose.runtime.CompositionLocal getCompositionLocal()>();

        $r13 = virtualinvoke r7.<androidx.compose.runtime.ProvidedValue: java.lang.Object getValue()>();

        r10 = virtualinvoke $r12.<androidx.compose.runtime.CompositionLocal: androidx.compose.runtime.State provided$runtime_release(java.lang.Object,androidx.compose.runtime.Composer,int)>($r13, $r2, 72);

        interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r10);

     label4:
        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        i2 = i2 + 1;

        goto label2;

     label5:
        r4 = interfaceinvoke r5.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap$Builder: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap build()>();

        $z3 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z3 == 0 goto label6;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

     label6:
        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        return r4;
    }

    public static final java.lang.Object cache(androidx.compose.runtime.Composer, boolean, kotlin.jvm.functions.Function0)
    {
        androidx.compose.runtime.Composer $r0;
        boolean z0;
        kotlin.jvm.functions.Function0 r1;
        java.lang.Object r2, r3, $r5, $r6;
        androidx.compose.runtime.Composer$Companion $r4;

        $r0 := @parameter0: androidx.compose.runtime.Composer;

        z0 := @parameter1: boolean;

        r1 := @parameter2: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        r2 = interfaceinvoke $r0.<androidx.compose.runtime.Composer: java.lang.Object rememberedValue()>();

        if z0 != 0 goto label1;

        $r4 = <androidx.compose.runtime.Composer: androidx.compose.runtime.Composer$Companion Companion>;

        $r5 = virtualinvoke $r4.<androidx.compose.runtime.Composer$Companion: java.lang.Object getEmpty()>();

        if r2 != $r5 goto label2;

     label1:
        r3 = interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        interfaceinvoke $r0.<androidx.compose.runtime.Composer: void updateRememberedValue(java.lang.Object)>(r3);

        $r6 = r3;

        goto label3;

     label2:
        $r6 = r2;

     label3:
        return $r6;
    }

    public static final void sourceInformation(androidx.compose.runtime.Composer, java.lang.String)
    {
        androidx.compose.runtime.Composer r0;
        java.lang.String r1;

        r0 := @parameter0: androidx.compose.runtime.Composer;

        r1 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "composer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "sourceInformation");

        interfaceinvoke r0.<androidx.compose.runtime.Composer: void sourceInformation(java.lang.String)>(r1);

        return;
    }

    public static final void sourceInformationMarkerStart(androidx.compose.runtime.Composer, int, java.lang.String)
    {
        androidx.compose.runtime.Composer r0;
        int i0;
        java.lang.String r1;

        r0 := @parameter0: androidx.compose.runtime.Composer;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "composer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "sourceInformation");

        interfaceinvoke r0.<androidx.compose.runtime.Composer: void sourceInformationMarkerStart(int,java.lang.String)>(i0, r1);

        return;
    }

    private static void getCompositionTracer$annotations()
    {
        return;
    }

    public static final boolean isTraceInProgress()
    {
        androidx.compose.runtime.CompositionTracer r0;
        boolean $z1, $z2;

        r0 = <androidx.compose.runtime.ComposerKt: androidx.compose.runtime.CompositionTracer compositionTracer>;

        if r0 == null goto label1;

        $z1 = interfaceinvoke r0.<androidx.compose.runtime.CompositionTracer: boolean isTraceInProgress()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public static final void traceEventStart(int, java.lang.String)
    {
        int i0;
        java.lang.String r0;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "info");

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(i0, -1, -1, r0);

        return;
    }

    public static final void traceEventStart(int, int, int, java.lang.String)
    {
        int i0, i1, i2;
        java.lang.String r0;
        androidx.compose.runtime.CompositionTracer $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r0 := @parameter3: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "info");

        $r1 = <androidx.compose.runtime.ComposerKt: androidx.compose.runtime.CompositionTracer compositionTracer>;

        if $r1 == null goto label1;

        interfaceinvoke $r1.<androidx.compose.runtime.CompositionTracer: void traceEventStart(int,int,int,java.lang.String)>(i0, i1, i2, r0);

        goto label1;

     label1:
        return;
    }

    public static final void traceEventEnd()
    {
        androidx.compose.runtime.CompositionTracer $r0;

        $r0 = <androidx.compose.runtime.ComposerKt: androidx.compose.runtime.CompositionTracer compositionTracer>;

        if $r0 == null goto label1;

        interfaceinvoke $r0.<androidx.compose.runtime.CompositionTracer: void traceEventEnd()>();

        goto label1;

     label1:
        return;
    }

    public static final void sourceInformationMarkerEnd(androidx.compose.runtime.Composer)
    {
        androidx.compose.runtime.Composer r0;

        r0 := @parameter0: androidx.compose.runtime.Composer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "composer");

        interfaceinvoke r0.<androidx.compose.runtime.Composer: void sourceInformationMarkerEnd()>();

        return;
    }

    public static final void removeCurrentGroup(androidx.compose.runtime.SlotWriter, androidx.compose.runtime.RememberManager)
    {
        androidx.compose.runtime.SlotWriter $r0;
        androidx.compose.runtime.RememberManager r1;
        java.util.Iterator r2;
        java.lang.Object r3, r4;
        androidx.compose.runtime.CompositionImpl r5;
        boolean $z1, $z2, $z3;
        androidx.compose.runtime.RecomposeScopeImpl $r6, $r7;
        androidx.compose.runtime.RememberObserver $r8;

        $r0 := @parameter0: androidx.compose.runtime.SlotWriter;

        r1 := @parameter1: androidx.compose.runtime.RememberManager;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "rememberManager");

        r2 = virtualinvoke $r0.<androidx.compose.runtime.SlotWriter: java.util.Iterator groupSlots()>();

     label1:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label3;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = r3;

        $z1 = r4 instanceof androidx.compose.runtime.RememberObserver;

        if $z1 == 0 goto label2;

        $r8 = (androidx.compose.runtime.RememberObserver) r3;

        interfaceinvoke r1.<androidx.compose.runtime.RememberManager: void forgetting(androidx.compose.runtime.RememberObserver)>($r8);

        goto label1;

     label2:
        $z2 = r4 instanceof androidx.compose.runtime.RecomposeScopeImpl;

        if $z2 == 0 goto label1;

        $r6 = (androidx.compose.runtime.RecomposeScopeImpl) r3;

        r5 = virtualinvoke $r6.<androidx.compose.runtime.RecomposeScopeImpl: androidx.compose.runtime.CompositionImpl getComposition()>();

        if r5 == null goto label1;

        virtualinvoke r5.<androidx.compose.runtime.CompositionImpl: void setPendingInvalidScopes$runtime_release(boolean)>(1);

        $r7 = (androidx.compose.runtime.RecomposeScopeImpl) r3;

        virtualinvoke $r7.<androidx.compose.runtime.RecomposeScopeImpl: void release()>();

        goto label1;

     label3:
        virtualinvoke $r0.<androidx.compose.runtime.SlotWriter: boolean removeGroup()>();

        return;
    }

    private static final java.util.HashMap multiMap()
    {
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        return $r0;
    }

    private static final boolean put(java.util.HashMap, java.lang.Object, java.lang.Object)
    {
        java.util.HashMap $r0;
        java.lang.Object r1, r2, r4, $r9;
        java.util.Map $r3;
        java.util.LinkedHashSet $r5, $r6;
        boolean $z1;

        $r0 := @parameter0: java.util.HashMap;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        $r3 = (java.util.Map) $r0;

        r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        if r4 != null goto label1;

        $r6 = new java.util.LinkedHashSet;

        specialinvoke $r6.<java.util.LinkedHashSet: void <init>()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6);

        $r9 = $r6;

        goto label2;

     label1:
        $r9 = r4;

     label2:
        $r5 = (java.util.LinkedHashSet) $r9;

        $z1 = virtualinvoke $r5.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r2);

        return $z1;
    }

    private static final kotlin.Unit remove(java.util.HashMap, java.lang.Object, java.lang.Object)
    {
        java.util.HashMap $r0;
        java.lang.Object r1, r2, $r4;
        java.util.LinkedHashSet r3, $r5;
        boolean $z2;
        kotlin.Unit $r7;

        $r0 := @parameter0: java.util.HashMap;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        $r4 = virtualinvoke $r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (java.util.LinkedHashSet) $r4;

        if $r5 == null goto label2;

        r3 = $r5;

        virtualinvoke r3.<java.util.LinkedHashSet: boolean remove(java.lang.Object)>(r2);

        $z2 = virtualinvoke r3.<java.util.LinkedHashSet: boolean isEmpty()>();

        if $z2 == 0 goto label1;

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

     label1:
        $r7 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        goto label3;

     label2:
        $r7 = null;

     label3:
        return $r7;
    }

    private static final java.lang.Object pop(java.util.HashMap, java.lang.Object)
    {
        java.util.HashMap $r0;
        java.lang.Object r1, r2, r3, $r4, $r7, $r9;
        java.util.LinkedHashSet $r5;
        java.lang.Iterable $r6;

        $r0 := @parameter0: java.util.HashMap;

        r1 := @parameter1: java.lang.Object;

        $r4 = virtualinvoke $r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (java.util.LinkedHashSet) $r4;

        if $r5 == null goto label1;

        $r6 = (java.lang.Iterable) $r5;

        $r7 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object firstOrNull(java.lang.Iterable)>($r6);

        if $r7 == null goto label1;

        r2 = $r7;

        r3 = r2;

        staticinvoke <androidx.compose.runtime.ComposerKt: kotlin.Unit remove(java.util.HashMap,java.lang.Object,java.lang.Object)>($r0, r1, r3);

        $r9 = r2;

        goto label2;

     label1:
        $r9 = null;

     label2:
        return $r9;
    }

    private static final java.lang.Object getKey(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1, r2, $r4, $r5, $r6, $r7, $r9;
        androidx.compose.runtime.JoinedKey r3, $r8;
        boolean $z1, $z2, $z3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        $z1 = r0 instanceof androidx.compose.runtime.JoinedKey;

        if $z1 == 0 goto label1;

        $r8 = (androidx.compose.runtime.JoinedKey) r0;

        goto label2;

     label1:
        $r8 = null;

     label2:
        if $r8 == null goto label5;

        r3 = $r8;

        $r4 = virtualinvoke r3.<androidx.compose.runtime.JoinedKey: java.lang.Object getLeft()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, r1);

        if $z2 == 0 goto label3;

        $r7 = virtualinvoke r3.<androidx.compose.runtime.JoinedKey: java.lang.Object getRight()>();

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, r2);

        if $z3 == 0 goto label3;

        $r9 = r0;

        goto label4;

     label3:
        $r5 = virtualinvoke r3.<androidx.compose.runtime.JoinedKey: java.lang.Object getLeft()>();

        $r9 = staticinvoke <androidx.compose.runtime.ComposerKt: java.lang.Object getKey(java.lang.Object,java.lang.Object,java.lang.Object)>($r5, r1, r2);

        if $r9 != null goto label4;

        $r6 = virtualinvoke r3.<androidx.compose.runtime.JoinedKey: java.lang.Object getRight()>();

        $r9 = staticinvoke <androidx.compose.runtime.ComposerKt: java.lang.Object getKey(java.lang.Object,java.lang.Object,java.lang.Object)>($r6, r1, r2);

     label4:
        goto label6;

     label5:
        $r9 = null;

     label6:
        return $r9;
    }

    private static final int findLocation(java.util.List, int)
    {
        java.util.List $r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        androidx.compose.runtime.Invalidation r1;
        java.lang.Object $r2;

        $r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        i8 = 0;

        $i3 = interfaceinvoke $r0.<java.util.List: int size()>();

        i9 = $i3 - 1;

     label1:
        if i8 > i9 goto label4;

        $i6 = i8 + i9;

        i1 = $i6 >>> 1;

        $r2 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i1);

        r1 = (androidx.compose.runtime.Invalidation) $r2;

        $i7 = virtualinvoke r1.<androidx.compose.runtime.Invalidation: int getLocation()>();

        i2 = staticinvoke <kotlin.jvm.internal.Intrinsics: int compare(int,int)>($i7, i0);

        if i2 >= 0 goto label2;

        i8 = i1 + 1;

        goto label1;

     label2:
        if i2 <= 0 goto label3;

        i9 = i1 - 1;

        goto label1;

     label3:
        return i1;

     label4:
        $i4 = i8 + 1;

        $i5 = neg $i4;

        return $i5;
    }

    private static final int findInsertLocation(java.util.List, int)
    {
        java.util.List $r0;
        int i0, i1, $i2, $i3;

        $r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        i1 = staticinvoke <androidx.compose.runtime.ComposerKt: int findLocation(java.util.List,int)>($r0, i0);

        if i1 >= 0 goto label1;

        $i2 = i1 + 1;

        $i3 = neg $i2;

        goto label2;

     label1:
        $i3 = i1;

     label2:
        return $i3;
    }

    private static final void insertIfMissing(java.util.List, int, androidx.compose.runtime.RecomposeScopeImpl, java.lang.Object)
    {
        java.util.List $r0, r6, $r18;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;
        androidx.compose.runtime.RecomposeScopeImpl r1, r7, r10, $r19;
        java.lang.Object r2, r3, $r11, $r14;
        androidx.compose.runtime.collection.IdentityArraySet r4, r5, r8, r9, $r13, $r17, $r20;
        androidx.compose.runtime.Invalidation $r12, $r15, $r16;

        $r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        r1 := @parameter2: androidx.compose.runtime.RecomposeScopeImpl;

        r2 := @parameter3: java.lang.Object;

        i1 = staticinvoke <androidx.compose.runtime.ComposerKt: int findLocation(java.util.List,int)>($r0, i0);

        if i1 >= 0 goto label3;

        $r18 = $r0;

        $i5 = i1 + 1;

        $i6 = neg $i5;

        $r19 = r1;

        $i7 = i0;

        if r2 == null goto label1;

        r3 = r2;

        i3 = i0;

        r7 = r1;

        i2 = $i6;

        r6 = $r0;

        $r17 = new androidx.compose.runtime.collection.IdentityArraySet;

        specialinvoke $r17.<androidx.compose.runtime.collection.IdentityArraySet: void <init>()>();

        r4 = $r17;

        r5 = r4;

        virtualinvoke r5.<androidx.compose.runtime.collection.IdentityArraySet: boolean add(java.lang.Object)>(r3);

        r8 = r4;

        $r18 = r6;

        $i6 = i2;

        $r19 = r7;

        $i7 = i3;

        $r20 = r8;

        goto label2;

     label1:
        $r20 = null;

     label2:
        r9 = $r20;

        i4 = $i7;

        r10 = $r19;

        $r16 = new androidx.compose.runtime.Invalidation;

        specialinvoke $r16.<androidx.compose.runtime.Invalidation: void <init>(androidx.compose.runtime.RecomposeScopeImpl,int,androidx.compose.runtime.collection.IdentityArraySet)>(r10, i4, r9);

        interfaceinvoke $r18.<java.util.List: void add(int,java.lang.Object)>($i6, $r16);

        goto label5;

     label3:
        if r2 != null goto label4;

        $r14 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i1);

        $r15 = (androidx.compose.runtime.Invalidation) $r14;

        virtualinvoke $r15.<androidx.compose.runtime.Invalidation: void setInstances(androidx.compose.runtime.collection.IdentityArraySet)>(null);

        goto label5;

     label4:
        $r11 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i1);

        $r12 = (androidx.compose.runtime.Invalidation) $r11;

        $r13 = virtualinvoke $r12.<androidx.compose.runtime.Invalidation: androidx.compose.runtime.collection.IdentityArraySet getInstances()>();

        if $r13 == null goto label5;

        virtualinvoke $r13.<androidx.compose.runtime.collection.IdentityArraySet: boolean add(java.lang.Object)>(r2);

        goto label5;

     label5:
        return;
    }

    private static final androidx.compose.runtime.Invalidation firstInRange(java.util.List, int, int)
    {
        java.util.List $r0;
        int i0, i1, i2, $i3, $i4;
        androidx.compose.runtime.Invalidation r1;
        java.lang.Object $r2;

        $r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = staticinvoke <androidx.compose.runtime.ComposerKt: int findInsertLocation(java.util.List,int)>($r0, i0);

        $i3 = interfaceinvoke $r0.<java.util.List: int size()>();

        if i2 >= $i3 goto label1;

        $r2 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i2);

        r1 = (androidx.compose.runtime.Invalidation) $r2;

        $i4 = virtualinvoke r1.<androidx.compose.runtime.Invalidation: int getLocation()>();

        if $i4 >= i1 goto label1;

        return r1;

     label1:
        return null;
    }

    private static final androidx.compose.runtime.Invalidation removeLocation(java.util.List, int)
    {
        java.util.List $r0;
        int i0, i1;
        java.lang.Object $r1;
        androidx.compose.runtime.Invalidation $r2;

        $r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        i1 = staticinvoke <androidx.compose.runtime.ComposerKt: int findLocation(java.util.List,int)>($r0, i0);

        if i1 < 0 goto label1;

        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object remove(int)>(i1);

        $r2 = (androidx.compose.runtime.Invalidation) $r1;

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    private static final void removeRange(java.util.List, int, int)
    {
        java.util.List $r0;
        int i0, i1, i2, $i3, $i4;
        androidx.compose.runtime.Invalidation r1;
        java.lang.Object $r2;

        $r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = staticinvoke <androidx.compose.runtime.ComposerKt: int findInsertLocation(java.util.List,int)>($r0, i0);

     label1:
        $i3 = interfaceinvoke $r0.<java.util.List: int size()>();

        if i2 >= $i3 goto label3;

        $r2 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i2);

        r1 = (androidx.compose.runtime.Invalidation) $r2;

        $i4 = virtualinvoke r1.<androidx.compose.runtime.Invalidation: int getLocation()>();

        if $i4 >= i1 goto label2;

        interfaceinvoke $r0.<java.util.List: java.lang.Object remove(int)>(i2);

        goto label1;

     label2:
        goto label3;

     label3:
        return;
    }

    private static final java.util.List filterToRange(java.util.List, int, int)
    {
        java.util.List $r0, r1;
        int i0, i1, $i2, $i3, i4;
        androidx.compose.runtime.Invalidation r2;
        java.util.ArrayList $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r1 = (java.util.List) $r3;

        i4 = staticinvoke <androidx.compose.runtime.ComposerKt: int findInsertLocation(java.util.List,int)>($r0, i0);

     label1:
        $i2 = interfaceinvoke $r0.<java.util.List: int size()>();

        if i4 >= $i2 goto label4;

        $r4 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i4);

        r2 = (androidx.compose.runtime.Invalidation) $r4;

        $i3 = virtualinvoke r2.<androidx.compose.runtime.Invalidation: int getLocation()>();

        if $i3 >= i1 goto label2;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r2);

        goto label3;

     label2:
        goto label4;

     label3:
        i4 = i4 + 1;

        goto label1;

     label4:
        return r1;
    }

    private static final int asInt(boolean)
    {
        boolean $z0;
        byte $b0;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        return $b0;
    }

    private static final boolean asBool(int)
    {
        int $i0;
        boolean $z0;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static final java.util.List collectNodesFrom(androidx.compose.runtime.SlotTable, androidx.compose.runtime.Anchor)
    {
        androidx.compose.runtime.SlotTable $r0, r3;
        androidx.compose.runtime.Anchor r1;
        java.util.List r2;
        androidx.compose.runtime.SlotReader r4, r5;
        int i0;
        kotlin.Unit r6;
        java.lang.Throwable r7, $r9;
        java.util.ArrayList $r8;

        $r0 := @parameter0: androidx.compose.runtime.SlotTable;

        r1 := @parameter1: androidx.compose.runtime.Anchor;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r2 = (java.util.List) $r8;

        r3 = $r0;

        r4 = virtualinvoke r3.<androidx.compose.runtime.SlotTable: androidx.compose.runtime.SlotReader openReader()>();

     label1:
        r5 = r4;

        i0 = virtualinvoke $r0.<androidx.compose.runtime.SlotTable: int anchorIndex(androidx.compose.runtime.Anchor)>(r1);

        staticinvoke <androidx.compose.runtime.ComposerKt: void collectNodesFrom$lambda-10$collectFromGroup(androidx.compose.runtime.SlotReader,java.util.List,int)>(r5, r2, i0);

        r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label2:
        virtualinvoke r4.<androidx.compose.runtime.SlotReader: void close()>();

        goto label5;

     label3:
        $r9 := @caughtexception;

        r7 = $r9;

     label4:
        virtualinvoke r4.<androidx.compose.runtime.SlotReader: void close()>();

        throw r7;

     label5:
        return r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private static final int distanceFrom(androidx.compose.runtime.SlotReader, int, int)
    {
        androidx.compose.runtime.SlotReader $r0;
        int i0, i1, i2, i3;

        $r0 := @parameter0: androidx.compose.runtime.SlotReader;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = 0;

        i3 = i0;

     label1:
        if i3 <= 0 goto label2;

        if i3 == i1 goto label2;

        i3 = virtualinvoke $r0.<androidx.compose.runtime.SlotReader: int parent(int)>(i3);

        i2 = i2 + 1;

        goto label1;

     label2:
        return i2;
    }

    private static final int nearestCommonRootOf(androidx.compose.runtime.SlotReader, int, int, int)
    {
        androidx.compose.runtime.SlotReader $r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13, i14, i15, i16, i17;
        boolean z0, z1;

        $r0 := @parameter0: androidx.compose.runtime.SlotReader;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        if i0 != i1 goto label01;

        return i0;

     label01:
        if i0 == i2 goto label02;

        if i1 != i2 goto label03;

     label02:
        return i2;

     label03:
        $i5 = virtualinvoke $r0.<androidx.compose.runtime.SlotReader: int parent(int)>(i0);

        if $i5 != i1 goto label04;

        return i1;

     label04:
        $i6 = virtualinvoke $r0.<androidx.compose.runtime.SlotReader: int parent(int)>(i1);

        if $i6 != i0 goto label05;

        return i0;

     label05:
        $i7 = virtualinvoke $r0.<androidx.compose.runtime.SlotReader: int parent(int)>(i0);

        $i8 = virtualinvoke $r0.<androidx.compose.runtime.SlotReader: int parent(int)>(i1);

        if $i7 != $i8 goto label06;

        $i9 = virtualinvoke $r0.<androidx.compose.runtime.SlotReader: int parent(int)>(i0);

        return $i9;

     label06:
        z0 = 0;

        i10 = i0;

        z1 = 0;

        i11 = i1;

        i3 = staticinvoke <androidx.compose.runtime.ComposerKt: int distanceFrom(androidx.compose.runtime.SlotReader,int,int)>($r0, i0, i2);

        i4 = staticinvoke <androidx.compose.runtime.ComposerKt: int distanceFrom(androidx.compose.runtime.SlotReader,int,int)>($r0, i1, i2);

        i12 = i3 - i4;

        i13 = 0;

     label07:
        if i13 >= i12 goto label08;

        i14 = i13;

        i10 = virtualinvoke $r0.<androidx.compose.runtime.SlotReader: int parent(int)>(i10);

        i13 = i13 + 1;

        goto label07;

     label08:
        i15 = i4 - i3;

        i16 = 0;

     label09:
        if i16 >= i15 goto label10;

        i17 = i16;

        i11 = virtualinvoke $r0.<androidx.compose.runtime.SlotReader: int parent(int)>(i11);

        i16 = i16 + 1;

        goto label09;

     label10:
        if i10 == i11 goto label11;

        i10 = virtualinvoke $r0.<androidx.compose.runtime.SlotReader: int parent(int)>(i10);

        i11 = virtualinvoke $r0.<androidx.compose.runtime.SlotReader: int parent(int)>(i11);

        goto label10;

     label11:
        return i10;
    }

    private static final java.lang.Object getJoinedKey(androidx.compose.runtime.KeyInfo)
    {
        androidx.compose.runtime.KeyInfo $r0;
        java.lang.Object $r1, $r3, $r4;
        int $i0, $i1;
        java.lang.Integer $r2;
        androidx.compose.runtime.JoinedKey r5;

        $r0 := @parameter0: androidx.compose.runtime.KeyInfo;

        $r1 = virtualinvoke $r0.<androidx.compose.runtime.KeyInfo: java.lang.Object getObjectKey()>();

        if $r1 == null goto label1;

        r5 = new androidx.compose.runtime.JoinedKey;

        $r4 = r5;

        $i1 = virtualinvoke $r0.<androidx.compose.runtime.KeyInfo: int getKey()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3 = virtualinvoke $r0.<androidx.compose.runtime.KeyInfo: java.lang.Object getObjectKey()>();

        specialinvoke r5.<androidx.compose.runtime.JoinedKey: void <init>(java.lang.Object,java.lang.Object)>($r2, $r3);

        goto label2;

     label1:
        $i0 = virtualinvoke $r0.<androidx.compose.runtime.KeyInfo: int getKey()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label2:
        return $r4;
    }

    public static void getInvocationKey$annotations()
    {
        return;
    }

    public static final java.lang.Object getInvocation()
    {
        java.lang.Object $r0;

        $r0 = <androidx.compose.runtime.ComposerKt: java.lang.Object invocation>;

        return $r0;
    }

    public static void getInvocation$annotations()
    {
        return;
    }

    public static void getProviderKey$annotations()
    {
        return;
    }

    public static final java.lang.Object getProvider()
    {
        java.lang.Object $r0;

        $r0 = <androidx.compose.runtime.ComposerKt: java.lang.Object provider>;

        return $r0;
    }

    public static void getProvider$annotations()
    {
        return;
    }

    public static void getCompositionLocalMapKey$annotations()
    {
        return;
    }

    public static final java.lang.Object getCompositionLocalMap()
    {
        java.lang.Object $r0;

        $r0 = <androidx.compose.runtime.ComposerKt: java.lang.Object compositionLocalMap>;

        return $r0;
    }

    public static void getCompositionLocalMap$annotations()
    {
        return;
    }

    public static void getProviderValuesKey$annotations()
    {
        return;
    }

    public static final java.lang.Object getProviderValues()
    {
        java.lang.Object $r0;

        $r0 = <androidx.compose.runtime.ComposerKt: java.lang.Object providerValues>;

        return $r0;
    }

    public static void getProviderValues$annotations()
    {
        return;
    }

    public static void getProviderMapsKey$annotations()
    {
        return;
    }

    public static final java.lang.Object getProviderMaps()
    {
        java.lang.Object $r0;

        $r0 = <androidx.compose.runtime.ComposerKt: java.lang.Object providerMaps>;

        return $r0;
    }

    public static void getProviderMaps$annotations()
    {
        return;
    }

    public static void getReferenceKey$annotations()
    {
        return;
    }

    public static final java.lang.Object getReference()
    {
        java.lang.Object $r0;

        $r0 = <androidx.compose.runtime.ComposerKt: java.lang.Object reference>;

        return $r0;
    }

    public static void getReference$annotations()
    {
        return;
    }

    public static void getReuseKey$annotations()
    {
        return;
    }

    public static final void runtimeCheck(boolean, kotlin.jvm.functions.Function0)
    {
        boolean z0;
        kotlin.jvm.functions.Function0 r0;
        java.lang.Object r1;
        java.lang.String $r2;
        kotlin.KotlinNothingValueException $r4;

        z0 := @parameter0: boolean;

        r0 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "lazyMessage");

        if z0 != 0 goto label1;

        r1 = interfaceinvoke r0.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        staticinvoke <androidx.compose.runtime.ComposerKt: java.lang.Void composeRuntimeError(java.lang.String)>($r2);

        $r4 = new kotlin.KotlinNothingValueException;

        specialinvoke $r4.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r4;

     label1:
        return;
    }

    public static final void runtimeCheck(boolean)
    {
        boolean z0;
        java.lang.String $r0, $r3;
        kotlin.KotlinNothingValueException $r2;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        $r3 = "Check failed";

        $r0 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        staticinvoke <androidx.compose.runtime.ComposerKt: java.lang.Void composeRuntimeError(java.lang.String)>($r0);

        $r2 = new kotlin.KotlinNothingValueException;

        specialinvoke $r2.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r2;

     label1:
        return;
    }

    public static final java.lang.Void composeRuntimeError(java.lang.String)
    {
        java.lang.String r0, $r6;
        java.lang.StringBuilder $r3, $r4, $r5, r7;
        androidx.compose.runtime.ComposeRuntimeError r8;
        java.lang.Throwable r9;

        r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "message");

        r8 = new androidx.compose.runtime.ComposeRuntimeError;

        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Compose Runtime internal error. Unexpected or incorrect use of the Compose internal runtime API (");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("). Please report to Google or use https://goo.gle/compose-feedback");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r8.<androidx.compose.runtime.ComposeRuntimeError: void <init>(java.lang.String)>($r6);

        r9 = (java.lang.Throwable) r8;

        throw r9;
    }

    private static final void collectNodesFrom$lambda-10$collectFromGroup(androidx.compose.runtime.SlotReader, java.util.List, int)
    {
        androidx.compose.runtime.SlotReader $r0;
        java.util.List r1;
        int i0, i1, $i2, $i3, i4;
        boolean $z0;
        java.lang.Object $r2;

        $r0 := @parameter0: androidx.compose.runtime.SlotReader;

        r1 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        $z0 = virtualinvoke $r0.<androidx.compose.runtime.SlotReader: boolean isNode(int)>(i0);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r0.<androidx.compose.runtime.SlotReader: java.lang.Object node(int)>(i0);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        goto label3;

     label1:
        i4 = i0 + 1;

        $i2 = virtualinvoke $r0.<androidx.compose.runtime.SlotReader: int groupSize(int)>(i0);

        i1 = i0 + $i2;

     label2:
        if i4 >= i1 goto label3;

        staticinvoke <androidx.compose.runtime.ComposerKt: void collectNodesFrom$lambda-10$collectFromGroup(androidx.compose.runtime.SlotReader,java.util.List,int)>($r0, r1, i4);

        $i3 = virtualinvoke $r0.<androidx.compose.runtime.SlotReader: int groupSize(int)>(i4);

        i4 = i4 + $i3;

        goto label2;

     label3:
        return;
    }

    public static final java.lang.Object access$pop(java.util.HashMap, java.lang.Object)
    {
        java.util.HashMap $r0;
        java.lang.Object r1, $r2;

        $r0 := @parameter0: java.util.HashMap;

        r1 := @parameter1: java.lang.Object;

        $r2 = staticinvoke <androidx.compose.runtime.ComposerKt: java.lang.Object pop(java.util.HashMap,java.lang.Object)>($r0, r1);

        return $r2;
    }

    public static final java.util.HashMap access$multiMap()
    {
        java.util.HashMap $r0;

        $r0 = staticinvoke <androidx.compose.runtime.ComposerKt: java.util.HashMap multiMap()>();

        return $r0;
    }

    public static final boolean access$put(java.util.HashMap, java.lang.Object, java.lang.Object)
    {
        java.util.HashMap $r0;
        java.lang.Object r1, r2;
        boolean $z0;

        $r0 := @parameter0: java.util.HashMap;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        $z0 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean put(java.util.HashMap,java.lang.Object,java.lang.Object)>($r0, r1, r2);

        return $z0;
    }

    public static final java.lang.Object access$getJoinedKey(androidx.compose.runtime.KeyInfo)
    {
        androidx.compose.runtime.KeyInfo $r0;
        java.lang.Object $r1;

        $r0 := @parameter0: androidx.compose.runtime.KeyInfo;

        $r1 = staticinvoke <androidx.compose.runtime.ComposerKt: java.lang.Object getJoinedKey(androidx.compose.runtime.KeyInfo)>($r0);

        return $r1;
    }

    public static final void access$setCompositionTracer$p(androidx.compose.runtime.CompositionTracer)
    {
        androidx.compose.runtime.CompositionTracer r0;

        r0 := @parameter0: androidx.compose.runtime.CompositionTracer;

        <androidx.compose.runtime.ComposerKt: androidx.compose.runtime.CompositionTracer compositionTracer> = r0;

        return;
    }

    public static final int access$asInt(boolean)
    {
        boolean $z0;
        int $i0;

        $z0 := @parameter0: boolean;

        $i0 = staticinvoke <androidx.compose.runtime.ComposerKt: int asInt(boolean)>($z0);

        return $i0;
    }

    public static final java.lang.Object access$getKey(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1, r2, $r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        $r3 = staticinvoke <androidx.compose.runtime.ComposerKt: java.lang.Object getKey(java.lang.Object,java.lang.Object,java.lang.Object)>(r0, r1, r2);

        return $r3;
    }

    public static final androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap access$compositionLocalMapOf(androidx.compose.runtime.ProvidedValue[], androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap, androidx.compose.runtime.Composer, int)
    {
        androidx.compose.runtime.ProvidedValue[] r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap r1, $r3;
        androidx.compose.runtime.Composer $r2;
        int $i0;

        r0 := @parameter0: androidx.compose.runtime.ProvidedValue[];

        r1 := @parameter1: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap;

        $r2 := @parameter2: androidx.compose.runtime.Composer;

        $i0 := @parameter3: int;

        $r3 = staticinvoke <androidx.compose.runtime.ComposerKt: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap compositionLocalMapOf(androidx.compose.runtime.ProvidedValue[],androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap,androidx.compose.runtime.Composer,int)>(r0, r1, $r2, $i0);

        return $r3;
    }

    public static final boolean access$asBool(int)
    {
        int $i0;
        boolean $z0;

        $i0 := @parameter0: int;

        $z0 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean asBool(int)>($i0);

        return $z0;
    }

    public static final void access$removeRange(java.util.List, int, int)
    {
        java.util.List $r0;
        int i0, i1;

        $r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        staticinvoke <androidx.compose.runtime.ComposerKt: void removeRange(java.util.List,int,int)>($r0, i0, i1);

        return;
    }

    public static final androidx.compose.runtime.Invalidation access$firstInRange(java.util.List, int, int)
    {
        java.util.List $r0;
        int i0, i1;
        androidx.compose.runtime.Invalidation $r1;

        $r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = staticinvoke <androidx.compose.runtime.ComposerKt: androidx.compose.runtime.Invalidation firstInRange(java.util.List,int,int)>($r0, i0, i1);

        return $r1;
    }

    public static final androidx.compose.runtime.Invalidation access$removeLocation(java.util.List, int)
    {
        java.util.List $r0;
        int i0;
        androidx.compose.runtime.Invalidation $r1;

        $r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        $r1 = staticinvoke <androidx.compose.runtime.ComposerKt: androidx.compose.runtime.Invalidation removeLocation(java.util.List,int)>($r0, i0);

        return $r1;
    }

    public static final int access$nearestCommonRootOf(androidx.compose.runtime.SlotReader, int, int, int)
    {
        androidx.compose.runtime.SlotReader $r0;
        int i0, i1, i2, $i3;

        $r0 := @parameter0: androidx.compose.runtime.SlotReader;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $i3 = staticinvoke <androidx.compose.runtime.ComposerKt: int nearestCommonRootOf(androidx.compose.runtime.SlotReader,int,int,int)>($r0, i0, i1, i2);

        return $i3;
    }

    public static final void access$insertIfMissing(java.util.List, int, androidx.compose.runtime.RecomposeScopeImpl, java.lang.Object)
    {
        java.util.List $r0;
        int i0;
        androidx.compose.runtime.RecomposeScopeImpl r1;
        java.lang.Object r2;

        $r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        r1 := @parameter2: androidx.compose.runtime.RecomposeScopeImpl;

        r2 := @parameter3: java.lang.Object;

        staticinvoke <androidx.compose.runtime.ComposerKt: void insertIfMissing(java.util.List,int,androidx.compose.runtime.RecomposeScopeImpl,java.lang.Object)>($r0, i0, r1, r2);

        return;
    }

    public static final kotlin.jvm.functions.Function3 access$getRemoveCurrentGroupInstance$p()
    {
        kotlin.jvm.functions.Function3 $r0;

        $r0 = <androidx.compose.runtime.ComposerKt: kotlin.jvm.functions.Function3 removeCurrentGroupInstance>;

        return $r0;
    }

    public static final kotlin.jvm.functions.Function3 access$getStartRootGroup$p()
    {
        kotlin.jvm.functions.Function3 $r0;

        $r0 = <androidx.compose.runtime.ComposerKt: kotlin.jvm.functions.Function3 startRootGroup>;

        return $r0;
    }

    public static final kotlin.jvm.functions.Function3 access$getEndGroupInstance$p()
    {
        kotlin.jvm.functions.Function3 $r0;

        $r0 = <androidx.compose.runtime.ComposerKt: kotlin.jvm.functions.Function3 endGroupInstance>;

        return $r0;
    }

    public static final java.util.List access$collectNodesFrom(androidx.compose.runtime.SlotTable, androidx.compose.runtime.Anchor)
    {
        androidx.compose.runtime.SlotTable $r0;
        androidx.compose.runtime.Anchor r1;
        java.util.List $r2;

        $r0 := @parameter0: androidx.compose.runtime.SlotTable;

        r1 := @parameter1: androidx.compose.runtime.Anchor;

        $r2 = staticinvoke <androidx.compose.runtime.ComposerKt: java.util.List collectNodesFrom(androidx.compose.runtime.SlotTable,androidx.compose.runtime.Anchor)>($r0, r1);

        return $r2;
    }

    public static final kotlin.jvm.functions.Function3 access$getSkipToGroupEndInstance$p()
    {
        kotlin.jvm.functions.Function3 $r0;

        $r0 = <androidx.compose.runtime.ComposerKt: kotlin.jvm.functions.Function3 skipToGroupEndInstance>;

        return $r0;
    }

    public static final kotlin.jvm.functions.Function3 access$getResetSlotsInstance$p()
    {
        kotlin.jvm.functions.Function3 $r0;

        $r0 = <androidx.compose.runtime.ComposerKt: kotlin.jvm.functions.Function3 resetSlotsInstance>;

        return $r0;
    }

    public static final java.util.List access$filterToRange(java.util.List, int, int)
    {
        java.util.List $r0, $r1;
        int i0, i1;

        $r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = staticinvoke <androidx.compose.runtime.ComposerKt: java.util.List filterToRange(java.util.List,int,int)>($r0, i0, i1);

        return $r1;
    }

    static void <clinit>()
    {
        androidx.compose.runtime.ComposerKt$removeCurrentGroupInstance$1 $r0;
        kotlin.jvm.functions.Function3 $r1, $r3, $r5, $r7, $r9;
        androidx.compose.runtime.ComposerKt$skipToGroupEndInstance$1 $r2;
        androidx.compose.runtime.ComposerKt$endGroupInstance$1 $r4;
        androidx.compose.runtime.ComposerKt$startRootGroup$1 $r6;
        androidx.compose.runtime.ComposerKt$resetSlotsInstance$1 $r8;
        androidx.compose.runtime.OpaqueKey $r10, $r11, $r12, $r13, $r14, $r15;

        $r0 = <androidx.compose.runtime.ComposerKt$removeCurrentGroupInstance$1: androidx.compose.runtime.ComposerKt$removeCurrentGroupInstance$1 INSTANCE>;

        $r1 = (kotlin.jvm.functions.Function3) $r0;

        <androidx.compose.runtime.ComposerKt: kotlin.jvm.functions.Function3 removeCurrentGroupInstance> = $r1;

        $r2 = <androidx.compose.runtime.ComposerKt$skipToGroupEndInstance$1: androidx.compose.runtime.ComposerKt$skipToGroupEndInstance$1 INSTANCE>;

        $r3 = (kotlin.jvm.functions.Function3) $r2;

        <androidx.compose.runtime.ComposerKt: kotlin.jvm.functions.Function3 skipToGroupEndInstance> = $r3;

        $r4 = <androidx.compose.runtime.ComposerKt$endGroupInstance$1: androidx.compose.runtime.ComposerKt$endGroupInstance$1 INSTANCE>;

        $r5 = (kotlin.jvm.functions.Function3) $r4;

        <androidx.compose.runtime.ComposerKt: kotlin.jvm.functions.Function3 endGroupInstance> = $r5;

        $r6 = <androidx.compose.runtime.ComposerKt$startRootGroup$1: androidx.compose.runtime.ComposerKt$startRootGroup$1 INSTANCE>;

        $r7 = (kotlin.jvm.functions.Function3) $r6;

        <androidx.compose.runtime.ComposerKt: kotlin.jvm.functions.Function3 startRootGroup> = $r7;

        $r8 = <androidx.compose.runtime.ComposerKt$resetSlotsInstance$1: androidx.compose.runtime.ComposerKt$resetSlotsInstance$1 INSTANCE>;

        $r9 = (kotlin.jvm.functions.Function3) $r8;

        <androidx.compose.runtime.ComposerKt: kotlin.jvm.functions.Function3 resetSlotsInstance> = $r9;

        $r10 = new androidx.compose.runtime.OpaqueKey;

        specialinvoke $r10.<androidx.compose.runtime.OpaqueKey: void <init>(java.lang.String)>("provider");

        <androidx.compose.runtime.ComposerKt: java.lang.Object invocation> = $r10;

        $r11 = new androidx.compose.runtime.OpaqueKey;

        specialinvoke $r11.<androidx.compose.runtime.OpaqueKey: void <init>(java.lang.String)>("provider");

        <androidx.compose.runtime.ComposerKt: java.lang.Object provider> = $r11;

        $r12 = new androidx.compose.runtime.OpaqueKey;

        specialinvoke $r12.<androidx.compose.runtime.OpaqueKey: void <init>(java.lang.String)>("compositionLocalMap");

        <androidx.compose.runtime.ComposerKt: java.lang.Object compositionLocalMap> = $r12;

        $r13 = new androidx.compose.runtime.OpaqueKey;

        specialinvoke $r13.<androidx.compose.runtime.OpaqueKey: void <init>(java.lang.String)>("providerValues");

        <androidx.compose.runtime.ComposerKt: java.lang.Object providerValues> = $r13;

        $r14 = new androidx.compose.runtime.OpaqueKey;

        specialinvoke $r14.<androidx.compose.runtime.OpaqueKey: void <init>(java.lang.String)>("providers");

        <androidx.compose.runtime.ComposerKt: java.lang.Object providerMaps> = $r14;

        $r15 = new androidx.compose.runtime.OpaqueKey;

        specialinvoke $r15.<androidx.compose.runtime.OpaqueKey: void <init>(java.lang.String)>("reference");

        <androidx.compose.runtime.ComposerKt: java.lang.Object reference> = $r15;

        return;
    }

