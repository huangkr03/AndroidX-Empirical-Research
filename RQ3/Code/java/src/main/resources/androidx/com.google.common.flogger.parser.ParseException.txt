com.google.common.flogger.parser.ParseException
    private void <init>(java.lang.String, java.lang.String)
    {
        com.google.common.flogger.parser.ParseException $r0;
        java.lang.String $r1, $r2;

        $r0 := @this: com.google.common.flogger.parser.ParseException;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r1);

        return;
    }

    public static com.google.common.flogger.parser.ParseException atPosition(java.lang.String, java.lang.String, int)
    {
        java.lang.String $r0, $r2;
        int $i0, $i1;
        com.google.common.flogger.parser.ParseException $r1;

        $r2 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r1 = new com.google.common.flogger.parser.ParseException;

        $i1 = $i0 + 1;

        $r2 = staticinvoke <com.google.common.flogger.parser.ParseException: java.lang.String msg(java.lang.String,java.lang.String,int,int)>($r2, $r0, $i0, $i1);

        specialinvoke $r1.<com.google.common.flogger.parser.ParseException: void <init>(java.lang.String,java.lang.String)>($r2, $r0);

        return $r1;
    }

    public static com.google.common.flogger.parser.ParseException generic(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        com.google.common.flogger.parser.ParseException $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = new com.google.common.flogger.parser.ParseException;

        specialinvoke $r2.<com.google.common.flogger.parser.ParseException: void <init>(java.lang.String,java.lang.String)>($r0, $r1);

        return $r2;
    }

    private static java.lang.String msg(java.lang.String, java.lang.String, int, int)
    {
        int $i0, $i1, $i2;
        java.lang.String $r0, $r1, $r4;
        java.lang.StringBuilder $r2, $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        if $i2 >= 0 goto label1;

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r0 = "...";

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 + 5;

        if $i1 <= $i0 goto label2;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...");

        $i0 = $i1 + -5;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>($r1, $i0, $i1);

        goto label3;

     label2:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>($r1, 0, $i1);

     label3:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i1, $i2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = $i1 - $i2;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 + 5;

        if $i1 <= $i0 goto label4;

        $i1 = $i2 + 5;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>($r1, $i2, $i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...");

        goto label5;

     label4:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>($r1, $i2, $i1);

     label5:
        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static com.google.common.flogger.parser.ParseException withBounds(java.lang.String, java.lang.String, int, int)
    {
        java.lang.String $r0, $r2;
        int $i0, $i1;
        com.google.common.flogger.parser.ParseException $r1;

        $r2 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r1 = new com.google.common.flogger.parser.ParseException;

        $r2 = staticinvoke <com.google.common.flogger.parser.ParseException: java.lang.String msg(java.lang.String,java.lang.String,int,int)>($r2, $r0, $i0, $i1);

        specialinvoke $r1.<com.google.common.flogger.parser.ParseException: void <init>(java.lang.String,java.lang.String)>($r2, $r0);

        return $r1;
    }

    public static com.google.common.flogger.parser.ParseException withStartPosition(java.lang.String, java.lang.String, int)
    {
        java.lang.String $r0, $r2;
        int $i0;
        com.google.common.flogger.parser.ParseException $r1;

        $r2 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r1 = new com.google.common.flogger.parser.ParseException;

        $r2 = staticinvoke <com.google.common.flogger.parser.ParseException: java.lang.String msg(java.lang.String,java.lang.String,int,int)>($r2, $r0, $i0, -1);

        specialinvoke $r1.<com.google.common.flogger.parser.ParseException: void <init>(java.lang.String,java.lang.String)>($r2, $r0);

        return $r1;
    }

    public java.lang.Throwable fillInStackTrace()
    {
        com.google.common.flogger.parser.ParseException $r0;
        java.lang.Throwable r1;

        $r0 := @this: com.google.common.flogger.parser.ParseException;

        entermonitor $r0;

        exitmonitor $r0;

        r1 = (java.lang.Throwable) $r0;

        return r1;
    }

