androidx.media3.exoplayer.rtsp.RtspSessionTiming
<androidx.media3.exoplayer.rtsp.RtspSessionTiming: androidx.media3.exoplayer.rtsp.RtspSessionTiming DEFAULT>
<androidx.media3.exoplayer.rtsp.RtspSessionTiming: java.util.regex.Pattern NPT_RANGE_PATTERN>
<androidx.media3.exoplayer.rtsp.RtspSessionTiming: java.lang.String START_TIMING_NTP_FORMAT>
<androidx.media3.exoplayer.rtsp.RtspSessionTiming: long LIVE_START_TIME>
<androidx.media3.exoplayer.rtsp.RtspSessionTiming: long startTimeMs>
<androidx.media3.exoplayer.rtsp.RtspSessionTiming: long stopTimeMs>
    public static androidx.media3.exoplayer.rtsp.RtspSessionTiming parseTiming(java.lang.String) throws androidx.media3.common.ParserException
    {
        java.lang.String r0, r2, r3, $r7;
        java.util.regex.Matcher r1;
        java.lang.Throwable r4, $r9;
        java.util.regex.Pattern $r5;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r6;
        float $f0, $f1, $f2, $f3;
        androidx.media3.exoplayer.rtsp.RtspSessionTiming $r8;
        byte $b0;
        androidx.media3.common.ParserException $r10;
        long l1, l2;

        r0 := @parameter0: java.lang.String;

        $r5 = <androidx.media3.exoplayer.rtsp.RtspSessionTiming: java.util.regex.Pattern NPT_RANGE_PATTERN>;

        r1 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z0 = virtualinvoke r1.<java.util.regex.Matcher: boolean matches()>();

        staticinvoke <androidx.media3.exoplayer.rtsp.RtspMessageUtil: void checkManifestExpression(boolean,java.lang.String)>($z0, r0);

        r2 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        if r2 == null goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        staticinvoke <androidx.media3.exoplayer.rtsp.RtspMessageUtil: void checkManifestExpression(boolean,java.lang.String)>($z2, r0);

        $r6 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>(r2);

        $r7 = (java.lang.String) $r6;

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("now");

        if $z1 == 0 goto label03;

        l1 = 0L;

        goto label04;

     label03:
        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r2);

        $f1 = $f0 * 1000.0F;

        l1 = (long) $f1;

     label04:
        r3 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        if r3 == null goto label11;

     label05:
        $f2 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r3);

        $f3 = $f2 * 1000.0F;

        l2 = (long) $f3;

     label06:
        goto label08;

     label07:
        $r9 := @caughtexception;

        r4 = $r9;

        $r10 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedManifest(java.lang.String,java.lang.Throwable)>(r3, r4);

        throw $r10;

     label08:
        $b0 = l2 cmp l1;

        if $b0 < 0 goto label09;

        $z3 = 1;

        goto label10;

     label09:
        $z3 = 0;

     label10:
        staticinvoke <androidx.media3.exoplayer.rtsp.RtspMessageUtil: void checkManifestExpression(boolean,java.lang.String)>($z3, r0);

        goto label12;

     label11:
        l2 = -9223372036854775807L;

     label12:
        $r8 = new androidx.media3.exoplayer.rtsp.RtspSessionTiming;

        specialinvoke $r8.<androidx.media3.exoplayer.rtsp.RtspSessionTiming: void <init>(long,long)>(l1, l2);

        return $r8;

        catch java.lang.NumberFormatException from label05 to label06 with label07;
    }

    public static java.lang.String getOffsetStartTimeTiming(long)
    {
        long l0;
        double d0, $d1;
        java.lang.Object[] $r0;
        java.lang.Double $r1;
        java.lang.String $r2;

        l0 := @parameter0: long;

        $d1 = (double) l0;

        d0 = $d1 / 1000.0;

        $r0 = newarray (java.lang.Object)[1];

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r0[0] = $r1;

        $r2 = staticinvoke <androidx.media3.common.util.Util: java.lang.String formatInvariant(java.lang.String,java.lang.Object[])>("npt=%.3f-", $r0);

        return $r2;
    }

    private void <init>(long, long)
    {
        androidx.media3.exoplayer.rtsp.RtspSessionTiming r0;
        long l0, l1;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtspSessionTiming;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.rtsp.RtspSessionTiming: long startTimeMs> = l0;

        r0.<androidx.media3.exoplayer.rtsp.RtspSessionTiming: long stopTimeMs> = l1;

        return;
    }

    public boolean isLive()
    {
        androidx.media3.exoplayer.rtsp.RtspSessionTiming r0;
        long $l0;
        byte $b1;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtspSessionTiming;

        $l0 = r0.<androidx.media3.exoplayer.rtsp.RtspSessionTiming: long stopTimeMs>;

        $b1 = $l0 cmp -9223372036854775807L;

        if $b1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public long getDurationMs()
    {
        androidx.media3.exoplayer.rtsp.RtspSessionTiming r0;
        long $l0, $l1, $l2;

        r0 := @this: androidx.media3.exoplayer.rtsp.RtspSessionTiming;

        $l1 = r0.<androidx.media3.exoplayer.rtsp.RtspSessionTiming: long stopTimeMs>;

        $l0 = r0.<androidx.media3.exoplayer.rtsp.RtspSessionTiming: long startTimeMs>;

        $l2 = $l1 - $l0;

        return $l2;
    }

    static void <clinit>()
    {
        androidx.media3.exoplayer.rtsp.RtspSessionTiming $r0;
        java.util.regex.Pattern $r1;

        $r0 = new androidx.media3.exoplayer.rtsp.RtspSessionTiming;

        specialinvoke $r0.<androidx.media3.exoplayer.rtsp.RtspSessionTiming: void <init>(long,long)>(0L, -9223372036854775807L);

        <androidx.media3.exoplayer.rtsp.RtspSessionTiming: androidx.media3.exoplayer.rtsp.RtspSessionTiming DEFAULT> = $r0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("npt[:=]([.\\d]+|now)\\s?-\\s?([.\\d]+)?");

        <androidx.media3.exoplayer.rtsp.RtspSessionTiming: java.util.regex.Pattern NPT_RANGE_PATTERN> = $r1;

        return;
    }

