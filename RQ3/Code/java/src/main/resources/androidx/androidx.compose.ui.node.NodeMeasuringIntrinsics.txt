androidx.compose.ui.node.NodeMeasuringIntrinsics
<androidx.compose.ui.node.NodeMeasuringIntrinsics: androidx.compose.ui.node.NodeMeasuringIntrinsics INSTANCE>
    private void <init>()
    {
        androidx.compose.ui.node.NodeMeasuringIntrinsics r0;

        r0 := @this: androidx.compose.ui.node.NodeMeasuringIntrinsics;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final int minWidth$ui_release(androidx.compose.ui.node.LayoutModifierNode, androidx.compose.ui.layout.IntrinsicMeasureScope, androidx.compose.ui.layout.IntrinsicMeasurable, int)
    {
        androidx.compose.ui.node.NodeMeasuringIntrinsics r0;
        androidx.compose.ui.node.LayoutModifierNode r1;
        androidx.compose.ui.layout.IntrinsicMeasureScope r2;
        androidx.compose.ui.layout.IntrinsicMeasurable r3;
        int i0, $i2;
        androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable r4, $r6;
        long l1;
        androidx.compose.ui.layout.MeasureResult r5;
        androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight $r7;
        androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax $r8;
        androidx.compose.ui.layout.IntrinsicsMeasureScope $r9;
        androidx.compose.ui.unit.Density $r10;
        androidx.compose.ui.unit.LayoutDirection $r11;
        androidx.compose.ui.layout.Measurable $r12;
        androidx.compose.ui.layout.MeasureScope $r13;

        r0 := @this: androidx.compose.ui.node.NodeMeasuringIntrinsics;

        r1 := @parameter0: androidx.compose.ui.node.LayoutModifierNode;

        r2 := @parameter1: androidx.compose.ui.layout.IntrinsicMeasureScope;

        r3 := @parameter2: androidx.compose.ui.layout.IntrinsicMeasurable;

        i0 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "node");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "instrinsicMeasureScope");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "intrinsicMeasurable");

        $r6 = new androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable;

        $r8 = <androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax Min>;

        $r7 = <androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight Width>;

        specialinvoke $r6.<androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable: void <init>(androidx.compose.ui.layout.IntrinsicMeasurable,androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax,androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight)>(r3, $r8, $r7);

        r4 = $r6;

        l1 = staticinvoke <androidx.compose.ui.unit.ConstraintsKt: long Constraints$default(int,int,int,int,int,java.lang.Object)>(0, 0, 0, i0, 7, null);

        $r9 = new androidx.compose.ui.layout.IntrinsicsMeasureScope;

        $r10 = (androidx.compose.ui.unit.Density) r2;

        $r11 = interfaceinvoke r2.<androidx.compose.ui.layout.IntrinsicMeasureScope: androidx.compose.ui.unit.LayoutDirection getLayoutDirection()>();

        specialinvoke $r9.<androidx.compose.ui.layout.IntrinsicsMeasureScope: void <init>(androidx.compose.ui.unit.Density,androidx.compose.ui.unit.LayoutDirection)>($r10, $r11);

        $r13 = (androidx.compose.ui.layout.MeasureScope) $r9;

        $r12 = (androidx.compose.ui.layout.Measurable) r4;

        r5 = interfaceinvoke r1.<androidx.compose.ui.node.LayoutModifierNode: androidx.compose.ui.layout.MeasureResult measure-3p2s80s(androidx.compose.ui.layout.MeasureScope,androidx.compose.ui.layout.Measurable,long)>($r13, $r12, l1);

        $i2 = interfaceinvoke r5.<androidx.compose.ui.layout.MeasureResult: int getWidth()>();

        return $i2;
    }

    public final int minHeight$ui_release(androidx.compose.ui.node.LayoutModifierNode, androidx.compose.ui.layout.IntrinsicMeasureScope, androidx.compose.ui.layout.IntrinsicMeasurable, int)
    {
        androidx.compose.ui.node.NodeMeasuringIntrinsics r0;
        androidx.compose.ui.node.LayoutModifierNode r1;
        androidx.compose.ui.layout.IntrinsicMeasureScope r2;
        androidx.compose.ui.layout.IntrinsicMeasurable r3;
        int i0, $i2;
        androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable r4, $r6;
        long l1;
        androidx.compose.ui.layout.MeasureResult r5;
        androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight $r7;
        androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax $r8;
        androidx.compose.ui.layout.IntrinsicsMeasureScope $r9;
        androidx.compose.ui.unit.Density $r10;
        androidx.compose.ui.unit.LayoutDirection $r11;
        androidx.compose.ui.layout.Measurable $r12;
        androidx.compose.ui.layout.MeasureScope $r13;

        r0 := @this: androidx.compose.ui.node.NodeMeasuringIntrinsics;

        r1 := @parameter0: androidx.compose.ui.node.LayoutModifierNode;

        r2 := @parameter1: androidx.compose.ui.layout.IntrinsicMeasureScope;

        r3 := @parameter2: androidx.compose.ui.layout.IntrinsicMeasurable;

        i0 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "node");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "instrinsicMeasureScope");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "intrinsicMeasurable");

        $r6 = new androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable;

        $r8 = <androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax Min>;

        $r7 = <androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight Height>;

        specialinvoke $r6.<androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable: void <init>(androidx.compose.ui.layout.IntrinsicMeasurable,androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax,androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight)>(r3, $r8, $r7);

        r4 = $r6;

        l1 = staticinvoke <androidx.compose.ui.unit.ConstraintsKt: long Constraints$default(int,int,int,int,int,java.lang.Object)>(0, i0, 0, 0, 13, null);

        $r9 = new androidx.compose.ui.layout.IntrinsicsMeasureScope;

        $r10 = (androidx.compose.ui.unit.Density) r2;

        $r11 = interfaceinvoke r2.<androidx.compose.ui.layout.IntrinsicMeasureScope: androidx.compose.ui.unit.LayoutDirection getLayoutDirection()>();

        specialinvoke $r9.<androidx.compose.ui.layout.IntrinsicsMeasureScope: void <init>(androidx.compose.ui.unit.Density,androidx.compose.ui.unit.LayoutDirection)>($r10, $r11);

        $r13 = (androidx.compose.ui.layout.MeasureScope) $r9;

        $r12 = (androidx.compose.ui.layout.Measurable) r4;

        r5 = interfaceinvoke r1.<androidx.compose.ui.node.LayoutModifierNode: androidx.compose.ui.layout.MeasureResult measure-3p2s80s(androidx.compose.ui.layout.MeasureScope,androidx.compose.ui.layout.Measurable,long)>($r13, $r12, l1);

        $i2 = interfaceinvoke r5.<androidx.compose.ui.layout.MeasureResult: int getHeight()>();

        return $i2;
    }

    public final int maxWidth$ui_release(androidx.compose.ui.node.LayoutModifierNode, androidx.compose.ui.layout.IntrinsicMeasureScope, androidx.compose.ui.layout.IntrinsicMeasurable, int)
    {
        androidx.compose.ui.node.NodeMeasuringIntrinsics r0;
        androidx.compose.ui.node.LayoutModifierNode r1;
        androidx.compose.ui.layout.IntrinsicMeasureScope r2;
        androidx.compose.ui.layout.IntrinsicMeasurable r3;
        int i0, $i2;
        androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable r4, $r6;
        long l1;
        androidx.compose.ui.layout.MeasureResult r5;
        androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight $r7;
        androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax $r8;
        androidx.compose.ui.layout.IntrinsicsMeasureScope $r9;
        androidx.compose.ui.unit.Density $r10;
        androidx.compose.ui.unit.LayoutDirection $r11;
        androidx.compose.ui.layout.Measurable $r12;
        androidx.compose.ui.layout.MeasureScope $r13;

        r0 := @this: androidx.compose.ui.node.NodeMeasuringIntrinsics;

        r1 := @parameter0: androidx.compose.ui.node.LayoutModifierNode;

        r2 := @parameter1: androidx.compose.ui.layout.IntrinsicMeasureScope;

        r3 := @parameter2: androidx.compose.ui.layout.IntrinsicMeasurable;

        i0 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "node");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "instrinsicMeasureScope");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "intrinsicMeasurable");

        $r6 = new androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable;

        $r8 = <androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax Max>;

        $r7 = <androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight Width>;

        specialinvoke $r6.<androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable: void <init>(androidx.compose.ui.layout.IntrinsicMeasurable,androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax,androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight)>(r3, $r8, $r7);

        r4 = $r6;

        l1 = staticinvoke <androidx.compose.ui.unit.ConstraintsKt: long Constraints$default(int,int,int,int,int,java.lang.Object)>(0, 0, 0, i0, 7, null);

        $r9 = new androidx.compose.ui.layout.IntrinsicsMeasureScope;

        $r10 = (androidx.compose.ui.unit.Density) r2;

        $r11 = interfaceinvoke r2.<androidx.compose.ui.layout.IntrinsicMeasureScope: androidx.compose.ui.unit.LayoutDirection getLayoutDirection()>();

        specialinvoke $r9.<androidx.compose.ui.layout.IntrinsicsMeasureScope: void <init>(androidx.compose.ui.unit.Density,androidx.compose.ui.unit.LayoutDirection)>($r10, $r11);

        $r13 = (androidx.compose.ui.layout.MeasureScope) $r9;

        $r12 = (androidx.compose.ui.layout.Measurable) r4;

        r5 = interfaceinvoke r1.<androidx.compose.ui.node.LayoutModifierNode: androidx.compose.ui.layout.MeasureResult measure-3p2s80s(androidx.compose.ui.layout.MeasureScope,androidx.compose.ui.layout.Measurable,long)>($r13, $r12, l1);

        $i2 = interfaceinvoke r5.<androidx.compose.ui.layout.MeasureResult: int getWidth()>();

        return $i2;
    }

    public final int maxHeight$ui_release(androidx.compose.ui.node.LayoutModifierNode, androidx.compose.ui.layout.IntrinsicMeasureScope, androidx.compose.ui.layout.IntrinsicMeasurable, int)
    {
        androidx.compose.ui.node.NodeMeasuringIntrinsics r0;
        androidx.compose.ui.node.LayoutModifierNode r1;
        androidx.compose.ui.layout.IntrinsicMeasureScope r2;
        androidx.compose.ui.layout.IntrinsicMeasurable r3;
        int i0, $i2;
        androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable r4, $r6;
        long l1;
        androidx.compose.ui.layout.MeasureResult r5;
        androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight $r7;
        androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax $r8;
        androidx.compose.ui.layout.IntrinsicsMeasureScope $r9;
        androidx.compose.ui.unit.Density $r10;
        androidx.compose.ui.unit.LayoutDirection $r11;
        androidx.compose.ui.layout.Measurable $r12;
        androidx.compose.ui.layout.MeasureScope $r13;

        r0 := @this: androidx.compose.ui.node.NodeMeasuringIntrinsics;

        r1 := @parameter0: androidx.compose.ui.node.LayoutModifierNode;

        r2 := @parameter1: androidx.compose.ui.layout.IntrinsicMeasureScope;

        r3 := @parameter2: androidx.compose.ui.layout.IntrinsicMeasurable;

        i0 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "node");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "instrinsicMeasureScope");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "intrinsicMeasurable");

        $r6 = new androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable;

        $r8 = <androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax Max>;

        $r7 = <androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight Height>;

        specialinvoke $r6.<androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable: void <init>(androidx.compose.ui.layout.IntrinsicMeasurable,androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax,androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight)>(r3, $r8, $r7);

        r4 = $r6;

        l1 = staticinvoke <androidx.compose.ui.unit.ConstraintsKt: long Constraints$default(int,int,int,int,int,java.lang.Object)>(0, i0, 0, 0, 13, null);

        $r9 = new androidx.compose.ui.layout.IntrinsicsMeasureScope;

        $r10 = (androidx.compose.ui.unit.Density) r2;

        $r11 = interfaceinvoke r2.<androidx.compose.ui.layout.IntrinsicMeasureScope: androidx.compose.ui.unit.LayoutDirection getLayoutDirection()>();

        specialinvoke $r9.<androidx.compose.ui.layout.IntrinsicsMeasureScope: void <init>(androidx.compose.ui.unit.Density,androidx.compose.ui.unit.LayoutDirection)>($r10, $r11);

        $r13 = (androidx.compose.ui.layout.MeasureScope) $r9;

        $r12 = (androidx.compose.ui.layout.Measurable) r4;

        r5 = interfaceinvoke r1.<androidx.compose.ui.node.LayoutModifierNode: androidx.compose.ui.layout.MeasureResult measure-3p2s80s(androidx.compose.ui.layout.MeasureScope,androidx.compose.ui.layout.Measurable,long)>($r13, $r12, l1);

        $i2 = interfaceinvoke r5.<androidx.compose.ui.layout.MeasureResult: int getHeight()>();

        return $i2;
    }

    static void <clinit>()
    {
        androidx.compose.ui.node.NodeMeasuringIntrinsics $r0;

        $r0 = new androidx.compose.ui.node.NodeMeasuringIntrinsics;

        specialinvoke $r0.<androidx.compose.ui.node.NodeMeasuringIntrinsics: void <init>()>();

        <androidx.compose.ui.node.NodeMeasuringIntrinsics: androidx.compose.ui.node.NodeMeasuringIntrinsics INSTANCE> = $r0;

        return;
    }

androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable
<androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable: androidx.compose.ui.layout.IntrinsicMeasurable measurable>
<androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax minMax>
<androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight widthHeight>
    public void <init>(androidx.compose.ui.layout.IntrinsicMeasurable, androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax, androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight)
    {
        androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable r0;
        androidx.compose.ui.layout.IntrinsicMeasurable r1;
        androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax r2;
        androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight r3;

        r0 := @this: androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable;

        r1 := @parameter0: androidx.compose.ui.layout.IntrinsicMeasurable;

        r2 := @parameter1: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax;

        r3 := @parameter2: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "measurable");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "minMax");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "widthHeight");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable: androidx.compose.ui.layout.IntrinsicMeasurable measurable> = r1;

        r0.<androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax minMax> = r2;

        r0.<androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight widthHeight> = r3;

        return;
    }

    public final androidx.compose.ui.layout.IntrinsicMeasurable getMeasurable()
    {
        androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable r0;
        androidx.compose.ui.layout.IntrinsicMeasurable $r1;

        r0 := @this: androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable;

        $r1 = r0.<androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable: androidx.compose.ui.layout.IntrinsicMeasurable measurable>;

        return $r1;
    }

    public final androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax getMinMax()
    {
        androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable r0;
        androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax $r1;

        r0 := @this: androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable;

        $r1 = r0.<androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax minMax>;

        return $r1;
    }

    public final androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight getWidthHeight()
    {
        androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable r0;
        androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight $r1;

        r0 := @this: androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable;

        $r1 = r0.<androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight widthHeight>;

        return $r1;
    }

    public java.lang.Object getParentData()
    {
        androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable r0;
        androidx.compose.ui.layout.IntrinsicMeasurable $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable;

        $r1 = r0.<androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable: androidx.compose.ui.layout.IntrinsicMeasurable measurable>;

        $r2 = interfaceinvoke $r1.<androidx.compose.ui.layout.IntrinsicMeasurable: java.lang.Object getParentData()>();

        return $r2;
    }

    public androidx.compose.ui.layout.Placeable measure-BRTryo0(long)
    {
        androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable r0;
        long l0;
        androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight $r1, $r2;
        androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax $r3, $r4, $r9, $r10;
        androidx.compose.ui.layout.IntrinsicMeasurable $r5, $r8, $r11, $r14;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, i10;
        androidx.compose.ui.node.NodeMeasuringIntrinsics$EmptyPlaceable $r6, $r12;
        androidx.compose.ui.layout.Placeable $r7, $r13;

        r0 := @this: androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable;

        l0 := @parameter0: long;

        $r2 = r0.<androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight widthHeight>;

        $r1 = <androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight Width>;

        if $r2 != $r1 goto label3;

        $r10 = r0.<androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax minMax>;

        $r9 = <androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax Max>;

        if $r10 != $r9 goto label1;

        $r14 = r0.<androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable: androidx.compose.ui.layout.IntrinsicMeasurable measurable>;

        $i6 = staticinvoke <androidx.compose.ui.unit.Constraints: int getMaxHeight-impl(long)>(l0);

        $i7 = interfaceinvoke $r14.<androidx.compose.ui.layout.IntrinsicMeasurable: int maxIntrinsicWidth(int)>($i6);

        goto label2;

     label1:
        $r11 = r0.<androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable: androidx.compose.ui.layout.IntrinsicMeasurable measurable>;

        $i4 = staticinvoke <androidx.compose.ui.unit.Constraints: int getMaxHeight-impl(long)>(l0);

        $i7 = interfaceinvoke $r11.<androidx.compose.ui.layout.IntrinsicMeasurable: int minIntrinsicWidth(int)>($i4);

     label2:
        i8 = $i7;

        $r12 = new androidx.compose.ui.node.NodeMeasuringIntrinsics$EmptyPlaceable;

        $i5 = staticinvoke <androidx.compose.ui.unit.Constraints: int getMaxHeight-impl(long)>(l0);

        specialinvoke $r12.<androidx.compose.ui.node.NodeMeasuringIntrinsics$EmptyPlaceable: void <init>(int,int)>(i8, $i5);

        $r13 = (androidx.compose.ui.layout.Placeable) $r12;

        return $r13;

     label3:
        $r4 = r0.<androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax minMax>;

        $r3 = <androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax Max>;

        if $r4 != $r3 goto label4;

        $r8 = r0.<androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable: androidx.compose.ui.layout.IntrinsicMeasurable measurable>;

        $i3 = staticinvoke <androidx.compose.ui.unit.Constraints: int getMaxWidth-impl(long)>(l0);

        $i9 = interfaceinvoke $r8.<androidx.compose.ui.layout.IntrinsicMeasurable: int maxIntrinsicHeight(int)>($i3);

        goto label5;

     label4:
        $r5 = r0.<androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable: androidx.compose.ui.layout.IntrinsicMeasurable measurable>;

        $i1 = staticinvoke <androidx.compose.ui.unit.Constraints: int getMaxWidth-impl(long)>(l0);

        $i9 = interfaceinvoke $r5.<androidx.compose.ui.layout.IntrinsicMeasurable: int minIntrinsicHeight(int)>($i1);

     label5:
        i10 = $i9;

        $r6 = new androidx.compose.ui.node.NodeMeasuringIntrinsics$EmptyPlaceable;

        $i2 = staticinvoke <androidx.compose.ui.unit.Constraints: int getMaxWidth-impl(long)>(l0);

        specialinvoke $r6.<androidx.compose.ui.node.NodeMeasuringIntrinsics$EmptyPlaceable: void <init>(int,int)>($i2, i10);

        $r7 = (androidx.compose.ui.layout.Placeable) $r6;

        return $r7;
    }

    public int minIntrinsicWidth(int)
    {
        androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable r0;
        int i0, $i1;
        androidx.compose.ui.layout.IntrinsicMeasurable $r1;

        r0 := @this: androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable: androidx.compose.ui.layout.IntrinsicMeasurable measurable>;

        $i1 = interfaceinvoke $r1.<androidx.compose.ui.layout.IntrinsicMeasurable: int minIntrinsicWidth(int)>(i0);

        return $i1;
    }

    public int maxIntrinsicWidth(int)
    {
        androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable r0;
        int i0, $i1;
        androidx.compose.ui.layout.IntrinsicMeasurable $r1;

        r0 := @this: androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable: androidx.compose.ui.layout.IntrinsicMeasurable measurable>;

        $i1 = interfaceinvoke $r1.<androidx.compose.ui.layout.IntrinsicMeasurable: int maxIntrinsicWidth(int)>(i0);

        return $i1;
    }

    public int minIntrinsicHeight(int)
    {
        androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable r0;
        int i0, $i1;
        androidx.compose.ui.layout.IntrinsicMeasurable $r1;

        r0 := @this: androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable: androidx.compose.ui.layout.IntrinsicMeasurable measurable>;

        $i1 = interfaceinvoke $r1.<androidx.compose.ui.layout.IntrinsicMeasurable: int minIntrinsicHeight(int)>(i0);

        return $i1;
    }

    public int maxIntrinsicHeight(int)
    {
        androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable r0;
        int i0, $i1;
        androidx.compose.ui.layout.IntrinsicMeasurable $r1;

        r0 := @this: androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.node.NodeMeasuringIntrinsics$DefaultIntrinsicMeasurable: androidx.compose.ui.layout.IntrinsicMeasurable measurable>;

        $i1 = interfaceinvoke $r1.<androidx.compose.ui.layout.IntrinsicMeasurable: int maxIntrinsicHeight(int)>(i0);

        return $i1;
    }

androidx.compose.ui.node.NodeMeasuringIntrinsics$EmptyPlaceable
    public void <init>(int, int)
    {
        androidx.compose.ui.node.NodeMeasuringIntrinsics$EmptyPlaceable r0;
        int i0, i1;
        long $l2;

        r0 := @this: androidx.compose.ui.node.NodeMeasuringIntrinsics$EmptyPlaceable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<androidx.compose.ui.layout.Placeable: void <init>()>();

        $l2 = staticinvoke <androidx.compose.ui.unit.IntSizeKt: long IntSize(int,int)>(i0, i1);

        virtualinvoke r0.<androidx.compose.ui.node.NodeMeasuringIntrinsics$EmptyPlaceable: void setMeasuredSize-ozmzZPI(long)>($l2);

        return;
    }

    public int get(androidx.compose.ui.layout.AlignmentLine)
    {
        androidx.compose.ui.node.NodeMeasuringIntrinsics$EmptyPlaceable r0;
        androidx.compose.ui.layout.AlignmentLine r1;

        r0 := @this: androidx.compose.ui.node.NodeMeasuringIntrinsics$EmptyPlaceable;

        r1 := @parameter0: androidx.compose.ui.layout.AlignmentLine;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "alignmentLine");

        return -2147483648;
    }

    protected void placeAt-f8xVGno(long, float, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.node.NodeMeasuringIntrinsics$EmptyPlaceable r0;
        long l0;
        float f0;
        kotlin.jvm.functions.Function1 r1;

        r0 := @this: androidx.compose.ui.node.NodeMeasuringIntrinsics$EmptyPlaceable;

        l0 := @parameter0: long;

        f0 := @parameter1: float;

        r1 := @parameter2: kotlin.jvm.functions.Function1;

        return;
    }

androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax
<androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax Min>
<androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax Max>
<androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax[] $VALUES>
    private void <init>(java.lang.String, int)
    {
        androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax[] values()
    {
        androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax[]) $r1;

        return $r2;
    }

    public static androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/compose/ui/node/NodeMeasuringIntrinsics$IntrinsicMinMax;", r0);

        $r2 = (androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax) $r1;

        return $r2;
    }

    private static final androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax[] $values()
    {
        androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax[] r0;
        androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax $r1, $r2;

        r0 = newarray (androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax)[2];

        $r1 = <androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax Min>;

        r0[0] = $r1;

        $r2 = <androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax Max>;

        r0[1] = $r2;

        return r0;
    }

    static void <clinit>()
    {
        androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax $r0, $r1;
        androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax[] $r2;

        $r0 = new androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax;

        specialinvoke $r0.<androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax: void <init>(java.lang.String,int)>("Min", 0);

        <androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax Min> = $r0;

        $r1 = new androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax;

        specialinvoke $r1.<androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax: void <init>(java.lang.String,int)>("Max", 1);

        <androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax Max> = $r1;

        $r2 = staticinvoke <androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax[] $values()>();

        <androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax[] $VALUES> = $r2;

        return;
    }

androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight
<androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight Width>
<androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight Height>
<androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight[] $VALUES>
    private void <init>(java.lang.String, int)
    {
        androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight[] values()
    {
        androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight[]) $r1;

        return $r2;
    }

    public static androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/compose/ui/node/NodeMeasuringIntrinsics$IntrinsicWidthHeight;", r0);

        $r2 = (androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight) $r1;

        return $r2;
    }

    private static final androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight[] $values()
    {
        androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight[] r0;
        androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight $r1, $r2;

        r0 = newarray (androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight)[2];

        $r1 = <androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight Width>;

        r0[0] = $r1;

        $r2 = <androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight Height>;

        r0[1] = $r2;

        return r0;
    }

    static void <clinit>()
    {
        androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight $r0, $r1;
        androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight[] $r2;

        $r0 = new androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight;

        specialinvoke $r0.<androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight: void <init>(java.lang.String,int)>("Width", 0);

        <androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight Width> = $r0;

        $r1 = new androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight;

        specialinvoke $r1.<androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight: void <init>(java.lang.String,int)>("Height", 1);

        <androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight Height> = $r1;

        $r2 = staticinvoke <androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight[] $values()>();

        <androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight[] $VALUES> = $r2;

        return;
    }

