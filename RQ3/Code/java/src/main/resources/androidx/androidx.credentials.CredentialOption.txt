androidx.credentials.CredentialOption
<androidx.credentials.CredentialOption: androidx.credentials.CredentialOption$Companion Companion>
<androidx.credentials.CredentialOption: java.lang.String type>
<androidx.credentials.CredentialOption: android.os.Bundle requestData>
<androidx.credentials.CredentialOption: android.os.Bundle candidateQueryData>
<androidx.credentials.CredentialOption: boolean isSystemProviderRequired>
<androidx.credentials.CredentialOption: boolean isAutoSelectAllowed>
<androidx.credentials.CredentialOption: java.lang.String BUNDLE_KEY_IS_AUTO_SELECT_ALLOWED>
    public void <init>(java.lang.String, android.os.Bundle, android.os.Bundle, boolean, boolean)
    {
        androidx.credentials.CredentialOption r0;
        java.lang.String r1;
        android.os.Bundle r2, r3, $r4, $r5, r6, r7;
        boolean z0, z1, $z2, $z3;

        r0 := @this: androidx.credentials.CredentialOption;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: android.os.Bundle;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "type");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "requestData");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "candidateQueryData");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.credentials.CredentialOption: java.lang.String type> = r1;

        r0.<androidx.credentials.CredentialOption: android.os.Bundle requestData> = r2;

        r0.<androidx.credentials.CredentialOption: android.os.Bundle candidateQueryData> = r3;

        r0.<androidx.credentials.CredentialOption: boolean isSystemProviderRequired> = z0;

        r0.<androidx.credentials.CredentialOption: boolean isAutoSelectAllowed> = z1;

        $r4 = virtualinvoke r0.<androidx.credentials.CredentialOption: android.os.Bundle getRequestData()>();

        if $r4 == null goto label1;

        r6 = $r4;

        $z3 = virtualinvoke r0.<androidx.credentials.CredentialOption: boolean isAutoSelectAllowed()>();

        virtualinvoke r6.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("androidx.credentials.BUNDLE_KEY_IS_AUTO_SELECT_ALLOWED", $z3);

        goto label1;

     label1:
        $r5 = virtualinvoke r0.<androidx.credentials.CredentialOption: android.os.Bundle getCandidateQueryData()>();

        if $r5 == null goto label2;

        r7 = $r5;

        $z2 = virtualinvoke r0.<androidx.credentials.CredentialOption: boolean isAutoSelectAllowed()>();

        virtualinvoke r7.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("androidx.credentials.BUNDLE_KEY_IS_AUTO_SELECT_ALLOWED", $z2);

        goto label2;

     label2:
        return;
    }

    public java.lang.String getType()
    {
        androidx.credentials.CredentialOption r0;
        java.lang.String $r1;

        r0 := @this: androidx.credentials.CredentialOption;

        $r1 = r0.<androidx.credentials.CredentialOption: java.lang.String type>;

        return $r1;
    }

    public android.os.Bundle getRequestData()
    {
        androidx.credentials.CredentialOption r0;
        android.os.Bundle $r1;

        r0 := @this: androidx.credentials.CredentialOption;

        $r1 = r0.<androidx.credentials.CredentialOption: android.os.Bundle requestData>;

        return $r1;
    }

    public android.os.Bundle getCandidateQueryData()
    {
        androidx.credentials.CredentialOption r0;
        android.os.Bundle $r1;

        r0 := @this: androidx.credentials.CredentialOption;

        $r1 = r0.<androidx.credentials.CredentialOption: android.os.Bundle candidateQueryData>;

        return $r1;
    }

    public boolean isSystemProviderRequired()
    {
        androidx.credentials.CredentialOption r0;
        boolean $z0;

        r0 := @this: androidx.credentials.CredentialOption;

        $z0 = r0.<androidx.credentials.CredentialOption: boolean isSystemProviderRequired>;

        return $z0;
    }

    public boolean isAutoSelectAllowed()
    {
        androidx.credentials.CredentialOption r0;
        boolean $z0;

        r0 := @this: androidx.credentials.CredentialOption;

        $z0 = r0.<androidx.credentials.CredentialOption: boolean isAutoSelectAllowed>;

        return $z0;
    }

    public static final androidx.credentials.CredentialOption createFrom(java.lang.String, android.os.Bundle, android.os.Bundle, boolean)
    {
        java.lang.String r0;
        android.os.Bundle r1, r2;
        boolean z0;
        androidx.credentials.CredentialOption$Companion $r3;
        androidx.credentials.CredentialOption $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.Bundle;

        r2 := @parameter2: android.os.Bundle;

        z0 := @parameter3: boolean;

        $r3 = <androidx.credentials.CredentialOption: androidx.credentials.CredentialOption$Companion Companion>;

        $r4 = virtualinvoke $r3.<androidx.credentials.CredentialOption$Companion: androidx.credentials.CredentialOption createFrom(java.lang.String,android.os.Bundle,android.os.Bundle,boolean)>(r0, r1, r2, z0);

        return $r4;
    }

    static void <clinit>()
    {
        androidx.credentials.CredentialOption$Companion $r0;

        $r0 = new androidx.credentials.CredentialOption$Companion;

        specialinvoke $r0.<androidx.credentials.CredentialOption$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.credentials.CredentialOption: androidx.credentials.CredentialOption$Companion Companion> = $r0;

        return;
    }

androidx.credentials.CredentialOption$Companion
    private void <init>()
    {
        androidx.credentials.CredentialOption$Companion r0;

        r0 := @this: androidx.credentials.CredentialOption$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void getBUNDLE_KEY_IS_AUTO_SELECT_ALLOWED$annotations()
    {
        return;
    }

    public final boolean extractAutoSelectValue$credentials_release(android.os.Bundle)
    {
        androidx.credentials.CredentialOption$Companion r0;
        android.os.Bundle r1;
        boolean $z0;

        r0 := @this: androidx.credentials.CredentialOption$Companion;

        r1 := @parameter0: android.os.Bundle;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "data");

        $z0 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("androidx.credentials.BUNDLE_KEY_IS_AUTO_SELECT_ALLOWED");

        return $z0;
    }

    public final androidx.credentials.CredentialOption createFrom(java.lang.String, android.os.Bundle, android.os.Bundle, boolean)
    {
        androidx.credentials.CredentialOption$Companion r0;
        java.lang.String r1, r4, r10;
        android.os.Bundle r2, r3;
        boolean z0, $z1, $z2, $z3;
        int $i0;
        androidx.credentials.GetPublicKeyCredentialOption$Companion $r6;
        androidx.credentials.GetPublicKeyCredentialOption $r7;
        androidx.credentials.GetPasswordOption$Companion $r8;
        androidx.credentials.GetPasswordOption $r9;
        androidx.credentials.CredentialOption $r11, r13;
        androidx.credentials.internal.FrameworkClassParsingException r14, r15;
        java.lang.Throwable r16, r17;

        r0 := @this: androidx.credentials.CredentialOption$Companion;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: android.os.Bundle;

        z0 := @parameter3: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "type");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "requestData");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "candidateQueryData");

        r10 = r1;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r10, "android.credentials.TYPE_PASSWORD_CREDENTIAL");

        if $z1 == 0 goto label1;

        $r8 = <androidx.credentials.GetPasswordOption: androidx.credentials.GetPasswordOption$Companion Companion>;

        $r9 = virtualinvoke $r8.<androidx.credentials.GetPasswordOption$Companion: androidx.credentials.GetPasswordOption createFrom$credentials_release(android.os.Bundle)>(r2);

        $r11 = (androidx.credentials.CredentialOption) $r9;

        goto label6;

     label1:
        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r10, "androidx.credentials.TYPE_PUBLIC_KEY_CREDENTIAL");

        if $z2 == 0 goto label5;

        r4 = virtualinvoke r2.<android.os.Bundle: java.lang.String getString(java.lang.String)>("androidx.credentials.BUNDLE_KEY_SUBTYPE");

        if r4 == null goto label3;

        $i0 = virtualinvoke r4.<java.lang.String: int hashCode()>();

        tableswitch($i0)
        {
            case -613058807: goto label2;
            default: goto label3;
        };

     label2:
        $z3 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("androidx.credentials.BUNDLE_VALUE_SUBTYPE_GET_PUBLIC_KEY_CREDENTIAL_OPTION");

        if $z3 == 0 goto label3;

        $r6 = <androidx.credentials.GetPublicKeyCredentialOption: androidx.credentials.GetPublicKeyCredentialOption$Companion Companion>;

        $r7 = virtualinvoke $r6.<androidx.credentials.GetPublicKeyCredentialOption$Companion: androidx.credentials.GetPublicKeyCredentialOption createFrom$credentials_release(android.os.Bundle)>(r2);

        goto label4;

     label3:
        r14 = new androidx.credentials.internal.FrameworkClassParsingException;

        specialinvoke r14.<androidx.credentials.internal.FrameworkClassParsingException: void <init>()>();

        r16 = (java.lang.Throwable) r14;

        throw r16;

     label4:
        $r11 = (androidx.credentials.CredentialOption) $r7;

        goto label6;

     label5:
        r15 = new androidx.credentials.internal.FrameworkClassParsingException;

        specialinvoke r15.<androidx.credentials.internal.FrameworkClassParsingException: void <init>()>();

        r17 = (java.lang.Throwable) r15;

        throw r17;

     label6:
        r13 = $r11;

        goto label7;

     label7:
        return r13;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.credentials.CredentialOption$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.credentials.CredentialOption$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.credentials.CredentialOption$Companion: void <init>()>();

        return;
    }

