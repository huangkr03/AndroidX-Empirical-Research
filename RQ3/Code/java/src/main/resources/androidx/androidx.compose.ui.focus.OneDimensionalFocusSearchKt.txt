androidx.compose.ui.focus.OneDimensionalFocusSearchKt
<androidx.compose.ui.focus.OneDimensionalFocusSearchKt: java.lang.String InvalidFocusDirection>
<androidx.compose.ui.focus.OneDimensionalFocusSearchKt: java.lang.String NoActiveChild>
    public static final boolean oneDimensionalFocusSearch--OM-vw8(androidx.compose.ui.focus.FocusModifier, int, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.focus.FocusModifier $r0;
        int i0, i1, $i2, $i3;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.ui.focus.FocusDirection$Companion $r2, $r3;
        boolean $z0, $z1, $z2;
        java.lang.IllegalStateException $r4;
        java.lang.String $r5, $r6;

        $r0 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        i0 := @parameter1: int;

        r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$oneDimensionalFocusSearch");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "onFound");

        i1 = i0;

        $r2 = <androidx.compose.ui.focus.FocusDirection: androidx.compose.ui.focus.FocusDirection$Companion Companion>;

        $i2 = virtualinvoke $r2.<androidx.compose.ui.focus.FocusDirection$Companion: int getNext-dhqQ-8s()>();

        $z0 = staticinvoke <androidx.compose.ui.focus.FocusDirection: boolean equals-impl0(int,int)>(i1, $i2);

        if $z0 == 0 goto label1;

        $z2 = staticinvoke <androidx.compose.ui.focus.OneDimensionalFocusSearchKt: boolean forwardFocusSearch(androidx.compose.ui.focus.FocusModifier,kotlin.jvm.functions.Function1)>($r0, r1);

        goto label3;

     label1:
        $r3 = <androidx.compose.ui.focus.FocusDirection: androidx.compose.ui.focus.FocusDirection$Companion Companion>;

        $i3 = virtualinvoke $r3.<androidx.compose.ui.focus.FocusDirection$Companion: int getPrevious-dhqQ-8s()>();

        $z1 = staticinvoke <androidx.compose.ui.focus.FocusDirection: boolean equals-impl0(int,int)>(i1, $i3);

        if $z1 == 0 goto label2;

        $z2 = staticinvoke <androidx.compose.ui.focus.OneDimensionalFocusSearchKt: boolean backwardFocusSearch(androidx.compose.ui.focus.FocusModifier,kotlin.jvm.functions.Function1)>($r0, r1);

        goto label3;

     label2:
        $r4 = new java.lang.IllegalStateException;

        $r5 = "This function should only be used for 1-D focus search";

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label3:
        return $z2;
    }

    private static final boolean forwardFocusSearch(androidx.compose.ui.focus.FocusModifier, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.focus.FocusModifier $r0, r2, $r7;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.ui.focus.FocusStateImpl $r3;
        int[] $r4;
        int $i0, $i1, $i2;
        java.lang.Object $r5;
        java.lang.Boolean $r6;
        boolean $z0, $z1, $z2;
        androidx.compose.ui.focus.FocusDirection$Companion $r8;
        java.lang.IllegalStateException $r9;
        java.lang.String $r10, $r11;
        kotlin.NoWhenBranchMatchedException $r12;

        $r0 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r3 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusStateImpl getFocusState()>();

        $r4 = <androidx.compose.ui.focus.OneDimensionalFocusSearchKt$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke $r3.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        $i1 = $r4[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label5;
            case 4: goto label5;
            case 5: goto label5;
            case 6: goto label6;
            default: goto label7;
        };

     label1:
        $r7 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusModifier getFocusedChild()>();

        if $r7 != null goto label2;

        $r9 = new java.lang.IllegalStateException;

        $r10 = "ActiveParent must have a focusedChild";

        $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r9;

     label2:
        r2 = $r7;

        $z0 = staticinvoke <androidx.compose.ui.focus.OneDimensionalFocusSearchKt: boolean forwardFocusSearch(androidx.compose.ui.focus.FocusModifier,kotlin.jvm.functions.Function1)>(r2, r1);

        if $z0 != 0 goto label3;

        $r8 = <androidx.compose.ui.focus.FocusDirection: androidx.compose.ui.focus.FocusDirection$Companion Companion>;

        $i2 = virtualinvoke $r8.<androidx.compose.ui.focus.FocusDirection$Companion: int getNext-dhqQ-8s()>();

        $z1 = staticinvoke <androidx.compose.ui.focus.OneDimensionalFocusSearchKt: boolean generateAndSearchChildren-4C6V_qg(androidx.compose.ui.focus.FocusModifier,androidx.compose.ui.focus.FocusModifier,int,kotlin.jvm.functions.Function1)>($r0, r2, $i2, r1);

        if $z1 == 0 goto label4;

     label3:
        $z2 = 1;

        goto label8;

     label4:
        $z2 = 0;

        goto label8;

     label5:
        $z2 = staticinvoke <androidx.compose.ui.focus.OneDimensionalFocusSearchKt: boolean pickChildForForwardSearch(androidx.compose.ui.focus.FocusModifier,kotlin.jvm.functions.Function1)>($r0, r1);

        goto label8;

     label6:
        $r5 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

        $r6 = (java.lang.Boolean) $r5;

        $z2 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        goto label8;

     label7:
        $r12 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r12.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r12;

     label8:
        return $z2;
    }

    private static final boolean backwardFocusSearch(androidx.compose.ui.focus.FocusModifier, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.focus.FocusModifier $r0, r2, $r7;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.ui.focus.FocusStateImpl $r3, $r8;
        int[] $r4, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Object $r5, $r15;
        java.lang.Boolean $r6, $r16;
        java.lang.IllegalStateException $r10, $r18;
        java.lang.String $r11, $r12, $r19, $r20;
        androidx.compose.ui.focus.FocusDirection$Companion $r13, $r14;
        kotlin.NoWhenBranchMatchedException $r17, $r21;

        $r0 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r3 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusStateImpl getFocusState()>();

        $r4 = <androidx.compose.ui.focus.OneDimensionalFocusSearchKt$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke $r3.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        $i1 = $r4[$i0];

        tableswitch($i1)
        {
            case 1: goto label01;
            case 2: goto label01;
            case 3: goto label12;
            case 4: goto label12;
            case 5: goto label12;
            case 6: goto label13;
            default: goto label16;
        };

     label01:
        $r7 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusModifier getFocusedChild()>();

        if $r7 != null goto label02;

        $r18 = new java.lang.IllegalStateException;

        $r19 = "ActiveParent must have a focusedChild";

        $r20 = virtualinvoke $r19.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r20);

        throw $r18;

     label02:
        r2 = $r7;

        $r8 = virtualinvoke r2.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusStateImpl getFocusState()>();

        $r9 = <androidx.compose.ui.focus.OneDimensionalFocusSearchKt$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i2 = virtualinvoke $r8.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        $i3 = $r9[$i2];

        tableswitch($i3)
        {
            case 1: goto label03;
            case 2: goto label06;
            case 3: goto label09;
            case 4: goto label09;
            case 5: goto label10;
            case 6: goto label10;
            default: goto label11;
        };

     label03:
        $z4 = staticinvoke <androidx.compose.ui.focus.OneDimensionalFocusSearchKt: boolean backwardFocusSearch(androidx.compose.ui.focus.FocusModifier,kotlin.jvm.functions.Function1)>(r2, r1);

        if $z4 != 0 goto label04;

        $r15 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r2);

        $r16 = (java.lang.Boolean) $r15;

        $z5 = virtualinvoke $r16.<java.lang.Boolean: boolean booleanValue()>();

        if $z5 == 0 goto label05;

     label04:
        $z6 = 1;

        goto label17;

     label05:
        $z6 = 0;

        goto label17;

     label06:
        $z2 = staticinvoke <androidx.compose.ui.focus.OneDimensionalFocusSearchKt: boolean backwardFocusSearch(androidx.compose.ui.focus.FocusModifier,kotlin.jvm.functions.Function1)>(r2, r1);

        if $z2 != 0 goto label07;

        $r14 = <androidx.compose.ui.focus.FocusDirection: androidx.compose.ui.focus.FocusDirection$Companion Companion>;

        $i5 = virtualinvoke $r14.<androidx.compose.ui.focus.FocusDirection$Companion: int getPrevious-dhqQ-8s()>();

        $z3 = staticinvoke <androidx.compose.ui.focus.OneDimensionalFocusSearchKt: boolean generateAndSearchChildren-4C6V_qg(androidx.compose.ui.focus.FocusModifier,androidx.compose.ui.focus.FocusModifier,int,kotlin.jvm.functions.Function1)>($r0, r2, $i5, r1);

        if $z3 == 0 goto label08;

     label07:
        $z6 = 1;

        goto label17;

     label08:
        $z6 = 0;

        goto label17;

     label09:
        $r13 = <androidx.compose.ui.focus.FocusDirection: androidx.compose.ui.focus.FocusDirection$Companion Companion>;

        $i4 = virtualinvoke $r13.<androidx.compose.ui.focus.FocusDirection$Companion: int getPrevious-dhqQ-8s()>();

        $z6 = staticinvoke <androidx.compose.ui.focus.OneDimensionalFocusSearchKt: boolean generateAndSearchChildren-4C6V_qg(androidx.compose.ui.focus.FocusModifier,androidx.compose.ui.focus.FocusModifier,int,kotlin.jvm.functions.Function1)>($r0, r2, $i4, r1);

        goto label17;

     label10:
        $r10 = new java.lang.IllegalStateException;

        $r11 = "ActiveParent must have a focusedChild";

        $r12 = virtualinvoke $r11.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r10;

     label11:
        $r17 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r17.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r17;

     label12:
        $z6 = staticinvoke <androidx.compose.ui.focus.OneDimensionalFocusSearchKt: boolean pickChildForBackwardSearch(androidx.compose.ui.focus.FocusModifier,kotlin.jvm.functions.Function1)>($r0, r1);

        goto label17;

     label13:
        $z0 = staticinvoke <androidx.compose.ui.focus.OneDimensionalFocusSearchKt: boolean pickChildForBackwardSearch(androidx.compose.ui.focus.FocusModifier,kotlin.jvm.functions.Function1)>($r0, r1);

        if $z0 != 0 goto label14;

        $r5 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

        $r6 = (java.lang.Boolean) $r5;

        $z1 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label15;

     label14:
        $z6 = 1;

        goto label17;

     label15:
        $z6 = 0;

        goto label17;

     label16:
        $r21 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r21.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r21;

     label17:
        return $z6;
    }

    private static final boolean generateAndSearchChildren-4C6V_qg(androidx.compose.ui.focus.FocusModifier, androidx.compose.ui.focus.FocusModifier, int, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.focus.FocusModifier $r0, r1;
        int i0;
        kotlin.jvm.functions.Function1 r2, $r4;
        boolean $z0, $z1;
        androidx.compose.ui.focus.OneDimensionalFocusSearchKt$generateAndSearchChildren$1 $r3;
        java.lang.Object $r5;
        java.lang.Boolean $r6;

        $r0 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        r1 := @parameter1: androidx.compose.ui.focus.FocusModifier;

        i0 := @parameter2: int;

        r2 := @parameter3: kotlin.jvm.functions.Function1;

        $z0 = staticinvoke <androidx.compose.ui.focus.OneDimensionalFocusSearchKt: boolean searchChildren-4C6V_qg(androidx.compose.ui.focus.FocusModifier,androidx.compose.ui.focus.FocusModifier,int,kotlin.jvm.functions.Function1)>($r0, r1, i0, r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r3 = new androidx.compose.ui.focus.OneDimensionalFocusSearchKt$generateAndSearchChildren$1;

        specialinvoke $r3.<androidx.compose.ui.focus.OneDimensionalFocusSearchKt$generateAndSearchChildren$1: void <init>(androidx.compose.ui.focus.FocusModifier,androidx.compose.ui.focus.FocusModifier,int,kotlin.jvm.functions.Function1)>($r0, r1, i0, r2);

        $r4 = (kotlin.jvm.functions.Function1) $r3;

        $r5 = staticinvoke <androidx.compose.ui.focus.BeyondBoundsLayoutKt: java.lang.Object searchBeyondBounds--OM-vw8(androidx.compose.ui.focus.FocusModifier,int,kotlin.jvm.functions.Function1)>($r0, i0, $r4);

        $r6 = (java.lang.Boolean) $r5;

        if $r6 == null goto label2;

        $z1 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    private static final boolean searchChildren-4C6V_qg(androidx.compose.ui.focus.FocusModifier, androidx.compose.ui.focus.FocusModifier, int, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.focus.FocusModifier $r0, r1, r33, r41;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, i11, $i12;
        kotlin.jvm.functions.Function1 r2;
        androidx.compose.ui.focus.FocusStateImpl $r3, $r4, $r15, $r16, $r26, $r27;
        androidx.compose.runtime.collection.MutableVector $r5, $r29, r30, r32, r34, $r37, r38, r40, r42;
        androidx.compose.ui.focus.FocusableChildrenComparator $r6;
        java.util.Comparator $r7;
        androidx.compose.ui.focus.FocusDirection$Companion $r8, $r9, $r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z12, $z17, z19, $z24;
        java.lang.IllegalStateException $r10, $r24;
        java.lang.String $r11, $r12, $r25, $r28;
        kotlin.ranges.IntRange $r13, $r21, r31, r39;
        java.lang.Object $r17, $r20, $r23, $r36, $r44;
        java.lang.Boolean $r18;
        java.lang.Object[] $r19, $r22, $r35, $r43;

        $r0 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        r1 := @parameter1: androidx.compose.ui.focus.FocusModifier;

        i0 := @parameter2: int;

        r2 := @parameter3: kotlin.jvm.functions.Function1;

        $r3 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusStateImpl getFocusState()>();

        $r4 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl ActiveParent>;

        if $r3 == $r4 goto label01;

        $r26 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusStateImpl getFocusState()>();

        $r27 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl DeactivatedParent>;

        if $r26 != $r27 goto label02;

     label01:
        $z9 = 1;

        goto label03;

     label02:
        $z9 = 0;

     label03:
        if $z9 != 0 goto label04;

        $r28 = "This function should only be used within a parent that has focus.";

        $r24 = new java.lang.IllegalStateException;

        $r25 = virtualinvoke $r28.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r25);

        throw $r24;

     label04:
        $r5 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.runtime.collection.MutableVector getChildren()>();

        $r6 = <androidx.compose.ui.focus.FocusableChildrenComparator: androidx.compose.ui.focus.FocusableChildrenComparator INSTANCE>;

        $r7 = (java.util.Comparator) $r6;

        virtualinvoke $r5.<androidx.compose.runtime.collection.MutableVector: void sortWith(java.util.Comparator)>($r7);

        i1 = i0;

        $r8 = <androidx.compose.ui.focus.FocusDirection: androidx.compose.ui.focus.FocusDirection$Companion Companion>;

        $i2 = virtualinvoke $r8.<androidx.compose.ui.focus.FocusDirection$Companion: int getNext-dhqQ-8s()>();

        $z0 = staticinvoke <androidx.compose.ui.focus.FocusDirection: boolean equals-impl0(int,int)>(i1, $i2);

        if $z0 == 0 goto label09;

        $r29 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.runtime.collection.MutableVector getChildren()>();

        z12 = 0;

        r30 = $r29;

        $r21 = new kotlin.ranges.IntRange;

        $i7 = virtualinvoke r30.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        $i8 = $i7 - 1;

        specialinvoke $r21.<kotlin.ranges.IntRange: void <init>(int,int)>(0, $i8);

        r31 = $r21;

        i9 = virtualinvoke r31.<kotlin.ranges.IntRange: int getFirst()>();

        $i10 = virtualinvoke r31.<kotlin.ranges.IntRange: int getLast()>();

        if i9 > $i10 goto label08;

     label05:
        if z12 == 0 goto label06;

        r32 = $r29;

        $r22 = virtualinvoke r32.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        $r23 = $r22[i9];

        r33 = (androidx.compose.ui.focus.FocusModifier) $r23;

        $z7 = staticinvoke <androidx.compose.ui.focus.FocusTraversalKt: boolean isEligibleForFocusSearch(androidx.compose.ui.focus.FocusModifier)>(r33);

        if $z7 == 0 goto label06;

        $z8 = staticinvoke <androidx.compose.ui.focus.OneDimensionalFocusSearchKt: boolean forwardFocusSearch(androidx.compose.ui.focus.FocusModifier,kotlin.jvm.functions.Function1)>(r33, r2);

        if $z8 == 0 goto label06;

        return 1;

     label06:
        r34 = $r29;

        $r35 = virtualinvoke r34.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        $r36 = $r35[i9];

        $z17 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r36, r1);

        if $z17 == 0 goto label07;

        z12 = 1;

     label07:
        if i9 == $i10 goto label08;

        i9 = i9 + 1;

        goto label05;

     label08:
        goto label15;

     label09:
        $r9 = <androidx.compose.ui.focus.FocusDirection: androidx.compose.ui.focus.FocusDirection$Companion Companion>;

        $i3 = virtualinvoke $r9.<androidx.compose.ui.focus.FocusDirection$Companion: int getPrevious-dhqQ-8s()>();

        $z1 = staticinvoke <androidx.compose.ui.focus.FocusDirection: boolean equals-impl0(int,int)>(i1, $i3);

        if $z1 == 0 goto label14;

        $r37 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.runtime.collection.MutableVector getChildren()>();

        z19 = 0;

        r38 = $r37;

        $r13 = new kotlin.ranges.IntRange;

        $i4 = virtualinvoke r38.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        $i5 = $i4 - 1;

        specialinvoke $r13.<kotlin.ranges.IntRange: void <init>(int,int)>(0, $i5);

        r39 = $r13;

        i11 = virtualinvoke r39.<kotlin.ranges.IntRange: int getFirst()>();

        $i12 = virtualinvoke r39.<kotlin.ranges.IntRange: int getLast()>();

        if i11 > $i12 goto label13;

     label10:
        if z19 == 0 goto label11;

        r40 = $r37;

        $r19 = virtualinvoke r40.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        $r20 = $r19[$i12];

        r41 = (androidx.compose.ui.focus.FocusModifier) $r20;

        $z5 = staticinvoke <androidx.compose.ui.focus.FocusTraversalKt: boolean isEligibleForFocusSearch(androidx.compose.ui.focus.FocusModifier)>(r41);

        if $z5 == 0 goto label11;

        $z6 = staticinvoke <androidx.compose.ui.focus.OneDimensionalFocusSearchKt: boolean backwardFocusSearch(androidx.compose.ui.focus.FocusModifier,kotlin.jvm.functions.Function1)>(r41, r2);

        if $z6 == 0 goto label11;

        return 1;

     label11:
        r42 = $r37;

        $r43 = virtualinvoke r42.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        $r44 = $r43[$i12];

        $z24 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r44, r1);

        if $z24 == 0 goto label12;

        z19 = 1;

     label12:
        if $i12 == i11 goto label13;

        $i12 = $i12 + -1;

        goto label10;

     label13:
        goto label15;

     label14:
        $r10 = new java.lang.IllegalStateException;

        $r11 = "This function should only be used for 1-D focus search";

        $r12 = virtualinvoke $r11.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r10;

     label15:
        $r14 = <androidx.compose.ui.focus.FocusDirection: androidx.compose.ui.focus.FocusDirection$Companion Companion>;

        $i6 = virtualinvoke $r14.<androidx.compose.ui.focus.FocusDirection$Companion: int getNext-dhqQ-8s()>();

        $z2 = staticinvoke <androidx.compose.ui.focus.FocusDirection: boolean equals-impl0(int,int)>(i0, $i6);

        if $z2 != 0 goto label16;

        $r15 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusStateImpl getFocusState()>();

        $r16 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl DeactivatedParent>;

        if $r15 == $r16 goto label16;

        $z3 = staticinvoke <androidx.compose.ui.focus.OneDimensionalFocusSearchKt: boolean isRoot(androidx.compose.ui.focus.FocusModifier)>($r0);

        if $z3 == 0 goto label17;

     label16:
        return 0;

     label17:
        $r17 = interfaceinvoke r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

        $r18 = (java.lang.Boolean) $r17;

        $z4 = virtualinvoke $r18.<java.lang.Boolean: boolean booleanValue()>();

        return $z4;
    }

    private static final boolean pickChildForForwardSearch(androidx.compose.ui.focus.FocusModifier, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.focus.FocusModifier $r0, r4;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.runtime.collection.MutableVector r2, $r5;
        int i0, i1;
        java.lang.Object[] r3, $r8;
        androidx.compose.ui.focus.FocusableChildrenComparator $r6;
        java.util.Comparator $r7;
        java.lang.Object $r9;
        boolean $z2, $z3, $z4, $z5;

        $r0 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r5 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.runtime.collection.MutableVector getChildren()>();

        $r6 = <androidx.compose.ui.focus.FocusableChildrenComparator: androidx.compose.ui.focus.FocusableChildrenComparator INSTANCE>;

        $r7 = (java.util.Comparator) $r6;

        virtualinvoke $r5.<androidx.compose.runtime.collection.MutableVector: void sortWith(java.util.Comparator)>($r7);

        r2 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.runtime.collection.MutableVector getChildren()>();

        i0 = virtualinvoke r2.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if i0 <= 0 goto label5;

        i1 = 0;

        $r8 = virtualinvoke r2.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r8, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r3 = $r8;

     label1:
        $r9 = r3[i1];

        r4 = (androidx.compose.ui.focus.FocusModifier) $r9;

        $z2 = staticinvoke <androidx.compose.ui.focus.FocusTraversalKt: boolean isEligibleForFocusSearch(androidx.compose.ui.focus.FocusModifier)>(r4);

        if $z2 == 0 goto label2;

        $z3 = staticinvoke <androidx.compose.ui.focus.OneDimensionalFocusSearchKt: boolean forwardFocusSearch(androidx.compose.ui.focus.FocusModifier,kotlin.jvm.functions.Function1)>(r4, r1);

        if $z3 == 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        if $z4 == 0 goto label4;

        $z5 = 1;

        goto label6;

     label4:
        i1 = i1 + 1;

        if i1 < i0 goto label1;

     label5:
        $z5 = 0;

     label6:
        return $z5;
    }

    private static final boolean pickChildForBackwardSearch(androidx.compose.ui.focus.FocusModifier, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.focus.FocusModifier $r0, r4;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.runtime.collection.MutableVector r2, $r5;
        int i0, i1;
        java.lang.Object[] r3, $r8;
        androidx.compose.ui.focus.FocusableChildrenComparator $r6;
        java.util.Comparator $r7;
        java.lang.Object $r9;
        boolean $z2, $z3;

        $r0 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r5 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.runtime.collection.MutableVector getChildren()>();

        $r6 = <androidx.compose.ui.focus.FocusableChildrenComparator: androidx.compose.ui.focus.FocusableChildrenComparator INSTANCE>;

        $r7 = (java.util.Comparator) $r6;

        virtualinvoke $r5.<androidx.compose.runtime.collection.MutableVector: void sortWith(java.util.Comparator)>($r7);

        r2 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.runtime.collection.MutableVector getChildren()>();

        i0 = virtualinvoke r2.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if i0 <= 0 goto label3;

        i1 = i0 - 1;

        $r8 = virtualinvoke r2.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r8, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r3 = $r8;

     label1:
        $r9 = r3[i1];

        r4 = (androidx.compose.ui.focus.FocusModifier) $r9;

        $z2 = staticinvoke <androidx.compose.ui.focus.FocusTraversalKt: boolean isEligibleForFocusSearch(androidx.compose.ui.focus.FocusModifier)>(r4);

        if $z2 == 0 goto label2;

        $z3 = staticinvoke <androidx.compose.ui.focus.OneDimensionalFocusSearchKt: boolean backwardFocusSearch(androidx.compose.ui.focus.FocusModifier,kotlin.jvm.functions.Function1)>(r4, r1);

        if $z3 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + -1;

        if i1 >= 0 goto label1;

     label3:
        return 0;
    }

    private static final boolean isRoot(androidx.compose.ui.focus.FocusModifier)
    {
        androidx.compose.ui.focus.FocusModifier $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        $r1 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusModifier getParent()>();

        if $r1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static final void forEachItemAfter(androidx.compose.runtime.collection.MutableVector, java.lang.Object, kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.collection.MutableVector $r0, r10, r11, r12;
        java.lang.Object r1, $r6, $r8;
        kotlin.jvm.functions.Function1 r2;
        kotlin.ranges.IntRange r3, $r4;
        int $i0, $i1, i2, $i3;
        java.lang.Object[] $r5, $r7;
        boolean $z1, z2;

        $r0 := @parameter0: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: kotlin.jvm.functions.Function1;

        z2 = 0;

        r10 = $r0;

        $r4 = new kotlin.ranges.IntRange;

        $i0 = virtualinvoke r10.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        $i1 = $i0 - 1;

        specialinvoke $r4.<kotlin.ranges.IntRange: void <init>(int,int)>(0, $i1);

        r3 = $r4;

        i2 = virtualinvoke r3.<kotlin.ranges.IntRange: int getFirst()>();

        $i3 = virtualinvoke r3.<kotlin.ranges.IntRange: int getLast()>();

        if i2 > $i3 goto label4;

     label1:
        if z2 == 0 goto label2;

        r11 = $r0;

        $r7 = virtualinvoke r11.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        $r8 = $r7[i2];

        interfaceinvoke r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r8);

     label2:
        r12 = $r0;

        $r5 = virtualinvoke r12.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        $r6 = $r5[i2];

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r6, r1);

        if $z1 == 0 goto label3;

        z2 = 1;

     label3:
        if i2 == $i3 goto label4;

        i2 = i2 + 1;

        goto label1;

     label4:
        return;
    }

    private static final void forEachItemBefore(androidx.compose.runtime.collection.MutableVector, java.lang.Object, kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.collection.MutableVector $r0, r10, r11, r12;
        java.lang.Object r1, $r6, $r8;
        kotlin.jvm.functions.Function1 r2;
        kotlin.ranges.IntRange r3, $r4;
        int $i0, $i1, i2, $i3;
        java.lang.Object[] $r5, $r7;
        boolean $z1, z2;

        $r0 := @parameter0: androidx.compose.runtime.collection.MutableVector;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: kotlin.jvm.functions.Function1;

        z2 = 0;

        r10 = $r0;

        $r4 = new kotlin.ranges.IntRange;

        $i0 = virtualinvoke r10.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        $i1 = $i0 - 1;

        specialinvoke $r4.<kotlin.ranges.IntRange: void <init>(int,int)>(0, $i1);

        r3 = $r4;

        i2 = virtualinvoke r3.<kotlin.ranges.IntRange: int getFirst()>();

        $i3 = virtualinvoke r3.<kotlin.ranges.IntRange: int getLast()>();

        if i2 > $i3 goto label4;

     label1:
        if z2 == 0 goto label2;

        r11 = $r0;

        $r7 = virtualinvoke r11.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        $r8 = $r7[$i3];

        interfaceinvoke r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r8);

     label2:
        r12 = $r0;

        $r5 = virtualinvoke r12.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        $r6 = $r5[$i3];

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r6, r1);

        if $z1 == 0 goto label3;

        z2 = 1;

     label3:
        if $i3 == i2 goto label4;

        $i3 = $i3 + -1;

        goto label1;

     label4:
        return;
    }

    public static final boolean access$searchChildren-4C6V_qg(androidx.compose.ui.focus.FocusModifier, androidx.compose.ui.focus.FocusModifier, int, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.focus.FocusModifier $r0, r1;
        int i0;
        kotlin.jvm.functions.Function1 r2;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        r1 := @parameter1: androidx.compose.ui.focus.FocusModifier;

        i0 := @parameter2: int;

        r2 := @parameter3: kotlin.jvm.functions.Function1;

        $z0 = staticinvoke <androidx.compose.ui.focus.OneDimensionalFocusSearchKt: boolean searchChildren-4C6V_qg(androidx.compose.ui.focus.FocusModifier,androidx.compose.ui.focus.FocusModifier,int,kotlin.jvm.functions.Function1)>($r0, r1, i0, r2);

        return $z0;
    }

