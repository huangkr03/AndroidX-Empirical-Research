androidx.test.ext.junit.runners.AndroidJUnit4
<androidx.test.ext.junit.runners.AndroidJUnit4: java.lang.String TAG>
<androidx.test.ext.junit.runners.AndroidJUnit4: org.junit.runner.Runner delegate>
    private static java.lang.String getInitializationErrorDetails(java.lang.Throwable, java.lang.Class)
    {
        java.lang.Throwable r0, r3, r8;
        java.lang.Class r1, r4;
        java.lang.StringBuilder r2, $r9, $r16;
        org.junit.runners.model.InitializationError r5;
        java.util.List r6;
        java.util.Iterator r7;
        java.lang.String $r10, $r13;
        java.lang.Object[] $r11;
        int $i0;
        java.lang.Integer $r12;
        boolean $z0;
        java.lang.Object $r15;

        r0 := @parameter0: java.lang.Throwable;

        r1 := @parameter1: java.lang.Class;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        r2 = $r9;

        r3 = virtualinvoke r0.<java.lang.Throwable: java.lang.Throwable getCause()>();

        if r3 != null goto label1;

        return "";

     label1:
        r4 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        if r4 != class "Lorg/junit/runners/model/InitializationError;" goto label3;

        r5 = (org.junit.runners.model.InitializationError) r3;

        r6 = virtualinvoke r5.<org.junit.runners.model.InitializationError: java.util.List getCauses()>();

        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = r1;

        $i0 = interfaceinvoke r6.<java.util.List: int size()>();

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r11[1] = $r12;

        $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Test class %s is malformed. (%s problems):\n", $r11);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        r7 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r15 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.Throwable) $r15;

        $r16 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        goto label2;

     label3:
        $r10 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    private static java.lang.String getRunnerClassName()
    {
        java.lang.String r0, $r1, $r2;
        boolean $z0, $z1;

        r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("android.junit.runner", null);

        if r0 != null goto label2;

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.runtime.name");

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("android");

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <androidx.test.ext.junit.runners.AndroidJUnit4: boolean hasClass(java.lang.String)>("org.robolectric.RobolectricTestRunner");

        if $z1 == 0 goto label1;

        return "org.robolectric.RobolectricTestRunner";

     label1:
        return "androidx.test.internal.runner.junit4.AndroidJUnit4ClassRunner";

     label2:
        return r0;
    }

    public org.junit.runner.Description getDescription()
    {
        androidx.test.ext.junit.runners.AndroidJUnit4 r0;
        org.junit.runner.Runner $r1;
        org.junit.runner.Description $r2;

        r0 := @this: androidx.test.ext.junit.runners.AndroidJUnit4;

        $r1 = r0.<androidx.test.ext.junit.runners.AndroidJUnit4: org.junit.runner.Runner delegate>;

        $r2 = virtualinvoke $r1.<org.junit.runner.Runner: org.junit.runner.Description getDescription()>();

        return $r2;
    }

    private static org.junit.runner.Runner loadRunner(java.lang.Class) throws org.junit.runners.model.InitializationError
    {
        java.lang.Class r0;
        java.lang.String r1;
        org.junit.runner.Runner $r2;

        r0 := @parameter0: java.lang.Class;

        r1 = staticinvoke <androidx.test.ext.junit.runners.AndroidJUnit4: java.lang.String getRunnerClassName()>();

        $r2 = staticinvoke <androidx.test.ext.junit.runners.AndroidJUnit4: org.junit.runner.Runner loadRunner(java.lang.Class,java.lang.String)>(r0, r1);

        return $r2;
    }

    private static org.junit.runner.Runner loadRunner(java.lang.Class, java.lang.String) throws org.junit.runners.model.InitializationError
    {
        java.lang.Class r0, r22;
        java.lang.String r1, r2, $r9, $r12, $r15, $r18, $r21;
        java.lang.Class[] $r3;
        java.lang.Object[] $r4, $r8, $r11, $r14, $r17, $r20;
        java.lang.Object $r5;
        org.junit.runner.Runner $r6;
        java.lang.Throwable $r7, $r10, $r13, $r16, $r19, r23, r25, r26, r27, r28;
        java.lang.reflect.Constructor r24;
        java.lang.IllegalStateException $r29;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        r22 = null;

     label01:
        r22 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r1);

     label02:
        goto label04;

     label03:
        $r10 := @caughtexception;

        r23 = $r10;

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = r1;

        $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Delegate runner %s for AndroidJUnit4 could not be found.\n", $r11);

        staticinvoke <androidx.test.ext.junit.runners.AndroidJUnit4: void throwInitializationError(java.lang.String,java.lang.Throwable)>($r12, r23);

     label04:
        r24 = null;

     label05:
        $r3 = newarray (java.lang.Class)[1];

        $r3[0] = class "Ljava/lang/Class;";

        r24 = virtualinvoke r22.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r3);

     label06:
        goto label08;

     label07:
        $r16 := @caughtexception;

        r25 = $r16;

        $r17 = newarray (java.lang.Object)[1];

        $r17[0] = r1;

        $r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Delegate runner %s for AndroidJUnit4 requires a public constructor that takes a Class<?>.\n", $r17);

        staticinvoke <androidx.test.ext.junit.runners.AndroidJUnit4: void throwInitializationError(java.lang.String,java.lang.Throwable)>($r18, r25);

     label08:
        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r0;

        $r5 = virtualinvoke r24.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r4);

        $r6 = (org.junit.runner.Runner) $r5;

     label09:
        return $r6;

     label10:
        $r13 := @caughtexception;

        r26 = $r13;

        $r14 = newarray (java.lang.Object)[1];

        $r14[0] = r1;

        $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Illegal constructor access for test runner %s\n", $r14);

        staticinvoke <androidx.test.ext.junit.runners.AndroidJUnit4: void throwInitializationError(java.lang.String,java.lang.Throwable)>($r15, r26);

        goto label13;

     label11:
        $r19 := @caughtexception;

        r27 = $r19;

        $r20 = newarray (java.lang.Object)[1];

        $r20[0] = r1;

        $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to instantiate test runner %s\n", $r20);

        staticinvoke <androidx.test.ext.junit.runners.AndroidJUnit4: void throwInitializationError(java.lang.String,java.lang.Throwable)>($r21, r27);

        goto label13;

     label12:
        $r7 := @caughtexception;

        r28 = $r7;

        r2 = staticinvoke <androidx.test.ext.junit.runners.AndroidJUnit4: java.lang.String getInitializationErrorDetails(java.lang.Throwable,java.lang.Class)>(r28, r0);

        $r8 = newarray (java.lang.Object)[2];

        $r8[0] = r22;

        $r8[1] = r2;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to instantiate test runner %s\n%s\n", $r8);

        staticinvoke <androidx.test.ext.junit.runners.AndroidJUnit4: void throwInitializationError(java.lang.String,java.lang.Throwable)>($r9, r28);

     label13:
        $r29 = new java.lang.IllegalStateException;

        specialinvoke $r29.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Should never reach here");

        throw $r29;

        catch java.lang.ClassNotFoundException from label01 to label02 with label03;
        catch java.lang.NoSuchMethodException from label05 to label06 with label07;
        catch java.lang.IllegalAccessException from label08 to label09 with label10;
        catch java.lang.InstantiationException from label08 to label09 with label11;
        catch java.lang.reflect.InvocationTargetException from label08 to label09 with label12;
    }

    public void <init>(java.lang.Class) throws org.junit.runners.model.InitializationError
    {
        androidx.test.ext.junit.runners.AndroidJUnit4 r0;
        java.lang.Class r1;
        org.junit.runner.Runner $r2;

        r0 := @this: androidx.test.ext.junit.runners.AndroidJUnit4;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.junit.runner.Runner: void <init>()>();

        $r2 = staticinvoke <androidx.test.ext.junit.runners.AndroidJUnit4: org.junit.runner.Runner loadRunner(java.lang.Class)>(r1);

        r0.<androidx.test.ext.junit.runners.AndroidJUnit4: org.junit.runner.Runner delegate> = $r2;

        return;
    }

    public void filter(org.junit.runner.manipulation.Filter) throws org.junit.runner.manipulation.NoTestsRemainException
    {
        androidx.test.ext.junit.runners.AndroidJUnit4 r0;
        org.junit.runner.manipulation.Filter r1;
        org.junit.runner.Runner $r2;
        org.junit.runner.manipulation.Filterable $r3;

        r0 := @this: androidx.test.ext.junit.runners.AndroidJUnit4;

        r1 := @parameter0: org.junit.runner.manipulation.Filter;

        $r2 = r0.<androidx.test.ext.junit.runners.AndroidJUnit4: org.junit.runner.Runner delegate>;

        $r3 = (org.junit.runner.manipulation.Filterable) $r2;

        interfaceinvoke $r3.<org.junit.runner.manipulation.Filterable: void filter(org.junit.runner.manipulation.Filter)>(r1);

        return;
    }

    public void run(org.junit.runner.notification.RunNotifier)
    {
        androidx.test.ext.junit.runners.AndroidJUnit4 r0;
        org.junit.runner.notification.RunNotifier r1;
        org.junit.runner.Runner $r2;

        r0 := @this: androidx.test.ext.junit.runners.AndroidJUnit4;

        r1 := @parameter0: org.junit.runner.notification.RunNotifier;

        $r2 = r0.<androidx.test.ext.junit.runners.AndroidJUnit4: org.junit.runner.Runner delegate>;

        virtualinvoke $r2.<org.junit.runner.Runner: void run(org.junit.runner.notification.RunNotifier)>(r1);

        return;
    }

    public void sort(org.junit.runner.manipulation.Sorter)
    {
        androidx.test.ext.junit.runners.AndroidJUnit4 r0;
        org.junit.runner.manipulation.Sorter r1;
        org.junit.runner.Runner $r2;
        org.junit.runner.manipulation.Sortable $r3;

        r0 := @this: androidx.test.ext.junit.runners.AndroidJUnit4;

        r1 := @parameter0: org.junit.runner.manipulation.Sorter;

        $r2 = r0.<androidx.test.ext.junit.runners.AndroidJUnit4: org.junit.runner.Runner delegate>;

        $r3 = (org.junit.runner.manipulation.Sortable) $r2;

        interfaceinvoke $r3.<org.junit.runner.manipulation.Sortable: void sort(org.junit.runner.manipulation.Sorter)>(r1);

        return;
    }

    private static void throwInitializationError(java.lang.String, java.lang.Throwable) throws org.junit.runners.model.InitializationError
    {
        java.lang.String r0;
        java.lang.Throwable r1;
        org.junit.runners.model.InitializationError $r2;
        java.lang.RuntimeException $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Throwable;

        $r2 = new org.junit.runners.model.InitializationError;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(r0, r1);

        specialinvoke $r2.<org.junit.runners.model.InitializationError: void <init>(java.lang.Throwable)>($r3);

        throw $r2;
    }

    private static boolean hasClass(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Throwable r1, $r3;
        java.lang.Class $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        if $r2 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        return 0;

        catch java.lang.ClassNotFoundException from label1 to label3 with label4;
    }

