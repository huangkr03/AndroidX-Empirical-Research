androidx.navigation.NavigatorProvider
<androidx.navigation.NavigatorProvider: androidx.navigation.NavigatorProvider$Companion Companion>
<androidx.navigation.NavigatorProvider: java.util.Map _navigators>
<androidx.navigation.NavigatorProvider: java.util.Map annotationNames>
    public void <init>()
    {
        androidx.navigation.NavigatorProvider r0;
        java.util.LinkedHashMap $r1;
        java.util.Map $r2;

        r0 := @this: androidx.navigation.NavigatorProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        $r2 = (java.util.Map) $r1;

        r0.<androidx.navigation.NavigatorProvider: java.util.Map _navigators> = $r2;

        return;
    }

    public final java.util.Map getNavigators()
    {
        androidx.navigation.NavigatorProvider r0;
        java.util.Map $r1, $r2;

        r0 := @this: androidx.navigation.NavigatorProvider;

        $r1 = r0.<androidx.navigation.NavigatorProvider: java.util.Map _navigators>;

        $r2 = staticinvoke <kotlin.collections.MapsKt: java.util.Map toMap(java.util.Map)>($r1);

        return $r2;
    }

    public final androidx.navigation.Navigator getNavigator(java.lang.Class)
    {
        androidx.navigation.NavigatorProvider r0;
        java.lang.Class r1;
        java.lang.String r2;
        androidx.navigation.NavigatorProvider$Companion $r3;
        androidx.navigation.Navigator $r4;

        r0 := @this: androidx.navigation.NavigatorProvider;

        r1 := @parameter0: java.lang.Class;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "navigatorClass");

        $r3 = <androidx.navigation.NavigatorProvider: androidx.navigation.NavigatorProvider$Companion Companion>;

        r2 = virtualinvoke $r3.<androidx.navigation.NavigatorProvider$Companion: java.lang.String getNameForNavigator$navigation_common_release(java.lang.Class)>(r1);

        $r4 = virtualinvoke r0.<androidx.navigation.NavigatorProvider: androidx.navigation.Navigator getNavigator(java.lang.String)>(r2);

        return $r4;
    }

    public androidx.navigation.Navigator getNavigator(java.lang.String)
    {
        androidx.navigation.NavigatorProvider r0;
        java.lang.String r1, $r12, $r14, $r15;
        androidx.navigation.Navigator r2, $r6;
        androidx.navigation.NavigatorProvider$Companion $r3;
        boolean $z0;
        java.util.Map $r4;
        java.lang.Object $r5;
        java.lang.IllegalStateException $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11;
        java.lang.IllegalArgumentException $r13;

        r0 := @this: androidx.navigation.NavigatorProvider;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "name");

        $r3 = <androidx.navigation.NavigatorProvider: androidx.navigation.NavigatorProvider$Companion Companion>;

        $z0 = virtualinvoke $r3.<androidx.navigation.NavigatorProvider$Companion: boolean validateName$navigation_common_release(java.lang.String)>(r1);

        if $z0 != 0 goto label1;

        $r15 = "navigator name cannot be an empty string";

        $r13 = new java.lang.IllegalArgumentException;

        $r14 = virtualinvoke $r15.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r13;

     label1:
        $r4 = r0.<androidx.navigation.NavigatorProvider: java.util.Map _navigators>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r6 = (androidx.navigation.Navigator) $r5;

        if $r6 != null goto label2;

        $r7 = new java.lang.IllegalStateException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find Navigator with name \"");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\". You must call NavController.addNavigator() for each navigation type.");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r7;

     label2:
        r2 = $r6;

        return r2;
    }

    public final androidx.navigation.Navigator addNavigator(androidx.navigation.Navigator)
    {
        androidx.navigation.NavigatorProvider r0;
        androidx.navigation.Navigator r1, $r5;
        androidx.navigation.NavigatorProvider$Companion $r2;
        java.lang.Class $r3;
        java.lang.String $r4;

        r0 := @this: androidx.navigation.NavigatorProvider;

        r1 := @parameter0: androidx.navigation.Navigator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "navigator");

        $r2 = <androidx.navigation.NavigatorProvider: androidx.navigation.NavigatorProvider$Companion Companion>;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r2.<androidx.navigation.NavigatorProvider$Companion: java.lang.String getNameForNavigator$navigation_common_release(java.lang.Class)>($r3);

        $r5 = virtualinvoke r0.<androidx.navigation.NavigatorProvider: androidx.navigation.Navigator addNavigator(java.lang.String,androidx.navigation.Navigator)>($r4, r1);

        return $r5;
    }

    public androidx.navigation.Navigator addNavigator(java.lang.String, androidx.navigation.Navigator)
    {
        androidx.navigation.NavigatorProvider r0;
        java.lang.String r1, $r15, $r22, $r24, $r25, $r26, $r27;
        androidx.navigation.Navigator r2, r3, $r9;
        androidx.navigation.NavigatorProvider$Companion $r4;
        boolean $z0, $z1, $z2, $z3, $z5, $z6, $z8;
        java.util.Map $r5, $r7;
        java.lang.Object $r6, $r8;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r16, $r17, $r18, $r19, $r20;
        java.lang.IllegalStateException $r14, $r21;
        java.lang.IllegalArgumentException $r23;

        r0 := @this: androidx.navigation.NavigatorProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.navigation.Navigator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "name");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "navigator");

        $r4 = <androidx.navigation.NavigatorProvider: androidx.navigation.NavigatorProvider$Companion Companion>;

        $z0 = virtualinvoke $r4.<androidx.navigation.NavigatorProvider$Companion: boolean validateName$navigation_common_release(java.lang.String)>(r1);

        if $z0 != 0 goto label01;

        $r25 = "navigator name cannot be an empty string";

        $r23 = new java.lang.IllegalArgumentException;

        $r24 = virtualinvoke $r25.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r24);

        throw $r23;

     label01:
        $r5 = r0.<androidx.navigation.NavigatorProvider: java.util.Map _navigators>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (androidx.navigation.Navigator) $r6;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r3, r2);

        if $z1 == 0 goto label02;

        return r2;

     label02:
        if r3 == null goto label04;

        $z3 = virtualinvoke r3.<androidx.navigation.Navigator: boolean isAttached()>();

        if $z3 != 1 goto label03;

        $z5 = 1;

        goto label05;

     label03:
        $z5 = 0;

        goto label05;

     label04:
        $z5 = 0;

     label05:
        if $z5 != 0 goto label06;

        $z6 = 1;

        goto label07;

     label06:
        $z6 = 0;

     label07:
        if $z6 != 0 goto label08;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Navigator ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is replacing an already attached ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r26 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = new java.lang.IllegalStateException;

        $r22 = virtualinvoke $r26.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r22);

        throw $r21;

     label08:
        $z2 = virtualinvoke r2.<androidx.navigation.Navigator: boolean isAttached()>();

        if $z2 != 0 goto label09;

        $z8 = 1;

        goto label10;

     label09:
        $z8 = 0;

     label10:
        if $z8 != 0 goto label11;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Navigator ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already attached to another NavController");

        $r27 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = new java.lang.IllegalStateException;

        $r15 = virtualinvoke $r27.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r15);

        throw $r14;

     label11:
        $r7 = r0.<androidx.navigation.NavigatorProvider: java.util.Map _navigators>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r9 = (androidx.navigation.Navigator) $r8;

        return $r9;
    }

    public static final java.lang.String getNameForNavigator$navigation_common_release(java.lang.Class)
    {
        java.lang.Class r0;
        androidx.navigation.NavigatorProvider$Companion $r1;
        java.lang.String $r2;

        r0 := @parameter0: java.lang.Class;

        $r1 = <androidx.navigation.NavigatorProvider: androidx.navigation.NavigatorProvider$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.navigation.NavigatorProvider$Companion: java.lang.String getNameForNavigator$navigation_common_release(java.lang.Class)>(r0);

        return $r2;
    }

    public static final java.util.Map access$getAnnotationNames$cp()
    {
        java.util.Map $r0;

        $r0 = <androidx.navigation.NavigatorProvider: java.util.Map annotationNames>;

        return $r0;
    }

    static void <clinit>()
    {
        androidx.navigation.NavigatorProvider$Companion $r0;
        java.util.LinkedHashMap $r1;
        java.util.Map $r2;

        $r0 = new androidx.navigation.NavigatorProvider$Companion;

        specialinvoke $r0.<androidx.navigation.NavigatorProvider$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.navigation.NavigatorProvider: androidx.navigation.NavigatorProvider$Companion Companion> = $r0;

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        $r2 = (java.util.Map) $r1;

        <androidx.navigation.NavigatorProvider: java.util.Map annotationNames> = $r2;

        return;
    }

androidx.navigation.NavigatorProvider$Companion
    private void <init>()
    {
        androidx.navigation.NavigatorProvider$Companion r0;

        r0 := @this: androidx.navigation.NavigatorProvider$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final boolean validateName$navigation_common_release(java.lang.String)
    {
        androidx.navigation.NavigatorProvider$Companion r0;
        java.lang.String r1;
        java.lang.CharSequence $r2;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: androidx.navigation.NavigatorProvider$Companion;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label3;

        $r2 = (java.lang.CharSequence) r1;

        $i0 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public final java.lang.String getNameForNavigator$navigation_common_release(java.lang.Class)
    {
        androidx.navigation.NavigatorProvider$Companion r0;
        java.lang.Class r1;
        androidx.navigation.Navigator$Name r2;
        java.util.Map $r3, $r6;
        java.lang.Object $r4;
        java.lang.'annotation'.Annotation $r5;
        boolean $z0;
        java.lang.StringBuilder $r9, $r10, $r12;
        java.lang.String $r11, $r14, r15, $r16, $r17;
        java.lang.IllegalArgumentException $r13;

        r0 := @this: androidx.navigation.NavigatorProvider$Companion;

        r1 := @parameter0: java.lang.Class;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "navigatorClass");

        $r3 = staticinvoke <androidx.navigation.NavigatorProvider: java.util.Map access$getAnnotationNames$cp()>();

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r15 = (java.lang.String) $r4;

        if r15 != null goto label4;

        $r5 = virtualinvoke r1.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Landroidx/navigation/Navigator$Name;");

        r2 = (androidx.navigation.Navigator$Name) $r5;

        if r2 == null goto label1;

        $r16 = interfaceinvoke r2.<androidx.navigation.Navigator$Name: java.lang.String value()>();

        goto label2;

     label1:
        $r16 = null;

     label2:
        r15 = $r16;

        $z0 = virtualinvoke r0.<androidx.navigation.NavigatorProvider$Companion: boolean validateName$navigation_common_release(java.lang.String)>(r15);

        if $z0 != 0 goto label3;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No @Navigator.Name annotation found for ");

        $r11 = virtualinvoke r1.<java.lang.Class: java.lang.String getSimpleName()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r17 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = new java.lang.IllegalArgumentException;

        $r14 = virtualinvoke $r17.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r13;

     label3:
        $r6 = staticinvoke <androidx.navigation.NavigatorProvider: java.util.Map access$getAnnotationNames$cp()>();

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r15);

     label4:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r15);

        return r15;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.navigation.NavigatorProvider$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.navigation.NavigatorProvider$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.navigation.NavigatorProvider$Companion: void <init>()>();

        return;
    }

