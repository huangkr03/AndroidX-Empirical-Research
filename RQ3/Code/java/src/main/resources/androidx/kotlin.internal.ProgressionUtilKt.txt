kotlin.internal.ProgressionUtilKt
    private static final int differenceModulo(int, int, int)
    {
        int $i0, $i1, $i2;

        $i1 := @parameter0: int;

        $i2 := @parameter1: int;

        $i0 := @parameter2: int;

        $i1 = staticinvoke <kotlin.internal.ProgressionUtilKt: int mod(int,int)>($i1, $i0);

        $i2 = staticinvoke <kotlin.internal.ProgressionUtilKt: int mod(int,int)>($i2, $i0);

        $i1 = $i1 - $i2;

        $i1 = staticinvoke <kotlin.internal.ProgressionUtilKt: int mod(int,int)>($i1, $i0);

        return $i1;
    }

    private static final long differenceModulo(long, long, long)
    {
        long $l0, $l1, $l2;

        $l1 := @parameter0: long;

        $l2 := @parameter1: long;

        $l0 := @parameter2: long;

        $l1 = staticinvoke <kotlin.internal.ProgressionUtilKt: long mod(long,long)>($l1, $l0);

        $l2 = staticinvoke <kotlin.internal.ProgressionUtilKt: long mod(long,long)>($l2, $l0);

        $l1 = $l1 - $l2;

        $l1 = staticinvoke <kotlin.internal.ProgressionUtilKt: long mod(long,long)>($l1, $l0);

        return $l1;
    }

    public static final int getProgressionLastElement(int, int, int)
    {
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r0;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        if $i2 <= 0 goto label2;

        if $i0 < $i1 goto label1;

        return $i1;

     label1:
        $i0 = staticinvoke <kotlin.internal.ProgressionUtilKt: int differenceModulo(int,int,int)>($i1, $i0, $i2);

        $i0 = $i1 - $i0;

        return $i0;

     label2:
        if $i2 >= 0 goto label4;

        if $i0 > $i1 goto label3;

        return $i1;

     label3:
        $i2 = neg $i2;

        $i0 = staticinvoke <kotlin.internal.ProgressionUtilKt: int differenceModulo(int,int,int)>($i0, $i1, $i2);

        $i0 = $i1 + $i0;

        return $i0;

     label4:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Step is zero.");

        goto label5;

     label5:
        throw $r0;
    }

    public static final long getProgressionLastElement(long, long, long)
    {
        long $l0, $l1, $l2;
        byte $b3;
        java.lang.IllegalArgumentException $r0;

        $l1 := @parameter0: long;

        $l2 := @parameter1: long;

        $l0 := @parameter2: long;

        $b3 = $l0 cmp 0L;

        if $b3 <= 0 goto label2;

        $b3 = $l1 cmp $l2;

        if $b3 < 0 goto label1;

        return $l2;

     label1:
        $l1 = staticinvoke <kotlin.internal.ProgressionUtilKt: long differenceModulo(long,long,long)>($l2, $l1, $l0);

        $l1 = $l2 - $l1;

        return $l1;

     label2:
        $b3 = $l0 cmp 0L;

        if $b3 >= 0 goto label4;

        $b3 = $l1 cmp $l2;

        if $b3 > 0 goto label3;

        return $l2;

     label3:
        $l0 = neg $l0;

        $l1 = staticinvoke <kotlin.internal.ProgressionUtilKt: long differenceModulo(long,long,long)>($l1, $l2, $l0);

        $l1 = $l2 + $l1;

        return $l1;

     label4:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Step is zero.");

        goto label5;

     label5:
        throw $r0;
    }

    private static final int mod(int, int)
    {
        int $i0, $i1;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 = $i1 % $i0;

        if $i1 < 0 goto label1;

        return $i1;

     label1:
        $i1 = $i1 + $i0;

        return $i1;
    }

    private static final long mod(long, long)
    {
        long $l0, $l2;
        byte $b1;

        $l2 := @parameter0: long;

        $l0 := @parameter1: long;

        $l2 = $l2 % $l0;

        $b1 = $l2 cmp 0L;

        if $b1 < 0 goto label1;

        return $l2;

     label1:
        $l2 = $l2 + $l0;

        return $l2;
    }

