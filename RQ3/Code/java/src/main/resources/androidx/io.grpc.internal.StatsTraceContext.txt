io.grpc.internal.StatsTraceContext
<io.grpc.internal.StatsTraceContext: io.grpc.internal.StatsTraceContext NOOP>
<io.grpc.internal.StatsTraceContext: java.util.concurrent.atomic.AtomicBoolean closed>
<io.grpc.internal.StatsTraceContext: io.grpc.StreamTracer[] tracers>
    static void <clinit>()
    {
        io.grpc.internal.StatsTraceContext $r0;
        io.grpc.StreamTracer[] $r1;

        $r0 = new io.grpc.internal.StatsTraceContext;

        $r1 = newarray (io.grpc.StreamTracer)[0];

        specialinvoke $r0.<io.grpc.internal.StatsTraceContext: void <init>(io.grpc.StreamTracer[])>($r1);

        <io.grpc.internal.StatsTraceContext: io.grpc.internal.StatsTraceContext NOOP> = $r0;

        return;
    }

    void <init>(io.grpc.StreamTracer[])
    {
        io.grpc.internal.StatsTraceContext $r0;
        io.grpc.StreamTracer[] $r1;
        java.util.concurrent.atomic.AtomicBoolean $r2;

        $r0 := @this: io.grpc.internal.StatsTraceContext;

        $r1 := @parameter0: io.grpc.StreamTracer[];

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        $r0.<io.grpc.internal.StatsTraceContext: java.util.concurrent.atomic.AtomicBoolean closed> = $r2;

        $r0.<io.grpc.internal.StatsTraceContext: io.grpc.StreamTracer[] tracers> = $r1;

        return;
    }

    public static io.grpc.internal.StatsTraceContext newClientContext(io.grpc.ClientStreamTracer[], io.grpc.Attributes, io.grpc.Metadata)
    {
        io.grpc.ClientStreamTracer[] $r0;
        io.grpc.Attributes $r1;
        io.grpc.Metadata $r2;
        io.grpc.internal.StatsTraceContext $r3;
        int $i0, $i1;
        io.grpc.ClientStreamTracer $r4;

        $r0 := @parameter0: io.grpc.ClientStreamTracer[];

        $r1 := @parameter1: io.grpc.Attributes;

        $r2 := @parameter2: io.grpc.Metadata;

        $r3 = new io.grpc.internal.StatsTraceContext;

        specialinvoke $r3.<io.grpc.internal.StatsTraceContext: void <init>(io.grpc.StreamTracer[])>($r0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r4 = $r0[$i1];

        virtualinvoke $r4.<io.grpc.ClientStreamTracer: void streamCreated(io.grpc.Attributes,io.grpc.Metadata)>($r1, $r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r3;
    }

    public void clientInboundHeaders()
    {
        io.grpc.internal.StatsTraceContext $r0;
        io.grpc.StreamTracer[] $r1;
        int $i0, $i1;
        io.grpc.StreamTracer $r2;
        io.grpc.ClientStreamTracer $r3;

        $r0 := @this: io.grpc.internal.StatsTraceContext;

        $r1 = $r0.<io.grpc.internal.StatsTraceContext: io.grpc.StreamTracer[] tracers>;

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r1[$i1];

        $r3 = (io.grpc.ClientStreamTracer) $r2;

        virtualinvoke $r3.<io.grpc.ClientStreamTracer: void inboundHeaders()>();

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void clientInboundTrailers(io.grpc.Metadata)
    {
        io.grpc.internal.StatsTraceContext $r0;
        io.grpc.Metadata $r1;
        io.grpc.StreamTracer[] $r2;
        int $i0, $i1;
        io.grpc.StreamTracer $r3;
        io.grpc.ClientStreamTracer $r4;

        $r0 := @this: io.grpc.internal.StatsTraceContext;

        $r1 := @parameter0: io.grpc.Metadata;

        $r2 = $r0.<io.grpc.internal.StatsTraceContext: io.grpc.StreamTracer[] tracers>;

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r3 = $r2[$i1];

        $r4 = (io.grpc.ClientStreamTracer) $r3;

        virtualinvoke $r4.<io.grpc.ClientStreamTracer: void inboundTrailers(io.grpc.Metadata)>($r1);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void clientOutboundHeaders()
    {
        io.grpc.internal.StatsTraceContext $r0;
        io.grpc.StreamTracer[] $r1;
        int $i0, $i1;
        io.grpc.StreamTracer $r2;
        io.grpc.ClientStreamTracer $r3;

        $r0 := @this: io.grpc.internal.StatsTraceContext;

        $r1 = $r0.<io.grpc.internal.StatsTraceContext: io.grpc.StreamTracer[] tracers>;

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r1[$i1];

        $r3 = (io.grpc.ClientStreamTracer) $r2;

        virtualinvoke $r3.<io.grpc.ClientStreamTracer: void outboundHeaders()>();

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void inboundMessage(int)
    {
        io.grpc.internal.StatsTraceContext $r0;
        int $i0, $i1, $i2;
        io.grpc.StreamTracer[] $r1;
        io.grpc.StreamTracer $r2;

        $r0 := @this: io.grpc.internal.StatsTraceContext;

        $i0 := @parameter0: int;

        $r1 = $r0.<io.grpc.internal.StatsTraceContext: io.grpc.StreamTracer[] tracers>;

        $i1 = lengthof $r1;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $r2 = $r1[$i2];

        virtualinvoke $r2.<io.grpc.StreamTracer: void inboundMessage(int)>($i0);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void inboundMessageRead(int, long, long)
    {
        io.grpc.internal.StatsTraceContext $r0;
        int $i0, $i3, $i4;
        long $l1, $l2;
        io.grpc.StreamTracer[] $r1;
        io.grpc.StreamTracer $r2;

        $r0 := @this: io.grpc.internal.StatsTraceContext;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $l2 := @parameter2: long;

        $r1 = $r0.<io.grpc.internal.StatsTraceContext: io.grpc.StreamTracer[] tracers>;

        $i3 = lengthof $r1;

        $i4 = 0;

     label1:
        if $i4 >= $i3 goto label2;

        $r2 = $r1[$i4];

        virtualinvoke $r2.<io.grpc.StreamTracer: void inboundMessageRead(int,long,long)>($i0, $l1, $l2);

        $i4 = $i4 + 1;

        goto label1;

     label2:
        return;
    }

    public void inboundUncompressedSize(long)
    {
        io.grpc.internal.StatsTraceContext $r0;
        long $l0;
        io.grpc.StreamTracer[] $r1;
        int $i1, $i2;
        io.grpc.StreamTracer $r2;

        $r0 := @this: io.grpc.internal.StatsTraceContext;

        $l0 := @parameter0: long;

        $r1 = $r0.<io.grpc.internal.StatsTraceContext: io.grpc.StreamTracer[] tracers>;

        $i1 = lengthof $r1;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $r2 = $r1[$i2];

        virtualinvoke $r2.<io.grpc.StreamTracer: void inboundUncompressedSize(long)>($l0);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void inboundWireSize(long)
    {
        io.grpc.internal.StatsTraceContext $r0;
        long $l0;
        io.grpc.StreamTracer[] $r1;
        int $i1, $i2;
        io.grpc.StreamTracer $r2;

        $r0 := @this: io.grpc.internal.StatsTraceContext;

        $l0 := @parameter0: long;

        $r1 = $r0.<io.grpc.internal.StatsTraceContext: io.grpc.StreamTracer[] tracers>;

        $i1 = lengthof $r1;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $r2 = $r1[$i2];

        virtualinvoke $r2.<io.grpc.StreamTracer: void inboundWireSize(long)>($l0);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void outboundMessage(int)
    {
        io.grpc.internal.StatsTraceContext $r0;
        int $i0, $i1, $i2;
        io.grpc.StreamTracer[] $r1;
        io.grpc.StreamTracer $r2;

        $r0 := @this: io.grpc.internal.StatsTraceContext;

        $i0 := @parameter0: int;

        $r1 = $r0.<io.grpc.internal.StatsTraceContext: io.grpc.StreamTracer[] tracers>;

        $i1 = lengthof $r1;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $r2 = $r1[$i2];

        virtualinvoke $r2.<io.grpc.StreamTracer: void outboundMessage(int)>($i0);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void outboundMessageSent(int, long, long)
    {
        io.grpc.internal.StatsTraceContext $r0;
        int $i0, $i3, $i4;
        long $l1, $l2;
        io.grpc.StreamTracer[] $r1;
        io.grpc.StreamTracer $r2;

        $r0 := @this: io.grpc.internal.StatsTraceContext;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $l2 := @parameter2: long;

        $r1 = $r0.<io.grpc.internal.StatsTraceContext: io.grpc.StreamTracer[] tracers>;

        $i3 = lengthof $r1;

        $i4 = 0;

     label1:
        if $i4 >= $i3 goto label2;

        $r2 = $r1[$i4];

        virtualinvoke $r2.<io.grpc.StreamTracer: void outboundMessageSent(int,long,long)>($i0, $l1, $l2);

        $i4 = $i4 + 1;

        goto label1;

     label2:
        return;
    }

    public void outboundUncompressedSize(long)
    {
        io.grpc.internal.StatsTraceContext $r0;
        long $l0;
        io.grpc.StreamTracer[] $r1;
        int $i1, $i2;
        io.grpc.StreamTracer $r2;

        $r0 := @this: io.grpc.internal.StatsTraceContext;

        $l0 := @parameter0: long;

        $r1 = $r0.<io.grpc.internal.StatsTraceContext: io.grpc.StreamTracer[] tracers>;

        $i1 = lengthof $r1;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $r2 = $r1[$i2];

        virtualinvoke $r2.<io.grpc.StreamTracer: void outboundUncompressedSize(long)>($l0);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void outboundWireSize(long)
    {
        io.grpc.internal.StatsTraceContext $r0;
        long $l0;
        io.grpc.StreamTracer[] $r1;
        int $i1, $i2;
        io.grpc.StreamTracer $r2;

        $r0 := @this: io.grpc.internal.StatsTraceContext;

        $l0 := @parameter0: long;

        $r1 = $r0.<io.grpc.internal.StatsTraceContext: io.grpc.StreamTracer[] tracers>;

        $i1 = lengthof $r1;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $r2 = $r1[$i2];

        virtualinvoke $r2.<io.grpc.StreamTracer: void outboundWireSize(long)>($l0);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void streamClosed(io.grpc.Status)
    {
        io.grpc.internal.StatsTraceContext $r0;
        io.grpc.Status $r1;
        io.grpc.StreamTracer $r2;
        boolean $z0;
        java.util.concurrent.atomic.AtomicBoolean $r3;
        int $i0, $i1;
        io.grpc.StreamTracer[] $r4;

        $r0 := @this: io.grpc.internal.StatsTraceContext;

        $r1 := @parameter0: io.grpc.Status;

        $r3 = $r0.<io.grpc.internal.StatsTraceContext: java.util.concurrent.atomic.AtomicBoolean closed>;

        $i0 = 0;

        $z0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);

        if $z0 == 0 goto label2;

        $r4 = $r0.<io.grpc.internal.StatsTraceContext: io.grpc.StreamTracer[] tracers>;

        $i1 = lengthof $r4;

     label1:
        if $i0 >= $i1 goto label2;

        $r2 = $r4[$i0];

        virtualinvoke $r2.<io.grpc.StreamTracer: void streamClosed(io.grpc.Status)>($r1);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

