androidx.compose.frames.ImmutableIteratorImpl
<androidx.compose.frames.ImmutableIteratorImpl: java.util.Iterator iterator>
<androidx.compose.frames.ImmutableIteratorImpl: java.util.Iterator ImmutableIteratorImpl$MutableIterator$delegate>
    public void <init>(java.util.Iterator)
    {
        androidx.compose.frames.ImmutableIteratorImpl r0;
        java.util.Iterator r1;

        r0 := @this: androidx.compose.frames.ImmutableIteratorImpl;

        r1 := @parameter0: java.util.Iterator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "iterator");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.frames.ImmutableIteratorImpl: java.util.Iterator iterator> = r1;

        r0.<androidx.compose.frames.ImmutableIteratorImpl: java.util.Iterator ImmutableIteratorImpl$MutableIterator$delegate> = r1;

        return;
    }

    public boolean hasNext()
    {
        androidx.compose.frames.ImmutableIteratorImpl r0;
        java.util.Iterator $r1;
        boolean $z0;

        r0 := @this: androidx.compose.frames.ImmutableIteratorImpl;

        $r1 = r0.<androidx.compose.frames.ImmutableIteratorImpl: java.util.Iterator ImmutableIteratorImpl$MutableIterator$delegate>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public java.lang.Object next()
    {
        androidx.compose.frames.ImmutableIteratorImpl r0;
        java.util.Iterator $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.compose.frames.ImmutableIteratorImpl;

        $r1 = r0.<androidx.compose.frames.ImmutableIteratorImpl: java.util.Iterator ImmutableIteratorImpl$MutableIterator$delegate>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        return $r2;
    }

    public java.lang.Void remove()
    {
        androidx.compose.frames.ImmutableIteratorImpl r0;

        r0 := @this: androidx.compose.frames.ImmutableIteratorImpl;

        staticinvoke <androidx.compose.frames.FrameContainersKt: java.lang.Void access$error()>();

        throw null;
    }

    public volatile void remove()
    {
        androidx.compose.frames.ImmutableIteratorImpl r0;

        r0 := @this: androidx.compose.frames.ImmutableIteratorImpl;

        virtualinvoke r0.<androidx.compose.frames.ImmutableIteratorImpl: java.lang.Void remove()>();

        throw null;
    }

