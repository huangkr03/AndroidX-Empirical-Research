androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver
<androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver: java.lang.String TAG>
<androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver: int VIDEO_BITRATE_BASE>
<androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver: android.util.Size VIDEO_SIZE_BASE>
<androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver: int VIDEO_FRAME_RATE_BASE>
<androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver: int VIDEO_FRAME_RATE_FIXED_DEFAULT>
<androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver: android.util.Range VALID_FRAME_RATE_RANGE>
<androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver: java.lang.String mMimeType>
<androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver: androidx.camera.core.impl.Timebase mInputTimebase>
<androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver: androidx.camera.video.VideoSpec mVideoSpec>
<androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver: android.util.Size mSurfaceSize>
<androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver: android.util.Range mExpectedFrameRateRange>
    public void <init>(java.lang.String, androidx.camera.core.impl.Timebase, androidx.camera.video.VideoSpec, android.util.Size, android.util.Range)
    {
        androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver r0;
        java.lang.String r1;
        androidx.camera.core.impl.Timebase r2;
        androidx.camera.video.VideoSpec r3;
        android.util.Size r4;
        android.util.Range r5;

        r0 := @this: androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.camera.core.impl.Timebase;

        r3 := @parameter2: androidx.camera.video.VideoSpec;

        r4 := @parameter3: android.util.Size;

        r5 := @parameter4: android.util.Range;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver: java.lang.String mMimeType> = r1;

        r0.<androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver: androidx.camera.core.impl.Timebase mInputTimebase> = r2;

        r0.<androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver: androidx.camera.video.VideoSpec mVideoSpec> = r3;

        r0.<androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver: android.util.Size mSurfaceSize> = r4;

        r0.<androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver: android.util.Range mExpectedFrameRateRange> = r5;

        return;
    }

    public androidx.camera.video.internal.encoder.VideoEncoderConfig get()
    {
        androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        android.util.Range r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.String $r6, $r13;
        androidx.camera.video.VideoSpec $r7;
        android.util.Size $r8, $r9, $r10, $r11, $r17;
        androidx.camera.video.internal.encoder.VideoEncoderConfig$Builder $r12, $r14, $r16, $r18, $r19, $r20;
        androidx.camera.core.impl.Timebase $r15;
        androidx.camera.video.internal.encoder.VideoEncoderConfig $r21;

        r0 := @this: androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver;

        i0 = specialinvoke r0.<androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver: int resolveFrameRate()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resolved VIDEO frame rate: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fps");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("VidEncCfgDefaultRslvr", $r6);

        $r7 = r0.<androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver: androidx.camera.video.VideoSpec mVideoSpec>;

        r1 = virtualinvoke $r7.<androidx.camera.video.VideoSpec: android.util.Range getBitrate()>();

        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("VidEncCfgDefaultRslvr", "Using fallback VIDEO bitrate");

        $r8 = r0.<androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver: android.util.Size mSurfaceSize>;

        $i2 = virtualinvoke $r8.<android.util.Size: int getWidth()>();

        $r9 = <androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver: android.util.Size VIDEO_SIZE_BASE>;

        $i3 = virtualinvoke $r9.<android.util.Size: int getWidth()>();

        $r10 = r0.<androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver: android.util.Size mSurfaceSize>;

        $i4 = virtualinvoke $r10.<android.util.Size: int getHeight()>();

        $r11 = <androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver: android.util.Size VIDEO_SIZE_BASE>;

        $i5 = virtualinvoke $r11.<android.util.Size: int getHeight()>();

        i1 = staticinvoke <androidx.camera.video.internal.config.VideoConfigUtil: int scaleAndClampBitrate(int,int,int,int,int,int,int,android.util.Range)>(14000000, i0, 30, $i2, $i3, $i4, $i5, r1);

        $r12 = staticinvoke <androidx.camera.video.internal.encoder.VideoEncoderConfig: androidx.camera.video.internal.encoder.VideoEncoderConfig$Builder builder()>();

        $r13 = r0.<androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver: java.lang.String mMimeType>;

        $r14 = virtualinvoke $r12.<androidx.camera.video.internal.encoder.VideoEncoderConfig$Builder: androidx.camera.video.internal.encoder.VideoEncoderConfig$Builder setMimeType(java.lang.String)>($r13);

        $r15 = r0.<androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver: androidx.camera.core.impl.Timebase mInputTimebase>;

        $r16 = virtualinvoke $r14.<androidx.camera.video.internal.encoder.VideoEncoderConfig$Builder: androidx.camera.video.internal.encoder.VideoEncoderConfig$Builder setInputTimebase(androidx.camera.core.impl.Timebase)>($r15);

        $r17 = r0.<androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver: android.util.Size mSurfaceSize>;

        $r18 = virtualinvoke $r16.<androidx.camera.video.internal.encoder.VideoEncoderConfig$Builder: androidx.camera.video.internal.encoder.VideoEncoderConfig$Builder setResolution(android.util.Size)>($r17);

        $r19 = virtualinvoke $r18.<androidx.camera.video.internal.encoder.VideoEncoderConfig$Builder: androidx.camera.video.internal.encoder.VideoEncoderConfig$Builder setBitrate(int)>(i1);

        $r20 = virtualinvoke $r19.<androidx.camera.video.internal.encoder.VideoEncoderConfig$Builder: androidx.camera.video.internal.encoder.VideoEncoderConfig$Builder setFrameRate(int)>(i0);

        $r21 = virtualinvoke $r20.<androidx.camera.video.internal.encoder.VideoEncoderConfig$Builder: androidx.camera.video.internal.encoder.VideoEncoderConfig build()>();

        return $r21;
    }

    private int resolveFrameRate()
    {
        androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver r0;
        android.util.Range r1, $r3, $r6, $r8, $r9;
        androidx.camera.video.VideoSpec $r2;
        boolean $z0;
        java.lang.Object[] $r4;
        java.lang.Integer $r5, $r11, $r13;
        java.lang.String $r7;
        int $i0, i1;
        java.lang.Comparable $r10, $r12;

        r0 := @this: androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver;

        $r2 = r0.<androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver: androidx.camera.video.VideoSpec mVideoSpec>;

        r1 = virtualinvoke $r2.<androidx.camera.video.VideoSpec: android.util.Range getFrameRate()>();

        $r3 = <androidx.camera.video.VideoSpec: android.util.Range FRAME_RATE_RANGE_AUTO>;

        $z0 = virtualinvoke $r3.<android.util.Range: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r9 = <androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver: android.util.Range VALID_FRAME_RATE_RANGE>;

        $r10 = virtualinvoke r1.<android.util.Range: java.lang.Comparable getUpper()>();

        $r11 = (java.lang.Integer) $r10;

        $r12 = virtualinvoke $r9.<android.util.Range: java.lang.Comparable clamp(java.lang.Comparable)>($r11);

        $r13 = (java.lang.Integer) $r12;

        i1 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        goto label2;

     label1:
        i1 = 30;

     label2:
        $r4 = newarray (java.lang.Object)[3];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r4[0] = $r5;

        $r4[1] = r1;

        $r6 = r0.<androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver: android.util.Range mExpectedFrameRateRange>;

        $r4[2] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Frame rate default: %dfps. [Requested range: %s, Expected operating range: %s]", $r4);

        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("VidEncCfgDefaultRslvr", $r7);

        $r8 = r0.<androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver: android.util.Range mExpectedFrameRateRange>;

        $i0 = staticinvoke <androidx.camera.video.internal.config.VideoConfigUtil: int resolveFrameRate(android.util.Range,int,android.util.Range)>(r1, i1, $r8);

        return $i0;
    }

    public volatile java.lang.Object get()
    {
        androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver r0;
        androidx.camera.video.internal.encoder.VideoEncoderConfig $r1;

        r0 := @this: androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver;

        $r1 = virtualinvoke r0.<androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver: androidx.camera.video.internal.encoder.VideoEncoderConfig get()>();

        return $r1;
    }

    static void <clinit>()
    {
        android.util.Size $r0;
        android.util.Range $r1;
        java.lang.Integer $r2, $r3;

        $r0 = new android.util.Size;

        specialinvoke $r0.<android.util.Size: void <init>(int,int)>(1280, 720);

        <androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver: android.util.Size VIDEO_SIZE_BASE> = $r0;

        $r1 = new android.util.Range;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(60);

        specialinvoke $r1.<android.util.Range: void <init>(java.lang.Comparable,java.lang.Comparable)>($r2, $r3);

        <androidx.camera.video.internal.config.VideoEncoderConfigDefaultResolver: android.util.Range VALID_FRAME_RATE_RANGE> = $r1;

        return;
    }

