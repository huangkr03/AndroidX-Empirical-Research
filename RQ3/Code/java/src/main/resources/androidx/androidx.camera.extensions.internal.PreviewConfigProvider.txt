androidx.camera.extensions.internal.PreviewConfigProvider
<androidx.camera.extensions.internal.PreviewConfigProvider: java.lang.String TAG>
<androidx.camera.extensions.internal.PreviewConfigProvider: androidx.camera.core.impl.Config$Option OPTION_PREVIEW_CONFIG_PROVIDER_MODE>
<androidx.camera.extensions.internal.PreviewConfigProvider: androidx.camera.extensions.internal.VendorExtender mVendorExtender>
<androidx.camera.extensions.internal.PreviewConfigProvider: android.content.Context mContext>
<androidx.camera.extensions.internal.PreviewConfigProvider: int mEffectMode>
    public void <init>(int, androidx.camera.extensions.internal.VendorExtender, android.content.Context)
    {
        androidx.camera.extensions.internal.PreviewConfigProvider r0;
        int i0;
        androidx.camera.extensions.internal.VendorExtender r1;
        android.content.Context r2;

        r0 := @this: androidx.camera.extensions.internal.PreviewConfigProvider;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.camera.extensions.internal.VendorExtender;

        r2 := @parameter2: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.extensions.internal.PreviewConfigProvider: int mEffectMode> = i0;

        r0.<androidx.camera.extensions.internal.PreviewConfigProvider: androidx.camera.extensions.internal.VendorExtender mVendorExtender> = r1;

        r0.<androidx.camera.extensions.internal.PreviewConfigProvider: android.content.Context mContext> = r2;

        return;
    }

    public androidx.camera.core.impl.PreviewConfig getConfig()
    {
        androidx.camera.extensions.internal.PreviewConfigProvider r0;
        androidx.camera.core.Preview$Builder r1, $r2;
        android.content.Context $r3;
        androidx.camera.extensions.internal.VendorExtender $r4;
        int $i0;
        androidx.camera.core.impl.PreviewConfig $r5;

        r0 := @this: androidx.camera.extensions.internal.PreviewConfigProvider;

        $r2 = new androidx.camera.core.Preview$Builder;

        specialinvoke $r2.<androidx.camera.core.Preview$Builder: void <init>()>();

        r1 = $r2;

        $i0 = r0.<androidx.camera.extensions.internal.PreviewConfigProvider: int mEffectMode>;

        $r4 = r0.<androidx.camera.extensions.internal.PreviewConfigProvider: androidx.camera.extensions.internal.VendorExtender mVendorExtender>;

        $r3 = r0.<androidx.camera.extensions.internal.PreviewConfigProvider: android.content.Context mContext>;

        virtualinvoke r0.<androidx.camera.extensions.internal.PreviewConfigProvider: void updateBuilderConfig(androidx.camera.core.Preview$Builder,int,androidx.camera.extensions.internal.VendorExtender,android.content.Context)>(r1, $i0, $r4, $r3);

        $r5 = virtualinvoke r1.<androidx.camera.core.Preview$Builder: androidx.camera.core.impl.PreviewConfig getUseCaseConfig()>();

        return $r5;
    }

    void updateBuilderConfig(androidx.camera.core.Preview$Builder, int, androidx.camera.extensions.internal.VendorExtender, android.content.Context)
    {
        androidx.camera.extensions.internal.PreviewConfigProvider r0;
        androidx.camera.core.Preview$Builder r1;
        int i0, $i1, $i2;
        androidx.camera.extensions.internal.VendorExtender r2;
        android.content.Context r3;
        androidx.camera.extensions.internal.AdaptingRequestUpdateProcessor r4, r32;
        androidx.camera.extensions.internal.AdaptingPreviewProcessor r5, r34;
        boolean $z0;
        androidx.camera.core.impl.MutableConfig $r7;
        androidx.camera.core.impl.Config$Option $r8;
        java.lang.Integer $r9;
        androidx.camera.extensions.internal.BasicVendorExtender $r11;
        int[] $r12;
        androidx.camera.extensions.impl.PreviewExtenderImpl$ProcessorType $r13;
        androidx.camera.extensions.impl.ProcessorImpl $r15;
        androidx.camera.extensions.impl.PreviewImageProcessorImpl $r16;
        androidx.camera.extensions.impl.PreviewExtenderImpl r26;
        androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter r27, r33, r35, r36;
        java.lang.Object[] $r30;
        java.util.List r31;
        androidx.camera.camera2.impl.Camera2ImplConfig$Extender r37;
        androidx.camera.camera2.impl.CameraEventCallbacks r38;
        androidx.camera.camera2.impl.CameraEventCallback[] r39;

        r0 := @this: androidx.camera.extensions.internal.PreviewConfigProvider;

        r1 := @parameter0: androidx.camera.core.Preview$Builder;

        i0 := @parameter1: int;

        r2 := @parameter2: androidx.camera.extensions.internal.VendorExtender;

        r3 := @parameter3: android.content.Context;

        $z0 = r2 instanceof androidx.camera.extensions.internal.BasicVendorExtender;

        if $z0 == 0 goto label7;

        $r11 = (androidx.camera.extensions.internal.BasicVendorExtender) r2;

        r26 = virtualinvoke $r11.<androidx.camera.extensions.internal.BasicVendorExtender: androidx.camera.extensions.impl.PreviewExtenderImpl getPreviewExtenderImpl()>();

        if r26 == null goto label5;

        $r12 = <androidx.camera.extensions.internal.PreviewConfigProvider$1: int[] $SwitchMap$androidx$camera$extensions$impl$PreviewExtenderImpl$ProcessorType>;

        $r13 = interfaceinvoke r26.<androidx.camera.extensions.impl.PreviewExtenderImpl: androidx.camera.extensions.impl.PreviewExtenderImpl$ProcessorType getProcessorType()>();

        $i1 = virtualinvoke $r13.<androidx.camera.extensions.impl.PreviewExtenderImpl$ProcessorType: int ordinal()>();

        $i2 = $r12[$i1];

        lookupswitch($i2)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        r32 = new androidx.camera.extensions.internal.AdaptingRequestUpdateProcessor;

        specialinvoke r32.<androidx.camera.extensions.internal.AdaptingRequestUpdateProcessor: void <init>(androidx.camera.extensions.impl.PreviewExtenderImpl)>(r26);

        r4 = r32;

        virtualinvoke r1.<androidx.camera.core.Preview$Builder: androidx.camera.core.Preview$Builder setImageInfoProcessor(androidx.camera.core.impl.ImageInfoProcessor)>(r4);

        r33 = new androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter;

        specialinvoke r33.<androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter: void <init>(androidx.camera.extensions.impl.PreviewExtenderImpl,android.content.Context,androidx.camera.extensions.internal.VendorProcessor)>(r26, r3, r4);

        r27 = r33;

        goto label4;

     label2:
        r34 = new androidx.camera.extensions.internal.AdaptingPreviewProcessor;

        $r15 = interfaceinvoke r26.<androidx.camera.extensions.impl.PreviewExtenderImpl: androidx.camera.extensions.impl.ProcessorImpl getProcessor()>();

        $r16 = (androidx.camera.extensions.impl.PreviewImageProcessorImpl) $r15;

        specialinvoke r34.<androidx.camera.extensions.internal.AdaptingPreviewProcessor: void <init>(androidx.camera.extensions.impl.PreviewImageProcessorImpl)>($r16);

        r5 = r34;

        virtualinvoke r1.<androidx.camera.core.Preview$Builder: androidx.camera.core.Preview$Builder setCaptureProcessor(androidx.camera.core.impl.CaptureProcessor)>(r5);

        virtualinvoke r1.<androidx.camera.core.Preview$Builder: androidx.camera.core.Preview$Builder setIsRgba8888SurfaceRequired(boolean)>(1);

        r35 = new androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter;

        specialinvoke r35.<androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter: void <init>(androidx.camera.extensions.impl.PreviewExtenderImpl,android.content.Context,androidx.camera.extensions.internal.VendorProcessor)>(r26, r3, r5);

        r27 = r35;

        goto label4;

     label3:
        r36 = new androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter;

        specialinvoke r36.<androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter: void <init>(androidx.camera.extensions.impl.PreviewExtenderImpl,android.content.Context,androidx.camera.extensions.internal.VendorProcessor)>(r26, r3, null);

        r27 = r36;

     label4:
        r37 = new androidx.camera.camera2.impl.Camera2ImplConfig$Extender;

        specialinvoke r37.<androidx.camera.camera2.impl.Camera2ImplConfig$Extender: void <init>(androidx.camera.core.ExtendableBuilder)>(r1);

        r38 = new androidx.camera.camera2.impl.CameraEventCallbacks;

        $r30 = newarray (androidx.camera.camera2.impl.CameraEventCallback)[1];

        $r30[0] = r27;

        r39 = (androidx.camera.camera2.impl.CameraEventCallback[]) $r30;

        specialinvoke r38.<androidx.camera.camera2.impl.CameraEventCallbacks: void <init>(androidx.camera.camera2.impl.CameraEventCallback[])>(r39);

        virtualinvoke r37.<androidx.camera.camera2.impl.Camera2ImplConfig$Extender: androidx.camera.camera2.impl.Camera2ImplConfig$Extender setCameraEventCallback(androidx.camera.camera2.impl.CameraEventCallbacks)>(r38);

        virtualinvoke r1.<androidx.camera.core.Preview$Builder: androidx.camera.core.Preview$Builder setUseCaseEventCallback(androidx.camera.core.UseCase$EventCallback)>(r27);

        goto label6;

     label5:
        staticinvoke <androidx.camera.core.Logger: void e(java.lang.String,java.lang.String)>("PreviewConfigProvider", "PreviewExtenderImpl is null!");

     label6:
        goto label8;

     label7:
        virtualinvoke r1.<androidx.camera.core.Preview$Builder: androidx.camera.core.Preview$Builder setIsRgba8888SurfaceRequired(boolean)>(1);

     label8:
        $r7 = virtualinvoke r1.<androidx.camera.core.Preview$Builder: androidx.camera.core.impl.MutableConfig getMutableConfig()>();

        $r8 = <androidx.camera.extensions.internal.PreviewConfigProvider: androidx.camera.core.impl.Config$Option OPTION_PREVIEW_CONFIG_PROVIDER_MODE>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r7.<androidx.camera.core.impl.MutableConfig: void insertOption(androidx.camera.core.impl.Config$Option,java.lang.Object)>($r8, $r9);

        r31 = interfaceinvoke r2.<androidx.camera.extensions.internal.VendorExtender: java.util.List getSupportedPreviewOutputResolutions()>();

        virtualinvoke r1.<androidx.camera.core.Preview$Builder: androidx.camera.core.Preview$Builder setSupportedResolutions(java.util.List)>(r31);

        return;
    }

    public volatile androidx.camera.core.impl.Config getConfig()
    {
        androidx.camera.extensions.internal.PreviewConfigProvider r0;
        androidx.camera.core.impl.PreviewConfig $r1;

        r0 := @this: androidx.camera.extensions.internal.PreviewConfigProvider;

        $r1 = virtualinvoke r0.<androidx.camera.extensions.internal.PreviewConfigProvider: androidx.camera.core.impl.PreviewConfig getConfig()>();

        return $r1;
    }

    static void <clinit>()
    {
        androidx.camera.core.impl.Config$Option $r0;

        $r0 = staticinvoke <androidx.camera.core.impl.Config$Option: androidx.camera.core.impl.Config$Option create(java.lang.String,java.lang.Class)>("camerax.extensions.previewConfigProvider.mode", class "Ljava/lang/Integer;");

        <androidx.camera.extensions.internal.PreviewConfigProvider: androidx.camera.core.impl.Config$Option OPTION_PREVIEW_CONFIG_PROVIDER_MODE> = $r0;

        return;
    }

androidx.camera.extensions.internal.PreviewConfigProvider$1
<androidx.camera.extensions.internal.PreviewConfigProvider$1: int[] $SwitchMap$androidx$camera$extensions$impl$PreviewExtenderImpl$ProcessorType>
    static void <clinit>()
    {
        androidx.camera.extensions.impl.PreviewExtenderImpl$ProcessorType[] $r0;
        int $i0, $i1, $i2;
        int[] $r1, $r3, $r5;
        androidx.camera.extensions.impl.PreviewExtenderImpl$ProcessorType $r2, $r4;
        java.lang.Throwable $r6, $r7, r8, r9;

        $r0 = staticinvoke <androidx.camera.extensions.impl.PreviewExtenderImpl$ProcessorType: androidx.camera.extensions.impl.PreviewExtenderImpl$ProcessorType[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <androidx.camera.extensions.internal.PreviewConfigProvider$1: int[] $SwitchMap$androidx$camera$extensions$impl$PreviewExtenderImpl$ProcessorType> = $r1;

     label1:
        $r3 = <androidx.camera.extensions.internal.PreviewConfigProvider$1: int[] $SwitchMap$androidx$camera$extensions$impl$PreviewExtenderImpl$ProcessorType>;

        $r2 = <androidx.camera.extensions.impl.PreviewExtenderImpl$ProcessorType: androidx.camera.extensions.impl.PreviewExtenderImpl$ProcessorType PROCESSOR_TYPE_REQUEST_UPDATE_ONLY>;

        $i1 = virtualinvoke $r2.<androidx.camera.extensions.impl.PreviewExtenderImpl$ProcessorType: int ordinal()>();

        $r3[$i1] = 1;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r8 = $r7;

     label4:
        $r5 = <androidx.camera.extensions.internal.PreviewConfigProvider$1: int[] $SwitchMap$androidx$camera$extensions$impl$PreviewExtenderImpl$ProcessorType>;

        $r4 = <androidx.camera.extensions.impl.PreviewExtenderImpl$ProcessorType: androidx.camera.extensions.impl.PreviewExtenderImpl$ProcessorType PROCESSOR_TYPE_IMAGE_PROCESSOR>;

        $i2 = virtualinvoke $r4.<androidx.camera.extensions.impl.PreviewExtenderImpl$ProcessorType: int ordinal()>();

        $r5[$i2] = 2;

     label5:
        goto label7;

     label6:
        $r6 := @caughtexception;

        r9 = $r6;

     label7:
        return;

        catch java.lang.NoSuchFieldError from label1 to label2 with label3;
        catch java.lang.NoSuchFieldError from label4 to label5 with label6;
    }

androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter
<androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter: androidx.camera.extensions.impl.PreviewExtenderImpl mImpl>
<androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter: android.content.Context mContext>
<androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter: androidx.camera.extensions.internal.VendorProcessor mPreviewProcessor>
<androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter: androidx.camera.core.CameraInfo mCameraInfo>
<androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter: java.lang.Object mLock>
    void <init>(androidx.camera.extensions.impl.PreviewExtenderImpl, android.content.Context, androidx.camera.extensions.internal.VendorProcessor)
    {
        androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter r0;
        androidx.camera.extensions.impl.PreviewExtenderImpl r1;
        android.content.Context r2;
        androidx.camera.extensions.internal.VendorProcessor r3;
        java.lang.Object $r4;

        r0 := @this: androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter;

        r1 := @parameter0: androidx.camera.extensions.impl.PreviewExtenderImpl;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: androidx.camera.extensions.internal.VendorProcessor;

        specialinvoke r0.<androidx.camera.camera2.impl.CameraEventCallback: void <init>()>();

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter: java.lang.Object mLock> = $r4;

        r0.<androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter: androidx.camera.extensions.impl.PreviewExtenderImpl mImpl> = r1;

        r0.<androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter: android.content.Context mContext> = r2;

        r0.<androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter: androidx.camera.extensions.internal.VendorProcessor mPreviewProcessor> = r3;

        return;
    }

    public void onAttach(androidx.camera.core.CameraInfo)
    {
        androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter r0;
        androidx.camera.core.CameraInfo r1;
        java.lang.Object r2, $r3;

        r0 := @this: androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter;

        r1 := @parameter0: androidx.camera.core.CameraInfo;

        $r3 = r0.<androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        r0.<androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter: androidx.camera.core.CameraInfo mCameraInfo> = r1;

        exitmonitor r2;

        goto label1;

     label1:
        return;
    }

    public void onDetach()
    {
        androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        androidx.camera.extensions.internal.VendorProcessor $r4, $r5;

        r0 := @this: androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter;

        $r3 = r0.<androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter: androidx.camera.extensions.internal.VendorProcessor mPreviewProcessor>;

        if $r4 == null goto label2;

        $r5 = r0.<androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter: androidx.camera.extensions.internal.VendorProcessor mPreviewProcessor>;

        interfaceinvoke $r5.<androidx.camera.extensions.internal.VendorProcessor: void close()>();

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public androidx.camera.core.impl.CaptureConfig onInitSession()
    {
        androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter r0;
        java.lang.Object r1, $r6;
        java.lang.String r2;
        android.hardware.camera2.CameraCharacteristics r3;
        androidx.camera.extensions.impl.CaptureStageImpl r4;
        java.lang.Throwable r5, $r19;
        androidx.camera.core.CameraInfo $r7, $r9, $r11;
        androidx.camera.camera2.interop.Camera2CameraInfo $r10;
        android.content.Context $r12;
        androidx.camera.extensions.impl.PreviewExtenderImpl $r13, $r15;
        androidx.camera.extensions.internal.VendorProcessor $r14, $r18;
        int $i0;
        androidx.camera.extensions.internal.AdaptingCaptureStage $r16;
        androidx.camera.core.impl.CaptureConfig $r17;

        r0 := @this: androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter;

        $r6 = r0.<androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter: java.lang.Object mLock>;

        r1 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter: androidx.camera.core.CameraInfo mCameraInfo>;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r7, "PreviewConfigProvider was not attached.");

        $r9 = r0.<androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter: androidx.camera.core.CameraInfo mCameraInfo>;

        $r10 = staticinvoke <androidx.camera.camera2.interop.Camera2CameraInfo: androidx.camera.camera2.interop.Camera2CameraInfo 'from'(androidx.camera.core.CameraInfo)>($r9);

        r2 = virtualinvoke $r10.<androidx.camera.camera2.interop.Camera2CameraInfo: java.lang.String getCameraId()>();

        $r11 = r0.<androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter: androidx.camera.core.CameraInfo mCameraInfo>;

        r3 = staticinvoke <androidx.camera.camera2.interop.Camera2CameraInfo: android.hardware.camera2.CameraCharacteristics extractCameraCharacteristics(androidx.camera.core.CameraInfo)>($r11);

        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("PreviewConfigProvider", "Preview onInit");

        $r13 = r0.<androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter: androidx.camera.extensions.impl.PreviewExtenderImpl mImpl>;

        $r12 = r0.<androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter: android.content.Context mContext>;

        interfaceinvoke $r13.<androidx.camera.extensions.impl.PreviewExtenderImpl: void onInit(java.lang.String,android.hardware.camera2.CameraCharacteristics,android.content.Context)>(r2, r3, $r12);

        $r14 = r0.<androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter: androidx.camera.extensions.internal.VendorProcessor mPreviewProcessor>;

        if $r14 == null goto label2;

        $r18 = r0.<androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter: androidx.camera.extensions.internal.VendorProcessor mPreviewProcessor>;

        interfaceinvoke $r18.<androidx.camera.extensions.internal.VendorProcessor: void onInit()>();

     label2:
        $r15 = r0.<androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter: androidx.camera.extensions.impl.PreviewExtenderImpl mImpl>;

        r4 = interfaceinvoke $r15.<androidx.camera.extensions.impl.PreviewExtenderImpl: androidx.camera.extensions.impl.CaptureStageImpl onPresetSession()>();

        if r4 == null goto label5;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 28 goto label4;

        $r16 = new androidx.camera.extensions.internal.AdaptingCaptureStage;

        specialinvoke $r16.<androidx.camera.extensions.internal.AdaptingCaptureStage: void <init>(androidx.camera.extensions.impl.CaptureStageImpl)>(r4);

        $r17 = virtualinvoke $r16.<androidx.camera.extensions.internal.AdaptingCaptureStage: androidx.camera.core.impl.CaptureConfig getCaptureConfig()>();

        exitmonitor r1;

     label3:
        return $r17;

     label4:
        staticinvoke <androidx.camera.core.Logger: void w(java.lang.String,java.lang.String)>("PreviewConfigProvider", "The CaptureRequest parameters returned from onPresetSession() will be passed to the camera device as part of the capture session via SessionConfiguration#setSessionParameters(CaptureRequest) which only supported from API level 28!");

     label5:
        exitmonitor r1;

     label6:
        goto label9;

     label7:
        $r19 := @caughtexception;

        r5 = $r19;

        exitmonitor r1;

     label8:
        throw r5;

     label9:
        return null;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public androidx.camera.core.impl.CaptureConfig onEnableSession()
    {
        androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter r0;
        java.lang.Object r1, $r4;
        androidx.camera.extensions.impl.CaptureStageImpl r2;
        java.lang.Throwable r3, $r8;
        androidx.camera.extensions.impl.PreviewExtenderImpl $r5;
        androidx.camera.extensions.internal.AdaptingCaptureStage $r6;
        androidx.camera.core.impl.CaptureConfig $r7;

        r0 := @this: androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter;

        $r4 = r0.<androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter: java.lang.Object mLock>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("PreviewConfigProvider", "Preview onEnableSession");

        $r5 = r0.<androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter: androidx.camera.extensions.impl.PreviewExtenderImpl mImpl>;

        r2 = interfaceinvoke $r5.<androidx.camera.extensions.impl.PreviewExtenderImpl: androidx.camera.extensions.impl.CaptureStageImpl onEnableSession()>();

        if r2 == null goto label3;

        $r6 = new androidx.camera.extensions.internal.AdaptingCaptureStage;

        specialinvoke $r6.<androidx.camera.extensions.internal.AdaptingCaptureStage: void <init>(androidx.camera.extensions.impl.CaptureStageImpl)>(r2);

        $r7 = virtualinvoke $r6.<androidx.camera.extensions.internal.AdaptingCaptureStage: androidx.camera.core.impl.CaptureConfig getCaptureConfig()>();

        exitmonitor r1;

     label2:
        return $r7;

     label3:
        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r1;

     label6:
        throw r3;

     label7:
        return null;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public androidx.camera.core.impl.CaptureConfig onDisableSession()
    {
        androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter r0;
        java.lang.Object r1, $r4;
        androidx.camera.extensions.impl.CaptureStageImpl r2;
        java.lang.Throwable r3, $r8;
        androidx.camera.extensions.impl.PreviewExtenderImpl $r5;
        androidx.camera.extensions.internal.AdaptingCaptureStage $r6;
        androidx.camera.core.impl.CaptureConfig $r7;

        r0 := @this: androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter;

        $r4 = r0.<androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter: java.lang.Object mLock>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("PreviewConfigProvider", "Preview onDisableSession");

        $r5 = r0.<androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter: androidx.camera.extensions.impl.PreviewExtenderImpl mImpl>;

        r2 = interfaceinvoke $r5.<androidx.camera.extensions.impl.PreviewExtenderImpl: androidx.camera.extensions.impl.CaptureStageImpl onDisableSession()>();

        if r2 == null goto label3;

        $r6 = new androidx.camera.extensions.internal.AdaptingCaptureStage;

        specialinvoke $r6.<androidx.camera.extensions.internal.AdaptingCaptureStage: void <init>(androidx.camera.extensions.impl.CaptureStageImpl)>(r2);

        $r7 = virtualinvoke $r6.<androidx.camera.extensions.internal.AdaptingCaptureStage: androidx.camera.core.impl.CaptureConfig getCaptureConfig()>();

        exitmonitor r1;

     label2:
        return $r7;

     label3:
        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r1;

     label6:
        throw r3;

     label7:
        return null;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public androidx.camera.core.impl.CaptureConfig onRepeating()
    {
        androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter r0;
        java.lang.Object r1, $r4;
        androidx.camera.extensions.impl.CaptureStageImpl r2;
        java.lang.Throwable r3, $r8;
        androidx.camera.extensions.impl.PreviewExtenderImpl $r5;
        androidx.camera.extensions.internal.AdaptingCaptureStage $r6;
        androidx.camera.core.impl.CaptureConfig $r7;

        r0 := @this: androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter;

        $r4 = r0.<androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter: java.lang.Object mLock>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter: androidx.camera.extensions.impl.PreviewExtenderImpl mImpl>;

        r2 = interfaceinvoke $r5.<androidx.camera.extensions.impl.PreviewExtenderImpl: androidx.camera.extensions.impl.CaptureStageImpl getCaptureStage()>();

        if r2 == null goto label3;

        $r6 = new androidx.camera.extensions.internal.AdaptingCaptureStage;

        specialinvoke $r6.<androidx.camera.extensions.internal.AdaptingCaptureStage: void <init>(androidx.camera.extensions.impl.CaptureStageImpl)>(r2);

        $r7 = virtualinvoke $r6.<androidx.camera.extensions.internal.AdaptingCaptureStage: androidx.camera.core.impl.CaptureConfig getCaptureConfig()>();

        exitmonitor r1;

     label2:
        return $r7;

     label3:
        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r1;

     label6:
        throw r3;

     label7:
        return null;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void onDeInitSession()
    {
        androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r7;
        androidx.camera.extensions.internal.VendorProcessor $r4, $r6;
        androidx.camera.extensions.impl.PreviewExtenderImpl $r5;

        r0 := @this: androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter;

        $r3 = r0.<androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("PreviewConfigProvider", "Preview onDeInit");

        $r4 = r0.<androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter: androidx.camera.extensions.internal.VendorProcessor mPreviewProcessor>;

        if $r4 == null goto label2;

        $r6 = r0.<androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter: androidx.camera.extensions.internal.VendorProcessor mPreviewProcessor>;

        interfaceinvoke $r6.<androidx.camera.extensions.internal.VendorProcessor: void onDeInit()>();

     label2:
        $r5 = r0.<androidx.camera.extensions.internal.PreviewConfigProvider$PreviewEventAdapter: androidx.camera.extensions.impl.PreviewExtenderImpl mImpl>;

        interfaceinvoke $r5.<androidx.camera.extensions.impl.PreviewExtenderImpl: void onDeInit()>();

        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

