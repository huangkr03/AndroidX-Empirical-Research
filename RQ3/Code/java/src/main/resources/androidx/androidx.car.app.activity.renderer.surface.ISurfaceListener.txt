androidx.car.app.activity.renderer.surface.ISurfaceListener
<androidx.car.app.activity.renderer.surface.ISurfaceListener: void onSurfaceAvailable(androidx.car.app.serialization.Bundleable)>
<androidx.car.app.activity.renderer.surface.ISurfaceListener: void onSurfaceChanged(androidx.car.app.serialization.Bundleable)>
<androidx.car.app.activity.renderer.surface.ISurfaceListener: void onSurfaceDestroyed(androidx.car.app.serialization.Bundleable)>
androidx.car.app.activity.renderer.surface.ISurfaceListener$Default
    public void <init>()
    {
        androidx.car.app.activity.renderer.surface.ISurfaceListener$Default r0;

        r0 := @this: androidx.car.app.activity.renderer.surface.ISurfaceListener$Default;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onSurfaceAvailable(androidx.car.app.serialization.Bundleable) throws android.os.RemoteException
    {
        androidx.car.app.activity.renderer.surface.ISurfaceListener$Default r0;
        androidx.car.app.serialization.Bundleable r1;

        r0 := @this: androidx.car.app.activity.renderer.surface.ISurfaceListener$Default;

        r1 := @parameter0: androidx.car.app.serialization.Bundleable;

        return;
    }

    public void onSurfaceChanged(androidx.car.app.serialization.Bundleable) throws android.os.RemoteException
    {
        androidx.car.app.activity.renderer.surface.ISurfaceListener$Default r0;
        androidx.car.app.serialization.Bundleable r1;

        r0 := @this: androidx.car.app.activity.renderer.surface.ISurfaceListener$Default;

        r1 := @parameter0: androidx.car.app.serialization.Bundleable;

        return;
    }

    public void onSurfaceDestroyed(androidx.car.app.serialization.Bundleable) throws android.os.RemoteException
    {
        androidx.car.app.activity.renderer.surface.ISurfaceListener$Default r0;
        androidx.car.app.serialization.Bundleable r1;

        r0 := @this: androidx.car.app.activity.renderer.surface.ISurfaceListener$Default;

        r1 := @parameter0: androidx.car.app.serialization.Bundleable;

        return;
    }

    public android.os.IBinder asBinder()
    {
        androidx.car.app.activity.renderer.surface.ISurfaceListener$Default r0;

        r0 := @this: androidx.car.app.activity.renderer.surface.ISurfaceListener$Default;

        return null;
    }

androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub$Proxy
<androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub$Proxy: android.os.IBinder mRemote>
<androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub$Proxy: androidx.car.app.activity.renderer.surface.ISurfaceListener sDefaultImpl>
    void <init>(android.os.IBinder)
    {
        androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub$Proxy;

        $r1 = r0.<androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub$Proxy r0;

        r0 := @this: androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub$Proxy;

        return "androidx.car.app.activity.renderer.surface.ISurfaceListener";
    }

    public void onSurfaceAvailable(androidx.car.app.serialization.Bundleable) throws android.os.RemoteException
    {
        androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub$Proxy r0;
        androidx.car.app.serialization.Bundleable r1;
        android.os.Parcel r2;
        boolean z0;
        java.lang.Throwable r3, $r7;
        android.os.IBinder $r4;
        androidx.car.app.activity.renderer.surface.ISurfaceListener $r5, $r6;

        r0 := @this: androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub$Proxy;

        r1 := @parameter0: androidx.car.app.serialization.Bundleable;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.car.app.activity.renderer.surface.ISurfaceListener");

        if r1 == null goto label2;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<androidx.car.app.serialization.Bundleable: void writeToParcel(android.os.Parcel,int)>(r2, 0);

        goto label3;

     label2:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        $r4 = r0.<androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r2, null, 1);

        if z0 != 0 goto label5;

        $r5 = staticinvoke <androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub: androidx.car.app.activity.renderer.surface.ISurfaceListener getDefaultImpl()>();

        if $r5 == null goto label5;

        $r6 = staticinvoke <androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub: androidx.car.app.activity.renderer.surface.ISurfaceListener getDefaultImpl()>();

        interfaceinvoke $r6.<androidx.car.app.activity.renderer.surface.ISurfaceListener: void onSurfaceAvailable(androidx.car.app.serialization.Bundleable)>(r1);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label8;

     label6:
        $r7 := @caughtexception;

        r3 = $r7;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

     label8:
        return;

        catch java.lang.Throwable from label1 to label4 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void onSurfaceChanged(androidx.car.app.serialization.Bundleable) throws android.os.RemoteException
    {
        androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub$Proxy r0;
        androidx.car.app.serialization.Bundleable r1;
        android.os.Parcel r2;
        boolean z0;
        java.lang.Throwable r3, $r7;
        android.os.IBinder $r4;
        androidx.car.app.activity.renderer.surface.ISurfaceListener $r5, $r6;

        r0 := @this: androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub$Proxy;

        r1 := @parameter0: androidx.car.app.serialization.Bundleable;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.car.app.activity.renderer.surface.ISurfaceListener");

        if r1 == null goto label2;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<androidx.car.app.serialization.Bundleable: void writeToParcel(android.os.Parcel,int)>(r2, 0);

        goto label3;

     label2:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        $r4 = r0.<androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r2, null, 1);

        if z0 != 0 goto label5;

        $r5 = staticinvoke <androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub: androidx.car.app.activity.renderer.surface.ISurfaceListener getDefaultImpl()>();

        if $r5 == null goto label5;

        $r6 = staticinvoke <androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub: androidx.car.app.activity.renderer.surface.ISurfaceListener getDefaultImpl()>();

        interfaceinvoke $r6.<androidx.car.app.activity.renderer.surface.ISurfaceListener: void onSurfaceChanged(androidx.car.app.serialization.Bundleable)>(r1);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label8;

     label6:
        $r7 := @caughtexception;

        r3 = $r7;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

     label8:
        return;

        catch java.lang.Throwable from label1 to label4 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void onSurfaceDestroyed(androidx.car.app.serialization.Bundleable) throws android.os.RemoteException
    {
        androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub$Proxy r0;
        androidx.car.app.serialization.Bundleable r1;
        android.os.Parcel r2;
        boolean z0;
        java.lang.Throwable r3, $r7;
        android.os.IBinder $r4;
        androidx.car.app.activity.renderer.surface.ISurfaceListener $r5, $r6;

        r0 := @this: androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub$Proxy;

        r1 := @parameter0: androidx.car.app.serialization.Bundleable;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.car.app.activity.renderer.surface.ISurfaceListener");

        if r1 == null goto label2;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<androidx.car.app.serialization.Bundleable: void writeToParcel(android.os.Parcel,int)>(r2, 0);

        goto label3;

     label2:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        $r4 = r0.<androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r2, null, 1);

        if z0 != 0 goto label5;

        $r5 = staticinvoke <androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub: androidx.car.app.activity.renderer.surface.ISurfaceListener getDefaultImpl()>();

        if $r5 == null goto label5;

        $r6 = staticinvoke <androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub: androidx.car.app.activity.renderer.surface.ISurfaceListener getDefaultImpl()>();

        interfaceinvoke $r6.<androidx.car.app.activity.renderer.surface.ISurfaceListener: void onSurfaceDestroyed(androidx.car.app.serialization.Bundleable)>(r1);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label8;

     label6:
        $r7 := @caughtexception;

        r3 = $r7;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

     label8:
        return;

        catch java.lang.Throwable from label1 to label4 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub
<androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub: java.lang.String DESCRIPTOR>
<androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub: int TRANSACTION_onSurfaceAvailable>
<androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub: int TRANSACTION_onSurfaceChanged>
<androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub: int TRANSACTION_onSurfaceDestroyed>
    public void <init>()
    {
        androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub r0;

        r0 := @this: androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "androidx.car.app.activity.renderer.surface.ISurfaceListener");

        return;
    }

    public static androidx.car.app.activity.renderer.surface.ISurfaceListener asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub$Proxy $r2;
        boolean $z0;
        androidx.car.app.activity.renderer.surface.ISurfaceListener $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("androidx.car.app.activity.renderer.surface.ISurfaceListener");

        if r1 == null goto label2;

        $z0 = r1 instanceof androidx.car.app.activity.renderer.surface.ISurfaceListener;

        if $z0 == 0 goto label2;

        $r3 = (androidx.car.app.activity.renderer.surface.ISurfaceListener) r1;

        return $r3;

     label2:
        $r2 = new androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub$Proxy;

        specialinvoke $r2.<androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public android.os.IBinder asBinder()
    {
        androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub r0;
        android.os.IBinder r1;

        r0 := @this: androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub;

        r1 = (android.os.IBinder) r0;

        return r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub r0;
        int i0, i1, $i2, $i3, $i4;
        android.os.Parcel r1, r2;
        java.lang.String r3;
        android.os.Parcelable$Creator $r4, $r6, $r8;
        java.lang.Object $r5, $r7, $r9;
        boolean $z0;
        androidx.car.app.serialization.Bundleable r10, r11, r12;

        r0 := @this: androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Parcel;

        r2 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

        r3 = "androidx.car.app.activity.renderer.surface.ISurfaceListener";

        lookupswitch(i0)
        {
            case 2: goto label02;
            case 3: goto label05;
            case 4: goto label08;
            case 1598968902: goto label01;
            default: goto label11;
        };

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        return 1;

     label02:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r3);

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i4 goto label03;

        $r8 = <androidx.car.app.serialization.Bundleable: android.os.Parcelable$Creator CREATOR>;

        $r9 = interfaceinvoke $r8.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r10 = (androidx.car.app.serialization.Bundleable) $r9;

        goto label04;

     label03:
        r10 = null;

     label04:
        virtualinvoke r0.<androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub: void onSurfaceAvailable(androidx.car.app.serialization.Bundleable)>(r10);

        return 1;

     label05:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r3);

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i3 goto label06;

        $r6 = <androidx.car.app.serialization.Bundleable: android.os.Parcelable$Creator CREATOR>;

        $r7 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r11 = (androidx.car.app.serialization.Bundleable) $r7;

        goto label07;

     label06:
        r11 = null;

     label07:
        virtualinvoke r0.<androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub: void onSurfaceChanged(androidx.car.app.serialization.Bundleable)>(r11);

        return 1;

     label08:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r3);

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i2 goto label09;

        $r4 = <androidx.car.app.serialization.Bundleable: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r12 = (androidx.car.app.serialization.Bundleable) $r5;

        goto label10;

     label09:
        r12 = null;

     label10:
        virtualinvoke r0.<androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub: void onSurfaceDestroyed(androidx.car.app.serialization.Bundleable)>(r12);

        return 1;

     label11:
        $z0 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r1, r2, i1);

        return $z0;
    }

    public static boolean setDefaultImpl(androidx.car.app.activity.renderer.surface.ISurfaceListener)
    {
        androidx.car.app.activity.renderer.surface.ISurfaceListener r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: androidx.car.app.activity.renderer.surface.ISurfaceListener;

        $r1 = <androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub$Proxy: androidx.car.app.activity.renderer.surface.ISurfaceListener sDefaultImpl>;

        if $r1 == null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;

     label1:
        if r0 == null goto label2;

        <androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub$Proxy: androidx.car.app.activity.renderer.surface.ISurfaceListener sDefaultImpl> = r0;

        return 1;

     label2:
        return 0;
    }

    public static androidx.car.app.activity.renderer.surface.ISurfaceListener getDefaultImpl()
    {
        androidx.car.app.activity.renderer.surface.ISurfaceListener $r0;

        $r0 = <androidx.car.app.activity.renderer.surface.ISurfaceListener$Stub$Proxy: androidx.car.app.activity.renderer.surface.ISurfaceListener sDefaultImpl>;

        return $r0;
    }

