androidx.room.compiler.processing.ksp.KSTypeExtKt
    public static final java.lang.String getNormalizedPackageName(com.google.devtools.ksp.symbol.KSDeclaration)
    {
        com.google.devtools.ksp.symbol.KSDeclaration $r0;
        java.lang.String r1, $r3;
        com.google.devtools.ksp.symbol.KSName $r2;
        boolean $z1;

        $r0 := @parameter0: com.google.devtools.ksp.symbol.KSDeclaration;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r2 = interfaceinvoke $r0.<com.google.devtools.ksp.symbol.KSDeclaration: com.google.devtools.ksp.symbol.KSName getPackageName()>();

        r1 = interfaceinvoke $r2.<com.google.devtools.ksp.symbol.KSName: java.lang.String asString()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, "<root>");

        if $z1 == 0 goto label1;

        $r3 = "";

        goto label2;

     label1:
        $r3 = r1;

     label2:
        return $r3;
    }

    public static final com.google.devtools.ksp.symbol.KSType requireType(com.google.devtools.ksp.symbol.KSTypeArgument)
    {
        com.google.devtools.ksp.symbol.KSTypeArgument $r0;
        com.google.devtools.ksp.symbol.KSTypeReference $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.IllegalStateException $r5;
        java.lang.String $r6, $r8;
        com.google.devtools.ksp.symbol.KSType $r7;

        $r0 := @parameter0: com.google.devtools.ksp.symbol.KSTypeArgument;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<com.google.devtools.ksp.symbol.KSTypeArgument: com.google.devtools.ksp.symbol.KSTypeReference getType()>();

        if $r1 == null goto label1;

        $r7 = interfaceinvoke $r1.<com.google.devtools.ksp.symbol.KSTypeReference: com.google.devtools.ksp.symbol.KSType resolve()>();

        goto label2;

     label1:
        $r7 = null;

     label2:
        if $r7 != null goto label3;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("KSTypeArgument.type should not have been null, please file a bug. ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label3:
        return $r7;
    }

    public static final boolean isTypeParameterReference(com.google.devtools.ksp.symbol.KSTypeReference)
    {
        com.google.devtools.ksp.symbol.KSTypeReference $r0;
        com.google.devtools.ksp.symbol.KSType $r1;
        com.google.devtools.ksp.symbol.KSDeclaration $r2;
        boolean $z0;

        $r0 := @parameter0: com.google.devtools.ksp.symbol.KSTypeReference;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<com.google.devtools.ksp.symbol.KSTypeReference: com.google.devtools.ksp.symbol.KSType resolve()>();

        $r2 = interfaceinvoke $r1.<com.google.devtools.ksp.symbol.KSType: com.google.devtools.ksp.symbol.KSDeclaration getDeclaration()>();

        $z0 = $r2 instanceof com.google.devtools.ksp.symbol.KSTypeParameter;

        return $z0;
    }

    public static final boolean isInline(com.google.devtools.ksp.symbol.KSType)
    {
        com.google.devtools.ksp.symbol.KSType $r0;
        com.google.devtools.ksp.symbol.KSDeclaration $r1;
        java.util.Set $r2;
        com.google.devtools.ksp.symbol.Modifier $r3;
        boolean $z0;

        $r0 := @parameter0: com.google.devtools.ksp.symbol.KSType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = interfaceinvoke $r0.<com.google.devtools.ksp.symbol.KSType: com.google.devtools.ksp.symbol.KSDeclaration getDeclaration()>();

        $r2 = interfaceinvoke $r1.<com.google.devtools.ksp.symbol.KSDeclaration: java.util.Set getModifiers()>();

        $r3 = <com.google.devtools.ksp.symbol.Modifier: com.google.devtools.ksp.symbol.Modifier INLINE>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        return $z0;
    }

    public static final com.google.devtools.ksp.symbol.KSType withNullability(com.google.devtools.ksp.symbol.KSType, androidx.room.compiler.processing.XNullability)
    {
        com.google.devtools.ksp.symbol.KSType $r0, $r4;
        androidx.room.compiler.processing.XNullability r1;
        int[] $r2;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r3;

        $r0 := @parameter0: com.google.devtools.ksp.symbol.KSType;

        r1 := @parameter1: androidx.room.compiler.processing.XNullability;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "nullability");

        $r2 = <androidx.room.compiler.processing.ksp.KSTypeExtKt$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke r1.<androidx.room.compiler.processing.XNullability: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $r4 = interfaceinvoke $r0.<com.google.devtools.ksp.symbol.KSType: com.google.devtools.ksp.symbol.KSType makeNullable()>();

        goto label4;

     label2:
        $r4 = interfaceinvoke $r0.<com.google.devtools.ksp.symbol.KSType: com.google.devtools.ksp.symbol.KSType makeNotNullable()>();

        goto label4;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot set KSType nullability to platform");

        throw $r3;

     label4:
        return $r4;
    }

    private static final boolean hasAnnotation(com.google.devtools.ksp.symbol.KSAnnotated, java.lang.String)
    {
        com.google.devtools.ksp.symbol.KSAnnotated $r0;
        java.lang.String r1, $r10;
        kotlin.sequences.Sequence $r2;
        java.util.Iterator r3;
        java.lang.Object r4;
        com.google.devtools.ksp.symbol.KSAnnotation r5;
        boolean $z2, $z3, $z4;
        com.google.devtools.ksp.symbol.KSTypeReference $r6;
        com.google.devtools.ksp.symbol.KSType $r7;
        com.google.devtools.ksp.symbol.KSDeclaration $r8;
        com.google.devtools.ksp.symbol.KSName $r9;

        $r0 := @parameter0: com.google.devtools.ksp.symbol.KSAnnotated;

        r1 := @parameter1: java.lang.String;

        $r2 = interfaceinvoke $r0.<com.google.devtools.ksp.symbol.KSAnnotated: kotlin.sequences.Sequence getAnnotations()>();

        r3 = interfaceinvoke $r2.<kotlin.sequences.Sequence: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.google.devtools.ksp.symbol.KSAnnotation) r4;

        $r6 = interfaceinvoke r5.<com.google.devtools.ksp.symbol.KSAnnotation: com.google.devtools.ksp.symbol.KSTypeReference getAnnotationType()>();

        $r7 = interfaceinvoke $r6.<com.google.devtools.ksp.symbol.KSTypeReference: com.google.devtools.ksp.symbol.KSType resolve()>();

        $r8 = interfaceinvoke $r7.<com.google.devtools.ksp.symbol.KSType: com.google.devtools.ksp.symbol.KSDeclaration getDeclaration()>();

        $r9 = interfaceinvoke $r8.<com.google.devtools.ksp.symbol.KSDeclaration: com.google.devtools.ksp.symbol.KSName getQualifiedName()>();

        if $r9 == null goto label2;

        $r10 = interfaceinvoke $r9.<com.google.devtools.ksp.symbol.KSName: java.lang.String asString()>();

        goto label3;

     label2:
        $r10 = null;

     label3:
        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r10, r1);

        if $z3 == 0 goto label1;

        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        return $z4;
    }

    public static final boolean hasJvmWildcardAnnotation(com.google.devtools.ksp.symbol.KSAnnotated)
    {
        com.google.devtools.ksp.symbol.KSAnnotated $r0;
        java.lang.Class $r1;
        java.lang.String $r2;
        boolean $z0;

        $r0 := @parameter0: com.google.devtools.ksp.symbol.KSAnnotated;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = class "Lkotlin/jvm/JvmWildcard;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getCanonicalName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r2);

        $z0 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeExtKt: boolean hasAnnotation(com.google.devtools.ksp.symbol.KSAnnotated,java.lang.String)>($r0, $r2);

        return $z0;
    }

    public static final boolean hasSuppressJvmWildcardAnnotation(com.google.devtools.ksp.symbol.KSAnnotated)
    {
        com.google.devtools.ksp.symbol.KSAnnotated $r0;
        java.lang.Class $r1;
        java.lang.String $r2;
        boolean $z0;

        $r0 := @parameter0: com.google.devtools.ksp.symbol.KSAnnotated;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = class "Lkotlin/jvm/JvmSuppressWildcards;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getCanonicalName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r2);

        $z0 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeExtKt: boolean hasAnnotation(com.google.devtools.ksp.symbol.KSAnnotated,java.lang.String)>($r0, $r2);

        return $z0;
    }

    public static final boolean hasSuppressWildcardsAnnotationInHierarchy(com.google.devtools.ksp.symbol.KSNode)
    {
        com.google.devtools.ksp.symbol.KSNode $r0, r1, $r3;
        com.google.devtools.ksp.symbol.KSAnnotated r2, $r4, $r5;
        boolean $z1, $z2, $z3;

        $r0 := @parameter0: com.google.devtools.ksp.symbol.KSNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z1 = $r0 instanceof com.google.devtools.ksp.symbol.KSAnnotated;

        if $z1 == 0 goto label1;

        $r5 = (com.google.devtools.ksp.symbol.KSAnnotated) $r0;

        goto label2;

     label1:
        $r5 = null;

     label2:
        if $r5 == null goto label4;

        r2 = $r5;

        $r4 = (com.google.devtools.ksp.symbol.KSAnnotated) $r0;

        $z3 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeExtKt: boolean hasSuppressJvmWildcardAnnotation(com.google.devtools.ksp.symbol.KSAnnotated)>($r4);

        if $z3 == 0 goto label3;

        return 1;

     label3:
        goto label4;

     label4:
        $r3 = interfaceinvoke $r0.<com.google.devtools.ksp.symbol.KSNode: com.google.devtools.ksp.symbol.KSNode getParent()>();

        if $r3 != null goto label5;

        return 0;

     label5:
        r1 = $r3;

        $z2 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeExtKt: boolean hasSuppressWildcardsAnnotationInHierarchy(com.google.devtools.ksp.symbol.KSNode)>(r1);

        return $z2;
    }

