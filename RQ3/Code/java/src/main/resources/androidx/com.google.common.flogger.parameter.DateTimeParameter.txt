com.google.common.flogger.parameter.DateTimeParameter
<com.google.common.flogger.parameter.DateTimeParameter: com.google.common.flogger.parameter.DateTimeFormat format>
<com.google.common.flogger.parameter.DateTimeParameter: java.lang.String formatString>
    private void <init>(com.google.common.flogger.backend.FormatOptions, int, com.google.common.flogger.parameter.DateTimeFormat)
    {
        com.google.common.flogger.parameter.DateTimeParameter $r0;
        com.google.common.flogger.parameter.DateTimeFormat $r1;
        com.google.common.flogger.backend.FormatOptions $r2;
        int $i0;
        java.lang.StringBuilder $r3;
        boolean $z0;
        char $c1;
        java.lang.String $r4;

        $r0 := @this: com.google.common.flogger.parameter.DateTimeParameter;

        $r2 := @parameter0: com.google.common.flogger.backend.FormatOptions;

        $i0 := @parameter1: int;

        $r1 := @parameter2: com.google.common.flogger.parameter.DateTimeFormat;

        specialinvoke $r0.<com.google.common.flogger.parameter.Parameter: void <init>(com.google.common.flogger.backend.FormatOptions,int)>($r2, $i0);

        $r0.<com.google.common.flogger.parameter.DateTimeParameter: com.google.common.flogger.parameter.DateTimeFormat format> = $r1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("%");

        $r3 = virtualinvoke $r2.<com.google.common.flogger.backend.FormatOptions: java.lang.StringBuilder appendPrintfOptions(java.lang.StringBuilder)>($r3);

        $z0 = virtualinvoke $r2.<com.google.common.flogger.backend.FormatOptions: boolean shouldUpperCase()>();

        if $z0 == 0 goto label1;

        $c1 = 84;

        goto label2;

     label1:
        $c1 = 116;

     label2:
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        $c1 = virtualinvoke $r1.<com.google.common.flogger.parameter.DateTimeFormat: char getChar()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0.<com.google.common.flogger.parameter.DateTimeParameter: java.lang.String formatString> = $r4;

        return;
    }

    public static com.google.common.flogger.parameter.Parameter of(com.google.common.flogger.parameter.DateTimeFormat, com.google.common.flogger.backend.FormatOptions, int)
    {
        com.google.common.flogger.parameter.DateTimeFormat $r0;
        com.google.common.flogger.backend.FormatOptions $r1;
        int $i0;
        com.google.common.flogger.parameter.DateTimeParameter $r2;

        $r0 := @parameter0: com.google.common.flogger.parameter.DateTimeFormat;

        $r1 := @parameter1: com.google.common.flogger.backend.FormatOptions;

        $i0 := @parameter2: int;

        $r2 = new com.google.common.flogger.parameter.DateTimeParameter;

        specialinvoke $r2.<com.google.common.flogger.parameter.DateTimeParameter: void <init>(com.google.common.flogger.backend.FormatOptions,int,com.google.common.flogger.parameter.DateTimeFormat)>($r1, $i0, $r0);

        return $r2;
    }

    protected void accept(com.google.common.flogger.parameter.ParameterVisitor, java.lang.Object)
    {
        com.google.common.flogger.parameter.DateTimeParameter $r0;
        com.google.common.flogger.parameter.ParameterVisitor $r1;
        java.lang.Object $r2;
        com.google.common.flogger.parameter.DateTimeFormat $r3;
        com.google.common.flogger.backend.FormatOptions $r4;

        $r0 := @this: com.google.common.flogger.parameter.DateTimeParameter;

        $r1 := @parameter0: com.google.common.flogger.parameter.ParameterVisitor;

        $r2 := @parameter1: java.lang.Object;

        $r3 = $r0.<com.google.common.flogger.parameter.DateTimeParameter: com.google.common.flogger.parameter.DateTimeFormat format>;

        $r4 = virtualinvoke $r0.<com.google.common.flogger.parameter.DateTimeParameter: com.google.common.flogger.backend.FormatOptions getFormatOptions()>();

        interfaceinvoke $r1.<com.google.common.flogger.parameter.ParameterVisitor: void visitDateTime(java.lang.Object,com.google.common.flogger.parameter.DateTimeFormat,com.google.common.flogger.backend.FormatOptions)>($r2, $r3, $r4);

        return;
    }

