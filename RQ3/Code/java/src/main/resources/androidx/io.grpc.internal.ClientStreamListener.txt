io.grpc.internal.ClientStreamListener
<io.grpc.internal.ClientStreamListener: void closed(io.grpc.Status,io.grpc.internal.ClientStreamListener$RpcProgress,io.grpc.Metadata)>
<io.grpc.internal.ClientStreamListener: void headersRead(io.grpc.Metadata)>
io.grpc.internal.ClientStreamListener$RpcProgress
<io.grpc.internal.ClientStreamListener$RpcProgress: io.grpc.internal.ClientStreamListener$RpcProgress[] $VALUES>
<io.grpc.internal.ClientStreamListener$RpcProgress: io.grpc.internal.ClientStreamListener$RpcProgress DROPPED>
<io.grpc.internal.ClientStreamListener$RpcProgress: io.grpc.internal.ClientStreamListener$RpcProgress MISCARRIED>
<io.grpc.internal.ClientStreamListener$RpcProgress: io.grpc.internal.ClientStreamListener$RpcProgress PROCESSED>
<io.grpc.internal.ClientStreamListener$RpcProgress: io.grpc.internal.ClientStreamListener$RpcProgress REFUSED>
    private static io.grpc.internal.ClientStreamListener$RpcProgress[] $values()
    {
        io.grpc.internal.ClientStreamListener$RpcProgress[] $r0;
        io.grpc.internal.ClientStreamListener$RpcProgress $r1;

        $r0 = newarray (io.grpc.internal.ClientStreamListener$RpcProgress)[4];

        $r1 = <io.grpc.internal.ClientStreamListener$RpcProgress: io.grpc.internal.ClientStreamListener$RpcProgress PROCESSED>;

        $r0[0] = $r1;

        $r1 = <io.grpc.internal.ClientStreamListener$RpcProgress: io.grpc.internal.ClientStreamListener$RpcProgress REFUSED>;

        $r0[1] = $r1;

        $r1 = <io.grpc.internal.ClientStreamListener$RpcProgress: io.grpc.internal.ClientStreamListener$RpcProgress DROPPED>;

        $r0[2] = $r1;

        $r1 = <io.grpc.internal.ClientStreamListener$RpcProgress: io.grpc.internal.ClientStreamListener$RpcProgress MISCARRIED>;

        $r0[3] = $r1;

        return $r0;
    }

    static void <clinit>()
    {
        io.grpc.internal.ClientStreamListener$RpcProgress[] $r0;
        io.grpc.internal.ClientStreamListener$RpcProgress $r1;

        $r1 = new io.grpc.internal.ClientStreamListener$RpcProgress;

        specialinvoke $r1.<io.grpc.internal.ClientStreamListener$RpcProgress: void <init>(java.lang.String,int)>("PROCESSED", 0);

        <io.grpc.internal.ClientStreamListener$RpcProgress: io.grpc.internal.ClientStreamListener$RpcProgress PROCESSED> = $r1;

        $r1 = new io.grpc.internal.ClientStreamListener$RpcProgress;

        specialinvoke $r1.<io.grpc.internal.ClientStreamListener$RpcProgress: void <init>(java.lang.String,int)>("REFUSED", 1);

        <io.grpc.internal.ClientStreamListener$RpcProgress: io.grpc.internal.ClientStreamListener$RpcProgress REFUSED> = $r1;

        $r1 = new io.grpc.internal.ClientStreamListener$RpcProgress;

        specialinvoke $r1.<io.grpc.internal.ClientStreamListener$RpcProgress: void <init>(java.lang.String,int)>("DROPPED", 2);

        <io.grpc.internal.ClientStreamListener$RpcProgress: io.grpc.internal.ClientStreamListener$RpcProgress DROPPED> = $r1;

        $r1 = new io.grpc.internal.ClientStreamListener$RpcProgress;

        specialinvoke $r1.<io.grpc.internal.ClientStreamListener$RpcProgress: void <init>(java.lang.String,int)>("MISCARRIED", 3);

        <io.grpc.internal.ClientStreamListener$RpcProgress: io.grpc.internal.ClientStreamListener$RpcProgress MISCARRIED> = $r1;

        $r0 = staticinvoke <io.grpc.internal.ClientStreamListener$RpcProgress: io.grpc.internal.ClientStreamListener$RpcProgress[] $values()>();

        <io.grpc.internal.ClientStreamListener$RpcProgress: io.grpc.internal.ClientStreamListener$RpcProgress[] $VALUES> = $r0;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        io.grpc.internal.ClientStreamListener$RpcProgress $r0;
        java.lang.String $r1;
        int $i0;

        $r0 := @this: io.grpc.internal.ClientStreamListener$RpcProgress;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke $r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static io.grpc.internal.ClientStreamListener$RpcProgress[] values()
    {
        java.lang.Object $r0;
        io.grpc.internal.ClientStreamListener$RpcProgress[] $r1;

        $r1 = <io.grpc.internal.ClientStreamListener$RpcProgress: io.grpc.internal.ClientStreamListener$RpcProgress[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (io.grpc.internal.ClientStreamListener$RpcProgress[]) $r0;

        return $r1;
    }

