androidx.media2.MediaSession
<androidx.media2.MediaSession: java.lang.String TAG>
<androidx.media2.MediaSession: androidx.media2.MediaSession$MediaSessionImpl mImpl>
    void <init>(android.content.Context, java.lang.String, androidx.media2.SessionPlayer, android.app.PendingIntent, java.util.concurrent.Executor, androidx.media2.MediaSession$SessionCallback)
    {
        androidx.media2.MediaSession r0;
        android.content.Context r1;
        java.lang.String r2;
        androidx.media2.SessionPlayer r3;
        android.app.PendingIntent r4;
        java.util.concurrent.Executor r5;
        androidx.media2.MediaSession$SessionCallback r6;
        androidx.media2.MediaSession$MediaSessionImpl $r7;

        r0 := @this: androidx.media2.MediaSession;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.media2.SessionPlayer;

        r4 := @parameter3: android.app.PendingIntent;

        r5 := @parameter4: java.util.concurrent.Executor;

        r6 := @parameter5: androidx.media2.MediaSession$SessionCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r7 = virtualinvoke r0.<androidx.media2.MediaSession: androidx.media2.MediaSession$MediaSessionImpl createImpl(android.content.Context,java.lang.String,androidx.media2.SessionPlayer,android.app.PendingIntent,java.util.concurrent.Executor,androidx.media2.MediaSession$SessionCallback)>(r1, r2, r3, r4, r5, r6);

        r0.<androidx.media2.MediaSession: androidx.media2.MediaSession$MediaSessionImpl mImpl> = $r7;

        return;
    }

    androidx.media2.MediaSession$MediaSessionImpl createImpl(android.content.Context, java.lang.String, androidx.media2.SessionPlayer, android.app.PendingIntent, java.util.concurrent.Executor, androidx.media2.MediaSession$SessionCallback)
    {
        androidx.media2.MediaSession r0;
        android.content.Context r1;
        java.lang.String r2;
        androidx.media2.SessionPlayer r3;
        android.app.PendingIntent r4;
        java.util.concurrent.Executor r5;
        androidx.media2.MediaSession$SessionCallback r6;
        androidx.media2.MediaSessionImplBase $r7;

        r0 := @this: androidx.media2.MediaSession;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.media2.SessionPlayer;

        r4 := @parameter3: android.app.PendingIntent;

        r5 := @parameter4: java.util.concurrent.Executor;

        r6 := @parameter5: androidx.media2.MediaSession$SessionCallback;

        $r7 = new androidx.media2.MediaSessionImplBase;

        specialinvoke $r7.<androidx.media2.MediaSessionImplBase: void <init>(androidx.media2.MediaSession,android.content.Context,java.lang.String,androidx.media2.SessionPlayer,android.app.PendingIntent,java.util.concurrent.Executor,androidx.media2.MediaSession$SessionCallback)>(r0, r1, r2, r3, r4, r5, r6);

        return $r7;
    }

    androidx.media2.MediaSession$MediaSessionImpl getImpl()
    {
        androidx.media2.MediaSession r0;
        androidx.media2.MediaSession$MediaSessionImpl $r1;

        r0 := @this: androidx.media2.MediaSession;

        $r1 = r0.<androidx.media2.MediaSession: androidx.media2.MediaSession$MediaSessionImpl mImpl>;

        return $r1;
    }

    public void updatePlayer(androidx.media2.SessionPlayer)
    {
        androidx.media2.MediaSession r0;
        androidx.media2.SessionPlayer r1;
        androidx.media2.MediaSession$MediaSessionImpl $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: androidx.media2.MediaSession;

        r1 := @parameter0: androidx.media2.SessionPlayer;

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("player shouldn\'t be null");

        throw $r3;

     label1:
        $r2 = r0.<androidx.media2.MediaSession: androidx.media2.MediaSession$MediaSessionImpl mImpl>;

        interfaceinvoke $r2.<androidx.media2.MediaSession$MediaSessionImpl: void updatePlayer(androidx.media2.SessionPlayer)>(r1);

        return;
    }

    public void close()
    {
        androidx.media2.MediaSession r0;
        java.lang.Throwable r1, $r3;
        androidx.media2.MediaSession$MediaSessionImpl $r2;

        r0 := @this: androidx.media2.MediaSession;

     label1:
        $r2 = r0.<androidx.media2.MediaSession: androidx.media2.MediaSession$MediaSessionImpl mImpl>;

        interfaceinvoke $r2.<androidx.media2.MediaSession$MediaSessionImpl: void close()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public boolean isClosed()
    {
        androidx.media2.MediaSession r0;
        androidx.media2.MediaSession$MediaSessionImpl $r1;
        boolean $z0;

        r0 := @this: androidx.media2.MediaSession;

        $r1 = r0.<androidx.media2.MediaSession: androidx.media2.MediaSession$MediaSessionImpl mImpl>;

        $z0 = interfaceinvoke $r1.<androidx.media2.MediaSession$MediaSessionImpl: boolean isClosed()>();

        return $z0;
    }

    public androidx.media2.SessionPlayer getPlayer()
    {
        androidx.media2.MediaSession r0;
        androidx.media2.MediaSession$MediaSessionImpl $r1;
        androidx.media2.SessionPlayer $r2;

        r0 := @this: androidx.media2.MediaSession;

        $r1 = r0.<androidx.media2.MediaSession: androidx.media2.MediaSession$MediaSessionImpl mImpl>;

        $r2 = interfaceinvoke $r1.<androidx.media2.MediaSession$MediaSessionImpl: androidx.media2.SessionPlayer getPlayer()>();

        return $r2;
    }

    public java.lang.String getId()
    {
        androidx.media2.MediaSession r0;
        androidx.media2.MediaSession$MediaSessionImpl $r1;
        java.lang.String $r2;

        r0 := @this: androidx.media2.MediaSession;

        $r1 = r0.<androidx.media2.MediaSession: androidx.media2.MediaSession$MediaSessionImpl mImpl>;

        $r2 = interfaceinvoke $r1.<androidx.media2.MediaSession$MediaSessionImpl: java.lang.String getId()>();

        return $r2;
    }

    public androidx.media2.SessionToken getToken()
    {
        androidx.media2.MediaSession r0;
        androidx.media2.MediaSession$MediaSessionImpl $r1;
        androidx.media2.SessionToken $r2;

        r0 := @this: androidx.media2.MediaSession;

        $r1 = r0.<androidx.media2.MediaSession: androidx.media2.MediaSession$MediaSessionImpl mImpl>;

        $r2 = interfaceinvoke $r1.<androidx.media2.MediaSession$MediaSessionImpl: androidx.media2.SessionToken getToken()>();

        return $r2;
    }

    android.content.Context getContext()
    {
        androidx.media2.MediaSession r0;
        androidx.media2.MediaSession$MediaSessionImpl $r1;
        android.content.Context $r2;

        r0 := @this: androidx.media2.MediaSession;

        $r1 = r0.<androidx.media2.MediaSession: androidx.media2.MediaSession$MediaSessionImpl mImpl>;

        $r2 = interfaceinvoke $r1.<androidx.media2.MediaSession$MediaSessionImpl: android.content.Context getContext()>();

        return $r2;
    }

    java.util.concurrent.Executor getCallbackExecutor()
    {
        androidx.media2.MediaSession r0;
        androidx.media2.MediaSession$MediaSessionImpl $r1;
        java.util.concurrent.Executor $r2;

        r0 := @this: androidx.media2.MediaSession;

        $r1 = r0.<androidx.media2.MediaSession: androidx.media2.MediaSession$MediaSessionImpl mImpl>;

        $r2 = interfaceinvoke $r1.<androidx.media2.MediaSession$MediaSessionImpl: java.util.concurrent.Executor getCallbackExecutor()>();

        return $r2;
    }

    androidx.media2.MediaSession$SessionCallback getCallback()
    {
        androidx.media2.MediaSession r0;
        androidx.media2.MediaSession$MediaSessionImpl $r1;
        androidx.media2.MediaSession$SessionCallback $r2;

        r0 := @this: androidx.media2.MediaSession;

        $r1 = r0.<androidx.media2.MediaSession: androidx.media2.MediaSession$MediaSessionImpl mImpl>;

        $r2 = interfaceinvoke $r1.<androidx.media2.MediaSession$MediaSessionImpl: androidx.media2.MediaSession$SessionCallback getCallback()>();

        return $r2;
    }

    public java.util.List getConnectedControllers()
    {
        androidx.media2.MediaSession r0;
        androidx.media2.MediaSession$MediaSessionImpl $r1;
        java.util.List $r2;

        r0 := @this: androidx.media2.MediaSession;

        $r1 = r0.<androidx.media2.MediaSession: androidx.media2.MediaSession$MediaSessionImpl mImpl>;

        $r2 = interfaceinvoke $r1.<androidx.media2.MediaSession$MediaSessionImpl: java.util.List getConnectedControllers()>();

        return $r2;
    }

    public com.google.common.util.concurrent.ListenableFuture setCustomLayout(androidx.media2.MediaSession$ControllerInfo, java.util.List)
    {
        androidx.media2.MediaSession r0;
        androidx.media2.MediaSession$ControllerInfo r1;
        java.util.List r2;
        androidx.media2.MediaSession$MediaSessionImpl $r3;
        com.google.common.util.concurrent.ListenableFuture $r4;
        java.lang.IllegalArgumentException $r5, $r6;

        r0 := @this: androidx.media2.MediaSession;

        r1 := @parameter0: androidx.media2.MediaSession$ControllerInfo;

        r2 := @parameter1: java.util.List;

        if r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("controller shouldn\'t be null");

        throw $r6;

     label1:
        if r2 != null goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("layout shouldn\'t be null");

        throw $r5;

     label2:
        $r3 = r0.<androidx.media2.MediaSession: androidx.media2.MediaSession$MediaSessionImpl mImpl>;

        $r4 = interfaceinvoke $r3.<androidx.media2.MediaSession$MediaSessionImpl: com.google.common.util.concurrent.ListenableFuture setCustomLayout(androidx.media2.MediaSession$ControllerInfo,java.util.List)>(r1, r2);

        return $r4;
    }

    public void setAllowedCommands(androidx.media2.MediaSession$ControllerInfo, androidx.media2.SessionCommandGroup)
    {
        androidx.media2.MediaSession r0;
        androidx.media2.MediaSession$ControllerInfo r1;
        androidx.media2.SessionCommandGroup r2;
        androidx.media2.MediaSession$MediaSessionImpl $r3;
        java.lang.IllegalArgumentException $r4, $r5;

        r0 := @this: androidx.media2.MediaSession;

        r1 := @parameter0: androidx.media2.MediaSession$ControllerInfo;

        r2 := @parameter1: androidx.media2.SessionCommandGroup;

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("controller shouldn\'t be null");

        throw $r5;

     label1:
        if r2 != null goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("commands shouldn\'t be null");

        throw $r4;

     label2:
        $r3 = r0.<androidx.media2.MediaSession: androidx.media2.MediaSession$MediaSessionImpl mImpl>;

        interfaceinvoke $r3.<androidx.media2.MediaSession$MediaSessionImpl: void setAllowedCommands(androidx.media2.MediaSession$ControllerInfo,androidx.media2.SessionCommandGroup)>(r1, r2);

        return;
    }

    public void broadcastCustomCommand(androidx.media2.SessionCommand, android.os.Bundle)
    {
        androidx.media2.MediaSession r0;
        androidx.media2.SessionCommand r1;
        android.os.Bundle r2;
        androidx.media2.MediaSession$MediaSessionImpl $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: androidx.media2.MediaSession;

        r1 := @parameter0: androidx.media2.SessionCommand;

        r2 := @parameter1: android.os.Bundle;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("command shouldn\'t be null");

        throw $r4;

     label1:
        $r3 = r0.<androidx.media2.MediaSession: androidx.media2.MediaSession$MediaSessionImpl mImpl>;

        interfaceinvoke $r3.<androidx.media2.MediaSession$MediaSessionImpl: void broadcastCustomCommand(androidx.media2.SessionCommand,android.os.Bundle)>(r1, r2);

        return;
    }

    public com.google.common.util.concurrent.ListenableFuture sendCustomCommand(androidx.media2.MediaSession$ControllerInfo, androidx.media2.SessionCommand, android.os.Bundle)
    {
        androidx.media2.MediaSession r0;
        androidx.media2.MediaSession$ControllerInfo r1;
        androidx.media2.SessionCommand r2;
        android.os.Bundle r3;
        androidx.media2.MediaSession$MediaSessionImpl $r4;
        com.google.common.util.concurrent.ListenableFuture $r5;
        java.lang.IllegalArgumentException $r6, $r7;

        r0 := @this: androidx.media2.MediaSession;

        r1 := @parameter0: androidx.media2.MediaSession$ControllerInfo;

        r2 := @parameter1: androidx.media2.SessionCommand;

        r3 := @parameter2: android.os.Bundle;

        if r1 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("controller shouldn\'t be null");

        throw $r7;

     label1:
        if r2 != null goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("command shouldn\'t be null");

        throw $r6;

     label2:
        $r4 = r0.<androidx.media2.MediaSession: androidx.media2.MediaSession$MediaSessionImpl mImpl>;

        $r5 = interfaceinvoke $r4.<androidx.media2.MediaSession$MediaSessionImpl: com.google.common.util.concurrent.ListenableFuture sendCustomCommand(androidx.media2.MediaSession$ControllerInfo,androidx.media2.SessionCommand,android.os.Bundle)>(r1, r2, r3);

        return $r5;
    }

    public android.support.v4.media.session.MediaSessionCompat getSessionCompat()
    {
        androidx.media2.MediaSession r0;
        androidx.media2.MediaSession$MediaSessionImpl $r1;
        android.support.v4.media.session.MediaSessionCompat $r2;

        r0 := @this: androidx.media2.MediaSession;

        $r1 = r0.<androidx.media2.MediaSession: androidx.media2.MediaSession$MediaSessionImpl mImpl>;

        $r2 = interfaceinvoke $r1.<androidx.media2.MediaSession$MediaSessionImpl: android.support.v4.media.session.MediaSessionCompat getSessionCompat()>();

        return $r2;
    }

    void handleControllerConnectionFromService(androidx.media2.IMediaController, java.lang.String, int, int)
    {
        androidx.media2.MediaSession r0;
        androidx.media2.IMediaController r1;
        java.lang.String r2;
        int i0, i1;
        androidx.media2.MediaSession$MediaSessionImpl $r3;

        r0 := @this: androidx.media2.MediaSession;

        r1 := @parameter0: androidx.media2.IMediaController;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r3 = r0.<androidx.media2.MediaSession: androidx.media2.MediaSession$MediaSessionImpl mImpl>;

        interfaceinvoke $r3.<androidx.media2.MediaSession$MediaSessionImpl: void connectFromService(androidx.media2.IMediaController,java.lang.String,int,int)>(r1, r2, i0, i1);

        return;
    }

    android.os.IBinder getLegacyBrowerServiceBinder()
    {
        androidx.media2.MediaSession r0;
        androidx.media2.MediaSession$MediaSessionImpl $r1;
        android.os.IBinder $r2;

        r0 := @this: androidx.media2.MediaSession;

        $r1 = r0.<androidx.media2.MediaSession: androidx.media2.MediaSession$MediaSessionImpl mImpl>;

        $r2 = interfaceinvoke $r1.<androidx.media2.MediaSession$MediaSessionImpl: android.os.IBinder getLegacyBrowserServiceBinder()>();

        return $r2;
    }

androidx.media2.MediaSession$Builder$1
<androidx.media2.MediaSession$Builder$1: androidx.media2.MediaSession$Builder this$0>
    void <init>(androidx.media2.MediaSession$Builder)
    {
        androidx.media2.MediaSession$Builder$1 r0;
        androidx.media2.MediaSession$Builder r1;

        r0 := @this: androidx.media2.MediaSession$Builder$1;

        r1 := @parameter0: androidx.media2.MediaSession$Builder;

        r0.<androidx.media2.MediaSession$Builder$1: androidx.media2.MediaSession$Builder this$0> = r1;

        specialinvoke r0.<androidx.media2.MediaSession$SessionCallback: void <init>()>();

        return;
    }

androidx.media2.MediaSession$Builder
    public void <init>(android.content.Context, androidx.media2.SessionPlayer)
    {
        androidx.media2.MediaSession$Builder r0;
        android.content.Context r1;
        androidx.media2.SessionPlayer r2;

        r0 := @this: androidx.media2.MediaSession$Builder;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media2.SessionPlayer;

        specialinvoke r0.<androidx.media2.MediaSession$BuilderBase: void <init>(android.content.Context,androidx.media2.SessionPlayer)>(r1, r2);

        return;
    }

    public androidx.media2.MediaSession$Builder setSessionActivity(android.app.PendingIntent)
    {
        androidx.media2.MediaSession$Builder r0, $r3;
        android.app.PendingIntent r1;
        androidx.media2.MediaSession$BuilderBase $r2;

        r0 := @this: androidx.media2.MediaSession$Builder;

        r1 := @parameter0: android.app.PendingIntent;

        $r2 = specialinvoke r0.<androidx.media2.MediaSession$BuilderBase: androidx.media2.MediaSession$BuilderBase setSessionActivity(android.app.PendingIntent)>(r1);

        $r3 = (androidx.media2.MediaSession$Builder) $r2;

        return $r3;
    }

    public androidx.media2.MediaSession$Builder setId(java.lang.String)
    {
        androidx.media2.MediaSession$Builder r0, $r3;
        java.lang.String r1;
        androidx.media2.MediaSession$BuilderBase $r2;

        r0 := @this: androidx.media2.MediaSession$Builder;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<androidx.media2.MediaSession$BuilderBase: androidx.media2.MediaSession$BuilderBase setId(java.lang.String)>(r1);

        $r3 = (androidx.media2.MediaSession$Builder) $r2;

        return $r3;
    }

    public androidx.media2.MediaSession$Builder setSessionCallback(java.util.concurrent.Executor, androidx.media2.MediaSession$SessionCallback)
    {
        androidx.media2.MediaSession$Builder r0, $r4;
        java.util.concurrent.Executor r1;
        androidx.media2.MediaSession$SessionCallback r2;
        androidx.media2.MediaSession$BuilderBase $r3;

        r0 := @this: androidx.media2.MediaSession$Builder;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: androidx.media2.MediaSession$SessionCallback;

        $r3 = specialinvoke r0.<androidx.media2.MediaSession$BuilderBase: androidx.media2.MediaSession$BuilderBase setSessionCallback(java.util.concurrent.Executor,androidx.media2.MediaSession$SessionCallback)>(r1, r2);

        $r4 = (androidx.media2.MediaSession$Builder) $r3;

        return $r4;
    }

    public androidx.media2.MediaSession build()
    {
        androidx.media2.MediaSession$Builder r0;
        java.util.concurrent.Executor $r1, $r5, $r12;
        androidx.media2.MediaSession$SessionCallback $r2, $r4;
        androidx.media2.MediaSession $r3;
        android.app.PendingIntent $r6;
        androidx.media2.SessionPlayer $r7;
        java.lang.String $r8;
        android.content.Context $r9, $r11;
        androidx.media2.MediaSession$Builder$1 $r10;

        r0 := @this: androidx.media2.MediaSession$Builder;

        $r1 = r0.<androidx.media2.MediaSession$Builder: java.util.concurrent.Executor mCallbackExecutor>;

        if $r1 != null goto label1;

        $r11 = r0.<androidx.media2.MediaSession$Builder: android.content.Context mContext>;

        $r12 = staticinvoke <androidx.core.content.ContextCompat: java.util.concurrent.Executor getMainExecutor(android.content.Context)>($r11);

        r0.<androidx.media2.MediaSession$Builder: java.util.concurrent.Executor mCallbackExecutor> = $r12;

     label1:
        $r2 = r0.<androidx.media2.MediaSession$Builder: androidx.media2.MediaSession$SessionCallback mCallback>;

        if $r2 != null goto label2;

        $r10 = new androidx.media2.MediaSession$Builder$1;

        specialinvoke $r10.<androidx.media2.MediaSession$Builder$1: void <init>(androidx.media2.MediaSession$Builder)>(r0);

        r0.<androidx.media2.MediaSession$Builder: androidx.media2.MediaSession$SessionCallback mCallback> = $r10;

     label2:
        $r3 = new androidx.media2.MediaSession;

        $r9 = r0.<androidx.media2.MediaSession$Builder: android.content.Context mContext>;

        $r8 = r0.<androidx.media2.MediaSession$Builder: java.lang.String mId>;

        $r7 = r0.<androidx.media2.MediaSession$Builder: androidx.media2.SessionPlayer mPlayer>;

        $r6 = r0.<androidx.media2.MediaSession$Builder: android.app.PendingIntent mSessionActivity>;

        $r5 = r0.<androidx.media2.MediaSession$Builder: java.util.concurrent.Executor mCallbackExecutor>;

        $r4 = r0.<androidx.media2.MediaSession$Builder: androidx.media2.MediaSession$SessionCallback mCallback>;

        specialinvoke $r3.<androidx.media2.MediaSession: void <init>(android.content.Context,java.lang.String,androidx.media2.SessionPlayer,android.app.PendingIntent,java.util.concurrent.Executor,androidx.media2.MediaSession$SessionCallback)>($r9, $r8, $r7, $r6, $r5, $r4);

        return $r3;
    }

    public volatile androidx.media2.MediaSession$BuilderBase setSessionCallback(java.util.concurrent.Executor, androidx.media2.MediaSession$SessionCallback)
    {
        androidx.media2.MediaSession$Builder r0, $r3;
        java.util.concurrent.Executor r1;
        androidx.media2.MediaSession$SessionCallback r2;

        r0 := @this: androidx.media2.MediaSession$Builder;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: androidx.media2.MediaSession$SessionCallback;

        $r3 = virtualinvoke r0.<androidx.media2.MediaSession$Builder: androidx.media2.MediaSession$Builder setSessionCallback(java.util.concurrent.Executor,androidx.media2.MediaSession$SessionCallback)>(r1, r2);

        return $r3;
    }

    public volatile androidx.media2.MediaSession$BuilderBase setId(java.lang.String)
    {
        androidx.media2.MediaSession$Builder r0, $r2;
        java.lang.String r1;

        r0 := @this: androidx.media2.MediaSession$Builder;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<androidx.media2.MediaSession$Builder: androidx.media2.MediaSession$Builder setId(java.lang.String)>(r1);

        return $r2;
    }

    public volatile androidx.media2.MediaSession$BuilderBase setSessionActivity(android.app.PendingIntent)
    {
        androidx.media2.MediaSession$Builder r0, $r2;
        android.app.PendingIntent r1;

        r0 := @this: androidx.media2.MediaSession$Builder;

        r1 := @parameter0: android.app.PendingIntent;

        $r2 = virtualinvoke r0.<androidx.media2.MediaSession$Builder: androidx.media2.MediaSession$Builder setSessionActivity(android.app.PendingIntent)>(r1);

        return $r2;
    }

androidx.media2.MediaSession$BuilderBase
<androidx.media2.MediaSession$BuilderBase: android.content.Context mContext>
<androidx.media2.MediaSession$BuilderBase: androidx.media2.SessionPlayer mPlayer>
<androidx.media2.MediaSession$BuilderBase: java.lang.String mId>
<androidx.media2.MediaSession$BuilderBase: java.util.concurrent.Executor mCallbackExecutor>
<androidx.media2.MediaSession$BuilderBase: androidx.media2.MediaSession$SessionCallback mCallback>
<androidx.media2.MediaSession$BuilderBase: android.app.PendingIntent mSessionActivity>
    void <init>(android.content.Context, androidx.media2.SessionPlayer)
    {
        androidx.media2.MediaSession$BuilderBase r0;
        android.content.Context r1;
        androidx.media2.SessionPlayer r2;
        java.lang.IllegalArgumentException $r3, $r4;

        r0 := @this: androidx.media2.MediaSession$BuilderBase;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media2.SessionPlayer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("context shouldn\'t be null");

        throw $r4;

     label1:
        if r2 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("player shouldn\'t be null");

        throw $r3;

     label2:
        r0.<androidx.media2.MediaSession$BuilderBase: android.content.Context mContext> = r1;

        r0.<androidx.media2.MediaSession$BuilderBase: androidx.media2.SessionPlayer mPlayer> = r2;

        r0.<androidx.media2.MediaSession$BuilderBase: java.lang.String mId> = "";

        return;
    }

    androidx.media2.MediaSession$BuilderBase setSessionActivity(android.app.PendingIntent)
    {
        androidx.media2.MediaSession$BuilderBase r0;
        android.app.PendingIntent r1;

        r0 := @this: androidx.media2.MediaSession$BuilderBase;

        r1 := @parameter0: android.app.PendingIntent;

        r0.<androidx.media2.MediaSession$BuilderBase: android.app.PendingIntent mSessionActivity> = r1;

        return r0;
    }

    androidx.media2.MediaSession$BuilderBase setId(java.lang.String)
    {
        androidx.media2.MediaSession$BuilderBase r0;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: androidx.media2.MediaSession$BuilderBase;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("id shouldn\'t be null");

        throw $r2;

     label1:
        r0.<androidx.media2.MediaSession$BuilderBase: java.lang.String mId> = r1;

        return r0;
    }

    androidx.media2.MediaSession$BuilderBase setSessionCallback(java.util.concurrent.Executor, androidx.media2.MediaSession$SessionCallback)
    {
        androidx.media2.MediaSession$BuilderBase r0;
        java.util.concurrent.Executor r1;
        androidx.media2.MediaSession$SessionCallback r2;
        java.lang.IllegalArgumentException $r3, $r4;

        r0 := @this: androidx.media2.MediaSession$BuilderBase;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: androidx.media2.MediaSession$SessionCallback;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("executor shouldn\'t be null");

        throw $r4;

     label1:
        if r2 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("callback shouldn\'t be null");

        throw $r3;

     label2:
        r0.<androidx.media2.MediaSession$BuilderBase: java.util.concurrent.Executor mCallbackExecutor> = r1;

        r0.<androidx.media2.MediaSession$BuilderBase: androidx.media2.MediaSession$SessionCallback mCallback> = r2;

        return r0;
    }

<androidx.media2.MediaSession$BuilderBase: androidx.media2.MediaSession build()>
androidx.media2.MediaSession$CommandButton$Builder
<androidx.media2.MediaSession$CommandButton$Builder: androidx.media2.SessionCommand mCommand>
<androidx.media2.MediaSession$CommandButton$Builder: int mIconResId>
<androidx.media2.MediaSession$CommandButton$Builder: java.lang.CharSequence mDisplayName>
<androidx.media2.MediaSession$CommandButton$Builder: android.os.Bundle mExtras>
<androidx.media2.MediaSession$CommandButton$Builder: boolean mEnabled>
    public void <init>()
    {
        androidx.media2.MediaSession$CommandButton$Builder r0;

        r0 := @this: androidx.media2.MediaSession$CommandButton$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.media2.MediaSession$CommandButton$Builder setCommand(androidx.media2.SessionCommand)
    {
        androidx.media2.MediaSession$CommandButton$Builder r0;
        androidx.media2.SessionCommand r1;

        r0 := @this: androidx.media2.MediaSession$CommandButton$Builder;

        r1 := @parameter0: androidx.media2.SessionCommand;

        r0.<androidx.media2.MediaSession$CommandButton$Builder: androidx.media2.SessionCommand mCommand> = r1;

        return r0;
    }

    public androidx.media2.MediaSession$CommandButton$Builder setIconResId(int)
    {
        androidx.media2.MediaSession$CommandButton$Builder r0;
        int i0;

        r0 := @this: androidx.media2.MediaSession$CommandButton$Builder;

        i0 := @parameter0: int;

        r0.<androidx.media2.MediaSession$CommandButton$Builder: int mIconResId> = i0;

        return r0;
    }

    public androidx.media2.MediaSession$CommandButton$Builder setDisplayName(java.lang.CharSequence)
    {
        androidx.media2.MediaSession$CommandButton$Builder r0;
        java.lang.CharSequence r1;

        r0 := @this: androidx.media2.MediaSession$CommandButton$Builder;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<androidx.media2.MediaSession$CommandButton$Builder: java.lang.CharSequence mDisplayName> = r1;

        return r0;
    }

    public androidx.media2.MediaSession$CommandButton$Builder setEnabled(boolean)
    {
        androidx.media2.MediaSession$CommandButton$Builder r0;
        boolean z0;

        r0 := @this: androidx.media2.MediaSession$CommandButton$Builder;

        z0 := @parameter0: boolean;

        r0.<androidx.media2.MediaSession$CommandButton$Builder: boolean mEnabled> = z0;

        return r0;
    }

    public androidx.media2.MediaSession$CommandButton$Builder setExtras(android.os.Bundle)
    {
        androidx.media2.MediaSession$CommandButton$Builder r0;
        android.os.Bundle r1;

        r0 := @this: androidx.media2.MediaSession$CommandButton$Builder;

        r1 := @parameter0: android.os.Bundle;

        r0.<androidx.media2.MediaSession$CommandButton$Builder: android.os.Bundle mExtras> = r1;

        return r0;
    }

    public androidx.media2.MediaSession$CommandButton build()
    {
        androidx.media2.MediaSession$CommandButton$Builder r0;
        androidx.media2.MediaSession$CommandButton $r1;
        boolean $z0;
        android.os.Bundle $r2;
        java.lang.CharSequence $r3;
        int $i0;
        androidx.media2.SessionCommand $r4;

        r0 := @this: androidx.media2.MediaSession$CommandButton$Builder;

        $r1 = new androidx.media2.MediaSession$CommandButton;

        $r4 = r0.<androidx.media2.MediaSession$CommandButton$Builder: androidx.media2.SessionCommand mCommand>;

        $i0 = r0.<androidx.media2.MediaSession$CommandButton$Builder: int mIconResId>;

        $r3 = r0.<androidx.media2.MediaSession$CommandButton$Builder: java.lang.CharSequence mDisplayName>;

        $r2 = r0.<androidx.media2.MediaSession$CommandButton$Builder: android.os.Bundle mExtras>;

        $z0 = r0.<androidx.media2.MediaSession$CommandButton$Builder: boolean mEnabled>;

        specialinvoke $r1.<androidx.media2.MediaSession$CommandButton: void <init>(androidx.media2.SessionCommand,int,java.lang.CharSequence,android.os.Bundle,boolean)>($r4, $i0, $r3, $r2, $z0);

        return $r1;
    }

androidx.media2.MediaSession$CommandButton
<androidx.media2.MediaSession$CommandButton: androidx.media2.SessionCommand mCommand>
<androidx.media2.MediaSession$CommandButton: int mIconResId>
<androidx.media2.MediaSession$CommandButton: java.lang.CharSequence mDisplayName>
<androidx.media2.MediaSession$CommandButton: android.os.Bundle mExtras>
<androidx.media2.MediaSession$CommandButton: boolean mEnabled>
    void <init>()
    {
        androidx.media2.MediaSession$CommandButton r0;

        r0 := @this: androidx.media2.MediaSession$CommandButton;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(androidx.media2.SessionCommand, int, java.lang.CharSequence, android.os.Bundle, boolean)
    {
        androidx.media2.MediaSession$CommandButton r0;
        androidx.media2.SessionCommand r1;
        int i0;
        java.lang.CharSequence r2;
        android.os.Bundle r3;
        boolean z0;

        r0 := @this: androidx.media2.MediaSession$CommandButton;

        r1 := @parameter0: androidx.media2.SessionCommand;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.CharSequence;

        r3 := @parameter3: android.os.Bundle;

        z0 := @parameter4: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media2.MediaSession$CommandButton: androidx.media2.SessionCommand mCommand> = r1;

        r0.<androidx.media2.MediaSession$CommandButton: int mIconResId> = i0;

        r0.<androidx.media2.MediaSession$CommandButton: java.lang.CharSequence mDisplayName> = r2;

        r0.<androidx.media2.MediaSession$CommandButton: android.os.Bundle mExtras> = r3;

        r0.<androidx.media2.MediaSession$CommandButton: boolean mEnabled> = z0;

        return;
    }

    public androidx.media2.SessionCommand getCommand()
    {
        androidx.media2.MediaSession$CommandButton r0;
        androidx.media2.SessionCommand $r1;

        r0 := @this: androidx.media2.MediaSession$CommandButton;

        $r1 = r0.<androidx.media2.MediaSession$CommandButton: androidx.media2.SessionCommand mCommand>;

        return $r1;
    }

    public int getIconResId()
    {
        androidx.media2.MediaSession$CommandButton r0;
        int $i0;

        r0 := @this: androidx.media2.MediaSession$CommandButton;

        $i0 = r0.<androidx.media2.MediaSession$CommandButton: int mIconResId>;

        return $i0;
    }

    public java.lang.CharSequence getDisplayName()
    {
        androidx.media2.MediaSession$CommandButton r0;
        java.lang.CharSequence $r1;

        r0 := @this: androidx.media2.MediaSession$CommandButton;

        $r1 = r0.<androidx.media2.MediaSession$CommandButton: java.lang.CharSequence mDisplayName>;

        return $r1;
    }

    public android.os.Bundle getExtras()
    {
        androidx.media2.MediaSession$CommandButton r0;
        android.os.Bundle $r1;

        r0 := @this: androidx.media2.MediaSession$CommandButton;

        $r1 = r0.<androidx.media2.MediaSession$CommandButton: android.os.Bundle mExtras>;

        return $r1;
    }

    public boolean isEnabled()
    {
        androidx.media2.MediaSession$CommandButton r0;
        boolean $z0;

        r0 := @this: androidx.media2.MediaSession$CommandButton;

        $z0 = r0.<androidx.media2.MediaSession$CommandButton: boolean mEnabled>;

        return $z0;
    }

androidx.media2.MediaSession$ControllerCb
    void <init>()
    {
        androidx.media2.MediaSession$ControllerCb r0;

        r0 := @this: androidx.media2.MediaSession$ControllerCb;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<androidx.media2.MediaSession$ControllerCb: void onPlayerResult(int,androidx.media2.SessionPlayer$PlayerResult)>
<androidx.media2.MediaSession$ControllerCb: void onSessionResult(int,androidx.media2.MediaSession$SessionResult)>
<androidx.media2.MediaSession$ControllerCb: void onLibraryResult(int,androidx.media2.MediaLibraryService$LibraryResult)>
<androidx.media2.MediaSession$ControllerCb: void setCustomLayout(int,java.util.List)>
<androidx.media2.MediaSession$ControllerCb: void sendCustomCommand(int,androidx.media2.SessionCommand,android.os.Bundle)>
<androidx.media2.MediaSession$ControllerCb: void onPlaybackInfoChanged(int,androidx.media2.MediaController$PlaybackInfo)>
<androidx.media2.MediaSession$ControllerCb: void onAllowedCommandsChanged(int,androidx.media2.SessionCommandGroup)>
<androidx.media2.MediaSession$ControllerCb: void onPlayerStateChanged(int,long,long,int)>
<androidx.media2.MediaSession$ControllerCb: void onPlaybackSpeedChanged(int,long,long,float)>
<androidx.media2.MediaSession$ControllerCb: void onBufferingStateChanged(int,androidx.media2.MediaItem,int,long,long,long)>
<androidx.media2.MediaSession$ControllerCb: void onSeekCompleted(int,long,long,long)>
<androidx.media2.MediaSession$ControllerCb: void onCurrentMediaItemChanged(int,androidx.media2.MediaItem,int,int,int)>
<androidx.media2.MediaSession$ControllerCb: void onPlaylistChanged(int,java.util.List,androidx.media2.MediaMetadata,int,int,int)>
<androidx.media2.MediaSession$ControllerCb: void onPlaylistMetadataChanged(int,androidx.media2.MediaMetadata)>
<androidx.media2.MediaSession$ControllerCb: void onShuffleModeChanged(int,int)>
<androidx.media2.MediaSession$ControllerCb: void onRepeatModeChanged(int,int)>
<androidx.media2.MediaSession$ControllerCb: void onPlaybackCompleted(int)>
<androidx.media2.MediaSession$ControllerCb: void onDisconnected(int)>
<androidx.media2.MediaSession$ControllerCb: void onChildrenChanged(int,java.lang.String,int,androidx.media2.MediaLibraryService$LibraryParams)>
<androidx.media2.MediaSession$ControllerCb: void onSearchResultChanged(int,java.lang.String,int,androidx.media2.MediaLibraryService$LibraryParams)>
androidx.media2.MediaSession$ControllerInfo
<androidx.media2.MediaSession$ControllerInfo: androidx.media.MediaSessionManager$RemoteUserInfo mRemoteUserInfo>
<androidx.media2.MediaSession$ControllerInfo: boolean mIsTrusted>
<androidx.media2.MediaSession$ControllerInfo: androidx.media2.MediaSession$ControllerCb mControllerCb>
    void <init>(androidx.media.MediaSessionManager$RemoteUserInfo, boolean, androidx.media2.MediaSession$ControllerCb)
    {
        androidx.media2.MediaSession$ControllerInfo r0;
        androidx.media.MediaSessionManager$RemoteUserInfo r1;
        boolean z0;
        androidx.media2.MediaSession$ControllerCb r2;

        r0 := @this: androidx.media2.MediaSession$ControllerInfo;

        r1 := @parameter0: androidx.media.MediaSessionManager$RemoteUserInfo;

        z0 := @parameter1: boolean;

        r2 := @parameter2: androidx.media2.MediaSession$ControllerCb;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media2.MediaSession$ControllerInfo: androidx.media.MediaSessionManager$RemoteUserInfo mRemoteUserInfo> = r1;

        r0.<androidx.media2.MediaSession$ControllerInfo: boolean mIsTrusted> = z0;

        r0.<androidx.media2.MediaSession$ControllerInfo: androidx.media2.MediaSession$ControllerCb mControllerCb> = r2;

        return;
    }

    public androidx.media.MediaSessionManager$RemoteUserInfo getRemoteUserInfo()
    {
        androidx.media2.MediaSession$ControllerInfo r0;
        androidx.media.MediaSessionManager$RemoteUserInfo $r1;

        r0 := @this: androidx.media2.MediaSession$ControllerInfo;

        $r1 = r0.<androidx.media2.MediaSession$ControllerInfo: androidx.media.MediaSessionManager$RemoteUserInfo mRemoteUserInfo>;

        return $r1;
    }

    public java.lang.String getPackageName()
    {
        androidx.media2.MediaSession$ControllerInfo r0;
        androidx.media.MediaSessionManager$RemoteUserInfo $r1;
        java.lang.String $r2;

        r0 := @this: androidx.media2.MediaSession$ControllerInfo;

        $r1 = r0.<androidx.media2.MediaSession$ControllerInfo: androidx.media.MediaSessionManager$RemoteUserInfo mRemoteUserInfo>;

        $r2 = virtualinvoke $r1.<androidx.media.MediaSessionManager$RemoteUserInfo: java.lang.String getPackageName()>();

        return $r2;
    }

    public int getUid()
    {
        androidx.media2.MediaSession$ControllerInfo r0;
        androidx.media.MediaSessionManager$RemoteUserInfo $r1;
        int $i0;

        r0 := @this: androidx.media2.MediaSession$ControllerInfo;

        $r1 = r0.<androidx.media2.MediaSession$ControllerInfo: androidx.media.MediaSessionManager$RemoteUserInfo mRemoteUserInfo>;

        $i0 = virtualinvoke $r1.<androidx.media.MediaSessionManager$RemoteUserInfo: int getUid()>();

        return $i0;
    }

    public boolean isTrusted()
    {
        androidx.media2.MediaSession$ControllerInfo r0;
        boolean $z0;

        r0 := @this: androidx.media2.MediaSession$ControllerInfo;

        $z0 = r0.<androidx.media2.MediaSession$ControllerInfo: boolean mIsTrusted>;

        return $z0;
    }

    public int hashCode()
    {
        androidx.media2.MediaSession$ControllerInfo r0;
        java.lang.Object[] $r1;
        androidx.media2.MediaSession$ControllerCb $r2;
        androidx.media.MediaSessionManager$RemoteUserInfo $r3;
        int $i0;

        r0 := @this: androidx.media2.MediaSession$ControllerInfo;

        $r1 = newarray (java.lang.Object)[2];

        $r2 = r0.<androidx.media2.MediaSession$ControllerInfo: androidx.media2.MediaSession$ControllerCb mControllerCb>;

        $r1[0] = $r2;

        $r3 = r0.<androidx.media2.MediaSession$ControllerInfo: androidx.media.MediaSessionManager$RemoteUserInfo mRemoteUserInfo>;

        $r1[1] = $r3;

        $i0 = staticinvoke <androidx.core.util.ObjectsCompat: int hash(java.lang.Object[])>($r1);

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.media2.MediaSession$ControllerInfo r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        androidx.media2.MediaSession$ControllerCb $r3, $r4, $r5, $r6;
        androidx.media.MediaSessionManager$RemoteUserInfo $r7, $r8;

        r0 := @this: androidx.media2.MediaSession$ControllerInfo;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof androidx.media2.MediaSession$ControllerInfo;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        if r0 != r1 goto label2;

        return 1;

     label2:
        r2 = (androidx.media2.MediaSession$ControllerInfo) r1;

        $r3 = r0.<androidx.media2.MediaSession$ControllerInfo: androidx.media2.MediaSession$ControllerCb mControllerCb>;

        if $r3 != null goto label3;

        $r6 = r2.<androidx.media2.MediaSession$ControllerInfo: androidx.media2.MediaSession$ControllerCb mControllerCb>;

        if $r6 == null goto label4;

     label3:
        $r5 = r0.<androidx.media2.MediaSession$ControllerInfo: androidx.media2.MediaSession$ControllerCb mControllerCb>;

        $r4 = r2.<androidx.media2.MediaSession$ControllerInfo: androidx.media2.MediaSession$ControllerCb mControllerCb>;

        $z1 = staticinvoke <androidx.core.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)>($r5, $r4);

        return $z1;

     label4:
        $r8 = r0.<androidx.media2.MediaSession$ControllerInfo: androidx.media.MediaSessionManager$RemoteUserInfo mRemoteUserInfo>;

        $r7 = r2.<androidx.media2.MediaSession$ControllerInfo: androidx.media.MediaSessionManager$RemoteUserInfo mRemoteUserInfo>;

        $z2 = virtualinvoke $r8.<androidx.media.MediaSessionManager$RemoteUserInfo: boolean equals(java.lang.Object)>($r7);

        return $z2;
    }

    public java.lang.String toString()
    {
        androidx.media2.MediaSession$ControllerInfo r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6, $r8, $r9;
        androidx.media.MediaSessionManager$RemoteUserInfo $r3, $r7;
        java.lang.String $r4, $r10;
        int $i0;

        r0 := @this: androidx.media2.MediaSession$ControllerInfo;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ControllerInfo {pkg=");

        $r3 = r0.<androidx.media2.MediaSession$ControllerInfo: androidx.media.MediaSessionManager$RemoteUserInfo mRemoteUserInfo>;

        $r4 = virtualinvoke $r3.<androidx.media.MediaSessionManager$RemoteUserInfo: java.lang.String getPackageName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $r7 = r0.<androidx.media2.MediaSession$ControllerInfo: androidx.media.MediaSessionManager$RemoteUserInfo mRemoteUserInfo>;

        $i0 = virtualinvoke $r7.<androidx.media.MediaSessionManager$RemoteUserInfo: int getUid()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("})");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    androidx.media2.MediaSession$ControllerCb getControllerCb()
    {
        androidx.media2.MediaSession$ControllerInfo r0;
        androidx.media2.MediaSession$ControllerCb $r1;

        r0 := @this: androidx.media2.MediaSession$ControllerInfo;

        $r1 = r0.<androidx.media2.MediaSession$ControllerInfo: androidx.media2.MediaSession$ControllerCb mControllerCb>;

        return $r1;
    }

androidx.media2.MediaSession$MediaSessionImpl
<androidx.media2.MediaSession$MediaSessionImpl: void updatePlayer(androidx.media2.SessionPlayer,androidx.media2.SessionPlayer)>
<androidx.media2.MediaSession$MediaSessionImpl: void updatePlayer(androidx.media2.SessionPlayer)>
<androidx.media2.MediaSession$MediaSessionImpl: androidx.media2.SessionPlayer getPlayer()>
<androidx.media2.MediaSession$MediaSessionImpl: java.lang.String getId()>
<androidx.media2.MediaSession$MediaSessionImpl: androidx.media2.SessionToken getToken()>
<androidx.media2.MediaSession$MediaSessionImpl: java.util.List getConnectedControllers()>
<androidx.media2.MediaSession$MediaSessionImpl: boolean isConnected(androidx.media2.MediaSession$ControllerInfo)>
<androidx.media2.MediaSession$MediaSessionImpl: com.google.common.util.concurrent.ListenableFuture setCustomLayout(androidx.media2.MediaSession$ControllerInfo,java.util.List)>
<androidx.media2.MediaSession$MediaSessionImpl: void setAllowedCommands(androidx.media2.MediaSession$ControllerInfo,androidx.media2.SessionCommandGroup)>
<androidx.media2.MediaSession$MediaSessionImpl: void broadcastCustomCommand(androidx.media2.SessionCommand,android.os.Bundle)>
<androidx.media2.MediaSession$MediaSessionImpl: com.google.common.util.concurrent.ListenableFuture sendCustomCommand(androidx.media2.MediaSession$ControllerInfo,androidx.media2.SessionCommand,android.os.Bundle)>
<androidx.media2.MediaSession$MediaSessionImpl: androidx.media2.MediaSession getInstance()>
<androidx.media2.MediaSession$MediaSessionImpl: android.support.v4.media.session.MediaSessionCompat getSessionCompat()>
<androidx.media2.MediaSession$MediaSessionImpl: android.content.Context getContext()>
<androidx.media2.MediaSession$MediaSessionImpl: java.util.concurrent.Executor getCallbackExecutor()>
<androidx.media2.MediaSession$MediaSessionImpl: androidx.media2.MediaSession$SessionCallback getCallback()>
<androidx.media2.MediaSession$MediaSessionImpl: boolean isClosed()>
<androidx.media2.MediaSession$MediaSessionImpl: android.support.v4.media.session.PlaybackStateCompat createPlaybackStateCompat()>
<androidx.media2.MediaSession$MediaSessionImpl: androidx.media2.MediaController$PlaybackInfo getPlaybackInfo()>
<androidx.media2.MediaSession$MediaSessionImpl: android.app.PendingIntent getSessionActivity()>
<androidx.media2.MediaSession$MediaSessionImpl: android.os.IBinder getLegacyBrowserServiceBinder()>
<androidx.media2.MediaSession$MediaSessionImpl: void connectFromService(androidx.media2.IMediaController,java.lang.String,int,int)>
androidx.media2.MediaSession$SessionCallback$ForegroundServiceEventCallback
    void <init>()
    {
        androidx.media2.MediaSession$SessionCallback$ForegroundServiceEventCallback r0;

        r0 := @this: androidx.media2.MediaSession$SessionCallback$ForegroundServiceEventCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onPlayerStateChanged(androidx.media2.MediaSession, int)
    {
        androidx.media2.MediaSession$SessionCallback$ForegroundServiceEventCallback r0;
        androidx.media2.MediaSession r1;
        int i0;

        r0 := @this: androidx.media2.MediaSession$SessionCallback$ForegroundServiceEventCallback;

        r1 := @parameter0: androidx.media2.MediaSession;

        i0 := @parameter1: int;

        return;
    }

    public void onSessionClosed(androidx.media2.MediaSession)
    {
        androidx.media2.MediaSession$SessionCallback$ForegroundServiceEventCallback r0;
        androidx.media2.MediaSession r1;

        r0 := @this: androidx.media2.MediaSession$SessionCallback$ForegroundServiceEventCallback;

        r1 := @parameter0: androidx.media2.MediaSession;

        return;
    }

androidx.media2.MediaSession$SessionCallback
<androidx.media2.MediaSession$SessionCallback: androidx.media2.MediaSession$SessionCallback$ForegroundServiceEventCallback mForegroundServiceEventCallback>
    public void <init>()
    {
        androidx.media2.MediaSession$SessionCallback r0;

        r0 := @this: androidx.media2.MediaSession$SessionCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.media2.SessionCommandGroup onConnect(androidx.media2.MediaSession, androidx.media2.MediaSession$ControllerInfo)
    {
        androidx.media2.MediaSession$SessionCallback r0;
        androidx.media2.MediaSession r1;
        androidx.media2.MediaSession$ControllerInfo r2;
        androidx.media2.SessionCommandGroup r3;
        androidx.media2.SessionCommandGroup$Builder $r4, $r5;

        r0 := @this: androidx.media2.MediaSession$SessionCallback;

        r1 := @parameter0: androidx.media2.MediaSession;

        r2 := @parameter1: androidx.media2.MediaSession$ControllerInfo;

        $r4 = new androidx.media2.SessionCommandGroup$Builder;

        specialinvoke $r4.<androidx.media2.SessionCommandGroup$Builder: void <init>()>();

        $r5 = virtualinvoke $r4.<androidx.media2.SessionCommandGroup$Builder: androidx.media2.SessionCommandGroup$Builder addAllPredefinedCommands(int)>(1);

        r3 = virtualinvoke $r5.<androidx.media2.SessionCommandGroup$Builder: androidx.media2.SessionCommandGroup build()>();

        return r3;
    }

    public void onDisconnected(androidx.media2.MediaSession, androidx.media2.MediaSession$ControllerInfo)
    {
        androidx.media2.MediaSession$SessionCallback r0;
        androidx.media2.MediaSession r1;
        androidx.media2.MediaSession$ControllerInfo r2;

        r0 := @this: androidx.media2.MediaSession$SessionCallback;

        r1 := @parameter0: androidx.media2.MediaSession;

        r2 := @parameter1: androidx.media2.MediaSession$ControllerInfo;

        return;
    }

    public int onCommandRequest(androidx.media2.MediaSession, androidx.media2.MediaSession$ControllerInfo, androidx.media2.SessionCommand)
    {
        androidx.media2.MediaSession$SessionCallback r0;
        androidx.media2.MediaSession r1;
        androidx.media2.MediaSession$ControllerInfo r2;
        androidx.media2.SessionCommand r3;

        r0 := @this: androidx.media2.MediaSession$SessionCallback;

        r1 := @parameter0: androidx.media2.MediaSession;

        r2 := @parameter1: androidx.media2.MediaSession$ControllerInfo;

        r3 := @parameter2: androidx.media2.SessionCommand;

        return 0;
    }

    public androidx.media2.MediaItem onCreateMediaItem(androidx.media2.MediaSession, androidx.media2.MediaSession$ControllerInfo, java.lang.String)
    {
        androidx.media2.MediaSession$SessionCallback r0;
        androidx.media2.MediaSession r1;
        androidx.media2.MediaSession$ControllerInfo r2;
        java.lang.String r3;

        r0 := @this: androidx.media2.MediaSession$SessionCallback;

        r1 := @parameter0: androidx.media2.MediaSession;

        r2 := @parameter1: androidx.media2.MediaSession$ControllerInfo;

        r3 := @parameter2: java.lang.String;

        return null;
    }

    public int onSetRating(androidx.media2.MediaSession, androidx.media2.MediaSession$ControllerInfo, java.lang.String, androidx.media2.Rating)
    {
        androidx.media2.MediaSession$SessionCallback r0;
        androidx.media2.MediaSession r1;
        androidx.media2.MediaSession$ControllerInfo r2;
        java.lang.String r3;
        androidx.media2.Rating r4;

        r0 := @this: androidx.media2.MediaSession$SessionCallback;

        r1 := @parameter0: androidx.media2.MediaSession;

        r2 := @parameter1: androidx.media2.MediaSession$ControllerInfo;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: androidx.media2.Rating;

        return -6;
    }

    public androidx.media2.MediaSession$SessionResult onCustomCommand(androidx.media2.MediaSession, androidx.media2.MediaSession$ControllerInfo, androidx.media2.SessionCommand, android.os.Bundle)
    {
        androidx.media2.MediaSession$SessionCallback r0;
        androidx.media2.MediaSession r1;
        androidx.media2.MediaSession$ControllerInfo r2;
        androidx.media2.SessionCommand r3;
        android.os.Bundle r4;
        androidx.media2.MediaSession$SessionResult $r5;

        r0 := @this: androidx.media2.MediaSession$SessionCallback;

        r1 := @parameter0: androidx.media2.MediaSession;

        r2 := @parameter1: androidx.media2.MediaSession$ControllerInfo;

        r3 := @parameter2: androidx.media2.SessionCommand;

        r4 := @parameter3: android.os.Bundle;

        $r5 = new androidx.media2.MediaSession$SessionResult;

        specialinvoke $r5.<androidx.media2.MediaSession$SessionResult: void <init>(int,android.os.Bundle)>(-6, null);

        return $r5;
    }

    public int onPlayFromMediaId(androidx.media2.MediaSession, androidx.media2.MediaSession$ControllerInfo, java.lang.String, android.os.Bundle)
    {
        androidx.media2.MediaSession$SessionCallback r0;
        androidx.media2.MediaSession r1;
        androidx.media2.MediaSession$ControllerInfo r2;
        java.lang.String r3;
        android.os.Bundle r4;

        r0 := @this: androidx.media2.MediaSession$SessionCallback;

        r1 := @parameter0: androidx.media2.MediaSession;

        r2 := @parameter1: androidx.media2.MediaSession$ControllerInfo;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Bundle;

        return -6;
    }

    public int onPlayFromSearch(androidx.media2.MediaSession, androidx.media2.MediaSession$ControllerInfo, java.lang.String, android.os.Bundle)
    {
        androidx.media2.MediaSession$SessionCallback r0;
        androidx.media2.MediaSession r1;
        androidx.media2.MediaSession$ControllerInfo r2;
        java.lang.String r3;
        android.os.Bundle r4;

        r0 := @this: androidx.media2.MediaSession$SessionCallback;

        r1 := @parameter0: androidx.media2.MediaSession;

        r2 := @parameter1: androidx.media2.MediaSession$ControllerInfo;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Bundle;

        return -6;
    }

    public int onPlayFromUri(androidx.media2.MediaSession, androidx.media2.MediaSession$ControllerInfo, android.net.Uri, android.os.Bundle)
    {
        androidx.media2.MediaSession$SessionCallback r0;
        androidx.media2.MediaSession r1;
        androidx.media2.MediaSession$ControllerInfo r2;
        android.net.Uri r3;
        android.os.Bundle r4;

        r0 := @this: androidx.media2.MediaSession$SessionCallback;

        r1 := @parameter0: androidx.media2.MediaSession;

        r2 := @parameter1: androidx.media2.MediaSession$ControllerInfo;

        r3 := @parameter2: android.net.Uri;

        r4 := @parameter3: android.os.Bundle;

        return -6;
    }

    public int onPrepareFromMediaId(androidx.media2.MediaSession, androidx.media2.MediaSession$ControllerInfo, java.lang.String, android.os.Bundle)
    {
        androidx.media2.MediaSession$SessionCallback r0;
        androidx.media2.MediaSession r1;
        androidx.media2.MediaSession$ControllerInfo r2;
        java.lang.String r3;
        android.os.Bundle r4;

        r0 := @this: androidx.media2.MediaSession$SessionCallback;

        r1 := @parameter0: androidx.media2.MediaSession;

        r2 := @parameter1: androidx.media2.MediaSession$ControllerInfo;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Bundle;

        return -6;
    }

    public int onPrepareFromSearch(androidx.media2.MediaSession, androidx.media2.MediaSession$ControllerInfo, java.lang.String, android.os.Bundle)
    {
        androidx.media2.MediaSession$SessionCallback r0;
        androidx.media2.MediaSession r1;
        androidx.media2.MediaSession$ControllerInfo r2;
        java.lang.String r3;
        android.os.Bundle r4;

        r0 := @this: androidx.media2.MediaSession$SessionCallback;

        r1 := @parameter0: androidx.media2.MediaSession;

        r2 := @parameter1: androidx.media2.MediaSession$ControllerInfo;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Bundle;

        return -6;
    }

    public int onPrepareFromUri(androidx.media2.MediaSession, androidx.media2.MediaSession$ControllerInfo, android.net.Uri, android.os.Bundle)
    {
        androidx.media2.MediaSession$SessionCallback r0;
        androidx.media2.MediaSession r1;
        androidx.media2.MediaSession$ControllerInfo r2;
        android.net.Uri r3;
        android.os.Bundle r4;

        r0 := @this: androidx.media2.MediaSession$SessionCallback;

        r1 := @parameter0: androidx.media2.MediaSession;

        r2 := @parameter1: androidx.media2.MediaSession$ControllerInfo;

        r3 := @parameter2: android.net.Uri;

        r4 := @parameter3: android.os.Bundle;

        return -6;
    }

    public int onFastForward(androidx.media2.MediaSession, androidx.media2.MediaSession$ControllerInfo)
    {
        androidx.media2.MediaSession$SessionCallback r0;
        androidx.media2.MediaSession r1;
        androidx.media2.MediaSession$ControllerInfo r2;

        r0 := @this: androidx.media2.MediaSession$SessionCallback;

        r1 := @parameter0: androidx.media2.MediaSession;

        r2 := @parameter1: androidx.media2.MediaSession$ControllerInfo;

        return -6;
    }

    public int onRewind(androidx.media2.MediaSession, androidx.media2.MediaSession$ControllerInfo)
    {
        androidx.media2.MediaSession$SessionCallback r0;
        androidx.media2.MediaSession r1;
        androidx.media2.MediaSession$ControllerInfo r2;

        r0 := @this: androidx.media2.MediaSession$SessionCallback;

        r1 := @parameter0: androidx.media2.MediaSession;

        r2 := @parameter1: androidx.media2.MediaSession$ControllerInfo;

        return -6;
    }

    public int onSkipForward(androidx.media2.MediaSession, androidx.media2.MediaSession$ControllerInfo)
    {
        androidx.media2.MediaSession$SessionCallback r0;
        androidx.media2.MediaSession r1;
        androidx.media2.MediaSession$ControllerInfo r2;

        r0 := @this: androidx.media2.MediaSession$SessionCallback;

        r1 := @parameter0: androidx.media2.MediaSession;

        r2 := @parameter1: androidx.media2.MediaSession$ControllerInfo;

        return -6;
    }

    public int onSkipBackward(androidx.media2.MediaSession, androidx.media2.MediaSession$ControllerInfo)
    {
        androidx.media2.MediaSession$SessionCallback r0;
        androidx.media2.MediaSession r1;
        androidx.media2.MediaSession$ControllerInfo r2;

        r0 := @this: androidx.media2.MediaSession$SessionCallback;

        r1 := @parameter0: androidx.media2.MediaSession;

        r2 := @parameter1: androidx.media2.MediaSession$ControllerInfo;

        return -6;
    }

    final void onPlayerStateChanged(androidx.media2.MediaSession, int)
    {
        androidx.media2.MediaSession$SessionCallback r0;
        androidx.media2.MediaSession r1;
        int i0;
        androidx.media2.MediaSession$SessionCallback$ForegroundServiceEventCallback $r2, $r3;

        r0 := @this: androidx.media2.MediaSession$SessionCallback;

        r1 := @parameter0: androidx.media2.MediaSession;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.media2.MediaSession$SessionCallback: androidx.media2.MediaSession$SessionCallback$ForegroundServiceEventCallback mForegroundServiceEventCallback>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.media2.MediaSession$SessionCallback: androidx.media2.MediaSession$SessionCallback$ForegroundServiceEventCallback mForegroundServiceEventCallback>;

        virtualinvoke $r3.<androidx.media2.MediaSession$SessionCallback$ForegroundServiceEventCallback: void onPlayerStateChanged(androidx.media2.MediaSession,int)>(r1, i0);

     label1:
        return;
    }

    final void onSessionClosed(androidx.media2.MediaSession)
    {
        androidx.media2.MediaSession$SessionCallback r0;
        androidx.media2.MediaSession r1;
        androidx.media2.MediaSession$SessionCallback$ForegroundServiceEventCallback $r2, $r3;

        r0 := @this: androidx.media2.MediaSession$SessionCallback;

        r1 := @parameter0: androidx.media2.MediaSession;

        $r2 = r0.<androidx.media2.MediaSession$SessionCallback: androidx.media2.MediaSession$SessionCallback$ForegroundServiceEventCallback mForegroundServiceEventCallback>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.media2.MediaSession$SessionCallback: androidx.media2.MediaSession$SessionCallback$ForegroundServiceEventCallback mForegroundServiceEventCallback>;

        virtualinvoke $r3.<androidx.media2.MediaSession$SessionCallback$ForegroundServiceEventCallback: void onSessionClosed(androidx.media2.MediaSession)>(r1);

     label1:
        return;
    }

    void setForegroundServiceEventCallback(androidx.media2.MediaSession$SessionCallback$ForegroundServiceEventCallback)
    {
        androidx.media2.MediaSession$SessionCallback r0;
        androidx.media2.MediaSession$SessionCallback$ForegroundServiceEventCallback r1;

        r0 := @this: androidx.media2.MediaSession$SessionCallback;

        r1 := @parameter0: androidx.media2.MediaSession$SessionCallback$ForegroundServiceEventCallback;

        r0.<androidx.media2.MediaSession$SessionCallback: androidx.media2.MediaSession$SessionCallback$ForegroundServiceEventCallback mForegroundServiceEventCallback> = r1;

        return;
    }

androidx.media2.MediaSession$SessionResult$ResultCode
androidx.media2.MediaSession$SessionResult
<androidx.media2.MediaSession$SessionResult: int mResultCode>
<androidx.media2.MediaSession$SessionResult: long mCompletionTime>
<androidx.media2.MediaSession$SessionResult: android.os.Bundle mCustomCommandResult>
<androidx.media2.MediaSession$SessionResult: androidx.media2.MediaItem mItem>
    public void <init>(int, android.os.Bundle)
    {
        androidx.media2.MediaSession$SessionResult r0;
        int i0;
        android.os.Bundle r1;
        long $l1;

        r0 := @this: androidx.media2.MediaSession$SessionResult;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke r0.<androidx.media2.MediaSession$SessionResult: void <init>(int,android.os.Bundle,androidx.media2.MediaItem,long)>(i0, r1, null, $l1);

        return;
    }

    void <init>()
    {
        androidx.media2.MediaSession$SessionResult r0;

        r0 := @this: androidx.media2.MediaSession$SessionResult;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(int)
    {
        androidx.media2.MediaSession$SessionResult r0;
        int i0;

        r0 := @this: androidx.media2.MediaSession$SessionResult;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.media2.MediaSession$SessionResult: void <init>(int,android.os.Bundle)>(i0, null);

        return;
    }

    void <init>(int, android.os.Bundle, androidx.media2.MediaItem, long)
    {
        androidx.media2.MediaSession$SessionResult r0;
        int i0;
        android.os.Bundle r1;
        androidx.media2.MediaItem r2;
        long l1;

        r0 := @this: androidx.media2.MediaSession$SessionResult;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        r2 := @parameter2: androidx.media2.MediaItem;

        l1 := @parameter3: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media2.MediaSession$SessionResult: int mResultCode> = i0;

        r0.<androidx.media2.MediaSession$SessionResult: android.os.Bundle mCustomCommandResult> = r1;

        r0.<androidx.media2.MediaSession$SessionResult: androidx.media2.MediaItem mItem> = r2;

        r0.<androidx.media2.MediaSession$SessionResult: long mCompletionTime> = l1;

        return;
    }

    static androidx.media2.MediaSession$SessionResult 'from'(androidx.media2.SessionPlayer$PlayerResult)
    {
        androidx.media2.SessionPlayer$PlayerResult r0;
        androidx.media2.MediaSession$SessionResult $r1;
        int $i0;
        androidx.media2.MediaItem $r2;
        long $l1;

        r0 := @parameter0: androidx.media2.SessionPlayer$PlayerResult;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new androidx.media2.MediaSession$SessionResult;

        $i0 = virtualinvoke r0.<androidx.media2.SessionPlayer$PlayerResult: int getResultCode()>();

        $r2 = virtualinvoke r0.<androidx.media2.SessionPlayer$PlayerResult: androidx.media2.MediaItem getMediaItem()>();

        $l1 = virtualinvoke r0.<androidx.media2.SessionPlayer$PlayerResult: long getCompletionTime()>();

        specialinvoke $r1.<androidx.media2.MediaSession$SessionResult: void <init>(int,android.os.Bundle,androidx.media2.MediaItem,long)>($i0, null, $r2, $l1);

        return $r1;
    }

    static androidx.media2.MediaSession$SessionResult 'from'(androidx.media2.MediaController$ControllerResult)
    {
        androidx.media2.MediaController$ControllerResult r0;
        androidx.media2.MediaSession$SessionResult $r1;
        int $i0;
        android.os.Bundle $r2;
        androidx.media2.MediaItem $r3;
        long $l1;

        r0 := @parameter0: androidx.media2.MediaController$ControllerResult;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new androidx.media2.MediaSession$SessionResult;

        $i0 = virtualinvoke r0.<androidx.media2.MediaController$ControllerResult: int getResultCode()>();

        $r2 = virtualinvoke r0.<androidx.media2.MediaController$ControllerResult: android.os.Bundle getCustomCommandResult()>();

        $r3 = virtualinvoke r0.<androidx.media2.MediaController$ControllerResult: androidx.media2.MediaItem getMediaItem()>();

        $l1 = virtualinvoke r0.<androidx.media2.MediaController$ControllerResult: long getCompletionTime()>();

        specialinvoke $r1.<androidx.media2.MediaSession$SessionResult: void <init>(int,android.os.Bundle,androidx.media2.MediaItem,long)>($i0, $r2, $r3, $l1);

        return $r1;
    }

    static com.google.common.util.concurrent.ListenableFuture createFutureWithResult(int)
    {
        int i0;
        androidx.concurrent.futures.ResolvableFuture r0;
        androidx.media2.MediaSession$SessionResult $r1;

        i0 := @parameter0: int;

        r0 = staticinvoke <androidx.concurrent.futures.ResolvableFuture: androidx.concurrent.futures.ResolvableFuture create()>();

        $r1 = new androidx.media2.MediaSession$SessionResult;

        specialinvoke $r1.<androidx.media2.MediaSession$SessionResult: void <init>(int)>(i0);

        virtualinvoke r0.<androidx.concurrent.futures.ResolvableFuture: boolean set(java.lang.Object)>($r1);

        return r0;
    }

    public int getResultCode()
    {
        androidx.media2.MediaSession$SessionResult r0;
        int $i0;

        r0 := @this: androidx.media2.MediaSession$SessionResult;

        $i0 = r0.<androidx.media2.MediaSession$SessionResult: int mResultCode>;

        return $i0;
    }

    public android.os.Bundle getCustomCommandResult()
    {
        androidx.media2.MediaSession$SessionResult r0;
        android.os.Bundle $r1;

        r0 := @this: androidx.media2.MediaSession$SessionResult;

        $r1 = r0.<androidx.media2.MediaSession$SessionResult: android.os.Bundle mCustomCommandResult>;

        return $r1;
    }

    public long getCompletionTime()
    {
        androidx.media2.MediaSession$SessionResult r0;
        long $l0;

        r0 := @this: androidx.media2.MediaSession$SessionResult;

        $l0 = r0.<androidx.media2.MediaSession$SessionResult: long mCompletionTime>;

        return $l0;
    }

    public androidx.media2.MediaItem getMediaItem()
    {
        androidx.media2.MediaSession$SessionResult r0;
        androidx.media2.MediaItem $r1;

        r0 := @this: androidx.media2.MediaSession$SessionResult;

        $r1 = r0.<androidx.media2.MediaSession$SessionResult: androidx.media2.MediaItem mItem>;

        return $r1;
    }

