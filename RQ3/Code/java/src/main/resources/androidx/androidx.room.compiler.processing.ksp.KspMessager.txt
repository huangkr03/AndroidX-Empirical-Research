androidx.room.compiler.processing.ksp.KspMessager
<androidx.room.compiler.processing.ksp.KspMessager: com.google.devtools.ksp.processing.KSPLogger logger>
    public void <init>(com.google.devtools.ksp.processing.KSPLogger)
    {
        androidx.room.compiler.processing.ksp.KspMessager r0;
        com.google.devtools.ksp.processing.KSPLogger r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspMessager;

        r1 := @parameter0: com.google.devtools.ksp.processing.KSPLogger;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "logger");

        specialinvoke r0.<androidx.room.compiler.processing.XMessager: void <init>()>();

        r0.<androidx.room.compiler.processing.ksp.KspMessager: com.google.devtools.ksp.processing.KSPLogger logger> = r1;

        return;
    }

    protected void onPrintMessage(javax.tools.Diagnostic$Kind, java.lang.String, androidx.room.compiler.processing.XElement, androidx.room.compiler.processing.XAnnotation, androidx.room.compiler.processing.XAnnotationValue)
    {
        androidx.room.compiler.processing.ksp.KspMessager r0;
        javax.tools.Diagnostic$Kind r1;
        java.lang.String r2, $r17, $r19;
        androidx.room.compiler.processing.XElement r3;
        androidx.room.compiler.processing.XAnnotation r4;
        androidx.room.compiler.processing.XAnnotationValue r5;
        kotlin.sequences.Sequence r6, $r13;
        com.google.devtools.ksp.symbol.KSNode r7, r10, $r26;
        java.util.Iterator r8;
        java.lang.Object r9, $r22, $r25;
        androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1 $r11;
        kotlin.jvm.functions.Function2 $r12;
        boolean $z2, $z3, $z4, $z5;
        java.lang.StringBuilder $r14, $r15, $r16, $r18;
        com.google.devtools.ksp.symbol.Location $r20, $r23;
        com.google.devtools.ksp.symbol.NonExistLocation $r21, $r24;

        r0 := @this: androidx.room.compiler.processing.ksp.KspMessager;

        r1 := @parameter0: javax.tools.Diagnostic$Kind;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.room.compiler.processing.XElement;

        r4 := @parameter3: androidx.room.compiler.processing.XAnnotation;

        r5 := @parameter4: androidx.room.compiler.processing.XAnnotationValue;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "kind");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "msg");

        if r3 != null goto label01;

        staticinvoke <androidx.room.compiler.processing.ksp.KspMessager: void internalPrintMessage$default(androidx.room.compiler.processing.ksp.KspMessager,javax.tools.Diagnostic$Kind,java.lang.String,com.google.devtools.ksp.symbol.KSNode,int,java.lang.Object)>(r0, r1, r2, null, 4, null);

        return;

     label01:
        $r11 = new androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1;

        specialinvoke $r11.<androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1: void <init>(androidx.room.compiler.processing.XAnnotationValue,androidx.room.compiler.processing.XAnnotation,androidx.room.compiler.processing.XElement,kotlin.coroutines.Continuation)>(r5, r4, r3, null);

        $r12 = (kotlin.jvm.functions.Function2) $r11;

        $r13 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence sequence(kotlin.jvm.functions.Function2)>($r12);

        r6 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence filterNotNull(kotlin.sequences.Sequence)>($r13);

        r8 = interfaceinvoke r6.<kotlin.sequences.Sequence: java.util.Iterator iterator()>();

     label02:
        $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label05;

        r9 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (com.google.devtools.ksp.symbol.KSNode) r9;

        $r23 = interfaceinvoke r10.<com.google.devtools.ksp.symbol.KSNode: com.google.devtools.ksp.symbol.Location getLocation()>();

        $r24 = <com.google.devtools.ksp.symbol.NonExistLocation: com.google.devtools.ksp.symbol.NonExistLocation INSTANCE>;

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r23, $r24);

        if $z4 != 0 goto label03;

        $z5 = 1;

        goto label04;

     label03:
        $z5 = 0;

     label04:
        if $z5 == 0 goto label02;

        $r25 = r9;

        goto label06;

     label05:
        $r25 = null;

     label06:
        $r26 = (com.google.devtools.ksp.symbol.KSNode) $r25;

        if $r26 != null goto label07;

        $r22 = staticinvoke <kotlin.sequences.SequencesKt: java.lang.Object firstOrNull(kotlin.sequences.Sequence)>(r6);

        $r26 = (com.google.devtools.ksp.symbol.KSNode) $r22;

     label07:
        r7 = $r26;

        if r7 == null goto label08;

        $r20 = interfaceinvoke r7.<com.google.devtools.ksp.symbol.KSNode: com.google.devtools.ksp.symbol.Location getLocation()>();

        $r21 = <com.google.devtools.ksp.symbol.NonExistLocation: com.google.devtools.ksp.symbol.NonExistLocation INSTANCE>;

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r20, $r21);

        if $z3 == 0 goto label09;

     label08:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r17 = interfaceinvoke r3.<androidx.room.compiler.processing.XElement: java.lang.String getFallbackLocationText()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<androidx.room.compiler.processing.ksp.KspMessager: void internalPrintMessage(javax.tools.Diagnostic$Kind,java.lang.String,com.google.devtools.ksp.symbol.KSNode)>(r1, $r19, r7);

        goto label10;

     label09:
        specialinvoke r0.<androidx.room.compiler.processing.ksp.KspMessager: void internalPrintMessage(javax.tools.Diagnostic$Kind,java.lang.String,com.google.devtools.ksp.symbol.KSNode)>(r1, r2, r7);

     label10:
        return;
    }

    private final void internalPrintMessage(javax.tools.Diagnostic$Kind, java.lang.String, com.google.devtools.ksp.symbol.KSNode)
    {
        androidx.room.compiler.processing.ksp.KspMessager r0;
        javax.tools.Diagnostic$Kind r1;
        java.lang.String r2;
        com.google.devtools.ksp.symbol.KSNode r3;
        int[] $r4;
        int $i0, $i1;
        com.google.devtools.ksp.processing.KSPLogger $r5, $r6, $r7;

        r0 := @this: androidx.room.compiler.processing.ksp.KspMessager;

        r1 := @parameter0: javax.tools.Diagnostic$Kind;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.google.devtools.ksp.symbol.KSNode;

        $r4 = <androidx.room.compiler.processing.ksp.KspMessager$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke r1.<javax.tools.Diagnostic$Kind: int ordinal()>();

        $i1 = $r4[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $r6 = r0.<androidx.room.compiler.processing.ksp.KspMessager: com.google.devtools.ksp.processing.KSPLogger logger>;

        interfaceinvoke $r6.<com.google.devtools.ksp.processing.KSPLogger: void error(java.lang.String,com.google.devtools.ksp.symbol.KSNode)>(r2, r3);

        goto label4;

     label2:
        $r5 = r0.<androidx.room.compiler.processing.ksp.KspMessager: com.google.devtools.ksp.processing.KSPLogger logger>;

        interfaceinvoke $r5.<com.google.devtools.ksp.processing.KSPLogger: void warn(java.lang.String,com.google.devtools.ksp.symbol.KSNode)>(r2, r3);

        goto label4;

     label3:
        $r7 = r0.<androidx.room.compiler.processing.ksp.KspMessager: com.google.devtools.ksp.processing.KSPLogger logger>;

        interfaceinvoke $r7.<com.google.devtools.ksp.processing.KSPLogger: void info(java.lang.String,com.google.devtools.ksp.symbol.KSNode)>(r2, r3);

     label4:
        return;
    }

    static void internalPrintMessage$default(androidx.room.compiler.processing.ksp.KspMessager, javax.tools.Diagnostic$Kind, java.lang.String, com.google.devtools.ksp.symbol.KSNode, int, java.lang.Object)
    {
        androidx.room.compiler.processing.ksp.KspMessager r0;
        javax.tools.Diagnostic$Kind r1;
        java.lang.String r2;
        int i0, $i1;
        java.lang.Object r3;
        com.google.devtools.ksp.symbol.KSNode r4;

        r0 := @parameter0: androidx.room.compiler.processing.ksp.KspMessager;

        r1 := @parameter1: javax.tools.Diagnostic$Kind;

        r2 := @parameter2: java.lang.String;

        r4 := @parameter3: com.google.devtools.ksp.symbol.KSNode;

        i0 := @parameter4: int;

        r3 := @parameter5: java.lang.Object;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        r4 = null;

     label1:
        specialinvoke r0.<androidx.room.compiler.processing.ksp.KspMessager: void internalPrintMessage(javax.tools.Diagnostic$Kind,java.lang.String,com.google.devtools.ksp.symbol.KSNode)>(r1, r2, r4);

        return;
    }

androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1
<androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1: int label>
<androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1: java.lang.Object L$0>
<androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1: androidx.room.compiler.processing.XAnnotationValue $annotationValue>
<androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1: androidx.room.compiler.processing.XAnnotation $annotation>
<androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1: androidx.room.compiler.processing.XElement $element>
    void <init>(androidx.room.compiler.processing.XAnnotationValue, androidx.room.compiler.processing.XAnnotation, androidx.room.compiler.processing.XElement, kotlin.coroutines.Continuation)
    {
        androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1 r0;
        androidx.room.compiler.processing.XAnnotationValue $r1;
        androidx.room.compiler.processing.XAnnotation $r2;
        androidx.room.compiler.processing.XElement $r3;
        kotlin.coroutines.Continuation $r4;

        r0 := @this: androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1;

        $r1 := @parameter0: androidx.room.compiler.processing.XAnnotationValue;

        $r2 := @parameter1: androidx.room.compiler.processing.XAnnotation;

        $r3 := @parameter2: androidx.room.compiler.processing.XElement;

        $r4 := @parameter3: kotlin.coroutines.Continuation;

        r0.<androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1: androidx.room.compiler.processing.XAnnotationValue $annotationValue> = $r1;

        r0.<androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1: androidx.room.compiler.processing.XAnnotation $annotation> = $r2;

        r0.<androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1: androidx.room.compiler.processing.XElement $element> = $r3;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.RestrictedSuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r4);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1 r0;
        java.lang.Object $r1, r2, $r4, $r6, $r8, $r10, $r12, $r14;
        int $i0;
        kotlin.Unit $r3;
        boolean $z0, $z1, $z2;
        kotlin.coroutines.Continuation $r5, $r9, $r13;
        kotlin.sequences.SequenceScope $r7, $r11, $r15, $r17;
        java.lang.IllegalStateException $r16;
        androidx.room.compiler.processing.XAnnotationValue r18;
        androidx.room.compiler.processing.ksp.KspAnnotationValue $r19;
        com.google.devtools.ksp.symbol.KSValueArgument $r20;
        androidx.room.compiler.processing.XAnnotation r21;
        androidx.room.compiler.processing.ksp.KspAnnotation $r22;
        com.google.devtools.ksp.symbol.KSAnnotation $r23;
        androidx.room.compiler.processing.XElement r24;
        androidx.room.compiler.processing.ksp.KspElement $r25;
        com.google.devtools.ksp.symbol.KSAnnotated $r26;

        r0 := @this: androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label01;
            case 1: goto label06;
            case 2: goto label12;
            case 3: goto label18;
            default: goto label20;
        };

     label01:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r12 = r0.<androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1: java.lang.Object L$0>;

        $r17 = (kotlin.sequences.SequenceScope) $r12;

        $r15 = $r17;

        r18 = r0.<androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1: androidx.room.compiler.processing.XAnnotationValue $annotationValue>;

        $z2 = r18 instanceof androidx.room.compiler.processing.ksp.KspAnnotationValue;

        if $z2 == 0 goto label02;

        $r19 = (androidx.room.compiler.processing.ksp.KspAnnotationValue) r18;

        goto label03;

     label02:
        $r19 = null;

     label03:
        if $r19 == null goto label04;

        $r20 = virtualinvoke $r19.<androidx.room.compiler.processing.ksp.KspAnnotationValue: com.google.devtools.ksp.symbol.KSValueArgument getValueArgument()>();

        goto label05;

     label04:
        $r20 = null;

     label05:
        $r13 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1: java.lang.Object L$0> = $r17;

        r0.<androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1: int label> = 1;

        $r14 = virtualinvoke $r15.<kotlin.sequences.SequenceScope: java.lang.Object yield(java.lang.Object,kotlin.coroutines.Continuation)>($r20, $r13);

        if $r14 != r2 goto label07;

        return r2;

     label06:
        $r8 = r0.<androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1: java.lang.Object L$0>;

        $r17 = (kotlin.sequences.SequenceScope) $r8;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label07:
        $r11 = $r17;

        r21 = r0.<androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1: androidx.room.compiler.processing.XAnnotation $annotation>;

        $z1 = r21 instanceof androidx.room.compiler.processing.ksp.KspAnnotation;

        if $z1 == 0 goto label08;

        $r22 = (androidx.room.compiler.processing.ksp.KspAnnotation) r21;

        goto label09;

     label08:
        $r22 = null;

     label09:
        if $r22 == null goto label10;

        $r23 = virtualinvoke $r22.<androidx.room.compiler.processing.ksp.KspAnnotation: com.google.devtools.ksp.symbol.KSAnnotation getKsAnnotated()>();

        goto label11;

     label10:
        $r23 = null;

     label11:
        $r9 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1: java.lang.Object L$0> = $r17;

        r0.<androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1: int label> = 2;

        $r10 = virtualinvoke $r11.<kotlin.sequences.SequenceScope: java.lang.Object yield(java.lang.Object,kotlin.coroutines.Continuation)>($r23, $r9);

        if $r10 != r2 goto label13;

        return r2;

     label12:
        $r4 = r0.<androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1: java.lang.Object L$0>;

        $r17 = (kotlin.sequences.SequenceScope) $r4;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label13:
        $r7 = $r17;

        r24 = r0.<androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1: androidx.room.compiler.processing.XElement $element>;

        $z0 = r24 instanceof androidx.room.compiler.processing.ksp.KspElement;

        if $z0 == 0 goto label14;

        $r25 = (androidx.room.compiler.processing.ksp.KspElement) r24;

        goto label15;

     label14:
        $r25 = null;

     label15:
        if $r25 == null goto label16;

        $r26 = virtualinvoke $r25.<androidx.room.compiler.processing.ksp.KspElement: com.google.devtools.ksp.symbol.KSAnnotated getDeclaration()>();

        goto label17;

     label16:
        $r26 = null;

     label17:
        $r5 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1: java.lang.Object L$0> = null;

        r0.<androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1: int label> = 3;

        $r6 = virtualinvoke $r7.<kotlin.sequences.SequenceScope: java.lang.Object yield(java.lang.Object,kotlin.coroutines.Continuation)>($r26, $r5);

        if $r6 != r2 goto label19;

        return r2;

     label18:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label19:
        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;

     label20:
        $r16 = new java.lang.IllegalStateException;

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r16;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1 r0, r3, $r4;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r8;
        androidx.room.compiler.processing.XElement $r5;
        androidx.room.compiler.processing.XAnnotation $r6;
        androidx.room.compiler.processing.XAnnotationValue $r7;

        r0 := @this: androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = new androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1;

        $r7 = r0.<androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1: androidx.room.compiler.processing.XAnnotationValue $annotationValue>;

        $r6 = r0.<androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1: androidx.room.compiler.processing.XAnnotation $annotation>;

        $r5 = r0.<androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1: androidx.room.compiler.processing.XElement $element>;

        specialinvoke $r4.<androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1: void <init>(androidx.room.compiler.processing.XAnnotationValue,androidx.room.compiler.processing.XAnnotation,androidx.room.compiler.processing.XElement,kotlin.coroutines.Continuation)>($r7, $r6, $r5, $r2);

        r3 = $r4;

        r3.<androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1: java.lang.Object L$0> = r1;

        $r8 = (kotlin.coroutines.Continuation) r3;

        return $r8;
    }

    public final java.lang.Object invoke(kotlin.sequences.SequenceScope, kotlin.coroutines.Continuation)
    {
        androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1 r0, $r5;
        kotlin.sequences.SequenceScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1;

        r1 := @parameter0: kotlin.sequences.SequenceScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlin.sequences.SequenceScope $r4;

        r0 := @this: androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlin.sequences.SequenceScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspMessager$onPrintMessage$nodes$1: java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.room.compiler.processing.ksp.KspMessager$WhenMappings
<androidx.room.compiler.processing.ksp.KspMessager$WhenMappings: int[] $EnumSwitchMapping$0>
    static void <clinit>()
    {
        int[] r0;
        javax.tools.Diagnostic$Kind[] $r1;
        int $i0, $i1, $i2;
        javax.tools.Diagnostic$Kind $r2, $r3;
        java.lang.Throwable $r4, $r5, r6, r7;

        $r1 = staticinvoke <javax.tools.Diagnostic$Kind: javax.tools.Diagnostic$Kind[] values()>();

        $i0 = lengthof $r1;

        r0 = newarray (int)[$i0];

     label1:
        $r2 = <javax.tools.Diagnostic$Kind: javax.tools.Diagnostic$Kind ERROR>;

        $i1 = virtualinvoke $r2.<javax.tools.Diagnostic$Kind: int ordinal()>();

        r0[$i1] = 1;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r6 = $r5;

     label4:
        $r3 = <javax.tools.Diagnostic$Kind: javax.tools.Diagnostic$Kind WARNING>;

        $i2 = virtualinvoke $r3.<javax.tools.Diagnostic$Kind: int ordinal()>();

        r0[$i2] = 2;

     label5:
        goto label7;

     label6:
        $r4 := @caughtexception;

        r7 = $r4;

     label7:
        <androidx.room.compiler.processing.ksp.KspMessager$WhenMappings: int[] $EnumSwitchMapping$0> = r0;

        return;

        catch java.lang.NoSuchFieldError from label1 to label2 with label3;
        catch java.lang.NoSuchFieldError from label4 to label5 with label6;
    }

