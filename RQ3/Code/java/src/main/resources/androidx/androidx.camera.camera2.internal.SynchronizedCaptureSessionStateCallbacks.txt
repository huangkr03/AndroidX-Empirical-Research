androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks
<androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks: java.util.List mCallbacks>
    static transient androidx.camera.camera2.internal.SynchronizedCaptureSession$StateCallback createComboCallback(androidx.camera.camera2.internal.SynchronizedCaptureSession$StateCallback[])
    {
        androidx.camera.camera2.internal.SynchronizedCaptureSession$StateCallback[] r0;
        androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks $r1;
        java.util.List $r2;

        r0 := @parameter0: androidx.camera.camera2.internal.SynchronizedCaptureSession$StateCallback[];

        $r1 = new androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks;

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r0);

        specialinvoke $r1.<androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks: void <init>(java.util.List)>($r2);

        return $r1;
    }

    void <init>(java.util.List)
    {
        androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks r0;
        java.util.List r1, $r3;
        java.util.ArrayList $r2;

        r0 := @this: androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<androidx.camera.camera2.internal.SynchronizedCaptureSession$StateCallback: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks: java.util.List mCallbacks> = $r2;

        $r3 = r0.<androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks: java.util.List mCallbacks>;

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        return;
    }

    public void onSurfacePrepared(androidx.camera.camera2.internal.SynchronizedCaptureSession, android.view.Surface)
    {
        androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks r0;
        androidx.camera.camera2.internal.SynchronizedCaptureSession r1;
        android.view.Surface r2;
        java.util.Iterator r3;
        androidx.camera.camera2.internal.SynchronizedCaptureSession$StateCallback r4;
        java.util.List $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks;

        r1 := @parameter0: androidx.camera.camera2.internal.SynchronizedCaptureSession;

        r2 := @parameter1: android.view.Surface;

        $r5 = r0.<androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks: java.util.List mCallbacks>;

        r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.camera.camera2.internal.SynchronizedCaptureSession$StateCallback) $r6;

        virtualinvoke r4.<androidx.camera.camera2.internal.SynchronizedCaptureSession$StateCallback: void onSurfacePrepared(androidx.camera.camera2.internal.SynchronizedCaptureSession,android.view.Surface)>(r1, r2);

        goto label1;

     label2:
        return;
    }

    public void onReady(androidx.camera.camera2.internal.SynchronizedCaptureSession)
    {
        androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks r0;
        androidx.camera.camera2.internal.SynchronizedCaptureSession r1;
        java.util.Iterator r2;
        androidx.camera.camera2.internal.SynchronizedCaptureSession$StateCallback r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks;

        r1 := @parameter0: androidx.camera.camera2.internal.SynchronizedCaptureSession;

        $r4 = r0.<androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks: java.util.List mCallbacks>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.camera.camera2.internal.SynchronizedCaptureSession$StateCallback) $r5;

        virtualinvoke r3.<androidx.camera.camera2.internal.SynchronizedCaptureSession$StateCallback: void onReady(androidx.camera.camera2.internal.SynchronizedCaptureSession)>(r1);

        goto label1;

     label2:
        return;
    }

    public void onActive(androidx.camera.camera2.internal.SynchronizedCaptureSession)
    {
        androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks r0;
        androidx.camera.camera2.internal.SynchronizedCaptureSession r1;
        java.util.Iterator r2;
        androidx.camera.camera2.internal.SynchronizedCaptureSession$StateCallback r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks;

        r1 := @parameter0: androidx.camera.camera2.internal.SynchronizedCaptureSession;

        $r4 = r0.<androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks: java.util.List mCallbacks>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.camera.camera2.internal.SynchronizedCaptureSession$StateCallback) $r5;

        virtualinvoke r3.<androidx.camera.camera2.internal.SynchronizedCaptureSession$StateCallback: void onActive(androidx.camera.camera2.internal.SynchronizedCaptureSession)>(r1);

        goto label1;

     label2:
        return;
    }

    public void onCaptureQueueEmpty(androidx.camera.camera2.internal.SynchronizedCaptureSession)
    {
        androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks r0;
        androidx.camera.camera2.internal.SynchronizedCaptureSession r1;
        java.util.Iterator r2;
        androidx.camera.camera2.internal.SynchronizedCaptureSession$StateCallback r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks;

        r1 := @parameter0: androidx.camera.camera2.internal.SynchronizedCaptureSession;

        $r4 = r0.<androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks: java.util.List mCallbacks>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.camera.camera2.internal.SynchronizedCaptureSession$StateCallback) $r5;

        virtualinvoke r3.<androidx.camera.camera2.internal.SynchronizedCaptureSession$StateCallback: void onCaptureQueueEmpty(androidx.camera.camera2.internal.SynchronizedCaptureSession)>(r1);

        goto label1;

     label2:
        return;
    }

    public void onConfigured(androidx.camera.camera2.internal.SynchronizedCaptureSession)
    {
        androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks r0;
        androidx.camera.camera2.internal.SynchronizedCaptureSession r1;
        java.util.Iterator r2;
        androidx.camera.camera2.internal.SynchronizedCaptureSession$StateCallback r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks;

        r1 := @parameter0: androidx.camera.camera2.internal.SynchronizedCaptureSession;

        $r4 = r0.<androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks: java.util.List mCallbacks>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.camera.camera2.internal.SynchronizedCaptureSession$StateCallback) $r5;

        virtualinvoke r3.<androidx.camera.camera2.internal.SynchronizedCaptureSession$StateCallback: void onConfigured(androidx.camera.camera2.internal.SynchronizedCaptureSession)>(r1);

        goto label1;

     label2:
        return;
    }

    public void onConfigureFailed(androidx.camera.camera2.internal.SynchronizedCaptureSession)
    {
        androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks r0;
        androidx.camera.camera2.internal.SynchronizedCaptureSession r1;
        java.util.Iterator r2;
        androidx.camera.camera2.internal.SynchronizedCaptureSession$StateCallback r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks;

        r1 := @parameter0: androidx.camera.camera2.internal.SynchronizedCaptureSession;

        $r4 = r0.<androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks: java.util.List mCallbacks>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.camera.camera2.internal.SynchronizedCaptureSession$StateCallback) $r5;

        virtualinvoke r3.<androidx.camera.camera2.internal.SynchronizedCaptureSession$StateCallback: void onConfigureFailed(androidx.camera.camera2.internal.SynchronizedCaptureSession)>(r1);

        goto label1;

     label2:
        return;
    }

    public void onClosed(androidx.camera.camera2.internal.SynchronizedCaptureSession)
    {
        androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks r0;
        androidx.camera.camera2.internal.SynchronizedCaptureSession r1;
        java.util.Iterator r2;
        androidx.camera.camera2.internal.SynchronizedCaptureSession$StateCallback r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks;

        r1 := @parameter0: androidx.camera.camera2.internal.SynchronizedCaptureSession;

        $r4 = r0.<androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks: java.util.List mCallbacks>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.camera.camera2.internal.SynchronizedCaptureSession$StateCallback) $r5;

        virtualinvoke r3.<androidx.camera.camera2.internal.SynchronizedCaptureSession$StateCallback: void onClosed(androidx.camera.camera2.internal.SynchronizedCaptureSession)>(r1);

        goto label1;

     label2:
        return;
    }

    void onSessionFinished(androidx.camera.camera2.internal.SynchronizedCaptureSession)
    {
        androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks r0;
        androidx.camera.camera2.internal.SynchronizedCaptureSession r1;
        java.util.Iterator r2;
        androidx.camera.camera2.internal.SynchronizedCaptureSession$StateCallback r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks;

        r1 := @parameter0: androidx.camera.camera2.internal.SynchronizedCaptureSession;

        $r4 = r0.<androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks: java.util.List mCallbacks>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.camera.camera2.internal.SynchronizedCaptureSession$StateCallback) $r5;

        virtualinvoke r3.<androidx.camera.camera2.internal.SynchronizedCaptureSession$StateCallback: void onSessionFinished(androidx.camera.camera2.internal.SynchronizedCaptureSession)>(r1);

        goto label1;

     label2:
        return;
    }

androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks$Adapter
<androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks$Adapter: android.hardware.camera2.CameraCaptureSession$StateCallback mCameraCaptureSessionStateCallback>
    void <init>(android.hardware.camera2.CameraCaptureSession$StateCallback)
    {
        androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks$Adapter r0;
        android.hardware.camera2.CameraCaptureSession$StateCallback r1;

        r0 := @this: androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks$Adapter;

        r1 := @parameter0: android.hardware.camera2.CameraCaptureSession$StateCallback;

        specialinvoke r0.<androidx.camera.camera2.internal.SynchronizedCaptureSession$StateCallback: void <init>()>();

        r0.<androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks$Adapter: android.hardware.camera2.CameraCaptureSession$StateCallback mCameraCaptureSessionStateCallback> = r1;

        return;
    }

    void <init>(java.util.List)
    {
        androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks$Adapter r0;
        java.util.List r1;
        android.hardware.camera2.CameraCaptureSession$StateCallback $r2;

        r0 := @this: androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks$Adapter;

        r1 := @parameter0: java.util.List;

        $r2 = staticinvoke <androidx.camera.camera2.internal.CameraCaptureSessionStateCallbacks: android.hardware.camera2.CameraCaptureSession$StateCallback createComboCallback(java.util.List)>(r1);

        specialinvoke r0.<androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks$Adapter: void <init>(android.hardware.camera2.CameraCaptureSession$StateCallback)>($r2);

        return;
    }

    public void onSurfacePrepared(androidx.camera.camera2.internal.SynchronizedCaptureSession, android.view.Surface)
    {
        androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks$Adapter r0;
        androidx.camera.camera2.internal.SynchronizedCaptureSession r1;
        android.view.Surface r2;
        android.hardware.camera2.CameraCaptureSession$StateCallback $r3;
        androidx.camera.camera2.internal.compat.CameraCaptureSessionCompat $r4;
        android.hardware.camera2.CameraCaptureSession $r5;

        r0 := @this: androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks$Adapter;

        r1 := @parameter0: androidx.camera.camera2.internal.SynchronizedCaptureSession;

        r2 := @parameter1: android.view.Surface;

        $r3 = r0.<androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks$Adapter: android.hardware.camera2.CameraCaptureSession$StateCallback mCameraCaptureSessionStateCallback>;

        $r4 = interfaceinvoke r1.<androidx.camera.camera2.internal.SynchronizedCaptureSession: androidx.camera.camera2.internal.compat.CameraCaptureSessionCompat toCameraCaptureSessionCompat()>();

        $r5 = virtualinvoke $r4.<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompat: android.hardware.camera2.CameraCaptureSession toCameraCaptureSession()>();

        staticinvoke <androidx.camera.camera2.internal.compat.ApiCompat$Api23Impl: void onSurfacePrepared(android.hardware.camera2.CameraCaptureSession$StateCallback,android.hardware.camera2.CameraCaptureSession,android.view.Surface)>($r3, $r5, r2);

        return;
    }

    public void onReady(androidx.camera.camera2.internal.SynchronizedCaptureSession)
    {
        androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks$Adapter r0;
        androidx.camera.camera2.internal.SynchronizedCaptureSession r1;
        android.hardware.camera2.CameraCaptureSession$StateCallback $r2;
        androidx.camera.camera2.internal.compat.CameraCaptureSessionCompat $r3;
        android.hardware.camera2.CameraCaptureSession $r4;

        r0 := @this: androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks$Adapter;

        r1 := @parameter0: androidx.camera.camera2.internal.SynchronizedCaptureSession;

        $r2 = r0.<androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks$Adapter: android.hardware.camera2.CameraCaptureSession$StateCallback mCameraCaptureSessionStateCallback>;

        $r3 = interfaceinvoke r1.<androidx.camera.camera2.internal.SynchronizedCaptureSession: androidx.camera.camera2.internal.compat.CameraCaptureSessionCompat toCameraCaptureSessionCompat()>();

        $r4 = virtualinvoke $r3.<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompat: android.hardware.camera2.CameraCaptureSession toCameraCaptureSession()>();

        virtualinvoke $r2.<android.hardware.camera2.CameraCaptureSession$StateCallback: void onReady(android.hardware.camera2.CameraCaptureSession)>($r4);

        return;
    }

    public void onActive(androidx.camera.camera2.internal.SynchronizedCaptureSession)
    {
        androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks$Adapter r0;
        androidx.camera.camera2.internal.SynchronizedCaptureSession r1;
        android.hardware.camera2.CameraCaptureSession$StateCallback $r2;
        androidx.camera.camera2.internal.compat.CameraCaptureSessionCompat $r3;
        android.hardware.camera2.CameraCaptureSession $r4;

        r0 := @this: androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks$Adapter;

        r1 := @parameter0: androidx.camera.camera2.internal.SynchronizedCaptureSession;

        $r2 = r0.<androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks$Adapter: android.hardware.camera2.CameraCaptureSession$StateCallback mCameraCaptureSessionStateCallback>;

        $r3 = interfaceinvoke r1.<androidx.camera.camera2.internal.SynchronizedCaptureSession: androidx.camera.camera2.internal.compat.CameraCaptureSessionCompat toCameraCaptureSessionCompat()>();

        $r4 = virtualinvoke $r3.<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompat: android.hardware.camera2.CameraCaptureSession toCameraCaptureSession()>();

        virtualinvoke $r2.<android.hardware.camera2.CameraCaptureSession$StateCallback: void onActive(android.hardware.camera2.CameraCaptureSession)>($r4);

        return;
    }

    public void onCaptureQueueEmpty(androidx.camera.camera2.internal.SynchronizedCaptureSession)
    {
        androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks$Adapter r0;
        androidx.camera.camera2.internal.SynchronizedCaptureSession r1;
        android.hardware.camera2.CameraCaptureSession$StateCallback $r2;
        androidx.camera.camera2.internal.compat.CameraCaptureSessionCompat $r3;
        android.hardware.camera2.CameraCaptureSession $r4;

        r0 := @this: androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks$Adapter;

        r1 := @parameter0: androidx.camera.camera2.internal.SynchronizedCaptureSession;

        $r2 = r0.<androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks$Adapter: android.hardware.camera2.CameraCaptureSession$StateCallback mCameraCaptureSessionStateCallback>;

        $r3 = interfaceinvoke r1.<androidx.camera.camera2.internal.SynchronizedCaptureSession: androidx.camera.camera2.internal.compat.CameraCaptureSessionCompat toCameraCaptureSessionCompat()>();

        $r4 = virtualinvoke $r3.<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompat: android.hardware.camera2.CameraCaptureSession toCameraCaptureSession()>();

        staticinvoke <androidx.camera.camera2.internal.compat.ApiCompat$Api26Impl: void onCaptureQueueEmpty(android.hardware.camera2.CameraCaptureSession$StateCallback,android.hardware.camera2.CameraCaptureSession)>($r2, $r4);

        return;
    }

    public void onConfigured(androidx.camera.camera2.internal.SynchronizedCaptureSession)
    {
        androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks$Adapter r0;
        androidx.camera.camera2.internal.SynchronizedCaptureSession r1;
        android.hardware.camera2.CameraCaptureSession$StateCallback $r2;
        androidx.camera.camera2.internal.compat.CameraCaptureSessionCompat $r3;
        android.hardware.camera2.CameraCaptureSession $r4;

        r0 := @this: androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks$Adapter;

        r1 := @parameter0: androidx.camera.camera2.internal.SynchronizedCaptureSession;

        $r2 = r0.<androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks$Adapter: android.hardware.camera2.CameraCaptureSession$StateCallback mCameraCaptureSessionStateCallback>;

        $r3 = interfaceinvoke r1.<androidx.camera.camera2.internal.SynchronizedCaptureSession: androidx.camera.camera2.internal.compat.CameraCaptureSessionCompat toCameraCaptureSessionCompat()>();

        $r4 = virtualinvoke $r3.<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompat: android.hardware.camera2.CameraCaptureSession toCameraCaptureSession()>();

        virtualinvoke $r2.<android.hardware.camera2.CameraCaptureSession$StateCallback: void onConfigured(android.hardware.camera2.CameraCaptureSession)>($r4);

        return;
    }

    public void onConfigureFailed(androidx.camera.camera2.internal.SynchronizedCaptureSession)
    {
        androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks$Adapter r0;
        androidx.camera.camera2.internal.SynchronizedCaptureSession r1;
        android.hardware.camera2.CameraCaptureSession$StateCallback $r2;
        androidx.camera.camera2.internal.compat.CameraCaptureSessionCompat $r3;
        android.hardware.camera2.CameraCaptureSession $r4;

        r0 := @this: androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks$Adapter;

        r1 := @parameter0: androidx.camera.camera2.internal.SynchronizedCaptureSession;

        $r2 = r0.<androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks$Adapter: android.hardware.camera2.CameraCaptureSession$StateCallback mCameraCaptureSessionStateCallback>;

        $r3 = interfaceinvoke r1.<androidx.camera.camera2.internal.SynchronizedCaptureSession: androidx.camera.camera2.internal.compat.CameraCaptureSessionCompat toCameraCaptureSessionCompat()>();

        $r4 = virtualinvoke $r3.<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompat: android.hardware.camera2.CameraCaptureSession toCameraCaptureSession()>();

        virtualinvoke $r2.<android.hardware.camera2.CameraCaptureSession$StateCallback: void onConfigureFailed(android.hardware.camera2.CameraCaptureSession)>($r4);

        return;
    }

    public void onClosed(androidx.camera.camera2.internal.SynchronizedCaptureSession)
    {
        androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks$Adapter r0;
        androidx.camera.camera2.internal.SynchronizedCaptureSession r1;
        android.hardware.camera2.CameraCaptureSession$StateCallback $r2;
        androidx.camera.camera2.internal.compat.CameraCaptureSessionCompat $r3;
        android.hardware.camera2.CameraCaptureSession $r4;

        r0 := @this: androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks$Adapter;

        r1 := @parameter0: androidx.camera.camera2.internal.SynchronizedCaptureSession;

        $r2 = r0.<androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks$Adapter: android.hardware.camera2.CameraCaptureSession$StateCallback mCameraCaptureSessionStateCallback>;

        $r3 = interfaceinvoke r1.<androidx.camera.camera2.internal.SynchronizedCaptureSession: androidx.camera.camera2.internal.compat.CameraCaptureSessionCompat toCameraCaptureSessionCompat()>();

        $r4 = virtualinvoke $r3.<androidx.camera.camera2.internal.compat.CameraCaptureSessionCompat: android.hardware.camera2.CameraCaptureSession toCameraCaptureSession()>();

        virtualinvoke $r2.<android.hardware.camera2.CameraCaptureSession$StateCallback: void onClosed(android.hardware.camera2.CameraCaptureSession)>($r4);

        return;
    }

    void onSessionFinished(androidx.camera.camera2.internal.SynchronizedCaptureSession)
    {
        androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks$Adapter r0;
        androidx.camera.camera2.internal.SynchronizedCaptureSession r1;

        r0 := @this: androidx.camera.camera2.internal.SynchronizedCaptureSessionStateCallbacks$Adapter;

        r1 := @parameter0: androidx.camera.camera2.internal.SynchronizedCaptureSession;

        return;
    }

