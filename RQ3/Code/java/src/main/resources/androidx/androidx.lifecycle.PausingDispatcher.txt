androidx.lifecycle.PausingDispatcher
<androidx.lifecycle.PausingDispatcher: androidx.lifecycle.DispatchQueue dispatchQueue>
    public void <init>()
    {
        androidx.lifecycle.PausingDispatcher r0;
        androidx.lifecycle.DispatchQueue $r1;

        r0 := @this: androidx.lifecycle.PausingDispatcher;

        specialinvoke r0.<kotlinx.coroutines.CoroutineDispatcher: void <init>()>();

        $r1 = new androidx.lifecycle.DispatchQueue;

        specialinvoke $r1.<androidx.lifecycle.DispatchQueue: void <init>()>();

        r0.<androidx.lifecycle.PausingDispatcher: androidx.lifecycle.DispatchQueue dispatchQueue> = $r1;

        return;
    }

    public boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
    {
        androidx.lifecycle.PausingDispatcher r0;
        kotlin.coroutines.CoroutineContext r1;
        kotlinx.coroutines.MainCoroutineDispatcher $r2, $r3;
        boolean $z0, $z1, $z2;
        androidx.lifecycle.DispatchQueue $r4;

        r0 := @this: androidx.lifecycle.PausingDispatcher;

        r1 := @parameter0: kotlin.coroutines.CoroutineContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        $r2 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        $r3 = virtualinvoke $r2.<kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()>();

        $z0 = virtualinvoke $r3.<kotlinx.coroutines.MainCoroutineDispatcher: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r4 = r0.<androidx.lifecycle.PausingDispatcher: androidx.lifecycle.DispatchQueue dispatchQueue>;

        $z1 = virtualinvoke $r4.<androidx.lifecycle.DispatchQueue: boolean canRun()>();

        if $z1 != 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public void dispatch(kotlin.coroutines.CoroutineContext, java.lang.Runnable)
    {
        androidx.lifecycle.PausingDispatcher r0;
        kotlin.coroutines.CoroutineContext r1;
        java.lang.Runnable r2;
        androidx.lifecycle.DispatchQueue $r3;

        r0 := @this: androidx.lifecycle.PausingDispatcher;

        r1 := @parameter0: kotlin.coroutines.CoroutineContext;

        r2 := @parameter1: java.lang.Runnable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "block");

        $r3 = r0.<androidx.lifecycle.PausingDispatcher: androidx.lifecycle.DispatchQueue dispatchQueue>;

        virtualinvoke $r3.<androidx.lifecycle.DispatchQueue: void dispatchAndEnqueue(kotlin.coroutines.CoroutineContext,java.lang.Runnable)>(r1, r2);

        return;
    }

