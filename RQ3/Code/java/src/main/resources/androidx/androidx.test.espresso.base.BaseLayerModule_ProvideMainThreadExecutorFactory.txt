androidx.test.espresso.base.BaseLayerModule_ProvideMainThreadExecutorFactory
<androidx.test.espresso.base.BaseLayerModule_ProvideMainThreadExecutorFactory: androidx.test.espresso.base.BaseLayerModule module>
<androidx.test.espresso.base.BaseLayerModule_ProvideMainThreadExecutorFactory: javax.inject.Provider mainLooperProvider>
    public static androidx.test.espresso.base.BaseLayerModule_ProvideMainThreadExecutorFactory create(androidx.test.espresso.base.BaseLayerModule, javax.inject.Provider)
    {
        androidx.test.espresso.base.BaseLayerModule r0;
        javax.inject.Provider r1;
        androidx.test.espresso.base.BaseLayerModule_ProvideMainThreadExecutorFactory r2;

        r0 := @parameter0: androidx.test.espresso.base.BaseLayerModule;

        r1 := @parameter1: javax.inject.Provider;

        r2 = new androidx.test.espresso.base.BaseLayerModule_ProvideMainThreadExecutorFactory;

        specialinvoke r2.<androidx.test.espresso.base.BaseLayerModule_ProvideMainThreadExecutorFactory: void <init>(androidx.test.espresso.base.BaseLayerModule,javax.inject.Provider)>(r0, r1);

        return r2;
    }

    public volatile java.lang.Object get()
    {
        androidx.test.espresso.base.BaseLayerModule_ProvideMainThreadExecutorFactory r0;
        java.util.concurrent.Executor $r1;

        r0 := @this: androidx.test.espresso.base.BaseLayerModule_ProvideMainThreadExecutorFactory;

        $r1 = virtualinvoke r0.<androidx.test.espresso.base.BaseLayerModule_ProvideMainThreadExecutorFactory: java.util.concurrent.Executor get()>();

        return $r1;
    }

    public java.util.concurrent.Executor get()
    {
        androidx.test.espresso.base.BaseLayerModule_ProvideMainThreadExecutorFactory r0;
        javax.inject.Provider $r1;
        androidx.test.espresso.base.BaseLayerModule $r2;
        java.lang.Object $r3;
        android.os.Looper $r4;
        java.util.concurrent.Executor $r5;

        r0 := @this: androidx.test.espresso.base.BaseLayerModule_ProvideMainThreadExecutorFactory;

        $r2 = r0.<androidx.test.espresso.base.BaseLayerModule_ProvideMainThreadExecutorFactory: androidx.test.espresso.base.BaseLayerModule module>;

        $r1 = r0.<androidx.test.espresso.base.BaseLayerModule_ProvideMainThreadExecutorFactory: javax.inject.Provider mainLooperProvider>;

        $r3 = interfaceinvoke $r1.<javax.inject.Provider: java.lang.Object get()>();

        $r4 = (android.os.Looper) $r3;

        $r5 = staticinvoke <androidx.test.espresso.base.BaseLayerModule_ProvideMainThreadExecutorFactory: java.util.concurrent.Executor provideMainThreadExecutor(androidx.test.espresso.base.BaseLayerModule,android.os.Looper)>($r2, $r4);

        return $r5;
    }

    public static java.util.concurrent.Executor provideMainThreadExecutor(androidx.test.espresso.base.BaseLayerModule, android.os.Looper)
    {
        androidx.test.espresso.base.BaseLayerModule r0;
        android.os.Looper r1;
        java.util.concurrent.Executor $r2, $r4;
        java.lang.Object $r3;

        r0 := @parameter0: androidx.test.espresso.base.BaseLayerModule;

        r1 := @parameter1: android.os.Looper;

        $r2 = virtualinvoke r0.<androidx.test.espresso.base.BaseLayerModule: java.util.concurrent.Executor provideMainThreadExecutor(android.os.Looper)>(r1);

        $r3 = staticinvoke <androidx.test.espresso.core.internal.deps.dagger.internal.Preconditions: java.lang.Object checkNotNullFromProvides(java.lang.Object)>($r2);

        $r4 = (java.util.concurrent.Executor) $r3;

        return $r4;
    }

    public void <init>(androidx.test.espresso.base.BaseLayerModule, javax.inject.Provider)
    {
        androidx.test.espresso.base.BaseLayerModule_ProvideMainThreadExecutorFactory r0;
        androidx.test.espresso.base.BaseLayerModule r1;
        javax.inject.Provider r2;

        r0 := @this: androidx.test.espresso.base.BaseLayerModule_ProvideMainThreadExecutorFactory;

        r1 := @parameter0: androidx.test.espresso.base.BaseLayerModule;

        r2 := @parameter1: javax.inject.Provider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.test.espresso.base.BaseLayerModule_ProvideMainThreadExecutorFactory: androidx.test.espresso.base.BaseLayerModule module> = r1;

        r0.<androidx.test.espresso.base.BaseLayerModule_ProvideMainThreadExecutorFactory: javax.inject.Provider mainLooperProvider> = r2;

        return;
    }

