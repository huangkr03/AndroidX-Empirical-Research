perfetto.protos.Trace
<perfetto.protos.Trace: perfetto.protos.Trace$Companion Companion>
<perfetto.protos.Trace: java.util.List packet>
<perfetto.protos.Trace: com.squareup.wire.ProtoAdapter ADAPTER>
<perfetto.protos.Trace: long serialVersionUID>
    public void <init>(java.util.List, okio.ByteString)
    {
        perfetto.protos.Trace r0;
        java.util.List r1, $r4;
        okio.ByteString r2;
        com.squareup.wire.ProtoAdapter $r3;

        r0 := @this: perfetto.protos.Trace;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: okio.ByteString;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "packet");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "unknownFields");

        $r3 = <perfetto.protos.Trace: com.squareup.wire.ProtoAdapter ADAPTER>;

        specialinvoke r0.<com.squareup.wire.Message: void <init>(com.squareup.wire.ProtoAdapter,okio.ByteString)>($r3, r2);

        $r4 = staticinvoke <com.squareup.wire.internal.Internal: java.util.List immutableCopyOf(java.lang.String,java.util.List)>("packet", r1);

        r0.<perfetto.protos.Trace: java.util.List packet> = $r4;

        return;
    }

    public void <init>(java.util.List, okio.ByteString, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.Trace r0;
        int i0, $i1, $i2;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        java.util.List r2;
        okio.ByteString r3;

        r0 := @this: perfetto.protos.Trace;

        r2 := @parameter0: java.util.List;

        r3 := @parameter1: okio.ByteString;

        i0 := @parameter2: int;

        r1 := @parameter3: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r3 = <okio.ByteString: okio.ByteString EMPTY>;

     label2:
        specialinvoke r0.<perfetto.protos.Trace: void <init>(java.util.List,okio.ByteString)>(r2, r3);

        return;
    }

    public final java.util.List getPacket()
    {
        perfetto.protos.Trace r0;
        java.util.List $r1;

        r0 := @this: perfetto.protos.Trace;

        $r1 = r0.<perfetto.protos.Trace: java.util.List packet>;

        return $r1;
    }

    public java.lang.Void newBuilder()
    {
        perfetto.protos.Trace r0;
        java.lang.AssertionError $r1;

        r0 := @this: perfetto.protos.Trace;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;
    }

    public boolean equals(java.lang.Object)
    {
        perfetto.protos.Trace r0, $r3, $r5;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        okio.ByteString $r2, $r4;
        java.util.List $r6, $r7;

        r0 := @this: perfetto.protos.Trace;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof perfetto.protos.Trace;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<perfetto.protos.Trace: okio.ByteString unknownFields()>();

        $r3 = (perfetto.protos.Trace) r1;

        $r4 = virtualinvoke $r3.<perfetto.protos.Trace: okio.ByteString unknownFields()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r4);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $r7 = r0.<perfetto.protos.Trace: java.util.List packet>;

        $r5 = (perfetto.protos.Trace) r1;

        $r6 = $r5.<perfetto.protos.Trace: java.util.List packet>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, $r6);

        if $z2 != 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    public int hashCode()
    {
        perfetto.protos.Trace r0;
        okio.ByteString $r1;
        java.util.List $r2;
        int $i0, $i1, i2, i3;

        r0 := @this: perfetto.protos.Trace;

        i2 = r0.<perfetto.protos.Trace: int hashCode>;

        if i2 != 0 goto label1;

        $r1 = virtualinvoke r0.<perfetto.protos.Trace: okio.ByteString unknownFields()>();

        i3 = virtualinvoke $r1.<okio.ByteString: int hashCode()>();

        $i0 = i3 * 37;

        $r2 = r0.<perfetto.protos.Trace: java.util.List packet>;

        $i1 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        i2 = $i0 + $i1;

        r0.<perfetto.protos.Trace: int hashCode> = i2;

     label1:
        return i2;
    }

    public java.lang.String toString()
    {
        perfetto.protos.Trace r0;
        java.util.List r1, $r3, $r10;
        java.util.ArrayList $r2;
        java.util.Collection $r4, $r11;
        boolean $z0, $z2;
        java.lang.CharSequence $r5, $r6, $r7;
        java.lang.Iterable $r8;
        java.lang.String $r9, $r12;

        r0 := @this: perfetto.protos.Trace;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r1 = (java.util.List) $r2;

        $r3 = r0.<perfetto.protos.Trace: java.util.List packet>;

        $r4 = (java.util.Collection) $r3;

        $z0 = interfaceinvoke $r4.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        if $z2 == 0 goto label3;

        $r11 = (java.util.Collection) r1;

        $r10 = r0.<perfetto.protos.Trace: java.util.List packet>;

        $r12 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("packet=", $r10);

        interfaceinvoke $r11.<java.util.Collection: boolean add(java.lang.Object)>($r12);

     label3:
        $r8 = (java.lang.Iterable) r1;

        $r7 = (java.lang.CharSequence) ", ";

        $r6 = (java.lang.CharSequence) "Trace{";

        $r5 = (java.lang.CharSequence) "}";

        $r9 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r8, $r7, $r6, $r5, 0, null, null, 56, null);

        return $r9;
    }

    public final perfetto.protos.Trace copy(java.util.List, okio.ByteString)
    {
        perfetto.protos.Trace r0, $r3;
        java.util.List r1;
        okio.ByteString r2;

        r0 := @this: perfetto.protos.Trace;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: okio.ByteString;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "packet");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "unknownFields");

        $r3 = new perfetto.protos.Trace;

        specialinvoke $r3.<perfetto.protos.Trace: void <init>(java.util.List,okio.ByteString)>(r1, r2);

        return $r3;
    }

    public static perfetto.protos.Trace copy$default(perfetto.protos.Trace, java.util.List, okio.ByteString, int, java.lang.Object)
    {
        perfetto.protos.Trace r0, $r2;
        int i0, $i1, $i2;
        java.lang.Object r1;
        java.util.List r3;
        okio.ByteString r4;

        r0 := @parameter0: perfetto.protos.Trace;

        r3 := @parameter1: java.util.List;

        r4 := @parameter2: okio.ByteString;

        i0 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r3 = r0.<perfetto.protos.Trace: java.util.List packet>;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r4 = virtualinvoke r0.<perfetto.protos.Trace: okio.ByteString unknownFields()>();

     label2:
        $r2 = virtualinvoke r0.<perfetto.protos.Trace: perfetto.protos.Trace copy(java.util.List,okio.ByteString)>(r3, r4);

        return $r2;
    }

    public void <init>()
    {
        perfetto.protos.Trace r0;

        r0 := @this: perfetto.protos.Trace;

        specialinvoke r0.<perfetto.protos.Trace: void <init>(java.util.List,okio.ByteString,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, null, 3, null);

        return;
    }

    public volatile com.squareup.wire.Message$Builder newBuilder()
    {
        perfetto.protos.Trace r0;
        java.lang.Void $r1;
        com.squareup.wire.Message$Builder $r2;

        r0 := @this: perfetto.protos.Trace;

        $r1 = virtualinvoke r0.<perfetto.protos.Trace: java.lang.Void newBuilder()>();

        $r2 = (com.squareup.wire.Message$Builder) $r1;

        return $r2;
    }

    static void <clinit>()
    {
        com.squareup.wire.FieldEncoding r0;
        kotlin.reflect.KClass r1;
        com.squareup.wire.Syntax r2;
        perfetto.protos.Trace$Companion $r3;
        perfetto.protos.Trace$Companion$ADAPTER$1 $r4;
        com.squareup.wire.ProtoAdapter $r5;

        $r3 = new perfetto.protos.Trace$Companion;

        specialinvoke $r3.<perfetto.protos.Trace$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <perfetto.protos.Trace: perfetto.protos.Trace$Companion Companion> = $r3;

        r0 = <com.squareup.wire.FieldEncoding: com.squareup.wire.FieldEncoding LENGTH_DELIMITED>;

        r1 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Lperfetto/protos/Trace;");

        r2 = <com.squareup.wire.Syntax: com.squareup.wire.Syntax PROTO_2>;

        $r4 = new perfetto.protos.Trace$Companion$ADAPTER$1;

        specialinvoke $r4.<perfetto.protos.Trace$Companion$ADAPTER$1: void <init>(com.squareup.wire.FieldEncoding,kotlin.reflect.KClass,com.squareup.wire.Syntax)>(r0, r1, r2);

        $r5 = (com.squareup.wire.ProtoAdapter) $r4;

        <perfetto.protos.Trace: com.squareup.wire.ProtoAdapter ADAPTER> = $r5;

        return;
    }

perfetto.protos.Trace$Companion$ADAPTER$1
    void <init>(com.squareup.wire.FieldEncoding, kotlin.reflect.KClass, com.squareup.wire.Syntax)
    {
        perfetto.protos.Trace$Companion$ADAPTER$1 r0;
        com.squareup.wire.FieldEncoding $r1;
        kotlin.reflect.KClass $r2;
        com.squareup.wire.Syntax $r3;

        r0 := @this: perfetto.protos.Trace$Companion$ADAPTER$1;

        $r1 := @parameter0: com.squareup.wire.FieldEncoding;

        $r2 := @parameter1: kotlin.reflect.KClass;

        $r3 := @parameter2: com.squareup.wire.Syntax;

        specialinvoke r0.<com.squareup.wire.ProtoAdapter: void <init>(com.squareup.wire.FieldEncoding,kotlin.reflect.KClass,java.lang.String,com.squareup.wire.Syntax,java.lang.Object)>($r1, $r2, "type.googleapis.com/perfetto.protos.Trace", $r3, null);

        return;
    }

    public int encodedSize(perfetto.protos.Trace)
    {
        perfetto.protos.Trace$Companion$ADAPTER$1 r0;
        perfetto.protos.Trace r1;
        okio.ByteString $r2;
        com.squareup.wire.ProtoAdapter $r3, $r4;
        java.util.List $r5;
        int $i0, i1, i2;

        r0 := @this: perfetto.protos.Trace$Companion$ADAPTER$1;

        r1 := @parameter0: perfetto.protos.Trace;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = virtualinvoke r1.<perfetto.protos.Trace: okio.ByteString unknownFields()>();

        i1 = virtualinvoke $r2.<okio.ByteString: int size()>();

        $r3 = <perfetto.protos.TracePacket: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r4 = virtualinvoke $r3.<com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter asRepeated()>();

        $r5 = virtualinvoke r1.<perfetto.protos.Trace: java.util.List getPacket()>();

        $i0 = virtualinvoke $r4.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(1, $r5);

        i2 = i1 + $i0;

        return i2;
    }

    public void encode(com.squareup.wire.ProtoWriter, perfetto.protos.Trace)
    {
        perfetto.protos.Trace$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoWriter r1;
        perfetto.protos.Trace r2;
        com.squareup.wire.ProtoAdapter $r3, $r4;
        java.util.List $r5;
        okio.ByteString $r6;

        r0 := @this: perfetto.protos.Trace$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoWriter;

        r2 := @parameter1: perfetto.protos.Trace;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "writer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "value");

        $r3 = <perfetto.protos.TracePacket: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r4 = virtualinvoke $r3.<com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter asRepeated()>();

        $r5 = virtualinvoke r2.<perfetto.protos.Trace: java.util.List getPacket()>();

        virtualinvoke $r4.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 1, $r5);

        $r6 = virtualinvoke r2.<perfetto.protos.Trace: okio.ByteString unknownFields()>();

        virtualinvoke r1.<com.squareup.wire.ProtoWriter: void writeBytes(okio.ByteString)>($r6);

        return;
    }

    public perfetto.protos.Trace decode(com.squareup.wire.ProtoReader)
    {
        perfetto.protos.Trace$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoReader r1, r4;
        java.util.List r2;
        okio.ByteString r3;
        long l0;
        int i1, i2;
        java.util.ArrayList $r5;
        com.squareup.wire.ProtoAdapter $r6;
        java.lang.Object $r7;
        perfetto.protos.Trace $r8;

        r0 := @this: perfetto.protos.Trace$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoReader;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "reader");

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r2 = (java.util.List) $r5;

        r4 = r1;

        l0 = virtualinvoke r4.<com.squareup.wire.ProtoReader: long beginMessage()>();

     label1:
        i1 = virtualinvoke r4.<com.squareup.wire.ProtoReader: int nextTag()>();

        if i1 != -1 goto label2;

        goto label5;

     label2:
        i2 = i1;

        if i2 != 1 goto label3;

        $r6 = <perfetto.protos.TracePacket: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r7 = virtualinvoke $r6.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label4;

     label3:
        virtualinvoke r1.<com.squareup.wire.ProtoReader: void readUnknownField(int)>(i2);

     label4:
        goto label1;

     label5:
        r3 = virtualinvoke r4.<com.squareup.wire.ProtoReader: okio.ByteString endMessageAndGetUnknownFields(long)>(l0);

        $r8 = new perfetto.protos.Trace;

        specialinvoke $r8.<perfetto.protos.Trace: void <init>(java.util.List,okio.ByteString)>(r2, r3);

        return $r8;
    }

    public perfetto.protos.Trace redact(perfetto.protos.Trace)
    {
        perfetto.protos.Trace$Companion$ADAPTER$1 r0;
        perfetto.protos.Trace r1, $r6;
        java.util.List $r2, $r4;
        com.squareup.wire.ProtoAdapter $r3;
        okio.ByteString $r5;

        r0 := @this: perfetto.protos.Trace$Companion$ADAPTER$1;

        r1 := @parameter0: perfetto.protos.Trace;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = virtualinvoke r1.<perfetto.protos.Trace: java.util.List getPacket()>();

        $r3 = <perfetto.protos.TracePacket: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r4 = staticinvoke <com.squareup.wire.internal.Internal: java.util.List '-redactElements'(java.util.List,com.squareup.wire.ProtoAdapter)>($r2, $r3);

        $r5 = <okio.ByteString: okio.ByteString EMPTY>;

        $r6 = virtualinvoke r1.<perfetto.protos.Trace: perfetto.protos.Trace copy(java.util.List,okio.ByteString)>($r4, $r5);

        return $r6;
    }

    public volatile int encodedSize(java.lang.Object)
    {
        perfetto.protos.Trace$Companion$ADAPTER$1 r0;
        java.lang.Object r1;
        perfetto.protos.Trace $r2;
        int $i0;

        r0 := @this: perfetto.protos.Trace$Companion$ADAPTER$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (perfetto.protos.Trace) r1;

        $i0 = virtualinvoke r0.<perfetto.protos.Trace$Companion$ADAPTER$1: int encodedSize(perfetto.protos.Trace)>($r2);

        return $i0;
    }

    public volatile void encode(com.squareup.wire.ProtoWriter, java.lang.Object)
    {
        perfetto.protos.Trace$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoWriter r1;
        java.lang.Object r2;
        perfetto.protos.Trace $r3;

        r0 := @this: perfetto.protos.Trace$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoWriter;

        r2 := @parameter1: java.lang.Object;

        $r3 = (perfetto.protos.Trace) r2;

        virtualinvoke r0.<perfetto.protos.Trace$Companion$ADAPTER$1: void encode(com.squareup.wire.ProtoWriter,perfetto.protos.Trace)>(r1, $r3);

        return;
    }

    public volatile java.lang.Object decode(com.squareup.wire.ProtoReader)
    {
        perfetto.protos.Trace$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoReader r1;
        perfetto.protos.Trace $r2;

        r0 := @this: perfetto.protos.Trace$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoReader;

        $r2 = virtualinvoke r0.<perfetto.protos.Trace$Companion$ADAPTER$1: perfetto.protos.Trace decode(com.squareup.wire.ProtoReader)>(r1);

        return $r2;
    }

    public volatile java.lang.Object redact(java.lang.Object)
    {
        perfetto.protos.Trace$Companion$ADAPTER$1 r0;
        java.lang.Object r1;
        perfetto.protos.Trace $r2, $r3;

        r0 := @this: perfetto.protos.Trace$Companion$ADAPTER$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (perfetto.protos.Trace) r1;

        $r3 = virtualinvoke r0.<perfetto.protos.Trace$Companion$ADAPTER$1: perfetto.protos.Trace redact(perfetto.protos.Trace)>($r2);

        return $r3;
    }

perfetto.protos.Trace$Companion
    private void <init>()
    {
        perfetto.protos.Trace$Companion r0;

        r0 := @this: perfetto.protos.Trace$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.Trace$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: perfetto.protos.Trace$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<perfetto.protos.Trace$Companion: void <init>()>();

        return;
    }

