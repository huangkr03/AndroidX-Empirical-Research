androidx.wear.watchface.editor.BaseEditorSession
<androidx.wear.watchface.editor.BaseEditorSession: androidx.wear.watchface.editor.BaseEditorSession$Companion Companion>
<androidx.wear.watchface.editor.BaseEditorSession: androidx.activity.ComponentActivity activity>
<androidx.wear.watchface.editor.BaseEditorSession: androidx.wear.watchface.editor.ComplicationDataSourceInfoRetrieverProvider complicationDataSourceInfoRetrieverProvider>
<androidx.wear.watchface.editor.BaseEditorSession: kotlinx.coroutines.CoroutineScope coroutineScope>
<androidx.wear.watchface.editor.BaseEditorSession: androidx.wear.watchface.editor.PreviewScreenshotParams previewScreenshotParams>
<androidx.wear.watchface.editor.BaseEditorSession: boolean closed>
<androidx.wear.watchface.editor.BaseEditorSession: boolean forceClosed>
<androidx.wear.watchface.editor.BaseEditorSession: androidx.wear.utility.AsyncTraceEvent editorSessionTraceEvent>
<androidx.wear.watchface.editor.BaseEditorSession: androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1 closeCallback>
<androidx.wear.watchface.editor.BaseEditorSession: boolean commitChangesOnClose>
<androidx.wear.watchface.editor.BaseEditorSession: kotlinx.coroutines.CompletableDeferred deferredComplicationPreviewDataMapFlow>
<androidx.wear.watchface.editor.BaseEditorSession: kotlinx.coroutines.CompletableDeferred deferredComplicationsDataSourceInfoMapFlow>
<androidx.wear.watchface.editor.BaseEditorSession: kotlinx.coroutines.CompletableDeferred pendingComplicationDataSourceChooserResult>
<androidx.wear.watchface.editor.BaseEditorSession: androidx.activity.result.ActivityResultLauncher chooseComplicationDataSource>
<androidx.wear.watchface.editor.BaseEditorSession: kotlin.Lazy complicationSlotsStateDelegate>
<androidx.wear.watchface.editor.BaseEditorSession: kotlin.Lazy complicationSlotsState$delegate>
<androidx.wear.watchface.editor.BaseEditorSession: kotlin.Lazy backgroundComplicationSlotId$delegate>
<androidx.wear.watchface.editor.BaseEditorSession: long CLOSE_BROADCAST_TIMEOUT_MILLIS>
    public void <init>(androidx.activity.ComponentActivity, androidx.wear.watchface.editor.ComplicationDataSourceInfoRetrieverProvider, kotlinx.coroutines.CoroutineScope, androidx.wear.watchface.editor.PreviewScreenshotParams)
    {
        androidx.wear.watchface.editor.BaseEditorSession r0;
        androidx.activity.ComponentActivity r1, $r15;
        androidx.wear.watchface.editor.ComplicationDataSourceInfoRetrieverProvider r2;
        kotlinx.coroutines.CoroutineScope r3;
        androidx.wear.watchface.editor.PreviewScreenshotParams r4;
        androidx.activity.result.ActivityResultLauncher r5;
        androidx.wear.utility.AsyncTraceEvent $r6;
        androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1 $r7, $r10;
        androidx.wear.watchface.editor.EditorService$Companion $r8;
        androidx.wear.watchface.editor.EditorService $r9;
        androidx.wear.watchface.editor.EditorService$CloseCallback $r11;
        kotlinx.coroutines.CompletableDeferred $r12, $r13;
        androidx.wear.watchface.editor.ComplicationDataSourceChooserContract $r14;
        androidx.wear.watchface.editor.BaseEditorSession$chooseComplicationDataSource$1 $r16;
        androidx.activity.result.contract.ActivityResultContract $r17;
        androidx.activity.result.ActivityResultCallback $r18;
        androidx.wear.watchface.editor.BaseEditorSession$complicationSlotsStateDelegate$1 $r19;
        kotlin.jvm.functions.Function0 $r20, $r24;
        kotlin.Lazy $r21, $r22, $r25;
        androidx.wear.watchface.editor.BaseEditorSession$backgroundComplicationSlotId$2 $r23;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession;

        r1 := @parameter0: androidx.activity.ComponentActivity;

        r2 := @parameter1: androidx.wear.watchface.editor.ComplicationDataSourceInfoRetrieverProvider;

        r3 := @parameter2: kotlinx.coroutines.CoroutineScope;

        r4 := @parameter3: androidx.wear.watchface.editor.PreviewScreenshotParams;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "activity");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "complicationDataSourceInfoRetrieverProvider");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "coroutineScope");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.wear.watchface.editor.BaseEditorSession: androidx.activity.ComponentActivity activity> = r1;

        r0.<androidx.wear.watchface.editor.BaseEditorSession: androidx.wear.watchface.editor.ComplicationDataSourceInfoRetrieverProvider complicationDataSourceInfoRetrieverProvider> = r2;

        r0.<androidx.wear.watchface.editor.BaseEditorSession: kotlinx.coroutines.CoroutineScope coroutineScope> = r3;

        r0.<androidx.wear.watchface.editor.BaseEditorSession: androidx.wear.watchface.editor.PreviewScreenshotParams previewScreenshotParams> = r4;

        $r6 = new androidx.wear.utility.AsyncTraceEvent;

        specialinvoke $r6.<androidx.wear.utility.AsyncTraceEvent: void <init>(java.lang.String)>("EditorSession");

        r0.<androidx.wear.watchface.editor.BaseEditorSession: androidx.wear.utility.AsyncTraceEvent editorSessionTraceEvent> = $r6;

        $r7 = new androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1;

        specialinvoke $r7.<androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1: void <init>(androidx.wear.watchface.editor.BaseEditorSession)>(r0);

        r0.<androidx.wear.watchface.editor.BaseEditorSession: androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1 closeCallback> = $r7;

        $r8 = <androidx.wear.watchface.editor.EditorService: androidx.wear.watchface.editor.EditorService$Companion Companion>;

        $r9 = virtualinvoke $r8.<androidx.wear.watchface.editor.EditorService$Companion: androidx.wear.watchface.editor.EditorService getGlobalEditorService()>();

        $r10 = r0.<androidx.wear.watchface.editor.BaseEditorSession: androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1 closeCallback>;

        $r11 = (androidx.wear.watchface.editor.EditorService$CloseCallback) $r10;

        virtualinvoke $r9.<androidx.wear.watchface.editor.EditorService: void addCloseCallback(androidx.wear.watchface.editor.EditorService$CloseCallback)>($r11);

        r0.<androidx.wear.watchface.editor.BaseEditorSession: boolean commitChangesOnClose> = 1;

        $r12 = staticinvoke <kotlinx.coroutines.CompletableDeferredKt: kotlinx.coroutines.CompletableDeferred CompletableDeferred$default(kotlinx.coroutines.Job,int,java.lang.Object)>(null, 1, null);

        r0.<androidx.wear.watchface.editor.BaseEditorSession: kotlinx.coroutines.CompletableDeferred deferredComplicationPreviewDataMapFlow> = $r12;

        $r13 = staticinvoke <kotlinx.coroutines.CompletableDeferredKt: kotlinx.coroutines.CompletableDeferred CompletableDeferred$default(kotlinx.coroutines.Job,int,java.lang.Object)>(null, 1, null);

        r0.<androidx.wear.watchface.editor.BaseEditorSession: kotlinx.coroutines.CompletableDeferred deferredComplicationsDataSourceInfoMapFlow> = $r13;

        $r15 = r0.<androidx.wear.watchface.editor.BaseEditorSession: androidx.activity.ComponentActivity activity>;

        $r14 = new androidx.wear.watchface.editor.ComplicationDataSourceChooserContract;

        specialinvoke $r14.<androidx.wear.watchface.editor.ComplicationDataSourceChooserContract: void <init>()>();

        $r17 = (androidx.activity.result.contract.ActivityResultContract) $r14;

        $r16 = new androidx.wear.watchface.editor.BaseEditorSession$chooseComplicationDataSource$1;

        specialinvoke $r16.<androidx.wear.watchface.editor.BaseEditorSession$chooseComplicationDataSource$1: void <init>(androidx.wear.watchface.editor.BaseEditorSession)>(r0);

        $r18 = (androidx.activity.result.ActivityResultCallback) $r16;

        r5 = virtualinvoke $r15.<androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)>($r17, $r18);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r5, "activity.registerForActi\u2026ooserResult(it)\n        }");

        r0.<androidx.wear.watchface.editor.BaseEditorSession: androidx.activity.result.ActivityResultLauncher chooseComplicationDataSource> = r5;

        $r19 = new androidx.wear.watchface.editor.BaseEditorSession$complicationSlotsStateDelegate$1;

        specialinvoke $r19.<androidx.wear.watchface.editor.BaseEditorSession$complicationSlotsStateDelegate$1: void <init>(androidx.wear.watchface.editor.BaseEditorSession)>(r0);

        $r20 = (kotlin.jvm.functions.Function0) $r19;

        $r21 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r20);

        r0.<androidx.wear.watchface.editor.BaseEditorSession: kotlin.Lazy complicationSlotsStateDelegate> = $r21;

        $r22 = r0.<androidx.wear.watchface.editor.BaseEditorSession: kotlin.Lazy complicationSlotsStateDelegate>;

        r0.<androidx.wear.watchface.editor.BaseEditorSession: kotlin.Lazy complicationSlotsState$delegate> = $r22;

        $r23 = new androidx.wear.watchface.editor.BaseEditorSession$backgroundComplicationSlotId$2;

        specialinvoke $r23.<androidx.wear.watchface.editor.BaseEditorSession$backgroundComplicationSlotId$2: void <init>(androidx.wear.watchface.editor.BaseEditorSession)>(r0);

        $r24 = (kotlin.jvm.functions.Function0) $r23;

        $r25 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r24);

        r0.<androidx.wear.watchface.editor.BaseEditorSession: kotlin.Lazy backgroundComplicationSlotId$delegate> = $r25;

        return;
    }

    public final kotlinx.coroutines.CoroutineScope getCoroutineScope()
    {
        androidx.wear.watchface.editor.BaseEditorSession r0;
        kotlinx.coroutines.CoroutineScope $r1;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession;

        $r1 = r0.<androidx.wear.watchface.editor.BaseEditorSession: kotlinx.coroutines.CoroutineScope coroutineScope>;

        return $r1;
    }

    protected final boolean getClosed()
    {
        androidx.wear.watchface.editor.BaseEditorSession r0;
        boolean $z0;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession;

        $z0 = r0.<androidx.wear.watchface.editor.BaseEditorSession: boolean closed>;

        return $z0;
    }

    protected final void setClosed(boolean)
    {
        androidx.wear.watchface.editor.BaseEditorSession r0;
        boolean z0;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession;

        z0 := @parameter0: boolean;

        r0.<androidx.wear.watchface.editor.BaseEditorSession: boolean closed> = z0;

        return;
    }

    protected final boolean getForceClosed()
    {
        androidx.wear.watchface.editor.BaseEditorSession r0;
        boolean $z0;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession;

        $z0 = r0.<androidx.wear.watchface.editor.BaseEditorSession: boolean forceClosed>;

        return $z0;
    }

    protected final void setForceClosed(boolean)
    {
        androidx.wear.watchface.editor.BaseEditorSession r0;
        boolean z0;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession;

        z0 := @parameter0: boolean;

        r0.<androidx.wear.watchface.editor.BaseEditorSession: boolean forceClosed> = z0;

        return;
    }

    public boolean getCommitChangesOnClose()
    {
        androidx.wear.watchface.editor.BaseEditorSession r0;
        boolean $z0;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession;

        $z0 = r0.<androidx.wear.watchface.editor.BaseEditorSession: boolean commitChangesOnClose>;

        return $z0;
    }

    public void setCommitChangesOnClose(boolean)
    {
        androidx.wear.watchface.editor.BaseEditorSession r0;
        boolean z0;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession;

        z0 := @parameter0: boolean;

        r0.<androidx.wear.watchface.editor.BaseEditorSession: boolean commitChangesOnClose> = z0;

        return;
    }

    public final kotlinx.coroutines.CompletableDeferred getDeferredComplicationPreviewDataMapFlow$wear_watchface_editor_release()
    {
        androidx.wear.watchface.editor.BaseEditorSession r0;
        kotlinx.coroutines.CompletableDeferred $r1;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession;

        $r1 = r0.<androidx.wear.watchface.editor.BaseEditorSession: kotlinx.coroutines.CompletableDeferred deferredComplicationPreviewDataMapFlow>;

        return $r1;
    }

    public java.lang.Object getComplicationsPreviewData(kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.editor.BaseEditorSession r0;
        kotlin.coroutines.Continuation $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

        $r2 = staticinvoke <androidx.wear.watchface.editor.BaseEditorSession: java.lang.Object getComplicationsPreviewData$suspendImpl(androidx.wear.watchface.editor.BaseEditorSession,kotlin.coroutines.Continuation)>(r0, $r1);

        return $r2;
    }

    static java.lang.Object getComplicationsPreviewData$suspendImpl(androidx.wear.watchface.editor.BaseEditorSession, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.editor.BaseEditorSession r0;
        kotlin.coroutines.Continuation $r1;
        kotlinx.coroutines.CompletableDeferred $r2;
        java.lang.Object $r3;

        r0 := @parameter0: androidx.wear.watchface.editor.BaseEditorSession;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $r2 = virtualinvoke r0.<androidx.wear.watchface.editor.BaseEditorSession: kotlinx.coroutines.CompletableDeferred getDeferredComplicationPreviewDataMapFlow$wear_watchface_editor_release()>();

        $r3 = interfaceinvoke $r2.<kotlinx.coroutines.CompletableDeferred: java.lang.Object await(kotlin.coroutines.Continuation)>($r1);

        return $r3;
    }

    public java.lang.Object getComplicationsDataSourceInfo(kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.editor.BaseEditorSession r0;
        kotlin.coroutines.Continuation $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

        $r2 = staticinvoke <androidx.wear.watchface.editor.BaseEditorSession: java.lang.Object getComplicationsDataSourceInfo$suspendImpl(androidx.wear.watchface.editor.BaseEditorSession,kotlin.coroutines.Continuation)>(r0, $r1);

        return $r2;
    }

    static java.lang.Object getComplicationsDataSourceInfo$suspendImpl(androidx.wear.watchface.editor.BaseEditorSession, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.editor.BaseEditorSession r0;
        kotlin.coroutines.Continuation $r1;
        kotlinx.coroutines.CompletableDeferred $r2;
        java.lang.Object $r3;

        r0 := @parameter0: androidx.wear.watchface.editor.BaseEditorSession;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $r2 = r0.<androidx.wear.watchface.editor.BaseEditorSession: kotlinx.coroutines.CompletableDeferred deferredComplicationsDataSourceInfoMapFlow>;

        $r3 = interfaceinvoke $r2.<kotlinx.coroutines.CompletableDeferred: java.lang.Object await(kotlin.coroutines.Continuation)>($r1);

        return $r3;
    }

    public final kotlinx.coroutines.CompletableDeferred getPendingComplicationDataSourceChooserResult$wear_watchface_editor_release()
    {
        androidx.wear.watchface.editor.BaseEditorSession r0;
        kotlinx.coroutines.CompletableDeferred $r1;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession;

        $r1 = r0.<androidx.wear.watchface.editor.BaseEditorSession: kotlinx.coroutines.CompletableDeferred pendingComplicationDataSourceChooserResult>;

        return $r1;
    }

    public final void setPendingComplicationDataSourceChooserResult$wear_watchface_editor_release(kotlinx.coroutines.CompletableDeferred)
    {
        androidx.wear.watchface.editor.BaseEditorSession r0;
        kotlinx.coroutines.CompletableDeferred r1;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession;

        r1 := @parameter0: kotlinx.coroutines.CompletableDeferred;

        r0.<androidx.wear.watchface.editor.BaseEditorSession: kotlinx.coroutines.CompletableDeferred pendingComplicationDataSourceChooserResult> = r1;

        return;
    }

<androidx.wear.watchface.editor.BaseEditorSession: java.util.Map fetchComplicationSlotsState$wear_watchface_editor_release()>
    public kotlinx.coroutines.flow.MutableStateFlow getComplicationSlotsState()
    {
        androidx.wear.watchface.editor.BaseEditorSession r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        kotlinx.coroutines.flow.MutableStateFlow $r3;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession;

        r1 = r0.<androidx.wear.watchface.editor.BaseEditorSession: kotlin.Lazy complicationSlotsState$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (kotlinx.coroutines.flow.MutableStateFlow) $r2;

        return $r3;
    }

    public final void maybeUpdateComplicationSlotsState$wear_watchface_editor_release()
    {
        androidx.wear.watchface.editor.BaseEditorSession r0;
        kotlin.Lazy $r1;
        boolean $z0;
        kotlinx.coroutines.flow.MutableStateFlow $r2;
        java.util.Map $r3;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession;

        $r1 = r0.<androidx.wear.watchface.editor.BaseEditorSession: kotlin.Lazy complicationSlotsStateDelegate>;

        $z0 = interfaceinvoke $r1.<kotlin.Lazy: boolean isInitialized()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<androidx.wear.watchface.editor.BaseEditorSession: kotlinx.coroutines.flow.MutableStateFlow getComplicationSlotsState()>();

        $r3 = virtualinvoke r0.<androidx.wear.watchface.editor.BaseEditorSession: java.util.Map fetchComplicationSlotsState$wear_watchface_editor_release()>();

        interfaceinvoke $r2.<kotlinx.coroutines.flow.MutableStateFlow: void setValue(java.lang.Object)>($r3);

     label1:
        return;
    }

    public final void onComplicationDataSourceChooserResult$wear_watchface_editor_release(androidx.wear.watchface.editor.ComplicationDataSourceChooserResult)
    {
        androidx.wear.watchface.editor.BaseEditorSession r0;
        androidx.wear.watchface.editor.ComplicationDataSourceChooserResult r1;
        boolean z0, z3;
        kotlinx.coroutines.CompletableDeferred r2, r4;
        java.lang.Throwable $r3, r5;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession;

        r1 := @parameter0: androidx.wear.watchface.editor.ComplicationDataSourceChooserResult;

        z0 = 0;

        z3 = 0;

        entermonitor r0;

     label1:
        r2 = virtualinvoke r0.<androidx.wear.watchface.editor.BaseEditorSession: kotlinx.coroutines.CompletableDeferred getPendingComplicationDataSourceChooserResult$wear_watchface_editor_release()>();

        virtualinvoke r0.<androidx.wear.watchface.editor.BaseEditorSession: void setPendingComplicationDataSourceChooserResult$wear_watchface_editor_release(kotlinx.coroutines.CompletableDeferred)>(null);

        r4 = r2;

     label2:
        exitmonitor r0;

        goto label5;

     label3:
        $r3 := @caughtexception;

        r5 = $r3;

     label4:
        exitmonitor r0;

        throw r5;

     label5:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r4);

        interfaceinvoke r4.<kotlinx.coroutines.CompletableDeferred: boolean complete(java.lang.Object)>(r1);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.Object openComplicationDataSourceChooser(int, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.editor.BaseEditorSession r0;
        int i0;
        kotlin.coroutines.Continuation $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession;

        i0 := @parameter0: int;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $r2 = staticinvoke <androidx.wear.watchface.editor.BaseEditorSession: java.lang.Object openComplicationDataSourceChooser$suspendImpl(androidx.wear.watchface.editor.BaseEditorSession,int,kotlin.coroutines.Continuation)>(r0, i0, $r1);

        return $r2;
    }

    static java.lang.Object openComplicationDataSourceChooser$suspendImpl(androidx.wear.watchface.editor.BaseEditorSession, int, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation r0, r119, r120, r121, r122;
        androidx.wear.watchface.editor.ChosenComplicationDataSource r1, r117;
        java.lang.Object $r2, r3, $r5, $r6, $r7, $r8, $r9, $r10, $r12, $r18, $r19, $r20, $r21, $r22, $r24, $r25, $r26, $r27, $r28, $r30, $r33, $r34, $r35, $r43, $r46, $r76, $r85, $r92, $r94;
        boolean $z0, $z1, $z2, z3;
        java.util.Map $r13, $r31, $r38, $r44, r98;
        androidx.wear.complications.ComplicationDataSourceInfo $r15, $r32, r90;
        android.os.Bundle $r16;
        kotlinx.coroutines.CompletableDeferred $r23, $r37, $r48, r73;
        androidx.wear.watchface.editor.ComplicationDataSourceInfoRetrieverProvider $r36;
        java.lang.Integer $r40, $r45, $r55, $r89, r99;
        java.lang.String $r41, $r53, $r57, r72;
        kotlinx.coroutines.flow.MutableStateFlow $r42, r86, r88, r95, r97;
        androidx.wear.watchface.client.ComplicationSlotState $r47;
        androidx.activity.result.ActivityResultLauncher $r50;
        androidx.wear.watchface.editor.EditorSession $r51;
        androidx.wear.watchface.client.WatchFaceId $r52;
        java.lang.Throwable $r58, $r60, $r61, $r62, $r63, $r64, $r65, $r66, r70, r75, r79, r80, r82, r105, r106, r107, r108;
        int $i0, $i1, $i2, $i3, i4, $i5;
        androidx.wear.watchface.editor.BaseEditorSession r67;
        androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1 $r68, r109;
        java.io.Closeable r69;
        androidx.wear.utility.TraceEvent r71, r110;
        kotlin.Unit r74, r78, r81, r91, r103;
        androidx.wear.watchface.editor.ComplicationDataSourceChooserResult r77, r83;
        androidx.wear.complications.ComplicationDataSourceInfoRetriever r84;
        java.util.HashMap r87, r114, r115;
        androidx.wear.complications.data.ComplicationData r93, r100, $r101, r102;
        java.lang.IllegalArgumentException r111;
        java.lang.IllegalStateException r112, r118;
        androidx.wear.watchface.editor.ComplicationDataSourceChooserRequest r113;
        androidx.wear.complications.data.EmptyComplicationData r116;

        r67 := @parameter0: androidx.wear.watchface.editor.BaseEditorSession;

        i4 := @parameter1: int;

        r0 := @parameter2: kotlin.coroutines.Continuation;

        $z0 = r0 instanceof androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1;

        if $z0 == 0 goto label01;

        $r68 = (androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1) r0;

        $i0 = $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: int label>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label01;

        $i2 = $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: int label>;

        $i3 = $i2 - -2147483648;

        $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: int label> = $i3;

        goto label02;

     label01:
        r109 = new androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1;

        specialinvoke r109.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: void <init>(androidx.wear.watchface.editor.BaseEditorSession,kotlin.coroutines.Continuation)>(r67, r0);

        $r68 = r109;

     label02:
        $r2 = $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object result>;

        r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i5 = $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: int label>;

        tableswitch($i5)
        {
            case 0: goto label03;
            case 1: goto label15;
            case 2: goto label36;
            case 3: goto label40;
            case 4: goto label44;
            default: goto label56;
        };

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        r110 = new androidx.wear.utility.TraceEvent;

        $r40 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Integer boxInt(int)>(i4);

        $r41 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("BaseEditorSession.openComplicationDataSourceChooser ", $r40);

        specialinvoke r110.<androidx.wear.utility.TraceEvent: void <init>(java.lang.String)>($r41);

        r69 = (java.io.Closeable) r110;

        r70 = null;

     label04:
        r71 = (androidx.wear.utility.TraceEvent) r69;

        virtualinvoke r67.<androidx.wear.watchface.editor.BaseEditorSession: void requireNotClosed()>();

        $r42 = virtualinvoke r67.<androidx.wear.watchface.editor.BaseEditorSession: kotlinx.coroutines.flow.MutableStateFlow getComplicationSlotsState()>();

        $r43 = interfaceinvoke $r42.<kotlinx.coroutines.flow.MutableStateFlow: java.lang.Object getValue()>();

        $r44 = (java.util.Map) $r43;

        $r45 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Integer boxInt(int)>(i4);

        $r46 = interfaceinvoke $r44.<java.util.Map: java.lang.Object get(java.lang.Object)>($r45);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r46);

        $r47 = (androidx.wear.watchface.client.ComplicationSlotState) $r46;

        $z1 = virtualinvoke $r47.<androidx.wear.watchface.client.ComplicationSlotState: boolean isFixedComplicationDataSource()>();

        if $z1 != 0 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        z3 = $z2;

        if z3 != 0 goto label07;

        $r55 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Integer boxInt(int)>(i4);

        r72 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Can\'t configure fixed complication ID ", $r55);

        r111 = new java.lang.IllegalArgumentException;

        $r57 = virtualinvoke r72.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r111.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r57);

        $r58 = (java.lang.Throwable) r111;

        throw $r58;

     label07:
        r73 = staticinvoke <kotlinx.coroutines.CompletableDeferredKt: kotlinx.coroutines.CompletableDeferred CompletableDeferred$default(kotlinx.coroutines.Job,int,java.lang.Object)>(null, 1, null);

        entermonitor r67;

     label08:
        $r48 = virtualinvoke r67.<androidx.wear.watchface.editor.BaseEditorSession: kotlinx.coroutines.CompletableDeferred getPendingComplicationDataSourceChooserResult$wear_watchface_editor_release()>();

        if $r48 == null goto label09;

        r112 = new java.lang.IllegalStateException;

        specialinvoke r112.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Concurrent openComplicationDataSourceChooser invocation is not supported");

        throw r112;

     label09:
        virtualinvoke r67.<androidx.wear.watchface.editor.BaseEditorSession: void setPendingComplicationDataSourceChooserResult$wear_watchface_editor_release(kotlinx.coroutines.CompletableDeferred)>(r73);

        $r50 = r67.<androidx.wear.watchface.editor.BaseEditorSession: androidx.activity.result.ActivityResultLauncher chooseComplicationDataSource>;

        r113 = new androidx.wear.watchface.editor.ComplicationDataSourceChooserRequest;

        $r51 = (androidx.wear.watchface.editor.EditorSession) r67;

        $r52 = virtualinvoke r67.<androidx.wear.watchface.editor.BaseEditorSession: androidx.wear.watchface.client.WatchFaceId getWatchFaceId()>();

        $r53 = virtualinvoke $r52.<androidx.wear.watchface.client.WatchFaceId: java.lang.String getId()>();

        specialinvoke r113.<androidx.wear.watchface.editor.ComplicationDataSourceChooserRequest: void <init>(androidx.wear.watchface.editor.EditorSession,int,java.lang.String)>($r51, i4, $r53);

        virtualinvoke $r50.<androidx.activity.result.ActivityResultLauncher: void launch(java.lang.Object)>(r113);

        r74 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label10:
        exitmonitor r67;

        goto label13;

     label11:
        $r66 := @caughtexception;

        r75 = $r66;

     label12:
        exitmonitor r67;

        throw r75;

     label13:
        $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$0> = r67;

        $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$1> = r69;

        $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$2> = r70;

        $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: int I$0> = i4;

        $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: int label> = 1;

        r119 = (kotlin.coroutines.Continuation) $r68;

        $r76 = interfaceinvoke r73.<kotlinx.coroutines.CompletableDeferred: java.lang.Object await(kotlin.coroutines.Continuation)>(r119);

     label14:
        if $r76 != r3 goto label17;

        return r3;

     label15:
        i4 = $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: int I$0>;

        $r33 = $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$2>;

        r70 = (java.lang.Throwable) $r33;

        $r34 = $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$1>;

        r69 = (java.io.Closeable) $r34;

        $r35 = $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$0>;

        r67 = (androidx.wear.watchface.editor.BaseEditorSession) $r35;

     label16:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        $r76 = $r2;

     label17:
        r77 = (androidx.wear.watchface.editor.ComplicationDataSourceChooserResult) $r76;

     label18:
        entermonitor r67;

     label19:
        virtualinvoke r67.<androidx.wear.watchface.editor.BaseEditorSession: void setPendingComplicationDataSourceChooserResult$wear_watchface_editor_release(kotlinx.coroutines.CompletableDeferred)>(null);

        r78 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label20:
        exitmonitor r67;

        goto label23;

     label21:
        $r63 := @caughtexception;

        r79 = $r63;

     label22:
        exitmonitor r67;

        throw r79;

     label23:
        goto label31;

     label24:
        $r60 := @caughtexception;

        r80 = $r60;

     label25:
        entermonitor r67;

     label26:
        virtualinvoke r67.<androidx.wear.watchface.editor.BaseEditorSession: void setPendingComplicationDataSourceChooserResult$wear_watchface_editor_release(kotlinx.coroutines.CompletableDeferred)>(null);

        r81 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label27:
        exitmonitor r67;

        goto label30;

     label28:
        $r64 := @caughtexception;

        r82 = $r64;

     label29:
        exitmonitor r67;

        throw r82;

     label30:
        throw r80;

     label31:
        r83 = r77;

        if r83 != null goto label33;

     label32:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r69, r70);

        return null;

     label33:
        $r36 = r67.<androidx.wear.watchface.editor.BaseEditorSession: androidx.wear.watchface.editor.ComplicationDataSourceInfoRetrieverProvider complicationDataSourceInfoRetrieverProvider>;

        r84 = interfaceinvoke $r36.<androidx.wear.watchface.editor.ComplicationDataSourceInfoRetrieverProvider: androidx.wear.complications.ComplicationDataSourceInfoRetriever getComplicationDataSourceInfoRetriever()>();

     label34:
        $r37 = r67.<androidx.wear.watchface.editor.BaseEditorSession: kotlinx.coroutines.CompletableDeferred deferredComplicationsDataSourceInfoMapFlow>;

        $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$0> = r67;

        $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$1> = r69;

        $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$2> = r70;

        $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$3> = r83;

        $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$4> = r84;

        $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: int I$0> = i4;

        $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: int label> = 2;

        r120 = (kotlin.coroutines.Continuation) $r68;

        $r85 = interfaceinvoke $r37.<kotlinx.coroutines.CompletableDeferred: java.lang.Object await(kotlin.coroutines.Continuation)>(r120);

     label35:
        if $r85 != r3 goto label38;

        return r3;

     label36:
        i4 = $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: int I$0>;

        $r24 = $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$4>;

        r84 = (androidx.wear.complications.ComplicationDataSourceInfoRetriever) $r24;

        $r25 = $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$3>;

        r83 = (androidx.wear.watchface.editor.ComplicationDataSourceChooserResult) $r25;

        $r26 = $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$2>;

        r70 = (java.lang.Throwable) $r26;

        $r27 = $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$1>;

        r69 = (java.io.Closeable) $r27;

        $r28 = $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$0>;

        r67 = (androidx.wear.watchface.editor.BaseEditorSession) $r28;

     label37:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        $r85 = $r2;

     label38:
        r86 = (kotlinx.coroutines.flow.MutableStateFlow) $r85;

        r114 = new java.util.HashMap;

        $r30 = interfaceinvoke r86.<kotlinx.coroutines.flow.MutableStateFlow: java.lang.Object getValue()>();

        $r31 = (java.util.Map) $r30;

        specialinvoke r114.<java.util.HashMap: void <init>(java.util.Map)>($r31);

        r87 = r114;

        r88 = r86;

        $r89 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Integer boxInt(int)>(i4);

        r90 = virtualinvoke r83.<androidx.wear.watchface.editor.ComplicationDataSourceChooserResult: androidx.wear.complications.ComplicationDataSourceInfo getDataSourceInfo$wear_watchface_editor_release()>();

        $r38 = (java.util.Map) r87;

        interfaceinvoke $r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r89, r90);

        r91 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        interfaceinvoke r88.<kotlinx.coroutines.flow.MutableStateFlow: void setValue(java.lang.Object)>(r87);

        $r32 = virtualinvoke r83.<androidx.wear.watchface.editor.ComplicationDataSourceChooserResult: androidx.wear.complications.ComplicationDataSourceInfo getDataSourceInfo$wear_watchface_editor_release()>();

        $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$0> = r67;

        $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$1> = r69;

        $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$2> = r70;

        $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$3> = r83;

        $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$4> = r84;

        $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: int I$0> = i4;

        $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: int label> = 3;

        r121 = (kotlin.coroutines.Continuation) $r68;

        $r92 = virtualinvoke r67.<androidx.wear.watchface.editor.BaseEditorSession: java.lang.Object getPreviewData$wear_watchface_editor_release(androidx.wear.complications.ComplicationDataSourceInfoRetriever,androidx.wear.complications.ComplicationDataSourceInfo,kotlin.coroutines.Continuation)>(r84, $r32, r121);

     label39:
        if $r92 != r3 goto label42;

        return r3;

     label40:
        i4 = $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: int I$0>;

        $r18 = $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$4>;

        r84 = (androidx.wear.complications.ComplicationDataSourceInfoRetriever) $r18;

        $r19 = $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$3>;

        r83 = (androidx.wear.watchface.editor.ComplicationDataSourceChooserResult) $r19;

        $r20 = $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$2>;

        r70 = (java.lang.Throwable) $r20;

        $r21 = $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$1>;

        r69 = (java.io.Closeable) $r21;

        $r22 = $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$0>;

        r67 = (androidx.wear.watchface.editor.BaseEditorSession) $r22;

     label41:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        $r92 = $r2;

     label42:
        r93 = (androidx.wear.complications.data.ComplicationData) $r92;

        $r23 = virtualinvoke r67.<androidx.wear.watchface.editor.BaseEditorSession: kotlinx.coroutines.CompletableDeferred getDeferredComplicationPreviewDataMapFlow$wear_watchface_editor_release()>();

        $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$0> = r67;

        $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$1> = r69;

        $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$2> = r70;

        $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$3> = r83;

        $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$4> = r84;

        $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$5> = r93;

        $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: int I$0> = i4;

        $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: int label> = 4;

        r122 = (kotlin.coroutines.Continuation) $r68;

        $r94 = interfaceinvoke $r23.<kotlinx.coroutines.CompletableDeferred: java.lang.Object await(kotlin.coroutines.Continuation)>(r122);

     label43:
        if $r94 != r3 goto label46;

        return r3;

     label44:
        i4 = $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: int I$0>;

        $r5 = $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$5>;

        r93 = (androidx.wear.complications.data.ComplicationData) $r5;

        $r6 = $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$4>;

        r84 = (androidx.wear.complications.ComplicationDataSourceInfoRetriever) $r6;

        $r7 = $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$3>;

        r83 = (androidx.wear.watchface.editor.ComplicationDataSourceChooserResult) $r7;

        $r8 = $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$2>;

        r70 = (java.lang.Throwable) $r8;

        $r9 = $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$1>;

        r69 = (java.io.Closeable) $r9;

        $r10 = $r68.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$0>;

        r67 = (androidx.wear.watchface.editor.BaseEditorSession) $r10;

     label45:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        $r94 = $r2;

     label46:
        r95 = (kotlinx.coroutines.flow.MutableStateFlow) $r94;

        r115 = new java.util.HashMap;

        $r12 = interfaceinvoke r95.<kotlinx.coroutines.flow.MutableStateFlow: java.lang.Object getValue()>();

        $r13 = (java.util.Map) $r12;

        specialinvoke r115.<java.util.HashMap: void <init>(java.util.Map)>($r13);

        r97 = r95;

        r98 = (java.util.Map) r115;

        r99 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Integer boxInt(int)>(i4);

        r100 = r93;

        if r100 != null goto label47;

        r116 = new androidx.wear.complications.data.EmptyComplicationData;

        specialinvoke r116.<androidx.wear.complications.data.EmptyComplicationData: void <init>()>();

        $r101 = (androidx.wear.complications.data.ComplicationData) r116;

        goto label48;

     label47:
        $r101 = r100;

     label48:
        r102 = $r101;

        interfaceinvoke r98.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r99, r102);

        r103 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        interfaceinvoke r97.<kotlinx.coroutines.flow.MutableStateFlow: void setValue(java.lang.Object)>(r115);

        r117 = new androidx.wear.watchface.editor.ChosenComplicationDataSource;

        $r15 = virtualinvoke r83.<androidx.wear.watchface.editor.ComplicationDataSourceChooserResult: androidx.wear.complications.ComplicationDataSourceInfo getDataSourceInfo$wear_watchface_editor_release()>();

        $r16 = virtualinvoke r83.<androidx.wear.watchface.editor.ComplicationDataSourceChooserResult: android.os.Bundle getExtras$wear_watchface_editor_release()>();

        specialinvoke r117.<androidx.wear.watchface.editor.ChosenComplicationDataSource: void <init>(int,androidx.wear.complications.ComplicationDataSourceInfo,android.os.Bundle)>(i4, $r15, $r16);

     label49:
        virtualinvoke r84.<androidx.wear.complications.ComplicationDataSourceInfoRetriever: void close()>();

        virtualinvoke r67.<androidx.wear.watchface.editor.BaseEditorSession: void maybeUpdateComplicationSlotsState$wear_watchface_editor_release()>();

        r1 = r117;

     label50:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r69, r70);

        return r1;

     label51:
        $r61 := @caughtexception;

        r105 = $r61;

     label52:
        virtualinvoke r84.<androidx.wear.complications.ComplicationDataSourceInfoRetriever: void close()>();

        virtualinvoke r67.<androidx.wear.watchface.editor.BaseEditorSession: void maybeUpdateComplicationSlotsState$wear_watchface_editor_release()>();

        throw r105;

     label53:
        $r65 := @caughtexception;

        r106 = $r65;

        r107 = r106;

        throw r106;

     label54:
        $r62 := @caughtexception;

        r108 = $r62;

     label55:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r69, r107);

        throw r108;

     label56:
        r118 = new java.lang.IllegalStateException;

        specialinvoke r118.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r118;

        catch java.lang.Throwable from label08 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label21 to label22 with label21;
        catch java.lang.Throwable from label13 to label14 with label24;
        catch java.lang.Throwable from label16 to label18 with label24;
        catch java.lang.Throwable from label24 to label25 with label24;
        catch java.lang.Throwable from label26 to label27 with label28;
        catch java.lang.Throwable from label28 to label29 with label28;
        catch java.lang.Throwable from label34 to label35 with label51;
        catch java.lang.Throwable from label37 to label39 with label51;
        catch java.lang.Throwable from label41 to label43 with label51;
        catch java.lang.Throwable from label45 to label49 with label51;
        catch java.lang.Throwable from label51 to label52 with label51;
        catch java.lang.Throwable from label04 to label14 with label53;
        catch java.lang.Throwable from label16 to label32 with label53;
        catch java.lang.Throwable from label33 to label35 with label53;
        catch java.lang.Throwable from label45 to label50 with label53;
        catch java.lang.Throwable from label51 to label53 with label53;
        catch java.lang.Throwable from label53 to label54 with label54;
        catch java.lang.Throwable from label54 to label55 with label54;
    }

    public java.lang.Integer getBackgroundComplicationSlotId()
    {
        androidx.wear.watchface.editor.BaseEditorSession r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.lang.Integer $r3;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession;

        r1 = r0.<androidx.wear.watchface.editor.BaseEditorSession: kotlin.Lazy backgroundComplicationSlotId$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.lang.Integer) $r2;

        return $r3;
    }

    public java.lang.Integer getComplicationSlotIdAt(int, int)
    {
        androidx.wear.watchface.editor.BaseEditorSession r0;
        int i0, i1, i2;
        java.util.Map$Entry r1, r5;
        java.lang.Iterable $r2;
        java.util.Iterator r3;
        java.lang.Object r4, $r7, $r10, $r11, $r13, $r15, $r18;
        kotlinx.coroutines.flow.MutableStateFlow $r6;
        java.util.Map $r8;
        java.util.Set $r9;
        boolean $z2, $z3, $z4, $z5;
        androidx.wear.watchface.client.ComplicationSlotState $r12, $r14, $r16;
        android.graphics.Rect $r17;
        java.lang.Integer $r19;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<androidx.wear.watchface.editor.BaseEditorSession: void requireNotClosed()>();

        $r6 = virtualinvoke r0.<androidx.wear.watchface.editor.BaseEditorSession: kotlinx.coroutines.flow.MutableStateFlow getComplicationSlotsState()>();

        $r7 = interfaceinvoke $r6.<kotlinx.coroutines.flow.MutableStateFlow: java.lang.Object getValue()>();

        $r8 = (java.util.Map) $r7;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Set entrySet()>();

        $r2 = (java.lang.Iterable) $r9;

        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label09;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) r4;

        $r11 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (androidx.wear.watchface.client.ComplicationSlotState) $r11;

        $z3 = virtualinvoke $r12.<androidx.wear.watchface.client.ComplicationSlotState: boolean isEnabled()>();

        if $z3 == 0 goto label07;

        $r13 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r14 = (androidx.wear.watchface.client.ComplicationSlotState) $r13;

        i2 = virtualinvoke $r14.<androidx.wear.watchface.client.ComplicationSlotState: int getBoundsType()>();

        tableswitch(i2)
        {
            case 0: goto label02;
            case 1: goto label03;
            case 2: goto label04;
            default: goto label05;
        };

     label02:
        $r15 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r16 = (androidx.wear.watchface.client.ComplicationSlotState) $r15;

        $r17 = virtualinvoke $r16.<androidx.wear.watchface.client.ComplicationSlotState: android.graphics.Rect getBounds()>();

        $z4 = virtualinvoke $r17.<android.graphics.Rect: boolean contains(int,int)>(i0, i1);

        goto label06;

     label03:
        $z4 = 0;

        goto label06;

     label04:
        $z4 = 0;

        goto label06;

     label05:
        $z4 = 0;

     label06:
        if $z4 == 0 goto label07;

        $z5 = 1;

        goto label08;

     label07:
        $z5 = 0;

     label08:
        if $z5 == 0 goto label01;

        $r18 = r4;

        goto label10;

     label09:
        $r18 = null;

     label10:
        r1 = (java.util.Map$Entry) $r18;

        if r1 != null goto label11;

        $r19 = null;

        goto label12;

     label11:
        $r10 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r19 = (java.lang.Integer) $r10;

     label12:
        return $r19;
    }

    public final java.lang.Object getPreviewData$wear_watchface_editor_release(androidx.wear.complications.ComplicationDataSourceInfoRetriever, androidx.wear.complications.ComplicationDataSourceInfo, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.editor.BaseEditorSession r0;
        androidx.wear.complications.ComplicationDataSourceInfoRetriever r1;
        kotlin.coroutines.Continuation r2, r36;
        androidx.wear.complications.data.ComplicationData r3, r4, r5, r6, r29;
        java.lang.Object $r7, r8, $r10, $r11, $r12, $r28;
        boolean $z0;
        androidx.wear.complications.data.ComplicationType $r13, $r14, $r18;
        android.content.ComponentName $r16, $r17;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Throwable $r20, $r21, $r22, r26, r30, r31, r32;
        androidx.wear.complications.ComplicationDataSourceInfo r23;
        androidx.wear.watchface.editor.BaseEditorSession$getPreviewData$1 $r24, r33;
        java.io.Closeable r25;
        androidx.wear.utility.TraceEvent r27, r34;
        java.lang.IllegalStateException r35;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession;

        r1 := @parameter0: androidx.wear.complications.ComplicationDataSourceInfoRetriever;

        r23 := @parameter1: androidx.wear.complications.ComplicationDataSourceInfo;

        r2 := @parameter2: kotlin.coroutines.Continuation;

        $z0 = r2 instanceof androidx.wear.watchface.editor.BaseEditorSession$getPreviewData$1;

        if $z0 == 0 goto label01;

        $r24 = (androidx.wear.watchface.editor.BaseEditorSession$getPreviewData$1) r2;

        $i0 = $r24.<androidx.wear.watchface.editor.BaseEditorSession$getPreviewData$1: int label>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label01;

        $i2 = $r24.<androidx.wear.watchface.editor.BaseEditorSession$getPreviewData$1: int label>;

        $i3 = $i2 - -2147483648;

        $r24.<androidx.wear.watchface.editor.BaseEditorSession$getPreviewData$1: int label> = $i3;

        goto label02;

     label01:
        r33 = new androidx.wear.watchface.editor.BaseEditorSession$getPreviewData$1;

        specialinvoke r33.<androidx.wear.watchface.editor.BaseEditorSession$getPreviewData$1: void <init>(androidx.wear.watchface.editor.BaseEditorSession,kotlin.coroutines.Continuation)>(r0, r2);

        $r24 = r33;

     label02:
        $r7 = $r24.<androidx.wear.watchface.editor.BaseEditorSession$getPreviewData$1: java.lang.Object result>;

        r8 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i4 = $r24.<androidx.wear.watchface.editor.BaseEditorSession$getPreviewData$1: int label>;

        tableswitch($i4)
        {
            case 0: goto label03;
            case 1: goto label10;
            default: goto label22;
        };

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r7);

        r34 = new androidx.wear.utility.TraceEvent;

        specialinvoke r34.<androidx.wear.utility.TraceEvent: void <init>(java.lang.String)>("BaseEditorSession.getPreviewData");

        r25 = (java.io.Closeable) r34;

        r26 = null;

     label04:
        r27 = (androidx.wear.utility.TraceEvent) r25;

        if r23 != null goto label06;

     label05:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r25, null);

        return null;

     label06:
        $r16 = virtualinvoke r23.<androidx.wear.complications.ComplicationDataSourceInfo: android.content.ComponentName getComponentName()>();

        if $r16 != null goto label08;

        r6 = virtualinvoke r23.<androidx.wear.complications.ComplicationDataSourceInfo: androidx.wear.complications.data.ComplicationData getFallbackPreviewData()>();

     label07:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r25, null);

        return r6;

     label08:
        $r17 = virtualinvoke r23.<androidx.wear.complications.ComplicationDataSourceInfo: android.content.ComponentName getComponentName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r17);

        $r18 = virtualinvoke r23.<androidx.wear.complications.ComplicationDataSourceInfo: androidx.wear.complications.data.ComplicationType getType()>();

        $r24.<androidx.wear.watchface.editor.BaseEditorSession$getPreviewData$1: java.lang.Object L$0> = r23;

        $r24.<androidx.wear.watchface.editor.BaseEditorSession$getPreviewData$1: java.lang.Object L$1> = r25;

        $r24.<androidx.wear.watchface.editor.BaseEditorSession$getPreviewData$1: java.lang.Object L$2> = r26;

        $r24.<androidx.wear.watchface.editor.BaseEditorSession$getPreviewData$1: int label> = 1;

        r36 = (kotlin.coroutines.Continuation) $r24;

        $r28 = virtualinvoke r1.<androidx.wear.complications.ComplicationDataSourceInfoRetriever: java.lang.Object retrievePreviewComplicationData(android.content.ComponentName,androidx.wear.complications.data.ComplicationType,kotlin.coroutines.Continuation)>($r17, $r18, r36);

     label09:
        if $r28 != r8 goto label12;

        return r8;

     label10:
        $r10 = $r24.<androidx.wear.watchface.editor.BaseEditorSession$getPreviewData$1: java.lang.Object L$2>;

        r26 = (java.lang.Throwable) $r10;

        $r11 = $r24.<androidx.wear.watchface.editor.BaseEditorSession$getPreviewData$1: java.lang.Object L$1>;

        r25 = (java.io.Closeable) $r11;

        $r12 = $r24.<androidx.wear.watchface.editor.BaseEditorSession$getPreviewData$1: java.lang.Object L$0>;

        r23 = (androidx.wear.complications.ComplicationDataSourceInfo) $r12;

     label11:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r7);

        $r28 = $r7;

     label12:
        r29 = (androidx.wear.complications.data.ComplicationData) $r28;

        if r29 == null goto label13;

        $r13 = virtualinvoke r29.<androidx.wear.complications.data.ComplicationData: androidx.wear.complications.data.ComplicationType getType()>();

        $r14 = virtualinvoke r23.<androidx.wear.complications.ComplicationDataSourceInfo: androidx.wear.complications.data.ComplicationType getType()>();

        if $r13 == $r14 goto label15;

     label13:
        r5 = virtualinvoke r23.<androidx.wear.complications.ComplicationDataSourceInfo: androidx.wear.complications.data.ComplicationData getFallbackPreviewData()>();

     label14:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r25, r26);

        return r5;

     label15:
        r4 = r29;

     label16:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r25, r26);

        return r4;

     label17:
        $r20 := @caughtexception;

        r3 = virtualinvoke r23.<androidx.wear.complications.ComplicationDataSourceInfo: androidx.wear.complications.data.ComplicationData getFallbackPreviewData()>();

     label18:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r25, r26);

        return r3;

     label19:
        $r22 := @caughtexception;

        r30 = $r22;

        r31 = r30;

        throw r30;

     label20:
        $r21 := @caughtexception;

        r32 = $r21;

     label21:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r25, r31);

        throw r32;

     label22:
        r35 = new java.lang.IllegalStateException;

        specialinvoke r35.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r35;

        catch java.lang.Exception from label08 to label09 with label17;
        catch java.lang.Exception from label11 to label14 with label17;
        catch java.lang.Exception from label15 to label16 with label17;
        catch java.lang.Throwable from label04 to label05 with label19;
        catch java.lang.Throwable from label06 to label07 with label19;
        catch java.lang.Throwable from label08 to label09 with label19;
        catch java.lang.Throwable from label11 to label14 with label19;
        catch java.lang.Throwable from label15 to label16 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label19 to label20 with label20;
        catch java.lang.Throwable from label20 to label21 with label20;
    }

    protected final kotlinx.coroutines.Job fetchComplicationsData(kotlinx.coroutines.CoroutineScope)
    {
        androidx.wear.watchface.editor.BaseEditorSession r0;
        kotlinx.coroutines.CoroutineScope r1;
        androidx.wear.complications.ComplicationDataSourceInfoRetriever r2;
        androidx.wear.watchface.editor.ComplicationDataSourceInfoRetrieverProvider $r3;
        androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1 $r4;
        kotlin.jvm.functions.Function2 $r5;
        kotlinx.coroutines.Job $r6;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "fetchCoroutineScope");

        $r3 = r0.<androidx.wear.watchface.editor.BaseEditorSession: androidx.wear.watchface.editor.ComplicationDataSourceInfoRetrieverProvider complicationDataSourceInfoRetrieverProvider>;

        r2 = interfaceinvoke $r3.<androidx.wear.watchface.editor.ComplicationDataSourceInfoRetrieverProvider: androidx.wear.complications.ComplicationDataSourceInfoRetriever getComplicationDataSourceInfoRetriever()>();

        $r4 = new androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1;

        specialinvoke $r4.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: void <init>(androidx.wear.complications.ComplicationDataSourceInfoRetriever,androidx.wear.watchface.editor.BaseEditorSession,kotlin.coroutines.Continuation)>(r2, r0, null);

        $r5 = (kotlin.jvm.functions.Function2) $r4;

        $r6 = staticinvoke <androidx.wear.utility.TraceEventKt: kotlinx.coroutines.Job launchWithTracing(kotlinx.coroutines.CoroutineScope,java.lang.String,kotlin.jvm.functions.Function2)>(r1, "BaseEditorSession.fetchComplicationsData", $r5);

        return $r6;
    }

    public void close()
    {
        androidx.wear.watchface.editor.BaseEditorSession r0;
        boolean $z0;
        androidx.wear.watchface.editor.EditorService$Companion $r1;
        androidx.wear.watchface.editor.EditorService $r2;
        androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1 $r3;
        androidx.wear.watchface.editor.EditorService$CloseCallback $r4;
        androidx.wear.watchface.editor.BaseEditorSession$close$1 $r5;
        kotlinx.coroutines.CoroutineScope $r6;
        kotlin.jvm.functions.Function2 $r7;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession;

        $z0 = r0.<androidx.wear.watchface.editor.BaseEditorSession: boolean forceClosed>;

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<androidx.wear.watchface.editor.BaseEditorSession: void requireNotClosed()>();

        $r1 = <androidx.wear.watchface.editor.EditorService: androidx.wear.watchface.editor.EditorService$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.wear.watchface.editor.EditorService$Companion: androidx.wear.watchface.editor.EditorService getGlobalEditorService()>();

        $r3 = r0.<androidx.wear.watchface.editor.BaseEditorSession: androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1 closeCallback>;

        $r4 = (androidx.wear.watchface.editor.EditorService$CloseCallback) $r3;

        virtualinvoke $r2.<androidx.wear.watchface.editor.EditorService: void removeCloseCallback(androidx.wear.watchface.editor.EditorService$CloseCallback)>($r4);

        $r6 = r0.<androidx.wear.watchface.editor.BaseEditorSession: kotlinx.coroutines.CoroutineScope coroutineScope>;

        $r5 = new androidx.wear.watchface.editor.BaseEditorSession$close$1;

        specialinvoke $r5.<androidx.wear.watchface.editor.BaseEditorSession$close$1: void <init>(androidx.wear.watchface.editor.BaseEditorSession,kotlin.coroutines.Continuation)>(r0, null);

        $r7 = (kotlin.jvm.functions.Function2) $r5;

        staticinvoke <androidx.wear.utility.TraceEventKt: kotlinx.coroutines.Job launchWithTracing(kotlinx.coroutines.CoroutineScope,java.lang.String,kotlin.jvm.functions.Function2)>($r6, "BaseEditorSession.close", $r7);

        return;
    }

    public final void forceClose$wear_watchface_editor_release()
    {
        androidx.wear.watchface.editor.BaseEditorSession r0;
        androidx.wear.watchface.editor.EditorService$Companion $r1;
        androidx.wear.watchface.editor.EditorService $r2;
        androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1 $r3;
        androidx.wear.watchface.editor.EditorService$CloseCallback $r4;
        androidx.wear.utility.AsyncTraceEvent $r5;
        kotlinx.coroutines.CoroutineScope $r6;
        androidx.activity.ComponentActivity $r7;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession;

        virtualinvoke r0.<androidx.wear.watchface.editor.BaseEditorSession: void setCommitChangesOnClose(boolean)>(0);

        r0.<androidx.wear.watchface.editor.BaseEditorSession: boolean closed> = 1;

        r0.<androidx.wear.watchface.editor.BaseEditorSession: boolean forceClosed> = 1;

        virtualinvoke r0.<androidx.wear.watchface.editor.BaseEditorSession: void releaseResources()>();

        $r1 = <androidx.wear.watchface.editor.EditorService: androidx.wear.watchface.editor.EditorService$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.wear.watchface.editor.EditorService$Companion: androidx.wear.watchface.editor.EditorService getGlobalEditorService()>();

        $r3 = r0.<androidx.wear.watchface.editor.BaseEditorSession: androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1 closeCallback>;

        $r4 = (androidx.wear.watchface.editor.EditorService$CloseCallback) $r3;

        virtualinvoke $r2.<androidx.wear.watchface.editor.EditorService: void removeCloseCallback(androidx.wear.watchface.editor.EditorService$CloseCallback)>($r4);

        $r5 = r0.<androidx.wear.watchface.editor.BaseEditorSession: androidx.wear.utility.AsyncTraceEvent editorSessionTraceEvent>;

        virtualinvoke $r5.<androidx.wear.utility.AsyncTraceEvent: void close()>();

        $r6 = r0.<androidx.wear.watchface.editor.BaseEditorSession: kotlinx.coroutines.CoroutineScope coroutineScope>;

        staticinvoke <kotlinx.coroutines.CoroutineScopeKt: void cancel$default(kotlinx.coroutines.CoroutineScope,java.util.concurrent.CancellationException,int,java.lang.Object)>($r6, null, 1, null);

        $r7 = r0.<androidx.wear.watchface.editor.BaseEditorSession: androidx.activity.ComponentActivity activity>;

        virtualinvoke $r7.<androidx.activity.ComponentActivity: void finish()>();

        return;
    }

    protected final void requireNotClosed()
    {
        androidx.wear.watchface.editor.BaseEditorSession r0;
        boolean z0, z1, $z3, $z4, $z5, z6;
        java.lang.IllegalArgumentException $r1;
        java.lang.String $r2, r4;
        java.lang.Throwable $r3;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession;

        $z3 = r0.<androidx.wear.watchface.editor.BaseEditorSession: boolean closed>;

        if $z3 != 0 goto label1;

        $z5 = 1;

        goto label2;

     label1:
        $z5 = 0;

     label2:
        $z4 = r0.<androidx.wear.watchface.editor.BaseEditorSession: boolean forceClosed>;

        z0 = $z5 | $z4;

        z1 = 0;

        z6 = 0;

        if z0 != 0 goto label3;

        r4 = "EditorSession method called after close()";

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        $r3 = (java.lang.Throwable) $r1;

        throw $r3;

     label3:
        return;
    }

<androidx.wear.watchface.editor.BaseEditorSession: void releaseResources()>
    public volatile boolean isCommitChangesOnClose()
    {
        androidx.wear.watchface.editor.BaseEditorSession r0;
        boolean $z0;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession;

        $z0 = virtualinvoke r0.<androidx.wear.watchface.editor.BaseEditorSession: boolean getCommitChangesOnClose()>();

        return $z0;
    }

    public volatile kotlinx.coroutines.flow.StateFlow getComplicationSlotsState()
    {
        androidx.wear.watchface.editor.BaseEditorSession r0;
        kotlinx.coroutines.flow.MutableStateFlow $r1;
        kotlinx.coroutines.flow.StateFlow $r2;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession;

        $r1 = virtualinvoke r0.<androidx.wear.watchface.editor.BaseEditorSession: kotlinx.coroutines.flow.MutableStateFlow getComplicationSlotsState()>();

        $r2 = (kotlinx.coroutines.flow.StateFlow) $r1;

        return $r2;
    }

    public static final kotlinx.coroutines.CompletableDeferred access$getDeferredComplicationsDataSourceInfoMapFlow$p(androidx.wear.watchface.editor.BaseEditorSession)
    {
        androidx.wear.watchface.editor.BaseEditorSession $r0;
        kotlinx.coroutines.CompletableDeferred $r1;

        $r0 := @parameter0: androidx.wear.watchface.editor.BaseEditorSession;

        $r1 = $r0.<androidx.wear.watchface.editor.BaseEditorSession: kotlinx.coroutines.CompletableDeferred deferredComplicationsDataSourceInfoMapFlow>;

        return $r1;
    }

    public static final androidx.wear.watchface.editor.PreviewScreenshotParams access$getPreviewScreenshotParams$p(androidx.wear.watchface.editor.BaseEditorSession)
    {
        androidx.wear.watchface.editor.BaseEditorSession $r0;
        androidx.wear.watchface.editor.PreviewScreenshotParams $r1;

        $r0 := @parameter0: androidx.wear.watchface.editor.BaseEditorSession;

        $r1 = $r0.<androidx.wear.watchface.editor.BaseEditorSession: androidx.wear.watchface.editor.PreviewScreenshotParams previewScreenshotParams>;

        return $r1;
    }

    public static final androidx.wear.utility.AsyncTraceEvent access$getEditorSessionTraceEvent$p(androidx.wear.watchface.editor.BaseEditorSession)
    {
        androidx.wear.watchface.editor.BaseEditorSession $r0;
        androidx.wear.utility.AsyncTraceEvent $r1;

        $r0 := @parameter0: androidx.wear.watchface.editor.BaseEditorSession;

        $r1 = $r0.<androidx.wear.watchface.editor.BaseEditorSession: androidx.wear.utility.AsyncTraceEvent editorSessionTraceEvent>;

        return $r1;
    }

    static void <clinit>()
    {
        androidx.wear.watchface.editor.BaseEditorSession$Companion $r0;

        $r0 = new androidx.wear.watchface.editor.BaseEditorSession$Companion;

        specialinvoke $r0.<androidx.wear.watchface.editor.BaseEditorSession$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.wear.watchface.editor.BaseEditorSession: androidx.wear.watchface.editor.BaseEditorSession$Companion Companion> = $r0;

        return;
    }

androidx.wear.watchface.editor.BaseEditorSession$backgroundComplicationSlotId$2
<androidx.wear.watchface.editor.BaseEditorSession$backgroundComplicationSlotId$2: androidx.wear.watchface.editor.BaseEditorSession this$0>
    void <init>(androidx.wear.watchface.editor.BaseEditorSession)
    {
        androidx.wear.watchface.editor.BaseEditorSession$backgroundComplicationSlotId$2 r0;
        androidx.wear.watchface.editor.BaseEditorSession $r1;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$backgroundComplicationSlotId$2;

        $r1 := @parameter0: androidx.wear.watchface.editor.BaseEditorSession;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$backgroundComplicationSlotId$2: androidx.wear.watchface.editor.BaseEditorSession this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final java.lang.Integer invoke()
    {
        androidx.wear.watchface.editor.BaseEditorSession$backgroundComplicationSlotId$2 r0;
        java.util.Map$Entry r1, r5;
        java.lang.Iterable $r2;
        java.util.Iterator r3;
        java.lang.Object r4, $r9, $r12, $r13, $r15;
        androidx.wear.watchface.editor.BaseEditorSession $r6, $r7;
        kotlinx.coroutines.flow.MutableStateFlow $r8;
        java.util.Map $r10;
        java.util.Set $r11;
        boolean $z2, $z3;
        androidx.wear.watchface.client.ComplicationSlotState $r14;
        int $i0;
        java.lang.Integer $r16;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$backgroundComplicationSlotId$2;

        $r6 = r0.<androidx.wear.watchface.editor.BaseEditorSession$backgroundComplicationSlotId$2: androidx.wear.watchface.editor.BaseEditorSession this$0>;

        virtualinvoke $r6.<androidx.wear.watchface.editor.BaseEditorSession: void requireNotClosed()>();

        $r7 = r0.<androidx.wear.watchface.editor.BaseEditorSession$backgroundComplicationSlotId$2: androidx.wear.watchface.editor.BaseEditorSession this$0>;

        $r8 = virtualinvoke $r7.<androidx.wear.watchface.editor.BaseEditorSession: kotlinx.coroutines.flow.MutableStateFlow getComplicationSlotsState()>();

        $r9 = interfaceinvoke $r8.<kotlinx.coroutines.flow.MutableStateFlow: java.lang.Object getValue()>();

        $r10 = (java.util.Map) $r9;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Set entrySet()>();

        $r2 = (java.lang.Iterable) $r11;

        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) r4;

        $r13 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r14 = (androidx.wear.watchface.client.ComplicationSlotState) $r13;

        $i0 = virtualinvoke $r14.<androidx.wear.watchface.client.ComplicationSlotState: int getBoundsType()>();

        if $i0 != 1 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        if $z3 == 0 goto label1;

        $r15 = r4;

        goto label5;

     label4:
        $r15 = null;

     label5:
        r1 = (java.util.Map$Entry) $r15;

        if r1 != null goto label6;

        $r16 = null;

        goto label7;

     label6:
        $r12 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r16 = (java.lang.Integer) $r12;

     label7:
        return $r16;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.wear.watchface.editor.BaseEditorSession$backgroundComplicationSlotId$2 r0;
        java.lang.Integer $r1;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$backgroundComplicationSlotId$2;

        $r1 = virtualinvoke r0.<androidx.wear.watchface.editor.BaseEditorSession$backgroundComplicationSlotId$2: java.lang.Integer invoke()>();

        return $r1;
    }

androidx.wear.watchface.editor.BaseEditorSession$chooseComplicationDataSource$1
<androidx.wear.watchface.editor.BaseEditorSession$chooseComplicationDataSource$1: androidx.wear.watchface.editor.BaseEditorSession this$0>
    void <init>(androidx.wear.watchface.editor.BaseEditorSession)
    {
        androidx.wear.watchface.editor.BaseEditorSession$chooseComplicationDataSource$1 r0;
        androidx.wear.watchface.editor.BaseEditorSession $r1;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$chooseComplicationDataSource$1;

        $r1 := @parameter0: androidx.wear.watchface.editor.BaseEditorSession;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$chooseComplicationDataSource$1: androidx.wear.watchface.editor.BaseEditorSession this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final void onActivityResult(androidx.wear.watchface.editor.ComplicationDataSourceChooserResult)
    {
        androidx.wear.watchface.editor.BaseEditorSession$chooseComplicationDataSource$1 r0;
        androidx.wear.watchface.editor.ComplicationDataSourceChooserResult r1;
        androidx.wear.watchface.editor.BaseEditorSession $r2;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$chooseComplicationDataSource$1;

        r1 := @parameter0: androidx.wear.watchface.editor.ComplicationDataSourceChooserResult;

        $r2 = r0.<androidx.wear.watchface.editor.BaseEditorSession$chooseComplicationDataSource$1: androidx.wear.watchface.editor.BaseEditorSession this$0>;

        virtualinvoke $r2.<androidx.wear.watchface.editor.BaseEditorSession: void onComplicationDataSourceChooserResult$wear_watchface_editor_release(androidx.wear.watchface.editor.ComplicationDataSourceChooserResult)>(r1);

        return;
    }

    public volatile void onActivityResult(java.lang.Object)
    {
        androidx.wear.watchface.editor.BaseEditorSession$chooseComplicationDataSource$1 r0;
        java.lang.Object r1;
        androidx.wear.watchface.editor.ComplicationDataSourceChooserResult $r2;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$chooseComplicationDataSource$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.wear.watchface.editor.ComplicationDataSourceChooserResult) r1;

        virtualinvoke r0.<androidx.wear.watchface.editor.BaseEditorSession$chooseComplicationDataSource$1: void onActivityResult(androidx.wear.watchface.editor.ComplicationDataSourceChooserResult)>($r2);

        return;
    }

androidx.wear.watchface.editor.BaseEditorSession$close$1$1
<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: java.lang.Object L$0>
<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: java.lang.Object L$1>
<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: java.lang.Object L$2>
<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: java.lang.Object L$3>
<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: int label>
<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: androidx.wear.watchface.editor.BaseEditorSession this$0>
    void <init>(androidx.wear.watchface.editor.BaseEditorSession, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.editor.BaseEditorSession$close$1$1 r0;
        androidx.wear.watchface.editor.BaseEditorSession $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$close$1$1;

        $r1 := @parameter0: androidx.wear.watchface.editor.BaseEditorSession;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: androidx.wear.watchface.editor.BaseEditorSession this$0> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.wear.watchface.editor.BaseEditorSession$close$1$1 r0;
        java.lang.Object $r1, r15, $r16, $r17, $r18, $r19, $r21, $r31, $r33, $r35, $r36, $r38, $r40, $r43, $r44, $r45, $r46, $r48, $r68, r69, $r79, $r86, r87;
        androidx.wear.watchface.editor.BaseEditorSession r2, $r24, $r51, $r52, $r54, $r56, $r59, $r61, r66, $r74, $r77, $r84;
        java.util.Collection r3;
        java.util.Map r4, $r34, $r49;
        boolean z3, z6, z7, z9, $z10, $z12, $z13, $z14;
        java.util.Iterator r5;
        java.util.Map$Entry r6, r7, r8;
        androidx.wear.watchface.data.IdAndComplicationDataWireFormat r9, r10, $r91;
        android.os.Bundle r11, $r70, r71;
        java.util.List r12, r92;
        androidx.wear.watchface.style.data.UserStyleWireFormat r13, r81, r88;
        java.lang.String r14, $r76, r82, r89;
        int $i0, $i1, $i2;
        kotlinx.coroutines.flow.StateFlow $r20, $r47;
        java.util.ArrayList $r22;
        java.util.Set $r23;
        androidx.wear.watchface.editor.data.EditorStateWireFormat $r25;
        kotlin.Unit $r26;
        kotlinx.coroutines.flow.MutableStateFlow $r32, $r78;
        androidx.wear.watchface.client.ComplicationSlotState $r37;
        java.lang.Number $r39;
        androidx.wear.complications.data.ComplicationData $r41;
        android.support.wearable.complications.ComplicationData $r42;
        android.graphics.Bitmap $r50;
        androidx.wear.watchface.editor.PreviewScreenshotParams $r53, $r57, $r60;
        android.support.wearable.watchface.SharedMemoryImage$Companion $r55, r67;
        androidx.wear.watchface.RenderParameters $r58, r65;
        kotlin.coroutines.Continuation $r62, $r85;
        java.lang.IllegalStateException $r63;
        java.time.Instant r64;
        androidx.wear.watchface.editor.EditorService$Companion $r72;
        androidx.wear.watchface.editor.EditorService $r73, r83, r90;
        androidx.wear.watchface.client.WatchFaceId $r75;
        androidx.wear.watchface.style.UserStyle $r80;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$close$1$1;

        $r1 := @parameter0: java.lang.Object;

        r15 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label01;
            case 1: goto label02;
            case 2: goto label06;
            default: goto label15;
        };

     label01:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r51 = r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: androidx.wear.watchface.editor.BaseEditorSession this$0>;

        $z12 = virtualinvoke $r51.<androidx.wear.watchface.editor.BaseEditorSession: boolean getCommitChangesOnClose()>();

        if $z12 == 0 goto label04;

        $r52 = r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: androidx.wear.watchface.editor.BaseEditorSession this$0>;

        $r53 = staticinvoke <androidx.wear.watchface.editor.BaseEditorSession: androidx.wear.watchface.editor.PreviewScreenshotParams access$getPreviewScreenshotParams$p(androidx.wear.watchface.editor.BaseEditorSession)>($r52);

        if $r53 == null goto label04;

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 27 goto label04;

        $r55 = <android.support.wearable.watchface.SharedMemoryImage: android.support.wearable.watchface.SharedMemoryImage$Companion Companion>;

        $r56 = r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: androidx.wear.watchface.editor.BaseEditorSession this$0>;

        $r54 = r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: androidx.wear.watchface.editor.BaseEditorSession this$0>;

        $r57 = staticinvoke <androidx.wear.watchface.editor.BaseEditorSession: androidx.wear.watchface.editor.PreviewScreenshotParams access$getPreviewScreenshotParams$p(androidx.wear.watchface.editor.BaseEditorSession)>($r54);

        $r58 = virtualinvoke $r57.<androidx.wear.watchface.editor.PreviewScreenshotParams: androidx.wear.watchface.RenderParameters getRenderParameters()>();

        $r59 = r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: androidx.wear.watchface.editor.BaseEditorSession this$0>;

        $r60 = staticinvoke <androidx.wear.watchface.editor.BaseEditorSession: androidx.wear.watchface.editor.PreviewScreenshotParams access$getPreviewScreenshotParams$p(androidx.wear.watchface.editor.BaseEditorSession)>($r59);

        r64 = virtualinvoke $r60.<androidx.wear.watchface.editor.PreviewScreenshotParams: java.time.Instant getInstant()>();

        r65 = $r58;

        r66 = $r56;

        r67 = $r55;

        $r61 = r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: androidx.wear.watchface.editor.BaseEditorSession this$0>;

        $r62 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: java.lang.Object L$0> = r67;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: java.lang.Object L$1> = r66;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: java.lang.Object L$2> = r65;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: java.lang.Object L$3> = r64;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: int label> = 1;

        $r68 = virtualinvoke $r61.<androidx.wear.watchface.editor.BaseEditorSession: java.lang.Object getComplicationsPreviewData(kotlin.coroutines.Continuation)>($r62);

        if $r68 != r15 goto label03;

        return r15;

     label02:
        $r43 = r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: java.lang.Object L$3>;

        r64 = (java.time.Instant) $r43;

        $r44 = r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: java.lang.Object L$2>;

        r65 = (androidx.wear.watchface.RenderParameters) $r44;

        $r45 = r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: java.lang.Object L$1>;

        r66 = (androidx.wear.watchface.editor.BaseEditorSession) $r45;

        $r46 = r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: java.lang.Object L$0>;

        r67 = (android.support.wearable.watchface.SharedMemoryImage$Companion) $r46;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r68 = $r1;

     label03:
        r69 = $r68;

        $r47 = (kotlinx.coroutines.flow.StateFlow) r69;

        $r48 = interfaceinvoke $r47.<kotlinx.coroutines.flow.StateFlow: java.lang.Object getValue()>();

        $r49 = (java.util.Map) $r48;

        $r50 = virtualinvoke r66.<androidx.wear.watchface.editor.BaseEditorSession: android.graphics.Bitmap renderWatchFaceToBitmap(androidx.wear.watchface.RenderParameters,java.time.Instant,java.util.Map)>(r65, r64, $r49);

        $r70 = virtualinvoke r67.<android.support.wearable.watchface.SharedMemoryImage$Companion: android.os.Bundle ashmemWriteImageBundle(android.graphics.Bitmap)>($r50);

        goto label05;

     label04:
        $r70 = (android.os.Bundle) null;

     label05:
        r71 = $r70;

        $r72 = <androidx.wear.watchface.editor.EditorService: androidx.wear.watchface.editor.EditorService$Companion Companion>;

        $r73 = virtualinvoke $r72.<androidx.wear.watchface.editor.EditorService$Companion: androidx.wear.watchface.editor.EditorService getGlobalEditorService()>();

        $r74 = r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: androidx.wear.watchface.editor.BaseEditorSession this$0>;

        $r75 = virtualinvoke $r74.<androidx.wear.watchface.editor.BaseEditorSession: androidx.wear.watchface.client.WatchFaceId getWatchFaceId()>();

        $r76 = virtualinvoke $r75.<androidx.wear.watchface.client.WatchFaceId: java.lang.String getId()>();

        $r77 = r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: androidx.wear.watchface.editor.BaseEditorSession this$0>;

        $r78 = virtualinvoke $r77.<androidx.wear.watchface.editor.BaseEditorSession: kotlinx.coroutines.flow.MutableStateFlow getUserStyle()>();

        $r79 = interfaceinvoke $r78.<kotlinx.coroutines.flow.MutableStateFlow: java.lang.Object getValue()>();

        $r80 = (androidx.wear.watchface.style.UserStyle) $r79;

        r81 = virtualinvoke $r80.<androidx.wear.watchface.style.UserStyle: androidx.wear.watchface.style.data.UserStyleWireFormat toWireFormat()>();

        r82 = $r76;

        r83 = $r73;

        $r84 = r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: androidx.wear.watchface.editor.BaseEditorSession this$0>;

        $r85 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: java.lang.Object L$0> = r71;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: java.lang.Object L$1> = r83;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: java.lang.Object L$2> = r82;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: java.lang.Object L$3> = r81;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: int label> = 2;

        $r86 = virtualinvoke $r84.<androidx.wear.watchface.editor.BaseEditorSession: java.lang.Object getComplicationsPreviewData(kotlin.coroutines.Continuation)>($r85);

        if $r86 != r15 goto label07;

        return r15;

     label06:
        $r16 = r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: java.lang.Object L$3>;

        r81 = (androidx.wear.watchface.style.data.UserStyleWireFormat) $r16;

        $r17 = r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: java.lang.Object L$2>;

        r82 = (java.lang.String) $r17;

        $r18 = r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: java.lang.Object L$1>;

        r83 = (androidx.wear.watchface.editor.EditorService) $r18;

        $r19 = r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: java.lang.Object L$0>;

        r71 = (android.os.Bundle) $r19;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r86 = $r1;

     label07:
        r87 = $r86;

        $r20 = (kotlinx.coroutines.flow.StateFlow) r87;

        $r21 = interfaceinvoke $r20.<kotlinx.coroutines.flow.StateFlow: java.lang.Object getValue()>();

        r2 = r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: androidx.wear.watchface.editor.BaseEditorSession this$0>;

        r88 = r81;

        r89 = r82;

        r90 = r83;

        $r22 = new java.util.ArrayList;

        specialinvoke $r22.<java.util.ArrayList: void <init>()>();

        r3 = (java.util.Collection) $r22;

        r4 = (java.util.Map) $r21;

        z3 = 0;

        $r23 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>();

        r5 = interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>();

     label08:
        $z13 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label12;

        $r31 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r31;

        r7 = r6;

        r8 = r7;

        $r32 = virtualinvoke r2.<androidx.wear.watchface.editor.BaseEditorSession: kotlinx.coroutines.flow.MutableStateFlow getComplicationSlotsState()>();

        $r33 = interfaceinvoke $r32.<kotlinx.coroutines.flow.MutableStateFlow: java.lang.Object getValue()>();

        $r34 = (java.util.Map) $r33;

        $r35 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r36 = interfaceinvoke $r34.<java.util.Map: java.lang.Object get(java.lang.Object)>($r35);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r36);

        $r37 = (androidx.wear.watchface.client.ComplicationSlotState) $r36;

        $z10 = virtualinvoke $r37.<androidx.wear.watchface.client.ComplicationSlotState: boolean isEnabled()>();

        if $z10 == 0 goto label09;

        $r91 = new androidx.wear.watchface.data.IdAndComplicationDataWireFormat;

        $r38 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r39 = (java.lang.Number) $r38;

        $i1 = virtualinvoke $r39.<java.lang.Number: int intValue()>();

        $r40 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r41 = (androidx.wear.complications.data.ComplicationData) $r40;

        $r42 = virtualinvoke $r41.<androidx.wear.complications.data.ComplicationData: android.support.wearable.complications.ComplicationData asWireComplicationData()>();

        specialinvoke $r91.<androidx.wear.watchface.data.IdAndComplicationDataWireFormat: void <init>(int,android.support.wearable.complications.ComplicationData)>($i1, $r42);

        goto label10;

     label09:
        $r91 = null;

     label10:
        if $r91 == null goto label11;

        r9 = $r91;

        z6 = 0;

        z7 = 0;

        r10 = r9;

        interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>(r10);

        goto label11;

     label11:
        goto label08;

     label12:
        r92 = (java.util.List) r3;

        $r24 = r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: androidx.wear.watchface.editor.BaseEditorSession this$0>;

        r11 = r71;

        z9 = virtualinvoke $r24.<androidx.wear.watchface.editor.BaseEditorSession: boolean getCommitChangesOnClose()>();

        r12 = r92;

        r13 = r88;

        r14 = r89;

        $r25 = new androidx.wear.watchface.editor.data.EditorStateWireFormat;

        if z9 == 0 goto label13;

        $z14 = 1;

        goto label14;

     label13:
        $z14 = 0;

     label14:
        specialinvoke $r25.<androidx.wear.watchface.editor.data.EditorStateWireFormat: void <init>(java.lang.String,androidx.wear.watchface.style.data.UserStyleWireFormat,java.util.List,boolean,android.os.Bundle)>(r14, r13, r12, $z14, r11);

        virtualinvoke r90.<androidx.wear.watchface.editor.EditorService: void broadcastEditorState(androidx.wear.watchface.editor.data.EditorStateWireFormat)>($r25);

        $r26 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r26;

     label15:
        $r63 = new java.lang.IllegalStateException;

        specialinvoke $r63.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r63;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.editor.BaseEditorSession$close$1$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r5;
        androidx.wear.watchface.editor.BaseEditorSession $r4;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$close$1$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.wear.watchface.editor.BaseEditorSession$close$1$1;

        $r4 = r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: androidx.wear.watchface.editor.BaseEditorSession this$0>;

        specialinvoke $r3.<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: void <init>(androidx.wear.watchface.editor.BaseEditorSession,kotlin.coroutines.Continuation)>($r4, $r2);

        $r5 = (kotlin.coroutines.Continuation) $r3;

        return $r5;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.editor.BaseEditorSession$close$1$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$close$1$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.wear.watchface.editor.BaseEditorSession$close$1$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.wear.watchface.editor.BaseEditorSession$close$1$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$close$1$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.wear.watchface.editor.BaseEditorSession$close$1
<androidx.wear.watchface.editor.BaseEditorSession$close$1: int label>
<androidx.wear.watchface.editor.BaseEditorSession$close$1: androidx.wear.watchface.editor.BaseEditorSession this$0>
    void <init>(androidx.wear.watchface.editor.BaseEditorSession, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.editor.BaseEditorSession$close$1 r0;
        androidx.wear.watchface.editor.BaseEditorSession $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$close$1;

        $r1 := @parameter0: androidx.wear.watchface.editor.BaseEditorSession;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1: androidx.wear.watchface.editor.BaseEditorSession this$0> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.wear.watchface.editor.BaseEditorSession$close$1 r0;
        java.lang.Object $r1, r3, $r15;
        java.lang.Throwable r2, $r17;
        int $i0;
        androidx.wear.watchface.editor.BaseEditorSession $r4, $r5, $r6, $r8, $r12;
        androidx.wear.utility.AsyncTraceEvent $r7;
        kotlinx.coroutines.CoroutineScope $r9;
        kotlin.Unit $r10;
        androidx.wear.watchface.editor.BaseEditorSession$close$1$1 $r11;
        kotlin.jvm.functions.Function2 $r13;
        kotlin.coroutines.Continuation $r14;
        java.lang.IllegalStateException $r16;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$close$1;

        $r1 := @parameter0: java.lang.Object;

        r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label4;
            default: goto label8;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label2:
        $r11 = new androidx.wear.watchface.editor.BaseEditorSession$close$1$1;

        $r12 = r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1: androidx.wear.watchface.editor.BaseEditorSession this$0>;

        specialinvoke $r11.<androidx.wear.watchface.editor.BaseEditorSession$close$1$1: void <init>(androidx.wear.watchface.editor.BaseEditorSession,kotlin.coroutines.Continuation)>($r12, null);

        $r13 = (kotlin.jvm.functions.Function2) $r11;

        $r14 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1: int label> = 1;

        $r15 = staticinvoke <kotlinx.coroutines.TimeoutKt: java.lang.Object withTimeout(long,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>(500L, $r13, $r14);

     label3:
        if $r15 != r3 goto label5;

        return r3;

     label4:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label5:
        goto label7;

     label6:
        $r17 := @caughtexception;

        r2 = $r17;

     label7:
        $r4 = r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1: androidx.wear.watchface.editor.BaseEditorSession this$0>;

        virtualinvoke $r4.<androidx.wear.watchface.editor.BaseEditorSession: void releaseResources()>();

        $r5 = r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1: androidx.wear.watchface.editor.BaseEditorSession this$0>;

        virtualinvoke $r5.<androidx.wear.watchface.editor.BaseEditorSession: void setClosed(boolean)>(1);

        $r6 = r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1: androidx.wear.watchface.editor.BaseEditorSession this$0>;

        $r7 = staticinvoke <androidx.wear.watchface.editor.BaseEditorSession: androidx.wear.utility.AsyncTraceEvent access$getEditorSessionTraceEvent$p(androidx.wear.watchface.editor.BaseEditorSession)>($r6);

        virtualinvoke $r7.<androidx.wear.utility.AsyncTraceEvent: void close()>();

        $r8 = r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1: androidx.wear.watchface.editor.BaseEditorSession this$0>;

        $r9 = virtualinvoke $r8.<androidx.wear.watchface.editor.BaseEditorSession: kotlinx.coroutines.CoroutineScope getCoroutineScope()>();

        staticinvoke <kotlinx.coroutines.CoroutineScopeKt: void cancel$default(kotlinx.coroutines.CoroutineScope,java.util.concurrent.CancellationException,int,java.lang.Object)>($r9, null, 1, null);

        $r10 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r10;

     label8:
        $r16 = new java.lang.IllegalStateException;

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r16;

        catch kotlinx.coroutines.TimeoutCancellationException from label2 to label3 with label6;
        catch kotlinx.coroutines.TimeoutCancellationException from label4 to label5 with label6;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.editor.BaseEditorSession$close$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r5;
        androidx.wear.watchface.editor.BaseEditorSession $r4;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$close$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.wear.watchface.editor.BaseEditorSession$close$1;

        $r4 = r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1: androidx.wear.watchface.editor.BaseEditorSession this$0>;

        specialinvoke $r3.<androidx.wear.watchface.editor.BaseEditorSession$close$1: void <init>(androidx.wear.watchface.editor.BaseEditorSession,kotlin.coroutines.Continuation)>($r4, $r2);

        $r5 = (kotlin.coroutines.Continuation) $r3;

        return $r5;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.editor.BaseEditorSession$close$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$close$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.wear.watchface.editor.BaseEditorSession$close$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.wear.watchface.editor.BaseEditorSession$close$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.wear.watchface.editor.BaseEditorSession$close$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$close$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.wear.watchface.editor.BaseEditorSession$close$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1$onClose$1
<androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1$onClose$1: int label>
<androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1$onClose$1: androidx.wear.watchface.editor.BaseEditorSession this$0>
    void <init>(androidx.wear.watchface.editor.BaseEditorSession, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1$onClose$1 r0;
        androidx.wear.watchface.editor.BaseEditorSession $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1$onClose$1;

        $r1 := @parameter0: androidx.wear.watchface.editor.BaseEditorSession;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1$onClose$1: androidx.wear.watchface.editor.BaseEditorSession this$0> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1$onClose$1 r0;
        java.lang.Object $r1, r2;
        int $i0;
        androidx.wear.watchface.editor.BaseEditorSession $r3;
        kotlin.Unit $r4;
        java.lang.IllegalStateException $r5;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1$onClose$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1$onClose$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            default: goto label2;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r3 = r0.<androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1$onClose$1: androidx.wear.watchface.editor.BaseEditorSession this$0>;

        virtualinvoke $r3.<androidx.wear.watchface.editor.BaseEditorSession: void forceClose$wear_watchface_editor_release()>();

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;

     label2:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r5;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1$onClose$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r5;
        androidx.wear.watchface.editor.BaseEditorSession $r4;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1$onClose$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1$onClose$1;

        $r4 = r0.<androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1$onClose$1: androidx.wear.watchface.editor.BaseEditorSession this$0>;

        specialinvoke $r3.<androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1$onClose$1: void <init>(androidx.wear.watchface.editor.BaseEditorSession,kotlin.coroutines.Continuation)>($r4, $r2);

        $r5 = (kotlin.coroutines.Continuation) $r3;

        return $r5;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1$onClose$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1$onClose$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1$onClose$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1$onClose$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1$onClose$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1$onClose$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1$onClose$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1$onClose$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1
<androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1: androidx.wear.watchface.editor.BaseEditorSession this$0>
    void <init>(androidx.wear.watchface.editor.BaseEditorSession)
    {
        androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1 r0;
        androidx.wear.watchface.editor.BaseEditorSession $r1;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1;

        $r1 := @parameter0: androidx.wear.watchface.editor.BaseEditorSession;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1: androidx.wear.watchface.editor.BaseEditorSession this$0> = $r1;

        specialinvoke r0.<androidx.wear.watchface.editor.EditorService$CloseCallback: void <init>()>();

        return;
    }

    public void onClose()
    {
        androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1 r0;
        androidx.wear.watchface.editor.BaseEditorSession $r1, $r4;
        kotlinx.coroutines.CoroutineScope $r2;
        androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1$onClose$1 $r3;
        kotlin.jvm.functions.Function2 $r5;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1;

        $r1 = r0.<androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1: androidx.wear.watchface.editor.BaseEditorSession this$0>;

        $r2 = virtualinvoke $r1.<androidx.wear.watchface.editor.BaseEditorSession: kotlinx.coroutines.CoroutineScope getCoroutineScope()>();

        $r3 = new androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1$onClose$1;

        $r4 = r0.<androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1: androidx.wear.watchface.editor.BaseEditorSession this$0>;

        specialinvoke $r3.<androidx.wear.watchface.editor.BaseEditorSession$closeCallback$1$onClose$1: void <init>(androidx.wear.watchface.editor.BaseEditorSession,kotlin.coroutines.Continuation)>($r4, null);

        $r5 = (kotlin.jvm.functions.Function2) $r3;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r2, null, null, $r5, 3, null);

        return;
    }

androidx.wear.watchface.editor.BaseEditorSession$Companion
    private void <init>()
    {
        androidx.wear.watchface.editor.BaseEditorSession$Companion r0;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.wear.watchface.editor.BaseEditorSession$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.wear.watchface.editor.BaseEditorSession$Companion: void <init>()>();

        return;
    }

androidx.wear.watchface.editor.BaseEditorSession$complicationSlotsStateDelegate$1
<androidx.wear.watchface.editor.BaseEditorSession$complicationSlotsStateDelegate$1: androidx.wear.watchface.editor.BaseEditorSession this$0>
    void <init>(androidx.wear.watchface.editor.BaseEditorSession)
    {
        androidx.wear.watchface.editor.BaseEditorSession$complicationSlotsStateDelegate$1 r0;
        androidx.wear.watchface.editor.BaseEditorSession $r1;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$complicationSlotsStateDelegate$1;

        $r1 := @parameter0: androidx.wear.watchface.editor.BaseEditorSession;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$complicationSlotsStateDelegate$1: androidx.wear.watchface.editor.BaseEditorSession this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final kotlinx.coroutines.flow.MutableStateFlow invoke()
    {
        androidx.wear.watchface.editor.BaseEditorSession$complicationSlotsStateDelegate$1 r0;
        androidx.wear.watchface.editor.BaseEditorSession $r1;
        java.util.Map $r2;
        kotlinx.coroutines.flow.MutableStateFlow $r3;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$complicationSlotsStateDelegate$1;

        $r1 = r0.<androidx.wear.watchface.editor.BaseEditorSession$complicationSlotsStateDelegate$1: androidx.wear.watchface.editor.BaseEditorSession this$0>;

        $r2 = virtualinvoke $r1.<androidx.wear.watchface.editor.BaseEditorSession: java.util.Map fetchComplicationSlotsState$wear_watchface_editor_release()>();

        $r3 = staticinvoke <kotlinx.coroutines.flow.StateFlowKt: kotlinx.coroutines.flow.MutableStateFlow MutableStateFlow(java.lang.Object)>($r2);

        return $r3;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.wear.watchface.editor.BaseEditorSession$complicationSlotsStateDelegate$1 r0;
        kotlinx.coroutines.flow.MutableStateFlow $r1;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$complicationSlotsStateDelegate$1;

        $r1 = virtualinvoke r0.<androidx.wear.watchface.editor.BaseEditorSession$complicationSlotsStateDelegate$1: kotlinx.coroutines.flow.MutableStateFlow invoke()>();

        return $r1;
    }

androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1$2$1
<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1$2$1: int label>
<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1$2$1: androidx.wear.watchface.editor.BaseEditorSession this$0>
<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1$2$1: androidx.wear.complications.ComplicationDataSourceInfoRetriever $complicationDataSourceInfoRetriever>
<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1$2$1: androidx.wear.complications.ComplicationDataSourceInfoRetriever$Result $it>
    void <init>(androidx.wear.watchface.editor.BaseEditorSession, androidx.wear.complications.ComplicationDataSourceInfoRetriever, androidx.wear.complications.ComplicationDataSourceInfoRetriever$Result, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1$2$1 r0;
        androidx.wear.watchface.editor.BaseEditorSession $r1;
        androidx.wear.complications.ComplicationDataSourceInfoRetriever $r2;
        androidx.wear.complications.ComplicationDataSourceInfoRetriever$Result $r3;
        kotlin.coroutines.Continuation $r4;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1$2$1;

        $r1 := @parameter0: androidx.wear.watchface.editor.BaseEditorSession;

        $r2 := @parameter1: androidx.wear.complications.ComplicationDataSourceInfoRetriever;

        $r3 := @parameter2: androidx.wear.complications.ComplicationDataSourceInfoRetriever$Result;

        $r4 := @parameter3: kotlin.coroutines.Continuation;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1$2$1: androidx.wear.watchface.editor.BaseEditorSession this$0> = $r1;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1$2$1: androidx.wear.complications.ComplicationDataSourceInfoRetriever $complicationDataSourceInfoRetriever> = $r2;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1$2$1: androidx.wear.complications.ComplicationDataSourceInfoRetriever$Result $it> = $r3;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r4);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1$2$1 r0;
        java.lang.Object $r1, r2, $r9;
        int $i0;
        androidx.wear.complications.ComplicationDataSourceInfoRetriever$Result $r3;
        androidx.wear.watchface.editor.BaseEditorSession $r4;
        androidx.wear.complications.ComplicationDataSourceInfoRetriever $r5;
        androidx.wear.complications.ComplicationDataSourceInfo $r6;
        kotlin.coroutines.Continuation $r7;
        java.lang.IllegalStateException $r8;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1$2$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1$2$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1$2$1: androidx.wear.watchface.editor.BaseEditorSession this$0>;

        $r5 = r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1$2$1: androidx.wear.complications.ComplicationDataSourceInfoRetriever $complicationDataSourceInfoRetriever>;

        $r3 = r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1$2$1: androidx.wear.complications.ComplicationDataSourceInfoRetriever$Result $it>;

        $r6 = virtualinvoke $r3.<androidx.wear.complications.ComplicationDataSourceInfoRetriever$Result: androidx.wear.complications.ComplicationDataSourceInfo getInfo()>();

        $r7 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1$2$1: int label> = 1;

        $r9 = virtualinvoke $r4.<androidx.wear.watchface.editor.BaseEditorSession: java.lang.Object getPreviewData$wear_watchface_editor_release(androidx.wear.complications.ComplicationDataSourceInfoRetriever,androidx.wear.complications.ComplicationDataSourceInfo,kotlin.coroutines.Continuation)>($r5, $r6, $r7);

        if $r9 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r9 = $r1;

     label3:
        return $r9;

     label4:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r8;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1$2$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r7;
        androidx.wear.complications.ComplicationDataSourceInfoRetriever$Result $r4;
        androidx.wear.complications.ComplicationDataSourceInfoRetriever $r5;
        androidx.wear.watchface.editor.BaseEditorSession $r6;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1$2$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1$2$1;

        $r6 = r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1$2$1: androidx.wear.watchface.editor.BaseEditorSession this$0>;

        $r5 = r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1$2$1: androidx.wear.complications.ComplicationDataSourceInfoRetriever $complicationDataSourceInfoRetriever>;

        $r4 = r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1$2$1: androidx.wear.complications.ComplicationDataSourceInfoRetriever$Result $it>;

        specialinvoke $r3.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1$2$1: void <init>(androidx.wear.watchface.editor.BaseEditorSession,androidx.wear.complications.ComplicationDataSourceInfoRetriever,androidx.wear.complications.ComplicationDataSourceInfoRetriever$Result,kotlin.coroutines.Continuation)>($r6, $r5, $r4, $r2);

        $r7 = (kotlin.coroutines.Continuation) $r3;

        return $r7;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1$2$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1$2$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1$2$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1$2$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1$2$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1$2$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1$2$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1$2$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1
<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: java.lang.Object L$1>
<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: java.lang.Object L$2>
<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: java.lang.Object L$3>
<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: java.lang.Object L$4>
<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: int label>
<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: java.lang.Object L$0>
<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: androidx.wear.complications.ComplicationDataSourceInfoRetriever $complicationDataSourceInfoRetriever>
<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: androidx.wear.watchface.editor.BaseEditorSession this$0>
    void <init>(androidx.wear.complications.ComplicationDataSourceInfoRetriever, androidx.wear.watchface.editor.BaseEditorSession, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1 r0;
        androidx.wear.complications.ComplicationDataSourceInfoRetriever $r1;
        androidx.wear.watchface.editor.BaseEditorSession $r2;
        kotlin.coroutines.Continuation $r3;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1;

        $r1 := @parameter0: androidx.wear.complications.ComplicationDataSourceInfoRetriever;

        $r2 := @parameter1: androidx.wear.watchface.editor.BaseEditorSession;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: androidx.wear.complications.ComplicationDataSourceInfoRetriever $complicationDataSourceInfoRetriever> = $r1;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: androidx.wear.watchface.editor.BaseEditorSession this$0> = $r2;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r3);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1 r0;
        java.lang.Object $r1, r5, $r6, $r7, $r8, $r9, $r12, $r15, $r27, $r33, $r43, r70, r73, r75, $r77;
        androidx.wear.complications.ComplicationDataSourceInfoRetriever$Result[] r2, r44, r55;
        java.util.Map r3, $r34, r45, $r46, $r49, r54, r58, r62, r64, r67, r72, r76, r80, r81, $r82;
        androidx.wear.complications.data.ComplicationData r4, $r78, r79;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;
        boolean $z0, z3, z5, z6, z8, z9, z10, z13, z14;
        kotlin.Unit $r11;
        kotlinx.coroutines.Deferred $r13, r63;
        androidx.wear.watchface.editor.BaseEditorSession $r16, $r19, $r28, $r31, $r51;
        kotlinx.coroutines.CompletableDeferred $r17, $r20, $r48, r53, r66;
        kotlinx.coroutines.flow.MutableStateFlow $r18, $r32, $r83;
        java.util.Set $r23, $r35;
        kotlin.jvm.functions.Function2 $r25;
        androidx.wear.complications.ComplicationDataSourceInfoRetriever $r29, $r41, $r52, $r84;
        android.content.ComponentName $r30;
        java.util.Collection $r36;
        int[] $r37;
        kotlin.coroutines.Continuation $r38, r91;
        java.lang.Throwable $r40, r85;
        kotlinx.coroutines.CoroutineScope $r42;
        androidx.wear.complications.ComplicationDataSourceInfoRetriever$Result r56, r57, r60;
        java.lang.Integer r59, r61;
        java.lang.Iterable $r68;
        java.util.Iterator $r69;
        java.util.Map$Entry r71, r74;
        java.util.LinkedHashMap r86, r88;
        androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1$2$1 r87;
        androidx.wear.complications.data.EmptyComplicationData r89;
        java.lang.IllegalStateException r90;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1;

        $r1 := @parameter0: java.lang.Object;

        r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label01;
            case 1: goto label04;
            case 2: goto label14;
            default: goto label27;
        };

     label01:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r27 = r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: java.lang.Object L$0>;

        $r42 = (kotlinx.coroutines.CoroutineScope) $r27;

     label02:
        $r29 = r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: androidx.wear.complications.ComplicationDataSourceInfoRetriever $complicationDataSourceInfoRetriever>;

        $r28 = r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: androidx.wear.watchface.editor.BaseEditorSession this$0>;

        $r30 = virtualinvoke $r28.<androidx.wear.watchface.editor.BaseEditorSession: android.content.ComponentName getWatchFaceComponentName()>();

        $r31 = r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: androidx.wear.watchface.editor.BaseEditorSession this$0>;

        $r32 = virtualinvoke $r31.<androidx.wear.watchface.editor.BaseEditorSession: kotlinx.coroutines.flow.MutableStateFlow getComplicationSlotsState()>();

        $r33 = interfaceinvoke $r32.<kotlinx.coroutines.flow.MutableStateFlow: java.lang.Object getValue()>();

        $r34 = (java.util.Map) $r33;

        $r35 = interfaceinvoke $r34.<java.util.Map: java.util.Set keySet()>();

        $r36 = (java.util.Collection) $r35;

        $r37 = staticinvoke <kotlin.collections.CollectionsKt: int[] toIntArray(java.util.Collection)>($r36);

        $r38 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: java.lang.Object L$0> = $r42;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: int label> = 1;

        $r43 = virtualinvoke $r29.<androidx.wear.complications.ComplicationDataSourceInfoRetriever: java.lang.Object retrieveComplicationDataSourceInfo(android.content.ComponentName,int[],kotlin.coroutines.Continuation)>($r30, $r37, $r38);

     label03:
        if $r43 != r5 goto label06;

        return r5;

     label04:
        $r15 = r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: java.lang.Object L$0>;

        $r42 = (kotlinx.coroutines.CoroutineScope) $r15;

     label05:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r43 = $r1;

     label06:
        r44 = (androidx.wear.complications.ComplicationDataSourceInfoRetriever$Result[]) $r43;

        $r16 = r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: androidx.wear.watchface.editor.BaseEditorSession this$0>;

        $r17 = staticinvoke <androidx.wear.watchface.editor.BaseEditorSession: kotlinx.coroutines.CompletableDeferred access$getDeferredComplicationsDataSourceInfoMapFlow$p(androidx.wear.watchface.editor.BaseEditorSession)>($r16);

        r45 = staticinvoke <androidx.wear.watchface.editor.EditorSessionKt: java.util.Map extractComplicationsDataSourceInfoMap(androidx.wear.complications.ComplicationDataSourceInfoRetriever$Result[])>(r44);

        if r45 != null goto label07;

        $r46 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

        goto label08;

     label07:
        $r46 = r45;

     label08:
        $r18 = staticinvoke <kotlinx.coroutines.flow.StateFlowKt: kotlinx.coroutines.flow.MutableStateFlow MutableStateFlow(java.lang.Object)>($r46);

        interfaceinvoke $r17.<kotlinx.coroutines.CompletableDeferred: boolean complete(java.lang.Object)>($r18);

        $r19 = r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: androidx.wear.watchface.editor.BaseEditorSession this$0>;

        $r20 = virtualinvoke $r19.<androidx.wear.watchface.editor.BaseEditorSession: kotlinx.coroutines.CompletableDeferred getDeferredComplicationPreviewDataMapFlow$wear_watchface_editor_release()>();

        $r48 = $r20;

        r2 = r44;

        if r2 != null goto label09;

        $r49 = null;

        goto label20;

     label09:
        $r51 = r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: androidx.wear.watchface.editor.BaseEditorSession this$0>;

        $r52 = r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: androidx.wear.complications.ComplicationDataSourceInfoRetriever $complicationDataSourceInfoRetriever>;

        r53 = $r20;

        z3 = 0;

        $i1 = lengthof r2;

        $i2 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i1);

        i6 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i2, 16);

        r86 = new java.util.LinkedHashMap;

        specialinvoke r86.<java.util.LinkedHashMap: void <init>(int)>(i6);

        r54 = (java.util.Map) r86;

        r55 = r2;

        i7 = lengthof r55;

        i8 = 0;

     label10:
        if i8 >= i7 goto label11;

        r56 = r55[i8];

        r57 = r56;

        r58 = r54;

        z5 = 0;

        $i5 = virtualinvoke r57.<androidx.wear.complications.ComplicationDataSourceInfoRetriever$Result: int getSlotId()>();

        r59 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Integer boxInt(int)>($i5);

        r60 = r56;

        r61 = r59;

        r62 = r58;

        z6 = 0;

        r87 = new androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1$2$1;

        specialinvoke r87.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1$2$1: void <init>(androidx.wear.watchface.editor.BaseEditorSession,androidx.wear.complications.ComplicationDataSourceInfoRetriever,androidx.wear.complications.ComplicationDataSourceInfoRetriever$Result,kotlin.coroutines.Continuation)>($r51, $r52, r60, null);

        $r25 = (kotlin.jvm.functions.Function2) r87;

        r63 = staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Deferred async$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r42, null, null, $r25, 3, null);

        interfaceinvoke r62.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r61, r63);

        i8 = i8 + 1;

        goto label10;

     label11:
        r64 = r54;

        r3 = r64;

        r66 = r53;

        r88 = new java.util.LinkedHashMap;

        $i3 = interfaceinvoke r3.<java.util.Map: int size()>();

        $i4 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i3);

        specialinvoke r88.<java.util.LinkedHashMap: void <init>(int)>($i4);

        r67 = (java.util.Map) r88;

        z8 = 0;

        $r23 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>();

        $r68 = (java.lang.Iterable) $r23;

        z9 = 0;

        $r69 = interfaceinvoke $r68.<java.lang.Iterable: java.util.Iterator iterator()>();

     label12:
        $z0 = interfaceinvoke $r69.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label19;

        r70 = interfaceinvoke $r69.<java.util.Iterator: java.lang.Object next()>();

        r71 = (java.util.Map$Entry) r70;

        r72 = r67;

        z10 = 0;

        r73 = interfaceinvoke r71.<java.util.Map$Entry: java.lang.Object getKey()>();

        r74 = (java.util.Map$Entry) r70;

        r75 = r73;

        r76 = r72;

        $r12 = interfaceinvoke r74.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (kotlinx.coroutines.Deferred) $r12;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: java.lang.Object L$0> = r67;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: java.lang.Object L$1> = $r69;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: java.lang.Object L$2> = r66;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: java.lang.Object L$3> = r76;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: java.lang.Object L$4> = r75;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: int label> = 2;

        r91 = (kotlin.coroutines.Continuation) r0;

        $r77 = interfaceinvoke $r13.<kotlinx.coroutines.Deferred: java.lang.Object await(kotlin.coroutines.Continuation)>(r91);

     label13:
        if $r77 != r5 goto label16;

        return r5;

     label14:
        z13 = 0;

        z14 = 0;

        r75 = r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: java.lang.Object L$4>;

        $r6 = r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: java.lang.Object L$3>;

        r76 = (java.util.Map) $r6;

        $r7 = r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: java.lang.Object L$2>;

        r66 = (kotlinx.coroutines.CompletableDeferred) $r7;

        $r8 = r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: java.lang.Object L$1>;

        $r69 = (java.util.Iterator) $r8;

        $r9 = r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: java.lang.Object L$0>;

        r67 = (java.util.Map) $r9;

     label15:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r77 = $r1;

     label16:
        r4 = (androidx.wear.complications.data.ComplicationData) $r77;

        if r4 != null goto label17;

        r89 = new androidx.wear.complications.data.EmptyComplicationData;

        specialinvoke r89.<androidx.wear.complications.data.EmptyComplicationData: void <init>()>();

        $r78 = (androidx.wear.complications.data.ComplicationData) r89;

        goto label18;

     label17:
        $r78 = r4;

     label18:
        r79 = $r78;

        interfaceinvoke r76.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r75, r79);

        goto label12;

     label19:
        r80 = r67;

        $r48 = r66;

        $r49 = r80;

     label20:
        r81 = $r49;

        if r81 != null goto label21;

        $r82 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

        goto label22;

     label21:
        $r82 = r81;

     label22:
        $r83 = staticinvoke <kotlinx.coroutines.flow.StateFlowKt: kotlinx.coroutines.flow.MutableStateFlow MutableStateFlow(java.lang.Object)>($r82);

        interfaceinvoke $r48.<kotlinx.coroutines.CompletableDeferred: boolean complete(java.lang.Object)>($r83);

     label23:
        $r84 = r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: androidx.wear.complications.ComplicationDataSourceInfoRetriever $complicationDataSourceInfoRetriever>;

        virtualinvoke $r84.<androidx.wear.complications.ComplicationDataSourceInfoRetriever: void close()>();

        goto label26;

     label24:
        $r40 := @caughtexception;

        r85 = $r40;

     label25:
        $r41 = r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: androidx.wear.complications.ComplicationDataSourceInfoRetriever $complicationDataSourceInfoRetriever>;

        virtualinvoke $r41.<androidx.wear.complications.ComplicationDataSourceInfoRetriever: void close()>();

        throw r85;

     label26:
        $r11 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r11;

     label27:
        r90 = new java.lang.IllegalStateException;

        specialinvoke r90.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r90;

        catch java.lang.Throwable from label02 to label03 with label24;
        catch java.lang.Throwable from label05 to label13 with label24;
        catch java.lang.Throwable from label15 to label23 with label24;
        catch java.lang.Throwable from label24 to label25 with label24;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1 r0, r3, $r4;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r7;
        androidx.wear.watchface.editor.BaseEditorSession $r5;
        androidx.wear.complications.ComplicationDataSourceInfoRetriever $r6;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = new androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1;

        $r6 = r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: androidx.wear.complications.ComplicationDataSourceInfoRetriever $complicationDataSourceInfoRetriever>;

        $r5 = r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: androidx.wear.watchface.editor.BaseEditorSession this$0>;

        specialinvoke $r4.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: void <init>(androidx.wear.complications.ComplicationDataSourceInfoRetriever,androidx.wear.watchface.editor.BaseEditorSession,kotlin.coroutines.Continuation)>($r6, $r5, $r2);

        r3 = $r4;

        r3.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: java.lang.Object L$0> = r1;

        $r7 = (kotlin.coroutines.Continuation) r3;

        return $r7;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.wear.watchface.editor.BaseEditorSession$fetchComplicationsData$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.wear.watchface.editor.BaseEditorSession$getPreviewData$1
<androidx.wear.watchface.editor.BaseEditorSession$getPreviewData$1: java.lang.Object L$0>
<androidx.wear.watchface.editor.BaseEditorSession$getPreviewData$1: java.lang.Object L$1>
<androidx.wear.watchface.editor.BaseEditorSession$getPreviewData$1: java.lang.Object L$2>
<androidx.wear.watchface.editor.BaseEditorSession$getPreviewData$1: java.lang.Object result>
<androidx.wear.watchface.editor.BaseEditorSession$getPreviewData$1: androidx.wear.watchface.editor.BaseEditorSession this$0>
<androidx.wear.watchface.editor.BaseEditorSession$getPreviewData$1: int label>
    void <init>(androidx.wear.watchface.editor.BaseEditorSession, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.editor.BaseEditorSession$getPreviewData$1 r0;
        androidx.wear.watchface.editor.BaseEditorSession r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$getPreviewData$1;

        r1 := @parameter0: androidx.wear.watchface.editor.BaseEditorSession;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$getPreviewData$1: androidx.wear.watchface.editor.BaseEditorSession this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.wear.watchface.editor.BaseEditorSession$getPreviewData$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.wear.watchface.editor.BaseEditorSession $r3;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$getPreviewData$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$getPreviewData$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.wear.watchface.editor.BaseEditorSession$getPreviewData$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$getPreviewData$1: int label> = $i1;

        $r3 = r0.<androidx.wear.watchface.editor.BaseEditorSession$getPreviewData$1: androidx.wear.watchface.editor.BaseEditorSession this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.wear.watchface.editor.BaseEditorSession: java.lang.Object getPreviewData$wear_watchface_editor_release(androidx.wear.complications.ComplicationDataSourceInfoRetriever,androidx.wear.complications.ComplicationDataSourceInfo,kotlin.coroutines.Continuation)>(null, null, $r2);

        return $r4;
    }

androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1
<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$0>
<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$1>
<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$2>
<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$3>
<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$4>
<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object L$5>
<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: int I$0>
<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object result>
<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: androidx.wear.watchface.editor.BaseEditorSession this$0>
<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: int label>
    void <init>(androidx.wear.watchface.editor.BaseEditorSession, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1 r0;
        androidx.wear.watchface.editor.BaseEditorSession r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1;

        r1 := @parameter0: androidx.wear.watchface.editor.BaseEditorSession;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: androidx.wear.watchface.editor.BaseEditorSession this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.wear.watchface.editor.BaseEditorSession $r3;

        r0 := @this: androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: int label> = $i1;

        $r3 = r0.<androidx.wear.watchface.editor.BaseEditorSession$openComplicationDataSourceChooser$1: androidx.wear.watchface.editor.BaseEditorSession this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = staticinvoke <androidx.wear.watchface.editor.BaseEditorSession: java.lang.Object openComplicationDataSourceChooser$suspendImpl(androidx.wear.watchface.editor.BaseEditorSession,int,kotlin.coroutines.Continuation)>($r3, 0, $r2);

        return $r4;
    }

