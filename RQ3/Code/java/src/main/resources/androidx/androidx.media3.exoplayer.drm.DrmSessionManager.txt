androidx.media3.exoplayer.drm.DrmSessionManager
<androidx.media3.exoplayer.drm.DrmSessionManager: androidx.media3.exoplayer.drm.DrmSessionManager DRM_UNSUPPORTED>
<androidx.media3.exoplayer.drm.DrmSessionManager: androidx.media3.exoplayer.drm.DrmSessionManager DUMMY>
    public static androidx.media3.exoplayer.drm.DrmSessionManager getDummyDrmSessionManager()
    {
        androidx.media3.exoplayer.drm.DrmSessionManager $r0;

        $r0 = <androidx.media3.exoplayer.drm.DrmSessionManager: androidx.media3.exoplayer.drm.DrmSessionManager DRM_UNSUPPORTED>;

        return $r0;
    }

    public void prepare()
    {
        androidx.media3.exoplayer.drm.DrmSessionManager r0;

        r0 := @this: androidx.media3.exoplayer.drm.DrmSessionManager;

        return;
    }

    public void release()
    {
        androidx.media3.exoplayer.drm.DrmSessionManager r0;

        r0 := @this: androidx.media3.exoplayer.drm.DrmSessionManager;

        return;
    }

<androidx.media3.exoplayer.drm.DrmSessionManager: void setPlayer(android.os.Looper,androidx.media3.exoplayer.analytics.PlayerId)>
    public androidx.media3.exoplayer.drm.DrmSessionManager$DrmSessionReference preacquireSession(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher, androidx.media3.common.Format)
    {
        androidx.media3.exoplayer.drm.DrmSessionManager r0;
        androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher r1;
        androidx.media3.common.Format r2;
        androidx.media3.exoplayer.drm.DrmSessionManager$DrmSessionReference $r3;

        r0 := @this: androidx.media3.exoplayer.drm.DrmSessionManager;

        r1 := @parameter0: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher;

        r2 := @parameter1: androidx.media3.common.Format;

        $r3 = <androidx.media3.exoplayer.drm.DrmSessionManager$DrmSessionReference: androidx.media3.exoplayer.drm.DrmSessionManager$DrmSessionReference EMPTY>;

        return $r3;
    }

<androidx.media3.exoplayer.drm.DrmSessionManager: androidx.media3.exoplayer.drm.DrmSession acquireSession(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,androidx.media3.common.Format)>
<androidx.media3.exoplayer.drm.DrmSessionManager: int getCryptoType(androidx.media3.common.Format)>
    static void <clinit>()
    {
        androidx.media3.exoplayer.drm.DrmSessionManager$1 $r0;
        androidx.media3.exoplayer.drm.DrmSessionManager $r1;

        $r0 = new androidx.media3.exoplayer.drm.DrmSessionManager$1;

        specialinvoke $r0.<androidx.media3.exoplayer.drm.DrmSessionManager$1: void <init>()>();

        <androidx.media3.exoplayer.drm.DrmSessionManager: androidx.media3.exoplayer.drm.DrmSessionManager DRM_UNSUPPORTED> = $r0;

        $r1 = <androidx.media3.exoplayer.drm.DrmSessionManager: androidx.media3.exoplayer.drm.DrmSessionManager DRM_UNSUPPORTED>;

        <androidx.media3.exoplayer.drm.DrmSessionManager: androidx.media3.exoplayer.drm.DrmSessionManager DUMMY> = $r1;

        return;
    }

androidx.media3.exoplayer.drm.DrmSessionManager$1
    void <init>()
    {
        androidx.media3.exoplayer.drm.DrmSessionManager$1 r0;

        r0 := @this: androidx.media3.exoplayer.drm.DrmSessionManager$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void setPlayer(android.os.Looper, androidx.media3.exoplayer.analytics.PlayerId)
    {
        androidx.media3.exoplayer.drm.DrmSessionManager$1 r0;
        android.os.Looper r1;
        androidx.media3.exoplayer.analytics.PlayerId r2;

        r0 := @this: androidx.media3.exoplayer.drm.DrmSessionManager$1;

        r1 := @parameter0: android.os.Looper;

        r2 := @parameter1: androidx.media3.exoplayer.analytics.PlayerId;

        return;
    }

    public androidx.media3.exoplayer.drm.DrmSession acquireSession(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher, androidx.media3.common.Format)
    {
        androidx.media3.exoplayer.drm.DrmSessionManager$1 r0;
        androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher r1;
        androidx.media3.common.Format r2;
        androidx.media3.common.DrmInitData $r3;
        androidx.media3.exoplayer.drm.UnsupportedDrmException r7;
        androidx.media3.exoplayer.drm.DrmSession$DrmSessionException r8;
        androidx.media3.exoplayer.drm.ErrorStateDrmSession r9;
        java.lang.Throwable r10;

        r0 := @this: androidx.media3.exoplayer.drm.DrmSessionManager$1;

        r1 := @parameter0: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher;

        r2 := @parameter1: androidx.media3.common.Format;

        $r3 = r2.<androidx.media3.common.Format: androidx.media3.common.DrmInitData drmInitData>;

        if $r3 != null goto label1;

        return null;

     label1:
        r9 = new androidx.media3.exoplayer.drm.ErrorStateDrmSession;

        r8 = new androidx.media3.exoplayer.drm.DrmSession$DrmSessionException;

        r7 = new androidx.media3.exoplayer.drm.UnsupportedDrmException;

        specialinvoke r7.<androidx.media3.exoplayer.drm.UnsupportedDrmException: void <init>(int)>(1);

        r10 = (java.lang.Throwable) r7;

        specialinvoke r8.<androidx.media3.exoplayer.drm.DrmSession$DrmSessionException: void <init>(java.lang.Throwable,int)>(r10, 6001);

        specialinvoke r9.<androidx.media3.exoplayer.drm.ErrorStateDrmSession: void <init>(androidx.media3.exoplayer.drm.DrmSession$DrmSessionException)>(r8);

        return r9;
    }

    public int getCryptoType(androidx.media3.common.Format)
    {
        androidx.media3.exoplayer.drm.DrmSessionManager$1 r0;
        androidx.media3.common.Format r1;
        androidx.media3.common.DrmInitData $r2;
        byte $b0;

        r0 := @this: androidx.media3.exoplayer.drm.DrmSessionManager$1;

        r1 := @parameter0: androidx.media3.common.Format;

        $r2 = r1.<androidx.media3.common.Format: androidx.media3.common.DrmInitData drmInitData>;

        if $r2 == null goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        return $b0;
    }

androidx.media3.exoplayer.drm.DrmSessionManager$DrmSessionReference
<androidx.media3.exoplayer.drm.DrmSessionManager$DrmSessionReference: androidx.media3.exoplayer.drm.DrmSessionManager$DrmSessionReference EMPTY>
<androidx.media3.exoplayer.drm.DrmSessionManager$DrmSessionReference: void release()>
    private static void lambda$static$0()
    {
        return;
    }

    static void <clinit>()
    {
        androidx.media3.exoplayer.drm.DrmSessionManager$DrmSessionReference $r0;

        $r0 = dynamicinvoke "release" <androidx.media3.exoplayer.drm.DrmSessionManager$DrmSessionReference ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.exoplayer.drm.DrmSessionManager$DrmSessionReference: void lambda$static$0()>, methodtype: void __METHODTYPE__());

        <androidx.media3.exoplayer.drm.DrmSessionManager$DrmSessionReference: androidx.media3.exoplayer.drm.DrmSessionManager$DrmSessionReference EMPTY> = $r0;

        return;
    }

