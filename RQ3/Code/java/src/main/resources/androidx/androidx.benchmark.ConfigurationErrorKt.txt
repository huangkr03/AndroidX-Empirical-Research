androidx.benchmark.ConfigurationErrorKt
    public static final androidx.benchmark.ConfigurationError conditionalError(boolean, java.lang.String, java.lang.String, java.lang.String)
    {
        boolean z0;
        java.lang.String r0, r1, r2;
        androidx.benchmark.ConfigurationError$Companion $r3;
        androidx.benchmark.ConfigurationError $r4;

        z0 := @parameter0: boolean;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "id");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "summary");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "message");

        $r3 = <androidx.benchmark.ConfigurationError: androidx.benchmark.ConfigurationError$Companion Companion>;

        virtualinvoke $r3.<androidx.benchmark.ConfigurationError$Companion: void validateParams$benchmark_common_release(java.lang.String,java.lang.String)>(r0, r1);

        if z0 == 0 goto label1;

        $r4 = new androidx.benchmark.ConfigurationError;

        specialinvoke $r4.<androidx.benchmark.ConfigurationError: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r0, r1, r2);

        goto label2;

     label1:
        $r4 = null;

     label2:
        return $r4;
    }

    public static final java.lang.String prettyPrint(java.util.List, java.lang.String)
    {
        java.util.List $r0;
        java.lang.String r1, $r6;
        androidx.benchmark.ConfigurationErrorKt$prettyPrint$1 $r2;
        java.lang.Iterable $r3;
        java.lang.CharSequence $r4;
        kotlin.jvm.functions.Function1 $r5;

        $r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "prefix");

        $r3 = (java.lang.Iterable) $r0;

        $r4 = (java.lang.CharSequence) "\n";

        $r2 = new androidx.benchmark.ConfigurationErrorKt$prettyPrint$1;

        specialinvoke $r2.<androidx.benchmark.ConfigurationErrorKt$prettyPrint$1: void <init>(java.lang.String)>(r1);

        $r5 = (kotlin.jvm.functions.Function1) $r2;

        $r6 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r3, $r4, null, null, 0, null, $r5, 30, null);

        return $r6;
    }

    public static final androidx.benchmark.ConfigurationError$SuppressionState checkAndGetSuppressionState(java.util.List, java.util.Set)
    {
        java.util.List $r0, $r49, $r50;
        java.util.Set r1;
        kotlin.Pair r2, $r6;
        androidx.benchmark.ConfigurationError r3;
        java.util.ArrayList $r4, $r5, r45, r46;
        java.lang.Object $r7, $r8, r48;
        androidx.benchmark.ConfigurationErrorKt$checkAndGetSuppressionState$prefix$1 $r9;
        kotlin.jvm.functions.Function1 $r10, $r15, $r19, $r23;
        java.lang.CharSequence $r11, $r16, $r20, $r24;
        java.lang.Iterable $r12, $r17, $r21, $r25, $r44;
        java.lang.String $r13, $r28, $r36, $r41, $r42, $r43, r51, r52, r53, r54;
        androidx.benchmark.ConfigurationErrorKt$checkAndGetSuppressionState$unsuppressedString$1 $r14;
        androidx.benchmark.ConfigurationErrorKt$checkAndGetSuppressionState$suppressedString$1 $r18;
        androidx.benchmark.ConfigurationErrorKt$checkAndGetSuppressionState$howToSuppressString$1 $r22;
        java.util.Collection $r26;
        boolean $z1, $z2, $z3, $z7, $z8;
        androidx.benchmark.ConfigurationError$SuppressionState $r27;
        java.lang.AssertionError $r29;
        java.lang.StringBuilder $r30, $r31, $r32, $r33, $r34, $r35, $r37, $r38, $r39, $r40;
        java.util.Iterator r47;

        $r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.Set;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "suppressedErrorIds");

        $r44 = (java.lang.Iterable) $r0;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r45 = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r46 = $r5;

        r47 = interfaceinvoke $r44.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z7 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label3;

        r48 = interfaceinvoke r47.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.benchmark.ConfigurationError) r48;

        $r43 = virtualinvoke r3.<androidx.benchmark.ConfigurationError: java.lang.String getId()>();

        $z3 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>($r43);

        if $z3 == 0 goto label2;

        virtualinvoke r45.<java.util.ArrayList: boolean add(java.lang.Object)>(r48);

        goto label1;

     label2:
        virtualinvoke r46.<java.util.ArrayList: boolean add(java.lang.Object)>(r48);

        goto label1;

     label3:
        $r6 = new kotlin.Pair;

        specialinvoke $r6.<kotlin.Pair: void <init>(java.lang.Object,java.lang.Object)>(r45, r46);

        r2 = $r6;

        $r7 = virtualinvoke r2.<kotlin.Pair: java.lang.Object component1()>();

        $r49 = (java.util.List) $r7;

        $r8 = virtualinvoke r2.<kotlin.Pair: java.lang.Object component2()>();

        $r50 = (java.util.List) $r8;

        $r12 = (java.lang.Iterable) $r49;

        $r11 = (java.lang.CharSequence) "_";

        $r9 = <androidx.benchmark.ConfigurationErrorKt$checkAndGetSuppressionState$prefix$1: androidx.benchmark.ConfigurationErrorKt$checkAndGetSuppressionState$prefix$1 INSTANCE>;

        $r10 = (kotlin.jvm.functions.Function1) $r9;

        $r13 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r12, $r11, null, null, 0, null, $r10, 30, null);

        r51 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>($r13, "_");

        $r17 = (java.lang.Iterable) $r50;

        $r16 = (java.lang.CharSequence) " ";

        $r14 = <androidx.benchmark.ConfigurationErrorKt$checkAndGetSuppressionState$unsuppressedString$1: androidx.benchmark.ConfigurationErrorKt$checkAndGetSuppressionState$unsuppressedString$1 INSTANCE>;

        $r15 = (kotlin.jvm.functions.Function1) $r14;

        r52 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r17, $r16, null, null, 0, null, $r15, 30, null);

        $r21 = (java.lang.Iterable) $r49;

        $r20 = (java.lang.CharSequence) " ";

        $r18 = <androidx.benchmark.ConfigurationErrorKt$checkAndGetSuppressionState$suppressedString$1: androidx.benchmark.ConfigurationErrorKt$checkAndGetSuppressionState$suppressedString$1 INSTANCE>;

        $r19 = (kotlin.jvm.functions.Function1) $r18;

        r53 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r21, $r20, null, null, 0, null, $r19, 30, null);

        $r25 = (java.lang.Iterable) $r0;

        $r24 = (java.lang.CharSequence) ",";

        $r22 = <androidx.benchmark.ConfigurationErrorKt$checkAndGetSuppressionState$howToSuppressString$1: androidx.benchmark.ConfigurationErrorKt$checkAndGetSuppressionState$howToSuppressString$1 INSTANCE>;

        $r23 = (kotlin.jvm.functions.Function1) $r22;

        r54 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r25, $r24, null, null, 0, null, $r23, 30, null);

        $r26 = (java.util.Collection) $r50;

        $z1 = interfaceinvoke $r26.<java.util.Collection: boolean isEmpty()>();

        if $z1 != 0 goto label4;

        $z8 = 1;

        goto label5;

     label4:
        $z8 = 0;

     label5:
        if $z8 == 0 goto label6;

        $r29 = new java.lang.AssertionError;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n                |ERRORS (not suppressed): ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n                |WARNINGS (suppressed): ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r53);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n                |\n                |");

        $r36 = staticinvoke <androidx.benchmark.ConfigurationErrorKt: java.lang.String prettyPrint(java.util.List,java.lang.String)>($r50, "ERROR: ");

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n                |While you can suppress these errors (turning them into warnings)\n                |PLEASE NOTE THAT EACH SUPPRESSED ERROR COMPROMISES ACCURACY\n                |\n                |// Sample suppression, in a benchmark module\'s build.gradle:\n                |android {\n                |    defaultConfig {\n                |        testInstrumentationRunnerArguments[\"androidx.benchmark.suppressErrors\"] = \"");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r54);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"\n                |    }\n                |}\n            ");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        $r42 = staticinvoke <kotlin.text.StringsKt: java.lang.String trimMargin$default(java.lang.String,java.lang.String,int,java.lang.Object)>($r41, null, 1, null);

        specialinvoke $r29.<java.lang.AssertionError: void <init>(java.lang.Object)>($r42);

        throw $r29;

     label6:
        $z2 = interfaceinvoke $r49.<java.util.List: boolean isEmpty()>();

        if $z2 == 0 goto label7;

        return null;

     label7:
        $r27 = new androidx.benchmark.ConfigurationError$SuppressionState;

        $r28 = staticinvoke <androidx.benchmark.ConfigurationErrorKt: java.lang.String prettyPrint(java.util.List,java.lang.String)>($r49, "WARNING: ");

        specialinvoke $r27.<androidx.benchmark.ConfigurationError$SuppressionState: void <init>(java.lang.String,java.lang.String)>(r51, $r28);

        return $r27;
    }

