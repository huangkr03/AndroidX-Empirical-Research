androidx.test.espresso.intent.Intents
<androidx.test.espresso.intent.Intents: androidx.test.espresso.intent.Intents defaultInstance>
<androidx.test.espresso.intent.Intents: java.util.List recordedIntents>
<androidx.test.espresso.intent.Intents: boolean isInitialized>
<androidx.test.espresso.intent.Intents: android.app.Instrumentation instrumentation>
<androidx.test.espresso.intent.Intents: androidx.test.espresso.intent.ResettingStubber resettingStubber>
<androidx.test.espresso.intent.Intents: androidx.test.runner.intent.IntentCallback intentCallback>
<androidx.test.espresso.intent.Intents: androidx.test.runner.intent.IntentMonitor intentMonitor>
    static volatile androidx.test.espresso.intent.Intents '-$$Nest$sfgetdefaultInstance'()
    {
        androidx.test.espresso.intent.Intents $r0;

        $r0 = <androidx.test.espresso.intent.Intents: androidx.test.espresso.intent.Intents defaultInstance>;

        return $r0;
    }

    public static androidx.test.espresso.intent.OngoingStubbing intending(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0;
        androidx.test.espresso.intent.Intents $r1, $r3;
        java.lang.Object $r2;
        androidx.test.espresso.intent.OngoingStubbing $r4;

        r0 := @parameter0: org.hamcrest.Matcher;

        $r1 = <androidx.test.espresso.intent.Intents: androidx.test.espresso.intent.Intents defaultInstance>;

        $r2 = staticinvoke <androidx.test.espresso.intent.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "Intents not initialized. Did you forget to call init()?");

        $r3 = (androidx.test.espresso.intent.Intents) $r2;

        $r4 = virtualinvoke $r3.<androidx.test.espresso.intent.Intents: androidx.test.espresso.intent.OngoingStubbing internalIntending(org.hamcrest.Matcher)>(r0);

        return $r4;
    }

    androidx.test.espresso.intent.OngoingStubbing internalIntending(org.hamcrest.Matcher)
    {
        androidx.test.espresso.intent.Intents r0;
        org.hamcrest.Matcher r1;
        androidx.test.espresso.intent.OngoingStubbing $r2;
        android.app.Instrumentation $r3;
        androidx.test.espresso.intent.ResettingStubber $r4;

        r0 := @this: androidx.test.espresso.intent.Intents;

        r1 := @parameter0: org.hamcrest.Matcher;

        $r2 = new androidx.test.espresso.intent.OngoingStubbing;

        $r4 = r0.<androidx.test.espresso.intent.Intents: androidx.test.espresso.intent.ResettingStubber resettingStubber>;

        $r3 = <androidx.test.espresso.intent.Intents: android.app.Instrumentation instrumentation>;

        specialinvoke $r2.<androidx.test.espresso.intent.OngoingStubbing: void <init>(org.hamcrest.Matcher,androidx.test.espresso.intent.ResettingStubber,android.app.Instrumentation)>(r1, $r4, $r3);

        return $r2;
    }

    static volatile androidx.test.espresso.intent.ResettingStubber '-$$Nest$fgetresettingStubber'(androidx.test.espresso.intent.Intents)
    {
        androidx.test.espresso.intent.Intents r0;
        androidx.test.espresso.intent.ResettingStubber $r1;

        r0 := @parameter0: androidx.test.espresso.intent.Intents;

        $r1 = r0.<androidx.test.espresso.intent.Intents: androidx.test.espresso.intent.ResettingStubber resettingStubber>;

        return $r1;
    }

    public static androidx.test.espresso.intent.VerificationMode times(int)
    {
        int i0;
        androidx.test.espresso.intent.VerificationMode $r0;
        java.lang.IllegalArgumentException $r1;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("times expects a nonnegative integer");

        throw $r1;

     label1:
        $r0 = staticinvoke <androidx.test.espresso.intent.VerificationModes: androidx.test.espresso.intent.VerificationMode times(int)>(i0);

        return $r0;
    }

    static volatile java.util.List '-$$Nest$sfgetrecordedIntents'()
    {
        java.util.List $r0;

        $r0 = <androidx.test.espresso.intent.Intents: java.util.List recordedIntents>;

        return $r0;
    }

    public static java.util.List getIntents()
    {
        java.util.concurrent.FutureTask r0, r10;
        java.lang.Throwable r1, $r7;
        android.app.Instrumentation $r4;
        java.lang.Object $r5;
        java.util.List $r6;
        androidx.test.espresso.intent.Intents$4 r9;
        java.lang.RuntimeException r11;
        java.lang.Runnable r12;

        r10 = new java.util.concurrent.FutureTask;

        r9 = new androidx.test.espresso.intent.Intents$4;

        specialinvoke r9.<androidx.test.espresso.intent.Intents$4: void <init>()>();

        specialinvoke r10.<java.util.concurrent.FutureTask: void <init>(java.util.concurrent.Callable)>(r9);

        r0 = r10;

        $r4 = <androidx.test.espresso.intent.Intents: android.app.Instrumentation instrumentation>;

        r12 = (java.lang.Runnable) r0;

        virtualinvoke $r4.<android.app.Instrumentation: void runOnMainSync(java.lang.Runnable)>(r12);

     label1:
        $r5 = virtualinvoke r0.<java.util.concurrent.FutureTask: java.lang.Object get()>();

        $r6 = (java.util.List) $r5;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        r1 = $r7;

        r11 = new java.lang.RuntimeException;

        specialinvoke r11.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        throw r11;

        catch java.lang.InterruptedException from label1 to label2 with label3;
        catch java.util.concurrent.ExecutionException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.util.ArrayList $r0;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        <androidx.test.espresso.intent.Intents: java.util.List recordedIntents> = $r0;

        <androidx.test.espresso.intent.Intents: boolean isInitialized> = 0;

        return;
    }

    void <init>(androidx.test.espresso.intent.ResettingStubber)
    {
        androidx.test.espresso.intent.Intents r0;
        androidx.test.espresso.intent.ResettingStubber r1, $r4;
        androidx.test.espresso.intent.Intents$1 $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.test.espresso.intent.Intents;

        r1 := @parameter0: androidx.test.espresso.intent.ResettingStubber;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new androidx.test.espresso.intent.Intents$1;

        specialinvoke $r2.<androidx.test.espresso.intent.Intents$1: void <init>(androidx.test.espresso.intent.Intents)>(r0);

        r0.<androidx.test.espresso.intent.Intents: androidx.test.runner.intent.IntentCallback intentCallback> = $r2;

        $r3 = staticinvoke <androidx.test.espresso.intent.Checks: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (androidx.test.espresso.intent.ResettingStubber) $r3;

        r0.<androidx.test.espresso.intent.Intents: androidx.test.espresso.intent.ResettingStubber resettingStubber> = $r4;

        return;
    }

    public static void assertNoUnverifiedIntents()
    {
        org.hamcrest.Matcher $r0;
        androidx.test.espresso.intent.VerificationMode $r1;

        $r0 = staticinvoke <androidx.test.espresso.intent.matcher.IntentMatchers: org.hamcrest.Matcher anyIntent()>();

        $r1 = staticinvoke <androidx.test.espresso.intent.VerificationModes: androidx.test.espresso.intent.VerificationMode noUnverifiedIntents()>();

        staticinvoke <androidx.test.espresso.intent.Intents: void intended(org.hamcrest.Matcher,androidx.test.espresso.intent.VerificationMode)>($r0, $r1);

        return;
    }

    public static void init()
    {
        androidx.test.espresso.intent.ResettingStubberImpl r0, $r2;
        boolean $z0;
        androidx.test.espresso.intent.Intents $r1, $r3;

        $z0 = staticinvoke <androidx.test.runner.intent.IntentStubberRegistry: boolean isLoaded()>();

        if $z0 != 0 goto label1;

        $r2 = new androidx.test.espresso.intent.ResettingStubberImpl;

        specialinvoke $r2.<androidx.test.espresso.intent.ResettingStubberImpl: void <init>()>();

        r0 = $r2;

        staticinvoke <androidx.test.runner.intent.IntentStubberRegistry: void load(androidx.test.runner.intent.IntentStubber)>(r0);

        $r3 = new androidx.test.espresso.intent.Intents;

        specialinvoke $r3.<androidx.test.espresso.intent.Intents: void <init>(androidx.test.espresso.intent.ResettingStubber)>(r0);

        <androidx.test.espresso.intent.Intents: androidx.test.espresso.intent.Intents defaultInstance> = $r3;

     label1:
        $r1 = <androidx.test.espresso.intent.Intents: androidx.test.espresso.intent.Intents defaultInstance>;

        virtualinvoke $r1.<androidx.test.espresso.intent.Intents: void internalInit()>();

        return;
    }

    public static void intended(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0;
        androidx.test.espresso.intent.VerificationMode $r1;

        r0 := @parameter0: org.hamcrest.Matcher;

        $r1 = staticinvoke <androidx.test.espresso.intent.Intents: androidx.test.espresso.intent.VerificationMode times(int)>(1);

        staticinvoke <androidx.test.espresso.intent.Intents: void intended(org.hamcrest.Matcher,androidx.test.espresso.intent.VerificationMode)>(r0, $r1);

        return;
    }

    public static void intended(org.hamcrest.Matcher, androidx.test.espresso.intent.VerificationMode)
    {
        org.hamcrest.Matcher r0, $r8;
        androidx.test.espresso.intent.VerificationMode r1;
        android.app.Instrumentation r2;
        androidx.test.espresso.intent.Intents$PropogatingRunnable r3, $r6;
        androidx.test.espresso.intent.Intents $r4;
        boolean $z0;
        androidx.test.espresso.intent.Intents$3 $r7;
        androidx.test.espresso.ViewInteraction $r9;
        androidx.test.espresso.intent.Intents$2 $r10;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: androidx.test.espresso.intent.VerificationMode;

        $r4 = <androidx.test.espresso.intent.Intents: androidx.test.espresso.intent.Intents defaultInstance>;

        staticinvoke <androidx.test.espresso.intent.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r4, "Intents not initialized. Did you forget to call init()?");

        r2 = staticinvoke <androidx.test.platform.app.InstrumentationRegistry: android.app.Instrumentation getInstrumentation()>();

        virtualinvoke r2.<android.app.Instrumentation: void waitForIdleSync()>();

        $z0 = staticinvoke <androidx.test.espresso.intent.Intents: boolean resumedActivitiesExist(android.app.Instrumentation)>(r2);

        if $z0 == 0 goto label1;

        $r8 = staticinvoke <androidx.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher isRoot()>();

        $r9 = staticinvoke <androidx.test.espresso.Espresso: androidx.test.espresso.ViewInteraction onView(org.hamcrest.Matcher)>($r8);

        $r10 = new androidx.test.espresso.intent.Intents$2;

        specialinvoke $r10.<androidx.test.espresso.intent.Intents$2: void <init>(org.hamcrest.Matcher,androidx.test.espresso.intent.VerificationMode)>(r0, r1);

        virtualinvoke $r9.<androidx.test.espresso.ViewInteraction: androidx.test.espresso.ViewInteraction check(androidx.test.espresso.ViewAssertion)>($r10);

        goto label2;

     label1:
        $r6 = new androidx.test.espresso.intent.Intents$PropogatingRunnable;

        $r7 = new androidx.test.espresso.intent.Intents$3;

        specialinvoke $r7.<androidx.test.espresso.intent.Intents$3: void <init>(org.hamcrest.Matcher,androidx.test.espresso.intent.VerificationMode)>(r0, r1);

        specialinvoke $r6.<androidx.test.espresso.intent.Intents$PropogatingRunnable: void <init>(java.lang.Runnable)>($r7);

        r3 = $r6;

        virtualinvoke r2.<android.app.Instrumentation: void runOnMainSync(java.lang.Runnable)>(r3);

        virtualinvoke r2.<android.app.Instrumentation: void waitForIdleSync()>();

        virtualinvoke r3.<androidx.test.espresso.intent.Intents$PropogatingRunnable: void checkException()>();

     label2:
        return;
    }

    void internalInit()
    {
        androidx.test.espresso.intent.Intents r0;
        boolean $z0, $z1;
        android.app.Instrumentation $r1;
        androidx.test.runner.intent.IntentMonitor $r2, $r4;
        androidx.test.runner.intent.IntentCallback $r3;
        androidx.test.espresso.intent.ResettingStubber $r5;

        r0 := @this: androidx.test.espresso.intent.Intents;

        $z0 = <androidx.test.espresso.intent.Intents: boolean isInitialized>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.test.espresso.intent.Checks: void checkState(boolean,java.lang.Object)>($z1, "#init was called twice in a row. Make sure to call #release after every #init");

        $r1 = staticinvoke <androidx.test.platform.app.InstrumentationRegistry: android.app.Instrumentation getInstrumentation()>();

        <androidx.test.espresso.intent.Intents: android.app.Instrumentation instrumentation> = $r1;

        $r2 = staticinvoke <androidx.test.runner.intent.IntentMonitorRegistry: androidx.test.runner.intent.IntentMonitor getInstance()>();

        r0.<androidx.test.espresso.intent.Intents: androidx.test.runner.intent.IntentMonitor intentMonitor> = $r2;

        $r4 = r0.<androidx.test.espresso.intent.Intents: androidx.test.runner.intent.IntentMonitor intentMonitor>;

        $r3 = r0.<androidx.test.espresso.intent.Intents: androidx.test.runner.intent.IntentCallback intentCallback>;

        interfaceinvoke $r4.<androidx.test.runner.intent.IntentMonitor: void addIntentCallback(androidx.test.runner.intent.IntentCallback)>($r3);

        $r5 = r0.<androidx.test.espresso.intent.Intents: androidx.test.espresso.intent.ResettingStubber resettingStubber>;

        interfaceinvoke $r5.<androidx.test.espresso.intent.ResettingStubber: void initialize()>();

        <androidx.test.espresso.intent.Intents: boolean isInitialized> = 1;

        return;
    }

    void internalIntended(org.hamcrest.Matcher, androidx.test.espresso.intent.VerificationMode, java.util.List)
    {
        androidx.test.espresso.intent.Intents r0;
        org.hamcrest.Matcher r1;
        androidx.test.espresso.intent.VerificationMode r2;
        java.util.List r3;
        boolean $z0;

        r0 := @this: androidx.test.espresso.intent.Intents;

        r1 := @parameter0: org.hamcrest.Matcher;

        r2 := @parameter1: androidx.test.espresso.intent.VerificationMode;

        r3 := @parameter2: java.util.List;

        $z0 = <androidx.test.espresso.intent.Intents: boolean isInitialized>;

        staticinvoke <androidx.test.espresso.intent.Checks: void checkState(boolean,java.lang.Object)>($z0, "init() must be called prior to using this method.");

        interfaceinvoke r2.<androidx.test.espresso.intent.VerificationMode: void verify(org.hamcrest.Matcher,java.util.List)>(r1, r3);

        return;
    }

    void internalRelease()
    {
        androidx.test.espresso.intent.Intents r0;
        boolean $z0;
        androidx.test.runner.intent.IntentCallback $r1;
        androidx.test.runner.intent.IntentMonitor $r2;
        androidx.test.espresso.intent.Intents$6 $r3;
        android.app.Instrumentation $r4;

        r0 := @this: androidx.test.espresso.intent.Intents;

        $z0 = <androidx.test.espresso.intent.Intents: boolean isInitialized>;

        staticinvoke <androidx.test.espresso.intent.Checks: void checkState(boolean,java.lang.Object)>($z0, "init() must be called prior to using this method.");

        $r2 = r0.<androidx.test.espresso.intent.Intents: androidx.test.runner.intent.IntentMonitor intentMonitor>;

        $r1 = r0.<androidx.test.espresso.intent.Intents: androidx.test.runner.intent.IntentCallback intentCallback>;

        interfaceinvoke $r2.<androidx.test.runner.intent.IntentMonitor: void removeIntentCallback(androidx.test.runner.intent.IntentCallback)>($r1);

        staticinvoke <androidx.test.runner.intent.IntentStubberRegistry: void reset()>();

        $r4 = <androidx.test.espresso.intent.Intents: android.app.Instrumentation instrumentation>;

        $r3 = new androidx.test.espresso.intent.Intents$6;

        specialinvoke $r3.<androidx.test.espresso.intent.Intents$6: void <init>(androidx.test.espresso.intent.Intents)>(r0);

        virtualinvoke $r4.<android.app.Instrumentation: void runOnMainSync(java.lang.Runnable)>($r3);

        <androidx.test.espresso.intent.Intents: boolean isInitialized> = 0;

        return;
    }

    public static void release()
    {
        androidx.test.espresso.intent.Intents $r0, $r1;

        $r0 = <androidx.test.espresso.intent.Intents: androidx.test.espresso.intent.Intents defaultInstance>;

        if $r0 == null goto label1;

        $r1 = <androidx.test.espresso.intent.Intents: androidx.test.espresso.intent.Intents defaultInstance>;

        virtualinvoke $r1.<androidx.test.espresso.intent.Intents: void internalRelease()>();

     label1:
        return;
    }

    private static boolean resumedActivitiesExist(android.app.Instrumentation)
    {
        android.app.Instrumentation r0;
        java.util.concurrent.FutureTask r1, r13;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;
        java.lang.Throwable $r6, $r8, r10, r11;
        androidx.test.espresso.intent.Intents$5 r12;
        java.lang.RuntimeException r14, r15;
        java.lang.Runnable r16;

        r0 := @parameter0: android.app.Instrumentation;

        r13 = new java.util.concurrent.FutureTask;

        r12 = new androidx.test.espresso.intent.Intents$5;

        specialinvoke r12.<androidx.test.espresso.intent.Intents$5: void <init>()>();

        specialinvoke r13.<java.util.concurrent.FutureTask: void <init>(java.util.concurrent.Callable)>(r12);

        r1 = r13;

        r16 = (java.lang.Runnable) r1;

        virtualinvoke r0.<android.app.Instrumentation: void runOnMainSync(java.lang.Runnable)>(r16);

     label1:
        $r4 = virtualinvoke r1.<java.util.concurrent.FutureTask: java.lang.Object get()>();

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

     label2:
        return $z0;

     label3:
        $r8 := @caughtexception;

        r10 = $r8;

        r14 = new java.lang.RuntimeException;

        specialinvoke r14.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r10);

        throw r14;

     label4:
        $r6 := @caughtexception;

        r11 = $r6;

        r15 = new java.lang.RuntimeException;

        specialinvoke r15.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r11);

        throw r15;

        catch java.lang.InterruptedException from label1 to label2 with label3;
        catch java.util.concurrent.ExecutionException from label1 to label2 with label4;
    }

androidx.test.espresso.intent.Intents$1
<androidx.test.espresso.intent.Intents$1: androidx.test.espresso.intent.Intents this$0>
    void <init>(androidx.test.espresso.intent.Intents)
    {
        androidx.test.espresso.intent.Intents$1 r0;
        androidx.test.espresso.intent.Intents r1;

        r0 := @this: androidx.test.espresso.intent.Intents$1;

        r1 := @parameter0: androidx.test.espresso.intent.Intents;

        r0.<androidx.test.espresso.intent.Intents$1: androidx.test.espresso.intent.Intents this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onIntentSent(android.content.Intent)
    {
        androidx.test.espresso.intent.Intents$1 r0;
        android.content.Intent r1;
        java.util.List $r2;
        androidx.test.espresso.intent.VerifiableIntentImpl $r3;
        androidx.test.espresso.intent.Intents $r4;
        androidx.test.espresso.intent.ResettingStubber $r5;
        androidx.test.espresso.intent.ResettingStubberImpl $r6;
        androidx.test.espresso.intent.ResolvedIntent $r7;

        r0 := @this: androidx.test.espresso.intent.Intents$1;

        r1 := @parameter0: android.content.Intent;

        $r2 = staticinvoke <androidx.test.espresso.intent.Intents: java.util.List '-$$Nest$sfgetrecordedIntents'()>();

        $r3 = new androidx.test.espresso.intent.VerifiableIntentImpl;

        $r4 = r0.<androidx.test.espresso.intent.Intents$1: androidx.test.espresso.intent.Intents this$0>;

        $r5 = staticinvoke <androidx.test.espresso.intent.Intents: androidx.test.espresso.intent.ResettingStubber '-$$Nest$fgetresettingStubber'(androidx.test.espresso.intent.Intents)>($r4);

        $r6 = (androidx.test.espresso.intent.ResettingStubberImpl) $r5;

        $r7 = virtualinvoke $r6.<androidx.test.espresso.intent.ResettingStubberImpl: androidx.test.espresso.intent.ResolvedIntent resolveIntent(android.content.Intent)>(r1);

        specialinvoke $r3.<androidx.test.espresso.intent.VerifiableIntentImpl: void <init>(androidx.test.espresso.intent.ResolvedIntent)>($r7);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        return;
    }

androidx.test.espresso.intent.Intents$2
<androidx.test.espresso.intent.Intents$2: org.hamcrest.Matcher val$matcher>
<androidx.test.espresso.intent.Intents$2: androidx.test.espresso.intent.VerificationMode val$verificationMode>
    void <init>(org.hamcrest.Matcher, androidx.test.espresso.intent.VerificationMode)
    {
        androidx.test.espresso.intent.Intents$2 r0;
        org.hamcrest.Matcher r1;
        androidx.test.espresso.intent.VerificationMode r2;

        r0 := @this: androidx.test.espresso.intent.Intents$2;

        r1 := @parameter0: org.hamcrest.Matcher;

        r2 := @parameter1: androidx.test.espresso.intent.VerificationMode;

        r0.<androidx.test.espresso.intent.Intents$2: org.hamcrest.Matcher val$matcher> = r1;

        r0.<androidx.test.espresso.intent.Intents$2: androidx.test.espresso.intent.VerificationMode val$verificationMode> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void check(android.view.View, androidx.test.espresso.NoMatchingViewException)
    {
        androidx.test.espresso.intent.Intents$2 r0;
        android.view.View r1;
        androidx.test.espresso.NoMatchingViewException r2;
        androidx.test.espresso.intent.Intents $r3;
        org.hamcrest.Matcher $r4;
        androidx.test.espresso.intent.VerificationMode $r5;
        java.util.List $r6;

        r0 := @this: androidx.test.espresso.intent.Intents$2;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: androidx.test.espresso.NoMatchingViewException;

        $r3 = staticinvoke <androidx.test.espresso.intent.Intents: androidx.test.espresso.intent.Intents '-$$Nest$sfgetdefaultInstance'()>();

        $r4 = r0.<androidx.test.espresso.intent.Intents$2: org.hamcrest.Matcher val$matcher>;

        $r5 = r0.<androidx.test.espresso.intent.Intents$2: androidx.test.espresso.intent.VerificationMode val$verificationMode>;

        $r6 = staticinvoke <androidx.test.espresso.intent.Intents: java.util.List '-$$Nest$sfgetrecordedIntents'()>();

        virtualinvoke $r3.<androidx.test.espresso.intent.Intents: void internalIntended(org.hamcrest.Matcher,androidx.test.espresso.intent.VerificationMode,java.util.List)>($r4, $r5, $r6);

        return;
    }

androidx.test.espresso.intent.Intents$3
<androidx.test.espresso.intent.Intents$3: org.hamcrest.Matcher val$matcher>
<androidx.test.espresso.intent.Intents$3: androidx.test.espresso.intent.VerificationMode val$verificationMode>
    void <init>(org.hamcrest.Matcher, androidx.test.espresso.intent.VerificationMode)
    {
        androidx.test.espresso.intent.Intents$3 r0;
        org.hamcrest.Matcher r1;
        androidx.test.espresso.intent.VerificationMode r2;

        r0 := @this: androidx.test.espresso.intent.Intents$3;

        r1 := @parameter0: org.hamcrest.Matcher;

        r2 := @parameter1: androidx.test.espresso.intent.VerificationMode;

        r0.<androidx.test.espresso.intent.Intents$3: org.hamcrest.Matcher val$matcher> = r1;

        r0.<androidx.test.espresso.intent.Intents$3: androidx.test.espresso.intent.VerificationMode val$verificationMode> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.test.espresso.intent.Intents$3 r0;
        androidx.test.espresso.intent.Intents $r1;
        org.hamcrest.Matcher $r2;
        androidx.test.espresso.intent.VerificationMode $r3;
        java.util.List $r4;

        r0 := @this: androidx.test.espresso.intent.Intents$3;

        $r1 = staticinvoke <androidx.test.espresso.intent.Intents: androidx.test.espresso.intent.Intents '-$$Nest$sfgetdefaultInstance'()>();

        $r2 = r0.<androidx.test.espresso.intent.Intents$3: org.hamcrest.Matcher val$matcher>;

        $r3 = r0.<androidx.test.espresso.intent.Intents$3: androidx.test.espresso.intent.VerificationMode val$verificationMode>;

        $r4 = staticinvoke <androidx.test.espresso.intent.Intents: java.util.List '-$$Nest$sfgetrecordedIntents'()>();

        virtualinvoke $r1.<androidx.test.espresso.intent.Intents: void internalIntended(org.hamcrest.Matcher,androidx.test.espresso.intent.VerificationMode,java.util.List)>($r2, $r3, $r4);

        return;
    }

androidx.test.espresso.intent.Intents$4
    public volatile java.lang.Object call() throws java.lang.Exception
    {
        androidx.test.espresso.intent.Intents$4 r0;
        java.util.List $r1;

        r0 := @this: androidx.test.espresso.intent.Intents$4;

        $r1 = virtualinvoke r0.<androidx.test.espresso.intent.Intents$4: java.util.List call()>();

        return $r1;
    }

    public java.util.List call() throws java.lang.Exception
    {
        androidx.test.espresso.intent.Intents$4 r0;
        java.util.ArrayList r1, $r4;
        java.util.Iterator r2;
        androidx.test.espresso.intent.VerifiableIntent r3;
        java.util.List $r5;
        boolean $z0;
        java.lang.Object $r6;
        android.content.Intent $r7;

        r0 := @this: androidx.test.espresso.intent.Intents$4;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = $r4;

        $r5 = staticinvoke <androidx.test.espresso.intent.Intents: java.util.List '-$$Nest$sfgetrecordedIntents'()>();

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.test.espresso.intent.VerifiableIntent) $r6;

        $r7 = interfaceinvoke r3.<androidx.test.espresso.intent.VerifiableIntent: android.content.Intent getIntent()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label1;

     label2:
        return r1;
    }

    void <init>()
    {
        androidx.test.espresso.intent.Intents$4 r0;

        r0 := @this: androidx.test.espresso.intent.Intents$4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.test.espresso.intent.Intents$5
    public java.lang.Boolean call() throws java.lang.Exception
    {
        androidx.test.espresso.intent.Intents$5 r0;
        androidx.test.runner.lifecycle.ActivityLifecycleMonitor r1;
        androidx.test.runner.lifecycle.Stage $r2;
        java.util.Collection $r3;
        boolean $z0, $z1;
        java.lang.Boolean $r4;

        r0 := @this: androidx.test.espresso.intent.Intents$5;

        r1 = staticinvoke <androidx.test.runner.lifecycle.ActivityLifecycleMonitorRegistry: androidx.test.runner.lifecycle.ActivityLifecycleMonitor getInstance()>();

        $r2 = <androidx.test.runner.lifecycle.Stage: androidx.test.runner.lifecycle.Stage RESUMED>;

        $r3 = interfaceinvoke r1.<androidx.test.runner.lifecycle.ActivityLifecycleMonitor: java.util.Collection getActivitiesInStage(androidx.test.runner.lifecycle.Stage)>($r2);

        $z0 = interfaceinvoke $r3.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        return $r4;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        androidx.test.espresso.intent.Intents$5 r0;
        java.lang.Boolean $r1;

        r0 := @this: androidx.test.espresso.intent.Intents$5;

        $r1 = virtualinvoke r0.<androidx.test.espresso.intent.Intents$5: java.lang.Boolean call()>();

        return $r1;
    }

    void <init>()
    {
        androidx.test.espresso.intent.Intents$5 r0;

        r0 := @this: androidx.test.espresso.intent.Intents$5;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.test.espresso.intent.Intents$6
<androidx.test.espresso.intent.Intents$6: androidx.test.espresso.intent.Intents this$0>
    void <init>(androidx.test.espresso.intent.Intents)
    {
        androidx.test.espresso.intent.Intents$6 r0;
        androidx.test.espresso.intent.Intents r1;

        r0 := @this: androidx.test.espresso.intent.Intents$6;

        r1 := @parameter0: androidx.test.espresso.intent.Intents;

        r0.<androidx.test.espresso.intent.Intents$6: androidx.test.espresso.intent.Intents this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.test.espresso.intent.Intents$6 r0;
        java.util.List $r1;
        androidx.test.espresso.intent.Intents $r2;
        androidx.test.espresso.intent.ResettingStubber $r3;

        r0 := @this: androidx.test.espresso.intent.Intents$6;

        $r1 = staticinvoke <androidx.test.espresso.intent.Intents: java.util.List '-$$Nest$sfgetrecordedIntents'()>();

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r2 = r0.<androidx.test.espresso.intent.Intents$6: androidx.test.espresso.intent.Intents this$0>;

        $r3 = staticinvoke <androidx.test.espresso.intent.Intents: androidx.test.espresso.intent.ResettingStubber '-$$Nest$fgetresettingStubber'(androidx.test.espresso.intent.Intents)>($r2);

        interfaceinvoke $r3.<androidx.test.espresso.intent.ResettingStubber: void reset()>();

        return;
    }

androidx.test.espresso.intent.Intents$PropogatingRunnable
<androidx.test.espresso.intent.Intents$PropogatingRunnable: java.lang.Runnable delegate>
<androidx.test.espresso.intent.Intents$PropogatingRunnable: java.lang.AssertionError exception>
    public void <init>(java.lang.Runnable)
    {
        androidx.test.espresso.intent.Intents$PropogatingRunnable r0;
        java.lang.Runnable r1;

        r0 := @this: androidx.test.espresso.intent.Intents$PropogatingRunnable;

        r1 := @parameter0: java.lang.Runnable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.test.espresso.intent.Intents$PropogatingRunnable: java.lang.Runnable delegate> = r1;

        return;
    }

    public void checkException()
    {
        androidx.test.espresso.intent.Intents$PropogatingRunnable r0;
        java.lang.AssertionError $r1, $r2;

        r0 := @this: androidx.test.espresso.intent.Intents$PropogatingRunnable;

        $r1 = r0.<androidx.test.espresso.intent.Intents$PropogatingRunnable: java.lang.AssertionError exception>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.test.espresso.intent.Intents$PropogatingRunnable: java.lang.AssertionError exception>;

        throw $r2;

     label1:
        return;
    }

    public final void run()
    {
        androidx.test.espresso.intent.Intents$PropogatingRunnable r0;
        java.lang.Throwable r1, $r3;
        java.lang.Runnable $r2;

        r0 := @this: androidx.test.espresso.intent.Intents$PropogatingRunnable;

     label1:
        $r2 = r0.<androidx.test.espresso.intent.Intents$PropogatingRunnable: java.lang.Runnable delegate>;

        interfaceinvoke $r2.<java.lang.Runnable: void run()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        r0.<androidx.test.espresso.intent.Intents$PropogatingRunnable: java.lang.AssertionError exception> = r1;

     label4:
        return;

        catch java.lang.AssertionError from label1 to label2 with label3;
    }

