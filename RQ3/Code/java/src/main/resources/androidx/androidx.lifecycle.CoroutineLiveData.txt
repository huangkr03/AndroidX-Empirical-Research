androidx.lifecycle.CoroutineLiveData
<androidx.lifecycle.CoroutineLiveData: androidx.lifecycle.BlockRunner blockRunner>
<androidx.lifecycle.CoroutineLiveData: androidx.lifecycle.EmittedSource emittedSource>
    public void <init>(kotlin.coroutines.CoroutineContext, long, kotlin.jvm.functions.Function2)
    {
        androidx.lifecycle.CoroutineLiveData r0;
        kotlin.coroutines.CoroutineContext r1, $r11, $r12, $r13;
        long l0;
        kotlin.jvm.functions.Function2 r2;
        kotlinx.coroutines.CompletableJob r3;
        kotlinx.coroutines.CoroutineScope r4;
        kotlinx.coroutines.Job$Key $r5;
        kotlin.coroutines.CoroutineContext$Key $r6;
        kotlin.coroutines.CoroutineContext$Element $r7;
        kotlinx.coroutines.Job $r8;
        kotlinx.coroutines.MainCoroutineDispatcher $r9, $r10;
        androidx.lifecycle.BlockRunner $r14;
        androidx.lifecycle.CoroutineLiveData$1 $r15;
        kotlin.jvm.functions.Function0 $r16;

        r0 := @this: androidx.lifecycle.CoroutineLiveData;

        r1 := @parameter0: kotlin.coroutines.CoroutineContext;

        l0 := @parameter1: long;

        r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "block");

        specialinvoke r0.<androidx.lifecycle.MediatorLiveData: void <init>()>();

        $r5 = <kotlinx.coroutines.Job: kotlinx.coroutines.Job$Key Key>;

        $r6 = (kotlin.coroutines.CoroutineContext$Key) $r5;

        $r7 = interfaceinvoke r1.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)>($r6);

        $r8 = (kotlinx.coroutines.Job) $r7;

        r3 = staticinvoke <kotlinx.coroutines.SupervisorKt: kotlinx.coroutines.CompletableJob SupervisorJob(kotlinx.coroutines.Job)>($r8);

        $r9 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        $r10 = virtualinvoke $r9.<kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()>();

        $r11 = virtualinvoke $r10.<kotlinx.coroutines.MainCoroutineDispatcher: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)>(r1);

        $r12 = (kotlin.coroutines.CoroutineContext) r3;

        $r13 = interfaceinvoke $r11.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)>($r12);

        r4 = staticinvoke <kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope CoroutineScope(kotlin.coroutines.CoroutineContext)>($r13);

        $r14 = new androidx.lifecycle.BlockRunner;

        $r15 = new androidx.lifecycle.CoroutineLiveData$1;

        specialinvoke $r15.<androidx.lifecycle.CoroutineLiveData$1: void <init>(androidx.lifecycle.CoroutineLiveData)>(r0);

        $r16 = (kotlin.jvm.functions.Function0) $r15;

        specialinvoke $r14.<androidx.lifecycle.BlockRunner: void <init>(androidx.lifecycle.CoroutineLiveData,kotlin.jvm.functions.Function2,long,kotlinx.coroutines.CoroutineScope,kotlin.jvm.functions.Function0)>(r0, r2, l0, r4, $r16);

        r0.<androidx.lifecycle.CoroutineLiveData: androidx.lifecycle.BlockRunner blockRunner> = $r14;

        return;
    }

    public void <init>(kotlin.coroutines.CoroutineContext, long, kotlin.jvm.functions.Function2, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.lifecycle.CoroutineLiveData r0;
        kotlin.jvm.functions.Function2 r1;
        int i0, $i1, $i2;
        kotlin.jvm.internal.DefaultConstructorMarker r2;
        kotlin.coroutines.EmptyCoroutineContext $r3;
        kotlin.coroutines.CoroutineContext r4;
        long l3;

        r0 := @this: androidx.lifecycle.CoroutineLiveData;

        r4 := @parameter0: kotlin.coroutines.CoroutineContext;

        l3 := @parameter1: long;

        r1 := @parameter2: kotlin.jvm.functions.Function2;

        i0 := @parameter3: int;

        r2 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        $r3 = <kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.EmptyCoroutineContext INSTANCE>;

        r4 = (kotlin.coroutines.CoroutineContext) $r3;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        l3 = 5000L;

     label2:
        specialinvoke r0.<androidx.lifecycle.CoroutineLiveData: void <init>(kotlin.coroutines.CoroutineContext,long,kotlin.jvm.functions.Function2)>(r4, l3, r1);

        return;
    }

    public final java.lang.Object emitSource$lifecycle_livedata_ktx_release(androidx.lifecycle.LiveData, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation r0, r17, r18;
        androidx.lifecycle.EmittedSource r1;
        java.lang.Object $r2, r3, $r5, $r6, $r7, $r9, $r14;
        boolean $z0;
        androidx.lifecycle.MediatorLiveData $r8;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.lifecycle.CoroutineLiveData r11;
        androidx.lifecycle.LiveData r12;
        androidx.lifecycle.CoroutineLiveData$emitSource$1 $r13, r15;
        java.lang.IllegalStateException r16;

        r11 := @this: androidx.lifecycle.CoroutineLiveData;

        r12 := @parameter0: androidx.lifecycle.LiveData;

        r0 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = r0 instanceof androidx.lifecycle.CoroutineLiveData$emitSource$1;

        if $z0 == 0 goto label1;

        $r13 = (androidx.lifecycle.CoroutineLiveData$emitSource$1) r0;

        $i0 = $r13.<androidx.lifecycle.CoroutineLiveData$emitSource$1: int label>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label1;

        $i2 = $r13.<androidx.lifecycle.CoroutineLiveData$emitSource$1: int label>;

        $i3 = $i2 - -2147483648;

        $r13.<androidx.lifecycle.CoroutineLiveData$emitSource$1: int label> = $i3;

        goto label2;

     label1:
        r15 = new androidx.lifecycle.CoroutineLiveData$emitSource$1;

        specialinvoke r15.<androidx.lifecycle.CoroutineLiveData$emitSource$1: void <init>(androidx.lifecycle.CoroutineLiveData,kotlin.coroutines.Continuation)>(r11, r0);

        $r13 = r15;

     label2:
        $r2 = $r13.<androidx.lifecycle.CoroutineLiveData$emitSource$1: java.lang.Object result>;

        r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i4 = $r13.<androidx.lifecycle.CoroutineLiveData$emitSource$1: int label>;

        tableswitch($i4)
        {
            case 0: goto label3;
            case 1: goto label4;
            case 2: goto label6;
            default: goto label8;
        };

     label3:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        $r13.<androidx.lifecycle.CoroutineLiveData$emitSource$1: java.lang.Object L$0> = r11;

        $r13.<androidx.lifecycle.CoroutineLiveData$emitSource$1: java.lang.Object L$1> = r12;

        $r13.<androidx.lifecycle.CoroutineLiveData$emitSource$1: int label> = 1;

        r17 = (kotlin.coroutines.Continuation) $r13;

        $r9 = virtualinvoke r11.<androidx.lifecycle.CoroutineLiveData: java.lang.Object clearSource$lifecycle_livedata_ktx_release(kotlin.coroutines.Continuation)>(r17);

        if $r9 != r3 goto label5;

        return r3;

     label4:
        $r6 = $r13.<androidx.lifecycle.CoroutineLiveData$emitSource$1: java.lang.Object L$1>;

        r12 = (androidx.lifecycle.LiveData) $r6;

        $r7 = $r13.<androidx.lifecycle.CoroutineLiveData$emitSource$1: java.lang.Object L$0>;

        r11 = (androidx.lifecycle.CoroutineLiveData) $r7;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

     label5:
        $r8 = (androidx.lifecycle.MediatorLiveData) r11;

        $r13.<androidx.lifecycle.CoroutineLiveData$emitSource$1: java.lang.Object L$0> = r11;

        $r13.<androidx.lifecycle.CoroutineLiveData$emitSource$1: java.lang.Object L$1> = null;

        $r13.<androidx.lifecycle.CoroutineLiveData$emitSource$1: int label> = 2;

        r18 = (kotlin.coroutines.Continuation) $r13;

        $r14 = staticinvoke <androidx.lifecycle.CoroutineLiveDataKt: java.lang.Object addDisposableSource(androidx.lifecycle.MediatorLiveData,androidx.lifecycle.LiveData,kotlin.coroutines.Continuation)>($r8, r12, r18);

        if $r14 != r3 goto label7;

        return r3;

     label6:
        $r5 = $r13.<androidx.lifecycle.CoroutineLiveData$emitSource$1: java.lang.Object L$0>;

        r11 = (androidx.lifecycle.CoroutineLiveData) $r5;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        $r14 = $r2;

     label7:
        r1 = (androidx.lifecycle.EmittedSource) $r14;

        r11.<androidx.lifecycle.CoroutineLiveData: androidx.lifecycle.EmittedSource emittedSource> = r1;

        return r1;

     label8:
        r16 = new java.lang.IllegalStateException;

        specialinvoke r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r16;
    }

    public final java.lang.Object clearSource$lifecycle_livedata_ktx_release(kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation r0, r13;
        java.lang.Object $r1, r2, $r4, $r7;
        boolean $z0;
        kotlin.Unit $r5;
        androidx.lifecycle.EmittedSource $r6;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.lifecycle.CoroutineLiveData r9;
        androidx.lifecycle.CoroutineLiveData$clearSource$1 $r10, r11;
        java.lang.IllegalStateException r12;

        r9 := @this: androidx.lifecycle.CoroutineLiveData;

        r0 := @parameter0: kotlin.coroutines.Continuation;

        $z0 = r0 instanceof androidx.lifecycle.CoroutineLiveData$clearSource$1;

        if $z0 == 0 goto label1;

        $r10 = (androidx.lifecycle.CoroutineLiveData$clearSource$1) r0;

        $i0 = $r10.<androidx.lifecycle.CoroutineLiveData$clearSource$1: int label>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label1;

        $i2 = $r10.<androidx.lifecycle.CoroutineLiveData$clearSource$1: int label>;

        $i3 = $i2 - -2147483648;

        $r10.<androidx.lifecycle.CoroutineLiveData$clearSource$1: int label> = $i3;

        goto label2;

     label1:
        r11 = new androidx.lifecycle.CoroutineLiveData$clearSource$1;

        specialinvoke r11.<androidx.lifecycle.CoroutineLiveData$clearSource$1: void <init>(androidx.lifecycle.CoroutineLiveData,kotlin.coroutines.Continuation)>(r9, r0);

        $r10 = r11;

     label2:
        $r1 = $r10.<androidx.lifecycle.CoroutineLiveData$clearSource$1: java.lang.Object result>;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i4 = $r10.<androidx.lifecycle.CoroutineLiveData$clearSource$1: int label>;

        tableswitch($i4)
        {
            case 0: goto label3;
            case 1: goto label4;
            default: goto label7;
        };

     label3:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r6 = r9.<androidx.lifecycle.CoroutineLiveData: androidx.lifecycle.EmittedSource emittedSource>;

        if $r6 == null goto label6;

        $r10.<androidx.lifecycle.CoroutineLiveData$clearSource$1: java.lang.Object L$0> = r9;

        $r10.<androidx.lifecycle.CoroutineLiveData$clearSource$1: int label> = 1;

        r13 = (kotlin.coroutines.Continuation) $r10;

        $r7 = virtualinvoke $r6.<androidx.lifecycle.EmittedSource: java.lang.Object disposeNow(kotlin.coroutines.Continuation)>(r13);

        if $r7 != r2 goto label5;

        return r2;

     label4:
        $r4 = $r10.<androidx.lifecycle.CoroutineLiveData$clearSource$1: java.lang.Object L$0>;

        r9 = (androidx.lifecycle.CoroutineLiveData) $r4;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label5:
        goto label6;

     label6:
        r9.<androidx.lifecycle.CoroutineLiveData: androidx.lifecycle.EmittedSource emittedSource> = null;

        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r5;

     label7:
        r12 = new java.lang.IllegalStateException;

        specialinvoke r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r12;
    }

    protected void onActive()
    {
        androidx.lifecycle.CoroutineLiveData r0;
        androidx.lifecycle.BlockRunner $r1;

        r0 := @this: androidx.lifecycle.CoroutineLiveData;

        specialinvoke r0.<androidx.lifecycle.MediatorLiveData: void onActive()>();

        $r1 = r0.<androidx.lifecycle.CoroutineLiveData: androidx.lifecycle.BlockRunner blockRunner>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<androidx.lifecycle.BlockRunner: void maybeRun()>();

        goto label1;

     label1:
        return;
    }

    protected void onInactive()
    {
        androidx.lifecycle.CoroutineLiveData r0;
        androidx.lifecycle.BlockRunner $r1;

        r0 := @this: androidx.lifecycle.CoroutineLiveData;

        specialinvoke r0.<androidx.lifecycle.MediatorLiveData: void onInactive()>();

        $r1 = r0.<androidx.lifecycle.CoroutineLiveData: androidx.lifecycle.BlockRunner blockRunner>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<androidx.lifecycle.BlockRunner: void cancel()>();

        goto label1;

     label1:
        return;
    }

    public static final void access$setBlockRunner$p(androidx.lifecycle.CoroutineLiveData, androidx.lifecycle.BlockRunner)
    {
        androidx.lifecycle.CoroutineLiveData $r0;
        androidx.lifecycle.BlockRunner r1;

        $r0 := @parameter0: androidx.lifecycle.CoroutineLiveData;

        r1 := @parameter1: androidx.lifecycle.BlockRunner;

        $r0.<androidx.lifecycle.CoroutineLiveData: androidx.lifecycle.BlockRunner blockRunner> = r1;

        return;
    }

androidx.lifecycle.CoroutineLiveData$1
<androidx.lifecycle.CoroutineLiveData$1: androidx.lifecycle.CoroutineLiveData this$0>
    void <init>(androidx.lifecycle.CoroutineLiveData)
    {
        androidx.lifecycle.CoroutineLiveData$1 r0;
        androidx.lifecycle.CoroutineLiveData $r1;

        r0 := @this: androidx.lifecycle.CoroutineLiveData$1;

        $r1 := @parameter0: androidx.lifecycle.CoroutineLiveData;

        r0.<androidx.lifecycle.CoroutineLiveData$1: androidx.lifecycle.CoroutineLiveData this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.lifecycle.CoroutineLiveData$1 r0;
        androidx.lifecycle.CoroutineLiveData $r1;

        r0 := @this: androidx.lifecycle.CoroutineLiveData$1;

        $r1 = r0.<androidx.lifecycle.CoroutineLiveData$1: androidx.lifecycle.CoroutineLiveData this$0>;

        staticinvoke <androidx.lifecycle.CoroutineLiveData: void access$setBlockRunner$p(androidx.lifecycle.CoroutineLiveData,androidx.lifecycle.BlockRunner)>($r1, null);

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.lifecycle.CoroutineLiveData$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.lifecycle.CoroutineLiveData$1;

        virtualinvoke r0.<androidx.lifecycle.CoroutineLiveData$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.lifecycle.CoroutineLiveData$clearSource$1
<androidx.lifecycle.CoroutineLiveData$clearSource$1: java.lang.Object L$0>
<androidx.lifecycle.CoroutineLiveData$clearSource$1: java.lang.Object result>
<androidx.lifecycle.CoroutineLiveData$clearSource$1: androidx.lifecycle.CoroutineLiveData this$0>
<androidx.lifecycle.CoroutineLiveData$clearSource$1: int label>
    void <init>(androidx.lifecycle.CoroutineLiveData, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.CoroutineLiveData$clearSource$1 r0;
        androidx.lifecycle.CoroutineLiveData r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.lifecycle.CoroutineLiveData$clearSource$1;

        r1 := @parameter0: androidx.lifecycle.CoroutineLiveData;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.lifecycle.CoroutineLiveData$clearSource$1: androidx.lifecycle.CoroutineLiveData this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.lifecycle.CoroutineLiveData$clearSource$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.lifecycle.CoroutineLiveData $r3;

        r0 := @this: androidx.lifecycle.CoroutineLiveData$clearSource$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.lifecycle.CoroutineLiveData$clearSource$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.lifecycle.CoroutineLiveData$clearSource$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.lifecycle.CoroutineLiveData$clearSource$1: int label> = $i1;

        $r3 = r0.<androidx.lifecycle.CoroutineLiveData$clearSource$1: androidx.lifecycle.CoroutineLiveData this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.lifecycle.CoroutineLiveData: java.lang.Object clearSource$lifecycle_livedata_ktx_release(kotlin.coroutines.Continuation)>($r2);

        return $r4;
    }

androidx.lifecycle.CoroutineLiveData$emitSource$1
<androidx.lifecycle.CoroutineLiveData$emitSource$1: java.lang.Object L$0>
<androidx.lifecycle.CoroutineLiveData$emitSource$1: java.lang.Object L$1>
<androidx.lifecycle.CoroutineLiveData$emitSource$1: java.lang.Object result>
<androidx.lifecycle.CoroutineLiveData$emitSource$1: androidx.lifecycle.CoroutineLiveData this$0>
<androidx.lifecycle.CoroutineLiveData$emitSource$1: int label>
    void <init>(androidx.lifecycle.CoroutineLiveData, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.CoroutineLiveData$emitSource$1 r0;
        androidx.lifecycle.CoroutineLiveData r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.lifecycle.CoroutineLiveData$emitSource$1;

        r1 := @parameter0: androidx.lifecycle.CoroutineLiveData;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.lifecycle.CoroutineLiveData$emitSource$1: androidx.lifecycle.CoroutineLiveData this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.lifecycle.CoroutineLiveData$emitSource$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.lifecycle.CoroutineLiveData $r3;

        r0 := @this: androidx.lifecycle.CoroutineLiveData$emitSource$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.lifecycle.CoroutineLiveData$emitSource$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.lifecycle.CoroutineLiveData$emitSource$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.lifecycle.CoroutineLiveData$emitSource$1: int label> = $i1;

        $r3 = r0.<androidx.lifecycle.CoroutineLiveData$emitSource$1: androidx.lifecycle.CoroutineLiveData this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.lifecycle.CoroutineLiveData: java.lang.Object emitSource$lifecycle_livedata_ktx_release(androidx.lifecycle.LiveData,kotlin.coroutines.Continuation)>(null, $r2);

        return $r4;
    }

