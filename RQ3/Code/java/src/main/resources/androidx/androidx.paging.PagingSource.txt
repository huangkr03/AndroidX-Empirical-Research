androidx.paging.PagingSource
<androidx.paging.PagingSource: androidx.paging.InvalidateCallbackTracker invalidateCallbackTracker>
    public void <init>()
    {
        androidx.paging.PagingSource r0;
        androidx.paging.InvalidateCallbackTracker $r1;
        androidx.paging.PagingSource$invalidateCallbackTracker$1 $r2;
        kotlin.jvm.functions.Function1 $r3;

        r0 := @this: androidx.paging.PagingSource;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new androidx.paging.InvalidateCallbackTracker;

        $r2 = <androidx.paging.PagingSource$invalidateCallbackTracker$1: androidx.paging.PagingSource$invalidateCallbackTracker$1 INSTANCE>;

        $r3 = (kotlin.jvm.functions.Function1) $r2;

        specialinvoke $r1.<androidx.paging.InvalidateCallbackTracker: void <init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r3, null, 2, null);

        r0.<androidx.paging.PagingSource: androidx.paging.InvalidateCallbackTracker invalidateCallbackTracker> = $r1;

        return;
    }

    public final int getInvalidateCallbackCount$paging_common()
    {
        androidx.paging.PagingSource r0;
        androidx.paging.InvalidateCallbackTracker $r1;
        int $i0;

        r0 := @this: androidx.paging.PagingSource;

        $r1 = r0.<androidx.paging.PagingSource: androidx.paging.InvalidateCallbackTracker invalidateCallbackTracker>;

        $i0 = virtualinvoke $r1.<androidx.paging.InvalidateCallbackTracker: int callbackCount$paging_common()>();

        return $i0;
    }

    public boolean getJumpingSupported()
    {
        androidx.paging.PagingSource r0;

        r0 := @this: androidx.paging.PagingSource;

        return 0;
    }

    public boolean getKeyReuseSupported()
    {
        androidx.paging.PagingSource r0;

        r0 := @this: androidx.paging.PagingSource;

        return 0;
    }

    public final boolean getInvalid()
    {
        androidx.paging.PagingSource r0;
        androidx.paging.InvalidateCallbackTracker $r1;
        boolean $z0;

        r0 := @this: androidx.paging.PagingSource;

        $r1 = r0.<androidx.paging.PagingSource: androidx.paging.InvalidateCallbackTracker invalidateCallbackTracker>;

        $z0 = virtualinvoke $r1.<androidx.paging.InvalidateCallbackTracker: boolean getInvalid$paging_common()>();

        return $z0;
    }

    public final void invalidate()
    {
        androidx.paging.PagingSource r0;
        androidx.paging.InvalidateCallbackTracker $r1;

        r0 := @this: androidx.paging.PagingSource;

        $r1 = r0.<androidx.paging.PagingSource: androidx.paging.InvalidateCallbackTracker invalidateCallbackTracker>;

        virtualinvoke $r1.<androidx.paging.InvalidateCallbackTracker: void invalidate$paging_common()>();

        return;
    }

    public final void registerInvalidatedCallback(kotlin.jvm.functions.Function0)
    {
        androidx.paging.PagingSource r0;
        kotlin.jvm.functions.Function0 r1;
        androidx.paging.InvalidateCallbackTracker $r2;

        r0 := @this: androidx.paging.PagingSource;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "onInvalidatedCallback");

        $r2 = r0.<androidx.paging.PagingSource: androidx.paging.InvalidateCallbackTracker invalidateCallbackTracker>;

        virtualinvoke $r2.<androidx.paging.InvalidateCallbackTracker: void registerInvalidatedCallback$paging_common(java.lang.Object)>(r1);

        return;
    }

    public final void unregisterInvalidatedCallback(kotlin.jvm.functions.Function0)
    {
        androidx.paging.PagingSource r0;
        kotlin.jvm.functions.Function0 r1;
        androidx.paging.InvalidateCallbackTracker $r2;

        r0 := @this: androidx.paging.PagingSource;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "onInvalidatedCallback");

        $r2 = r0.<androidx.paging.PagingSource: androidx.paging.InvalidateCallbackTracker invalidateCallbackTracker>;

        virtualinvoke $r2.<androidx.paging.InvalidateCallbackTracker: void unregisterInvalidatedCallback$paging_common(java.lang.Object)>(r1);

        return;
    }

<androidx.paging.PagingSource: java.lang.Object load(androidx.paging.PagingSource$LoadParams,kotlin.coroutines.Continuation)>
<androidx.paging.PagingSource: java.lang.Object getRefreshKey(androidx.paging.PagingState)>
androidx.paging.PagingSource$invalidateCallbackTracker$1
<androidx.paging.PagingSource$invalidateCallbackTracker$1: androidx.paging.PagingSource$invalidateCallbackTracker$1 INSTANCE>
    void <init>()
    {
        androidx.paging.PagingSource$invalidateCallbackTracker$1 r0;

        r0 := @this: androidx.paging.PagingSource$invalidateCallbackTracker$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(kotlin.jvm.functions.Function0)
    {
        androidx.paging.PagingSource$invalidateCallbackTracker$1 r0;
        kotlin.jvm.functions.Function0 r1;

        r0 := @this: androidx.paging.PagingSource$invalidateCallbackTracker$1;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.paging.PagingSource$invalidateCallbackTracker$1 r0;
        java.lang.Object r1;
        kotlin.jvm.functions.Function0 $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.paging.PagingSource$invalidateCallbackTracker$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (kotlin.jvm.functions.Function0) r1;

        virtualinvoke r0.<androidx.paging.PagingSource$invalidateCallbackTracker$1: void invoke(kotlin.jvm.functions.Function0)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

    static void <clinit>()
    {
        androidx.paging.PagingSource$invalidateCallbackTracker$1 $r0;

        $r0 = new androidx.paging.PagingSource$invalidateCallbackTracker$1;

        specialinvoke $r0.<androidx.paging.PagingSource$invalidateCallbackTracker$1: void <init>()>();

        <androidx.paging.PagingSource$invalidateCallbackTracker$1: androidx.paging.PagingSource$invalidateCallbackTracker$1 INSTANCE> = $r0;

        return;
    }

androidx.paging.PagingSource$LoadParams$Append
<androidx.paging.PagingSource$LoadParams$Append: java.lang.Object key>
    public void <init>(java.lang.Object, int, boolean)
    {
        androidx.paging.PagingSource$LoadParams$Append r0;
        java.lang.Object r1;
        int i0;
        boolean z0;

        r0 := @this: androidx.paging.PagingSource$LoadParams$Append;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        specialinvoke r0.<androidx.paging.PagingSource$LoadParams: void <init>(int,boolean,kotlin.jvm.internal.DefaultConstructorMarker)>(i0, z0, null);

        r0.<androidx.paging.PagingSource$LoadParams$Append: java.lang.Object key> = r1;

        return;
    }

    public java.lang.Object getKey()
    {
        androidx.paging.PagingSource$LoadParams$Append r0;
        java.lang.Object $r1;

        r0 := @this: androidx.paging.PagingSource$LoadParams$Append;

        $r1 = r0.<androidx.paging.PagingSource$LoadParams$Append: java.lang.Object key>;

        return $r1;
    }

androidx.paging.PagingSource$LoadParams$Companion$WhenMappings
<androidx.paging.PagingSource$LoadParams$Companion$WhenMappings: int[] $EnumSwitchMapping$0>
    static void <clinit>()
    {
        int[] r0;
        androidx.paging.LoadType[] $r1;
        int $i0, $i1, $i2, $i3;
        androidx.paging.LoadType $r2, $r3, $r4;

        $r1 = staticinvoke <androidx.paging.LoadType: androidx.paging.LoadType[] values()>();

        $i0 = lengthof $r1;

        r0 = newarray (int)[$i0];

        $r2 = <androidx.paging.LoadType: androidx.paging.LoadType REFRESH>;

        $i1 = virtualinvoke $r2.<androidx.paging.LoadType: int ordinal()>();

        r0[$i1] = 1;

        $r3 = <androidx.paging.LoadType: androidx.paging.LoadType PREPEND>;

        $i2 = virtualinvoke $r3.<androidx.paging.LoadType: int ordinal()>();

        r0[$i2] = 2;

        $r4 = <androidx.paging.LoadType: androidx.paging.LoadType APPEND>;

        $i3 = virtualinvoke $r4.<androidx.paging.LoadType: int ordinal()>();

        r0[$i3] = 3;

        <androidx.paging.PagingSource$LoadParams$Companion$WhenMappings: int[] $EnumSwitchMapping$0> = r0;

        return;
    }

androidx.paging.PagingSource$LoadParams$Companion
    private void <init>()
    {
        androidx.paging.PagingSource$LoadParams$Companion r0;

        r0 := @this: androidx.paging.PagingSource$LoadParams$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.paging.PagingSource$LoadParams create(androidx.paging.LoadType, java.lang.Object, int, boolean)
    {
        androidx.paging.PagingSource$LoadParams$Companion r0;
        androidx.paging.LoadType r1, r3;
        java.lang.Object r2, r17, r19;
        int i0, i1, $i2;
        boolean z0, z1, z2, z4, z5;
        int[] $r4;
        androidx.paging.PagingSource$LoadParams$Append $r5;
        java.lang.IllegalArgumentException $r6, $r10;
        java.lang.String $r7, $r11, r16, r18;
        java.lang.Throwable $r8, $r12;
        androidx.paging.PagingSource$LoadParams$Prepend $r9;
        androidx.paging.PagingSource$LoadParams$Refresh $r13;
        kotlin.NoWhenBranchMatchedException $r14;
        androidx.paging.PagingSource$LoadParams $r15;

        r0 := @this: androidx.paging.PagingSource$LoadParams$Companion;

        r1 := @parameter0: androidx.paging.LoadType;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "loadType");

        r3 = r1;

        $r4 = <androidx.paging.PagingSource$LoadParams$Companion$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i2 = virtualinvoke r3.<androidx.paging.LoadType: int ordinal()>();

        i1 = $r4[$i2];

        tableswitch(i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label4;
            default: goto label6;
        };

     label1:
        $r13 = new androidx.paging.PagingSource$LoadParams$Refresh;

        specialinvoke $r13.<androidx.paging.PagingSource$LoadParams$Refresh: void <init>(java.lang.Object,int,boolean)>(r2, i0, z0);

        $r15 = (androidx.paging.PagingSource$LoadParams) $r13;

        goto label7;

     label2:
        z1 = 0;

        z2 = 0;

        if r2 != null goto label3;

        r16 = "key cannot be null for prepend";

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = virtualinvoke r16.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        $r12 = (java.lang.Throwable) $r10;

        throw $r12;

     label3:
        r17 = r2;

        $r9 = new androidx.paging.PagingSource$LoadParams$Prepend;

        specialinvoke $r9.<androidx.paging.PagingSource$LoadParams$Prepend: void <init>(java.lang.Object,int,boolean)>(r17, i0, z0);

        $r15 = (androidx.paging.PagingSource$LoadParams) $r9;

        goto label7;

     label4:
        z4 = 0;

        z5 = 0;

        if r2 != null goto label5;

        r18 = "key cannot be null for append";

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke r18.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        $r8 = (java.lang.Throwable) $r6;

        throw $r8;

     label5:
        r19 = r2;

        $r5 = new androidx.paging.PagingSource$LoadParams$Append;

        specialinvoke $r5.<androidx.paging.PagingSource$LoadParams$Append: void <init>(java.lang.Object,int,boolean)>(r19, i0, z0);

        $r15 = (androidx.paging.PagingSource$LoadParams) $r5;

        goto label7;

     label6:
        $r14 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r14.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r14;

     label7:
        return $r15;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.paging.PagingSource$LoadParams$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.paging.PagingSource$LoadParams$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.paging.PagingSource$LoadParams$Companion: void <init>()>();

        return;
    }

androidx.paging.PagingSource$LoadParams$Prepend
<androidx.paging.PagingSource$LoadParams$Prepend: java.lang.Object key>
    public void <init>(java.lang.Object, int, boolean)
    {
        androidx.paging.PagingSource$LoadParams$Prepend r0;
        java.lang.Object r1;
        int i0;
        boolean z0;

        r0 := @this: androidx.paging.PagingSource$LoadParams$Prepend;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        specialinvoke r0.<androidx.paging.PagingSource$LoadParams: void <init>(int,boolean,kotlin.jvm.internal.DefaultConstructorMarker)>(i0, z0, null);

        r0.<androidx.paging.PagingSource$LoadParams$Prepend: java.lang.Object key> = r1;

        return;
    }

    public java.lang.Object getKey()
    {
        androidx.paging.PagingSource$LoadParams$Prepend r0;
        java.lang.Object $r1;

        r0 := @this: androidx.paging.PagingSource$LoadParams$Prepend;

        $r1 = r0.<androidx.paging.PagingSource$LoadParams$Prepend: java.lang.Object key>;

        return $r1;
    }

androidx.paging.PagingSource$LoadParams$Refresh
<androidx.paging.PagingSource$LoadParams$Refresh: java.lang.Object key>
    public void <init>(java.lang.Object, int, boolean)
    {
        androidx.paging.PagingSource$LoadParams$Refresh r0;
        java.lang.Object r1;
        int i0;
        boolean z0;

        r0 := @this: androidx.paging.PagingSource$LoadParams$Refresh;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<androidx.paging.PagingSource$LoadParams: void <init>(int,boolean,kotlin.jvm.internal.DefaultConstructorMarker)>(i0, z0, null);

        r0.<androidx.paging.PagingSource$LoadParams$Refresh: java.lang.Object key> = r1;

        return;
    }

    public java.lang.Object getKey()
    {
        androidx.paging.PagingSource$LoadParams$Refresh r0;
        java.lang.Object $r1;

        r0 := @this: androidx.paging.PagingSource$LoadParams$Refresh;

        $r1 = r0.<androidx.paging.PagingSource$LoadParams$Refresh: java.lang.Object key>;

        return $r1;
    }

androidx.paging.PagingSource$LoadParams
<androidx.paging.PagingSource$LoadParams: androidx.paging.PagingSource$LoadParams$Companion Companion>
<androidx.paging.PagingSource$LoadParams: int loadSize>
<androidx.paging.PagingSource$LoadParams: boolean placeholdersEnabled>
    private void <init>(int, boolean)
    {
        androidx.paging.PagingSource$LoadParams r0;
        int i0;
        boolean z0;

        r0 := @this: androidx.paging.PagingSource$LoadParams;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.paging.PagingSource$LoadParams: int loadSize> = i0;

        r0.<androidx.paging.PagingSource$LoadParams: boolean placeholdersEnabled> = z0;

        return;
    }

    public final int getLoadSize()
    {
        androidx.paging.PagingSource$LoadParams r0;
        int $i0;

        r0 := @this: androidx.paging.PagingSource$LoadParams;

        $i0 = r0.<androidx.paging.PagingSource$LoadParams: int loadSize>;

        return $i0;
    }

    public final boolean getPlaceholdersEnabled()
    {
        androidx.paging.PagingSource$LoadParams r0;
        boolean $z0;

        r0 := @this: androidx.paging.PagingSource$LoadParams;

        $z0 = r0.<androidx.paging.PagingSource$LoadParams: boolean placeholdersEnabled>;

        return $z0;
    }

<androidx.paging.PagingSource$LoadParams: java.lang.Object getKey()>
    public void <init>(int, boolean, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.paging.PagingSource$LoadParams r0;
        int i0;
        boolean z0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.paging.PagingSource$LoadParams;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.paging.PagingSource$LoadParams: void <init>(int,boolean)>(i0, z0);

        return;
    }

    static void <clinit>()
    {
        androidx.paging.PagingSource$LoadParams$Companion $r0;

        $r0 = new androidx.paging.PagingSource$LoadParams$Companion;

        specialinvoke $r0.<androidx.paging.PagingSource$LoadParams$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.paging.PagingSource$LoadParams: androidx.paging.PagingSource$LoadParams$Companion Companion> = $r0;

        return;
    }

androidx.paging.PagingSource$LoadResult$Error
<androidx.paging.PagingSource$LoadResult$Error: java.lang.Throwable throwable>
    public void <init>(java.lang.Throwable)
    {
        androidx.paging.PagingSource$LoadResult$Error r0;
        java.lang.Throwable r1;

        r0 := @this: androidx.paging.PagingSource$LoadResult$Error;

        r1 := @parameter0: java.lang.Throwable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "throwable");

        specialinvoke r0.<androidx.paging.PagingSource$LoadResult: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        r0.<androidx.paging.PagingSource$LoadResult$Error: java.lang.Throwable throwable> = r1;

        return;
    }

    public final java.lang.Throwable getThrowable()
    {
        androidx.paging.PagingSource$LoadResult$Error r0;
        java.lang.Throwable $r1;

        r0 := @this: androidx.paging.PagingSource$LoadResult$Error;

        $r1 = r0.<androidx.paging.PagingSource$LoadResult$Error: java.lang.Throwable throwable>;

        return $r1;
    }

    public final java.lang.Throwable component1()
    {
        androidx.paging.PagingSource$LoadResult$Error r0;
        java.lang.Throwable $r1;

        r0 := @this: androidx.paging.PagingSource$LoadResult$Error;

        $r1 = r0.<androidx.paging.PagingSource$LoadResult$Error: java.lang.Throwable throwable>;

        return $r1;
    }

    public final androidx.paging.PagingSource$LoadResult$Error copy(java.lang.Throwable)
    {
        androidx.paging.PagingSource$LoadResult$Error r0, $r2;
        java.lang.Throwable r1;

        r0 := @this: androidx.paging.PagingSource$LoadResult$Error;

        r1 := @parameter0: java.lang.Throwable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "throwable");

        $r2 = new androidx.paging.PagingSource$LoadResult$Error;

        specialinvoke $r2.<androidx.paging.PagingSource$LoadResult$Error: void <init>(java.lang.Throwable)>(r1);

        return $r2;
    }

    public static androidx.paging.PagingSource$LoadResult$Error copy$default(androidx.paging.PagingSource$LoadResult$Error, java.lang.Throwable, int, java.lang.Object)
    {
        androidx.paging.PagingSource$LoadResult$Error r0, $r2;
        int i0, $i1;
        java.lang.Object r1;
        java.lang.Throwable r3;

        r0 := @parameter0: androidx.paging.PagingSource$LoadResult$Error;

        r3 := @parameter1: java.lang.Throwable;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r3 = r0.<androidx.paging.PagingSource$LoadResult$Error: java.lang.Throwable throwable>;

     label1:
        $r2 = virtualinvoke r0.<androidx.paging.PagingSource$LoadResult$Error: androidx.paging.PagingSource$LoadResult$Error copy(java.lang.Throwable)>(r3);

        return $r2;
    }

    public java.lang.String toString()
    {
        androidx.paging.PagingSource$LoadResult$Error r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5;
        java.lang.Throwable $r3;
        java.lang.String $r6;

        r0 := @this: androidx.paging.PagingSource$LoadResult$Error;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error(throwable=");

        $r3 = r0.<androidx.paging.PagingSource$LoadResult$Error: java.lang.Throwable throwable>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public int hashCode()
    {
        androidx.paging.PagingSource$LoadResult$Error r0;
        java.lang.Throwable $r1;
        int $i0;

        r0 := @this: androidx.paging.PagingSource$LoadResult$Error;

        $r1 = r0.<androidx.paging.PagingSource$LoadResult$Error: java.lang.Throwable throwable>;

        $i0 = virtualinvoke $r1.<java.lang.Throwable: int hashCode()>();

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.paging.PagingSource$LoadResult$Error r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.lang.Throwable $r3, $r4;

        r0 := @this: androidx.paging.PagingSource$LoadResult$Error;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.paging.PagingSource$LoadResult$Error;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (androidx.paging.PagingSource$LoadResult$Error) r1;

        $r4 = r0.<androidx.paging.PagingSource$LoadResult$Error: java.lang.Throwable throwable>;

        $r3 = r2.<androidx.paging.PagingSource$LoadResult$Error: java.lang.Throwable throwable>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        return 1;
    }

androidx.paging.PagingSource$LoadResult$Invalid
    public void <init>()
    {
        androidx.paging.PagingSource$LoadResult$Invalid r0;

        r0 := @this: androidx.paging.PagingSource$LoadResult$Invalid;

        specialinvoke r0.<androidx.paging.PagingSource$LoadResult: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        return;
    }

androidx.paging.PagingSource$LoadResult$Page$Companion
    private void <init>()
    {
        androidx.paging.PagingSource$LoadResult$Page$Companion r0;

        r0 := @this: androidx.paging.PagingSource$LoadResult$Page$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.paging.PagingSource$LoadResult$Page getEMPTY$paging_common()
    {
        androidx.paging.PagingSource$LoadResult$Page$Companion r0;
        androidx.paging.PagingSource$LoadResult$Page $r1;

        r0 := @this: androidx.paging.PagingSource$LoadResult$Page$Companion;

        $r1 = staticinvoke <androidx.paging.PagingSource$LoadResult$Page: androidx.paging.PagingSource$LoadResult$Page access$getEMPTY$cp()>();

        return $r1;
    }

    public static void getEMPTY$paging_common$annotations()
    {
        return;
    }

    public final androidx.paging.PagingSource$LoadResult$Page empty$paging_common()
    {
        androidx.paging.PagingSource$LoadResult$Page$Companion r0;
        androidx.paging.PagingSource$LoadResult$Page $r1;

        r0 := @this: androidx.paging.PagingSource$LoadResult$Page$Companion;

        $r1 = virtualinvoke r0.<androidx.paging.PagingSource$LoadResult$Page$Companion: androidx.paging.PagingSource$LoadResult$Page getEMPTY$paging_common()>();

        return $r1;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.paging.PagingSource$LoadResult$Page$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.paging.PagingSource$LoadResult$Page$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.paging.PagingSource$LoadResult$Page$Companion: void <init>()>();

        return;
    }

androidx.paging.PagingSource$LoadResult$Page
<androidx.paging.PagingSource$LoadResult$Page: androidx.paging.PagingSource$LoadResult$Page$Companion Companion>
<androidx.paging.PagingSource$LoadResult$Page: java.util.List data>
<androidx.paging.PagingSource$LoadResult$Page: java.lang.Object prevKey>
<androidx.paging.PagingSource$LoadResult$Page: java.lang.Object nextKey>
<androidx.paging.PagingSource$LoadResult$Page: int itemsBefore>
<androidx.paging.PagingSource$LoadResult$Page: int itemsAfter>
<androidx.paging.PagingSource$LoadResult$Page: int COUNT_UNDEFINED>
<androidx.paging.PagingSource$LoadResult$Page: androidx.paging.PagingSource$LoadResult$Page EMPTY>
    public void <init>(java.util.List, java.lang.Object, java.lang.Object, int, int)
    {
        androidx.paging.PagingSource$LoadResult$Page r0;
        java.util.List r1;
        java.lang.Object r2, r3;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.lang.IllegalArgumentException $r4, $r7;
        java.lang.String $r5, $r8, r10, r11;
        java.lang.Throwable $r6, $r9;
        boolean $z0, z1, z2, z3, $z5, z6, z7, z8;

        r0 := @this: androidx.paging.PagingSource$LoadResult$Page;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "data");

        specialinvoke r0.<androidx.paging.PagingSource$LoadResult: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        r0.<androidx.paging.PagingSource$LoadResult$Page: java.util.List data> = r1;

        r0.<androidx.paging.PagingSource$LoadResult$Page: java.lang.Object prevKey> = r2;

        r0.<androidx.paging.PagingSource$LoadResult$Page: java.lang.Object nextKey> = r3;

        r0.<androidx.paging.PagingSource$LoadResult$Page: int itemsBefore> = i0;

        r0.<androidx.paging.PagingSource$LoadResult$Page: int itemsAfter> = i1;

        $i2 = r0.<androidx.paging.PagingSource$LoadResult$Page: int itemsBefore>;

        if $i2 == -2147483648 goto label1;

        $i5 = r0.<androidx.paging.PagingSource$LoadResult$Page: int itemsBefore>;

        if $i5 < 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        z1 = $z0;

        z2 = 0;

        z3 = 0;

        if z1 != 0 goto label4;

        r10 = "itemsBefore cannot be negative";

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke r10.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        $r9 = (java.lang.Throwable) $r7;

        throw $r9;

     label4:
        $i3 = r0.<androidx.paging.PagingSource$LoadResult$Page: int itemsAfter>;

        if $i3 == -2147483648 goto label5;

        $i4 = r0.<androidx.paging.PagingSource$LoadResult$Page: int itemsAfter>;

        if $i4 < 0 goto label6;

     label5:
        $z5 = 1;

        goto label7;

     label6:
        $z5 = 0;

     label7:
        z6 = $z5;

        z7 = 0;

        z8 = 0;

        if z6 != 0 goto label8;

        r11 = "itemsAfter cannot be negative";

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke r11.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        $r6 = (java.lang.Throwable) $r4;

        throw $r6;

     label8:
        return;
    }

    public void <init>(java.util.List, java.lang.Object, java.lang.Object, int, int, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.paging.PagingSource$LoadResult$Page r0;
        java.util.List r1;
        java.lang.Object r2, r3;
        int i0, $i1, $i2, i3, i4;
        kotlin.jvm.internal.DefaultConstructorMarker r4;

        r0 := @this: androidx.paging.PagingSource$LoadResult$Page;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i0 := @parameter5: int;

        r4 := @parameter6: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 8;

        if $i1 == 0 goto label1;

        i3 = -2147483648;

     label1:
        $i2 = i0 & 16;

        if $i2 == 0 goto label2;

        i4 = -2147483648;

     label2:
        specialinvoke r0.<androidx.paging.PagingSource$LoadResult$Page: void <init>(java.util.List,java.lang.Object,java.lang.Object,int,int)>(r1, r2, r3, i3, i4);

        return;
    }

    public final java.util.List getData()
    {
        androidx.paging.PagingSource$LoadResult$Page r0;
        java.util.List $r1;

        r0 := @this: androidx.paging.PagingSource$LoadResult$Page;

        $r1 = r0.<androidx.paging.PagingSource$LoadResult$Page: java.util.List data>;

        return $r1;
    }

    public final java.lang.Object getPrevKey()
    {
        androidx.paging.PagingSource$LoadResult$Page r0;
        java.lang.Object $r1;

        r0 := @this: androidx.paging.PagingSource$LoadResult$Page;

        $r1 = r0.<androidx.paging.PagingSource$LoadResult$Page: java.lang.Object prevKey>;

        return $r1;
    }

    public final java.lang.Object getNextKey()
    {
        androidx.paging.PagingSource$LoadResult$Page r0;
        java.lang.Object $r1;

        r0 := @this: androidx.paging.PagingSource$LoadResult$Page;

        $r1 = r0.<androidx.paging.PagingSource$LoadResult$Page: java.lang.Object nextKey>;

        return $r1;
    }

    public final int getItemsBefore()
    {
        androidx.paging.PagingSource$LoadResult$Page r0;
        int $i0;

        r0 := @this: androidx.paging.PagingSource$LoadResult$Page;

        $i0 = r0.<androidx.paging.PagingSource$LoadResult$Page: int itemsBefore>;

        return $i0;
    }

    public final int getItemsAfter()
    {
        androidx.paging.PagingSource$LoadResult$Page r0;
        int $i0;

        r0 := @this: androidx.paging.PagingSource$LoadResult$Page;

        $i0 = r0.<androidx.paging.PagingSource$LoadResult$Page: int itemsAfter>;

        return $i0;
    }

    public void <init>(java.util.List, java.lang.Object, java.lang.Object)
    {
        androidx.paging.PagingSource$LoadResult$Page r0;
        java.util.List r1;
        java.lang.Object r2, r3;

        r0 := @this: androidx.paging.PagingSource$LoadResult$Page;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "data");

        specialinvoke r0.<androidx.paging.PagingSource$LoadResult$Page: void <init>(java.util.List,java.lang.Object,java.lang.Object,int,int)>(r1, r2, r3, -2147483648, -2147483648);

        return;
    }

    public final java.util.List component1()
    {
        androidx.paging.PagingSource$LoadResult$Page r0;
        java.util.List $r1;

        r0 := @this: androidx.paging.PagingSource$LoadResult$Page;

        $r1 = r0.<androidx.paging.PagingSource$LoadResult$Page: java.util.List data>;

        return $r1;
    }

    public final java.lang.Object component2()
    {
        androidx.paging.PagingSource$LoadResult$Page r0;
        java.lang.Object $r1;

        r0 := @this: androidx.paging.PagingSource$LoadResult$Page;

        $r1 = r0.<androidx.paging.PagingSource$LoadResult$Page: java.lang.Object prevKey>;

        return $r1;
    }

    public final java.lang.Object component3()
    {
        androidx.paging.PagingSource$LoadResult$Page r0;
        java.lang.Object $r1;

        r0 := @this: androidx.paging.PagingSource$LoadResult$Page;

        $r1 = r0.<androidx.paging.PagingSource$LoadResult$Page: java.lang.Object nextKey>;

        return $r1;
    }

    public final int component4()
    {
        androidx.paging.PagingSource$LoadResult$Page r0;
        int $i0;

        r0 := @this: androidx.paging.PagingSource$LoadResult$Page;

        $i0 = r0.<androidx.paging.PagingSource$LoadResult$Page: int itemsBefore>;

        return $i0;
    }

    public final int component5()
    {
        androidx.paging.PagingSource$LoadResult$Page r0;
        int $i0;

        r0 := @this: androidx.paging.PagingSource$LoadResult$Page;

        $i0 = r0.<androidx.paging.PagingSource$LoadResult$Page: int itemsAfter>;

        return $i0;
    }

    public final androidx.paging.PagingSource$LoadResult$Page copy(java.util.List, java.lang.Object, java.lang.Object, int, int)
    {
        androidx.paging.PagingSource$LoadResult$Page r0, $r4;
        java.util.List r1;
        java.lang.Object r2, r3;
        int i0, i1;

        r0 := @this: androidx.paging.PagingSource$LoadResult$Page;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "data");

        $r4 = new androidx.paging.PagingSource$LoadResult$Page;

        specialinvoke $r4.<androidx.paging.PagingSource$LoadResult$Page: void <init>(java.util.List,java.lang.Object,java.lang.Object,int,int)>(r1, r2, r3, i0, i1);

        return $r4;
    }

    public static androidx.paging.PagingSource$LoadResult$Page copy$default(androidx.paging.PagingSource$LoadResult$Page, java.util.List, java.lang.Object, java.lang.Object, int, int, int, java.lang.Object)
    {
        androidx.paging.PagingSource$LoadResult$Page r0, $r2;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        java.lang.Object r1, r4, r5;
        java.util.List r3;

        r0 := @parameter0: androidx.paging.PagingSource$LoadResult$Page;

        r3 := @parameter1: java.util.List;

        r4 := @parameter2: java.lang.Object;

        r5 := @parameter3: java.lang.Object;

        i6 := @parameter4: int;

        i7 := @parameter5: int;

        i0 := @parameter6: int;

        r1 := @parameter7: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r3 = r0.<androidx.paging.PagingSource$LoadResult$Page: java.util.List data>;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r4 = r0.<androidx.paging.PagingSource$LoadResult$Page: java.lang.Object prevKey>;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        r5 = r0.<androidx.paging.PagingSource$LoadResult$Page: java.lang.Object nextKey>;

     label3:
        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        i6 = r0.<androidx.paging.PagingSource$LoadResult$Page: int itemsBefore>;

     label4:
        $i5 = i0 & 16;

        if $i5 == 0 goto label5;

        i7 = r0.<androidx.paging.PagingSource$LoadResult$Page: int itemsAfter>;

     label5:
        $r2 = virtualinvoke r0.<androidx.paging.PagingSource$LoadResult$Page: androidx.paging.PagingSource$LoadResult$Page copy(java.util.List,java.lang.Object,java.lang.Object,int,int)>(r3, r4, r5, i6, i7);

        return $r2;
    }

    public java.lang.String toString()
    {
        androidx.paging.PagingSource$LoadResult$Page r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r15;
        java.util.List $r3;
        java.lang.Object $r6, $r9;
        int $i0, $i1;
        java.lang.String $r16;

        r0 := @this: androidx.paging.PagingSource$LoadResult$Page;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Page(data=");

        $r3 = r0.<androidx.paging.PagingSource$LoadResult$Page: java.util.List data>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", prevKey=");

        $r6 = r0.<androidx.paging.PagingSource$LoadResult$Page: java.lang.Object prevKey>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", nextKey=");

        $r9 = r0.<androidx.paging.PagingSource$LoadResult$Page: java.lang.Object nextKey>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", itemsBefore=");

        $i0 = r0.<androidx.paging.PagingSource$LoadResult$Page: int itemsBefore>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", itemsAfter=");

        $i1 = r0.<androidx.paging.PagingSource$LoadResult$Page: int itemsAfter>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;
    }

    public int hashCode()
    {
        androidx.paging.PagingSource$LoadResult$Page r0;
        java.util.List $r1;
        java.lang.Object $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, i10, $i11, i12, i13, i14;

        r0 := @this: androidx.paging.PagingSource$LoadResult$Page;

        $r1 = r0.<androidx.paging.PagingSource$LoadResult$Page: java.util.List data>;

        i8 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i0 = i8 * 31;

        $r2 = r0.<androidx.paging.PagingSource$LoadResult$Page: java.lang.Object prevKey>;

        if $r2 != null goto label1;

        $i9 = 0;

        goto label2;

     label1:
        $r3 = r0.<androidx.paging.PagingSource$LoadResult$Page: java.lang.Object prevKey>;

        $i9 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

     label2:
        i10 = $i0 + $i9;

        $i1 = i10 * 31;

        $r4 = r0.<androidx.paging.PagingSource$LoadResult$Page: java.lang.Object nextKey>;

        if $r4 != null goto label3;

        $i11 = 0;

        goto label4;

     label3:
        $r5 = r0.<androidx.paging.PagingSource$LoadResult$Page: java.lang.Object nextKey>;

        $i11 = virtualinvoke $r5.<java.lang.Object: int hashCode()>();

     label4:
        i12 = $i1 + $i11;

        $i3 = i12 * 31;

        $i2 = r0.<androidx.paging.PagingSource$LoadResult$Page: int itemsBefore>;

        $i4 = staticinvoke <java.lang.Integer: int hashCode(int)>($i2);

        i13 = $i3 + $i4;

        $i6 = i13 * 31;

        $i5 = r0.<androidx.paging.PagingSource$LoadResult$Page: int itemsAfter>;

        $i7 = staticinvoke <java.lang.Integer: int hashCode(int)>($i5);

        i14 = $i6 + $i7;

        return i14;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.paging.PagingSource$LoadResult$Page r0, r2;
        java.lang.Object r1, $r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z2, $z3;
        java.util.List $r3, $r4;
        int $i0, $i1, $i2, $i3;

        r0 := @this: androidx.paging.PagingSource$LoadResult$Page;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.paging.PagingSource$LoadResult$Page;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (androidx.paging.PagingSource$LoadResult$Page) r1;

        $r4 = r0.<androidx.paging.PagingSource$LoadResult$Page: java.util.List data>;

        $r3 = r2.<androidx.paging.PagingSource$LoadResult$Page: java.util.List data>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $r6 = r0.<androidx.paging.PagingSource$LoadResult$Page: java.lang.Object prevKey>;

        $r5 = r2.<androidx.paging.PagingSource$LoadResult$Page: java.lang.Object prevKey>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z2 != 0 goto label4;

        return 0;

     label4:
        $r8 = r0.<androidx.paging.PagingSource$LoadResult$Page: java.lang.Object nextKey>;

        $r7 = r2.<androidx.paging.PagingSource$LoadResult$Page: java.lang.Object nextKey>;

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r8, $r7);

        if $z3 != 0 goto label5;

        return 0;

     label5:
        $i1 = r0.<androidx.paging.PagingSource$LoadResult$Page: int itemsBefore>;

        $i0 = r2.<androidx.paging.PagingSource$LoadResult$Page: int itemsBefore>;

        if $i1 == $i0 goto label6;

        return 0;

     label6:
        $i3 = r0.<androidx.paging.PagingSource$LoadResult$Page: int itemsAfter>;

        $i2 = r2.<androidx.paging.PagingSource$LoadResult$Page: int itemsAfter>;

        if $i3 == $i2 goto label7;

        return 0;

     label7:
        return 1;
    }

    public static final androidx.paging.PagingSource$LoadResult$Page access$getEMPTY$cp()
    {
        androidx.paging.PagingSource$LoadResult$Page $r0;

        $r0 = <androidx.paging.PagingSource$LoadResult$Page: androidx.paging.PagingSource$LoadResult$Page EMPTY>;

        return $r0;
    }

    static void <clinit>()
    {
        androidx.paging.PagingSource$LoadResult$Page$Companion $r0;
        androidx.paging.PagingSource$LoadResult$Page $r1;
        java.util.List $r2;

        $r0 = new androidx.paging.PagingSource$LoadResult$Page$Companion;

        specialinvoke $r0.<androidx.paging.PagingSource$LoadResult$Page$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.paging.PagingSource$LoadResult$Page: androidx.paging.PagingSource$LoadResult$Page$Companion Companion> = $r0;

        $r1 = new androidx.paging.PagingSource$LoadResult$Page;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        specialinvoke $r1.<androidx.paging.PagingSource$LoadResult$Page: void <init>(java.util.List,java.lang.Object,java.lang.Object,int,int)>($r2, null, null, 0, 0);

        <androidx.paging.PagingSource$LoadResult$Page: androidx.paging.PagingSource$LoadResult$Page EMPTY> = $r1;

        return;
    }

androidx.paging.PagingSource$LoadResult
    private void <init>()
    {
        androidx.paging.PagingSource$LoadResult r0;

        r0 := @this: androidx.paging.PagingSource$LoadResult;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.paging.PagingSource$LoadResult r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.paging.PagingSource$LoadResult;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.paging.PagingSource$LoadResult: void <init>()>();

        return;
    }

