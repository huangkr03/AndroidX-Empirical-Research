androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridCellsKt
    private static final java.util.List calculateCellsCrossAxisSizeImpl(int, int, int)
    {
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, i12;
        java.util.ArrayList r0, r1, $r2;
        java.util.List $r3;
        java.lang.Integer $r4;
        byte $b13;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i8 = i1 - 1;

        $i9 = i2 * $i8;

        i3 = i0 - $i9;

        i4 = i3 / i1;

        i5 = i3 % i1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(i1);

        r0 = $r2;

        i12 = 0;

     label1:
        if i12 >= i1 goto label4;

        i6 = i12;

        i7 = i6;

        r1 = r0;

        if i7 >= i5 goto label2;

        $b13 = 1;

        goto label3;

     label2:
        $b13 = 0;

     label3:
        $i10 = i4 + $b13;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        i12 = i12 + 1;

        goto label1;

     label4:
        $r3 = (java.util.List) r0;

        return $r3;
    }

    public static final java.util.List access$calculateCellsCrossAxisSizeImpl(int, int, int)
    {
        int i0, i1, i2;
        java.util.List $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r0 = staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridCellsKt: java.util.List calculateCellsCrossAxisSizeImpl(int,int,int)>(i0, i1, i2);

        return $r0;
    }

