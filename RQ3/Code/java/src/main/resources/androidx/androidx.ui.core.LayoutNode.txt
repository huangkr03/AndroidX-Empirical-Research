androidx.ui.core.LayoutNode
<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode$Companion Companion>
<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode$MeasureBlocks measureBlocks>
<androidx.ui.core.LayoutNode: androidx.ui.core.MeasureScope measureScope>
<androidx.ui.core.LayoutNode: androidx.ui.core.Constraints constraints>
<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutDirection layoutDirection>
<androidx.ui.core.LayoutNode: java.util.Map alignmentLines>
<androidx.ui.core.LayoutNode: java.util.Map providedAlignmentLines>
<androidx.ui.core.LayoutNode: boolean isPlaced>
<androidx.ui.core.LayoutNode: boolean affectsParentSize>
<androidx.ui.core.LayoutNode: boolean isMeasuring>
<androidx.ui.core.LayoutNode: boolean isLayingOut>
<androidx.ui.core.LayoutNode: boolean positionedDuringMeasurePass>
<androidx.ui.core.LayoutNode: boolean needsRemeasure>
<androidx.ui.core.LayoutNode: boolean needsRelayout>
<androidx.ui.core.LayoutNode: boolean alignmentLinesRead>
<androidx.ui.core.LayoutNode: boolean dirtyAlignmentLines>
<androidx.ui.core.LayoutNode: boolean alignmentLinesQueriedSinceLastLayout>
<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode alignmentLinesQueryOwner>
<androidx.ui.core.LayoutNode: long measureIteration>
<androidx.ui.core.LayoutNode: boolean canMultiMeasure>
<androidx.ui.core.LayoutNode: boolean layoutChildrenDirty>
<androidx.ui.core.LayoutNode: java.util.List _layoutChildren>
<androidx.ui.core.LayoutNode: boolean parentDataDirty>
<androidx.ui.core.LayoutNode: androidx.ui.core.DataNode parentDataNode>
<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper innerLayoutNodeWrapper>
<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper layoutNodeWrapper>
<androidx.ui.core.LayoutNode: androidx.ui.core.ZIndexModifier outerZIndexModifier>
<androidx.ui.core.LayoutNode: androidx.ui.core.Modifier modifier>
<androidx.ui.core.LayoutNode: boolean handlesParentData>
<androidx.ui.core.LayoutNode: kotlin.jvm.functions.Function1 onAttach>
<androidx.ui.core.LayoutNode: kotlin.jvm.functions.Function1 onDetach>
<androidx.ui.core.LayoutNode: java.util.List onPositionedCallbacks>
<androidx.ui.core.LayoutNode: java.util.List onChildPositionedCallbacks>
<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode$Companion$ErrorMeasureBlocks$1 ErrorMeasureBlocks>
    public void <init>()
    {
        androidx.ui.core.LayoutNode r0, r23, r25, r27, r29, r31;
        androidx.ui.core.LayoutNode$Companion $r1;
        androidx.ui.core.LayoutNode$Companion$ErrorMeasureBlocks$1 $r2;
        androidx.ui.core.LayoutNode$MeasureBlocks $r3;
        androidx.ui.core.LayoutNode$measureScope$1 $r4;
        androidx.ui.core.MeasureScope $r5;
        androidx.ui.unit.IntPx$Companion $r6, $r8;
        androidx.ui.core.Constraints$Companion $r7;
        int $i0, $i1;
        androidx.ui.core.Constraints $r9;
        androidx.ui.core.LayoutDirection $r10;
        java.util.HashMap $r11, $r13, r24, r26;
        java.util.Map $r12, $r14;
        java.util.ArrayList $r15, $r21, $r22;
        androidx.ui.core.InnerPlaceable $r16;
        androidx.ui.core.LayoutNodeWrapper $r17, $r18;
        androidx.ui.core.Modifier$Companion $r19;
        androidx.ui.core.Modifier $r20;
        boolean z0, z1, z2, z3, z4;
        java.util.List r28, r30, r32;

        r0 := @this: androidx.ui.core.LayoutNode;

        specialinvoke r0.<androidx.ui.core.ComponentNode: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        $r1 = <androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode$Companion Companion>;

        $r2 = <androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode$Companion$ErrorMeasureBlocks$1 ErrorMeasureBlocks>;

        $r3 = (androidx.ui.core.LayoutNode$MeasureBlocks) $r2;

        r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode$MeasureBlocks measureBlocks> = $r3;

        $r4 = new androidx.ui.core.LayoutNode$measureScope$1;

        specialinvoke $r4.<androidx.ui.core.LayoutNode$measureScope$1: void <init>(androidx.ui.core.LayoutNode)>(r0);

        $r5 = (androidx.ui.core.MeasureScope) $r4;

        r0.<androidx.ui.core.LayoutNode: androidx.ui.core.MeasureScope measureScope> = $r5;

        $r7 = <androidx.ui.core.Constraints: androidx.ui.core.Constraints$Companion Companion>;

        $r6 = <androidx.ui.unit.IntPx: androidx.ui.unit.IntPx$Companion Companion>;

        $i0 = virtualinvoke $r6.<androidx.ui.unit.IntPx$Companion: int getZero()>();

        $r8 = <androidx.ui.unit.IntPx: androidx.ui.unit.IntPx$Companion Companion>;

        $i1 = virtualinvoke $r8.<androidx.ui.unit.IntPx$Companion: int getZero()>();

        $r9 = virtualinvoke $r7.<androidx.ui.core.Constraints$Companion: androidx.ui.core.Constraints fixed-rRMsBxU(int,int)>($i0, $i1);

        r0.<androidx.ui.core.LayoutNode: androidx.ui.core.Constraints constraints> = $r9;

        $r10 = <androidx.ui.core.LayoutDirection: androidx.ui.core.LayoutDirection Ltr>;

        r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutDirection layoutDirection> = $r10;

        r23 = r0;

        z0 = 0;

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        r24 = $r11;

        $r12 = (java.util.Map) r24;

        r23.<androidx.ui.core.LayoutNode: java.util.Map alignmentLines> = $r12;

        r25 = r0;

        z1 = 0;

        $r13 = new java.util.HashMap;

        specialinvoke $r13.<java.util.HashMap: void <init>()>();

        r26 = $r13;

        $r14 = (java.util.Map) r26;

        r25.<androidx.ui.core.LayoutNode: java.util.Map providedAlignmentLines> = $r14;

        r0.<androidx.ui.core.LayoutNode: boolean affectsParentSize> = 1;

        r0.<androidx.ui.core.LayoutNode: boolean dirtyAlignmentLines> = 1;

        r0.<androidx.ui.core.LayoutNode: boolean layoutChildrenDirty> = 1;

        r27 = r0;

        z2 = 0;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        r28 = (java.util.List) $r15;

        r27.<androidx.ui.core.LayoutNode: java.util.List _layoutChildren> = r28;

        $r16 = new androidx.ui.core.InnerPlaceable;

        specialinvoke $r16.<androidx.ui.core.InnerPlaceable: void <init>(androidx.ui.core.LayoutNode)>(r0);

        $r17 = (androidx.ui.core.LayoutNodeWrapper) $r16;

        r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper innerLayoutNodeWrapper> = $r17;

        $r18 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper getInnerLayoutNodeWrapper$ui_platform_release()>();

        r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper layoutNodeWrapper> = $r18;

        $r19 = <androidx.ui.core.Modifier: androidx.ui.core.Modifier$Companion Companion>;

        $r20 = (androidx.ui.core.Modifier) $r19;

        r0.<androidx.ui.core.LayoutNode: androidx.ui.core.Modifier modifier> = $r20;

        r0.<androidx.ui.core.LayoutNode: boolean handlesParentData> = 1;

        r29 = r0;

        z3 = 0;

        $r21 = new java.util.ArrayList;

        specialinvoke $r21.<java.util.ArrayList: void <init>()>();

        r30 = (java.util.List) $r21;

        r29.<androidx.ui.core.LayoutNode: java.util.List onPositionedCallbacks> = r30;

        r31 = r0;

        z4 = 0;

        $r22 = new java.util.ArrayList;

        specialinvoke $r22.<java.util.ArrayList: void <init>()>();

        r32 = (java.util.List) $r22;

        r31.<androidx.ui.core.LayoutNode: java.util.List onChildPositionedCallbacks> = r32;

        return;
    }

    public final androidx.ui.core.LayoutNode$MeasureBlocks getMeasureBlocks()
    {
        androidx.ui.core.LayoutNode r0;
        androidx.ui.core.LayoutNode$MeasureBlocks $r1;

        r0 := @this: androidx.ui.core.LayoutNode;

        $r1 = r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode$MeasureBlocks measureBlocks>;

        return $r1;
    }

    public final void setMeasureBlocks(androidx.ui.core.LayoutNode$MeasureBlocks)
    {
        androidx.ui.core.LayoutNode r0;
        androidx.ui.core.LayoutNode$MeasureBlocks r1, $r2;
        boolean $z0;

        r0 := @this: androidx.ui.core.LayoutNode;

        r1 := @parameter0: androidx.ui.core.LayoutNode$MeasureBlocks;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode$MeasureBlocks measureBlocks>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, r1);

        if $z0 != 0 goto label1;

        r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode$MeasureBlocks measureBlocks> = r1;

        virtualinvoke r0.<androidx.ui.core.LayoutNode: void requestRemeasure()>();

     label1:
        return;
    }

    public final androidx.ui.core.MeasureScope getMeasureScope()
    {
        androidx.ui.core.LayoutNode r0;
        androidx.ui.core.MeasureScope $r1;

        r0 := @this: androidx.ui.core.LayoutNode;

        $r1 = r0.<androidx.ui.core.LayoutNode: androidx.ui.core.MeasureScope measureScope>;

        return $r1;
    }

    public final androidx.ui.core.Constraints getConstraints()
    {
        androidx.ui.core.LayoutNode r0;
        androidx.ui.core.Constraints $r1;

        r0 := @this: androidx.ui.core.LayoutNode;

        $r1 = r0.<androidx.ui.core.LayoutNode: androidx.ui.core.Constraints constraints>;

        return $r1;
    }

    public final void setConstraints(androidx.ui.core.Constraints)
    {
        androidx.ui.core.LayoutNode r0;
        androidx.ui.core.Constraints r1;

        r0 := @this: androidx.ui.core.LayoutNode;

        r1 := @parameter0: androidx.ui.core.Constraints;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.ui.core.LayoutNode: androidx.ui.core.Constraints constraints> = r1;

        return;
    }

    public final androidx.ui.core.LayoutDirection getLayoutDirection()
    {
        androidx.ui.core.LayoutNode r0;
        androidx.ui.core.LayoutDirection $r1;

        r0 := @this: androidx.ui.core.LayoutNode;

        $r1 = r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutDirection layoutDirection>;

        return $r1;
    }

    public final void setLayoutDirection(androidx.ui.core.LayoutDirection)
    {
        androidx.ui.core.LayoutNode r0;
        androidx.ui.core.LayoutDirection r1;

        r0 := @this: androidx.ui.core.LayoutNode;

        r1 := @parameter0: androidx.ui.core.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutDirection layoutDirection> = r1;

        return;
    }

    public final androidx.ui.core.Ref getRef()
    {
        androidx.ui.core.LayoutNode r0;
        androidx.ui.core.Ref $r1;

        r0 := @this: androidx.ui.core.LayoutNode;

        $r1 = (androidx.ui.core.Ref) null;

        return $r1;
    }

    public final void setRef(androidx.ui.core.Ref)
    {
        androidx.ui.core.LayoutNode r0;
        androidx.ui.core.Ref r1, r2;

        r0 := @this: androidx.ui.core.LayoutNode;

        r1 := @parameter0: androidx.ui.core.Ref;

        r2 = r1;

        if r2 != null goto label1;

        goto label2;

     label1:
        virtualinvoke r2.<androidx.ui.core.Ref: void setValue(java.lang.Object)>(r0);

     label2:
        return;
    }

    public final int getWidth()
    {
        androidx.ui.core.LayoutNode r0;
        androidx.ui.core.LayoutNodeWrapper $r1;
        int $i0;

        r0 := @this: androidx.ui.core.LayoutNode;

        $r1 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper getLayoutNodeWrapper$ui_platform_release()>();

        $i0 = virtualinvoke $r1.<androidx.ui.core.LayoutNodeWrapper: int getWidth()>();

        return $i0;
    }

    public final int getHeight()
    {
        androidx.ui.core.LayoutNode r0;
        androidx.ui.core.LayoutNodeWrapper $r1;
        int $i0;

        r0 := @this: androidx.ui.core.LayoutNode;

        $r1 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper getLayoutNodeWrapper$ui_platform_release()>();

        $i0 = virtualinvoke $r1.<androidx.ui.core.LayoutNodeWrapper: int getHeight()>();

        return $i0;
    }

    public final java.util.Map getAlignmentLines$ui_platform_release()
    {
        androidx.ui.core.LayoutNode r0;
        java.util.Map $r1;

        r0 := @this: androidx.ui.core.LayoutNode;

        $r1 = r0.<androidx.ui.core.LayoutNode: java.util.Map alignmentLines>;

        return $r1;
    }

    public final java.util.Map getProvidedAlignmentLines$ui_platform_release()
    {
        androidx.ui.core.LayoutNode r0;
        java.util.Map $r1;

        r0 := @this: androidx.ui.core.LayoutNode;

        $r1 = r0.<androidx.ui.core.LayoutNode: java.util.Map providedAlignmentLines>;

        return $r1;
    }

    public final boolean isPlaced()
    {
        androidx.ui.core.LayoutNode r0;
        boolean $z0;

        r0 := @this: androidx.ui.core.LayoutNode;

        $z0 = r0.<androidx.ui.core.LayoutNode: boolean isPlaced>;

        return $z0;
    }

    public final void setPlaced$ui_platform_release(boolean)
    {
        androidx.ui.core.LayoutNode r0;
        boolean z0;

        r0 := @this: androidx.ui.core.LayoutNode;

        z0 := @parameter0: boolean;

        r0.<androidx.ui.core.LayoutNode: boolean isPlaced> = z0;

        return;
    }

    public final boolean getAffectsParentSize()
    {
        androidx.ui.core.LayoutNode r0;
        boolean $z0;

        r0 := @this: androidx.ui.core.LayoutNode;

        $z0 = r0.<androidx.ui.core.LayoutNode: boolean affectsParentSize>;

        return $z0;
    }

    public final boolean isMeasuring()
    {
        androidx.ui.core.LayoutNode r0;
        boolean $z0;

        r0 := @this: androidx.ui.core.LayoutNode;

        $z0 = r0.<androidx.ui.core.LayoutNode: boolean isMeasuring>;

        return $z0;
    }

    public final boolean isLayingOut()
    {
        androidx.ui.core.LayoutNode r0;
        boolean $z0;

        r0 := @this: androidx.ui.core.LayoutNode;

        $z0 = r0.<androidx.ui.core.LayoutNode: boolean isLayingOut>;

        return $z0;
    }

    public final boolean getPositionedDuringMeasurePass()
    {
        androidx.ui.core.LayoutNode r0;
        boolean $z0;

        r0 := @this: androidx.ui.core.LayoutNode;

        $z0 = r0.<androidx.ui.core.LayoutNode: boolean positionedDuringMeasurePass>;

        return $z0;
    }

    public final void setPositionedDuringMeasurePass(boolean)
    {
        androidx.ui.core.LayoutNode r0;
        boolean z0;

        r0 := @this: androidx.ui.core.LayoutNode;

        z0 := @parameter0: boolean;

        r0.<androidx.ui.core.LayoutNode: boolean positionedDuringMeasurePass> = z0;

        return;
    }

    public final boolean getNeedsRemeasure()
    {
        androidx.ui.core.LayoutNode r0;
        boolean $z0;

        r0 := @this: androidx.ui.core.LayoutNode;

        $z0 = r0.<androidx.ui.core.LayoutNode: boolean needsRemeasure>;

        return $z0;
    }

    public final void setNeedsRemeasure$ui_platform_release(boolean)
    {
        androidx.ui.core.LayoutNode r0;
        boolean z0, z1, z2, z3, $z4, $z5, z6, z7, z8;
        java.lang.IllegalArgumentException $r1;
        java.lang.String $r2, r4;
        java.lang.Throwable $r3;

        r0 := @this: androidx.ui.core.LayoutNode;

        z0 := @parameter0: boolean;

        $z4 = virtualinvoke r0.<androidx.ui.core.LayoutNode: boolean isMeasuring()>();

        if $z4 != 0 goto label1;

        $z5 = 1;

        goto label2;

     label1:
        $z5 = 0;

     label2:
        z1 = $z5;

        z2 = 0;

        z6 = 0;

        z7 = 0;

        z8 = 0;

        if z1 != 0 goto label3;

        z3 = 0;

        r4 = "Failed requirement.";

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        $r3 = (java.lang.Throwable) $r1;

        throw $r3;

     label3:
        r0.<androidx.ui.core.LayoutNode: boolean needsRemeasure> = z0;

        return;
    }

    public final boolean getNeedsRelayout()
    {
        androidx.ui.core.LayoutNode r0;
        boolean $z0;

        r0 := @this: androidx.ui.core.LayoutNode;

        $z0 = r0.<androidx.ui.core.LayoutNode: boolean needsRelayout>;

        return $z0;
    }

    public final void setNeedsRelayout$ui_platform_release(boolean)
    {
        androidx.ui.core.LayoutNode r0;
        boolean z0, $z1, $z2, $z3, z4, z5, z6, z7, z8, z9, $z10, z11, z12, z13, z14, z15, z16;
        java.lang.IllegalArgumentException $r1, $r4;
        java.lang.String $r2, $r5, r7, r8;
        java.lang.Throwable $r3, $r6;

        r0 := @this: androidx.ui.core.LayoutNode;

        z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<androidx.ui.core.LayoutNode: boolean isMeasuring()>();

        if $z1 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        z4 = $z3;

        z5 = 0;

        z6 = 0;

        z7 = 0;

        z8 = 0;

        if z4 != 0 goto label3;

        z9 = 0;

        r7 = "Failed requirement.";

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke r7.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        $r6 = (java.lang.Throwable) $r4;

        throw $r6;

     label3:
        $z2 = virtualinvoke r0.<androidx.ui.core.LayoutNode: boolean isLayingOut()>();

        if $z2 != 0 goto label4;

        $z10 = 1;

        goto label5;

     label4:
        $z10 = 0;

     label5:
        z11 = $z10;

        z12 = 0;

        z13 = 0;

        z14 = 0;

        z15 = 0;

        if z11 != 0 goto label6;

        z16 = 0;

        r8 = "Failed requirement.";

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = virtualinvoke r8.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        $r3 = (java.lang.Throwable) $r1;

        throw $r3;

     label6:
        r0.<androidx.ui.core.LayoutNode: boolean needsRelayout> = z0;

        return;
    }

    public final boolean getAlignmentLinesRead$ui_platform_release()
    {
        androidx.ui.core.LayoutNode r0;
        boolean $z0;

        r0 := @this: androidx.ui.core.LayoutNode;

        $z0 = r0.<androidx.ui.core.LayoutNode: boolean alignmentLinesRead>;

        return $z0;
    }

    public final void setAlignmentLinesRead$ui_platform_release(boolean)
    {
        androidx.ui.core.LayoutNode r0;
        boolean z0;

        r0 := @this: androidx.ui.core.LayoutNode;

        z0 := @parameter0: boolean;

        r0.<androidx.ui.core.LayoutNode: boolean alignmentLinesRead> = z0;

        return;
    }

    public final boolean getDirtyAlignmentLines$ui_platform_release()
    {
        androidx.ui.core.LayoutNode r0;
        boolean $z0;

        r0 := @this: androidx.ui.core.LayoutNode;

        $z0 = r0.<androidx.ui.core.LayoutNode: boolean dirtyAlignmentLines>;

        return $z0;
    }

    public final void setDirtyAlignmentLines$ui_platform_release(boolean)
    {
        androidx.ui.core.LayoutNode r0;
        boolean z0;

        r0 := @this: androidx.ui.core.LayoutNode;

        z0 := @parameter0: boolean;

        r0.<androidx.ui.core.LayoutNode: boolean dirtyAlignmentLines> = z0;

        return;
    }

    public final boolean getAlignmentLinesRequired$ui_platform_release()
    {
        androidx.ui.core.LayoutNode r0, r1, $r2;
        boolean $z0, $z1;

        r0 := @this: androidx.ui.core.LayoutNode;

        $r2 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode getAlignmentLinesQueryOwner$ui_platform_release()>();

        if $r2 == null goto label1;

        r1 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode getAlignmentLinesQueryOwner$ui_platform_release()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r1);

        $z0 = virtualinvoke r1.<androidx.ui.core.LayoutNode: boolean getAlignmentLinesRead$ui_platform_release()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public final boolean getAlignmentLinesQueriedSinceLastLayout$ui_platform_release()
    {
        androidx.ui.core.LayoutNode r0;
        boolean $z0;

        r0 := @this: androidx.ui.core.LayoutNode;

        $z0 = r0.<androidx.ui.core.LayoutNode: boolean alignmentLinesQueriedSinceLastLayout>;

        return $z0;
    }

    public final void setAlignmentLinesQueriedSinceLastLayout$ui_platform_release(boolean)
    {
        androidx.ui.core.LayoutNode r0;
        boolean z0;

        r0 := @this: androidx.ui.core.LayoutNode;

        z0 := @parameter0: boolean;

        r0.<androidx.ui.core.LayoutNode: boolean alignmentLinesQueriedSinceLastLayout> = z0;

        return;
    }

    public final androidx.ui.core.LayoutNode getAlignmentLinesQueryOwner$ui_platform_release()
    {
        androidx.ui.core.LayoutNode r0, $r1;

        r0 := @this: androidx.ui.core.LayoutNode;

        $r1 = r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode alignmentLinesQueryOwner>;

        return $r1;
    }

    public final void setAlignmentLinesQueryOwner$ui_platform_release(androidx.ui.core.LayoutNode)
    {
        androidx.ui.core.LayoutNode r0, r1;

        r0 := @this: androidx.ui.core.LayoutNode;

        r1 := @parameter0: androidx.ui.core.LayoutNode;

        r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode alignmentLinesQueryOwner> = r1;

        return;
    }

    public androidx.ui.core.LayoutNode getParentLayoutNode()
    {
        androidx.ui.core.LayoutNode r0, $r1;

        r0 := @this: androidx.ui.core.LayoutNode;

        $r1 = specialinvoke r0.<androidx.ui.core.ComponentNode: androidx.ui.core.LayoutNode getContainingLayoutNode$ui_platform_release()>();

        return $r1;
    }

    public androidx.ui.core.LayoutNode getContainingLayoutNode$ui_platform_release()
    {
        androidx.ui.core.LayoutNode r0;

        r0 := @this: androidx.ui.core.LayoutNode;

        return r0;
    }

    public final long getMeasureIteration$ui_platform_release()
    {
        androidx.ui.core.LayoutNode r0;
        long $l0;

        r0 := @this: androidx.ui.core.LayoutNode;

        $l0 = r0.<androidx.ui.core.LayoutNode: long measureIteration>;

        return $l0;
    }

    public final boolean getCanMultiMeasure()
    {
        androidx.ui.core.LayoutNode r0;
        boolean $z0;

        r0 := @this: androidx.ui.core.LayoutNode;

        $z0 = r0.<androidx.ui.core.LayoutNode: boolean canMultiMeasure>;

        return $z0;
    }

    public final void setCanMultiMeasure(boolean)
    {
        androidx.ui.core.LayoutNode r0;
        boolean z0;

        r0 := @this: androidx.ui.core.LayoutNode;

        z0 := @parameter0: boolean;

        r0.<androidx.ui.core.LayoutNode: boolean canMultiMeasure> = z0;

        return;
    }

    public static void getCanMultiMeasure$annotations()
    {
        return;
    }

    public final boolean getLayoutChildrenDirty$ui_platform_release()
    {
        androidx.ui.core.LayoutNode r0;
        boolean $z0;

        r0 := @this: androidx.ui.core.LayoutNode;

        $z0 = r0.<androidx.ui.core.LayoutNode: boolean layoutChildrenDirty>;

        return $z0;
    }

    public final void setLayoutChildrenDirty$ui_platform_release(boolean)
    {
        androidx.ui.core.LayoutNode r0;
        boolean z0;

        r0 := @this: androidx.ui.core.LayoutNode;

        z0 := @parameter0: boolean;

        r0.<androidx.ui.core.LayoutNode: boolean layoutChildrenDirty> = z0;

        return;
    }

    public final java.util.List getLayoutChildren()
    {
        androidx.ui.core.LayoutNode r0;
        boolean $z0;
        java.util.List $r1, $r2, $r3;
        androidx.ui.core.ComponentNode $r4;
        androidx.ui.core.LayoutNode$Companion $r5;

        r0 := @this: androidx.ui.core.LayoutNode;

        $z0 = virtualinvoke r0.<androidx.ui.core.LayoutNode: boolean getLayoutChildrenDirty$ui_platform_release()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.ui.core.LayoutNode: java.util.List _layoutChildren>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        $r5 = <androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode$Companion Companion>;

        $r4 = (androidx.ui.core.ComponentNode) r0;

        $r3 = r0.<androidx.ui.core.LayoutNode: java.util.List _layoutChildren>;

        staticinvoke <androidx.ui.core.LayoutNode$Companion: void access$addLayoutChildren(androidx.ui.core.LayoutNode$Companion,androidx.ui.core.ComponentNode,java.util.List)>($r5, $r4, $r3);

        virtualinvoke r0.<androidx.ui.core.LayoutNode: void setLayoutChildrenDirty$ui_platform_release(boolean)>(0);

     label1:
        $r1 = r0.<androidx.ui.core.LayoutNode: java.util.List _layoutChildren>;

        return $r1;
    }

    public java.lang.Object getParentData()
    {
        androidx.ui.core.LayoutNode r0;
        androidx.ui.core.LayoutNodeWrapper $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.ui.core.LayoutNode;

        $r1 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper getLayoutNodeWrapper$ui_platform_release()>();

        $r2 = virtualinvoke $r1.<androidx.ui.core.LayoutNodeWrapper: java.lang.Object getParentData()>();

        return $r2;
    }

    public final androidx.ui.core.DataNode getParentDataNode$ui_platform_release()
    {
        androidx.ui.core.LayoutNode r0, r1;
        boolean $z0, $z1;
        androidx.ui.core.DataNode $r2, $r3, $r6, $r8;
        androidx.ui.core.DataNodeKey $r4, $r5;
        androidx.ui.core.ComponentNode r7;

        r0 := @this: androidx.ui.core.LayoutNode;

        $z0 = r0.<androidx.ui.core.LayoutNode: boolean parentDataDirty>;

        if $z0 == 0 goto label4;

        $r2 = (androidx.ui.core.DataNode) null;

        r0.<androidx.ui.core.LayoutNode: androidx.ui.core.DataNode parentDataNode> = $r2;

        r7 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.ComponentNode getParent()>();

        r1 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode getParentLayoutNode()>();

     label1:
        if r7 == null goto label3;

        if r7 == r1 goto label3;

        $z1 = r7 instanceof androidx.ui.core.DataNode;

        if $z1 == 0 goto label2;

        $r3 = (androidx.ui.core.DataNode) r7;

        $r4 = virtualinvoke $r3.<androidx.ui.core.DataNode: androidx.ui.core.DataNodeKey getKey()>();

        $r5 = staticinvoke <androidx.ui.core.ComponentNodesKt: androidx.ui.core.DataNodeKey getParentDataKey()>();

        if $r4 != $r5 goto label2;

        $r6 = (androidx.ui.core.DataNode) r7;

        r0.<androidx.ui.core.LayoutNode: androidx.ui.core.DataNode parentDataNode> = $r6;

        goto label3;

     label2:
        r7 = virtualinvoke r7.<androidx.ui.core.ComponentNode: androidx.ui.core.ComponentNode getParent()>();

        goto label1;

     label3:
        r0.<androidx.ui.core.LayoutNode: boolean parentDataDirty> = 0;

     label4:
        $r8 = r0.<androidx.ui.core.LayoutNode: androidx.ui.core.DataNode parentDataNode>;

        return $r8;
    }

    public final void setParentDataNode$ui_platform_release(androidx.ui.core.DataNode)
    {
        androidx.ui.core.LayoutNode r0;
        androidx.ui.core.DataNode r1;

        r0 := @this: androidx.ui.core.LayoutNode;

        r1 := @parameter0: androidx.ui.core.DataNode;

        r0.<androidx.ui.core.LayoutNode: androidx.ui.core.DataNode parentDataNode> = r1;

        return;
    }

    public final androidx.ui.core.LayoutNodeWrapper getInnerLayoutNodeWrapper$ui_platform_release()
    {
        androidx.ui.core.LayoutNode r0;
        androidx.ui.core.LayoutNodeWrapper $r1;

        r0 := @this: androidx.ui.core.LayoutNode;

        $r1 = r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper innerLayoutNodeWrapper>;

        return $r1;
    }

    public final androidx.ui.core.LayoutNodeWrapper getLayoutNodeWrapper$ui_platform_release()
    {
        androidx.ui.core.LayoutNode r0;
        androidx.ui.core.LayoutNodeWrapper $r1;

        r0 := @this: androidx.ui.core.LayoutNode;

        $r1 = r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper layoutNodeWrapper>;

        return $r1;
    }

    public final void setLayoutNodeWrapper$ui_platform_release(androidx.ui.core.LayoutNodeWrapper)
    {
        androidx.ui.core.LayoutNode r0;
        androidx.ui.core.LayoutNodeWrapper r1;

        r0 := @this: androidx.ui.core.LayoutNode;

        r1 := @parameter0: androidx.ui.core.LayoutNodeWrapper;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper layoutNodeWrapper> = r1;

        return;
    }

    public final float getZIndex$ui_platform_release()
    {
        androidx.ui.core.LayoutNode r0;
        java.lang.Float r1, $r3;
        androidx.ui.core.ZIndexModifier r2;
        float $f0, $f1;

        r0 := @this: androidx.ui.core.LayoutNode;

        r2 = r0.<androidx.ui.core.LayoutNode: androidx.ui.core.ZIndexModifier outerZIndexModifier>;

        if r2 != null goto label1;

        $r3 = (java.lang.Float) null;

        goto label2;

     label1:
        $f0 = interfaceinvoke r2.<androidx.ui.core.ZIndexModifier: float getZIndex()>();

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

     label2:
        r1 = $r3;

        if r1 != null goto label3;

        $f1 = 0.0F;

        goto label4;

     label3:
        $f1 = virtualinvoke r1.<java.lang.Float: float floatValue()>();

     label4:
        return $f1;
    }

    public final androidx.ui.core.Modifier getModifier()
    {
        androidx.ui.core.LayoutNode r0;
        androidx.ui.core.Modifier $r1;

        r0 := @this: androidx.ui.core.LayoutNode;

        $r1 = r0.<androidx.ui.core.LayoutNode: androidx.ui.core.Modifier modifier>;

        return $r1;
    }

    public final void setModifier(androidx.ui.core.Modifier)
    {
        androidx.ui.core.LayoutNode r0, r3;
        androidx.ui.core.Modifier r1, $r5, $r9;
        androidx.ui.core.LayoutNodeWrapper r2, $r10, $r14, $r15, $r16, $r17;
        boolean z0, $z1, $z2, $z3, $z4;
        androidx.ui.core.Owner r4;
        java.util.List $r6, $r7;
        androidx.ui.core.ZIndexModifier $r8;
        androidx.ui.core.LayoutNode$modifier$1 $r11;
        kotlin.jvm.functions.Function2 $r12;
        java.lang.Object $r13;

        r0 := @this: androidx.ui.core.LayoutNode;

        r1 := @parameter0: androidx.ui.core.Modifier;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r5 = r0.<androidx.ui.core.LayoutNode: androidx.ui.core.Modifier modifier>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, $r5);

        if $z1 == 0 goto label1;

        return;

     label1:
        r0.<androidx.ui.core.LayoutNode: androidx.ui.core.Modifier modifier> = r1;

        r2 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper getLayoutNodeWrapper$ui_platform_release()>();

        z0 = specialinvoke r0.<androidx.ui.core.LayoutNode: boolean hasNewPositioningCallback()>();

        $r6 = r0.<androidx.ui.core.LayoutNode: java.util.List onPositionedCallbacks>;

        interfaceinvoke $r6.<java.util.List: void clear()>();

        $r7 = r0.<androidx.ui.core.LayoutNode: java.util.List onChildPositionedCallbacks>;

        interfaceinvoke $r7.<java.util.List: void clear()>();

        $r8 = (androidx.ui.core.ZIndexModifier) null;

        r0.<androidx.ui.core.LayoutNode: androidx.ui.core.ZIndexModifier outerZIndexModifier> = $r8;

        $r9 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.Modifier getModifier()>();

        $r10 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper getInnerLayoutNodeWrapper$ui_platform_release()>();

        $r11 = new androidx.ui.core.LayoutNode$modifier$1;

        specialinvoke $r11.<androidx.ui.core.LayoutNode$modifier$1: void <init>(androidx.ui.core.LayoutNode)>(r0);

        $r12 = (kotlin.jvm.functions.Function2) $r11;

        $r13 = interfaceinvoke $r9.<androidx.ui.core.Modifier: java.lang.Object foldOut(java.lang.Object,kotlin.jvm.functions.Function2)>($r10, $r12);

        $r14 = (androidx.ui.core.LayoutNodeWrapper) $r13;

        virtualinvoke r0.<androidx.ui.core.LayoutNode: void setLayoutNodeWrapper$ui_platform_release(androidx.ui.core.LayoutNodeWrapper)>($r14);

        $r15 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper getLayoutNodeWrapper$ui_platform_release()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r15);

        if $z2 != 0 goto label2;

        virtualinvoke r2.<androidx.ui.core.LayoutNodeWrapper: void detach()>();

        virtualinvoke r0.<androidx.ui.core.LayoutNode: void requestRemeasure()>();

        goto label3;

     label2:
        $z3 = virtualinvoke r0.<androidx.ui.core.LayoutNode: boolean getNeedsRemeasure()>();

        if $z3 != 0 goto label3;

        $z4 = virtualinvoke r0.<androidx.ui.core.LayoutNode: boolean getNeedsRelayout()>();

        if $z4 != 0 goto label3;

        if z0 == 0 goto label3;

        virtualinvoke r0.<androidx.ui.core.LayoutNode: void requestRemeasure()>();

     label3:
        r3 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode getParentLayoutNode()>();

        if r3 == null goto label4;

        $r16 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper getLayoutNodeWrapper$ui_platform_release()>();

        $r17 = virtualinvoke r3.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper getInnerLayoutNodeWrapper$ui_platform_release()>();

        virtualinvoke $r16.<androidx.ui.core.LayoutNodeWrapper: void setWrappedBy$ui_platform_release(androidx.ui.core.LayoutNodeWrapper)>($r17);

     label4:
        r4 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.Owner getOwner()>();

        if r4 != null goto label5;

        goto label6;

     label5:
        interfaceinvoke r4.<androidx.ui.core.Owner: void onInvalidate(androidx.ui.core.LayoutNode)>(r0);

     label6:
        return;
    }

    public final boolean getHandlesParentData()
    {
        androidx.ui.core.LayoutNode r0;
        boolean $z0;

        r0 := @this: androidx.ui.core.LayoutNode;

        $z0 = r0.<androidx.ui.core.LayoutNode: boolean handlesParentData>;

        return $z0;
    }

    public final void setHandlesParentData(boolean)
    {
        androidx.ui.core.LayoutNode r0;
        boolean z0;

        r0 := @this: androidx.ui.core.LayoutNode;

        z0 := @parameter0: boolean;

        r0.<androidx.ui.core.LayoutNode: boolean handlesParentData> = z0;

        return;
    }

    public static void getHandlesParentData$annotations()
    {
        return;
    }

    public final androidx.ui.core.LayoutCoordinates getCoordinates()
    {
        androidx.ui.core.LayoutNode r0;
        androidx.ui.core.LayoutNodeWrapper $r1;
        androidx.ui.core.LayoutCoordinates $r2;

        r0 := @this: androidx.ui.core.LayoutNode;

        $r1 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper getInnerLayoutNodeWrapper$ui_platform_release()>();

        $r2 = (androidx.ui.core.LayoutCoordinates) $r1;

        return $r2;
    }

    public void attach(androidx.ui.core.Owner)
    {
        androidx.ui.core.LayoutNode r0, r3;
        androidx.ui.core.Owner r1;
        kotlin.jvm.functions.Function1 r4;

        r0 := @this: androidx.ui.core.LayoutNode;

        r1 := @parameter0: androidx.ui.core.Owner;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "owner");

        specialinvoke r0.<androidx.ui.core.ComponentNode: void attach(androidx.ui.core.Owner)>(r1);

        virtualinvoke r0.<androidx.ui.core.LayoutNode: void requestRemeasure()>();

        r0.<androidx.ui.core.LayoutNode: boolean parentDataDirty> = 1;

        r3 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode getParentLayoutNode()>();

        if r3 != null goto label1;

        goto label2;

     label1:
        virtualinvoke r3.<androidx.ui.core.LayoutNode: void setLayoutChildrenDirty$ui_platform_release(boolean)>(1);

     label2:
        r4 = virtualinvoke r0.<androidx.ui.core.LayoutNode: kotlin.jvm.functions.Function1 getOnAttach()>();

        if r4 != null goto label3;

        goto label4;

     label3:
        interfaceinvoke r4.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

     label4:
        return;
    }

    public final kotlin.jvm.functions.Function1 getOnAttach()
    {
        androidx.ui.core.LayoutNode r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.ui.core.LayoutNode;

        $r1 = r0.<androidx.ui.core.LayoutNode: kotlin.jvm.functions.Function1 onAttach>;

        return $r1;
    }

    public final void setOnAttach(kotlin.jvm.functions.Function1)
    {
        androidx.ui.core.LayoutNode r0;
        kotlin.jvm.functions.Function1 r1;

        r0 := @this: androidx.ui.core.LayoutNode;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        r0.<androidx.ui.core.LayoutNode: kotlin.jvm.functions.Function1 onAttach> = r1;

        return;
    }

    public void detach()
    {
        androidx.ui.core.LayoutNode r0, $r3, r7;
        androidx.ui.core.Owner r1, r6;
        kotlin.jvm.functions.Function1 r2;
        androidx.ui.core.LayoutNodeWrapper $r5;

        r0 := @this: androidx.ui.core.LayoutNode;

        r6 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.Owner getOwner()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r6);

        r1 = r6;

        r7 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode getParentLayoutNode()>();

        if r7 == null goto label1;

        virtualinvoke r7.<androidx.ui.core.LayoutNode: void onInvalidate()>();

        virtualinvoke r7.<androidx.ui.core.LayoutNode: void setLayoutChildrenDirty$ui_platform_release(boolean)>(1);

        virtualinvoke r7.<androidx.ui.core.LayoutNode: void requestRemeasure()>();

     label1:
        r0.<androidx.ui.core.LayoutNode: boolean parentDataDirty> = 1;

        $r3 = (androidx.ui.core.LayoutNode) null;

        virtualinvoke r0.<androidx.ui.core.LayoutNode: void setAlignmentLinesQueryOwner$ui_platform_release(androidx.ui.core.LayoutNode)>($r3);

        r2 = virtualinvoke r0.<androidx.ui.core.LayoutNode: kotlin.jvm.functions.Function1 getOnDetach()>();

        if r2 != null goto label2;

        goto label3;

     label2:
        interfaceinvoke r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

     label3:
        $r5 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper getLayoutNodeWrapper$ui_platform_release()>();

        virtualinvoke $r5.<androidx.ui.core.LayoutNodeWrapper: void detach()>();

        specialinvoke r0.<androidx.ui.core.ComponentNode: void detach()>();

        return;
    }

    public final kotlin.jvm.functions.Function1 getOnDetach()
    {
        androidx.ui.core.LayoutNode r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.ui.core.LayoutNode;

        $r1 = r0.<androidx.ui.core.LayoutNode: kotlin.jvm.functions.Function1 onDetach>;

        return $r1;
    }

    public final void setOnDetach(kotlin.jvm.functions.Function1)
    {
        androidx.ui.core.LayoutNode r0;
        kotlin.jvm.functions.Function1 r1;

        r0 := @this: androidx.ui.core.LayoutNode;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        r0.<androidx.ui.core.LayoutNode: kotlin.jvm.functions.Function1 onDetach> = r1;

        return;
    }

    public androidx.ui.core.Placeable measure(androidx.ui.core.Constraints, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.core.LayoutNode r0, $r14, r16, r18;
        androidx.ui.core.Constraints r1, $r20;
        androidx.ui.core.LayoutDirection r2;
        androidx.ui.core.Owner r3;
        long l0, $l1;
        boolean z0, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, z10, $z11, $z12;
        androidx.ui.core.ComponentNode $r4;
        androidx.ui.core.LayoutNode$measure$2 $r5;
        kotlin.jvm.functions.Function0 $r6;
        androidx.ui.core.LayoutNodeWrapper $r7, $r9;
        androidx.ui.core.Placeable $r8, $r10;
        java.lang.IllegalStateException $r11;
        java.lang.String $r12, r17;
        java.lang.Throwable $r13;
        byte $b2;

        r0 := @this: androidx.ui.core.LayoutNode;

        r1 := @parameter0: androidx.ui.core.Constraints;

        r2 := @parameter1: androidx.ui.core.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "constraints");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "layoutDirection");

        $r4 = (androidx.ui.core.ComponentNode) r0;

        r3 = staticinvoke <androidx.ui.core.ComponentNodesKt: androidx.ui.core.Owner requireOwner(androidx.ui.core.ComponentNode)>($r4);

        l0 = interfaceinvoke r3.<androidx.ui.core.Owner: long getMeasureIteration()>();

        $z2 = virtualinvoke r0.<androidx.ui.core.LayoutNode: boolean getCanMultiMeasure()>();

        if $z2 != 0 goto label01;

        $r14 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode getParentLayoutNode()>();

        if $r14 == null goto label02;

        r16 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode getParentLayoutNode()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r16);

        $z6 = virtualinvoke r16.<androidx.ui.core.LayoutNode: boolean getCanMultiMeasure()>();

        if $z6 == 0 goto label02;

     label01:
        $z7 = 1;

        goto label03;

     label02:
        $z7 = 0;

     label03:
        virtualinvoke r0.<androidx.ui.core.LayoutNode: void setCanMultiMeasure(boolean)>($z7);

        $l1 = virtualinvoke r0.<androidx.ui.core.LayoutNode: long getMeasureIteration$ui_platform_release()>();

        $b2 = $l1 cmp l0;

        if $b2 != 0 goto label04;

        $z5 = virtualinvoke r0.<androidx.ui.core.LayoutNode: boolean getCanMultiMeasure()>();

        if $z5 == 0 goto label05;

     label04:
        $z8 = 1;

        goto label06;

     label05:
        $z8 = 0;

     label06:
        z9 = $z8;

        z0 = 0;

        z10 = 0;

        if z9 != 0 goto label07;

        r17 = "measure() may not be called multiple times on the same Measurable";

        $r11 = new java.lang.IllegalStateException;

        $r12 = virtualinvoke r17.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        $r13 = (java.lang.Throwable) $r11;

        throw $r13;

     label07:
        r0.<androidx.ui.core.LayoutNode: long measureIteration> = l0;

        r18 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode getParentLayoutNode()>();

        if r18 == null goto label08;

        $z4 = virtualinvoke r18.<androidx.ui.core.LayoutNode: boolean isMeasuring()>();

        if $z4 != 1 goto label08;

        $z11 = 1;

        goto label09;

     label08:
        $z11 = 0;

     label09:
        r0.<androidx.ui.core.LayoutNode: boolean affectsParentSize> = $z11;

        $r20 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.Constraints getConstraints()>();

        $z12 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r20, r1);

        if $z12 == 0 goto label10;

        $z3 = virtualinvoke r0.<androidx.ui.core.LayoutNode: boolean getNeedsRemeasure()>();

        if $z3 != 0 goto label10;

        $r9 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper getLayoutNodeWrapper$ui_platform_release()>();

        $r10 = (androidx.ui.core.Placeable) $r9;

        return $r10;

     label10:
        virtualinvoke r0.<androidx.ui.core.LayoutNode: void setNeedsRemeasure$ui_platform_release(boolean)>(0);

        r0.<androidx.ui.core.LayoutNode: boolean isMeasuring> = 1;

        virtualinvoke r0.<androidx.ui.core.LayoutNode: void setDirtyAlignmentLines$ui_platform_release(boolean)>(1);

        virtualinvoke r0.<androidx.ui.core.LayoutNode: void setConstraints(androidx.ui.core.Constraints)>(r1);

        $r5 = new androidx.ui.core.LayoutNode$measure$2;

        specialinvoke $r5.<androidx.ui.core.LayoutNode$measure$2: void <init>(androidx.ui.core.LayoutNode,androidx.ui.core.Constraints,androidx.ui.core.LayoutDirection)>(r0, r1, r2);

        $r6 = (kotlin.jvm.functions.Function0) $r5;

        interfaceinvoke r3.<androidx.ui.core.Owner: void observeMeasureModelReads(androidx.ui.core.LayoutNode,kotlin.jvm.functions.Function0)>(r0, $r6);

        r0.<androidx.ui.core.LayoutNode: boolean isMeasuring> = 0;

        virtualinvoke r0.<androidx.ui.core.LayoutNode: void setNeedsRelayout$ui_platform_release(boolean)>(1);

        $r7 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper getLayoutNodeWrapper$ui_platform_release()>();

        $r8 = (androidx.ui.core.Placeable) $r7;

        return $r8;
    }

    public int minIntrinsicWidth-Ujlv2dA(int, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.core.LayoutNode r0;
        int i0, $i1;
        androidx.ui.core.LayoutDirection r1;
        androidx.ui.core.LayoutNodeWrapper $r2;

        r0 := @this: androidx.ui.core.LayoutNode;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.ui.core.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "layoutDirection");

        $r2 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper getLayoutNodeWrapper$ui_platform_release()>();

        $i1 = virtualinvoke $r2.<androidx.ui.core.LayoutNodeWrapper: int minIntrinsicWidth-Ujlv2dA(int,androidx.ui.core.LayoutDirection)>(i0, r1);

        return $i1;
    }

    public int maxIntrinsicWidth-Ujlv2dA(int, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.core.LayoutNode r0;
        int i0, $i1;
        androidx.ui.core.LayoutDirection r1;
        androidx.ui.core.LayoutNodeWrapper $r2;

        r0 := @this: androidx.ui.core.LayoutNode;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.ui.core.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "layoutDirection");

        $r2 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper getLayoutNodeWrapper$ui_platform_release()>();

        $i1 = virtualinvoke $r2.<androidx.ui.core.LayoutNodeWrapper: int maxIntrinsicWidth-Ujlv2dA(int,androidx.ui.core.LayoutDirection)>(i0, r1);

        return $i1;
    }

    public int minIntrinsicHeight-Ujlv2dA(int, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.core.LayoutNode r0;
        int i0, $i1;
        androidx.ui.core.LayoutDirection r1;
        androidx.ui.core.LayoutNodeWrapper $r2;

        r0 := @this: androidx.ui.core.LayoutNode;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.ui.core.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "layoutDirection");

        $r2 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper getLayoutNodeWrapper$ui_platform_release()>();

        $i1 = virtualinvoke $r2.<androidx.ui.core.LayoutNodeWrapper: int minIntrinsicHeight-Ujlv2dA(int,androidx.ui.core.LayoutDirection)>(i0, r1);

        return $i1;
    }

    public int maxIntrinsicHeight-Ujlv2dA(int, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.core.LayoutNode r0;
        int i0, $i1;
        androidx.ui.core.LayoutDirection r1;
        androidx.ui.core.LayoutNodeWrapper $r2;

        r0 := @this: androidx.ui.core.LayoutNode;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.ui.core.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "layoutDirection");

        $r2 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper getLayoutNodeWrapper$ui_platform_release()>();

        $i1 = virtualinvoke $r2.<androidx.ui.core.LayoutNodeWrapper: int maxIntrinsicHeight-Ujlv2dA(int,androidx.ui.core.LayoutDirection)>(i0, r1);

        return $i1;
    }

    public final void place-rRMsBxU(int, int)
    {
        androidx.ui.core.LayoutNode r0;
        int i0, i1, i2, $i4, i5;
        androidx.ui.core.InnerPlacementScope r1, r4;
        boolean z0, z1;
        androidx.ui.unit.IntPxSize r3;
        long l3, $l6;
        androidx.ui.core.LayoutDirection $r5;
        androidx.ui.core.LayoutNodeWrapper $r6, $r7;
        androidx.ui.core.Placeable $r8;

        r0 := @this: androidx.ui.core.LayoutNode;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = <androidx.ui.core.InnerPlacementScope: androidx.ui.core.InnerPlacementScope INSTANCE>;

        z0 = 0;

        z1 = 0;

        $r5 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutDirection getLayoutDirection()>();

        virtualinvoke r1.<androidx.ui.core.InnerPlacementScope: void setParentLayoutDirection(androidx.ui.core.LayoutDirection)>($r5);

        i2 = virtualinvoke r1.<androidx.ui.core.InnerPlacementScope: int getParentWidth()>();

        $r6 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper getLayoutNodeWrapper$ui_platform_release()>();

        r3 = virtualinvoke $r6.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.unit.IntPxSize getSize()>();

        r4 = r1;

        l3 = virtualinvoke r3.<androidx.ui.unit.IntPxSize: long getValue()>();

        $l6 = l3 >> 32;

        $i4 = (int) $l6;

        i5 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i4);

        virtualinvoke r4.<androidx.ui.core.InnerPlacementScope: void setParentWidth-gshw56o(int)>(i5);

        $r7 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper getLayoutNodeWrapper$ui_platform_release()>();

        $r8 = (androidx.ui.core.Placeable) $r7;

        virtualinvoke r1.<androidx.ui.core.InnerPlacementScope: void place-sXe7h04(androidx.ui.core.Placeable,int,int)>($r8, i0, i1);

        virtualinvoke r1.<androidx.ui.core.InnerPlacementScope: void setParentWidth-gshw56o(int)>(i2);

        return;
    }

    public final void draw(androidx.ui.graphics.Canvas)
    {
        androidx.ui.core.LayoutNode r0;
        androidx.ui.graphics.Canvas r1;
        androidx.ui.core.LayoutNodeWrapper $r2;

        r0 := @this: androidx.ui.core.LayoutNode;

        r1 := @parameter0: androidx.ui.graphics.Canvas;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "canvas");

        $r2 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper getLayoutNodeWrapper$ui_platform_release()>();

        virtualinvoke $r2.<androidx.ui.core.LayoutNodeWrapper: void draw(androidx.ui.graphics.Canvas)>(r1);

        return;
    }

    public final boolean hitTest(androidx.ui.unit.PxPosition, java.util.List)
    {
        androidx.ui.core.LayoutNode r0;
        androidx.ui.unit.PxPosition r1;
        java.util.List r2;
        androidx.ui.core.LayoutNodeWrapper $r3;
        boolean $z0;

        r0 := @this: androidx.ui.core.LayoutNode;

        r1 := @parameter0: androidx.ui.unit.PxPosition;

        r2 := @parameter1: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "pointerPositionRelativeToScreen");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "hitPointerInputFilters");

        $r3 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper getLayoutNodeWrapper$ui_platform_release()>();

        $z0 = virtualinvoke $r3.<androidx.ui.core.LayoutNodeWrapper: boolean hitTest(androidx.ui.unit.PxPosition,java.util.List)>(r1, r2);

        return $z0;
    }

    public final androidx.ui.unit.IntPx getAlignmentLine(androidx.ui.core.AlignmentLine)
    {
        androidx.ui.core.LayoutNode r0;
        androidx.ui.core.AlignmentLine r1;
        int i0, $i4, $i5, $i9, $i11, i14, $i15, i17, $i18;
        float f0, $f1, $f2, $f3, f4, f5, f6, $f7, f8, $f9;
        boolean z0, $z1, $z2, $z3, $z4, z12, z14, z15, z20, z21;
        long l1, l2, l3, $l6, $l7, $l8, $l10, l12, $l13, $l16;
        java.util.Map $r2;
        java.lang.Object $r3;
        androidx.ui.unit.PxPosition $r4, r10, r13;
        androidx.ui.core.LayoutNodeWrapper $r5, $r11, $r12;
        androidx.ui.unit.IntPx$Companion $r6, $r7;
        androidx.ui.unit.IntPx $r8, r9, $r15;
        kotlin.jvm.internal.FloatCompanionObject $r14, $r16;

        r0 := @this: androidx.ui.core.LayoutNode;

        r1 := @parameter0: androidx.ui.core.AlignmentLine;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "line");

        $r2 = virtualinvoke r0.<androidx.ui.core.LayoutNode: java.util.Map getAlignmentLines$ui_platform_release()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r9 = (androidx.ui.unit.IntPx) $r3;

        if r9 != null goto label1;

        $r8 = (androidx.ui.unit.IntPx) null;

        return $r8;

     label1:
        i0 = virtualinvoke r9.<androidx.ui.unit.IntPx: int unbox-impl()>();

        $f1 = (float) i0;

        $f3 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f1);

        $f2 = (float) i0;

        f4 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f2);

        f5 = $f3;

        z12 = 0;

        $i4 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f5);

        l12 = (long) $i4;

        f0 = f4;

        z0 = 0;

        $i5 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f0);

        l1 = (long) $i5;

        $l7 = l12 << 32;

        $l6 = l1 & 4294967295L;

        l2 = $l7 | $l6;

        l3 = l2;

        $r4 = new androidx.ui.unit.PxPosition;

        specialinvoke $r4.<androidx.ui.unit.PxPosition: void <init>(long)>(l3);

        r10 = $r4;

        $r11 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper getInnerLayoutNodeWrapper$ui_platform_release()>();

     label2:
        $r5 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper getLayoutNodeWrapper$ui_platform_release()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r11, $r5);

        if $z1 != 0 goto label3;

        r10 = virtualinvoke $r11.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.unit.PxPosition toParentPosition(androidx.ui.unit.PxPosition)>(r10);

        $r12 = virtualinvoke $r11.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper getWrappedBy$ui_platform_release()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r12);

        $r11 = $r12;

        goto label2;

     label3:
        r13 = virtualinvoke $r11.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.unit.PxPosition toParentPosition(androidx.ui.unit.PxPosition)>(r10);

        $z2 = r1 instanceof androidx.ui.core.HorizontalAlignmentLine;

        if $z2 == 0 goto label6;

        $l13 = virtualinvoke r13.<androidx.ui.unit.PxPosition: long getValue()>();

        z14 = 0;

        $r14 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l10 = $l13 & 4294967295L;

        i14 = (int) $l10;

        z15 = 0;

        f6 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>(i14);

        $f7 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>(f6);

        $z4 = staticinvoke <java.lang.Float: boolean isInfinite(float)>($f7);

        if $z4 == 0 goto label4;

        $r7 = <androidx.ui.unit.IntPx: androidx.ui.unit.IntPx$Companion Companion>;

        $i15 = virtualinvoke $r7.<androidx.ui.unit.IntPx$Companion: int getInfinity()>();

        goto label5;

     label4:
        $i11 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f7);

        $i15 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i11);

     label5:
        $r15 = staticinvoke <androidx.ui.unit.IntPx: androidx.ui.unit.IntPx box-impl(int)>($i15);

        goto label9;

     label6:
        $l16 = virtualinvoke r13.<androidx.ui.unit.PxPosition: long getValue()>();

        z20 = 0;

        $r16 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l8 = $l16 >> 32;

        i17 = (int) $l8;

        z21 = 0;

        f8 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>(i17);

        $f9 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>(f8);

        $z3 = staticinvoke <java.lang.Float: boolean isInfinite(float)>($f9);

        if $z3 == 0 goto label7;

        $r6 = <androidx.ui.unit.IntPx: androidx.ui.unit.IntPx$Companion Companion>;

        $i18 = virtualinvoke $r6.<androidx.ui.unit.IntPx$Companion: int getInfinity()>();

        goto label8;

     label7:
        $i9 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f9);

        $i18 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i9);

     label8:
        $r15 = staticinvoke <androidx.ui.unit.IntPx: androidx.ui.unit.IntPx box-impl(int)>($i18);

     label9:
        return $r15;
    }

    private final boolean hasNewPositioningCallback()
    {
        androidx.ui.core.LayoutNode r0;
        androidx.ui.core.Modifier $r1;
        java.lang.Boolean $r2, $r6;
        androidx.ui.core.LayoutNode$hasNewPositioningCallback$1 $r3;
        kotlin.jvm.functions.Function2 $r4;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: androidx.ui.core.LayoutNode;

        $r1 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.Modifier getModifier()>();

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r3 = new androidx.ui.core.LayoutNode$hasNewPositioningCallback$1;

        specialinvoke $r3.<androidx.ui.core.LayoutNode$hasNewPositioningCallback$1: void <init>(androidx.ui.core.LayoutNode)>(r0);

        $r4 = (kotlin.jvm.functions.Function2) $r3;

        $r5 = interfaceinvoke $r1.<androidx.ui.core.Modifier: java.lang.Object foldOut(java.lang.Object,kotlin.jvm.functions.Function2)>($r2, $r4);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public final void layout()
    {
        androidx.ui.core.LayoutNode r0, r2;
        androidx.ui.core.Owner r1;
        java.lang.Iterable $r3, $r19;
        java.util.Iterator r4, r20;
        java.lang.Object r5, $r17, r21;
        androidx.ui.core.AlignmentLine r6;
        int i0, $i1, $i2;
        java.util.Map r7, $r11, $r13, $r16, r23, r24, $r26, r27;
        boolean z3, $z4, $z5, $z6, $z7, $z8, $z9, $z11, z12, z13, z14;
        androidx.ui.core.ComponentNode $r8;
        androidx.ui.core.LayoutNode$layout$1 $r9;
        kotlin.jvm.functions.Function0 $r10;
        java.util.List $r12;
        java.util.Set $r14;
        androidx.ui.unit.IntPx $r18, r22, r25;

        r0 := @this: androidx.ui.core.LayoutNode;

        $z4 = virtualinvoke r0.<androidx.ui.core.LayoutNode: boolean getNeedsRelayout()>();

        if $z4 == 0 goto label9;

        virtualinvoke r0.<androidx.ui.core.LayoutNode: void setNeedsRelayout$ui_platform_release(boolean)>(0);

        r0.<androidx.ui.core.LayoutNode: boolean isLayingOut> = 1;

        $r8 = (androidx.ui.core.ComponentNode) r0;

        r1 = staticinvoke <androidx.ui.core.ComponentNodesKt: androidx.ui.core.Owner requireOwner(androidx.ui.core.ComponentNode)>($r8);

        $r9 = new androidx.ui.core.LayoutNode$layout$1;

        specialinvoke $r9.<androidx.ui.core.LayoutNode$layout$1: void <init>(androidx.ui.core.LayoutNode)>(r0);

        $r10 = (kotlin.jvm.functions.Function0) $r9;

        interfaceinvoke r1.<androidx.ui.core.Owner: void observeLayoutModelReads(androidx.ui.core.LayoutNode,kotlin.jvm.functions.Function0)>(r0, $r10);

        $z5 = virtualinvoke r0.<androidx.ui.core.LayoutNode: boolean getAlignmentLinesRequired$ui_platform_release()>();

        if $z5 == 0 goto label8;

        $z6 = virtualinvoke r0.<androidx.ui.core.LayoutNode: boolean getDirtyAlignmentLines$ui_platform_release()>();

        if $z6 == 0 goto label8;

        $r11 = virtualinvoke r0.<androidx.ui.core.LayoutNode: java.util.Map getAlignmentLines$ui_platform_release()>();

        interfaceinvoke $r11.<java.util.Map: void clear()>();

        $r12 = virtualinvoke r0.<androidx.ui.core.LayoutNode: java.util.List getLayoutChildren()>();

        $r19 = (java.lang.Iterable) $r12;

        r20 = interfaceinvoke $r19.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z11 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label7;

        r21 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.ui.core.LayoutNode) r21;

        $z7 = virtualinvoke r2.<androidx.ui.core.LayoutNode: boolean isPlaced()>();

        if $z7 != 0 goto label2;

        goto label1;

     label2:
        $r13 = virtualinvoke r2.<androidx.ui.core.LayoutNode: java.util.Map getAlignmentLines$ui_platform_release()>();

        $r14 = interfaceinvoke $r13.<java.util.Map: java.util.Set keySet()>();

        $r3 = (java.lang.Iterable) $r14;

        r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label3:
        $z8 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label6;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (androidx.ui.core.AlignmentLine) r5;

        r22 = virtualinvoke r2.<androidx.ui.core.LayoutNode: androidx.ui.unit.IntPx getAlignmentLine(androidx.ui.core.AlignmentLine)>(r6);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r22);

        i0 = virtualinvoke r22.<androidx.ui.unit.IntPx: int unbox-impl()>();

        r23 = virtualinvoke r0.<androidx.ui.core.LayoutNode: java.util.Map getAlignmentLines$ui_platform_release()>();

        r24 = virtualinvoke r0.<androidx.ui.core.LayoutNode: java.util.Map getAlignmentLines$ui_platform_release()>();

        z12 = 0;

        r7 = r24;

        z3 = 0;

        $z9 = interfaceinvoke r7.<java.util.Map: boolean containsKey(java.lang.Object)>(r6);

        if $z9 == 0 goto label4;

        $r16 = virtualinvoke r0.<androidx.ui.core.LayoutNode: java.util.Map getAlignmentLines$ui_platform_release()>();

        $r17 = staticinvoke <kotlin.collections.MapsKt: java.lang.Object getValue(java.util.Map,java.lang.Object)>($r16, r6);

        $r18 = (androidx.ui.unit.IntPx) $r17;

        $i1 = virtualinvoke $r18.<androidx.ui.unit.IntPx: int unbox-impl()>();

        $i2 = staticinvoke <androidx.ui.core.AlignmentLineKt: int merge-CBRbNzc(androidx.ui.core.AlignmentLine,int,int)>(r6, $i1, i0);

        goto label5;

     label4:
        $i2 = i0;

     label5:
        r25 = staticinvoke <androidx.ui.unit.IntPx: androidx.ui.unit.IntPx box-impl(int)>($i2);

        z13 = 0;

        interfaceinvoke r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r25);

        goto label3;

     label6:
        goto label1;

     label7:
        $r26 = virtualinvoke r0.<androidx.ui.core.LayoutNode: java.util.Map getAlignmentLines$ui_platform_release()>();

        r27 = virtualinvoke r0.<androidx.ui.core.LayoutNode: java.util.Map getProvidedAlignmentLines$ui_platform_release()>();

        z14 = 0;

        interfaceinvoke $r26.<java.util.Map: void putAll(java.util.Map)>(r27);

        virtualinvoke r0.<androidx.ui.core.LayoutNode: void setDirtyAlignmentLines$ui_platform_release(boolean)>(0);

     label8:
        r0.<androidx.ui.core.LayoutNode: boolean isLayingOut> = 0;

     label9:
        return;
    }

    public final java.util.Map calculateAlignmentLines$ui_platform_release()
    {
        androidx.ui.core.LayoutNode r0;
        boolean $z0;
        java.util.Map $r1;

        r0 := @this: androidx.ui.core.LayoutNode;

        virtualinvoke r0.<androidx.ui.core.LayoutNode: void setAlignmentLinesRead$ui_platform_release(boolean)>(1);

        virtualinvoke r0.<androidx.ui.core.LayoutNode: void setAlignmentLinesQueryOwner$ui_platform_release(androidx.ui.core.LayoutNode)>(r0);

        virtualinvoke r0.<androidx.ui.core.LayoutNode: void setAlignmentLinesQueriedSinceLastLayout$ui_platform_release(boolean)>(1);

        $z0 = virtualinvoke r0.<androidx.ui.core.LayoutNode: boolean getDirtyAlignmentLines$ui_platform_release()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<androidx.ui.core.LayoutNode: void setNeedsRelayout$ui_platform_release(boolean)>(1);

        virtualinvoke r0.<androidx.ui.core.LayoutNode: void layout()>();

     label1:
        $r1 = virtualinvoke r0.<androidx.ui.core.LayoutNode: java.util.Map getAlignmentLines$ui_platform_release()>();

        return $r1;
    }

    public final void handleMeasureResult$ui_platform_release(androidx.ui.core.MeasureScope$MeasureResult)
    {
        androidx.ui.core.LayoutNode r0, r2;
        androidx.ui.core.MeasureScope$MeasureResult r1;
        java.util.Map r3, r4, $r6;
        boolean z0;
        androidx.ui.core.LayoutNodeWrapper $r5;

        r0 := @this: androidx.ui.core.LayoutNode;

        r1 := @parameter0: androidx.ui.core.MeasureScope$MeasureResult;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "measureResult");

        $r5 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper getInnerLayoutNodeWrapper$ui_platform_release()>();

        virtualinvoke $r5.<androidx.ui.core.LayoutNodeWrapper: void setMeasureResult$ui_platform_release(androidx.ui.core.MeasureScope$MeasureResult)>(r1);

        $r6 = virtualinvoke r0.<androidx.ui.core.LayoutNode: java.util.Map getProvidedAlignmentLines$ui_platform_release()>();

        interfaceinvoke $r6.<java.util.Map: void clear()>();

        r2 = r0;

        r3 = virtualinvoke r2.<androidx.ui.core.LayoutNode: java.util.Map getProvidedAlignmentLines$ui_platform_release()>();

        r4 = interfaceinvoke r1.<androidx.ui.core.MeasureScope$MeasureResult: java.util.Map getAlignmentLines()>();

        z0 = 0;

        interfaceinvoke r3.<java.util.Map: void putAll(java.util.Map)>(r4);

        return;
    }

    public final void requestRemeasure()
    {
        androidx.ui.core.LayoutNode r0;
        androidx.ui.core.Owner r1;

        r0 := @this: androidx.ui.core.LayoutNode;

        r1 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.Owner getOwner()>();

        if r1 != null goto label1;

        goto label2;

     label1:
        interfaceinvoke r1.<androidx.ui.core.Owner: void onRequestMeasure(androidx.ui.core.LayoutNode)>(r0);

     label2:
        return;
    }

    public final void onInvalidate()
    {
        androidx.ui.core.LayoutNode r0;
        androidx.ui.core.Owner r1;

        r0 := @this: androidx.ui.core.LayoutNode;

        r1 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.Owner getOwner()>();

        if r1 != null goto label1;

        goto label2;

     label1:
        interfaceinvoke r1.<androidx.ui.core.Owner: void onInvalidate(androidx.ui.core.LayoutNode)>(r0);

     label2:
        return;
    }

    public final void ignoreModelReads(kotlin.jvm.functions.Function0)
    {
        androidx.ui.core.LayoutNode r0;
        kotlin.jvm.functions.Function0 r1;
        androidx.ui.core.ComponentNode $r2;
        androidx.ui.core.Owner $r3;

        r0 := @this: androidx.ui.core.LayoutNode;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        $r2 = (androidx.ui.core.ComponentNode) r0;

        $r3 = staticinvoke <androidx.ui.core.ComponentNodesKt: androidx.ui.core.Owner requireOwner(androidx.ui.core.ComponentNode)>($r2);

        interfaceinvoke $r3.<androidx.ui.core.Owner: void pauseModelReadObserveration(kotlin.jvm.functions.Function0)>(r1);

        return;
    }

    public final void dispatchOnPositionedCallbacks$ui_platform_release()
    {
        androidx.ui.core.LayoutNode r0, $r9, r17;
        boolean $z1, $z2, z5;
        java.util.Collection $r1, $r2, $r3;
        androidx.ui.core.LayoutCoordinates $r4, $r5;
        java.util.List $r6, $r10, $r12, $r15;
        int i0, i1, i2, i3, i4, i5;
        java.lang.Object r7, r13, r16;
        androidx.ui.core.OnPositionedModifier r8;
        androidx.ui.core.OnChildPositionedModifier $r14;

        r0 := @this: androidx.ui.core.LayoutNode;

        $z1 = virtualinvoke r0.<androidx.ui.core.LayoutNode: boolean getNeedsRelayout()>();

        if $z1 == 0 goto label01;

        return;

     label01:
        $z2 = virtualinvoke r0.<androidx.ui.core.LayoutNode: boolean isPlaced()>();

        if $z2 != 0 goto label02;

        return;

     label02:
        $r6 = r0.<androidx.ui.core.LayoutNode: java.util.List onPositionedCallbacks>;

        i0 = 0;

        $r1 = (java.util.Collection) $r6;

        i1 = interfaceinvoke $r1.<java.util.Collection: int size()>();

     label03:
        if i0 >= i1 goto label04;

        r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i0);

        r8 = (androidx.ui.core.OnPositionedModifier) r7;

        $r5 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutCoordinates getCoordinates()>();

        interfaceinvoke r8.<androidx.ui.core.OnPositionedModifier: void onPositioned(androidx.ui.core.LayoutCoordinates)>($r5);

        i0 = i0 + 1;

        goto label03;

     label04:
        $r9 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode getParentLayoutNode()>();

        if $r9 != null goto label05;

        $r10 = (java.util.List) null;

        goto label06;

     label05:
        $r10 = $r9.<androidx.ui.core.LayoutNode: java.util.List onChildPositionedCallbacks>;

     label06:
        if $r10 != null goto label07;

        goto label09;

     label07:
        $r12 = $r10;

        z5 = 0;

        i2 = 0;

        $r2 = (java.util.Collection) $r10;

        i3 = interfaceinvoke $r2.<java.util.Collection: int size()>();

     label08:
        if i2 >= i3 goto label09;

        r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(i2);

        $r14 = (androidx.ui.core.OnChildPositionedModifier) r13;

        $r4 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutCoordinates getCoordinates()>();

        interfaceinvoke $r14.<androidx.ui.core.OnChildPositionedModifier: void onChildPositioned(androidx.ui.core.LayoutCoordinates)>($r4);

        i2 = i2 + 1;

        goto label08;

     label09:
        $r15 = virtualinvoke r0.<androidx.ui.core.LayoutNode: java.util.List getLayoutChildren()>();

        i4 = 0;

        $r3 = (java.util.Collection) $r15;

        i5 = interfaceinvoke $r3.<java.util.Collection: int size()>();

     label10:
        if i4 >= i5 goto label11;

        r16 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>(i4);

        r17 = (androidx.ui.core.LayoutNode) r16;

        virtualinvoke r17.<androidx.ui.core.LayoutNode: void dispatchOnPositionedCallbacks$ui_platform_release()>();

        i4 = i4 + 1;

        goto label10;

     label11:
        return;
    }

    public final java.util.List getModifierInfo()
    {
        androidx.ui.core.LayoutNode r0;
        java.util.List r1;
        androidx.ui.core.ModifierInfo r2, $r18;
        boolean z0, $z1, $z2, z4;
        java.util.ArrayList $r3;
        androidx.ui.core.LayoutNodeWrapper $r4, r17, r20;
        androidx.ui.core.DelegatingLayoutNodeWrapper $r5, $r6;
        androidx.ui.core.Modifier$Element $r7, $r11;
        androidx.ui.core.LayoutCoordinates $r8, $r15;
        androidx.ui.core.Modifier $r9, $r14;
        androidx.ui.core.LayerWrapper $r10, $r13;
        androidx.ui.core.DrawLayerModifier $r12;
        androidx.ui.core.OwnedLayer $r16;
        java.util.Collection r19;

        r0 := @this: androidx.ui.core.LayoutNode;

        z4 = 0;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r1 = (java.util.List) $r3;

        r17 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper getLayoutNodeWrapper$ui_platform_release()>();

     label1:
        $r4 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper getInnerLayoutNodeWrapper$ui_platform_release()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r17, $r4);

        if $z1 != 0 goto label4;

        $z2 = r17 instanceof androidx.ui.core.LayerWrapper;

        if $z2 == 0 goto label2;

        $r18 = new androidx.ui.core.ModifierInfo;

        $r10 = (androidx.ui.core.LayerWrapper) r17;

        $r11 = virtualinvoke $r10.<androidx.ui.core.LayerWrapper: androidx.ui.core.Modifier$Element getModifier()>();

        $r12 = (androidx.ui.core.DrawLayerModifier) $r11;

        $r14 = (androidx.ui.core.Modifier) $r12;

        $r15 = (androidx.ui.core.LayoutCoordinates) r17;

        $r13 = (androidx.ui.core.LayerWrapper) r17;

        $r16 = virtualinvoke $r13.<androidx.ui.core.LayerWrapper: androidx.ui.core.OwnedLayer getLayer()>();

        specialinvoke $r18.<androidx.ui.core.ModifierInfo: void <init>(androidx.ui.core.Modifier,androidx.ui.core.LayoutCoordinates,java.lang.Object)>($r14, $r15, $r16);

        goto label3;

     label2:
        $r5 = (androidx.ui.core.DelegatingLayoutNodeWrapper) r17;

        $r18 = new androidx.ui.core.ModifierInfo;

        $r6 = (androidx.ui.core.DelegatingLayoutNodeWrapper) r17;

        $r7 = virtualinvoke $r6.<androidx.ui.core.DelegatingLayoutNodeWrapper: androidx.ui.core.Modifier$Element getModifier()>();

        $r9 = (androidx.ui.core.Modifier) $r7;

        $r8 = (androidx.ui.core.LayoutCoordinates) r17;

        specialinvoke $r18.<androidx.ui.core.ModifierInfo: void <init>(androidx.ui.core.Modifier,androidx.ui.core.LayoutCoordinates,java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r9, $r8, null, 4, null);

     label3:
        r2 = $r18;

        r19 = (java.util.Collection) r1;

        z0 = 0;

        interfaceinvoke r19.<java.util.Collection: boolean add(java.lang.Object)>(r2);

        r20 = virtualinvoke r17.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.LayoutNodeWrapper getWrapped$ui_platform_release()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r20);

        r17 = r20;

        goto label1;

     label4:
        return r1;
    }

    public java.lang.String toString()
    {
        androidx.ui.core.LayoutNode r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r6;
        java.lang.String $r2, $r7;
        androidx.ui.core.LayoutNode$MeasureBlocks $r5;

        r0 := @this: androidx.ui.core.LayoutNode;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = specialinvoke r0.<androidx.ui.core.ComponentNode: java.lang.String toString()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" measureBlocks: ");

        $r5 = virtualinvoke r0.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode$MeasureBlocks getMeasureBlocks()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public static void getZIndexSortedChildren$annotations()
    {
        return;
    }

    public static final java.util.List access$getOnPositionedCallbacks$p(androidx.ui.core.LayoutNode)
    {
        androidx.ui.core.LayoutNode r0;
        java.util.List $r1;

        r0 := @parameter0: androidx.ui.core.LayoutNode;

        $r1 = r0.<androidx.ui.core.LayoutNode: java.util.List onPositionedCallbacks>;

        return $r1;
    }

    public static final java.util.List access$getOnChildPositionedCallbacks$p(androidx.ui.core.LayoutNode)
    {
        androidx.ui.core.LayoutNode r0;
        java.util.List $r1;

        r0 := @parameter0: androidx.ui.core.LayoutNode;

        $r1 = r0.<androidx.ui.core.LayoutNode: java.util.List onChildPositionedCallbacks>;

        return $r1;
    }

    public static final void access$setOuterZIndexModifier$p(androidx.ui.core.LayoutNode, androidx.ui.core.ZIndexModifier)
    {
        androidx.ui.core.LayoutNode r0;
        androidx.ui.core.ZIndexModifier r1;

        r0 := @parameter0: androidx.ui.core.LayoutNode;

        r1 := @parameter1: androidx.ui.core.ZIndexModifier;

        r0.<androidx.ui.core.LayoutNode: androidx.ui.core.ZIndexModifier outerZIndexModifier> = r1;

        return;
    }

    public static final void <clinit>()
    {
        androidx.ui.core.LayoutNode$Companion $r0;
        androidx.ui.core.LayoutNode$Companion$ErrorMeasureBlocks$1 $r1;

        $r0 = new androidx.ui.core.LayoutNode$Companion;

        specialinvoke $r0.<androidx.ui.core.LayoutNode$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode$Companion Companion> = $r0;

        $r1 = new androidx.ui.core.LayoutNode$Companion$ErrorMeasureBlocks$1;

        specialinvoke $r1.<androidx.ui.core.LayoutNode$Companion$ErrorMeasureBlocks$1: void <init>()>();

        <androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode$Companion$ErrorMeasureBlocks$1 ErrorMeasureBlocks> = $r1;

        return;
    }

androidx.ui.core.LayoutNode$Companion$ErrorMeasureBlocks$1
    void <init>()
    {
        androidx.ui.core.LayoutNode$Companion$ErrorMeasureBlocks$1 r0;

        r0 := @this: androidx.ui.core.LayoutNode$Companion$ErrorMeasureBlocks$1;

        specialinvoke r0.<androidx.ui.core.LayoutNode$NoIntrinsicsMeasureBlocks: void <init>(java.lang.String)>("Undefined intrinsics block and it is required");

        return;
    }

    public java.lang.Void measure(androidx.ui.core.MeasureScope, java.util.List, androidx.ui.core.Constraints, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.core.LayoutNode$Companion$ErrorMeasureBlocks$1 r0;
        androidx.ui.core.MeasureScope r1;
        java.util.List r2;
        androidx.ui.core.Constraints r3;
        androidx.ui.core.LayoutDirection r4;
        java.lang.String r5, $r7;
        boolean z0;
        java.lang.IllegalStateException $r6;
        java.lang.Throwable $r8;

        r0 := @this: androidx.ui.core.LayoutNode$Companion$ErrorMeasureBlocks$1;

        r1 := @parameter0: androidx.ui.core.MeasureScope;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: androidx.ui.core.Constraints;

        r4 := @parameter3: androidx.ui.core.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "measureScope");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurables");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "constraints");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "layoutDirection");

        r5 = "Undefined measure and it is required";

        z0 = 0;

        $r6 = new java.lang.IllegalStateException;

        $r7 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        $r8 = (java.lang.Throwable) $r6;

        throw $r8;
    }

    public volatile androidx.ui.core.MeasureScope$MeasureResult measure(androidx.ui.core.MeasureScope, java.util.List, androidx.ui.core.Constraints, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.core.LayoutNode$Companion$ErrorMeasureBlocks$1 r0;
        androidx.ui.core.MeasureScope r1;
        java.util.List r2;
        androidx.ui.core.Constraints r3;
        androidx.ui.core.LayoutDirection r4;

        r0 := @this: androidx.ui.core.LayoutNode$Companion$ErrorMeasureBlocks$1;

        r1 := @parameter0: androidx.ui.core.MeasureScope;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: androidx.ui.core.Constraints;

        r4 := @parameter3: androidx.ui.core.LayoutDirection;

        virtualinvoke r0.<androidx.ui.core.LayoutNode$Companion$ErrorMeasureBlocks$1: java.lang.Void measure(androidx.ui.core.MeasureScope,java.util.List,androidx.ui.core.Constraints,androidx.ui.core.LayoutDirection)>(r1, r2, r3, r4);

        throw null;
    }

androidx.ui.core.LayoutNode$Companion
    private void <init>()
    {
        androidx.ui.core.LayoutNode$Companion r0;

        r0 := @this: androidx.ui.core.LayoutNode$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private final void addLayoutChildren(androidx.ui.core.ComponentNode, java.util.List)
    {
        androidx.ui.core.LayoutNode$Companion r0;
        androidx.ui.core.ComponentNode r1, r3, r4;
        java.util.List r2;
        int i0, i1, i2, i3;
        java.util.Collection r5;
        androidx.ui.core.LayoutNode r6;
        boolean z2, $z3;

        r0 := @this: androidx.ui.core.LayoutNode$Companion;

        r1 := @parameter0: androidx.ui.core.ComponentNode;

        r2 := @parameter1: java.util.List;

        r3 = r1;

        i0 = virtualinvoke r3.<androidx.ui.core.ComponentNode: int getCount()>();

        i3 = 0;

        i1 = i0 + -1;

        if i0 == -2147483648 goto label4;

        if i3 > i1 goto label4;

     label1:
        i2 = i3;

        i3 = i3 + 1;

        r4 = virtualinvoke r3.<androidx.ui.core.ComponentNode: androidx.ui.core.ComponentNode get(int)>(i2);

        $z3 = r4 instanceof androidx.ui.core.LayoutNode;

        if $z3 == 0 goto label2;

        r5 = (java.util.Collection) r2;

        r6 = (androidx.ui.core.LayoutNode) r4;

        z2 = 0;

        interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>(r6);

        goto label3;

     label2:
        specialinvoke r0.<androidx.ui.core.LayoutNode$Companion: void addLayoutChildren(androidx.ui.core.ComponentNode,java.util.List)>(r4, r2);

     label3:
        if i3 <= i1 goto label1;

     label4:
        return;
    }

    public static final void access$addLayoutChildren(androidx.ui.core.LayoutNode$Companion, androidx.ui.core.ComponentNode, java.util.List)
    {
        androidx.ui.core.LayoutNode$Companion $r0;
        androidx.ui.core.ComponentNode r1;
        java.util.List r2;

        $r0 := @parameter0: androidx.ui.core.LayoutNode$Companion;

        r1 := @parameter1: androidx.ui.core.ComponentNode;

        r2 := @parameter2: java.util.List;

        specialinvoke $r0.<androidx.ui.core.LayoutNode$Companion: void addLayoutChildren(androidx.ui.core.ComponentNode,java.util.List)>(r1, r2);

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.ui.core.LayoutNode$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker r1;

        r0 := @this: androidx.ui.core.LayoutNode$Companion;

        r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.ui.core.LayoutNode$Companion: void <init>()>();

        return;
    }

androidx.ui.core.LayoutNode$hasNewPositioningCallback$1
<androidx.ui.core.LayoutNode$hasNewPositioningCallback$1: androidx.ui.core.LayoutNode $this>
    void <init>(androidx.ui.core.LayoutNode)
    {
        androidx.ui.core.LayoutNode$hasNewPositioningCallback$1 r0;
        androidx.ui.core.LayoutNode $r1;

        r0 := @this: androidx.ui.core.LayoutNode$hasNewPositioningCallback$1;

        $r1 := @parameter0: androidx.ui.core.LayoutNode;

        r0.<androidx.ui.core.LayoutNode$hasNewPositioningCallback$1: androidx.ui.core.LayoutNode $this> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public final boolean invoke(androidx.ui.core.Modifier$Element, boolean)
    {
        androidx.ui.core.LayoutNode$hasNewPositioningCallback$1 r0;
        androidx.ui.core.Modifier$Element r1, r2;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        androidx.ui.core.LayoutNode $r3, $r6;
        java.util.List $r4, $r7;
        androidx.ui.core.OnChildPositionedModifier $r5;
        androidx.ui.core.OnPositionedModifier $r8;

        r0 := @this: androidx.ui.core.LayoutNode$hasNewPositioningCallback$1;

        r1 := @parameter0: androidx.ui.core.Modifier$Element;

        z0 := @parameter1: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "mod");

        if z0 != 0 goto label6;

        r2 = r1;

        $z1 = r2 instanceof androidx.ui.core.OnPositionedModifier;

        if $z1 == 0 goto label2;

        $r6 = r0.<androidx.ui.core.LayoutNode$hasNewPositioningCallback$1: androidx.ui.core.LayoutNode $this>;

        $r7 = staticinvoke <androidx.ui.core.LayoutNode: java.util.List access$getOnPositionedCallbacks$p(androidx.ui.core.LayoutNode)>($r6);

        $r8 = (androidx.ui.core.OnPositionedModifier) r1;

        $z4 = interfaceinvoke $r7.<java.util.List: boolean contains(java.lang.Object)>($r8);

        if $z4 != 0 goto label1;

        $z5 = 1;

        goto label5;

     label1:
        $z5 = 0;

        goto label5;

     label2:
        $z2 = r2 instanceof androidx.ui.core.OnChildPositionedModifier;

        if $z2 == 0 goto label4;

        $r3 = r0.<androidx.ui.core.LayoutNode$hasNewPositioningCallback$1: androidx.ui.core.LayoutNode $this>;

        $r4 = staticinvoke <androidx.ui.core.LayoutNode: java.util.List access$getOnChildPositionedCallbacks$p(androidx.ui.core.LayoutNode)>($r3);

        $r5 = (androidx.ui.core.OnChildPositionedModifier) r1;

        $z3 = interfaceinvoke $r4.<java.util.List: boolean contains(java.lang.Object)>($r5);

        if $z3 != 0 goto label3;

        $z5 = 1;

        goto label5;

     label3:
        $z5 = 0;

        goto label5;

     label4:
        $z5 = 0;

     label5:
        if $z5 == 0 goto label7;

     label6:
        $z6 = 1;

        goto label8;

     label7:
        $z6 = 0;

     label8:
        return $z6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.ui.core.LayoutNode$hasNewPositioningCallback$1 r0;
        java.lang.Object r1, r2;
        java.lang.Boolean $r3, $r5;
        androidx.ui.core.Modifier$Element $r4;
        boolean $z0, $z1;

        r0 := @this: androidx.ui.core.LayoutNode$hasNewPositioningCallback$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.ui.core.Modifier$Element) r1;

        $r3 = (java.lang.Boolean) r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        $z1 = virtualinvoke r0.<androidx.ui.core.LayoutNode$hasNewPositioningCallback$1: boolean invoke(androidx.ui.core.Modifier$Element,boolean)>($r4, $z0);

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        return $r5;
    }

androidx.ui.core.LayoutNode$layout$1
<androidx.ui.core.LayoutNode$layout$1: androidx.ui.core.LayoutNode $this>
    void <init>(androidx.ui.core.LayoutNode)
    {
        androidx.ui.core.LayoutNode$layout$1 r0;
        androidx.ui.core.LayoutNode $r1;

        r0 := @this: androidx.ui.core.LayoutNode$layout$1;

        $r1 := @parameter0: androidx.ui.core.LayoutNode;

        r0.<androidx.ui.core.LayoutNode$layout$1: androidx.ui.core.LayoutNode $this> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.ui.core.LayoutNode$layout$1 r0;
        androidx.ui.core.LayoutNode $r1, $r3, $r4, $r5, $r8, $r10, $r12, $r14, $r16, r19, $r20, $r23, r28;
        java.util.List $r2, $r11;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z8, $z9, $z10, $z11, $z13, z14;
        androidx.ui.core.LayoutNodeWrapper $r6;
        androidx.ui.core.MeasureScope$MeasureResult $r7;
        androidx.ui.core.LayoutDirection $r9;
        java.lang.Iterable $r13, $r15;
        java.util.Iterator r17, $r26;
        java.lang.Object r18, r27;
        java.lang.Boolean $r21, $r24;

        r0 := @this: androidx.ui.core.LayoutNode$layout$1;

        $r1 = r0.<androidx.ui.core.LayoutNode$layout$1: androidx.ui.core.LayoutNode $this>;

        $r2 = virtualinvoke $r1.<androidx.ui.core.LayoutNode: java.util.List getLayoutChildren()>();

        $r15 = (java.lang.Iterable) $r2;

        $r16 = r0.<androidx.ui.core.LayoutNode$layout$1: androidx.ui.core.LayoutNode $this>;

        r17 = interfaceinvoke $r15.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z1 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label04;

        r18 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r19 = (androidx.ui.core.LayoutNode) r18;

        virtualinvoke r19.<androidx.ui.core.LayoutNode: void setPlaced$ui_platform_release(boolean)>(0);

        $z5 = virtualinvoke $r16.<androidx.ui.core.LayoutNode: boolean getAlignmentLinesRequired$ui_platform_release()>();

        if $z5 == 0 goto label02;

        $z6 = virtualinvoke r19.<androidx.ui.core.LayoutNode: boolean getDirtyAlignmentLines$ui_platform_release()>();

        if $z6 == 0 goto label02;

        virtualinvoke r19.<androidx.ui.core.LayoutNode: void setNeedsRelayout$ui_platform_release(boolean)>(1);

     label02:
        $z8 = virtualinvoke r19.<androidx.ui.core.LayoutNode: boolean getAlignmentLinesRequired$ui_platform_release()>();

        if $z8 != 0 goto label03;

        $r14 = virtualinvoke $r16.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode getAlignmentLinesQueryOwner$ui_platform_release()>();

        virtualinvoke r19.<androidx.ui.core.LayoutNode: void setAlignmentLinesQueryOwner$ui_platform_release(androidx.ui.core.LayoutNode)>($r14);

     label03:
        virtualinvoke r19.<androidx.ui.core.LayoutNode: void setAlignmentLinesQueriedSinceLastLayout$ui_platform_release(boolean)>(0);

        goto label01;

     label04:
        $r4 = r0.<androidx.ui.core.LayoutNode$layout$1: androidx.ui.core.LayoutNode $this>;

        $r3 = r0.<androidx.ui.core.LayoutNode$layout$1: androidx.ui.core.LayoutNode $this>;

        $r20 = virtualinvoke $r3.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode getParentLayoutNode()>();

        if $r20 != null goto label05;

        $r21 = (java.lang.Boolean) null;

        goto label06;

     label05:
        $z2 = virtualinvoke $r20.<androidx.ui.core.LayoutNode: boolean isMeasuring()>();

        $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

     label06:
        if $r21 != null goto label07;

        $z9 = 0;

        goto label08;

     label07:
        $z9 = virtualinvoke $r21.<java.lang.Boolean: boolean booleanValue()>();

     label08:
        if $z9 != 0 goto label13;

        $r12 = r0.<androidx.ui.core.LayoutNode$layout$1: androidx.ui.core.LayoutNode $this>;

        $r23 = virtualinvoke $r12.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode getParentLayoutNode()>();

        if $r23 != null goto label09;

        $r24 = (java.lang.Boolean) null;

        goto label10;

     label09:
        $z4 = virtualinvoke $r23.<androidx.ui.core.LayoutNode: boolean getPositionedDuringMeasurePass()>();

        $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4);

     label10:
        if $r24 != null goto label11;

        $z10 = 0;

        goto label12;

     label11:
        $z10 = virtualinvoke $r24.<java.lang.Boolean: boolean booleanValue()>();

     label12:
        if $z10 == 0 goto label14;

     label13:
        $z11 = 1;

        goto label15;

     label14:
        $z11 = 0;

     label15:
        virtualinvoke $r4.<androidx.ui.core.LayoutNode: void setPositionedDuringMeasurePass(boolean)>($z11);

        $r5 = r0.<androidx.ui.core.LayoutNode$layout$1: androidx.ui.core.LayoutNode $this>;

        $r6 = virtualinvoke $r5.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper getInnerLayoutNodeWrapper$ui_platform_release()>();

        $r7 = virtualinvoke $r6.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.MeasureScope$MeasureResult getMeasureResult()>();

        $r8 = r0.<androidx.ui.core.LayoutNode$layout$1: androidx.ui.core.LayoutNode $this>;

        $r9 = virtualinvoke $r8.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutDirection getLayoutDirection()>();

        interfaceinvoke $r7.<androidx.ui.core.MeasureScope$MeasureResult: void placeChildren(androidx.ui.core.LayoutDirection)>($r9);

        $r10 = r0.<androidx.ui.core.LayoutNode$layout$1: androidx.ui.core.LayoutNode $this>;

        $r11 = virtualinvoke $r10.<androidx.ui.core.LayoutNode: java.util.List getLayoutChildren()>();

        $r13 = (java.lang.Iterable) $r11;

        $r26 = interfaceinvoke $r13.<java.lang.Iterable: java.util.Iterator iterator()>();

     label16:
        $z13 = interfaceinvoke $r26.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label17;

        r27 = interfaceinvoke $r26.<java.util.Iterator: java.lang.Object next()>();

        r28 = (androidx.ui.core.LayoutNode) r27;

        z14 = 0;

        $z3 = virtualinvoke r28.<androidx.ui.core.LayoutNode: boolean getAlignmentLinesQueriedSinceLastLayout$ui_platform_release()>();

        virtualinvoke r28.<androidx.ui.core.LayoutNode: void setAlignmentLinesRead$ui_platform_release(boolean)>($z3);

        goto label16;

     label17:
        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.ui.core.LayoutNode$layout$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.ui.core.LayoutNode$layout$1;

        virtualinvoke r0.<androidx.ui.core.LayoutNode$layout$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.ui.core.LayoutNode$layoutChildren$1
<androidx.ui.core.LayoutNode$layoutChildren$1: androidx.ui.core.LayoutNode $this>
<androidx.ui.core.LayoutNode$layoutChildren$1: androidx.ui.core.LayoutNode $parent>
    void <init>(androidx.ui.core.LayoutNode, androidx.ui.core.LayoutNode)
    {
        androidx.ui.core.LayoutNode$layoutChildren$1 r0;
        androidx.ui.core.LayoutNode $r1, $r2;

        r0 := @this: androidx.ui.core.LayoutNode$layoutChildren$1;

        $r1 := @parameter0: androidx.ui.core.LayoutNode;

        $r2 := @parameter1: androidx.ui.core.LayoutNode;

        r0.<androidx.ui.core.LayoutNode$layoutChildren$1: androidx.ui.core.LayoutNode $this> = $r1;

        r0.<androidx.ui.core.LayoutNode$layoutChildren$1: androidx.ui.core.LayoutNode $parent> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.ui.core.LayoutNode$layoutChildren$1 r0;
        androidx.ui.core.LayoutNode $r1, $r3, $r4, $r7, $r8, $r13, r15, $r16, $r17, $r20, $r22, r26;
        java.util.Collection $r2, $r24;
        int $i0, i1, i2, i3, $i4, $i5, i6, i7;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z8, $z9, z11;
        androidx.ui.core.LayoutNode$LayoutState $r5, $r6, $r9, $r10, $r11;
        java.util.List $r12, $r23;
        java.lang.Object r14, r25;
        androidx.ui.core.LayoutNodeWrapper $r18;
        androidx.ui.core.MeasureScope$MeasureResult $r19;
        androidx.ui.core.LayoutDirection $r21;

        r0 := @this: androidx.ui.core.LayoutNode$layoutChildren$1;

        $r1 = r0.<androidx.ui.core.LayoutNode$layoutChildren$1: androidx.ui.core.LayoutNode $this>;

        $r12 = virtualinvoke $r1.<androidx.ui.core.LayoutNode: java.util.List getChildren()>();

        $r13 = r0.<androidx.ui.core.LayoutNode$layoutChildren$1: androidx.ui.core.LayoutNode $this>;

        i1 = 0;

        $r2 = (java.util.Collection) $r12;

        $i0 = interfaceinvoke $r2.<java.util.Collection: int size()>();

        i2 = $i0 + -1;

        if i1 > i2 goto label4;

     label1:
        i3 = i1;

        i1 = i1 + 1;

        r14 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(i3);

        r15 = (androidx.ui.core.LayoutNode) r14;

        virtualinvoke r15.<androidx.ui.core.LayoutNode: void setPlaced$ui_core_release(boolean)>(0);

        $z4 = virtualinvoke $r13.<androidx.ui.core.LayoutNode: boolean getAlignmentLinesRequired$ui_core_release()>();

        if $z4 == 0 goto label2;

        $r9 = virtualinvoke r15.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode$LayoutState getLayoutState()>();

        $r10 = <androidx.ui.core.LayoutNode$LayoutState: androidx.ui.core.LayoutNode$LayoutState Ready>;

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r9, $r10);

        if $z5 == 0 goto label2;

        $z6 = staticinvoke <androidx.ui.core.LayoutNode: boolean access$getAlignmentLinesCalculatedDuringLastLayout$p(androidx.ui.core.LayoutNode)>(r15);

        if $z6 != 0 goto label2;

        $r11 = <androidx.ui.core.LayoutNode$LayoutState: androidx.ui.core.LayoutNode$LayoutState NeedsRelayout>;

        virtualinvoke r15.<androidx.ui.core.LayoutNode: void setLayoutState$ui_core_release(androidx.ui.core.LayoutNode$LayoutState)>($r11);

     label2:
        $z8 = virtualinvoke r15.<androidx.ui.core.LayoutNode: boolean getAlignmentLinesRequired$ui_core_release()>();

        if $z8 != 0 goto label3;

        $r8 = virtualinvoke $r13.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode getAlignmentLinesQueryOwner$ui_core_release()>();

        staticinvoke <androidx.ui.core.LayoutNode: void access$setAlignmentLinesQueryOwner$p(androidx.ui.core.LayoutNode,androidx.ui.core.LayoutNode)>(r15, $r8);

     label3:
        staticinvoke <androidx.ui.core.LayoutNode: void access$setAlignmentLinesQueriedSinceLastLayout$p(androidx.ui.core.LayoutNode,boolean)>(r15, 0);

        if i1 <= i2 goto label1;

     label4:
        $r16 = r0.<androidx.ui.core.LayoutNode$layoutChildren$1: androidx.ui.core.LayoutNode $this>;

        $r3 = r0.<androidx.ui.core.LayoutNode$layoutChildren$1: androidx.ui.core.LayoutNode $parent>;

        if $r3 == null goto label6;

        $r4 = r0.<androidx.ui.core.LayoutNode$layoutChildren$1: androidx.ui.core.LayoutNode $parent>;

        $r5 = virtualinvoke $r4.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNode$LayoutState getLayoutState()>();

        $r6 = <androidx.ui.core.LayoutNode$LayoutState: androidx.ui.core.LayoutNode$LayoutState Measuring>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, $r6);

        if $z2 != 0 goto label5;

        $r7 = r0.<androidx.ui.core.LayoutNode$layoutChildren$1: androidx.ui.core.LayoutNode $parent>;

        $z3 = staticinvoke <androidx.ui.core.LayoutNode: boolean access$getPositionedDuringMeasurePass$p(androidx.ui.core.LayoutNode)>($r7);

        if $z3 == 0 goto label6;

     label5:
        $z9 = 1;

        goto label7;

     label6:
        $z9 = 0;

     label7:
        staticinvoke <androidx.ui.core.LayoutNode: void access$setPositionedDuringMeasurePass$p(androidx.ui.core.LayoutNode,boolean)>($r16, $z9);

        $r17 = r0.<androidx.ui.core.LayoutNode$layoutChildren$1: androidx.ui.core.LayoutNode $this>;

        $r18 = virtualinvoke $r17.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper getInnerLayoutNodeWrapper$ui_core_release()>();

        $r19 = virtualinvoke $r18.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.MeasureScope$MeasureResult getMeasureResult()>();

        $r20 = r0.<androidx.ui.core.LayoutNode$layoutChildren$1: androidx.ui.core.LayoutNode $this>;

        $r21 = virtualinvoke $r20.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutDirection getLayoutDirection$ui_core_release()>();

        interfaceinvoke $r19.<androidx.ui.core.MeasureScope$MeasureResult: void placeChildren(androidx.ui.core.LayoutDirection)>($r21);

        $r22 = r0.<androidx.ui.core.LayoutNode$layoutChildren$1: androidx.ui.core.LayoutNode $this>;

        $r23 = virtualinvoke $r22.<androidx.ui.core.LayoutNode: java.util.List getChildren()>();

        $i4 = 0;

        $r24 = (java.util.Collection) $r23;

        $i5 = interfaceinvoke $r24.<java.util.Collection: int size()>();

        i6 = $i5 + -1;

        if 0 > i6 goto label9;

     label8:
        i7 = $i4;

        $i4 = $i4 + 1;

        r25 = interfaceinvoke $r23.<java.util.List: java.lang.Object get(int)>(i7);

        r26 = (androidx.ui.core.LayoutNode) r25;

        z11 = 0;

        $z1 = staticinvoke <androidx.ui.core.LayoutNode: boolean access$getAlignmentLinesQueriedSinceLastLayout$p(androidx.ui.core.LayoutNode)>(r26);

        staticinvoke <androidx.ui.core.LayoutNode: void access$setAlignmentLinesRead$p(androidx.ui.core.LayoutNode,boolean)>(r26, $z1);

        if $i4 <= i6 goto label8;

     label9:
        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.ui.core.LayoutNode$layoutChildren$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.ui.core.LayoutNode$layoutChildren$1;

        virtualinvoke r0.<androidx.ui.core.LayoutNode$layoutChildren$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.ui.core.LayoutNode$LayoutState
<androidx.ui.core.LayoutNode$LayoutState: androidx.ui.core.LayoutNode$LayoutState NeedsRemeasure>
<androidx.ui.core.LayoutNode$LayoutState: androidx.ui.core.LayoutNode$LayoutState Measuring>
<androidx.ui.core.LayoutNode$LayoutState: androidx.ui.core.LayoutNode$LayoutState NeedsRelayout>
<androidx.ui.core.LayoutNode$LayoutState: androidx.ui.core.LayoutNode$LayoutState LayingOut>
<androidx.ui.core.LayoutNode$LayoutState: androidx.ui.core.LayoutNode$LayoutState Ready>
<androidx.ui.core.LayoutNode$LayoutState: androidx.ui.core.LayoutNode$LayoutState[] $VALUES>
    private void <init>(java.lang.String, int)
    {
        androidx.ui.core.LayoutNode$LayoutState r0;
        java.lang.String r1;
        int i0;

        r0 := @this: androidx.ui.core.LayoutNode$LayoutState;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public static final androidx.ui.core.LayoutNode$LayoutState[] values()
    {
        androidx.ui.core.LayoutNode$LayoutState[] r0, r1;
        int $i0, $i1;

        r0 = <androidx.ui.core.LayoutNode$LayoutState: androidx.ui.core.LayoutNode$LayoutState[] $VALUES>;

        $i0 = lengthof r0;

        r1 = newarray (androidx.ui.core.LayoutNode$LayoutState)[$i0];

        $i1 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, $i1);

        return r1;
    }

    public static final androidx.ui.core.LayoutNode$LayoutState valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.ui.core.LayoutNode$LayoutState $r2;

        r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "value");

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/ui/core/LayoutNode$LayoutState;", r0);

        $r2 = (androidx.ui.core.LayoutNode$LayoutState) $r1;

        return $r2;
    }

    public static final void <clinit>()
    {
        androidx.ui.core.LayoutNode$LayoutState[] r0;
        androidx.ui.core.LayoutNode$LayoutState $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        $r1 = new androidx.ui.core.LayoutNode$LayoutState;

        specialinvoke $r1.<androidx.ui.core.LayoutNode$LayoutState: void <init>(java.lang.String,int)>("NeedsRemeasure", 0);

        <androidx.ui.core.LayoutNode$LayoutState: androidx.ui.core.LayoutNode$LayoutState NeedsRemeasure> = $r1;

        $r2 = new androidx.ui.core.LayoutNode$LayoutState;

        specialinvoke $r2.<androidx.ui.core.LayoutNode$LayoutState: void <init>(java.lang.String,int)>("Measuring", 1);

        <androidx.ui.core.LayoutNode$LayoutState: androidx.ui.core.LayoutNode$LayoutState Measuring> = $r2;

        $r3 = new androidx.ui.core.LayoutNode$LayoutState;

        specialinvoke $r3.<androidx.ui.core.LayoutNode$LayoutState: void <init>(java.lang.String,int)>("NeedsRelayout", 2);

        <androidx.ui.core.LayoutNode$LayoutState: androidx.ui.core.LayoutNode$LayoutState NeedsRelayout> = $r3;

        $r4 = new androidx.ui.core.LayoutNode$LayoutState;

        specialinvoke $r4.<androidx.ui.core.LayoutNode$LayoutState: void <init>(java.lang.String,int)>("LayingOut", 3);

        <androidx.ui.core.LayoutNode$LayoutState: androidx.ui.core.LayoutNode$LayoutState LayingOut> = $r4;

        $r5 = new androidx.ui.core.LayoutNode$LayoutState;

        specialinvoke $r5.<androidx.ui.core.LayoutNode$LayoutState: void <init>(java.lang.String,int)>("Ready", 4);

        <androidx.ui.core.LayoutNode$LayoutState: androidx.ui.core.LayoutNode$LayoutState Ready> = $r5;

        r0 = newarray (androidx.ui.core.LayoutNode$LayoutState)[5];

        $r6 = <androidx.ui.core.LayoutNode$LayoutState: androidx.ui.core.LayoutNode$LayoutState NeedsRemeasure>;

        r0[0] = $r6;

        $r7 = <androidx.ui.core.LayoutNode$LayoutState: androidx.ui.core.LayoutNode$LayoutState Measuring>;

        r0[1] = $r7;

        $r8 = <androidx.ui.core.LayoutNode$LayoutState: androidx.ui.core.LayoutNode$LayoutState NeedsRelayout>;

        r0[2] = $r8;

        $r9 = <androidx.ui.core.LayoutNode$LayoutState: androidx.ui.core.LayoutNode$LayoutState LayingOut>;

        r0[3] = $r9;

        $r10 = <androidx.ui.core.LayoutNode$LayoutState: androidx.ui.core.LayoutNode$LayoutState Ready>;

        r0[4] = $r10;

        <androidx.ui.core.LayoutNode$LayoutState: androidx.ui.core.LayoutNode$LayoutState[] $VALUES> = r0;

        return;
    }

androidx.ui.core.LayoutNode$measure$2
<androidx.ui.core.LayoutNode$measure$2: androidx.ui.core.LayoutNode $this>
<androidx.ui.core.LayoutNode$measure$2: androidx.ui.core.Constraints $constraints>
<androidx.ui.core.LayoutNode$measure$2: androidx.ui.core.LayoutDirection $layoutDirection>
    void <init>(androidx.ui.core.LayoutNode, androidx.ui.core.Constraints, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.core.LayoutNode$measure$2 r0;
        androidx.ui.core.LayoutNode $r1;
        androidx.ui.core.Constraints $r2;
        androidx.ui.core.LayoutDirection $r3;

        r0 := @this: androidx.ui.core.LayoutNode$measure$2;

        $r1 := @parameter0: androidx.ui.core.LayoutNode;

        $r2 := @parameter1: androidx.ui.core.Constraints;

        $r3 := @parameter2: androidx.ui.core.LayoutDirection;

        r0.<androidx.ui.core.LayoutNode$measure$2: androidx.ui.core.LayoutNode $this> = $r1;

        r0.<androidx.ui.core.LayoutNode$measure$2: androidx.ui.core.Constraints $constraints> = $r2;

        r0.<androidx.ui.core.LayoutNode$measure$2: androidx.ui.core.LayoutDirection $layoutDirection> = $r3;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.ui.core.LayoutNode$measure$2 r0;
        androidx.ui.core.LayoutNode $r1;
        androidx.ui.core.LayoutNodeWrapper $r2;
        androidx.ui.core.LayoutDirection $r3;
        androidx.ui.core.Constraints $r4;

        r0 := @this: androidx.ui.core.LayoutNode$measure$2;

        $r1 = r0.<androidx.ui.core.LayoutNode$measure$2: androidx.ui.core.LayoutNode $this>;

        $r2 = virtualinvoke $r1.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper getLayoutNodeWrapper$ui_platform_release()>();

        $r4 = r0.<androidx.ui.core.LayoutNode$measure$2: androidx.ui.core.Constraints $constraints>;

        $r3 = r0.<androidx.ui.core.LayoutNode$measure$2: androidx.ui.core.LayoutDirection $layoutDirection>;

        virtualinvoke $r2.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.Placeable measure(androidx.ui.core.Constraints,androidx.ui.core.LayoutDirection)>($r4, $r3);

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.ui.core.LayoutNode$measure$2 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.ui.core.LayoutNode$measure$2;

        virtualinvoke r0.<androidx.ui.core.LayoutNode$measure$2: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.ui.core.LayoutNode$MeasureBlocks
<androidx.ui.core.LayoutNode$MeasureBlocks: androidx.ui.core.MeasureScope$MeasureResult measure(androidx.ui.core.MeasureScope,java.util.List,androidx.ui.core.Constraints,androidx.ui.core.LayoutDirection)>
<androidx.ui.core.LayoutNode$MeasureBlocks: int minIntrinsicWidth-5Bu9FwI(androidx.ui.core.IntrinsicMeasureScope,java.util.List,int,androidx.ui.core.LayoutDirection)>
<androidx.ui.core.LayoutNode$MeasureBlocks: int minIntrinsicHeight-5Bu9FwI(androidx.ui.core.IntrinsicMeasureScope,java.util.List,int,androidx.ui.core.LayoutDirection)>
<androidx.ui.core.LayoutNode$MeasureBlocks: int maxIntrinsicWidth-5Bu9FwI(androidx.ui.core.IntrinsicMeasureScope,java.util.List,int,androidx.ui.core.LayoutDirection)>
<androidx.ui.core.LayoutNode$MeasureBlocks: int maxIntrinsicHeight-5Bu9FwI(androidx.ui.core.IntrinsicMeasureScope,java.util.List,int,androidx.ui.core.LayoutDirection)>
androidx.ui.core.LayoutNode$measureScope$1
<androidx.ui.core.LayoutNode$measureScope$1: androidx.ui.core.LayoutNode $this>
    void <init>(androidx.ui.core.LayoutNode)
    {
        androidx.ui.core.LayoutNode$measureScope$1 r0;
        androidx.ui.core.LayoutNode $r1;

        r0 := @this: androidx.ui.core.LayoutNode$measureScope$1;

        $r1 := @parameter0: androidx.ui.core.LayoutNode;

        r0.<androidx.ui.core.LayoutNode$measureScope$1: androidx.ui.core.LayoutNode $this> = $r1;

        specialinvoke r0.<androidx.ui.core.MeasureScope: void <init>()>();

        return;
    }

    private final androidx.ui.unit.Density getOwnerDensity()
    {
        androidx.ui.core.LayoutNode$measureScope$1 r0;
        androidx.ui.unit.Density r1, $r4, $r5;
        androidx.ui.core.Owner r2;
        androidx.ui.core.LayoutNode $r3;

        r0 := @this: androidx.ui.core.LayoutNode$measureScope$1;

        $r3 = r0.<androidx.ui.core.LayoutNode$measureScope$1: androidx.ui.core.LayoutNode $this>;

        r2 = virtualinvoke $r3.<androidx.ui.core.LayoutNode: androidx.ui.core.Owner getOwner()>();

        if r2 != null goto label1;

        $r4 = (androidx.ui.unit.Density) null;

        goto label2;

     label1:
        $r4 = interfaceinvoke r2.<androidx.ui.core.Owner: androidx.ui.unit.Density getDensity()>();

     label2:
        r1 = $r4;

        if r1 != null goto label3;

        $r5 = staticinvoke <androidx.ui.unit.DensityKt: androidx.ui.unit.Density Density$default(float,float,int,java.lang.Object)>(1.0F, 0.0F, 2, null);

        goto label4;

     label3:
        $r5 = r1;

     label4:
        return $r5;
    }

    public float getDensity()
    {
        androidx.ui.core.LayoutNode$measureScope$1 r0;
        androidx.ui.unit.Density $r1;
        float $f0;

        r0 := @this: androidx.ui.core.LayoutNode$measureScope$1;

        $r1 = specialinvoke r0.<androidx.ui.core.LayoutNode$measureScope$1: androidx.ui.unit.Density getOwnerDensity()>();

        $f0 = interfaceinvoke $r1.<androidx.ui.unit.Density: float getDensity()>();

        return $f0;
    }

    public float getFontScale()
    {
        androidx.ui.core.LayoutNode$measureScope$1 r0;
        androidx.ui.unit.Density $r1;
        float $f0;

        r0 := @this: androidx.ui.core.LayoutNode$measureScope$1;

        $r1 = specialinvoke r0.<androidx.ui.core.LayoutNode$measureScope$1: androidx.ui.unit.Density getOwnerDensity()>();

        $f0 = interfaceinvoke $r1.<androidx.ui.unit.Density: float getFontScale()>();

        return $f0;
    }

    public androidx.ui.core.LayoutDirection getLayoutDirection()
    {
        androidx.ui.core.LayoutNode$measureScope$1 r0;
        androidx.ui.core.LayoutNode $r1;
        androidx.ui.core.LayoutDirection $r2;

        r0 := @this: androidx.ui.core.LayoutNode$measureScope$1;

        $r1 = r0.<androidx.ui.core.LayoutNode$measureScope$1: androidx.ui.core.LayoutNode $this>;

        $r2 = virtualinvoke $r1.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutDirection getLayoutDirection()>();

        return $r2;
    }

androidx.ui.core.LayoutNode$modifier$1
<androidx.ui.core.LayoutNode$modifier$1: androidx.ui.core.LayoutNode $this>
    void <init>(androidx.ui.core.LayoutNode)
    {
        androidx.ui.core.LayoutNode$modifier$1 r0;
        androidx.ui.core.LayoutNode $r1;

        r0 := @this: androidx.ui.core.LayoutNode$modifier$1;

        $r1 := @parameter0: androidx.ui.core.LayoutNode;

        r0.<androidx.ui.core.LayoutNode$modifier$1: androidx.ui.core.LayoutNode $this> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public final androidx.ui.core.LayoutNodeWrapper invoke(androidx.ui.core.Modifier$Element, androidx.ui.core.LayoutNodeWrapper)
    {
        androidx.ui.core.LayoutNode$modifier$1 r0;
        androidx.ui.core.Modifier$Element r1;
        androidx.ui.core.LayoutNodeWrapper r2, r27;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z13, z14, z15, z16, z17, z18, z19, z21, z22;
        androidx.ui.core.ZIndexModifier $r3;
        androidx.ui.core.LayoutNode $r4, r28, r31;
        androidx.ui.core.semantics.SemanticsWrapper $r5;
        androidx.ui.core.semantics.SemanticsModifier $r6;
        androidx.ui.core.ModifiedParentDataNode $r7;
        androidx.ui.core.ParentDataModifier $r8;
        androidx.ui.core.ModifiedLayoutNode2 $r9;
        androidx.ui.core.LayoutModifier2 $r10;
        androidx.ui.core.ModifiedLayoutNode $r11;
        androidx.ui.core.LayoutModifier $r12;
        androidx.ui.core.PointerInputDelegatingWrapper $r13;
        androidx.ui.core.pointerinput.PointerInputModifier $r14;
        androidx.ui.core.focus.ModifiedFocusNode $r15, r35, r36;
        androidx.ui.core.focus.FocusModifierImpl $r16, $r17;
        java.lang.IllegalArgumentException $r18;
        java.lang.String $r19, r34;
        java.lang.Throwable $r20;
        androidx.ui.core.LayerWrapper $r21;
        androidx.ui.core.DrawLayerModifier $r22;
        androidx.ui.core.ModifiedDrawNode $r23;
        androidx.ui.core.DrawModifier $r24;
        java.util.List $r25, $r26;
        java.util.Collection r29, r32;
        androidx.ui.core.OnPositionedModifier r30;
        androidx.ui.core.OnChildPositionedModifier r33;

        r0 := @this: androidx.ui.core.LayoutNode$modifier$1;

        r1 := @parameter0: androidx.ui.core.Modifier$Element;

        r2 := @parameter1: androidx.ui.core.LayoutNodeWrapper;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "mod");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "toWrap");

        r27 = r2;

        $z0 = r1 instanceof androidx.ui.core.OnPositionedModifier;

        if $z0 == 0 goto label01;

        r28 = r0.<androidx.ui.core.LayoutNode$modifier$1: androidx.ui.core.LayoutNode $this>;

        $r26 = staticinvoke <androidx.ui.core.LayoutNode: java.util.List access$getOnPositionedCallbacks$p(androidx.ui.core.LayoutNode)>(r28);

        r29 = (java.util.Collection) $r26;

        r30 = (androidx.ui.core.OnPositionedModifier) r1;

        z13 = 0;

        interfaceinvoke r29.<java.util.Collection: boolean add(java.lang.Object)>(r30);

     label01:
        $z1 = r1 instanceof androidx.ui.core.OnChildPositionedModifier;

        if $z1 == 0 goto label02;

        r31 = r0.<androidx.ui.core.LayoutNode$modifier$1: androidx.ui.core.LayoutNode $this>;

        $r25 = staticinvoke <androidx.ui.core.LayoutNode: java.util.List access$getOnChildPositionedCallbacks$p(androidx.ui.core.LayoutNode)>(r31);

        r32 = (java.util.Collection) $r25;

        r33 = (androidx.ui.core.OnChildPositionedModifier) r1;

        z14 = 0;

        interfaceinvoke r32.<java.util.Collection: boolean add(java.lang.Object)>(r33);

     label02:
        $z2 = r1 instanceof androidx.ui.core.DrawModifier;

        if $z2 == 0 goto label03;

        $r23 = new androidx.ui.core.ModifiedDrawNode;

        $r24 = (androidx.ui.core.DrawModifier) r1;

        specialinvoke $r23.<androidx.ui.core.ModifiedDrawNode: void <init>(androidx.ui.core.LayoutNodeWrapper,androidx.ui.core.DrawModifier)>(r27, $r24);

        r27 = (androidx.ui.core.LayoutNodeWrapper) $r23;

     label03:
        $z3 = r1 instanceof androidx.ui.core.DrawLayerModifier;

        if $z3 == 0 goto label04;

        $r21 = new androidx.ui.core.LayerWrapper;

        $r22 = (androidx.ui.core.DrawLayerModifier) r1;

        specialinvoke $r21.<androidx.ui.core.LayerWrapper: void <init>(androidx.ui.core.LayoutNodeWrapper,androidx.ui.core.DrawLayerModifier)>(r27, $r22);

        r27 = (androidx.ui.core.LayoutNodeWrapper) $r21;

     label04:
        $z4 = r1 instanceof androidx.ui.focus.FocusModifier;

        if $z4 == 0 goto label06;

        z15 = r1 instanceof androidx.ui.core.focus.FocusModifierImpl;

        z16 = 0;

        z17 = 0;

        z18 = 0;

        z19 = 0;

        if z15 != 0 goto label05;

        r34 = "Failed requirement.";

        $r18 = new java.lang.IllegalArgumentException;

        $r19 = virtualinvoke r34.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        $r20 = (java.lang.Throwable) $r18;

        throw $r20;

     label05:
        $r15 = new androidx.ui.core.focus.ModifiedFocusNode;

        $r16 = (androidx.ui.core.focus.FocusModifierImpl) r1;

        specialinvoke $r15.<androidx.ui.core.focus.ModifiedFocusNode: void <init>(androidx.ui.core.LayoutNodeWrapper,androidx.ui.core.focus.FocusModifierImpl)>(r27, $r16);

        r35 = $r15;

        z21 = 0;

        z22 = 0;

        r36 = r35;

        $r17 = (androidx.ui.core.focus.FocusModifierImpl) r1;

        virtualinvoke $r17.<androidx.ui.core.focus.FocusModifierImpl: void setFocusNode(androidx.ui.core.focus.ModifiedFocusNode)>(r36);

        r27 = (androidx.ui.core.LayoutNodeWrapper) r35;

     label06:
        $z5 = r1 instanceof androidx.ui.core.pointerinput.PointerInputModifier;

        if $z5 == 0 goto label07;

        $r13 = new androidx.ui.core.PointerInputDelegatingWrapper;

        $r14 = (androidx.ui.core.pointerinput.PointerInputModifier) r1;

        specialinvoke $r13.<androidx.ui.core.PointerInputDelegatingWrapper: void <init>(androidx.ui.core.LayoutNodeWrapper,androidx.ui.core.pointerinput.PointerInputModifier)>(r27, $r14);

        r27 = (androidx.ui.core.LayoutNodeWrapper) $r13;

     label07:
        $z6 = r1 instanceof androidx.ui.core.LayoutModifier;

        if $z6 == 0 goto label08;

        $r11 = new androidx.ui.core.ModifiedLayoutNode;

        $r12 = (androidx.ui.core.LayoutModifier) r1;

        specialinvoke $r11.<androidx.ui.core.ModifiedLayoutNode: void <init>(androidx.ui.core.LayoutNodeWrapper,androidx.ui.core.LayoutModifier)>(r27, $r12);

        r27 = (androidx.ui.core.LayoutNodeWrapper) $r11;

     label08:
        $z7 = r1 instanceof androidx.ui.core.LayoutModifier2;

        if $z7 == 0 goto label09;

        $r9 = new androidx.ui.core.ModifiedLayoutNode2;

        $r10 = (androidx.ui.core.LayoutModifier2) r1;

        specialinvoke $r9.<androidx.ui.core.ModifiedLayoutNode2: void <init>(androidx.ui.core.LayoutNodeWrapper,androidx.ui.core.LayoutModifier2)>(r27, $r10);

        r27 = (androidx.ui.core.LayoutNodeWrapper) $r9;

     label09:
        $z8 = r1 instanceof androidx.ui.core.ParentDataModifier;

        if $z8 == 0 goto label10;

        $r7 = new androidx.ui.core.ModifiedParentDataNode;

        $r8 = (androidx.ui.core.ParentDataModifier) r1;

        specialinvoke $r7.<androidx.ui.core.ModifiedParentDataNode: void <init>(androidx.ui.core.LayoutNodeWrapper,androidx.ui.core.ParentDataModifier)>(r27, $r8);

        r27 = (androidx.ui.core.LayoutNodeWrapper) $r7;

     label10:
        $z9 = r1 instanceof androidx.ui.core.semantics.SemanticsModifier;

        if $z9 == 0 goto label11;

        $r5 = new androidx.ui.core.semantics.SemanticsWrapper;

        $r6 = (androidx.ui.core.semantics.SemanticsModifier) r1;

        specialinvoke $r5.<androidx.ui.core.semantics.SemanticsWrapper: void <init>(androidx.ui.core.LayoutNodeWrapper,androidx.ui.core.semantics.SemanticsModifier)>(r27, $r6);

        r27 = (androidx.ui.core.LayoutNodeWrapper) $r5;

     label11:
        $z10 = r1 instanceof androidx.ui.core.ZIndexModifier;

        if $z10 == 0 goto label12;

        $r4 = r0.<androidx.ui.core.LayoutNode$modifier$1: androidx.ui.core.LayoutNode $this>;

        $r3 = (androidx.ui.core.ZIndexModifier) r1;

        staticinvoke <androidx.ui.core.LayoutNode: void access$setOuterZIndexModifier$p(androidx.ui.core.LayoutNode,androidx.ui.core.ZIndexModifier)>($r4, $r3);

     label12:
        return r27;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.ui.core.LayoutNode$modifier$1 r0;
        java.lang.Object r1, r2;
        androidx.ui.core.LayoutNodeWrapper $r3, $r5;
        androidx.ui.core.Modifier$Element $r4;

        r0 := @this: androidx.ui.core.LayoutNode$modifier$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.ui.core.Modifier$Element) r1;

        $r3 = (androidx.ui.core.LayoutNodeWrapper) r2;

        $r5 = virtualinvoke r0.<androidx.ui.core.LayoutNode$modifier$1: androidx.ui.core.LayoutNodeWrapper invoke(androidx.ui.core.Modifier$Element,androidx.ui.core.LayoutNodeWrapper)>($r4, $r3);

        return $r5;
    }

androidx.ui.core.LayoutNode$modifier$outerWrapper$1
<androidx.ui.core.LayoutNode$modifier$outerWrapper$1: androidx.ui.core.LayoutNode $this>
    void <init>(androidx.ui.core.LayoutNode)
    {
        androidx.ui.core.LayoutNode$modifier$outerWrapper$1 r0;
        androidx.ui.core.LayoutNode $r1;

        r0 := @this: androidx.ui.core.LayoutNode$modifier$outerWrapper$1;

        $r1 := @parameter0: androidx.ui.core.LayoutNode;

        r0.<androidx.ui.core.LayoutNode$modifier$outerWrapper$1: androidx.ui.core.LayoutNode $this> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public final androidx.ui.core.LayoutNodeWrapper invoke(androidx.ui.core.Modifier$Element, androidx.ui.core.LayoutNodeWrapper)
    {
        androidx.ui.core.LayoutNode$modifier$outerWrapper$1 r0;
        androidx.ui.core.Modifier$Element r1;
        androidx.ui.core.LayoutNodeWrapper r2, r33;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z11, z12, $z13, z14, z16, z17, z18, z21, z24, $z27, $z28;
        androidx.ui.core.ZIndexModifier $r3;
        androidx.ui.core.LayoutNode $r4, $r8, $r26, $r28, r34, r37, r46;
        androidx.ui.core.semantics.SemanticsWrapper $r5;
        androidx.ui.core.semantics.SemanticsModifier $r6;
        androidx.ui.core.Owner $r7, r47;
        androidx.ui.core.ModifiedParentDataNode $r9;
        androidx.ui.core.ParentDataModifier $r10;
        androidx.ui.core.ModifiedLayoutNode $r11;
        androidx.ui.core.LayoutModifier $r12;
        androidx.ui.core.PointerInputDelegatingWrapper $r13;
        androidx.ui.core.pointerinput.PointerInputModifier $r14;
        androidx.ui.core.keyinput.ModifiedKeyInputNode $r15, r44, r45;
        androidx.ui.core.keyinput.KeyInputModifier $r16, $r17;
        androidx.ui.core.focus.ModifiedFocusNode $r18, r42, r43;
        androidx.ui.core.focus.FocusModifierImpl $r19, $r20;
        java.lang.IllegalArgumentException $r21;
        java.lang.String $r22, r41;
        java.lang.Throwable $r23;
        androidx.ui.core.LayerWrapper $r24, $r27, r40;
        androidx.ui.core.DrawLayerModifier $r25;
        androidx.ui.core.ModifiedDrawNode $r29;
        androidx.ui.core.DrawModifier $r30;
        java.util.List $r31, $r32;
        java.util.Collection $r35, $r38;
        androidx.ui.core.OnPositionedModifier r36;
        androidx.ui.core.OnChildPositionedModifier r39;

        r0 := @this: androidx.ui.core.LayoutNode$modifier$outerWrapper$1;

        r1 := @parameter0: androidx.ui.core.Modifier$Element;

        r2 := @parameter1: androidx.ui.core.LayoutNodeWrapper;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "mod");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "toWrap");

        r33 = r2;

        $z0 = r1 instanceof androidx.ui.core.OnPositionedModifier;

        if $z0 == 0 goto label01;

        r34 = r0.<androidx.ui.core.LayoutNode$modifier$outerWrapper$1: androidx.ui.core.LayoutNode $this>;

        $r32 = staticinvoke <androidx.ui.core.LayoutNode: java.util.List access$getOnPositionedCallbacks$p(androidx.ui.core.LayoutNode)>(r34);

        $r35 = (java.util.Collection) $r32;

        r36 = (androidx.ui.core.OnPositionedModifier) r1;

        z11 = 0;

        interfaceinvoke $r35.<java.util.Collection: boolean add(java.lang.Object)>(r36);

     label01:
        $z1 = r1 instanceof androidx.ui.core.OnChildPositionedModifier;

        if $z1 == 0 goto label02;

        r37 = r0.<androidx.ui.core.LayoutNode$modifier$outerWrapper$1: androidx.ui.core.LayoutNode $this>;

        $r31 = staticinvoke <androidx.ui.core.LayoutNode: java.util.List access$getOnChildPositionedCallbacks$p(androidx.ui.core.LayoutNode)>(r37);

        $r38 = (java.util.Collection) $r31;

        r39 = (androidx.ui.core.OnChildPositionedModifier) r1;

        z12 = 0;

        interfaceinvoke $r38.<java.util.Collection: boolean add(java.lang.Object)>(r39);

     label02:
        $z2 = r1 instanceof androidx.ui.core.DrawModifier;

        if $z2 == 0 goto label03;

        $r29 = new androidx.ui.core.ModifiedDrawNode;

        $r30 = (androidx.ui.core.DrawModifier) r1;

        specialinvoke $r29.<androidx.ui.core.ModifiedDrawNode: void <init>(androidx.ui.core.LayoutNodeWrapper,androidx.ui.core.DrawModifier)>(r33, $r30);

        r33 = (androidx.ui.core.LayoutNodeWrapper) $r29;

     label03:
        $z3 = r1 instanceof androidx.ui.core.DrawLayerModifier;

        if $z3 == 0 goto label04;

        $r24 = new androidx.ui.core.LayerWrapper;

        $r25 = (androidx.ui.core.DrawLayerModifier) r1;

        specialinvoke $r24.<androidx.ui.core.LayerWrapper: void <init>(androidx.ui.core.LayoutNodeWrapper,androidx.ui.core.DrawLayerModifier)>(r33, $r25);

        r40 = $r24;

        r33 = (androidx.ui.core.LayoutNodeWrapper) r40;

        $r26 = r0.<androidx.ui.core.LayoutNode$modifier$outerWrapper$1: androidx.ui.core.LayoutNode $this>;

        $r27 = virtualinvoke $r26.<androidx.ui.core.LayoutNode: androidx.ui.core.LayerWrapper getInnerLayerWrapper$ui_core_release()>();

        if $r27 != null goto label04;

        $r28 = r0.<androidx.ui.core.LayoutNode$modifier$outerWrapper$1: androidx.ui.core.LayoutNode $this>;

        virtualinvoke $r28.<androidx.ui.core.LayoutNode: void setInnerLayerWrapper$ui_core_release(androidx.ui.core.LayerWrapper)>(r40);

     label04:
        $z13 = r1 instanceof androidx.ui.core.focus.FocusModifier;

        if $z13 == 0 goto label06;

        z14 = r1 instanceof androidx.ui.core.focus.FocusModifierImpl;

        z16 = 0;

        z17 = 0;

        z18 = 0;

        if z14 != 0 goto label05;

        r41 = "Failed requirement.";

        $r21 = new java.lang.IllegalArgumentException;

        $r22 = virtualinvoke r41.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        $r23 = (java.lang.Throwable) $r21;

        throw $r23;

     label05:
        $r18 = new androidx.ui.core.focus.ModifiedFocusNode;

        $r19 = (androidx.ui.core.focus.FocusModifierImpl) r1;

        specialinvoke $r18.<androidx.ui.core.focus.ModifiedFocusNode: void <init>(androidx.ui.core.LayoutNodeWrapper,androidx.ui.core.focus.FocusModifierImpl)>(r33, $r19);

        r42 = $r18;

        z21 = 0;

        r43 = r42;

        $r20 = (androidx.ui.core.focus.FocusModifierImpl) r1;

        virtualinvoke $r20.<androidx.ui.core.focus.FocusModifierImpl: void setFocusNode(androidx.ui.core.focus.ModifiedFocusNode)>(r43);

        r33 = (androidx.ui.core.LayoutNodeWrapper) r42;

     label06:
        $z4 = r1 instanceof androidx.ui.core.keyinput.KeyInputModifier;

        if $z4 == 0 goto label07;

        $r15 = new androidx.ui.core.keyinput.ModifiedKeyInputNode;

        $r16 = (androidx.ui.core.keyinput.KeyInputModifier) r1;

        specialinvoke $r15.<androidx.ui.core.keyinput.ModifiedKeyInputNode: void <init>(androidx.ui.core.LayoutNodeWrapper,androidx.ui.core.keyinput.KeyInputModifier)>(r33, $r16);

        r44 = $r15;

        z24 = 0;

        r45 = r44;

        $r17 = (androidx.ui.core.keyinput.KeyInputModifier) r1;

        virtualinvoke $r17.<androidx.ui.core.keyinput.KeyInputModifier: void setKeyInputNode(androidx.ui.core.keyinput.ModifiedKeyInputNode)>(r45);

        r33 = (androidx.ui.core.LayoutNodeWrapper) r44;

     label07:
        $z5 = r1 instanceof androidx.ui.core.pointerinput.PointerInputModifier;

        if $z5 == 0 goto label08;

        $r13 = new androidx.ui.core.PointerInputDelegatingWrapper;

        $r14 = (androidx.ui.core.pointerinput.PointerInputModifier) r1;

        specialinvoke $r13.<androidx.ui.core.PointerInputDelegatingWrapper: void <init>(androidx.ui.core.LayoutNodeWrapper,androidx.ui.core.pointerinput.PointerInputModifier)>(r33, $r14);

        r33 = (androidx.ui.core.LayoutNodeWrapper) $r13;

     label08:
        $z6 = r1 instanceof androidx.ui.core.LayoutModifier;

        if $z6 == 0 goto label09;

        $r11 = new androidx.ui.core.ModifiedLayoutNode;

        $r12 = (androidx.ui.core.LayoutModifier) r1;

        specialinvoke $r11.<androidx.ui.core.ModifiedLayoutNode: void <init>(androidx.ui.core.LayoutNodeWrapper,androidx.ui.core.LayoutModifier)>(r33, $r12);

        r33 = (androidx.ui.core.LayoutNodeWrapper) $r11;

     label09:
        $z7 = r1 instanceof androidx.ui.core.ParentDataModifier;

        if $z7 == 0 goto label10;

        $r9 = new androidx.ui.core.ModifiedParentDataNode;

        $r10 = (androidx.ui.core.ParentDataModifier) r1;

        specialinvoke $r9.<androidx.ui.core.ModifiedParentDataNode: void <init>(androidx.ui.core.LayoutNodeWrapper,androidx.ui.core.ParentDataModifier)>(r33, $r10);

        r33 = (androidx.ui.core.LayoutNodeWrapper) $r9;

     label10:
        $z8 = r1 instanceof androidx.ui.core.semantics.SemanticsModifier;

        if $z8 == 0 goto label13;

        $r5 = new androidx.ui.core.semantics.SemanticsWrapper;

        $r6 = (androidx.ui.core.semantics.SemanticsModifier) r1;

        specialinvoke $r5.<androidx.ui.core.semantics.SemanticsWrapper: void <init>(androidx.ui.core.LayoutNodeWrapper,androidx.ui.core.semantics.SemanticsModifier)>(r33, $r6);

        r33 = (androidx.ui.core.LayoutNodeWrapper) $r5;

        r46 = r0.<androidx.ui.core.LayoutNode$modifier$outerWrapper$1: androidx.ui.core.LayoutNode $this>;

        $r7 = virtualinvoke r46.<androidx.ui.core.LayoutNode: androidx.ui.core.Owner getOwner()>();

        if $r7 == null goto label11;

        $z27 = 1;

        goto label12;

     label11:
        $z27 = 0;

     label12:
        if $z27 == 0 goto label13;

        $r8 = r0.<androidx.ui.core.LayoutNode$modifier$outerWrapper$1: androidx.ui.core.LayoutNode $this>;

        r47 = virtualinvoke $r8.<androidx.ui.core.LayoutNode: androidx.ui.core.Owner getOwner()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r47);

        interfaceinvoke r47.<androidx.ui.core.Owner: void onSemanticsChange()>();

     label13:
        $z28 = r1 instanceof androidx.ui.core.ZIndexModifier;

        if $z28 == 0 goto label14;

        $r4 = r0.<androidx.ui.core.LayoutNode$modifier$outerWrapper$1: androidx.ui.core.LayoutNode $this>;

        $r3 = (androidx.ui.core.ZIndexModifier) r1;

        staticinvoke <androidx.ui.core.LayoutNode: void access$setOuterZIndexModifier$p(androidx.ui.core.LayoutNode,androidx.ui.core.ZIndexModifier)>($r4, $r3);

     label14:
        return r33;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.ui.core.LayoutNode$modifier$outerWrapper$1 r0;
        java.lang.Object r1, r2;
        androidx.ui.core.LayoutNodeWrapper $r3, $r5;
        androidx.ui.core.Modifier$Element $r4;

        r0 := @this: androidx.ui.core.LayoutNode$modifier$outerWrapper$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.ui.core.Modifier$Element) r1;

        $r3 = (androidx.ui.core.LayoutNodeWrapper) r2;

        $r5 = virtualinvoke r0.<androidx.ui.core.LayoutNode$modifier$outerWrapper$1: androidx.ui.core.LayoutNodeWrapper invoke(androidx.ui.core.Modifier$Element,androidx.ui.core.LayoutNodeWrapper)>($r4, $r3);

        return $r5;
    }

androidx.ui.core.LayoutNode$NoIntrinsicsMeasureBlocks
<androidx.ui.core.LayoutNode$NoIntrinsicsMeasureBlocks: java.lang.String error>
    public void <init>(java.lang.String)
    {
        androidx.ui.core.LayoutNode$NoIntrinsicsMeasureBlocks r0;
        java.lang.String r1;

        r0 := @this: androidx.ui.core.LayoutNode$NoIntrinsicsMeasureBlocks;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "error");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.ui.core.LayoutNode$NoIntrinsicsMeasureBlocks: java.lang.String error> = r1;

        return;
    }

    public java.lang.Void minIntrinsicWidth-5Bu9FwI(androidx.ui.core.IntrinsicMeasureScope, java.util.List, int, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.core.LayoutNode$NoIntrinsicsMeasureBlocks r0;
        androidx.ui.core.IntrinsicMeasureScope r1;
        java.util.List r2;
        int i0;
        androidx.ui.core.LayoutDirection r3;
        java.lang.String r4, $r6;
        boolean z0;
        java.lang.IllegalStateException $r5;
        java.lang.Throwable $r7;

        r0 := @this: androidx.ui.core.LayoutNode$NoIntrinsicsMeasureBlocks;

        r1 := @parameter0: androidx.ui.core.IntrinsicMeasureScope;

        r2 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.ui.core.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "intrinsicMeasureScope");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurables");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "layoutDirection");

        r4 = r0.<androidx.ui.core.LayoutNode$NoIntrinsicsMeasureBlocks: java.lang.String error>;

        z0 = 0;

        $r5 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        $r7 = (java.lang.Throwable) $r5;

        throw $r7;
    }

    public java.lang.Void minIntrinsicHeight-5Bu9FwI(androidx.ui.core.IntrinsicMeasureScope, java.util.List, int, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.core.LayoutNode$NoIntrinsicsMeasureBlocks r0;
        androidx.ui.core.IntrinsicMeasureScope r1;
        java.util.List r2;
        int i0;
        androidx.ui.core.LayoutDirection r3;
        java.lang.String r4, $r6;
        boolean z0;
        java.lang.IllegalStateException $r5;
        java.lang.Throwable $r7;

        r0 := @this: androidx.ui.core.LayoutNode$NoIntrinsicsMeasureBlocks;

        r1 := @parameter0: androidx.ui.core.IntrinsicMeasureScope;

        r2 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.ui.core.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "intrinsicMeasureScope");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurables");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "layoutDirection");

        r4 = r0.<androidx.ui.core.LayoutNode$NoIntrinsicsMeasureBlocks: java.lang.String error>;

        z0 = 0;

        $r5 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        $r7 = (java.lang.Throwable) $r5;

        throw $r7;
    }

    public java.lang.Void maxIntrinsicWidth-5Bu9FwI(androidx.ui.core.IntrinsicMeasureScope, java.util.List, int, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.core.LayoutNode$NoIntrinsicsMeasureBlocks r0;
        androidx.ui.core.IntrinsicMeasureScope r1;
        java.util.List r2;
        int i0;
        androidx.ui.core.LayoutDirection r3;
        java.lang.String r4, $r6;
        boolean z0;
        java.lang.IllegalStateException $r5;
        java.lang.Throwable $r7;

        r0 := @this: androidx.ui.core.LayoutNode$NoIntrinsicsMeasureBlocks;

        r1 := @parameter0: androidx.ui.core.IntrinsicMeasureScope;

        r2 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.ui.core.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "intrinsicMeasureScope");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurables");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "layoutDirection");

        r4 = r0.<androidx.ui.core.LayoutNode$NoIntrinsicsMeasureBlocks: java.lang.String error>;

        z0 = 0;

        $r5 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        $r7 = (java.lang.Throwable) $r5;

        throw $r7;
    }

    public java.lang.Void maxIntrinsicHeight-5Bu9FwI(androidx.ui.core.IntrinsicMeasureScope, java.util.List, int, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.core.LayoutNode$NoIntrinsicsMeasureBlocks r0;
        androidx.ui.core.IntrinsicMeasureScope r1;
        java.util.List r2;
        int i0;
        androidx.ui.core.LayoutDirection r3;
        java.lang.String r4, $r6;
        boolean z0;
        java.lang.IllegalStateException $r5;
        java.lang.Throwable $r7;

        r0 := @this: androidx.ui.core.LayoutNode$NoIntrinsicsMeasureBlocks;

        r1 := @parameter0: androidx.ui.core.IntrinsicMeasureScope;

        r2 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.ui.core.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "intrinsicMeasureScope");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurables");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "layoutDirection");

        r4 = r0.<androidx.ui.core.LayoutNode$NoIntrinsicsMeasureBlocks: java.lang.String error>;

        z0 = 0;

        $r5 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        $r7 = (java.lang.Throwable) $r5;

        throw $r7;
    }

    public volatile int minIntrinsicWidth-5Bu9FwI(androidx.ui.core.IntrinsicMeasureScope, java.util.List, int, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.core.LayoutNode$NoIntrinsicsMeasureBlocks r0;
        androidx.ui.core.IntrinsicMeasureScope r1;
        java.util.List r2;
        int i0;
        androidx.ui.core.LayoutDirection r3;

        r0 := @this: androidx.ui.core.LayoutNode$NoIntrinsicsMeasureBlocks;

        r1 := @parameter0: androidx.ui.core.IntrinsicMeasureScope;

        r2 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.ui.core.LayoutDirection;

        virtualinvoke r0.<androidx.ui.core.LayoutNode$NoIntrinsicsMeasureBlocks: java.lang.Void minIntrinsicWidth-5Bu9FwI(androidx.ui.core.IntrinsicMeasureScope,java.util.List,int,androidx.ui.core.LayoutDirection)>(r1, r2, i0, r3);

        throw null;
    }

    public volatile int minIntrinsicHeight-5Bu9FwI(androidx.ui.core.IntrinsicMeasureScope, java.util.List, int, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.core.LayoutNode$NoIntrinsicsMeasureBlocks r0;
        androidx.ui.core.IntrinsicMeasureScope r1;
        java.util.List r2;
        int i0;
        androidx.ui.core.LayoutDirection r3;

        r0 := @this: androidx.ui.core.LayoutNode$NoIntrinsicsMeasureBlocks;

        r1 := @parameter0: androidx.ui.core.IntrinsicMeasureScope;

        r2 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.ui.core.LayoutDirection;

        virtualinvoke r0.<androidx.ui.core.LayoutNode$NoIntrinsicsMeasureBlocks: java.lang.Void minIntrinsicHeight-5Bu9FwI(androidx.ui.core.IntrinsicMeasureScope,java.util.List,int,androidx.ui.core.LayoutDirection)>(r1, r2, i0, r3);

        throw null;
    }

    public volatile int maxIntrinsicWidth-5Bu9FwI(androidx.ui.core.IntrinsicMeasureScope, java.util.List, int, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.core.LayoutNode$NoIntrinsicsMeasureBlocks r0;
        androidx.ui.core.IntrinsicMeasureScope r1;
        java.util.List r2;
        int i0;
        androidx.ui.core.LayoutDirection r3;

        r0 := @this: androidx.ui.core.LayoutNode$NoIntrinsicsMeasureBlocks;

        r1 := @parameter0: androidx.ui.core.IntrinsicMeasureScope;

        r2 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.ui.core.LayoutDirection;

        virtualinvoke r0.<androidx.ui.core.LayoutNode$NoIntrinsicsMeasureBlocks: java.lang.Void maxIntrinsicWidth-5Bu9FwI(androidx.ui.core.IntrinsicMeasureScope,java.util.List,int,androidx.ui.core.LayoutDirection)>(r1, r2, i0, r3);

        throw null;
    }

    public volatile int maxIntrinsicHeight-5Bu9FwI(androidx.ui.core.IntrinsicMeasureScope, java.util.List, int, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.core.LayoutNode$NoIntrinsicsMeasureBlocks r0;
        androidx.ui.core.IntrinsicMeasureScope r1;
        java.util.List r2;
        int i0;
        androidx.ui.core.LayoutDirection r3;

        r0 := @this: androidx.ui.core.LayoutNode$NoIntrinsicsMeasureBlocks;

        r1 := @parameter0: androidx.ui.core.IntrinsicMeasureScope;

        r2 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.ui.core.LayoutDirection;

        virtualinvoke r0.<androidx.ui.core.LayoutNode$NoIntrinsicsMeasureBlocks: java.lang.Void maxIntrinsicHeight-5Bu9FwI(androidx.ui.core.IntrinsicMeasureScope,java.util.List,int,androidx.ui.core.LayoutDirection)>(r1, r2, i0, r3);

        throw null;
    }

androidx.ui.core.LayoutNode$UsageByParent
<androidx.ui.core.LayoutNode$UsageByParent: androidx.ui.core.LayoutNode$UsageByParent InMeasureBlock>
<androidx.ui.core.LayoutNode$UsageByParent: androidx.ui.core.LayoutNode$UsageByParent InLayoutBlock>
<androidx.ui.core.LayoutNode$UsageByParent: androidx.ui.core.LayoutNode$UsageByParent NotUsed>
<androidx.ui.core.LayoutNode$UsageByParent: androidx.ui.core.LayoutNode$UsageByParent[] $VALUES>
    private void <init>(java.lang.String, int)
    {
        androidx.ui.core.LayoutNode$UsageByParent r0;
        java.lang.String r1;
        int i0;

        r0 := @this: androidx.ui.core.LayoutNode$UsageByParent;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public static final androidx.ui.core.LayoutNode$UsageByParent[] values()
    {
        androidx.ui.core.LayoutNode$UsageByParent[] r0, r1;
        int $i0, $i1;

        r0 = <androidx.ui.core.LayoutNode$UsageByParent: androidx.ui.core.LayoutNode$UsageByParent[] $VALUES>;

        $i0 = lengthof r0;

        r1 = newarray (androidx.ui.core.LayoutNode$UsageByParent)[$i0];

        $i1 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, $i1);

        return r1;
    }

    public static final androidx.ui.core.LayoutNode$UsageByParent valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.ui.core.LayoutNode$UsageByParent $r2;

        r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "value");

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/ui/core/LayoutNode$UsageByParent;", r0);

        $r2 = (androidx.ui.core.LayoutNode$UsageByParent) $r1;

        return $r2;
    }

    public static final void <clinit>()
    {
        androidx.ui.core.LayoutNode$UsageByParent[] r0;
        androidx.ui.core.LayoutNode$UsageByParent $r1, $r2, $r3, $r4, $r5, $r6;

        $r1 = new androidx.ui.core.LayoutNode$UsageByParent;

        specialinvoke $r1.<androidx.ui.core.LayoutNode$UsageByParent: void <init>(java.lang.String,int)>("InMeasureBlock", 0);

        <androidx.ui.core.LayoutNode$UsageByParent: androidx.ui.core.LayoutNode$UsageByParent InMeasureBlock> = $r1;

        $r2 = new androidx.ui.core.LayoutNode$UsageByParent;

        specialinvoke $r2.<androidx.ui.core.LayoutNode$UsageByParent: void <init>(java.lang.String,int)>("InLayoutBlock", 1);

        <androidx.ui.core.LayoutNode$UsageByParent: androidx.ui.core.LayoutNode$UsageByParent InLayoutBlock> = $r2;

        $r3 = new androidx.ui.core.LayoutNode$UsageByParent;

        specialinvoke $r3.<androidx.ui.core.LayoutNode$UsageByParent: void <init>(java.lang.String,int)>("NotUsed", 2);

        <androidx.ui.core.LayoutNode$UsageByParent: androidx.ui.core.LayoutNode$UsageByParent NotUsed> = $r3;

        r0 = newarray (androidx.ui.core.LayoutNode$UsageByParent)[3];

        $r4 = <androidx.ui.core.LayoutNode$UsageByParent: androidx.ui.core.LayoutNode$UsageByParent InMeasureBlock>;

        r0[0] = $r4;

        $r5 = <androidx.ui.core.LayoutNode$UsageByParent: androidx.ui.core.LayoutNode$UsageByParent InLayoutBlock>;

        r0[1] = $r5;

        $r6 = <androidx.ui.core.LayoutNode$UsageByParent: androidx.ui.core.LayoutNode$UsageByParent NotUsed>;

        r0[2] = $r6;

        <androidx.ui.core.LayoutNode$UsageByParent: androidx.ui.core.LayoutNode$UsageByParent[] $VALUES> = r0;

        return;
    }

androidx.ui.core.LayoutNode$WhenMappings
<androidx.ui.core.LayoutNode$WhenMappings: int[] $EnumSwitchMapping$0>
    public static final void <clinit>()
    {
        int[] r0;
        androidx.ui.core.LayoutNode$LayoutState[] $r1;
        int $i0, $i1, $i2;
        androidx.ui.core.LayoutNode$LayoutState $r2, $r3;

        $r1 = staticinvoke <androidx.ui.core.LayoutNode$LayoutState: androidx.ui.core.LayoutNode$LayoutState[] values()>();

        $i0 = lengthof $r1;

        r0 = newarray (int)[$i0];

        $r2 = <androidx.ui.core.LayoutNode$LayoutState: androidx.ui.core.LayoutNode$LayoutState Measuring>;

        $i1 = virtualinvoke $r2.<androidx.ui.core.LayoutNode$LayoutState: int ordinal()>();

        r0[$i1] = 1;

        $r3 = <androidx.ui.core.LayoutNode$LayoutState: androidx.ui.core.LayoutNode$LayoutState LayingOut>;

        $i2 = virtualinvoke $r3.<androidx.ui.core.LayoutNode$LayoutState: int ordinal()>();

        r0[$i2] = 2;

        <androidx.ui.core.LayoutNode$WhenMappings: int[] $EnumSwitchMapping$0> = r0;

        return;
    }

