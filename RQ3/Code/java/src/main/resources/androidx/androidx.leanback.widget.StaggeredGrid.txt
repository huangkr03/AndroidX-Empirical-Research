androidx.leanback.widget.StaggeredGrid
<androidx.leanback.widget.StaggeredGrid: androidx.collection.CircularArray mLocations>
<androidx.leanback.widget.StaggeredGrid: int mFirstIndex>
<androidx.leanback.widget.StaggeredGrid: java.lang.Object mPendingItem>
<androidx.leanback.widget.StaggeredGrid: int mPendingItemSize>
    void <init>()
    {
        androidx.leanback.widget.StaggeredGrid r0;
        androidx.collection.CircularArray $r1;

        r0 := @this: androidx.leanback.widget.StaggeredGrid;

        specialinvoke r0.<androidx.leanback.widget.Grid: void <init>()>();

        $r1 = new androidx.collection.CircularArray;

        specialinvoke $r1.<androidx.collection.CircularArray: void <init>(int)>(64);

        r0.<androidx.leanback.widget.StaggeredGrid: androidx.collection.CircularArray mLocations> = $r1;

        r0.<androidx.leanback.widget.StaggeredGrid: int mFirstIndex> = -1;

        return;
    }

    public final int getFirstIndex()
    {
        androidx.leanback.widget.StaggeredGrid r0;
        int $i0;

        r0 := @this: androidx.leanback.widget.StaggeredGrid;

        $i0 = r0.<androidx.leanback.widget.StaggeredGrid: int mFirstIndex>;

        return $i0;
    }

    public final int getLastIndex()
    {
        androidx.leanback.widget.StaggeredGrid r0;
        androidx.collection.CircularArray $r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: androidx.leanback.widget.StaggeredGrid;

        $i0 = r0.<androidx.leanback.widget.StaggeredGrid: int mFirstIndex>;

        $r1 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.collection.CircularArray mLocations>;

        $i1 = virtualinvoke $r1.<androidx.collection.CircularArray: int size()>();

        $i2 = $i0 + $i1;

        $i3 = $i2 - 1;

        return $i3;
    }

    public final int getSize()
    {
        androidx.leanback.widget.StaggeredGrid r0;
        androidx.collection.CircularArray $r1;
        int $i0;

        r0 := @this: androidx.leanback.widget.StaggeredGrid;

        $r1 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.collection.CircularArray mLocations>;

        $i0 = virtualinvoke $r1.<androidx.collection.CircularArray: int size()>();

        return $i0;
    }

    public final androidx.leanback.widget.StaggeredGrid$Location getLocation(int)
    {
        androidx.leanback.widget.StaggeredGrid r0;
        int i0, i1, $i2, $i3;
        androidx.collection.CircularArray $r1, $r2;
        java.lang.Object $r3;
        androidx.leanback.widget.StaggeredGrid$Location $r4;

        r0 := @this: androidx.leanback.widget.StaggeredGrid;

        i0 := @parameter0: int;

        $i2 = r0.<androidx.leanback.widget.StaggeredGrid: int mFirstIndex>;

        i1 = i0 - $i2;

        if i1 < 0 goto label1;

        $r1 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.collection.CircularArray mLocations>;

        $i3 = virtualinvoke $r1.<androidx.collection.CircularArray: int size()>();

        if i1 < $i3 goto label2;

     label1:
        return null;

     label2:
        $r2 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.collection.CircularArray mLocations>;

        $r3 = virtualinvoke $r2.<androidx.collection.CircularArray: java.lang.Object get(int)>(i1);

        $r4 = (androidx.leanback.widget.StaggeredGrid$Location) $r3;

        return $r4;
    }

    public final void debugPrint(java.io.PrintWriter)
    {
        androidx.leanback.widget.StaggeredGrid r0;
        java.io.PrintWriter r1;
        int i0, $i1, $i2, $i3, i4;
        androidx.leanback.widget.StaggeredGrid$Location r2;
        androidx.collection.CircularArray $r3, $r4;
        java.lang.Object $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11;
        java.lang.String $r12;

        r0 := @this: androidx.leanback.widget.StaggeredGrid;

        r1 := @parameter0: java.io.PrintWriter;

        i4 = 0;

        $r3 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.collection.CircularArray mLocations>;

        i0 = virtualinvoke $r3.<androidx.collection.CircularArray: int size()>();

     label1:
        if i4 >= i0 goto label2;

        $r4 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.collection.CircularArray mLocations>;

        $r5 = virtualinvoke $r4.<androidx.collection.CircularArray: java.lang.Object get(int)>(i4);

        r2 = (androidx.leanback.widget.StaggeredGrid$Location) $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $i1 = r0.<androidx.leanback.widget.StaggeredGrid: int mFirstIndex>;

        $i2 = $i1 + i4;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i3 = r2.<androidx.leanback.widget.StaggeredGrid$Location: int mRow>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r12);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    protected final boolean prependVisibleItems(int, boolean)
    {
        androidx.leanback.widget.StaggeredGrid r0;
        int i0, $i1;
        boolean z0, $z1, $z2, z3, z4;
        java.lang.Throwable r1, $r5;
        androidx.leanback.widget.Grid$Provider $r2;
        java.lang.Object[] $r3, $r4, $r6;

        r0 := @this: androidx.leanback.widget.StaggeredGrid;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r2 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.leanback.widget.Grid$Provider mProvider>;

        $i1 = interfaceinvoke $r2.<androidx.leanback.widget.Grid$Provider: int getCount()>();

        if $i1 != 0 goto label1;

        return 0;

     label1:
        if z0 != 0 goto label2;

        $z2 = virtualinvoke r0.<androidx.leanback.widget.StaggeredGrid: boolean checkPrependOverLimit(int)>(i0);

        if $z2 == 0 goto label2;

        return 0;

     label2:
        $z1 = virtualinvoke r0.<androidx.leanback.widget.StaggeredGrid: boolean prependVisbleItemsWithCache(int,boolean)>(i0, z0);

        if $z1 == 0 goto label4;

        z3 = 1;

     label3:
        $r4 = r0.<androidx.leanback.widget.StaggeredGrid: java.lang.Object[] mTmpItem>;

        $r4[0] = null;

        r0.<androidx.leanback.widget.StaggeredGrid: java.lang.Object mPendingItem> = null;

        return z3;

     label4:
        z4 = virtualinvoke r0.<androidx.leanback.widget.StaggeredGrid: boolean prependVisibleItemsWithoutCache(int,boolean)>(i0, z0);

     label5:
        $r3 = r0.<androidx.leanback.widget.StaggeredGrid: java.lang.Object[] mTmpItem>;

        $r3[0] = null;

        r0.<androidx.leanback.widget.StaggeredGrid: java.lang.Object mPendingItem> = null;

        return z4;

     label6:
        $r5 := @caughtexception;

        r1 = $r5;

     label7:
        $r6 = r0.<androidx.leanback.widget.StaggeredGrid: java.lang.Object[] mTmpItem>;

        $r6[0] = null;

        r0.<androidx.leanback.widget.StaggeredGrid: java.lang.Object mPendingItem> = null;

        throw r1;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    protected final boolean prependVisbleItemsWithCache(int, boolean)
    {
        androidx.leanback.widget.StaggeredGrid r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, i24, i25, $i26;
        boolean z0, $z1;
        androidx.leanback.widget.StaggeredGrid$Location r1, $r15;
        androidx.collection.CircularArray $r2, $r3, $r11;
        androidx.leanback.widget.Grid$Provider $r4, $r6, $r9, $r10, $r14;
        java.lang.Object[] $r5, $r7, $r12;
        java.lang.Object $r8, $r13;

        r0 := @this: androidx.leanback.widget.StaggeredGrid;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r2 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.collection.CircularArray mLocations>;

        $i4 = virtualinvoke $r2.<androidx.collection.CircularArray: int size()>();

        if $i4 != 0 goto label01;

        return 0;

     label01:
        $i5 = r0.<androidx.leanback.widget.StaggeredGrid: int mFirstVisibleIndex>;

        if $i5 < 0 goto label02;

        $r14 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.leanback.widget.Grid$Provider mProvider>;

        $i20 = r0.<androidx.leanback.widget.StaggeredGrid: int mFirstVisibleIndex>;

        i23 = interfaceinvoke $r14.<androidx.leanback.widget.Grid$Provider: int getEdge(int)>($i20);

        $i21 = r0.<androidx.leanback.widget.StaggeredGrid: int mFirstVisibleIndex>;

        $r15 = virtualinvoke r0.<androidx.leanback.widget.StaggeredGrid: androidx.leanback.widget.StaggeredGrid$Location getLocation(int)>($i21);

        i24 = $r15.<androidx.leanback.widget.StaggeredGrid$Location: int mOffset>;

        $i22 = r0.<androidx.leanback.widget.StaggeredGrid: int mFirstVisibleIndex>;

        i25 = $i22 - 1;

        goto label07;

     label02:
        i23 = 2147483647;

        i24 = 0;

        $i6 = r0.<androidx.leanback.widget.StaggeredGrid: int mStartIndex>;

        if $i6 == -1 goto label03;

        $i26 = r0.<androidx.leanback.widget.StaggeredGrid: int mStartIndex>;

        goto label04;

     label03:
        $i26 = 0;

     label04:
        i25 = $i26;

        $i7 = virtualinvoke r0.<androidx.leanback.widget.StaggeredGrid: int getLastIndex()>();

        if i25 > $i7 goto label05;

        $i8 = virtualinvoke r0.<androidx.leanback.widget.StaggeredGrid: int getFirstIndex()>();

        $i9 = $i8 - 1;

        if i25 >= $i9 goto label06;

     label05:
        $r3 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.collection.CircularArray mLocations>;

        virtualinvoke $r3.<androidx.collection.CircularArray: void clear()>();

        return 0;

     label06:
        $i10 = virtualinvoke r0.<androidx.leanback.widget.StaggeredGrid: int getFirstIndex()>();

        if i25 >= $i10 goto label07;

        return 0;

     label07:
        $r4 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.leanback.widget.Grid$Provider mProvider>;

        $i11 = interfaceinvoke $r4.<androidx.leanback.widget.Grid$Provider: int getMinIndex()>();

        $i12 = r0.<androidx.leanback.widget.StaggeredGrid: int mFirstIndex>;

        i1 = staticinvoke <java.lang.Math: int max(int,int)>($i11, $i12);

     label08:
        if i25 < i1 goto label13;

        r1 = virtualinvoke r0.<androidx.leanback.widget.StaggeredGrid: androidx.leanback.widget.StaggeredGrid$Location getLocation(int)>(i25);

        i2 = r1.<androidx.leanback.widget.StaggeredGrid$Location: int mRow>;

        $r6 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.leanback.widget.Grid$Provider mProvider>;

        $r5 = r0.<androidx.leanback.widget.StaggeredGrid: java.lang.Object[] mTmpItem>;

        i3 = interfaceinvoke $r6.<androidx.leanback.widget.Grid$Provider: int createItem(int,boolean,java.lang.Object[],boolean)>(i25, 0, $r5, 0);

        $i13 = r1.<androidx.leanback.widget.StaggeredGrid$Location: int mSize>;

        if i3 == $i13 goto label09;

        $r11 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.collection.CircularArray mLocations>;

        $i17 = i25 + 1;

        $i16 = r0.<androidx.leanback.widget.StaggeredGrid: int mFirstIndex>;

        $i18 = $i17 - $i16;

        virtualinvoke $r11.<androidx.collection.CircularArray: void removeFromStart(int)>($i18);

        $i19 = r0.<androidx.leanback.widget.StaggeredGrid: int mFirstVisibleIndex>;

        r0.<androidx.leanback.widget.StaggeredGrid: int mFirstIndex> = $i19;

        $r12 = r0.<androidx.leanback.widget.StaggeredGrid: java.lang.Object[] mTmpItem>;

        $r13 = $r12[0];

        r0.<androidx.leanback.widget.StaggeredGrid: java.lang.Object mPendingItem> = $r13;

        r0.<androidx.leanback.widget.StaggeredGrid: int mPendingItemSize> = i3;

        return 0;

     label09:
        r0.<androidx.leanback.widget.StaggeredGrid: int mFirstVisibleIndex> = i25;

        $i14 = r0.<androidx.leanback.widget.StaggeredGrid: int mLastVisibleIndex>;

        if $i14 >= 0 goto label10;

        r0.<androidx.leanback.widget.StaggeredGrid: int mLastVisibleIndex> = i25;

     label10:
        $r9 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.leanback.widget.Grid$Provider mProvider>;

        $r7 = r0.<androidx.leanback.widget.StaggeredGrid: java.lang.Object[] mTmpItem>;

        $r8 = $r7[0];

        $i15 = i23 - i24;

        interfaceinvoke $r9.<androidx.leanback.widget.Grid$Provider: void addItem(java.lang.Object,int,int,int,int)>($r8, i25, i3, i2, $i15);

        if z0 != 0 goto label11;

        $z1 = virtualinvoke r0.<androidx.leanback.widget.StaggeredGrid: boolean checkPrependOverLimit(int)>(i0);

        if $z1 == 0 goto label11;

        return 1;

     label11:
        $r10 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.leanback.widget.Grid$Provider mProvider>;

        i23 = interfaceinvoke $r10.<androidx.leanback.widget.Grid$Provider: int getEdge(int)>(i25);

        i24 = r1.<androidx.leanback.widget.StaggeredGrid$Location: int mOffset>;

        if i2 != 0 goto label12;

        if z0 == 0 goto label12;

        return 1;

     label12:
        i25 = i25 + -1;

        goto label08;

     label13:
        return 0;
    }

    private int calculateOffsetAfterLastItem(int)
    {
        androidx.leanback.widget.StaggeredGrid r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, i11, i12, $i13;
        boolean $z0, z1;
        androidx.leanback.widget.StaggeredGrid$Location $r1, $r2, $r3, r4;

        r0 := @this: androidx.leanback.widget.StaggeredGrid;

        i0 := @parameter0: int;

        i9 = virtualinvoke r0.<androidx.leanback.widget.StaggeredGrid: int getLastIndex()>();

        z1 = 0;

     label1:
        $i1 = r0.<androidx.leanback.widget.StaggeredGrid: int mFirstIndex>;

        if i9 < $i1 goto label3;

        r4 = virtualinvoke r0.<androidx.leanback.widget.StaggeredGrid: androidx.leanback.widget.StaggeredGrid$Location getLocation(int)>(i9);

        $i8 = r4.<androidx.leanback.widget.StaggeredGrid$Location: int mRow>;

        if $i8 != i0 goto label2;

        z1 = 1;

        goto label3;

     label2:
        i9 = i9 + -1;

        goto label1;

     label3:
        if z1 != 0 goto label4;

        i9 = virtualinvoke r0.<androidx.leanback.widget.StaggeredGrid: int getLastIndex()>();

     label4:
        $z0 = virtualinvoke r0.<androidx.leanback.widget.StaggeredGrid: boolean isReversedFlow()>();

        if $z0 == 0 goto label5;

        $r3 = virtualinvoke r0.<androidx.leanback.widget.StaggeredGrid: androidx.leanback.widget.StaggeredGrid$Location getLocation(int)>(i9);

        $i5 = $r3.<androidx.leanback.widget.StaggeredGrid$Location: int mSize>;

        $i7 = neg $i5;

        $i6 = r0.<androidx.leanback.widget.StaggeredGrid: int mSpacing>;

        $i10 = $i7 - $i6;

        goto label6;

     label5:
        $r1 = virtualinvoke r0.<androidx.leanback.widget.StaggeredGrid: androidx.leanback.widget.StaggeredGrid$Location getLocation(int)>(i9);

        $i3 = $r1.<androidx.leanback.widget.StaggeredGrid$Location: int mSize>;

        $i2 = r0.<androidx.leanback.widget.StaggeredGrid: int mSpacing>;

        $i10 = $i3 + $i2;

     label6:
        i11 = $i10;

        i12 = i9 + 1;

     label7:
        $i13 = virtualinvoke r0.<androidx.leanback.widget.StaggeredGrid: int getLastIndex()>();

        if i12 > $i13 goto label8;

        $r2 = virtualinvoke r0.<androidx.leanback.widget.StaggeredGrid: androidx.leanback.widget.StaggeredGrid$Location getLocation(int)>(i12);

        $i4 = $r2.<androidx.leanback.widget.StaggeredGrid$Location: int mOffset>;

        i11 = i11 - $i4;

        i12 = i12 + 1;

        goto label7;

     label8:
        return i11;
    }

<androidx.leanback.widget.StaggeredGrid: boolean prependVisibleItemsWithoutCache(int,boolean)>
    protected final int prependVisibleItemToRow(int, int, int)
    {
        androidx.leanback.widget.StaggeredGrid r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i21, $i22;
        androidx.leanback.widget.StaggeredGrid$Location r1, r2, $r4, $r12;
        androidx.leanback.widget.Grid$Provider $r3, $r8, $r10;
        androidx.collection.CircularArray $r5;
        java.lang.Object $r6, r13;
        java.lang.Object[] $r7, $r9;
        boolean $z0;
        java.lang.IllegalStateException $r11;

        r0 := @this: androidx.leanback.widget.StaggeredGrid;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i5 = r0.<androidx.leanback.widget.StaggeredGrid: int mFirstVisibleIndex>;

        if $i5 < 0 goto label02;

        $i18 = r0.<androidx.leanback.widget.StaggeredGrid: int mFirstVisibleIndex>;

        $i19 = virtualinvoke r0.<androidx.leanback.widget.StaggeredGrid: int getFirstIndex()>();

        if $i18 != $i19 goto label01;

        $i21 = r0.<androidx.leanback.widget.StaggeredGrid: int mFirstVisibleIndex>;

        $i20 = i0 + 1;

        if $i21 == $i20 goto label02;

     label01:
        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>()>();

        throw $r11;

     label02:
        $i6 = r0.<androidx.leanback.widget.StaggeredGrid: int mFirstIndex>;

        if $i6 < 0 goto label03;

        $i17 = r0.<androidx.leanback.widget.StaggeredGrid: int mFirstIndex>;

        $r12 = virtualinvoke r0.<androidx.leanback.widget.StaggeredGrid: androidx.leanback.widget.StaggeredGrid$Location getLocation(int)>($i17);

        goto label04;

     label03:
        $r12 = null;

     label04:
        r1 = $r12;

        $r3 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.leanback.widget.Grid$Provider mProvider>;

        $i7 = r0.<androidx.leanback.widget.StaggeredGrid: int mFirstIndex>;

        i3 = interfaceinvoke $r3.<androidx.leanback.widget.Grid$Provider: int getEdge(int)>($i7);

        $r4 = new androidx.leanback.widget.StaggeredGrid$Location;

        specialinvoke $r4.<androidx.leanback.widget.StaggeredGrid$Location: void <init>(int,int,int)>(i1, 0, 0);

        r2 = $r4;

        $r5 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.collection.CircularArray mLocations>;

        virtualinvoke $r5.<androidx.collection.CircularArray: void addFirst(java.lang.Object)>(r2);

        $r6 = r0.<androidx.leanback.widget.StaggeredGrid: java.lang.Object mPendingItem>;

        if $r6 == null goto label05;

        $i15 = r0.<androidx.leanback.widget.StaggeredGrid: int mPendingItemSize>;

        r2.<androidx.leanback.widget.StaggeredGrid$Location: int mSize> = $i15;

        r13 = r0.<androidx.leanback.widget.StaggeredGrid: java.lang.Object mPendingItem>;

        r0.<androidx.leanback.widget.StaggeredGrid: java.lang.Object mPendingItem> = null;

        goto label06;

     label05:
        $r8 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.leanback.widget.Grid$Provider mProvider>;

        $r7 = r0.<androidx.leanback.widget.StaggeredGrid: java.lang.Object[] mTmpItem>;

        $i8 = interfaceinvoke $r8.<androidx.leanback.widget.Grid$Provider: int createItem(int,boolean,java.lang.Object[],boolean)>(i0, 0, $r7, 0);

        r2.<androidx.leanback.widget.StaggeredGrid$Location: int mSize> = $i8;

        $r9 = r0.<androidx.leanback.widget.StaggeredGrid: java.lang.Object[] mTmpItem>;

        r13 = $r9[0];

     label06:
        r0.<androidx.leanback.widget.StaggeredGrid: int mFirstVisibleIndex> = i0;

        r0.<androidx.leanback.widget.StaggeredGrid: int mFirstIndex> = i0;

        $i9 = r0.<androidx.leanback.widget.StaggeredGrid: int mLastVisibleIndex>;

        if $i9 >= 0 goto label07;

        r0.<androidx.leanback.widget.StaggeredGrid: int mLastVisibleIndex> = i0;

     label07:
        $z0 = r0.<androidx.leanback.widget.StaggeredGrid: boolean mReversedFlow>;

        if $z0 != 0 goto label08;

        $i14 = r2.<androidx.leanback.widget.StaggeredGrid$Location: int mSize>;

        $i22 = i2 - $i14;

        goto label09;

     label08:
        $i10 = r2.<androidx.leanback.widget.StaggeredGrid$Location: int mSize>;

        $i22 = i2 + $i10;

     label09:
        i4 = $i22;

        if r1 == null goto label10;

        $i13 = i3 - i4;

        r1.<androidx.leanback.widget.StaggeredGrid$Location: int mOffset> = $i13;

     label10:
        $r10 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.leanback.widget.Grid$Provider mProvider>;

        $i11 = r2.<androidx.leanback.widget.StaggeredGrid$Location: int mSize>;

        interfaceinvoke $r10.<androidx.leanback.widget.Grid$Provider: void addItem(java.lang.Object,int,int,int,int)>(r13, i0, $i11, i1, i4);

        $i12 = r2.<androidx.leanback.widget.StaggeredGrid$Location: int mSize>;

        return $i12;
    }

    protected final boolean appendVisibleItems(int, boolean)
    {
        androidx.leanback.widget.StaggeredGrid r0;
        int i0, $i1;
        boolean z0, $z1, $z2, z3, z4;
        java.lang.Throwable r1, $r5;
        androidx.leanback.widget.Grid$Provider $r2;
        java.lang.Object[] $r3, $r4, $r6;

        r0 := @this: androidx.leanback.widget.StaggeredGrid;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r2 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.leanback.widget.Grid$Provider mProvider>;

        $i1 = interfaceinvoke $r2.<androidx.leanback.widget.Grid$Provider: int getCount()>();

        if $i1 != 0 goto label1;

        return 0;

     label1:
        if z0 != 0 goto label2;

        $z2 = virtualinvoke r0.<androidx.leanback.widget.StaggeredGrid: boolean checkAppendOverLimit(int)>(i0);

        if $z2 == 0 goto label2;

        return 0;

     label2:
        $z1 = virtualinvoke r0.<androidx.leanback.widget.StaggeredGrid: boolean appendVisbleItemsWithCache(int,boolean)>(i0, z0);

        if $z1 == 0 goto label4;

        z3 = 1;

     label3:
        $r4 = r0.<androidx.leanback.widget.StaggeredGrid: java.lang.Object[] mTmpItem>;

        $r4[0] = null;

        r0.<androidx.leanback.widget.StaggeredGrid: java.lang.Object mPendingItem> = null;

        return z3;

     label4:
        z4 = virtualinvoke r0.<androidx.leanback.widget.StaggeredGrid: boolean appendVisibleItemsWithoutCache(int,boolean)>(i0, z0);

     label5:
        $r3 = r0.<androidx.leanback.widget.StaggeredGrid: java.lang.Object[] mTmpItem>;

        $r3[0] = null;

        r0.<androidx.leanback.widget.StaggeredGrid: java.lang.Object mPendingItem> = null;

        return z4;

     label6:
        $r5 := @caughtexception;

        r1 = $r5;

     label7:
        $r6 = r0.<androidx.leanback.widget.StaggeredGrid: java.lang.Object[] mTmpItem>;

        $r6[0] = null;

        r0.<androidx.leanback.widget.StaggeredGrid: java.lang.Object mPendingItem> = null;

        throw r1;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    protected final boolean appendVisbleItemsWithCache(int, boolean)
    {
        androidx.leanback.widget.StaggeredGrid r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, $i21, i22;
        boolean z0, $z1;
        androidx.leanback.widget.StaggeredGrid$Location r1;
        androidx.collection.CircularArray $r2, $r4, $r11;
        androidx.leanback.widget.Grid$Provider $r3, $r6, $r9, $r10, $r12;
        java.lang.Object[] $r5, $r7;
        java.lang.Object $r8;

        r0 := @this: androidx.leanback.widget.StaggeredGrid;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r2 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.collection.CircularArray mLocations>;

        $i4 = virtualinvoke $r2.<androidx.collection.CircularArray: int size()>();

        if $i4 != 0 goto label01;

        return 0;

     label01:
        $r3 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.leanback.widget.Grid$Provider mProvider>;

        i1 = interfaceinvoke $r3.<androidx.leanback.widget.Grid$Provider: int getCount()>();

        $i5 = r0.<androidx.leanback.widget.StaggeredGrid: int mLastVisibleIndex>;

        if $i5 < 0 goto label02;

        $i17 = r0.<androidx.leanback.widget.StaggeredGrid: int mLastVisibleIndex>;

        i19 = $i17 + 1;

        $r12 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.leanback.widget.Grid$Provider mProvider>;

        $i18 = r0.<androidx.leanback.widget.StaggeredGrid: int mLastVisibleIndex>;

        i20 = interfaceinvoke $r12.<androidx.leanback.widget.Grid$Provider: int getEdge(int)>($i18);

        goto label07;

     label02:
        i20 = 2147483647;

        $i6 = r0.<androidx.leanback.widget.StaggeredGrid: int mStartIndex>;

        if $i6 == -1 goto label03;

        $i21 = r0.<androidx.leanback.widget.StaggeredGrid: int mStartIndex>;

        goto label04;

     label03:
        $i21 = 0;

     label04:
        i19 = $i21;

        $i7 = virtualinvoke r0.<androidx.leanback.widget.StaggeredGrid: int getLastIndex()>();

        $i8 = $i7 + 1;

        if i19 > $i8 goto label05;

        $i9 = virtualinvoke r0.<androidx.leanback.widget.StaggeredGrid: int getFirstIndex()>();

        if i19 >= $i9 goto label06;

     label05:
        $r4 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.collection.CircularArray mLocations>;

        virtualinvoke $r4.<androidx.collection.CircularArray: void clear()>();

        return 0;

     label06:
        $i10 = virtualinvoke r0.<androidx.leanback.widget.StaggeredGrid: int getLastIndex()>();

        if i19 <= $i10 goto label07;

        return 0;

     label07:
        i22 = virtualinvoke r0.<androidx.leanback.widget.StaggeredGrid: int getLastIndex()>();

     label08:
        if i19 >= i1 goto label15;

        if i19 > i22 goto label15;

        r1 = virtualinvoke r0.<androidx.leanback.widget.StaggeredGrid: androidx.leanback.widget.StaggeredGrid$Location getLocation(int)>(i19);

        if i20 == 2147483647 goto label09;

        $i16 = r1.<androidx.leanback.widget.StaggeredGrid$Location: int mOffset>;

        i20 = i20 + $i16;

     label09:
        i2 = r1.<androidx.leanback.widget.StaggeredGrid$Location: int mRow>;

        $r6 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.leanback.widget.Grid$Provider mProvider>;

        $r5 = r0.<androidx.leanback.widget.StaggeredGrid: java.lang.Object[] mTmpItem>;

        i3 = interfaceinvoke $r6.<androidx.leanback.widget.Grid$Provider: int createItem(int,boolean,java.lang.Object[],boolean)>(i19, 1, $r5, 0);

        $i11 = r1.<androidx.leanback.widget.StaggeredGrid$Location: int mSize>;

        if i3 == $i11 goto label10;

        r1.<androidx.leanback.widget.StaggeredGrid$Location: int mSize> = i3;

        $r11 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.collection.CircularArray mLocations>;

        $i15 = i22 - i19;

        virtualinvoke $r11.<androidx.collection.CircularArray: void removeFromEnd(int)>($i15);

        i22 = i19;

     label10:
        r0.<androidx.leanback.widget.StaggeredGrid: int mLastVisibleIndex> = i19;

        $i12 = r0.<androidx.leanback.widget.StaggeredGrid: int mFirstVisibleIndex>;

        if $i12 >= 0 goto label11;

        r0.<androidx.leanback.widget.StaggeredGrid: int mFirstVisibleIndex> = i19;

     label11:
        $r9 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.leanback.widget.Grid$Provider mProvider>;

        $r7 = r0.<androidx.leanback.widget.StaggeredGrid: java.lang.Object[] mTmpItem>;

        $r8 = $r7[0];

        interfaceinvoke $r9.<androidx.leanback.widget.Grid$Provider: void addItem(java.lang.Object,int,int,int,int)>($r8, i19, i3, i2, i20);

        if z0 != 0 goto label12;

        $z1 = virtualinvoke r0.<androidx.leanback.widget.StaggeredGrid: boolean checkAppendOverLimit(int)>(i0);

        if $z1 == 0 goto label12;

        return 1;

     label12:
        if i20 != 2147483647 goto label13;

        $r10 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.leanback.widget.Grid$Provider mProvider>;

        i20 = interfaceinvoke $r10.<androidx.leanback.widget.Grid$Provider: int getEdge(int)>(i19);

     label13:
        $i13 = r0.<androidx.leanback.widget.StaggeredGrid: int mNumRows>;

        $i14 = $i13 - 1;

        if i2 != $i14 goto label14;

        if z0 == 0 goto label14;

        return 1;

     label14:
        i19 = i19 + 1;

        goto label08;

     label15:
        return 0;
    }

<androidx.leanback.widget.StaggeredGrid: boolean appendVisibleItemsWithoutCache(int,boolean)>
    protected final int appendVisibleItemToRow(int, int, int)
    {
        androidx.leanback.widget.StaggeredGrid r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, $i21, $i22;
        androidx.leanback.widget.StaggeredGrid$Location r1, $r9;
        androidx.leanback.widget.Grid$Provider $r2, $r4, $r13;
        java.lang.Object[] $r3, $r5;
        androidx.collection.CircularArray $r6, $r7, $r10;
        java.lang.IllegalStateException $r8;
        java.lang.Object $r11, r12;

        r0 := @this: androidx.leanback.widget.StaggeredGrid;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = r0.<androidx.leanback.widget.StaggeredGrid: int mLastVisibleIndex>;

        if $i3 < 0 goto label02;

        $i16 = r0.<androidx.leanback.widget.StaggeredGrid: int mLastVisibleIndex>;

        $i17 = virtualinvoke r0.<androidx.leanback.widget.StaggeredGrid: int getLastIndex()>();

        if $i16 != $i17 goto label01;

        $i19 = r0.<androidx.leanback.widget.StaggeredGrid: int mLastVisibleIndex>;

        $i18 = i0 - 1;

        if $i19 == $i18 goto label02;

     label01:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>()>();

        throw $r8;

     label02:
        $i4 = r0.<androidx.leanback.widget.StaggeredGrid: int mLastVisibleIndex>;

        if $i4 >= 0 goto label04;

        $r7 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.collection.CircularArray mLocations>;

        $i13 = virtualinvoke $r7.<androidx.collection.CircularArray: int size()>();

        if $i13 <= 0 goto label03;

        $i14 = virtualinvoke r0.<androidx.leanback.widget.StaggeredGrid: int getLastIndex()>();

        $i15 = $i14 + 1;

        if i0 != $i15 goto label03;

        i20 = specialinvoke r0.<androidx.leanback.widget.StaggeredGrid: int calculateOffsetAfterLastItem(int)>(i1);

        goto label05;

     label03:
        i20 = 0;

        goto label05;

     label04:
        $r2 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.leanback.widget.Grid$Provider mProvider>;

        $i5 = r0.<androidx.leanback.widget.StaggeredGrid: int mLastVisibleIndex>;

        $i6 = interfaceinvoke $r2.<androidx.leanback.widget.Grid$Provider: int getEdge(int)>($i5);

        i20 = i2 - $i6;

     label05:
        $r9 = new androidx.leanback.widget.StaggeredGrid$Location;

        specialinvoke $r9.<androidx.leanback.widget.StaggeredGrid$Location: void <init>(int,int,int)>(i1, i20, 0);

        r1 = $r9;

        $r10 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.collection.CircularArray mLocations>;

        virtualinvoke $r10.<androidx.collection.CircularArray: void addLast(java.lang.Object)>(r1);

        $r11 = r0.<androidx.leanback.widget.StaggeredGrid: java.lang.Object mPendingItem>;

        if $r11 == null goto label06;

        $i12 = r0.<androidx.leanback.widget.StaggeredGrid: int mPendingItemSize>;

        r1.<androidx.leanback.widget.StaggeredGrid$Location: int mSize> = $i12;

        r12 = r0.<androidx.leanback.widget.StaggeredGrid: java.lang.Object mPendingItem>;

        r0.<androidx.leanback.widget.StaggeredGrid: java.lang.Object mPendingItem> = null;

        goto label07;

     label06:
        $r4 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.leanback.widget.Grid$Provider mProvider>;

        $r3 = r0.<androidx.leanback.widget.StaggeredGrid: java.lang.Object[] mTmpItem>;

        $i7 = interfaceinvoke $r4.<androidx.leanback.widget.Grid$Provider: int createItem(int,boolean,java.lang.Object[],boolean)>(i0, 1, $r3, 0);

        r1.<androidx.leanback.widget.StaggeredGrid$Location: int mSize> = $i7;

        $r5 = r0.<androidx.leanback.widget.StaggeredGrid: java.lang.Object[] mTmpItem>;

        r12 = $r5[0];

     label07:
        $r6 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.collection.CircularArray mLocations>;

        $i8 = virtualinvoke $r6.<androidx.collection.CircularArray: int size()>();

        if $i8 != 1 goto label08;

        r0.<androidx.leanback.widget.StaggeredGrid: int mLastVisibleIndex> = i0;

        r0.<androidx.leanback.widget.StaggeredGrid: int mFirstVisibleIndex> = i0;

        r0.<androidx.leanback.widget.StaggeredGrid: int mFirstIndex> = i0;

        goto label10;

     label08:
        $i9 = r0.<androidx.leanback.widget.StaggeredGrid: int mLastVisibleIndex>;

        if $i9 >= 0 goto label09;

        r0.<androidx.leanback.widget.StaggeredGrid: int mLastVisibleIndex> = i0;

        r0.<androidx.leanback.widget.StaggeredGrid: int mFirstVisibleIndex> = i0;

        goto label10;

     label09:
        $i10 = r0.<androidx.leanback.widget.StaggeredGrid: int mLastVisibleIndex>;

        $i11 = $i10 + 1;

        r0.<androidx.leanback.widget.StaggeredGrid: int mLastVisibleIndex> = $i11;

     label10:
        $r13 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.leanback.widget.Grid$Provider mProvider>;

        $i21 = r1.<androidx.leanback.widget.StaggeredGrid$Location: int mSize>;

        interfaceinvoke $r13.<androidx.leanback.widget.Grid$Provider: void addItem(java.lang.Object,int,int,int,int)>(r12, i0, $i21, i1, i2);

        $i22 = r1.<androidx.leanback.widget.StaggeredGrid$Location: int mSize>;

        return $i22;
    }

    public final androidx.collection.CircularIntArray[] getItemPositionsInRows(int, int)
    {
        androidx.leanback.widget.StaggeredGrid r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i8, i9;
        androidx.collection.CircularIntArray r1, $r6;
        androidx.collection.CircularIntArray[] $r2, $r3, $r5;
        androidx.leanback.widget.StaggeredGrid$Location $r4;

        r0 := @this: androidx.leanback.widget.StaggeredGrid;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i8 = 0;

     label1:
        $i2 = r0.<androidx.leanback.widget.StaggeredGrid: int mNumRows>;

        if i8 >= $i2 goto label2;

        $r5 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.collection.CircularIntArray[] mTmpItemPositionsInRows>;

        $r6 = $r5[i8];

        virtualinvoke $r6.<androidx.collection.CircularIntArray: void clear()>();

        i8 = i8 + 1;

        goto label1;

     label2:
        if i0 < 0 goto label6;

        i9 = i0;

     label3:
        if i9 > i1 goto label6;

        $r3 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.collection.CircularIntArray[] mTmpItemPositionsInRows>;

        $r4 = virtualinvoke r0.<androidx.leanback.widget.StaggeredGrid: androidx.leanback.widget.StaggeredGrid$Location getLocation(int)>(i9);

        $i3 = $r4.<androidx.leanback.widget.StaggeredGrid$Location: int mRow>;

        r1 = $r3[$i3];

        $i4 = virtualinvoke r1.<androidx.collection.CircularIntArray: int size()>();

        if $i4 <= 0 goto label4;

        $i5 = virtualinvoke r1.<androidx.collection.CircularIntArray: int getLast()>();

        $i6 = i9 - 1;

        if $i5 != $i6 goto label4;

        virtualinvoke r1.<androidx.collection.CircularIntArray: int popLast()>();

        virtualinvoke r1.<androidx.collection.CircularIntArray: void addLast(int)>(i9);

        goto label5;

     label4:
        virtualinvoke r1.<androidx.collection.CircularIntArray: void addLast(int)>(i9);

        virtualinvoke r1.<androidx.collection.CircularIntArray: void addLast(int)>(i9);

     label5:
        i9 = i9 + 1;

        goto label3;

     label6:
        $r2 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.collection.CircularIntArray[] mTmpItemPositionsInRows>;

        return $r2;
    }

    public void invalidateItemsAfter(int)
    {
        androidx.leanback.widget.StaggeredGrid r0;
        int i0, $i1, $i2, $i3, $i4;
        androidx.collection.CircularArray $r1, $r2;

        r0 := @this: androidx.leanback.widget.StaggeredGrid;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.leanback.widget.Grid: void invalidateItemsAfter(int)>(i0);

        $r1 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.collection.CircularArray mLocations>;

        $i1 = virtualinvoke r0.<androidx.leanback.widget.StaggeredGrid: int getLastIndex()>();

        $i2 = $i1 - i0;

        $i3 = $i2 + 1;

        virtualinvoke $r1.<androidx.collection.CircularArray: void removeFromEnd(int)>($i3);

        $r2 = r0.<androidx.leanback.widget.StaggeredGrid: androidx.collection.CircularArray mLocations>;

        $i4 = virtualinvoke $r2.<androidx.collection.CircularArray: int size()>();

        if $i4 != 0 goto label1;

        r0.<androidx.leanback.widget.StaggeredGrid: int mFirstIndex> = -1;

     label1:
        return;
    }

    public volatile androidx.leanback.widget.Grid$Location getLocation(int)
    {
        androidx.leanback.widget.StaggeredGrid r0;
        int i0;
        androidx.leanback.widget.StaggeredGrid$Location $r1;

        r0 := @this: androidx.leanback.widget.StaggeredGrid;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.leanback.widget.StaggeredGrid: androidx.leanback.widget.StaggeredGrid$Location getLocation(int)>(i0);

        return $r1;
    }

androidx.leanback.widget.StaggeredGrid$Location
<androidx.leanback.widget.StaggeredGrid$Location: int mOffset>
<androidx.leanback.widget.StaggeredGrid$Location: int mSize>
    void <init>(int, int, int)
    {
        androidx.leanback.widget.StaggeredGrid$Location r0;
        int i0, i1, i2;

        r0 := @this: androidx.leanback.widget.StaggeredGrid$Location;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<androidx.leanback.widget.Grid$Location: void <init>(int)>(i0);

        r0.<androidx.leanback.widget.StaggeredGrid$Location: int mOffset> = i1;

        r0.<androidx.leanback.widget.StaggeredGrid$Location: int mSize> = i2;

        return;
    }

