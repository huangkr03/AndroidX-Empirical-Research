androidx.compose.ui.platform.DisposableSaveableStateRegistry_androidKt
<androidx.compose.ui.platform.DisposableSaveableStateRegistry_androidKt: java.lang.Class[] AcceptableClasses>
    public static final androidx.compose.ui.platform.DisposableSaveableStateRegistry DisposableSaveableStateRegistry(android.view.View, androidx.savedstate.SavedStateRegistryOwner)
    {
        android.view.View r0, r2;
        androidx.savedstate.SavedStateRegistryOwner r1;
        java.lang.String r3, $r7, $r8, r9;
        android.view.ViewParent $r4;
        int $i0, $i1;
        boolean $z0;
        androidx.compose.ui.platform.DisposableSaveableStateRegistry $r5;
        java.lang.Object r6;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: androidx.savedstate.SavedStateRegistryOwner;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "view");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "owner");

        $r4 = virtualinvoke r0.<android.view.View: android.view.ViewParent getParent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r4, "null cannot be cast to non-null type android.view.View");

        r2 = (android.view.View) $r4;

        $i0 = <androidx.compose.ui.R$id: int compose_view_saveable_id_tag>;

        r6 = virtualinvoke r2.<android.view.View: java.lang.Object getTag(int)>($i0);

        $z0 = r6 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $r7 = (java.lang.String) r6;

        goto label2;

     label1:
        $r7 = null;

     label2:
        r3 = $r7;

        $r8 = r3;

        if r3 != null goto label3;

        $i1 = virtualinvoke r2.<android.view.View: int getId()>();

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

     label3:
        r9 = $r8;

        $r5 = staticinvoke <androidx.compose.ui.platform.DisposableSaveableStateRegistry_androidKt: androidx.compose.ui.platform.DisposableSaveableStateRegistry DisposableSaveableStateRegistry(java.lang.String,androidx.savedstate.SavedStateRegistryOwner)>(r9, r1);

        return $r5;
    }

    public static final androidx.compose.ui.platform.DisposableSaveableStateRegistry DisposableSaveableStateRegistry(java.lang.String, androidx.savedstate.SavedStateRegistryOwner)
    {
        java.lang.String r0, r2, $r10;
        androidx.savedstate.SavedStateRegistryOwner r1;
        androidx.savedstate.SavedStateRegistry r3;
        android.os.Bundle r4;
        java.util.Map r5, $r22;
        androidx.compose.runtime.saveable.SaveableStateRegistry r6;
        boolean z0, z1;
        java.lang.Throwable r7, $r21;
        java.lang.StringBuilder $r8, $r11, $r12, $r13;
        java.lang.Class $r9;
        androidx.compose.ui.platform.DisposableSaveableStateRegistry_androidKt$DisposableSaveableStateRegistry$saveableStateRegistry$1 $r14;
        kotlin.jvm.functions.Function1 $r15;
        androidx.compose.ui.platform.DisposableSaveableStateRegistry_androidKt$DisposableSaveableStateRegistry$registered$1 $r16;
        androidx.savedstate.SavedStateRegistry$SavedStateProvider $r17;
        androidx.compose.ui.platform.DisposableSaveableStateRegistry $r18;
        androidx.compose.ui.platform.DisposableSaveableStateRegistry_androidKt$DisposableSaveableStateRegistry$1 $r19;
        kotlin.jvm.functions.Function0 $r20;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: androidx.savedstate.SavedStateRegistryOwner;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "id");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "savedStateRegistryOwner");

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = class "Landroidx/compose/runtime/saveable/SaveableStateRegistry;";

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getSimpleName()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        r2 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        r3 = interfaceinvoke r1.<androidx.savedstate.SavedStateRegistryOwner: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()>();

        r4 = virtualinvoke r3.<androidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)>(r2);

        if r4 == null goto label1;

        $r22 = staticinvoke <androidx.compose.ui.platform.DisposableSaveableStateRegistry_androidKt: java.util.Map toMap(android.os.Bundle)>(r4);

        goto label2;

     label1:
        $r22 = null;

     label2:
        r5 = $r22;

        $r14 = <androidx.compose.ui.platform.DisposableSaveableStateRegistry_androidKt$DisposableSaveableStateRegistry$saveableStateRegistry$1: androidx.compose.ui.platform.DisposableSaveableStateRegistry_androidKt$DisposableSaveableStateRegistry$saveableStateRegistry$1 INSTANCE>;

        $r15 = (kotlin.jvm.functions.Function1) $r14;

        r6 = staticinvoke <androidx.compose.runtime.saveable.SaveableStateRegistryKt: androidx.compose.runtime.saveable.SaveableStateRegistry SaveableStateRegistry(java.util.Map,kotlin.jvm.functions.Function1)>(r5, $r15);

     label3:
        $r16 = new androidx.compose.ui.platform.DisposableSaveableStateRegistry_androidKt$DisposableSaveableStateRegistry$registered$1;

        specialinvoke $r16.<androidx.compose.ui.platform.DisposableSaveableStateRegistry_androidKt$DisposableSaveableStateRegistry$registered$1: void <init>(androidx.compose.runtime.saveable.SaveableStateRegistry)>(r6);

        $r17 = (androidx.savedstate.SavedStateRegistry$SavedStateProvider) $r16;

        virtualinvoke r3.<androidx.savedstate.SavedStateRegistry: void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)>(r2, $r17);

        z1 = 1;

     label4:
        goto label6;

     label5:
        $r21 := @caughtexception;

        r7 = $r21;

        z1 = 0;

     label6:
        z0 = z1;

        $r18 = new androidx.compose.ui.platform.DisposableSaveableStateRegistry;

        $r19 = new androidx.compose.ui.platform.DisposableSaveableStateRegistry_androidKt$DisposableSaveableStateRegistry$1;

        specialinvoke $r19.<androidx.compose.ui.platform.DisposableSaveableStateRegistry_androidKt$DisposableSaveableStateRegistry$1: void <init>(boolean,androidx.savedstate.SavedStateRegistry,java.lang.String)>(z0, r3, r2);

        $r20 = (kotlin.jvm.functions.Function0) $r19;

        specialinvoke $r18.<androidx.compose.ui.platform.DisposableSaveableStateRegistry: void <init>(androidx.compose.runtime.saveable.SaveableStateRegistry,kotlin.jvm.functions.Function0)>(r6, $r20);

        return $r18;

        catch java.lang.IllegalArgumentException from label3 to label4 with label5;
    }

    private static final boolean canBeSavedToBundle(java.lang.Object)
    {
        java.lang.Object r0, r12;
        int i0, i1;
        java.lang.Class r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        androidx.compose.runtime.snapshots.SnapshotMutableState $r2, $r5, $r8, $r11;
        androidx.compose.runtime.SnapshotMutationPolicy $r3, $r4, $r6, $r7, $r9, $r10;
        java.lang.Class[] r14;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof androidx.compose.runtime.snapshots.SnapshotMutableState;

        if $z0 == 0 goto label5;

        $r2 = (androidx.compose.runtime.snapshots.SnapshotMutableState) r0;

        $r3 = interfaceinvoke $r2.<androidx.compose.runtime.snapshots.SnapshotMutableState: androidx.compose.runtime.SnapshotMutationPolicy getPolicy()>();

        $r4 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.SnapshotMutationPolicy neverEqualPolicy()>();

        if $r3 == $r4 goto label1;

        $r5 = (androidx.compose.runtime.snapshots.SnapshotMutableState) r0;

        $r6 = interfaceinvoke $r5.<androidx.compose.runtime.snapshots.SnapshotMutableState: androidx.compose.runtime.SnapshotMutationPolicy getPolicy()>();

        $r7 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.SnapshotMutationPolicy structuralEqualityPolicy()>();

        if $r6 == $r7 goto label1;

        $r8 = (androidx.compose.runtime.snapshots.SnapshotMutableState) r0;

        $r9 = interfaceinvoke $r8.<androidx.compose.runtime.snapshots.SnapshotMutableState: androidx.compose.runtime.SnapshotMutationPolicy getPolicy()>();

        $r10 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.SnapshotMutationPolicy referentialEqualityPolicy()>();

        if $r9 != $r10 goto label4;

     label1:
        $r11 = (androidx.compose.runtime.snapshots.SnapshotMutableState) r0;

        r12 = interfaceinvoke $r11.<androidx.compose.runtime.snapshots.SnapshotMutableState: java.lang.Object getValue()>();

        if r12 != null goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = staticinvoke <androidx.compose.ui.platform.DisposableSaveableStateRegistry_androidKt: boolean canBeSavedToBundle(java.lang.Object)>(r12);

     label3:
        return $z4;

     label4:
        return 0;

     label5:
        $z1 = r0 instanceof kotlin.Function;

        if $z1 == 0 goto label6;

        $z3 = r0 instanceof java.io.Serializable;

        if $z3 == 0 goto label6;

        return 0;

     label6:
        r14 = <androidx.compose.ui.platform.DisposableSaveableStateRegistry_androidKt: java.lang.Class[] AcceptableClasses>;

        i1 = 0;

        i0 = lengthof r14;

     label7:
        if i1 >= i0 goto label9;

        r1 = r14[i1];

        $z2 = virtualinvoke r1.<java.lang.Class: boolean isInstance(java.lang.Object)>(r0);

        if $z2 == 0 goto label8;

        return 1;

     label8:
        i1 = i1 + 1;

        goto label7;

     label9:
        return 0;
    }

    private static final java.util.Map toMap(android.os.Bundle)
    {
        android.os.Bundle $r0;
        java.util.Map r1;
        java.lang.Iterable $r2;
        java.util.Iterator r3;
        java.lang.Object r4;
        java.lang.String r5;
        java.util.ArrayList r6, $r9;
        java.util.LinkedHashMap $r7;
        java.util.Set $r8;
        boolean $z2;

        $r0 := @parameter0: android.os.Bundle;

        $r7 = new java.util.LinkedHashMap;

        specialinvoke $r7.<java.util.LinkedHashMap: void <init>()>();

        r1 = (java.util.Map) $r7;

        $r8 = virtualinvoke $r0.<android.os.Bundle: java.util.Set keySet()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "this.keySet()");

        $r2 = (java.lang.Iterable) $r8;

        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) r4;

        $r9 = virtualinvoke $r0.<android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>(r5);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r9, "null cannot be cast to non-null type java.util.ArrayList<kotlin.Any?>{ kotlin.collections.TypeAliasesKt.ArrayList<kotlin.Any?> }");

        r6 = $r9;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r5, "key");

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r6);

        goto label1;

     label2:
        return r1;
    }

    private static final android.os.Bundle toBundle(java.util.Map)
    {
        java.util.Map $r0;
        android.os.Bundle r1, $r8;
        java.util.Iterator r2;
        java.util.Map$Entry r3, r4;
        java.lang.String r5;
        java.util.List r6;
        java.util.ArrayList r7, $r14;
        java.util.Set $r9;
        boolean $z2, $z3;
        java.lang.Object $r10, $r11, $r12;
        java.util.Collection $r13;

        $r0 := @parameter0: java.util.Map;

        $r8 = new android.os.Bundle;

        specialinvoke $r8.<android.os.Bundle: void <init>()>();

        r1 = $r8;

        $r9 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r10;

        r4 = r3;

        $r11 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        r5 = (java.lang.String) $r11;

        $r12 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        r6 = (java.util.List) $r12;

        $z3 = r6 instanceof java.util.ArrayList;

        if $z3 == 0 goto label2;

        $r14 = (java.util.ArrayList) r6;

        goto label3;

     label2:
        $r14 = new java.util.ArrayList;

        $r13 = (java.util.Collection) r6;

        specialinvoke $r14.<java.util.ArrayList: void <init>(java.util.Collection)>($r13);

     label3:
        r7 = $r14;

        virtualinvoke r1.<android.os.Bundle: void putParcelableArrayList(java.lang.String,java.util.ArrayList)>(r5, r7);

        goto label1;

     label4:
        return r1;
    }

    public static final boolean access$canBeSavedToBundle(java.lang.Object)
    {
        java.lang.Object r0;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        $z0 = staticinvoke <androidx.compose.ui.platform.DisposableSaveableStateRegistry_androidKt: boolean canBeSavedToBundle(java.lang.Object)>(r0);

        return $z0;
    }

    public static final android.os.Bundle access$toBundle(java.util.Map)
    {
        java.util.Map $r0;
        android.os.Bundle $r1;

        $r0 := @parameter0: java.util.Map;

        $r1 = staticinvoke <androidx.compose.ui.platform.DisposableSaveableStateRegistry_androidKt: android.os.Bundle toBundle(java.util.Map)>($r0);

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class[] r0;

        r0 = newarray (java.lang.Class)[7];

        r0[0] = class "Ljava/io/Serializable;";

        r0[1] = class "Landroid/os/Parcelable;";

        r0[2] = class "Ljava/lang/String;";

        r0[3] = class "Landroid/util/SparseArray;";

        r0[4] = class "Landroid/os/Binder;";

        r0[5] = class "Landroid/util/Size;";

        r0[6] = class "Landroid/util/SizeF;";

        <androidx.compose.ui.platform.DisposableSaveableStateRegistry_androidKt: java.lang.Class[] AcceptableClasses> = r0;

        return;
    }

