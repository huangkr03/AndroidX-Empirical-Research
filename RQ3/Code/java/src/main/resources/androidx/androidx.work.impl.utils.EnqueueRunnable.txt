androidx.work.impl.utils.EnqueueRunnable
<androidx.work.impl.utils.EnqueueRunnable: java.lang.String TAG>
<androidx.work.impl.utils.EnqueueRunnable: androidx.work.impl.WorkContinuationImpl mWorkContinuation>
<androidx.work.impl.utils.EnqueueRunnable: androidx.work.impl.OperationImpl mOperation>
    public void <init>(androidx.work.impl.WorkContinuationImpl)
    {
        androidx.work.impl.utils.EnqueueRunnable r0;
        androidx.work.impl.WorkContinuationImpl r1;
        androidx.work.impl.OperationImpl $r2;

        r0 := @this: androidx.work.impl.utils.EnqueueRunnable;

        r1 := @parameter0: androidx.work.impl.WorkContinuationImpl;

        $r2 = new androidx.work.impl.OperationImpl;

        specialinvoke $r2.<androidx.work.impl.OperationImpl: void <init>()>();

        specialinvoke r0.<androidx.work.impl.utils.EnqueueRunnable: void <init>(androidx.work.impl.WorkContinuationImpl,androidx.work.impl.OperationImpl)>(r1, $r2);

        return;
    }

    public void <init>(androidx.work.impl.WorkContinuationImpl, androidx.work.impl.OperationImpl)
    {
        androidx.work.impl.utils.EnqueueRunnable r0;
        androidx.work.impl.WorkContinuationImpl r1;
        androidx.work.impl.OperationImpl r2;

        r0 := @this: androidx.work.impl.utils.EnqueueRunnable;

        r1 := @parameter0: androidx.work.impl.WorkContinuationImpl;

        r2 := @parameter1: androidx.work.impl.OperationImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.work.impl.utils.EnqueueRunnable: androidx.work.impl.WorkContinuationImpl mWorkContinuation> = r1;

        r0.<androidx.work.impl.utils.EnqueueRunnable: androidx.work.impl.OperationImpl mOperation> = r2;

        return;
    }

    public void run()
    {
        androidx.work.impl.utils.EnqueueRunnable r0;
        android.content.Context r1;
        androidx.work.impl.WorkContinuationImpl $r2, $r5, $r10;
        boolean $z0, z1;
        androidx.work.Operation$State$SUCCESS $r3;
        androidx.work.impl.OperationImpl $r4, $r16;
        androidx.work.impl.WorkManagerImpl $r6;
        java.lang.IllegalStateException $r7;
        java.lang.StringBuilder $r8, $r9, $r11, $r12;
        java.lang.String $r13;
        java.lang.Throwable $r14, r17;
        androidx.work.Operation$State$FAILURE $r15;

        r0 := @this: androidx.work.impl.utils.EnqueueRunnable;

     label1:
        $r2 = r0.<androidx.work.impl.utils.EnqueueRunnable: androidx.work.impl.WorkContinuationImpl mWorkContinuation>;

        $z0 = virtualinvoke $r2.<androidx.work.impl.WorkContinuationImpl: boolean hasCycles()>();

        if $z0 == 0 goto label2;

        $r7 = new java.lang.IllegalStateException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WorkContinuation has cycles (");

        $r10 = r0.<androidx.work.impl.utils.EnqueueRunnable: androidx.work.impl.WorkContinuationImpl mWorkContinuation>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r7;

     label2:
        z1 = virtualinvoke r0.<androidx.work.impl.utils.EnqueueRunnable: boolean addToDatabase()>();

        if z1 == 0 goto label3;

        $r5 = r0.<androidx.work.impl.utils.EnqueueRunnable: androidx.work.impl.WorkContinuationImpl mWorkContinuation>;

        $r6 = virtualinvoke $r5.<androidx.work.impl.WorkContinuationImpl: androidx.work.impl.WorkManagerImpl getWorkManagerImpl()>();

        r1 = virtualinvoke $r6.<androidx.work.impl.WorkManagerImpl: android.content.Context getApplicationContext()>();

        staticinvoke <androidx.work.impl.utils.PackageManagerHelper: void setComponentEnabled(android.content.Context,java.lang.Class,boolean)>(r1, class "Landroidx/work/impl/background/systemalarm/RescheduleReceiver;", 1);

        virtualinvoke r0.<androidx.work.impl.utils.EnqueueRunnable: void scheduleWorkInBackground()>();

     label3:
        $r4 = r0.<androidx.work.impl.utils.EnqueueRunnable: androidx.work.impl.OperationImpl mOperation>;

        $r3 = <androidx.work.Operation: androidx.work.Operation$State$SUCCESS SUCCESS>;

        virtualinvoke $r4.<androidx.work.impl.OperationImpl: void markState(androidx.work.Operation$State)>($r3);

     label4:
        goto label6;

     label5:
        $r14 := @caughtexception;

        r17 = $r14;

        $r16 = r0.<androidx.work.impl.utils.EnqueueRunnable: androidx.work.impl.OperationImpl mOperation>;

        $r15 = new androidx.work.Operation$State$FAILURE;

        specialinvoke $r15.<androidx.work.Operation$State$FAILURE: void <init>(java.lang.Throwable)>(r17);

        virtualinvoke $r16.<androidx.work.impl.OperationImpl: void markState(androidx.work.Operation$State)>($r15);

     label6:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
    }

    public androidx.work.Operation getOperation()
    {
        androidx.work.impl.utils.EnqueueRunnable r0;
        androidx.work.impl.OperationImpl $r1;

        r0 := @this: androidx.work.impl.utils.EnqueueRunnable;

        $r1 = r0.<androidx.work.impl.utils.EnqueueRunnable: androidx.work.impl.OperationImpl mOperation>;

        return $r1;
    }

    public boolean addToDatabase()
    {
        androidx.work.impl.utils.EnqueueRunnable r0;
        androidx.work.impl.WorkManagerImpl r1;
        androidx.work.impl.WorkDatabase r2;
        boolean z0, z1;
        java.lang.Throwable r3, $r6;
        androidx.work.impl.WorkContinuationImpl $r4, $r5;

        r0 := @this: androidx.work.impl.utils.EnqueueRunnable;

        $r4 = r0.<androidx.work.impl.utils.EnqueueRunnable: androidx.work.impl.WorkContinuationImpl mWorkContinuation>;

        r1 = virtualinvoke $r4.<androidx.work.impl.WorkContinuationImpl: androidx.work.impl.WorkManagerImpl getWorkManagerImpl()>();

        r2 = virtualinvoke r1.<androidx.work.impl.WorkManagerImpl: androidx.work.impl.WorkDatabase getWorkDatabase()>();

        virtualinvoke r2.<androidx.work.impl.WorkDatabase: void beginTransaction()>();

     label1:
        $r5 = r0.<androidx.work.impl.utils.EnqueueRunnable: androidx.work.impl.WorkContinuationImpl mWorkContinuation>;

        z0 = staticinvoke <androidx.work.impl.utils.EnqueueRunnable: boolean processContinuation(androidx.work.impl.WorkContinuationImpl)>($r5);

        virtualinvoke r2.<androidx.work.impl.WorkDatabase: void setTransactionSuccessful()>();

        z1 = z0;

     label2:
        virtualinvoke r2.<androidx.work.impl.WorkDatabase: void endTransaction()>();

        return z1;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

     label4:
        virtualinvoke r2.<androidx.work.impl.WorkDatabase: void endTransaction()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void scheduleWorkInBackground()
    {
        androidx.work.impl.utils.EnqueueRunnable r0;
        androidx.work.impl.WorkManagerImpl r1;
        androidx.work.impl.WorkContinuationImpl $r2;
        androidx.work.Configuration $r3;
        androidx.work.impl.WorkDatabase $r4;
        java.util.List $r5;

        r0 := @this: androidx.work.impl.utils.EnqueueRunnable;

        $r2 = r0.<androidx.work.impl.utils.EnqueueRunnable: androidx.work.impl.WorkContinuationImpl mWorkContinuation>;

        r1 = virtualinvoke $r2.<androidx.work.impl.WorkContinuationImpl: androidx.work.impl.WorkManagerImpl getWorkManagerImpl()>();

        $r3 = virtualinvoke r1.<androidx.work.impl.WorkManagerImpl: androidx.work.Configuration getConfiguration()>();

        $r4 = virtualinvoke r1.<androidx.work.impl.WorkManagerImpl: androidx.work.impl.WorkDatabase getWorkDatabase()>();

        $r5 = virtualinvoke r1.<androidx.work.impl.WorkManagerImpl: java.util.List getSchedulers()>();

        staticinvoke <androidx.work.impl.Schedulers: void schedule(androidx.work.Configuration,androidx.work.impl.WorkDatabase,java.util.List)>($r3, $r4, $r5);

        return;
    }

    private static boolean processContinuation(androidx.work.impl.WorkContinuationImpl)
    {
        androidx.work.impl.WorkContinuationImpl r0, r3;
        java.util.List r1, $r9;
        java.util.Iterator r2;
        boolean $z0, $z1, $z2, $z3, z4, z5;
        java.lang.Object $r4;
        androidx.work.Logger $r5;
        java.lang.StringBuilder $r6, $r8, $r11, $r12;
        java.lang.String $r7, $r10, $r13;

        r0 := @parameter0: androidx.work.impl.WorkContinuationImpl;

        z4 = 0;

        r1 = virtualinvoke r0.<androidx.work.impl.WorkContinuationImpl: java.util.List getParents()>();

        if r1 == null goto label4;

        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.work.impl.WorkContinuationImpl) $r4;

        $z2 = virtualinvoke r3.<androidx.work.impl.WorkContinuationImpl: boolean isEnqueued()>();

        if $z2 != 0 goto label2;

        $z3 = staticinvoke <androidx.work.impl.utils.EnqueueRunnable: boolean processContinuation(androidx.work.impl.WorkContinuationImpl)>(r3);

        z4 = z4 | $z3;

        goto label3;

     label2:
        $r5 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r7 = <androidx.work.impl.utils.EnqueueRunnable: java.lang.String TAG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Already enqueued work ids (");

        $r9 = virtualinvoke r3.<androidx.work.impl.WorkContinuationImpl: java.util.List getIds()>();

        $r10 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(", ", $r9);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<androidx.work.Logger: void warning(java.lang.String,java.lang.String)>($r7, $r13);

     label3:
        goto label1;

     label4:
        $z0 = staticinvoke <androidx.work.impl.utils.EnqueueRunnable: boolean enqueueContinuation(androidx.work.impl.WorkContinuationImpl)>(r0);

        z5 = z4 | $z0;

        return z5;
    }

    private static boolean enqueueContinuation(androidx.work.impl.WorkContinuationImpl)
    {
        androidx.work.impl.WorkContinuationImpl r0;
        java.util.Set r1;
        boolean z0;
        androidx.work.impl.WorkManagerImpl $r2;
        java.util.List $r3;
        java.lang.String[] $r4, $r6;
        java.lang.Object[] $r5;
        java.lang.String $r7;
        androidx.work.ExistingWorkPolicy $r8;

        r0 := @parameter0: androidx.work.impl.WorkContinuationImpl;

        r1 = staticinvoke <androidx.work.impl.WorkContinuationImpl: java.util.Set prerequisitesFor(androidx.work.impl.WorkContinuationImpl)>(r0);

        $r2 = virtualinvoke r0.<androidx.work.impl.WorkContinuationImpl: androidx.work.impl.WorkManagerImpl getWorkManagerImpl()>();

        $r3 = virtualinvoke r0.<androidx.work.impl.WorkContinuationImpl: java.util.List getWork()>();

        $r4 = newarray (java.lang.String)[0];

        $r5 = interfaceinvoke r1.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (java.lang.String[]) $r5;

        $r7 = virtualinvoke r0.<androidx.work.impl.WorkContinuationImpl: java.lang.String getName()>();

        $r8 = virtualinvoke r0.<androidx.work.impl.WorkContinuationImpl: androidx.work.ExistingWorkPolicy getExistingWorkPolicy()>();

        z0 = staticinvoke <androidx.work.impl.utils.EnqueueRunnable: boolean enqueueWorkWithPrerequisites(androidx.work.impl.WorkManagerImpl,java.util.List,java.lang.String[],java.lang.String,androidx.work.ExistingWorkPolicy)>($r2, $r3, $r6, $r7, $r8);

        virtualinvoke r0.<androidx.work.impl.WorkContinuationImpl: void markEnqueued()>();

        return z0;
    }

    private static boolean enqueueWorkWithPrerequisites(androidx.work.impl.WorkManagerImpl, java.util.List, java.lang.String[], java.lang.String, androidx.work.ExistingWorkPolicy)
    {
        androidx.work.impl.WorkManagerImpl r0;
        java.util.List r1, $r8, r62, r69, r89, r90;
        java.lang.String r2, $r11, $r15, $r17, $r27, $r29, $r40, $r52, $r56, r59, $r67, r84;
        androidx.work.ExistingWorkPolicy r3, $r23, $r25, $r36, $r37;
        long l0;
        androidx.work.impl.WorkDatabase r4;
        androidx.work.impl.model.Dependency r5, r87;
        boolean $z0, $z1, $z2, $z4, $z5, $z6, z7, $z8, z9, z10, z11, z12, $z13, $z14, z15, $z16, z17, $z18, $z19, $z20, $z21, $z22, $z23;
        java.lang.Object $r6, $r26, $r28, $r39, $r41, r64;
        androidx.work.impl.model.WorkSpecDao $r7, $r22, $r46, r68, r75;
        androidx.work.impl.model.WorkSpec $r9, r60, r80;
        androidx.work.impl.model.WorkTagDao $r10;
        java.util.Set $r12;
        androidx.work.impl.model.WorkNameDao $r13;
        androidx.work.impl.model.DependencyDao $r18, r63;
        androidx.work.WorkInfo$State $r19, $r20, $r21, $r30, $r31, $r32, $r33, $r34, $r35, $r42, $r43, $r44, $r45, $r47, $r48, $r49, r61, $r81, $r82;
        androidx.work.impl.utils.CancelWorkRunnable $r38;
        androidx.work.Logger $r50;
        java.lang.StringBuilder $r53, $r54, $r55, r85;
        int $i1, i2, i3, $i4, i5, i6;
        java.lang.String[] r57, r58, r83;
        java.util.Iterator r65, r70, r73, r76, r78;
        androidx.work.impl.model.WorkSpec$IdAndState r66, r71, r74, r77;
        java.lang.Object[] $r72;
        androidx.work.WorkRequest r79;
        java.util.ArrayList r86;
        androidx.work.impl.model.WorkName r88;

        r0 := @parameter0: androidx.work.impl.WorkManagerImpl;

        r1 := @parameter1: java.util.List;

        r57 := @parameter2: java.lang.String[];

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: androidx.work.ExistingWorkPolicy;

        z7 = 0;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r4 = virtualinvoke r0.<androidx.work.impl.WorkManagerImpl: androidx.work.impl.WorkDatabase getWorkDatabase()>();

        if r57 == null goto label01;

        $i1 = lengthof r57;

        if $i1 <= 0 goto label01;

        $z8 = 1;

        goto label02;

     label01:
        $z8 = 0;

     label02:
        z9 = $z8;

        z10 = 1;

        z11 = 0;

        z12 = 0;

        if z9 == 0 goto label09;

        r58 = r57;

        i2 = lengthof r58;

        i3 = 0;

     label03:
        if i3 >= i2 goto label09;

        r59 = r58[i3];

        $r46 = virtualinvoke r4.<androidx.work.impl.WorkDatabase: androidx.work.impl.model.WorkSpecDao workSpecDao()>();

        r60 = interfaceinvoke $r46.<androidx.work.impl.model.WorkSpecDao: androidx.work.impl.model.WorkSpec getWorkSpec(java.lang.String)>(r59);

        if r60 != null goto label04;

        $r50 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r52 = <androidx.work.impl.utils.EnqueueRunnable: java.lang.String TAG>;

        r85 = new java.lang.StringBuilder;

        specialinvoke r85.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Prerequisite ");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r59);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doesn\'t exist; not enqueuing");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r50.<androidx.work.Logger: void error(java.lang.String,java.lang.String)>($r52, $r56);

        return 0;

     label04:
        r61 = r60.<androidx.work.impl.model.WorkSpec: androidx.work.WorkInfo$State state>;

        $z6 = z10;

        $r47 = <androidx.work.WorkInfo$State: androidx.work.WorkInfo$State SUCCEEDED>;

        if r61 != $r47 goto label05;

        $z13 = 1;

        goto label06;

     label05:
        $z13 = 0;

     label06:
        z10 = $z6 & $z13;

        $r48 = <androidx.work.WorkInfo$State: androidx.work.WorkInfo$State FAILED>;

        if r61 != $r48 goto label07;

        z11 = 1;

        goto label08;

     label07:
        $r49 = <androidx.work.WorkInfo$State: androidx.work.WorkInfo$State CANCELLED>;

        if r61 != $r49 goto label08;

        z12 = 1;

     label08:
        i3 = i3 + 1;

        goto label03;

     label09:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 != 0 goto label10;

        $z14 = 1;

        goto label11;

     label10:
        $z14 = 0;

     label11:
        z15 = $z14;

        if z15 == 0 goto label12;

        if z9 != 0 goto label12;

        $z16 = 1;

        goto label13;

     label12:
        $z16 = 0;

     label13:
        z17 = $z16;

        if z17 == 0 goto label34;

        $r22 = virtualinvoke r4.<androidx.work.impl.WorkDatabase: androidx.work.impl.model.WorkSpecDao workSpecDao()>();

        r62 = interfaceinvoke $r22.<androidx.work.impl.model.WorkSpecDao: java.util.List getWorkSpecIdAndStatesForName(java.lang.String)>(r2);

        $z1 = interfaceinvoke r62.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label34;

        $r23 = <androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy APPEND>;

        if r3 == $r23 goto label14;

        $r36 = <androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy APPEND_OR_REPLACE>;

        if r3 != $r36 goto label28;

     label14:
        r63 = virtualinvoke r4.<androidx.work.impl.WorkDatabase: androidx.work.impl.model.DependencyDao dependencyDao()>();

        r86 = new java.util.ArrayList;

        specialinvoke r86.<java.util.ArrayList: void <init>()>();

        r64 = r86;

        r65 = interfaceinvoke r62.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $z18 = interfaceinvoke r65.<java.util.Iterator: boolean hasNext()>();

        if $z18 == 0 goto label21;

        $r28 = interfaceinvoke r65.<java.util.Iterator: java.lang.Object next()>();

        r66 = (androidx.work.impl.model.WorkSpec$IdAndState) $r28;

        $r29 = r66.<androidx.work.impl.model.WorkSpec$IdAndState: java.lang.String id>;

        $z2 = interfaceinvoke r63.<androidx.work.impl.model.DependencyDao: boolean hasDependents(java.lang.String)>($r29);

        if $z2 != 0 goto label20;

        $z4 = z10;

        $r31 = r66.<androidx.work.impl.model.WorkSpec$IdAndState: androidx.work.WorkInfo$State state>;

        $r30 = <androidx.work.WorkInfo$State: androidx.work.WorkInfo$State SUCCEEDED>;

        if $r31 != $r30 goto label16;

        $z19 = 1;

        goto label17;

     label16:
        $z19 = 0;

     label17:
        z10 = $z4 & $z19;

        $r33 = r66.<androidx.work.impl.model.WorkSpec$IdAndState: androidx.work.WorkInfo$State state>;

        $r32 = <androidx.work.WorkInfo$State: androidx.work.WorkInfo$State FAILED>;

        if $r33 != $r32 goto label18;

        z11 = 1;

        goto label19;

     label18:
        $r35 = r66.<androidx.work.impl.model.WorkSpec$IdAndState: androidx.work.WorkInfo$State state>;

        $r34 = <androidx.work.WorkInfo$State: androidx.work.WorkInfo$State CANCELLED>;

        if $r35 != $r34 goto label19;

        z12 = 1;

     label19:
        $r67 = r66.<androidx.work.impl.model.WorkSpec$IdAndState: java.lang.String id>;

        r89 = (java.util.List) r64;

        interfaceinvoke r89.<java.util.List: boolean add(java.lang.Object)>($r67);

     label20:
        goto label15;

     label21:
        $r25 = <androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy APPEND_OR_REPLACE>;

        if r3 != $r25 goto label25;

        if z12 != 0 goto label22;

        if z11 == 0 goto label25;

     label22:
        r68 = virtualinvoke r4.<androidx.work.impl.WorkDatabase: androidx.work.impl.model.WorkSpecDao workSpecDao()>();

        r69 = interfaceinvoke r68.<androidx.work.impl.model.WorkSpecDao: java.util.List getWorkSpecIdAndStatesForName(java.lang.String)>(r2);

        r70 = interfaceinvoke r69.<java.util.List: java.util.Iterator iterator()>();

     label23:
        $z20 = interfaceinvoke r70.<java.util.Iterator: boolean hasNext()>();

        if $z20 == 0 goto label24;

        $r26 = interfaceinvoke r70.<java.util.Iterator: java.lang.Object next()>();

        r71 = (androidx.work.impl.model.WorkSpec$IdAndState) $r26;

        $r27 = r71.<androidx.work.impl.model.WorkSpec$IdAndState: java.lang.String id>;

        interfaceinvoke r68.<androidx.work.impl.model.WorkSpecDao: void delete(java.lang.String)>($r27);

        goto label23;

     label24:
        r64 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        z12 = 0;

        z11 = 0;

     label25:
        r90 = (java.util.List) r64;

        $r72 = interfaceinvoke r90.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r57);

        r57 = (java.lang.String[]) $r72;

        $i4 = lengthof r57;

        if $i4 <= 0 goto label26;

        $z21 = 1;

        goto label27;

     label26:
        $z21 = 0;

     label27:
        z9 = $z21;

        goto label34;

     label28:
        $r37 = <androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy KEEP>;

        if r3 != $r37 goto label32;

        r73 = interfaceinvoke r62.<java.util.List: java.util.Iterator iterator()>();

     label29:
        $z5 = interfaceinvoke r73.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label32;

        $r41 = interfaceinvoke r73.<java.util.Iterator: java.lang.Object next()>();

        r74 = (androidx.work.impl.model.WorkSpec$IdAndState) $r41;

        $r43 = r74.<androidx.work.impl.model.WorkSpec$IdAndState: androidx.work.WorkInfo$State state>;

        $r42 = <androidx.work.WorkInfo$State: androidx.work.WorkInfo$State ENQUEUED>;

        if $r43 == $r42 goto label30;

        $r45 = r74.<androidx.work.impl.model.WorkSpec$IdAndState: androidx.work.WorkInfo$State state>;

        $r44 = <androidx.work.WorkInfo$State: androidx.work.WorkInfo$State RUNNING>;

        if $r45 != $r44 goto label31;

     label30:
        return 0;

     label31:
        goto label29;

     label32:
        $r38 = staticinvoke <androidx.work.impl.utils.CancelWorkRunnable: androidx.work.impl.utils.CancelWorkRunnable forName(java.lang.String,androidx.work.impl.WorkManagerImpl,boolean)>(r2, r0, 0);

        virtualinvoke $r38.<androidx.work.impl.utils.CancelWorkRunnable: void run()>();

        z7 = 1;

        r75 = virtualinvoke r4.<androidx.work.impl.WorkDatabase: androidx.work.impl.model.WorkSpecDao workSpecDao()>();

        r76 = interfaceinvoke r62.<java.util.List: java.util.Iterator iterator()>();

     label33:
        $z22 = interfaceinvoke r76.<java.util.Iterator: boolean hasNext()>();

        if $z22 == 0 goto label34;

        $r39 = interfaceinvoke r76.<java.util.Iterator: java.lang.Object next()>();

        r77 = (androidx.work.impl.model.WorkSpec$IdAndState) $r39;

        $r40 = r77.<androidx.work.impl.model.WorkSpec$IdAndState: java.lang.String id>;

        interfaceinvoke r75.<androidx.work.impl.model.WorkSpecDao: void delete(java.lang.String)>($r40);

        goto label33;

     label34:
        r78 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label35:
        $z23 = interfaceinvoke r78.<java.util.Iterator: boolean hasNext()>();

        if $z23 == 0 goto label44;

        $r6 = interfaceinvoke r78.<java.util.Iterator: java.lang.Object next()>();

        r79 = (androidx.work.WorkRequest) $r6;

        r80 = virtualinvoke r79.<androidx.work.WorkRequest: androidx.work.impl.model.WorkSpec getWorkSpec()>();

        if z9 == 0 goto label38;

        if z10 != 0 goto label38;

        if z11 == 0 goto label36;

        $r21 = <androidx.work.WorkInfo$State: androidx.work.WorkInfo$State FAILED>;

        r80.<androidx.work.impl.model.WorkSpec: androidx.work.WorkInfo$State state> = $r21;

        goto label39;

     label36:
        if z12 == 0 goto label37;

        $r20 = <androidx.work.WorkInfo$State: androidx.work.WorkInfo$State CANCELLED>;

        r80.<androidx.work.impl.model.WorkSpec: androidx.work.WorkInfo$State state> = $r20;

        goto label39;

     label37:
        $r19 = <androidx.work.WorkInfo$State: androidx.work.WorkInfo$State BLOCKED>;

        r80.<androidx.work.impl.model.WorkSpec: androidx.work.WorkInfo$State state> = $r19;

        goto label39;

     label38:
        r80.<androidx.work.impl.model.WorkSpec: long lastEnqueueTime> = l0;

     label39:
        $r81 = r80.<androidx.work.impl.model.WorkSpec: androidx.work.WorkInfo$State state>;

        $r82 = <androidx.work.WorkInfo$State: androidx.work.WorkInfo$State ENQUEUED>;

        if $r81 != $r82 goto label40;

        z7 = 1;

     label40:
        $r7 = virtualinvoke r4.<androidx.work.impl.WorkDatabase: androidx.work.impl.model.WorkSpecDao workSpecDao()>();

        $r8 = virtualinvoke r0.<androidx.work.impl.WorkManagerImpl: java.util.List getSchedulers()>();

        $r9 = staticinvoke <androidx.work.impl.utils.EnqueueUtilsKt: androidx.work.impl.model.WorkSpec wrapInConstraintTrackingWorkerIfNeeded(java.util.List,androidx.work.impl.model.WorkSpec)>($r8, r80);

        interfaceinvoke $r7.<androidx.work.impl.model.WorkSpecDao: void insertWorkSpec(androidx.work.impl.model.WorkSpec)>($r9);

        if z9 == 0 goto label42;

        r83 = r57;

        i5 = lengthof r83;

        i6 = 0;

     label41:
        if i6 >= i5 goto label42;

        r84 = r83[i6];

        r87 = new androidx.work.impl.model.Dependency;

        $r17 = virtualinvoke r79.<androidx.work.WorkRequest: java.lang.String getStringId()>();

        specialinvoke r87.<androidx.work.impl.model.Dependency: void <init>(java.lang.String,java.lang.String)>($r17, r84);

        r5 = r87;

        $r18 = virtualinvoke r4.<androidx.work.impl.WorkDatabase: androidx.work.impl.model.DependencyDao dependencyDao()>();

        interfaceinvoke $r18.<androidx.work.impl.model.DependencyDao: void insertDependency(androidx.work.impl.model.Dependency)>(r5);

        i6 = i6 + 1;

        goto label41;

     label42:
        $r10 = virtualinvoke r4.<androidx.work.impl.WorkDatabase: androidx.work.impl.model.WorkTagDao workTagDao()>();

        $r11 = virtualinvoke r79.<androidx.work.WorkRequest: java.lang.String getStringId()>();

        $r12 = virtualinvoke r79.<androidx.work.WorkRequest: java.util.Set getTags()>();

        interfaceinvoke $r10.<androidx.work.impl.model.WorkTagDao: void insertTags(java.lang.String,java.util.Set)>($r11, $r12);

        if z15 == 0 goto label43;

        $r13 = virtualinvoke r4.<androidx.work.impl.WorkDatabase: androidx.work.impl.model.WorkNameDao workNameDao()>();

        r88 = new androidx.work.impl.model.WorkName;

        $r15 = virtualinvoke r79.<androidx.work.WorkRequest: java.lang.String getStringId()>();

        specialinvoke r88.<androidx.work.impl.model.WorkName: void <init>(java.lang.String,java.lang.String)>(r2, $r15);

        interfaceinvoke $r13.<androidx.work.impl.model.WorkNameDao: void insert(androidx.work.impl.model.WorkName)>(r88);

     label43:
        goto label35;

     label44:
        return z7;
    }

    static void <clinit>()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <androidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)>("EnqueueRunnable");

        <androidx.work.impl.utils.EnqueueRunnable: java.lang.String TAG> = $r0;

        return;
    }

