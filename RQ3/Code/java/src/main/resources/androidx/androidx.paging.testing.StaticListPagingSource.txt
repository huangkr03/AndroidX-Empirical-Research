androidx.paging.testing.StaticListPagingSource
<androidx.paging.testing.StaticListPagingSource: java.util.List dataList>
    public void <init>(java.util.List)
    {
        androidx.paging.testing.StaticListPagingSource r0;
        java.util.List r1;

        r0 := @this: androidx.paging.testing.StaticListPagingSource;

        r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "dataList");

        specialinvoke r0.<androidx.paging.PagingSource: void <init>()>();

        r0.<androidx.paging.testing.StaticListPagingSource: java.util.List dataList> = r1;

        return;
    }

    public java.lang.Object load(androidx.paging.PagingSource$LoadParams, kotlin.coroutines.Continuation)
    {
        androidx.paging.testing.StaticListPagingSource r0;
        androidx.paging.PagingSource$LoadParams r1;
        kotlin.coroutines.Continuation $r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.util.List r3, $r7, $r8, $r15;
        java.lang.Object $r4;
        java.lang.Integer $r5, $r9, $r12, $r14;
        kotlin.ranges.IntRange $r6;
        boolean $z0, $z1;
        androidx.paging.PagingSource$LoadResult$Page $r10;

        r0 := @this: androidx.paging.testing.StaticListPagingSource;

        r1 := @parameter0: androidx.paging.PagingSource$LoadParams;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = virtualinvoke r1.<androidx.paging.PagingSource$LoadParams: java.lang.Object getKey()>();

        $r5 = (java.lang.Integer) $r4;

        if $r5 == null goto label1;

        $i6 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        goto label2;

     label1:
        $i6 = 0;

     label2:
        i0 = $i6;

        i1 = specialinvoke r0.<androidx.paging.testing.StaticListPagingSource: int computeIndexStart(androidx.paging.PagingSource$LoadParams,int)>(r1, i0);

        i2 = specialinvoke r0.<androidx.paging.testing.StaticListPagingSource: int computeIndexEnd(androidx.paging.PagingSource$LoadParams,int,int)>(r1, i0, i1);

        $r7 = r0.<androidx.paging.testing.StaticListPagingSource: java.util.List dataList>;

        $r6 = new kotlin.ranges.IntRange;

        specialinvoke $r6.<kotlin.ranges.IntRange: void <init>(int,int)>(i1, i2);

        r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List slice(java.util.List,kotlin.ranges.IntRange)>($r7, $r6);

        $r10 = new androidx.paging.PagingSource$LoadResult$Page;

        if i1 <= 0 goto label3;

        $z1 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label4;

     label3:
        $r12 = null;

        goto label5;

     label4:
        $i5 = i1 - 1;

        $r9 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Integer boxInt(int)>($i5);

        $r12 = $r9;

     label5:
        $r8 = r0.<androidx.paging.testing.StaticListPagingSource: java.util.List dataList>;

        $i3 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r8);

        if i2 >= $i3 goto label6;

        $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label7;

     label6:
        $r14 = null;

        goto label8;

     label7:
        $i4 = i2 + 1;

        $r14 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Integer boxInt(int)>($i4);

     label8:
        $r15 = r0.<androidx.paging.testing.StaticListPagingSource: java.util.List dataList>;

        $i7 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r15);

        $i8 = $i7 - i2;

        specialinvoke $r10.<androidx.paging.PagingSource$LoadResult$Page: void <init>(java.util.List,java.lang.Object,java.lang.Object,int,int)>(r3, $r12, $r14, i1, $i8);

        return $r10;
    }

    private final int computeIndexStart(androidx.paging.PagingSource$LoadParams, int)
    {
        androidx.paging.testing.StaticListPagingSource r0;
        androidx.paging.PagingSource$LoadParams r1, r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0, $z1, $z2;
        kotlin.NoWhenBranchMatchedException $r3;
        java.util.List $r4, $r5;

        r0 := @this: androidx.paging.testing.StaticListPagingSource;

        r1 := @parameter0: androidx.paging.PagingSource$LoadParams;

        i0 := @parameter1: int;

        r2 = r1;

        $z0 = r2 instanceof androidx.paging.PagingSource$LoadParams$Prepend;

        if $z0 == 0 goto label1;

        $i4 = virtualinvoke r1.<androidx.paging.PagingSource$LoadParams: int getLoadSize()>();

        $i5 = i0 - $i4;

        $i6 = $i5 + 1;

        goto label5;

     label1:
        $z1 = r2 instanceof androidx.paging.PagingSource$LoadParams$Append;

        if $z1 == 0 goto label2;

        $i6 = i0;

        goto label5;

     label2:
        $z2 = r2 instanceof androidx.paging.PagingSource$LoadParams$Refresh;

        if $z2 == 0 goto label4;

        $r4 = r0.<androidx.paging.testing.StaticListPagingSource: java.util.List dataList>;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r4);

        if i0 < $i1 goto label3;

        $r5 = r0.<androidx.paging.testing.StaticListPagingSource: java.util.List dataList>;

        $i2 = interfaceinvoke $r5.<java.util.List: int size()>();

        $i3 = virtualinvoke r1.<androidx.paging.PagingSource$LoadParams: int getLoadSize()>();

        $i6 = $i2 - $i3;

        goto label5;

     label3:
        $i6 = i0;

        goto label5;

     label4:
        $r3 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r3.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r3;

     label5:
        $i7 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i6, 0);

        return $i7;
    }

    private final int computeIndexEnd(androidx.paging.PagingSource$LoadParams, int, int)
    {
        androidx.paging.testing.StaticListPagingSource r0;
        androidx.paging.PagingSource$LoadParams r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        boolean $z0;
        java.util.List $r2;

        r0 := @this: androidx.paging.testing.StaticListPagingSource;

        r1 := @parameter0: androidx.paging.PagingSource$LoadParams;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i3 = virtualinvoke r1.<androidx.paging.PagingSource$LoadParams: int getLoadSize()>();

        $i4 = i1 + $i3;

        i2 = $i4 - 1;

        $z0 = r1 instanceof androidx.paging.PagingSource$LoadParams$Prepend;

        if $z0 == 0 goto label1;

        $i6 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtMost(int,int)>(i2, i0);

        goto label2;

     label1:
        $r2 = r0.<androidx.paging.testing.StaticListPagingSource: java.util.List dataList>;

        $i5 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r2);

        $i6 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtMost(int,int)>(i2, $i5);

     label2:
        return $i6;
    }

    public java.lang.Integer getRefreshKey(androidx.paging.PagingState)
    {
        androidx.paging.testing.StaticListPagingSource r0;
        androidx.paging.PagingState r1;
        java.lang.Integer r2, $r4;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.paging.PagingConfig $r3;

        r0 := @this: androidx.paging.testing.StaticListPagingSource;

        r1 := @parameter0: androidx.paging.PagingState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "state");

        r2 = virtualinvoke r1.<androidx.paging.PagingState: java.lang.Integer getAnchorPosition()>();

        if r2 == null goto label1;

        $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        $r3 = virtualinvoke r1.<androidx.paging.PagingState: androidx.paging.PagingConfig getConfig()>();

        $i1 = $r3.<androidx.paging.PagingConfig: int initialLoadSize>;

        $i2 = $i1 / 2;

        $i3 = $i0 - $i2;

        $i4 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i3, 0);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        goto label2;

     label1:
        $r4 = null;

     label2:
        return $r4;
    }

    public boolean getJumpingSupported()
    {
        androidx.paging.testing.StaticListPagingSource r0;

        r0 := @this: androidx.paging.testing.StaticListPagingSource;

        return 1;
    }

    public volatile java.lang.Object getRefreshKey(androidx.paging.PagingState)
    {
        androidx.paging.testing.StaticListPagingSource r0;
        androidx.paging.PagingState r1;
        java.lang.Integer $r2;

        r0 := @this: androidx.paging.testing.StaticListPagingSource;

        r1 := @parameter0: androidx.paging.PagingState;

        $r2 = virtualinvoke r0.<androidx.paging.testing.StaticListPagingSource: java.lang.Integer getRefreshKey(androidx.paging.PagingState)>(r1);

        return $r2;
    }

