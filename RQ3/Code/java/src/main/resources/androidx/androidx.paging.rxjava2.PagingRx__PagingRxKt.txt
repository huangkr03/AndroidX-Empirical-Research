androidx.paging.rxjava2.PagingRx__PagingRxKt
    public static final io.reactivex.Observable getObservable(androidx.paging.Pager)
    {
        androidx.paging.Pager $r0;
        kotlinx.coroutines.flow.Flow $r1, $r2;
        io.reactivex.Observable $r3;

        $r0 := @parameter0: androidx.paging.Pager;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = virtualinvoke $r0.<androidx.paging.Pager: kotlinx.coroutines.flow.Flow getFlow()>();

        $r2 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow conflate(kotlinx.coroutines.flow.Flow)>($r1);

        $r3 = staticinvoke <kotlinx.coroutines.rx2.RxConvertKt: io.reactivex.Observable asObservable$default(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,int,java.lang.Object)>($r2, null, 1, null);

        return $r3;
    }

    public static final io.reactivex.Flowable getFlowable(androidx.paging.Pager)
    {
        androidx.paging.Pager $r0;
        kotlinx.coroutines.flow.Flow $r1, $r2;
        io.reactivex.Flowable $r3;

        $r0 := @parameter0: androidx.paging.Pager;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = virtualinvoke $r0.<androidx.paging.Pager: kotlinx.coroutines.flow.Flow getFlow()>();

        $r2 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow conflate(kotlinx.coroutines.flow.Flow)>($r1);

        $r3 = staticinvoke <kotlinx.coroutines.rx2.RxConvertKt: io.reactivex.Flowable asFlowable$default(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,int,java.lang.Object)>($r2, null, 1, null);

        return $r3;
    }

    public static final io.reactivex.Observable cachedIn(io.reactivex.Observable, kotlinx.coroutines.CoroutineScope)
    {
        io.reactivex.Observable $r0, $r7;
        kotlinx.coroutines.CoroutineScope r1;
        io.reactivex.Flowable r2;
        io.reactivex.BackpressureStrategy $r3;
        org.reactivestreams.Publisher $r4;
        kotlinx.coroutines.flow.Flow $r5, $r6;

        $r0 := @parameter0: io.reactivex.Observable;

        r1 := @parameter1: kotlinx.coroutines.CoroutineScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "scope");

        $r3 = <io.reactivex.BackpressureStrategy: io.reactivex.BackpressureStrategy LATEST>;

        r2 = virtualinvoke $r0.<io.reactivex.Observable: io.reactivex.Flowable toFlowable(io.reactivex.BackpressureStrategy)>($r3);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "toFlowable(BackpressureStrategy.LATEST)");

        $r4 = (org.reactivestreams.Publisher) r2;

        $r5 = staticinvoke <kotlinx.coroutines.reactive.ReactiveFlowKt: kotlinx.coroutines.flow.Flow asFlow(org.reactivestreams.Publisher)>($r4);

        $r6 = staticinvoke <androidx.paging.CachedPagingDataKt: kotlinx.coroutines.flow.Flow cachedIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope)>($r5, r1);

        $r7 = staticinvoke <kotlinx.coroutines.rx2.RxConvertKt: io.reactivex.Observable asObservable$default(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,int,java.lang.Object)>($r6, null, 1, null);

        return $r7;
    }

    public static final io.reactivex.Flowable cachedIn(io.reactivex.Flowable, kotlinx.coroutines.CoroutineScope)
    {
        io.reactivex.Flowable $r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        org.reactivestreams.Publisher $r2;
        kotlinx.coroutines.flow.Flow $r3, $r4;

        $r0 := @parameter0: io.reactivex.Flowable;

        r1 := @parameter1: kotlinx.coroutines.CoroutineScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "scope");

        $r2 = (org.reactivestreams.Publisher) $r0;

        $r3 = staticinvoke <kotlinx.coroutines.reactive.ReactiveFlowKt: kotlinx.coroutines.flow.Flow asFlow(org.reactivestreams.Publisher)>($r2);

        $r4 = staticinvoke <androidx.paging.CachedPagingDataKt: kotlinx.coroutines.flow.Flow cachedIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope)>($r3, r1);

        $r5 = staticinvoke <kotlinx.coroutines.rx2.RxConvertKt: io.reactivex.Flowable asFlowable$default(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,int,java.lang.Object)>($r4, null, 1, null);

        return $r5;
    }

