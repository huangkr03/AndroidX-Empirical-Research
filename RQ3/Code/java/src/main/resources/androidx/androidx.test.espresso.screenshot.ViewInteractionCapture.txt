androidx.test.espresso.screenshot.ViewInteractionCapture
    public static final android.graphics.Bitmap captureToBitmap(androidx.test.espresso.ViewInteraction)
    {
        androidx.test.espresso.ViewAction[] r0;
        androidx.test.espresso.screenshot.ImageCaptureViewAction r1, r16;
        androidx.test.espresso.IdlingPolicy $r3, $r4;
        long $l0;
        java.util.concurrent.TimeUnit $r5;
        android.graphics.Bitmap $r6;
        java.lang.Throwable $r7, $r8, $r9, r21, r23, r25;
        androidx.test.espresso.ViewInteraction $r10;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.SettableFuture r11;
        androidx.test.espresso.screenshot.CaptureImageException r12, r13, r14, r17, r18, r19;
        java.lang.Object $r15;
        java.lang.Exception r20, r22, r24;

        $r10 := @parameter0: androidx.test.espresso.ViewInteraction;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r10, "<this>");

        r11 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.util.concurrent.SettableFuture: androidx.test.espresso.core.internal.deps.guava.util.concurrent.SettableFuture create()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r11, "create<Bitmap>()");

        r0 = newarray (androidx.test.espresso.ViewAction)[1];

        r16 = new androidx.test.espresso.screenshot.ImageCaptureViewAction;

        r1 = r16;

        specialinvoke r16.<androidx.test.espresso.screenshot.ImageCaptureViewAction: void <init>(androidx.test.espresso.core.internal.deps.guava.util.concurrent.SettableFuture)>(r11);

        r0[0] = r1;

        virtualinvoke $r10.<androidx.test.espresso.ViewInteraction: androidx.test.espresso.ViewInteraction perform(androidx.test.espresso.ViewAction[])>(r0);

        goto label4;

     label1:
        $r7 := @caughtexception;

        r17 = new androidx.test.espresso.screenshot.CaptureImageException;

        r12 = r17;

        r20 = (java.lang.Exception) $r7;

        specialinvoke r17.<androidx.test.espresso.screenshot.CaptureImageException: void <init>(java.lang.String,java.lang.Exception)>("failed to capture image", r20);

        r21 = (java.lang.Throwable) r12;

        throw r21;

     label2:
        $r9 := @caughtexception;

        r18 = new androidx.test.espresso.screenshot.CaptureImageException;

        r13 = r18;

        r22 = (java.lang.Exception) $r9;

        specialinvoke r18.<androidx.test.espresso.screenshot.CaptureImageException: void <init>(java.lang.String,java.lang.Exception)>("failed to capture image", r22);

        r23 = (java.lang.Throwable) r13;

        throw r23;

     label3:
        $r8 := @caughtexception;

        r19 = new androidx.test.espresso.screenshot.CaptureImageException;

        r14 = r19;

        r24 = (java.lang.Exception) $r8;

        specialinvoke r19.<androidx.test.espresso.screenshot.CaptureImageException: void <init>(java.lang.String,java.lang.Exception)>("failed to capture image", r24);

        r25 = (java.lang.Throwable) r14;

        throw r25;

     label4:
        $r3 = staticinvoke <androidx.test.espresso.IdlingPolicies: androidx.test.espresso.IdlingPolicy getMasterIdlingPolicy()>();

        $l0 = virtualinvoke $r3.<androidx.test.espresso.IdlingPolicy: long getIdleTimeout()>();

        $r4 = staticinvoke <androidx.test.espresso.IdlingPolicies: androidx.test.espresso.IdlingPolicy getMasterIdlingPolicy()>();

        $r5 = virtualinvoke $r4.<androidx.test.espresso.IdlingPolicy: java.util.concurrent.TimeUnit getIdleTimeoutUnit()>();

        $r15 = virtualinvoke r11.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.SettableFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)>($l0, $r5);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r15, "bitmapFuture[\n      Idli\u2026Policy().idleTimeoutUnit]");

        $r6 = (android.graphics.Bitmap) $r15;

        return $r6;

     label5:
        nop;

        catch java.lang.InterruptedException from label4 to label5 with label2;
        catch java.util.concurrent.ExecutionException from label4 to label5 with label3;
        catch java.util.concurrent.TimeoutException from label4 to label5 with label1;
    }

