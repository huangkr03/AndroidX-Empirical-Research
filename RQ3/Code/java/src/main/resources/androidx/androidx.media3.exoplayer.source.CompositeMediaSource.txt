androidx.media3.exoplayer.source.CompositeMediaSource
<androidx.media3.exoplayer.source.CompositeMediaSource: java.util.HashMap childSources>
<androidx.media3.exoplayer.source.CompositeMediaSource: android.os.Handler eventHandler>
<androidx.media3.exoplayer.source.CompositeMediaSource: androidx.media3.datasource.TransferListener mediaTransferListener>
    protected void <init>()
    {
        androidx.media3.exoplayer.source.CompositeMediaSource r0;
        java.util.HashMap $r1;

        r0 := @this: androidx.media3.exoplayer.source.CompositeMediaSource;

        specialinvoke r0.<androidx.media3.exoplayer.source.BaseMediaSource: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<androidx.media3.exoplayer.source.CompositeMediaSource: java.util.HashMap childSources> = $r1;

        return;
    }

    protected void prepareSourceInternal(androidx.media3.datasource.TransferListener)
    {
        androidx.media3.exoplayer.source.CompositeMediaSource r0;
        androidx.media3.datasource.TransferListener r1;
        android.os.Handler $r2;

        r0 := @this: androidx.media3.exoplayer.source.CompositeMediaSource;

        r1 := @parameter0: androidx.media3.datasource.TransferListener;

        r0.<androidx.media3.exoplayer.source.CompositeMediaSource: androidx.media3.datasource.TransferListener mediaTransferListener> = r1;

        $r2 = staticinvoke <androidx.media3.common.util.Util: android.os.Handler createHandlerForCurrentLooper()>();

        r0.<androidx.media3.exoplayer.source.CompositeMediaSource: android.os.Handler eventHandler> = $r2;

        return;
    }

    public void maybeThrowSourceInfoRefreshError() throws java.io.IOException
    {
        androidx.media3.exoplayer.source.CompositeMediaSource r0;
        java.util.Iterator r1;
        androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener r2;
        java.util.HashMap $r3;
        java.util.Collection $r4;
        boolean $z0;
        java.lang.Object $r5;
        androidx.media3.exoplayer.source.MediaSource $r6;

        r0 := @this: androidx.media3.exoplayer.source.CompositeMediaSource;

        $r3 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource: java.util.HashMap childSources>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener) $r5;

        $r6 = r2.<androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener: androidx.media3.exoplayer.source.MediaSource mediaSource>;

        interfaceinvoke $r6.<androidx.media3.exoplayer.source.MediaSource: void maybeThrowSourceInfoRefreshError()>();

        goto label1;

     label2:
        return;
    }

    protected void enableInternal()
    {
        androidx.media3.exoplayer.source.CompositeMediaSource r0;
        java.util.Iterator r1;
        androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener r2;
        java.util.HashMap $r3;
        java.util.Collection $r4;
        boolean $z0;
        java.lang.Object $r5;
        androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller $r6;
        androidx.media3.exoplayer.source.MediaSource $r7;

        r0 := @this: androidx.media3.exoplayer.source.CompositeMediaSource;

        $r3 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource: java.util.HashMap childSources>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener) $r5;

        $r7 = r2.<androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener: androidx.media3.exoplayer.source.MediaSource mediaSource>;

        $r6 = r2.<androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener: androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller caller>;

        interfaceinvoke $r7.<androidx.media3.exoplayer.source.MediaSource: void enable(androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller)>($r6);

        goto label1;

     label2:
        return;
    }

    protected void disableInternal()
    {
        androidx.media3.exoplayer.source.CompositeMediaSource r0;
        java.util.Iterator r1;
        androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener r2;
        java.util.HashMap $r3;
        java.util.Collection $r4;
        boolean $z0;
        java.lang.Object $r5;
        androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller $r6;
        androidx.media3.exoplayer.source.MediaSource $r7;

        r0 := @this: androidx.media3.exoplayer.source.CompositeMediaSource;

        $r3 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource: java.util.HashMap childSources>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener) $r5;

        $r7 = r2.<androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener: androidx.media3.exoplayer.source.MediaSource mediaSource>;

        $r6 = r2.<androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener: androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller caller>;

        interfaceinvoke $r7.<androidx.media3.exoplayer.source.MediaSource: void disable(androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller)>($r6);

        goto label1;

     label2:
        return;
    }

    protected void releaseSourceInternal()
    {
        androidx.media3.exoplayer.source.CompositeMediaSource r0;
        java.util.Iterator r1;
        androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener r2;
        java.util.HashMap $r3, $r5;
        java.util.Collection $r4;
        boolean $z0;
        java.lang.Object $r6;
        androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller $r7;
        androidx.media3.exoplayer.source.MediaSource $r8, $r10, $r12;
        androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener $r9, $r11;

        r0 := @this: androidx.media3.exoplayer.source.CompositeMediaSource;

        $r3 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource: java.util.HashMap childSources>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener) $r6;

        $r8 = r2.<androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener: androidx.media3.exoplayer.source.MediaSource mediaSource>;

        $r7 = r2.<androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener: androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller caller>;

        interfaceinvoke $r8.<androidx.media3.exoplayer.source.MediaSource: void releaseSource(androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller)>($r7);

        $r10 = r2.<androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener: androidx.media3.exoplayer.source.MediaSource mediaSource>;

        $r9 = r2.<androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener: androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener eventListener>;

        interfaceinvoke $r10.<androidx.media3.exoplayer.source.MediaSource: void removeEventListener(androidx.media3.exoplayer.source.MediaSourceEventListener)>($r9);

        $r12 = r2.<androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener: androidx.media3.exoplayer.source.MediaSource mediaSource>;

        $r11 = r2.<androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener: androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener eventListener>;

        interfaceinvoke $r12.<androidx.media3.exoplayer.source.MediaSource: void removeDrmEventListener(androidx.media3.exoplayer.drm.DrmSessionEventListener)>($r11);

        goto label1;

     label2:
        $r5 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource: java.util.HashMap childSources>;

        virtualinvoke $r5.<java.util.HashMap: void clear()>();

        return;
    }

<androidx.media3.exoplayer.source.CompositeMediaSource: void onChildSourceInfoRefreshed(java.lang.Object,androidx.media3.exoplayer.source.MediaSource,androidx.media3.common.Timeline)>
    protected final void prepareChildSource(java.lang.Object, androidx.media3.exoplayer.source.MediaSource)
    {
        androidx.media3.exoplayer.source.CompositeMediaSource r0;
        java.lang.Object r1, $r11, $r14;
        androidx.media3.exoplayer.source.MediaSource r2;
        androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller r3;
        androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener r4, $r6;
        java.util.HashMap $r5, $r8;
        boolean $z0, $z1, $z2;
        androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener $r7;
        android.os.Handler $r10, $r12, $r13, $r15;
        androidx.media3.datasource.TransferListener $r16;
        androidx.media3.exoplayer.analytics.PlayerId $r17;

        r0 := @this: androidx.media3.exoplayer.source.CompositeMediaSource;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: androidx.media3.exoplayer.source.MediaSource;

        $r5 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource: java.util.HashMap childSources>;

        $z0 = virtualinvoke $r5.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z2);

        r3 = dynamicinvoke "onSourceInfoRefreshed" <androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller (androidx.media3.exoplayer.source.CompositeMediaSource,java.lang.Object)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.exoplayer.source.MediaSource,androidx.media3.common.Timeline), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.exoplayer.source.CompositeMediaSource: void lambda$prepareChildSource$0(java.lang.Object,androidx.media3.exoplayer.source.MediaSource,androidx.media3.common.Timeline)>, methodtype: void __METHODTYPE__(androidx.media3.exoplayer.source.MediaSource,androidx.media3.common.Timeline));

        $r6 = new androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener;

        specialinvoke $r6.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: void <init>(androidx.media3.exoplayer.source.CompositeMediaSource,java.lang.Object)>(r0, r1);

        r4 = $r6;

        $r8 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource: java.util.HashMap childSources>;

        $r7 = new androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener;

        specialinvoke $r7.<androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener: void <init>(androidx.media3.exoplayer.source.MediaSource,androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller,androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener)>(r2, r3, r4);

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r7);

        $r10 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource: android.os.Handler eventHandler>;

        $r11 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r10);

        $r12 = (android.os.Handler) $r11;

        interfaceinvoke r2.<androidx.media3.exoplayer.source.MediaSource: void addEventListener(android.os.Handler,androidx.media3.exoplayer.source.MediaSourceEventListener)>($r12, r4);

        $r13 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource: android.os.Handler eventHandler>;

        $r14 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r13);

        $r15 = (android.os.Handler) $r14;

        interfaceinvoke r2.<androidx.media3.exoplayer.source.MediaSource: void addDrmEventListener(android.os.Handler,androidx.media3.exoplayer.drm.DrmSessionEventListener)>($r15, r4);

        $r16 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource: androidx.media3.datasource.TransferListener mediaTransferListener>;

        $r17 = virtualinvoke r0.<androidx.media3.exoplayer.source.CompositeMediaSource: androidx.media3.exoplayer.analytics.PlayerId getPlayerId()>();

        interfaceinvoke r2.<androidx.media3.exoplayer.source.MediaSource: void prepareSource(androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller,androidx.media3.datasource.TransferListener,androidx.media3.exoplayer.analytics.PlayerId)>(r3, $r16, $r17);

        $z1 = virtualinvoke r0.<androidx.media3.exoplayer.source.CompositeMediaSource: boolean isEnabled()>();

        if $z1 != 0 goto label3;

        interfaceinvoke r2.<androidx.media3.exoplayer.source.MediaSource: void disable(androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller)>(r3);

     label3:
        return;
    }

    protected final void enableChildSource(java.lang.Object)
    {
        androidx.media3.exoplayer.source.CompositeMediaSource r0;
        java.lang.Object r1, $r4, $r6;
        androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener r2, $r5;
        java.util.HashMap $r3;
        androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller $r7;
        androidx.media3.exoplayer.source.MediaSource $r8;

        r0 := @this: androidx.media3.exoplayer.source.CompositeMediaSource;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource: java.util.HashMap childSources>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener) $r4;

        $r6 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r5);

        r2 = (androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener) $r6;

        $r8 = r2.<androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener: androidx.media3.exoplayer.source.MediaSource mediaSource>;

        $r7 = r2.<androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener: androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller caller>;

        interfaceinvoke $r8.<androidx.media3.exoplayer.source.MediaSource: void enable(androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller)>($r7);

        return;
    }

    protected final void disableChildSource(java.lang.Object)
    {
        androidx.media3.exoplayer.source.CompositeMediaSource r0;
        java.lang.Object r1, $r4, $r6;
        androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener r2, $r5;
        java.util.HashMap $r3;
        androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller $r7;
        androidx.media3.exoplayer.source.MediaSource $r8;

        r0 := @this: androidx.media3.exoplayer.source.CompositeMediaSource;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource: java.util.HashMap childSources>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener) $r4;

        $r6 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r5);

        r2 = (androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener) $r6;

        $r8 = r2.<androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener: androidx.media3.exoplayer.source.MediaSource mediaSource>;

        $r7 = r2.<androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener: androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller caller>;

        interfaceinvoke $r8.<androidx.media3.exoplayer.source.MediaSource: void disable(androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller)>($r7);

        return;
    }

    protected final void releaseChildSource(java.lang.Object)
    {
        androidx.media3.exoplayer.source.CompositeMediaSource r0;
        java.lang.Object r1, $r4, $r6;
        androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener r2, $r5;
        java.util.HashMap $r3;
        androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller $r7;
        androidx.media3.exoplayer.source.MediaSource $r8, $r10, $r12;
        androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener $r9, $r11;

        r0 := @this: androidx.media3.exoplayer.source.CompositeMediaSource;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource: java.util.HashMap childSources>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        $r5 = (androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener) $r4;

        $r6 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r5);

        r2 = (androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener) $r6;

        $r8 = r2.<androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener: androidx.media3.exoplayer.source.MediaSource mediaSource>;

        $r7 = r2.<androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener: androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller caller>;

        interfaceinvoke $r8.<androidx.media3.exoplayer.source.MediaSource: void releaseSource(androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller)>($r7);

        $r10 = r2.<androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener: androidx.media3.exoplayer.source.MediaSource mediaSource>;

        $r9 = r2.<androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener: androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener eventListener>;

        interfaceinvoke $r10.<androidx.media3.exoplayer.source.MediaSource: void removeEventListener(androidx.media3.exoplayer.source.MediaSourceEventListener)>($r9);

        $r12 = r2.<androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener: androidx.media3.exoplayer.source.MediaSource mediaSource>;

        $r11 = r2.<androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener: androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener eventListener>;

        interfaceinvoke $r12.<androidx.media3.exoplayer.source.MediaSource: void removeDrmEventListener(androidx.media3.exoplayer.drm.DrmSessionEventListener)>($r11);

        return;
    }

    protected int getWindowIndexForChildWindowIndex(java.lang.Object, int)
    {
        androidx.media3.exoplayer.source.CompositeMediaSource r0;
        java.lang.Object r1;
        int i0;

        r0 := @this: androidx.media3.exoplayer.source.CompositeMediaSource;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        return i0;
    }

    protected androidx.media3.exoplayer.source.MediaSource$MediaPeriodId getMediaPeriodIdForChildMediaPeriodId(java.lang.Object, androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)
    {
        androidx.media3.exoplayer.source.CompositeMediaSource r0;
        java.lang.Object r1;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r2;

        r0 := @this: androidx.media3.exoplayer.source.CompositeMediaSource;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        return r2;
    }

    protected long getMediaTimeForChildMediaTime(java.lang.Object, long)
    {
        androidx.media3.exoplayer.source.CompositeMediaSource r0;
        java.lang.Object r1;
        long l0;

        r0 := @this: androidx.media3.exoplayer.source.CompositeMediaSource;

        r1 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        return l0;
    }

    private void lambda$prepareChildSource$0(java.lang.Object, androidx.media3.exoplayer.source.MediaSource, androidx.media3.common.Timeline)
    {
        androidx.media3.exoplayer.source.CompositeMediaSource r0;
        java.lang.Object r1;
        androidx.media3.exoplayer.source.MediaSource r2;
        androidx.media3.common.Timeline r3;

        r0 := @this: androidx.media3.exoplayer.source.CompositeMediaSource;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: androidx.media3.exoplayer.source.MediaSource;

        r3 := @parameter2: androidx.media3.common.Timeline;

        virtualinvoke r0.<androidx.media3.exoplayer.source.CompositeMediaSource: void onChildSourceInfoRefreshed(java.lang.Object,androidx.media3.exoplayer.source.MediaSource,androidx.media3.common.Timeline)>(r1, r2, r3);

        return;
    }

androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener
<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: java.lang.Object id>
<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher mediaSourceEventDispatcher>
<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher drmEventDispatcher>
<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: androidx.media3.exoplayer.source.CompositeMediaSource this$0>
    public void <init>(androidx.media3.exoplayer.source.CompositeMediaSource, java.lang.Object)
    {
        androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener r0;
        androidx.media3.exoplayer.source.CompositeMediaSource r1;
        java.lang.Object r2;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r3;
        androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher $r4;

        r0 := @this: androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener;

        r1 := @parameter0: androidx.media3.exoplayer.source.CompositeMediaSource;

        r2 := @parameter1: java.lang.Object;

        r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: androidx.media3.exoplayer.source.CompositeMediaSource this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = virtualinvoke r1.<androidx.media3.exoplayer.source.CompositeMediaSource: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher createEventDispatcher(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)>(null);

        r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher mediaSourceEventDispatcher> = $r3;

        $r4 = virtualinvoke r1.<androidx.media3.exoplayer.source.CompositeMediaSource: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher createDrmEventDispatcher(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)>(null);

        r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher drmEventDispatcher> = $r4;

        r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: java.lang.Object id> = r2;

        return;
    }

    public void onLoadStarted(int, androidx.media3.exoplayer.source.MediaSource$MediaPeriodId, androidx.media3.exoplayer.source.LoadEventInfo, androidx.media3.exoplayer.source.MediaLoadData)
    {
        androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener r0;
        int i0;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r1;
        androidx.media3.exoplayer.source.LoadEventInfo r2;
        androidx.media3.exoplayer.source.MediaLoadData r3, $r5;
        boolean $z0;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r4;

        r0 := @this: androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        r2 := @parameter2: androidx.media3.exoplayer.source.LoadEventInfo;

        r3 := @parameter3: androidx.media3.exoplayer.source.MediaLoadData;

        $z0 = specialinvoke r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: boolean maybeUpdateEventDispatcher(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)>(i0, r1);

        if $z0 == 0 goto label1;

        $r4 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher mediaSourceEventDispatcher>;

        $r5 = specialinvoke r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: androidx.media3.exoplayer.source.MediaLoadData maybeUpdateMediaLoadData(androidx.media3.exoplayer.source.MediaLoadData)>(r3);

        virtualinvoke $r4.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: void loadStarted(androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData)>(r2, $r5);

     label1:
        return;
    }

    public void onLoadCompleted(int, androidx.media3.exoplayer.source.MediaSource$MediaPeriodId, androidx.media3.exoplayer.source.LoadEventInfo, androidx.media3.exoplayer.source.MediaLoadData)
    {
        androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener r0;
        int i0;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r1;
        androidx.media3.exoplayer.source.LoadEventInfo r2;
        androidx.media3.exoplayer.source.MediaLoadData r3, $r5;
        boolean $z0;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r4;

        r0 := @this: androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        r2 := @parameter2: androidx.media3.exoplayer.source.LoadEventInfo;

        r3 := @parameter3: androidx.media3.exoplayer.source.MediaLoadData;

        $z0 = specialinvoke r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: boolean maybeUpdateEventDispatcher(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)>(i0, r1);

        if $z0 == 0 goto label1;

        $r4 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher mediaSourceEventDispatcher>;

        $r5 = specialinvoke r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: androidx.media3.exoplayer.source.MediaLoadData maybeUpdateMediaLoadData(androidx.media3.exoplayer.source.MediaLoadData)>(r3);

        virtualinvoke $r4.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: void loadCompleted(androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData)>(r2, $r5);

     label1:
        return;
    }

    public void onLoadCanceled(int, androidx.media3.exoplayer.source.MediaSource$MediaPeriodId, androidx.media3.exoplayer.source.LoadEventInfo, androidx.media3.exoplayer.source.MediaLoadData)
    {
        androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener r0;
        int i0;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r1;
        androidx.media3.exoplayer.source.LoadEventInfo r2;
        androidx.media3.exoplayer.source.MediaLoadData r3, $r5;
        boolean $z0;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r4;

        r0 := @this: androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        r2 := @parameter2: androidx.media3.exoplayer.source.LoadEventInfo;

        r3 := @parameter3: androidx.media3.exoplayer.source.MediaLoadData;

        $z0 = specialinvoke r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: boolean maybeUpdateEventDispatcher(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)>(i0, r1);

        if $z0 == 0 goto label1;

        $r4 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher mediaSourceEventDispatcher>;

        $r5 = specialinvoke r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: androidx.media3.exoplayer.source.MediaLoadData maybeUpdateMediaLoadData(androidx.media3.exoplayer.source.MediaLoadData)>(r3);

        virtualinvoke $r4.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: void loadCanceled(androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData)>(r2, $r5);

     label1:
        return;
    }

    public void onLoadError(int, androidx.media3.exoplayer.source.MediaSource$MediaPeriodId, androidx.media3.exoplayer.source.LoadEventInfo, androidx.media3.exoplayer.source.MediaLoadData, java.io.IOException, boolean)
    {
        androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener r0;
        int i0;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r1;
        androidx.media3.exoplayer.source.LoadEventInfo r2;
        androidx.media3.exoplayer.source.MediaLoadData r3, $r6;
        java.io.IOException r4;
        boolean z0, $z1;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r5;

        r0 := @this: androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        r2 := @parameter2: androidx.media3.exoplayer.source.LoadEventInfo;

        r3 := @parameter3: androidx.media3.exoplayer.source.MediaLoadData;

        r4 := @parameter4: java.io.IOException;

        z0 := @parameter5: boolean;

        $z1 = specialinvoke r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: boolean maybeUpdateEventDispatcher(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)>(i0, r1);

        if $z1 == 0 goto label1;

        $r5 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher mediaSourceEventDispatcher>;

        $r6 = specialinvoke r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: androidx.media3.exoplayer.source.MediaLoadData maybeUpdateMediaLoadData(androidx.media3.exoplayer.source.MediaLoadData)>(r3);

        virtualinvoke $r5.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: void loadError(androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData,java.io.IOException,boolean)>(r2, $r6, r4, z0);

     label1:
        return;
    }

    public void onUpstreamDiscarded(int, androidx.media3.exoplayer.source.MediaSource$MediaPeriodId, androidx.media3.exoplayer.source.MediaLoadData)
    {
        androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener r0;
        int i0;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r1;
        androidx.media3.exoplayer.source.MediaLoadData r2, $r4;
        boolean $z0;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r3;

        r0 := @this: androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        r2 := @parameter2: androidx.media3.exoplayer.source.MediaLoadData;

        $z0 = specialinvoke r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: boolean maybeUpdateEventDispatcher(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)>(i0, r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher mediaSourceEventDispatcher>;

        $r4 = specialinvoke r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: androidx.media3.exoplayer.source.MediaLoadData maybeUpdateMediaLoadData(androidx.media3.exoplayer.source.MediaLoadData)>(r2);

        virtualinvoke $r3.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: void upstreamDiscarded(androidx.media3.exoplayer.source.MediaLoadData)>($r4);

     label1:
        return;
    }

    public void onDownstreamFormatChanged(int, androidx.media3.exoplayer.source.MediaSource$MediaPeriodId, androidx.media3.exoplayer.source.MediaLoadData)
    {
        androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener r0;
        int i0;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r1;
        androidx.media3.exoplayer.source.MediaLoadData r2, $r4;
        boolean $z0;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r3;

        r0 := @this: androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        r2 := @parameter2: androidx.media3.exoplayer.source.MediaLoadData;

        $z0 = specialinvoke r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: boolean maybeUpdateEventDispatcher(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)>(i0, r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher mediaSourceEventDispatcher>;

        $r4 = specialinvoke r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: androidx.media3.exoplayer.source.MediaLoadData maybeUpdateMediaLoadData(androidx.media3.exoplayer.source.MediaLoadData)>(r2);

        virtualinvoke $r3.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: void downstreamFormatChanged(androidx.media3.exoplayer.source.MediaLoadData)>($r4);

     label1:
        return;
    }

    public void onDrmSessionAcquired(int, androidx.media3.exoplayer.source.MediaSource$MediaPeriodId, int)
    {
        androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener r0;
        int i0, i1;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r1;
        boolean $z0;
        androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher $r2;

        r0 := @this: androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        i1 := @parameter2: int;

        $z0 = specialinvoke r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: boolean maybeUpdateEventDispatcher(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)>(i0, r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher drmEventDispatcher>;

        virtualinvoke $r2.<androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher: void drmSessionAcquired(int)>(i1);

     label1:
        return;
    }

    public void onDrmKeysLoaded(int, androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)
    {
        androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener r0;
        int i0;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r1;
        boolean $z0;
        androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher $r2;

        r0 := @this: androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        $z0 = specialinvoke r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: boolean maybeUpdateEventDispatcher(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)>(i0, r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher drmEventDispatcher>;

        virtualinvoke $r2.<androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher: void drmKeysLoaded()>();

     label1:
        return;
    }

    public void onDrmSessionManagerError(int, androidx.media3.exoplayer.source.MediaSource$MediaPeriodId, java.lang.Exception)
    {
        androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener r0;
        int i0;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r1;
        java.lang.Exception r2;
        boolean $z0;
        androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher $r3;

        r0 := @this: androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        r2 := @parameter2: java.lang.Exception;

        $z0 = specialinvoke r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: boolean maybeUpdateEventDispatcher(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)>(i0, r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher drmEventDispatcher>;

        virtualinvoke $r3.<androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher: void drmSessionManagerError(java.lang.Exception)>(r2);

     label1:
        return;
    }

    public void onDrmKeysRestored(int, androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)
    {
        androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener r0;
        int i0;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r1;
        boolean $z0;
        androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher $r2;

        r0 := @this: androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        $z0 = specialinvoke r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: boolean maybeUpdateEventDispatcher(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)>(i0, r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher drmEventDispatcher>;

        virtualinvoke $r2.<androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher: void drmKeysRestored()>();

     label1:
        return;
    }

    public void onDrmKeysRemoved(int, androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)
    {
        androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener r0;
        int i0;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r1;
        boolean $z0;
        androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher $r2;

        r0 := @this: androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        $z0 = specialinvoke r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: boolean maybeUpdateEventDispatcher(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)>(i0, r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher drmEventDispatcher>;

        virtualinvoke $r2.<androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher: void drmKeysRemoved()>();

     label1:
        return;
    }

    public void onDrmSessionReleased(int, androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)
    {
        androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener r0;
        int i0;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r1;
        boolean $z0;
        androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher $r2;

        r0 := @this: androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        $z0 = specialinvoke r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: boolean maybeUpdateEventDispatcher(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)>(i0, r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher drmEventDispatcher>;

        virtualinvoke $r2.<androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher: void drmSessionReleased()>();

     label1:
        return;
    }

    private boolean maybeUpdateEventDispatcher(int, androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)
    {
        androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener r0;
        int i0, i1, $i2, $i3;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r1, $r10, $r12, r15;
        java.lang.Object $r2, $r13;
        androidx.media3.exoplayer.source.CompositeMediaSource $r3, $r5, $r7, $r14;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r4, $r6, $r11;
        androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher $r8, $r9, $r16;
        boolean $z0, $z1;

        r0 := @this: androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        r15 = null;

        if r1 == null goto label1;

        $r14 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: androidx.media3.exoplayer.source.CompositeMediaSource this$0>;

        $r13 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: java.lang.Object id>;

        r15 = virtualinvoke $r14.<androidx.media3.exoplayer.source.CompositeMediaSource: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId getMediaPeriodIdForChildMediaPeriodId(java.lang.Object,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)>($r13, r1);

        if r15 != null goto label1;

        return 0;

     label1:
        $r3 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: androidx.media3.exoplayer.source.CompositeMediaSource this$0>;

        $r2 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: java.lang.Object id>;

        i1 = virtualinvoke $r3.<androidx.media3.exoplayer.source.CompositeMediaSource: int getWindowIndexForChildWindowIndex(java.lang.Object,int)>($r2, i0);

        $r4 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher mediaSourceEventDispatcher>;

        $i2 = $r4.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: int windowIndex>;

        if $i2 != i1 goto label2;

        $r11 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher mediaSourceEventDispatcher>;

        $r12 = $r11.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId mediaPeriodId>;

        $z1 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r12, r15);

        if $z1 != 0 goto label3;

     label2:
        $r5 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: androidx.media3.exoplayer.source.CompositeMediaSource this$0>;

        $r6 = virtualinvoke $r5.<androidx.media3.exoplayer.source.CompositeMediaSource: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher createEventDispatcher(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,long)>(i1, r15, 0L);

        r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher mediaSourceEventDispatcher> = $r6;

     label3:
        $r16 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher drmEventDispatcher>;

        $i3 = $r16.<androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher: int windowIndex>;

        if $i3 != i1 goto label4;

        $r9 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher drmEventDispatcher>;

        $r10 = $r9.<androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId mediaPeriodId>;

        $z0 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r10, r15);

        if $z0 != 0 goto label5;

     label4:
        $r7 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: androidx.media3.exoplayer.source.CompositeMediaSource this$0>;

        $r8 = virtualinvoke $r7.<androidx.media3.exoplayer.source.CompositeMediaSource: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher createDrmEventDispatcher(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)>(i1, r15);

        r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher drmEventDispatcher> = $r8;

     label5:
        return 1;
    }

    private androidx.media3.exoplayer.source.MediaLoadData maybeUpdateMediaLoadData(androidx.media3.exoplayer.source.MediaLoadData)
    {
        androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener r0;
        androidx.media3.exoplayer.source.MediaLoadData r1, $r6;
        long l0, l1, $l2, $l3, $l4, $l9;
        java.lang.Object $r2, $r4, $r7;
        androidx.media3.exoplayer.source.CompositeMediaSource $r3, $r5;
        byte $b5, $b10;
        int $i6, $i7, $i8;
        androidx.media3.common.Format $r8;

        r0 := @this: androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaLoadData;

        $r3 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: androidx.media3.exoplayer.source.CompositeMediaSource this$0>;

        $r2 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: java.lang.Object id>;

        $l2 = r1.<androidx.media3.exoplayer.source.MediaLoadData: long mediaStartTimeMs>;

        l0 = virtualinvoke $r3.<androidx.media3.exoplayer.source.CompositeMediaSource: long getMediaTimeForChildMediaTime(java.lang.Object,long)>($r2, $l2);

        $r5 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: androidx.media3.exoplayer.source.CompositeMediaSource this$0>;

        $r4 = r0.<androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener: java.lang.Object id>;

        $l3 = r1.<androidx.media3.exoplayer.source.MediaLoadData: long mediaEndTimeMs>;

        l1 = virtualinvoke $r5.<androidx.media3.exoplayer.source.CompositeMediaSource: long getMediaTimeForChildMediaTime(java.lang.Object,long)>($r4, $l3);

        $l4 = r1.<androidx.media3.exoplayer.source.MediaLoadData: long mediaStartTimeMs>;

        $b5 = l0 cmp $l4;

        if $b5 != 0 goto label1;

        $l9 = r1.<androidx.media3.exoplayer.source.MediaLoadData: long mediaEndTimeMs>;

        $b10 = l1 cmp $l9;

        if $b10 != 0 goto label1;

        return r1;

     label1:
        $r6 = new androidx.media3.exoplayer.source.MediaLoadData;

        $i8 = r1.<androidx.media3.exoplayer.source.MediaLoadData: int dataType>;

        $i7 = r1.<androidx.media3.exoplayer.source.MediaLoadData: int trackType>;

        $r8 = r1.<androidx.media3.exoplayer.source.MediaLoadData: androidx.media3.common.Format trackFormat>;

        $i6 = r1.<androidx.media3.exoplayer.source.MediaLoadData: int trackSelectionReason>;

        $r7 = r1.<androidx.media3.exoplayer.source.MediaLoadData: java.lang.Object trackSelectionData>;

        specialinvoke $r6.<androidx.media3.exoplayer.source.MediaLoadData: void <init>(int,int,androidx.media3.common.Format,int,java.lang.Object,long,long)>($i8, $i7, $r8, $i6, $r7, l0, l1);

        return $r6;
    }

androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener
<androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener: androidx.media3.exoplayer.source.MediaSource mediaSource>
<androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener: androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller caller>
<androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener: androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener eventListener>
    public void <init>(androidx.media3.exoplayer.source.MediaSource, androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller, androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener)
    {
        androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener r0;
        androidx.media3.exoplayer.source.MediaSource r1;
        androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller r2;
        androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener r3;

        r0 := @this: androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaSource;

        r2 := @parameter1: androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller;

        r3 := @parameter2: androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener: androidx.media3.exoplayer.source.MediaSource mediaSource> = r1;

        r0.<androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener: androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller caller> = r2;

        r0.<androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener: androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener eventListener> = r3;

        return;
    }

