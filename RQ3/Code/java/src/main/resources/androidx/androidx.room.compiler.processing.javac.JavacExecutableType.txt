androidx.room.compiler.processing.javac.JavacExecutableType
<androidx.room.compiler.processing.javac.JavacExecutableType: androidx.room.compiler.processing.javac.JavacProcessingEnv env>
<androidx.room.compiler.processing.javac.JavacExecutableType: androidx.room.compiler.processing.javac.JavacExecutableElement element>
<androidx.room.compiler.processing.javac.JavacExecutableType: javax.lang.model.type.ExecutableType executableType>
<androidx.room.compiler.processing.javac.JavacExecutableType: kotlin.Lazy parameterTypes$delegate>
    public void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv, androidx.room.compiler.processing.javac.JavacExecutableElement, javax.lang.model.type.ExecutableType)
    {
        androidx.room.compiler.processing.javac.JavacExecutableType r0;
        androidx.room.compiler.processing.javac.JavacProcessingEnv r1;
        androidx.room.compiler.processing.javac.JavacExecutableElement r2;
        javax.lang.model.type.ExecutableType r3;
        androidx.room.compiler.processing.javac.JavacExecutableType$parameterTypes$2 $r4;
        kotlin.jvm.functions.Function0 $r5;
        kotlin.Lazy $r6;

        r0 := @this: androidx.room.compiler.processing.javac.JavacExecutableType;

        r1 := @parameter0: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        r2 := @parameter1: androidx.room.compiler.processing.javac.JavacExecutableElement;

        r3 := @parameter2: javax.lang.model.type.ExecutableType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "element");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "executableType");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.room.compiler.processing.javac.JavacExecutableType: androidx.room.compiler.processing.javac.JavacProcessingEnv env> = r1;

        r0.<androidx.room.compiler.processing.javac.JavacExecutableType: androidx.room.compiler.processing.javac.JavacExecutableElement element> = r2;

        r0.<androidx.room.compiler.processing.javac.JavacExecutableType: javax.lang.model.type.ExecutableType executableType> = r3;

        $r4 = new androidx.room.compiler.processing.javac.JavacExecutableType$parameterTypes$2;

        specialinvoke $r4.<androidx.room.compiler.processing.javac.JavacExecutableType$parameterTypes$2: void <init>(androidx.room.compiler.processing.javac.JavacExecutableType)>(r0);

        $r5 = (kotlin.jvm.functions.Function0) $r4;

        $r6 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r5);

        r0.<androidx.room.compiler.processing.javac.JavacExecutableType: kotlin.Lazy parameterTypes$delegate> = $r6;

        return;
    }

    public final androidx.room.compiler.processing.javac.JavacProcessingEnv getEnv()
    {
        androidx.room.compiler.processing.javac.JavacExecutableType r0;
        androidx.room.compiler.processing.javac.JavacProcessingEnv $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacExecutableType;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacExecutableType: androidx.room.compiler.processing.javac.JavacProcessingEnv env>;

        return $r1;
    }

    public androidx.room.compiler.processing.javac.JavacExecutableElement getElement()
    {
        androidx.room.compiler.processing.javac.JavacExecutableType r0;
        androidx.room.compiler.processing.javac.JavacExecutableElement $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacExecutableType;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacExecutableType: androidx.room.compiler.processing.javac.JavacExecutableElement element>;

        return $r1;
    }

    public final javax.lang.model.type.ExecutableType getExecutableType()
    {
        androidx.room.compiler.processing.javac.JavacExecutableType r0;
        javax.lang.model.type.ExecutableType $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacExecutableType;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacExecutableType: javax.lang.model.type.ExecutableType executableType>;

        return $r1;
    }

    public java.util.List getParameterTypes()
    {
        androidx.room.compiler.processing.javac.JavacExecutableType r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacExecutableType;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacExecutableType: kotlin.Lazy parameterTypes$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.util.List) $r2;

        return $r3;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.room.compiler.processing.javac.JavacExecutableType r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        javax.lang.model.type.ExecutableType $r3, $r4;

        r0 := @this: androidx.room.compiler.processing.javac.JavacExecutableType;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof androidx.room.compiler.processing.javac.JavacExecutableType;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r4 = r0.<androidx.room.compiler.processing.javac.JavacExecutableType: javax.lang.model.type.ExecutableType executableType>;

        $r2 = (androidx.room.compiler.processing.javac.JavacExecutableType) r1;

        $r3 = $r2.<androidx.room.compiler.processing.javac.JavacExecutableType: javax.lang.model.type.ExecutableType executableType>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, $r3);

        return $z1;
    }

    public int hashCode()
    {
        androidx.room.compiler.processing.javac.JavacExecutableType r0;
        javax.lang.model.type.ExecutableType $r1;
        int $i0;

        r0 := @this: androidx.room.compiler.processing.javac.JavacExecutableType;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacExecutableType: javax.lang.model.type.ExecutableType executableType>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        androidx.room.compiler.processing.javac.JavacExecutableType r0;
        javax.lang.model.type.ExecutableType $r1;
        java.lang.String $r2;

        r0 := @this: androidx.room.compiler.processing.javac.JavacExecutableType;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacExecutableType: javax.lang.model.type.ExecutableType executableType>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public java.util.List getThrownTypes()
    {
        androidx.room.compiler.processing.javac.JavacExecutableType r0;
        androidx.room.compiler.processing.javac.JavacExecutableElement $r1;
        java.util.List $r2;

        r0 := @this: androidx.room.compiler.processing.javac.JavacExecutableType;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacExecutableType: androidx.room.compiler.processing.javac.JavacExecutableElement getElement()>();

        $r2 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.JavacExecutableElement: java.util.List getThrownTypes()>();

        return $r2;
    }

    public boolean isSameType(androidx.room.compiler.processing.XExecutableType)
    {
        androidx.room.compiler.processing.javac.JavacExecutableType r0, $r5;
        androidx.room.compiler.processing.XExecutableType r1;
        boolean $z0, $z1, $z2;
        androidx.room.compiler.processing.javac.JavacProcessingEnv $r2;
        javax.lang.model.util.Types $r3;
        javax.lang.model.type.ExecutableType $r4, $r6;
        javax.lang.model.type.TypeMirror $r7, $r8;

        r0 := @this: androidx.room.compiler.processing.javac.JavacExecutableType;

        r1 := @parameter0: androidx.room.compiler.processing.XExecutableType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "other");

        $z0 = r1 instanceof androidx.room.compiler.processing.javac.JavacExecutableType;

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.room.compiler.processing.javac.JavacExecutableType: androidx.room.compiler.processing.javac.JavacProcessingEnv env>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.lang.model.util.Types getTypeUtils()>();

        $r4 = r0.<androidx.room.compiler.processing.javac.JavacExecutableType: javax.lang.model.type.ExecutableType executableType>;

        $r8 = (javax.lang.model.type.TypeMirror) $r4;

        $r5 = (androidx.room.compiler.processing.javac.JavacExecutableType) r1;

        $r6 = $r5.<androidx.room.compiler.processing.javac.JavacExecutableType: javax.lang.model.type.ExecutableType executableType>;

        $r7 = (javax.lang.model.type.TypeMirror) $r6;

        $z1 = interfaceinvoke $r3.<javax.lang.model.util.Types: boolean isSameType(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror)>($r8, $r7);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

androidx.room.compiler.processing.javac.JavacExecutableType$parameterTypes$2
<androidx.room.compiler.processing.javac.JavacExecutableType$parameterTypes$2: androidx.room.compiler.processing.javac.JavacExecutableType this$0>
    void <init>(androidx.room.compiler.processing.javac.JavacExecutableType)
    {
        androidx.room.compiler.processing.javac.JavacExecutableType$parameterTypes$2 r0;
        androidx.room.compiler.processing.javac.JavacExecutableType $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacExecutableType$parameterTypes$2;

        $r1 := @parameter0: androidx.room.compiler.processing.javac.JavacExecutableType;

        r0.<androidx.room.compiler.processing.javac.JavacExecutableType$parameterTypes$2: androidx.room.compiler.processing.javac.JavacExecutableType this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final java.util.List invoke()
    {
        androidx.room.compiler.processing.javac.JavacExecutableType$parameterTypes$2 r0;
        java.lang.Iterable $r1;
        androidx.room.compiler.processing.javac.JavacExecutableType r2, $r12;
        java.util.Collection r3, r11;
        java.util.Iterator r4;
        java.lang.Object r5, $r19, $r23;
        int i0, i1, $i2, $i3, $i4, i5, $i6;
        javax.lang.model.type.TypeMirror r6, r8;
        androidx.room.compiler.processing.javac.JavacProcessingEnv r7;
        androidx.room.compiler.processing.javac.kotlin.KmType r9;
        androidx.room.compiler.processing.XNullability r10;
        javax.lang.model.type.ExecutableType $r13;
        java.util.List $r14, $r16, $r18, $r22;
        java.util.ArrayList $r15;
        boolean $z4;
        androidx.room.compiler.processing.javac.JavacExecutableElement $r17, $r21;
        androidx.room.compiler.processing.javac.JavacMethodParameter $r20, $r24;
        javax.lang.model.element.VariableElement $r25;
        javax.lang.model.element.Element $r26;
        javax.lang.model.type.TypeKind $r27;
        int[] $r28;
        javax.lang.model.type.DeclaredType $r29, $r30, $r32;
        androidx.room.compiler.processing.javac.JavacDeclaredType $r31, $r42;
        javax.lang.model.type.ArrayType $r33, $r34, $r36;
        androidx.room.compiler.processing.javac.JavacArrayType $r35, $r40;
        androidx.room.compiler.processing.javac.JavacType $r37, $r41;
        androidx.room.compiler.processing.javac.DefaultJavacType $r38, $r43;

        r0 := @this: androidx.room.compiler.processing.javac.JavacExecutableType$parameterTypes$2;

        $r12 = r0.<androidx.room.compiler.processing.javac.JavacExecutableType$parameterTypes$2: androidx.room.compiler.processing.javac.JavacExecutableType this$0>;

        $r13 = virtualinvoke $r12.<androidx.room.compiler.processing.javac.JavacExecutableType: javax.lang.model.type.ExecutableType getExecutableType()>();

        $r14 = interfaceinvoke $r13.<javax.lang.model.type.ExecutableType: java.util.List getParameterTypes()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r14, "executableType.parameterTypes");

        $r1 = (java.lang.Iterable) $r14;

        r2 = r0.<androidx.room.compiler.processing.javac.JavacExecutableType$parameterTypes$2: androidx.room.compiler.processing.javac.JavacExecutableType this$0>;

        $r15 = new java.util.ArrayList;

        $i2 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r1, 10);

        specialinvoke $r15.<java.util.ArrayList: void <init>(int)>($i2);

        r3 = (java.util.Collection) $r15;

        i5 = 0;

        r4 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z4 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label18;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $i3 = i5;

        i5 = i5 + 1;

        i0 = $i3;

        if i0 >= 0 goto label02;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label02:
        r6 = (javax.lang.model.type.TypeMirror) r5;

        i1 = i0;

        r11 = r3;

        r7 = virtualinvoke r2.<androidx.room.compiler.processing.javac.JavacExecutableType: androidx.room.compiler.processing.javac.JavacProcessingEnv getEnv()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r6, "typeMirror");

        r8 = r6;

        $r17 = virtualinvoke r2.<androidx.room.compiler.processing.javac.JavacExecutableType: androidx.room.compiler.processing.javac.JavacExecutableElement getElement()>();

        $r18 = virtualinvoke $r17.<androidx.room.compiler.processing.javac.JavacExecutableElement: java.util.List getParameters()>();

        $r19 = interfaceinvoke $r18.<java.util.List: java.lang.Object get(int)>(i1);

        $r20 = (androidx.room.compiler.processing.javac.JavacMethodParameter) $r19;

        r9 = virtualinvoke $r20.<androidx.room.compiler.processing.javac.JavacMethodParameter: androidx.room.compiler.processing.javac.kotlin.KmType getKotlinType()>();

        $r21 = virtualinvoke r2.<androidx.room.compiler.processing.javac.JavacExecutableType: androidx.room.compiler.processing.javac.JavacExecutableElement getElement()>();

        $r22 = virtualinvoke $r21.<androidx.room.compiler.processing.javac.JavacExecutableElement: java.util.List getParameters()>();

        $r23 = interfaceinvoke $r22.<java.util.List: java.lang.Object get(int)>(i1);

        $r24 = (androidx.room.compiler.processing.javac.JavacMethodParameter) $r23;

        $r25 = virtualinvoke $r24.<androidx.room.compiler.processing.javac.JavacMethodParameter: javax.lang.model.element.VariableElement getElement()>();

        $r26 = (javax.lang.model.element.Element) $r25;

        r10 = staticinvoke <androidx.room.compiler.processing.javac.ElementExtKt: androidx.room.compiler.processing.XNullability getNullability(javax.lang.model.element.Element)>($r26);

        $r27 = interfaceinvoke r8.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        if $r27 != null goto label03;

        $i6 = -1;

        goto label04;

     label03:
        $r28 = <androidx.room.compiler.processing.javac.JavacProcessingEnv$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i4 = virtualinvoke $r27.<javax.lang.model.type.TypeKind: int ordinal()>();

        $i6 = $r28[$i4];

     label04:
        tableswitch($i6)
        {
            case 1: goto label05;
            case 2: goto label09;
            default: goto label13;
        };

     label05:
        if r9 == null goto label06;

        $r35 = new androidx.room.compiler.processing.javac.JavacArrayType;

        $r40 = $r35;

        $r36 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.ArrayType asArray(javax.lang.model.type.TypeMirror)>(r8);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r36, "asArray(typeMirror)");

        specialinvoke $r35.<androidx.room.compiler.processing.javac.JavacArrayType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.ArrayType,androidx.room.compiler.processing.javac.kotlin.KmType)>(r7, $r36, r9);

        goto label08;

     label06:
        if r10 == null goto label07;

        $r40 = new androidx.room.compiler.processing.javac.JavacArrayType;

        $r34 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.ArrayType asArray(javax.lang.model.type.TypeMirror)>(r8);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r34, "asArray(typeMirror)");

        specialinvoke $r40.<androidx.room.compiler.processing.javac.JavacArrayType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.ArrayType,androidx.room.compiler.processing.XNullability,androidx.room.compiler.processing.XNullability)>(r7, $r34, r10, null);

        goto label08;

     label07:
        $r40 = new androidx.room.compiler.processing.javac.JavacArrayType;

        $r33 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.ArrayType asArray(javax.lang.model.type.TypeMirror)>(r8);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r33, "asArray(typeMirror)");

        specialinvoke $r40.<androidx.room.compiler.processing.javac.JavacArrayType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.ArrayType)>(r7, $r33);

     label08:
        $r41 = (androidx.room.compiler.processing.javac.JavacType) $r40;

        goto label17;

     label09:
        if r9 == null goto label10;

        $r31 = new androidx.room.compiler.processing.javac.JavacDeclaredType;

        $r42 = $r31;

        $r32 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.DeclaredType asDeclared(javax.lang.model.type.TypeMirror)>(r8);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r32, "asDeclared(typeMirror)");

        specialinvoke $r31.<androidx.room.compiler.processing.javac.JavacDeclaredType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.DeclaredType,androidx.room.compiler.processing.javac.kotlin.KmType)>(r7, $r32, r9);

        goto label12;

     label10:
        if r10 == null goto label11;

        $r42 = new androidx.room.compiler.processing.javac.JavacDeclaredType;

        $r30 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.DeclaredType asDeclared(javax.lang.model.type.TypeMirror)>(r8);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r30, "asDeclared(typeMirror)");

        specialinvoke $r42.<androidx.room.compiler.processing.javac.JavacDeclaredType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.DeclaredType,androidx.room.compiler.processing.XNullability)>(r7, $r30, r10);

        goto label12;

     label11:
        $r42 = new androidx.room.compiler.processing.javac.JavacDeclaredType;

        $r29 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.DeclaredType asDeclared(javax.lang.model.type.TypeMirror)>(r8);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r29, "asDeclared(typeMirror)");

        specialinvoke $r42.<androidx.room.compiler.processing.javac.JavacDeclaredType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.DeclaredType)>(r7, $r29);

     label12:
        $r41 = (androidx.room.compiler.processing.javac.JavacType) $r42;

        goto label17;

     label13:
        if r9 == null goto label14;

        $r38 = new androidx.room.compiler.processing.javac.DefaultJavacType;

        $r43 = $r38;

        specialinvoke $r38.<androidx.room.compiler.processing.javac.DefaultJavacType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.TypeMirror,androidx.room.compiler.processing.javac.kotlin.KmType)>(r7, r8, r9);

        goto label16;

     label14:
        if r10 == null goto label15;

        $r43 = new androidx.room.compiler.processing.javac.DefaultJavacType;

        specialinvoke $r43.<androidx.room.compiler.processing.javac.DefaultJavacType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.TypeMirror,androidx.room.compiler.processing.XNullability)>(r7, r8, r10);

        goto label16;

     label15:
        $r43 = new androidx.room.compiler.processing.javac.DefaultJavacType;

        specialinvoke $r43.<androidx.room.compiler.processing.javac.DefaultJavacType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.TypeMirror)>(r7, r8);

     label16:
        $r37 = (androidx.room.compiler.processing.javac.JavacType) $r43;

        $r41 = $r37;

     label17:
        interfaceinvoke r11.<java.util.Collection: boolean add(java.lang.Object)>($r41);

        goto label01;

     label18:
        $r16 = (java.util.List) r3;

        return $r16;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.room.compiler.processing.javac.JavacExecutableType$parameterTypes$2 r0;
        java.util.List $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacExecutableType$parameterTypes$2;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacExecutableType$parameterTypes$2: java.util.List invoke()>();

        return $r1;
    }

