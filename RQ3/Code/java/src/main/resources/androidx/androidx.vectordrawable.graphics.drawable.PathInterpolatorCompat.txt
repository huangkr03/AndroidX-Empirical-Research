androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat
<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float PRECISION>
<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: int MAX_NUM_POINTS>
<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: double EPSILON>
<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX>
<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mY>
    public void <init>(android.content.Context, android.util.AttributeSet, org.xmlpull.v1.XmlPullParser)
    {
        androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        org.xmlpull.v1.XmlPullParser r3;
        android.content.res.Resources $r4;
        android.content.res.Resources$Theme $r5;

        r0 := @this: androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        r3 := @parameter2: org.xmlpull.v1.XmlPullParser;

        $r4 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        specialinvoke r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)>($r4, $r5, r2, r3);

        return;
    }

    public void <init>(android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, org.xmlpull.v1.XmlPullParser)
    {
        androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat r0;
        android.content.res.Resources r1;
        android.content.res.Resources$Theme r2;
        android.util.AttributeSet r3;
        org.xmlpull.v1.XmlPullParser r4;
        android.content.res.TypedArray r5;
        int[] $r6;

        r0 := @this: androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: android.content.res.Resources$Theme;

        r3 := @parameter2: android.util.AttributeSet;

        r4 := @parameter3: org.xmlpull.v1.XmlPullParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = <androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_PATH_INTERPOLATOR>;

        r5 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r2, r3, $r6);

        specialinvoke r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)>(r5, r4);

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private void parseInterpolatorFromTypeArray(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser)
    {
        androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat r0;
        android.content.res.TypedArray r1;
        org.xmlpull.v1.XmlPullParser r2;
        boolean z0, z1, $z2, $z3, $z4;
        float f0, f1, f2, f3;
        android.view.InflateException $r3, $r4, $r5, $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10, r11;
        android.graphics.Path r12;

        r0 := @this: androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat;

        r1 := @parameter0: android.content.res.TypedArray;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $z2 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r2, "pathData");

        if $z2 == 0 goto label2;

        r11 = staticinvoke <androidx.core.content.res.TypedArrayUtils: java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r1, r2, "pathData", 4);

        r12 = staticinvoke <androidx.core.graphics.PathParser: android.graphics.Path createPathFromPathData(java.lang.String)>(r11);

        if r12 != null goto label1;

        $r6 = new android.view.InflateException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The path is null, which is created from ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<android.view.InflateException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label1:
        specialinvoke r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)>(r12);

        goto label7;

     label2:
        $z3 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r2, "controlX1");

        if $z3 != 0 goto label3;

        $r5 = new android.view.InflateException;

        specialinvoke $r5.<android.view.InflateException: void <init>(java.lang.String)>("pathInterpolator requires the controlX1 attribute");

        throw $r5;

     label3:
        $z4 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r2, "controlY1");

        if $z4 != 0 goto label4;

        $r4 = new android.view.InflateException;

        specialinvoke $r4.<android.view.InflateException: void <init>(java.lang.String)>("pathInterpolator requires the controlY1 attribute");

        throw $r4;

     label4:
        f2 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>(r1, r2, "controlX1", 0, 0.0F);

        f3 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>(r1, r2, "controlY1", 1, 0.0F);

        z0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r2, "controlX2");

        z1 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r2, "controlY2");

        if z0 == z1 goto label5;

        $r3 = new android.view.InflateException;

        specialinvoke $r3.<android.view.InflateException: void <init>(java.lang.String)>("pathInterpolator requires both controlX2 and controlY2 for cubic Beziers.");

        throw $r3;

     label5:
        if z0 != 0 goto label6;

        specialinvoke r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initQuad(float,float)>(f2, f3);

        goto label7;

     label6:
        f0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>(r1, r2, "controlX2", 2, 0.0F);

        f1 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>(r1, r2, "controlY2", 3, 0.0F);

        specialinvoke r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initCubic(float,float,float,float)>(f2, f3, f0, f1);

     label7:
        return;
    }

    private void initQuad(float, float)
    {
        androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat r0;
        float f0, f1;
        android.graphics.Path r1, $r2;

        r0 := @this: androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r2 = new android.graphics.Path;

        specialinvoke $r2.<android.graphics.Path: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.graphics.Path: void moveTo(float,float)>(0.0F, 0.0F);

        virtualinvoke r1.<android.graphics.Path: void quadTo(float,float,float,float)>(f0, f1, 1.0F, 1.0F);

        specialinvoke r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)>(r1);

        return;
    }

    private void initCubic(float, float, float, float)
    {
        androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat r0;
        float f0, f1, f2, f3;
        android.graphics.Path r1, $r2;

        r0 := @this: androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $r2 = new android.graphics.Path;

        specialinvoke $r2.<android.graphics.Path: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.graphics.Path: void moveTo(float,float)>(0.0F, 0.0F);

        virtualinvoke r1.<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>(f0, f1, f2, f3, 1.0F, 1.0F);

        specialinvoke r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)>(r1);

        return;
    }

    private void initPath(android.graphics.Path)
    {
        androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat r0;
        android.graphics.Path r1;
        android.graphics.PathMeasure r2, $r4;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, f18, $f19, $f20, $f21, $f22, f23;
        int i0, $i1, $i2, $i5, $i7, $i9, $i11, i12, $i13, $i14, i15, i16;
        float[] r3, $r5, $r6, $r7, $r8, $r9, $r10, $r12, $r13, $r19, $r20, $r29, $r32, $r35, $r38;
        double $d0, $d1, $d2, $d3;
        byte $b3, $b4, $b6, $b8, $b10;
        boolean $z0;
        java.lang.IllegalArgumentException $r11, $r14, $r21, $r26;
        java.lang.StringBuilder $r15, $r16, $r17, $r22, $r23, $r24, $r27, $r28, $r30, $r31, $r33, $r34, $r36, $r37, $r39;
        java.lang.String $r18, $r25, $r40;

        r0 := @this: androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat;

        r1 := @parameter0: android.graphics.Path;

        $r4 = new android.graphics.PathMeasure;

        specialinvoke $r4.<android.graphics.PathMeasure: void <init>(android.graphics.Path,boolean)>(r1, 0);

        r2 = $r4;

        f0 = virtualinvoke r2.<android.graphics.PathMeasure: float getLength()>();

        $f2 = f0 / 0.002F;

        $i1 = (int) $f2;

        $i2 = $i1 + 1;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>(3000, $i2);

        if i0 > 0 goto label1;

        $r21 = new java.lang.IllegalArgumentException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The Path has a invalid length ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r25);

        throw $r21;

     label1:
        $r5 = newarray (float)[i0];

        r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX> = $r5;

        $r6 = newarray (float)[i0];

        r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mY> = $r6;

        r3 = newarray (float)[2];

        i12 = 0;

     label2:
        if i12 >= i0 goto label3;

        $f13 = (float) i12;

        $f15 = $f13 * f0;

        $i11 = i0 - 1;

        $f14 = (float) $i11;

        f18 = $f15 / $f14;

        virtualinvoke r2.<android.graphics.PathMeasure: boolean getPosTan(float,float[],float[])>(f18, r3, null);

        $r19 = r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX>;

        $f16 = r3[0];

        $r19[i12] = $f16;

        $r20 = r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mY>;

        $f17 = r3[1];

        $r20[i12] = $f17;

        i12 = i12 + 1;

        goto label2;

     label3:
        $r7 = r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX>;

        $f3 = $r7[0];

        $f4 = staticinvoke <java.lang.Math: float abs(float)>($f3);

        $d0 = (double) $f4;

        $b3 = $d0 cmpl 1.0E-5;

        if $b3 > 0 goto label4;

        $r8 = r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mY>;

        $f5 = $r8[0];

        $f6 = staticinvoke <java.lang.Math: float abs(float)>($f5);

        $d1 = (double) $f6;

        $b4 = $d1 cmpl 1.0E-5;

        if $b4 > 0 goto label4;

        $r9 = r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX>;

        $i5 = i0 - 1;

        $f7 = $r9[$i5];

        $f8 = $f7 - 1.0F;

        $f9 = staticinvoke <java.lang.Math: float abs(float)>($f8);

        $d2 = (double) $f9;

        $b6 = $d2 cmpl 1.0E-5;

        if $b6 > 0 goto label4;

        $r10 = r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mY>;

        $i7 = i0 - 1;

        $f10 = $r10[$i7];

        $f11 = $f10 - 1.0F;

        $f12 = staticinvoke <java.lang.Math: float abs(float)>($f11);

        $d3 = (double) $f12;

        $b8 = $d3 cmpl 1.0E-5;

        if $b8 <= 0 goto label5;

     label4:
        $r26 = new java.lang.IllegalArgumentException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The Path must start at (0,0) and end at (1,1) start: ");

        $r29 = r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX>;

        $f19 = $r29[0];

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f19);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r32 = r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mY>;

        $f20 = $r32[0];

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f20);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end:");

        $r35 = r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX>;

        $i13 = i0 - 1;

        $f21 = $r35[$i13];

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f21);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r38 = r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mY>;

        $i14 = i0 - 1;

        $f22 = $r38[$i14];

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f22);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r40);

        throw $r26;

     label5:
        f23 = 0.0F;

        i15 = 0;

        i16 = 0;

     label6:
        if i16 >= i0 goto label8;

        $r12 = r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX>;

        $i9 = i15;

        i15 = i15 + 1;

        f1 = $r12[$i9];

        $b10 = f1 cmpg f23;

        if $b10 >= 0 goto label7;

        $r14 = new java.lang.IllegalArgumentException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The Path cannot loop back on itself, x :");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r14;

     label7:
        $r13 = r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX>;

        $r13[i16] = f1;

        f23 = f1;

        i16 = i16 + 1;

        goto label6;

     label8:
        $z0 = virtualinvoke r2.<android.graphics.PathMeasure: boolean nextContour()>();

        if $z0 == 0 goto label9;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The Path should be continuous, can\'t have 2+ contours");

        throw $r11;

     label9:
        return;
    }

    public float getInterpolation(float)
    {
        androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat r0;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, f13;
        byte $b0, $b1, $b4, $b6;
        float[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        int $i2, $i3, $i5, i7, i8, i9;

        r0 := @this: androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat;

        f0 := @parameter0: float;

        $b0 = f0 cmpg 0.0F;

        if $b0 > 0 goto label1;

        return 0.0F;

     label1:
        $b1 = f0 cmpl 1.0F;

        if $b1 < 0 goto label2;

        return 1.0F;

     label2:
        i7 = 0;

        $r1 = r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX>;

        $i2 = lengthof $r1;

        i8 = $i2 - 1;

     label3:
        $i3 = i8 - i7;

        if $i3 <= 1 goto label6;

        $i5 = i7 + i8;

        i9 = $i5 / 2;

        $r8 = r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX>;

        $f12 = $r8[i9];

        $b6 = f0 cmpg $f12;

        if $b6 >= 0 goto label4;

        i8 = i9;

        goto label5;

     label4:
        i7 = i9;

     label5:
        goto label3;

     label6:
        $r2 = r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX>;

        $f6 = $r2[i8];

        $r3 = r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX>;

        $f5 = $r3[i7];

        f13 = $f6 - $f5;

        $b4 = f13 cmpl 0.0F;

        if $b4 != 0 goto label7;

        $r7 = r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mY>;

        $f11 = $r7[i7];

        return $f11;

     label7:
        $r4 = r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX>;

        $f7 = $r4[i7];

        f1 = f0 - $f7;

        f2 = f1 / f13;

        $r5 = r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mY>;

        f3 = $r5[i7];

        $r6 = r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mY>;

        f4 = $r6[i8];

        $f8 = f4 - f3;

        $f9 = f2 * $f8;

        $f10 = f3 + $f9;

        return $f10;
    }

