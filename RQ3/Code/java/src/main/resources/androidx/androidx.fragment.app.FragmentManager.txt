androidx.fragment.app.FragmentManager
<androidx.fragment.app.FragmentManager: java.lang.String SAVED_STATE_TAG>
<androidx.fragment.app.FragmentManager: java.lang.String FRAGMENT_MANAGER_STATE_TAG>
<androidx.fragment.app.FragmentManager: java.lang.String RESULT_NAME_PREFIX>
<androidx.fragment.app.FragmentManager: java.lang.String FRAGMENT_STATE_TAG>
<androidx.fragment.app.FragmentManager: java.lang.String FRAGMENT_NAME_PREFIX>
<androidx.fragment.app.FragmentManager: boolean DEBUG>
<androidx.fragment.app.FragmentManager: java.lang.String TAG>
<androidx.fragment.app.FragmentManager: int POP_BACK_STACK_INCLUSIVE>
<androidx.fragment.app.FragmentManager: java.util.ArrayList mPendingActions>
<androidx.fragment.app.FragmentManager: boolean mExecutingActions>
<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>
<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack>
<androidx.fragment.app.FragmentManager: java.util.ArrayList mCreatedMenus>
<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLayoutInflaterFactory mLayoutInflaterFactory>
<androidx.fragment.app.FragmentManager: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher>
<androidx.fragment.app.FragmentManager: androidx.activity.OnBackPressedCallback mOnBackPressedCallback>
<androidx.fragment.app.FragmentManager: java.util.concurrent.atomic.AtomicInteger mBackStackIndex>
<androidx.fragment.app.FragmentManager: java.util.Map mBackStackStates>
<androidx.fragment.app.FragmentManager: java.util.Map mResults>
<androidx.fragment.app.FragmentManager: java.util.Map mResultListeners>
<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStackChangeListeners>
<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher mLifecycleCallbacksDispatcher>
<androidx.fragment.app.FragmentManager: java.util.concurrent.CopyOnWriteArrayList mOnAttachListeners>
<androidx.fragment.app.FragmentManager: androidx.core.util.Consumer mOnConfigurationChangedListener>
<androidx.fragment.app.FragmentManager: androidx.core.util.Consumer mOnTrimMemoryListener>
<androidx.fragment.app.FragmentManager: androidx.core.util.Consumer mOnMultiWindowModeChangedListener>
<androidx.fragment.app.FragmentManager: androidx.core.util.Consumer mOnPictureInPictureModeChangedListener>
<androidx.fragment.app.FragmentManager: androidx.core.view.MenuProvider mMenuProvider>
<androidx.fragment.app.FragmentManager: int mCurState>
<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>
<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentContainer mContainer>
<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mParent>
<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mPrimaryNav>
<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory mFragmentFactory>
<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory mHostFragmentFactory>
<androidx.fragment.app.FragmentManager: androidx.fragment.app.SpecialEffectsControllerFactory mSpecialEffectsControllerFactory>
<androidx.fragment.app.FragmentManager: androidx.fragment.app.SpecialEffectsControllerFactory mDefaultSpecialEffectsControllerFactory>
<androidx.fragment.app.FragmentManager: androidx.activity.result.ActivityResultLauncher mStartActivityForResult>
<androidx.fragment.app.FragmentManager: androidx.activity.result.ActivityResultLauncher mStartIntentSenderForResult>
<androidx.fragment.app.FragmentManager: androidx.activity.result.ActivityResultLauncher mRequestPermissions>
<androidx.fragment.app.FragmentManager: java.util.ArrayDeque mLaunchedFragments>
<androidx.fragment.app.FragmentManager: java.lang.String EXTRA_CREATED_FILLIN_INTENT>
<androidx.fragment.app.FragmentManager: boolean mNeedMenuInvalidate>
<androidx.fragment.app.FragmentManager: boolean mStateSaved>
<androidx.fragment.app.FragmentManager: boolean mStopped>
<androidx.fragment.app.FragmentManager: boolean mDestroyed>
<androidx.fragment.app.FragmentManager: boolean mHavePendingDeferredStart>
<androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpRecords>
<androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpIsPop>
<androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpAddedFragments>
<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerViewModel mNonConfig>
<androidx.fragment.app.FragmentManager: androidx.fragment.app.strictmode.FragmentStrictMode$Policy mStrictModePolicy>
<androidx.fragment.app.FragmentManager: java.lang.Runnable mExecCommit>
    public void <init>()
    {
        androidx.fragment.app.FragmentManager r0;
        java.util.ArrayList $r1;
        androidx.fragment.app.FragmentStore $r2;
        androidx.fragment.app.FragmentLayoutInflaterFactory $r3;
        androidx.fragment.app.FragmentManager$1 $r4;
        java.util.concurrent.atomic.AtomicInteger $r5;
        java.util.HashMap $r6, $r8, $r10;
        java.util.Map $r7, $r9, $r11;
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher $r12;
        java.util.concurrent.CopyOnWriteArrayList $r13;
        androidx.core.util.Consumer $r14, $r15, $r16, $r17;
        androidx.fragment.app.FragmentManager$2 $r18;
        androidx.fragment.app.FragmentManager$3 $r19;
        androidx.fragment.app.FragmentManager$4 $r20;
        java.util.ArrayDeque $r21;
        androidx.fragment.app.FragmentManager$5 $r22;

        r0 := @this: androidx.fragment.app.FragmentManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mPendingActions> = $r1;

        $r2 = new androidx.fragment.app.FragmentStore;

        specialinvoke $r2.<androidx.fragment.app.FragmentStore: void <init>()>();

        r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore> = $r2;

        $r3 = new androidx.fragment.app.FragmentLayoutInflaterFactory;

        specialinvoke $r3.<androidx.fragment.app.FragmentLayoutInflaterFactory: void <init>(androidx.fragment.app.FragmentManager)>(r0);

        r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLayoutInflaterFactory mLayoutInflaterFactory> = $r3;

        $r4 = new androidx.fragment.app.FragmentManager$1;

        specialinvoke $r4.<androidx.fragment.app.FragmentManager$1: void <init>(androidx.fragment.app.FragmentManager,boolean)>(r0, 0);

        r0.<androidx.fragment.app.FragmentManager: androidx.activity.OnBackPressedCallback mOnBackPressedCallback> = $r4;

        $r5 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r5.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        r0.<androidx.fragment.app.FragmentManager: java.util.concurrent.atomic.AtomicInteger mBackStackIndex> = $r5;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        $r7 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r6);

        r0.<androidx.fragment.app.FragmentManager: java.util.Map mBackStackStates> = $r7;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        $r9 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r8);

        r0.<androidx.fragment.app.FragmentManager: java.util.Map mResults> = $r9;

        $r10 = new java.util.HashMap;

        specialinvoke $r10.<java.util.HashMap: void <init>()>();

        $r11 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r10);

        r0.<androidx.fragment.app.FragmentManager: java.util.Map mResultListeners> = $r11;

        $r12 = new androidx.fragment.app.FragmentLifecycleCallbacksDispatcher;

        specialinvoke $r12.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void <init>(androidx.fragment.app.FragmentManager)>(r0);

        r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher mLifecycleCallbacksDispatcher> = $r12;

        $r13 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r13.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<androidx.fragment.app.FragmentManager: java.util.concurrent.CopyOnWriteArrayList mOnAttachListeners> = $r13;

        $r14 = dynamicinvoke "accept" <androidx.core.util.Consumer (androidx.fragment.app.FragmentManager)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <androidx.fragment.app.FragmentManager: void lambda$new$0(android.content.res.Configuration)>, methodtype: void __METHODTYPE__(android.content.res.Configuration));

        r0.<androidx.fragment.app.FragmentManager: androidx.core.util.Consumer mOnConfigurationChangedListener> = $r14;

        $r15 = dynamicinvoke "accept" <androidx.core.util.Consumer (androidx.fragment.app.FragmentManager)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <androidx.fragment.app.FragmentManager: void lambda$new$1(java.lang.Integer)>, methodtype: void __METHODTYPE__(java.lang.Integer));

        r0.<androidx.fragment.app.FragmentManager: androidx.core.util.Consumer mOnTrimMemoryListener> = $r15;

        $r16 = dynamicinvoke "accept" <androidx.core.util.Consumer (androidx.fragment.app.FragmentManager)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <androidx.fragment.app.FragmentManager: void lambda$new$2(androidx.core.app.MultiWindowModeChangedInfo)>, methodtype: void __METHODTYPE__(androidx.core.app.MultiWindowModeChangedInfo));

        r0.<androidx.fragment.app.FragmentManager: androidx.core.util.Consumer mOnMultiWindowModeChangedListener> = $r16;

        $r17 = dynamicinvoke "accept" <androidx.core.util.Consumer (androidx.fragment.app.FragmentManager)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <androidx.fragment.app.FragmentManager: void lambda$new$3(androidx.core.app.PictureInPictureModeChangedInfo)>, methodtype: void __METHODTYPE__(androidx.core.app.PictureInPictureModeChangedInfo));

        r0.<androidx.fragment.app.FragmentManager: androidx.core.util.Consumer mOnPictureInPictureModeChangedListener> = $r17;

        $r18 = new androidx.fragment.app.FragmentManager$2;

        specialinvoke $r18.<androidx.fragment.app.FragmentManager$2: void <init>(androidx.fragment.app.FragmentManager)>(r0);

        r0.<androidx.fragment.app.FragmentManager: androidx.core.view.MenuProvider mMenuProvider> = $r18;

        r0.<androidx.fragment.app.FragmentManager: int mCurState> = -1;

        r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory mFragmentFactory> = null;

        $r19 = new androidx.fragment.app.FragmentManager$3;

        specialinvoke $r19.<androidx.fragment.app.FragmentManager$3: void <init>(androidx.fragment.app.FragmentManager)>(r0);

        r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory mHostFragmentFactory> = $r19;

        r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.SpecialEffectsControllerFactory mSpecialEffectsControllerFactory> = null;

        $r20 = new androidx.fragment.app.FragmentManager$4;

        specialinvoke $r20.<androidx.fragment.app.FragmentManager$4: void <init>(androidx.fragment.app.FragmentManager)>(r0);

        r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.SpecialEffectsControllerFactory mDefaultSpecialEffectsControllerFactory> = $r20;

        $r21 = new java.util.ArrayDeque;

        specialinvoke $r21.<java.util.ArrayDeque: void <init>()>();

        r0.<androidx.fragment.app.FragmentManager: java.util.ArrayDeque mLaunchedFragments> = $r21;

        $r22 = new androidx.fragment.app.FragmentManager$5;

        specialinvoke $r22.<androidx.fragment.app.FragmentManager$5: void <init>(androidx.fragment.app.FragmentManager)>(r0);

        r0.<androidx.fragment.app.FragmentManager: java.lang.Runnable mExecCommit> = $r22;

        return;
    }

    public static void enableDebugLogging(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <androidx.fragment.app.FragmentManager: boolean DEBUG> = z0;

        return;
    }

    public static boolean isLoggingEnabled(int)
    {
        int i0;
        boolean $z0, $z1, $z2;

        i0 := @parameter0: int;

        $z0 = <androidx.fragment.app.FragmentManager: boolean DEBUG>;

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("FragmentManager", i0);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    private void throwException(java.lang.RuntimeException)
    {
        androidx.fragment.app.FragmentManager r0;
        java.lang.RuntimeException r1;
        androidx.fragment.app.LogWriter r2, r15;
        java.io.PrintWriter r3, r16;
        java.lang.String $r4;
        androidx.fragment.app.FragmentHostCallback $r7, $r10;
        java.lang.String[] $r8, $r9;
        java.lang.Throwable $r11, $r12, r13, r14, r17;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: java.lang.RuntimeException;

        $r4 = virtualinvoke r1.<java.lang.RuntimeException: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FragmentManager", $r4);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FragmentManager", "Activity state:");

        r15 = new androidx.fragment.app.LogWriter;

        specialinvoke r15.<androidx.fragment.app.LogWriter: void <init>(java.lang.String)>("FragmentManager");

        r2 = r15;

        r16 = new java.io.PrintWriter;

        specialinvoke r16.<java.io.PrintWriter: void <init>(java.io.Writer)>(r2);

        r3 = r16;

        $r7 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        if $r7 == null goto label4;

     label1:
        $r10 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $r9 = newarray (java.lang.String)[0];

        virtualinvoke $r10.<androidx.fragment.app.FragmentHostCallback: void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>("  ", null, r3, $r9);

     label2:
        goto label7;

     label3:
        $r11 := @caughtexception;

        r13 = $r11;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("FragmentManager", "Failed dumping state", r13);

        goto label7;

     label4:
        $r8 = newarray (java.lang.String)[0];

        virtualinvoke r0.<androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>("  ", null, r3, $r8);

     label5:
        goto label7;

     label6:
        $r12 := @caughtexception;

        r14 = $r12;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("FragmentManager", "Failed dumping state", r14);

     label7:
        r17 = (java.lang.Throwable) r1;

        throw r17;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    public androidx.fragment.app.FragmentTransaction openTransaction()
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.FragmentTransaction $r1;

        r0 := @this: androidx.fragment.app.FragmentManager;

        $r1 = virtualinvoke r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()>();

        return $r1;
    }

    public androidx.fragment.app.FragmentTransaction beginTransaction()
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.BackStackRecord $r1;

        r0 := @this: androidx.fragment.app.FragmentManager;

        $r1 = new androidx.fragment.app.BackStackRecord;

        specialinvoke $r1.<androidx.fragment.app.BackStackRecord: void <init>(androidx.fragment.app.FragmentManager)>(r0);

        return $r1;
    }

    public boolean executePendingTransactions()
    {
        androidx.fragment.app.FragmentManager r0;
        boolean z0;

        r0 := @this: androidx.fragment.app.FragmentManager;

        z0 = virtualinvoke r0.<androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>(1);

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void forcePostponedTransactions()>();

        return z0;
    }

    private void updateOnBackPressedCallbackEnabled()
    {
        androidx.fragment.app.FragmentManager r0;
        java.util.ArrayList r1, $r3, $r4;
        java.lang.Throwable r2, $r7;
        boolean $z0, $z1, $z2;
        int $i0;
        androidx.fragment.app.Fragment $r5;
        androidx.activity.OnBackPressedCallback $r6, $r8;

        r0 := @this: androidx.fragment.app.FragmentManager;

        $r3 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mPendingActions>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mPendingActions>;

        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $r6 = r0.<androidx.fragment.app.FragmentManager: androidx.activity.OnBackPressedCallback mOnBackPressedCallback>;

        virtualinvoke $r6.<androidx.activity.OnBackPressedCallback: void setEnabled(boolean)>(1);

        exitmonitor r1;

     label2:
        return;

     label3:
        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        $r8 = r0.<androidx.fragment.app.FragmentManager: androidx.activity.OnBackPressedCallback mOnBackPressedCallback>;

        $i0 = virtualinvoke r0.<androidx.fragment.app.FragmentManager: int getBackStackEntryCount()>();

        if $i0 <= 0 goto label8;

        $r5 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mParent>;

        $z1 = virtualinvoke r0.<androidx.fragment.app.FragmentManager: boolean isPrimaryNavigation(androidx.fragment.app.Fragment)>($r5);

        if $z1 == 0 goto label8;

        $z2 = 1;

        goto label9;

     label8:
        $z2 = 0;

     label9:
        virtualinvoke $r8.<androidx.activity.OnBackPressedCallback: void setEnabled(boolean)>($z2);

        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    boolean isPrimaryNavigation(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManager r0, r2;
        androidx.fragment.app.Fragment r1, r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        if r1 != null goto label1;

        return 1;

     label1:
        r2 = r1.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mFragmentManager>;

        r3 = virtualinvoke r2.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getPrimaryNavigationFragment()>();

        $z0 = virtualinvoke r1.<androidx.fragment.app.Fragment: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label2;

        $r4 = r2.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mParent>;

        $z1 = virtualinvoke r0.<androidx.fragment.app.FragmentManager: boolean isPrimaryNavigation(androidx.fragment.app.Fragment)>($r4);

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    boolean isParentMenuVisible(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.Fragment r1;
        boolean $z0;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        if r1 != null goto label1;

        return 1;

     label1:
        $z0 = virtualinvoke r1.<androidx.fragment.app.Fragment: boolean isMenuVisible()>();

        return $z0;
    }

    boolean isParentHidden(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.Fragment r1;
        boolean $z0;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        if r1 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r1.<androidx.fragment.app.Fragment: boolean isHidden()>();

        return $z0;
    }

    void handleOnBackPressed()
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.activity.OnBackPressedCallback $r1;
        boolean $z1;
        androidx.activity.OnBackPressedDispatcher $r2;

        r0 := @this: androidx.fragment.app.FragmentManager;

        virtualinvoke r0.<androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>(1);

        $r1 = r0.<androidx.fragment.app.FragmentManager: androidx.activity.OnBackPressedCallback mOnBackPressedCallback>;

        $z1 = virtualinvoke $r1.<androidx.activity.OnBackPressedCallback: boolean isEnabled()>();

        if $z1 == 0 goto label1;

        virtualinvoke r0.<androidx.fragment.app.FragmentManager: boolean popBackStackImmediate()>();

        goto label2;

     label1:
        $r2 = r0.<androidx.fragment.app.FragmentManager: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher>;

        virtualinvoke $r2.<androidx.activity.OnBackPressedDispatcher: void onBackPressed()>();

     label2:
        return;
    }

    public void restoreBackStack(java.lang.String)
    {
        androidx.fragment.app.FragmentManager r0;
        java.lang.String r1;
        androidx.fragment.app.FragmentManager$RestoreBackStackState $r2;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: java.lang.String;

        $r2 = new androidx.fragment.app.FragmentManager$RestoreBackStackState;

        specialinvoke $r2.<androidx.fragment.app.FragmentManager$RestoreBackStackState: void <init>(androidx.fragment.app.FragmentManager,java.lang.String)>(r0, r1);

        virtualinvoke r0.<androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>($r2, 0);

        return;
    }

    public void saveBackStack(java.lang.String)
    {
        androidx.fragment.app.FragmentManager r0;
        java.lang.String r1;
        androidx.fragment.app.FragmentManager$SaveBackStackState $r2;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: java.lang.String;

        $r2 = new androidx.fragment.app.FragmentManager$SaveBackStackState;

        specialinvoke $r2.<androidx.fragment.app.FragmentManager$SaveBackStackState: void <init>(androidx.fragment.app.FragmentManager,java.lang.String)>(r0, r1);

        virtualinvoke r0.<androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>($r2, 0);

        return;
    }

    public void clearBackStack(java.lang.String)
    {
        androidx.fragment.app.FragmentManager r0;
        java.lang.String r1;
        androidx.fragment.app.FragmentManager$ClearBackStackState $r2;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: java.lang.String;

        $r2 = new androidx.fragment.app.FragmentManager$ClearBackStackState;

        specialinvoke $r2.<androidx.fragment.app.FragmentManager$ClearBackStackState: void <init>(androidx.fragment.app.FragmentManager,java.lang.String)>(r0, r1);

        virtualinvoke r0.<androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>($r2, 0);

        return;
    }

    public void popBackStack()
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.FragmentManager$PopBackStackState $r1;

        r0 := @this: androidx.fragment.app.FragmentManager;

        $r1 = new androidx.fragment.app.FragmentManager$PopBackStackState;

        specialinvoke $r1.<androidx.fragment.app.FragmentManager$PopBackStackState: void <init>(androidx.fragment.app.FragmentManager,java.lang.String,int,int)>(r0, null, -1, 0);

        virtualinvoke r0.<androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>($r1, 0);

        return;
    }

    public boolean popBackStackImmediate()
    {
        androidx.fragment.app.FragmentManager r0;
        boolean $z0;

        r0 := @this: androidx.fragment.app.FragmentManager;

        $z0 = specialinvoke r0.<androidx.fragment.app.FragmentManager: boolean popBackStackImmediate(java.lang.String,int,int)>(null, -1, 0);

        return $z0;
    }

    public void popBackStack(java.lang.String, int)
    {
        androidx.fragment.app.FragmentManager r0;
        java.lang.String r1;
        int i0;
        androidx.fragment.app.FragmentManager$PopBackStackState $r2;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = new androidx.fragment.app.FragmentManager$PopBackStackState;

        specialinvoke $r2.<androidx.fragment.app.FragmentManager$PopBackStackState: void <init>(androidx.fragment.app.FragmentManager,java.lang.String,int,int)>(r0, r1, -1, i0);

        virtualinvoke r0.<androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>($r2, 0);

        return;
    }

    public boolean popBackStackImmediate(java.lang.String, int)
    {
        androidx.fragment.app.FragmentManager r0;
        java.lang.String r1;
        int i0;
        boolean $z0;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<androidx.fragment.app.FragmentManager: boolean popBackStackImmediate(java.lang.String,int,int)>(r1, -1, i0);

        return $z0;
    }

    public void popBackStack(int, int)
    {
        androidx.fragment.app.FragmentManager r0;
        int i0, i1;

        r0 := @this: androidx.fragment.app.FragmentManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<androidx.fragment.app.FragmentManager: void popBackStack(int,int,boolean)>(i0, i1, 0);

        return;
    }

    void popBackStack(int, int, boolean)
    {
        androidx.fragment.app.FragmentManager r0;
        int i0, i1;
        boolean z0;
        androidx.fragment.app.FragmentManager$PopBackStackState $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: androidx.fragment.app.FragmentManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        if i0 >= 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad id: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label1:
        $r1 = new androidx.fragment.app.FragmentManager$PopBackStackState;

        specialinvoke $r1.<androidx.fragment.app.FragmentManager$PopBackStackState: void <init>(androidx.fragment.app.FragmentManager,java.lang.String,int,int)>(r0, null, i0, i1);

        virtualinvoke r0.<androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)>($r1, z0);

        return;
    }

    public boolean popBackStackImmediate(int, int)
    {
        androidx.fragment.app.FragmentManager r0;
        int i0, i1;
        boolean $z0;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: androidx.fragment.app.FragmentManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 >= 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad id: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label1:
        $z0 = specialinvoke r0.<androidx.fragment.app.FragmentManager: boolean popBackStackImmediate(java.lang.String,int,int)>(null, i0, i1);

        return $z0;
    }

    private boolean popBackStackImmediate(java.lang.String, int, int)
    {
        androidx.fragment.app.FragmentManager r0, r9;
        java.lang.String r1;
        int i0, i1;
        java.lang.Throwable r2, $r8;
        androidx.fragment.app.Fragment $r3, $r7;
        androidx.fragment.app.FragmentStore $r4;
        java.util.ArrayList $r5, $r6, $r10, $r11;
        boolean $z1, z2;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>(0);

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void ensureExecReady(boolean)>(1);

        $r3 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mPrimaryNav>;

        if $r3 == null goto label1;

        if i0 >= 0 goto label1;

        if r1 != null goto label1;

        $r7 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mPrimaryNav>;

        r9 = virtualinvoke $r7.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getChildFragmentManager()>();

        $z1 = virtualinvoke r9.<androidx.fragment.app.FragmentManager: boolean popBackStackImmediate()>();

        if $z1 == 0 goto label1;

        return 1;

     label1:
        $r10 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpRecords>;

        $r11 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpIsPop>;

        z2 = virtualinvoke r0.<androidx.fragment.app.FragmentManager: boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int)>($r10, $r11, r1, i0, i1);

        if z2 == 0 goto label6;

        r0.<androidx.fragment.app.FragmentManager: boolean mExecutingActions> = 1;

     label2:
        $r6 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpRecords>;

        $r5 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpIsPop>;

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>($r6, $r5);

     label3:
        specialinvoke r0.<androidx.fragment.app.FragmentManager: void cleanupExec()>();

        goto label6;

     label4:
        $r8 := @caughtexception;

        r2 = $r8;

     label5:
        specialinvoke r0.<androidx.fragment.app.FragmentManager: void cleanupExec()>();

        throw r2;

     label6:
        specialinvoke r0.<androidx.fragment.app.FragmentManager: void updateOnBackPressedCallbackEnabled()>();

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>();

        $r4 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        virtualinvoke $r4.<androidx.fragment.app.FragmentStore: void burpActive()>();

        return z2;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int getBackStackEntryCount()
    {
        androidx.fragment.app.FragmentManager r0;
        java.util.ArrayList $r1, $r2;
        int $i0;

        r0 := @this: androidx.fragment.app.FragmentManager;

        $r1 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public androidx.fragment.app.FragmentManager$BackStackEntry getBackStackEntryAt(int)
    {
        androidx.fragment.app.FragmentManager r0;
        int i0;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        androidx.fragment.app.FragmentManager$BackStackEntry $r3;

        r0 := @this: androidx.fragment.app.FragmentManager;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r3 = (androidx.fragment.app.FragmentManager$BackStackEntry) $r2;

        return $r3;
    }

    public void addOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.FragmentManager$OnBackStackChangedListener r1;
        java.util.ArrayList $r2, $r3, $r4;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.FragmentManager$OnBackStackChangedListener;

        $r2 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStackChangeListeners>;

        if $r2 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStackChangeListeners> = $r4;

     label1:
        $r3 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStackChangeListeners>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void removeOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.FragmentManager$OnBackStackChangedListener r1;
        java.util.ArrayList $r2, $r3;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.FragmentManager$OnBackStackChangedListener;

        $r2 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStackChangeListeners>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStackChangeListeners>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

     label1:
        return;
    }

    public final void setFragmentResult(java.lang.String, android.os.Bundle)
    {
        androidx.fragment.app.FragmentManager r0;
        java.lang.String r1, $r13;
        android.os.Bundle r2;
        androidx.fragment.app.FragmentManager$LifecycleAwareResultListener r3;
        java.util.Map $r4, $r6;
        java.lang.Object $r5;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12;
        androidx.lifecycle.Lifecycle$State $r14;
        boolean $z0, $z1;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        $r4 = r0.<androidx.fragment.app.FragmentManager: java.util.Map mResultListeners>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (androidx.fragment.app.FragmentManager$LifecycleAwareResultListener) $r5;

        if r3 == null goto label1;

        $r14 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State STARTED>;

        $z0 = virtualinvoke r3.<androidx.fragment.app.FragmentManager$LifecycleAwareResultListener: boolean isAtLeast(androidx.lifecycle.Lifecycle$State)>($r14);

        if $z0 == 0 goto label1;

        virtualinvoke r3.<androidx.fragment.app.FragmentManager$LifecycleAwareResultListener: void onFragmentResult(java.lang.String,android.os.Bundle)>(r1, r2);

        goto label2;

     label1:
        $r6 = r0.<androidx.fragment.app.FragmentManager: java.util.Map mResults>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

     label2:
        $z1 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2);

        if $z1 == 0 goto label3;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting fragment result with key ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and result ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r13);

     label3:
        return;
    }

    public final void clearFragmentResult(java.lang.String)
    {
        androidx.fragment.app.FragmentManager r0;
        java.lang.String r1, $r7;
        java.util.Map $r2;
        boolean $z0;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.fragment.app.FragmentManager: java.util.Map mResults>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2);

        if $z0 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Clearing fragment result with key ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r7);

     label1:
        return;
    }

    public final void setFragmentResultListener(java.lang.String, androidx.lifecycle.LifecycleOwner, androidx.fragment.app.FragmentResultListener)
    {
        androidx.fragment.app.FragmentManager r0;
        java.lang.String r1, $r20;
        androidx.lifecycle.LifecycleOwner r2;
        androidx.fragment.app.FragmentResultListener r3;
        androidx.lifecycle.Lifecycle r4;
        androidx.fragment.app.FragmentManager$6 r5, r21;
        androidx.fragment.app.FragmentManager$LifecycleAwareResultListener r6, r22;
        androidx.lifecycle.Lifecycle$State $r7, $r8;
        java.util.Map $r11;
        java.lang.Object $r12;
        boolean $z0;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r18, $r19, r23;
        androidx.lifecycle.LifecycleObserver r24;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.lifecycle.LifecycleOwner;

        r3 := @parameter2: androidx.fragment.app.FragmentResultListener;

        r4 = interfaceinvoke r2.<androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>();

        $r7 = virtualinvoke r4.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r8 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED>;

        if $r7 != $r8 goto label1;

        return;

     label1:
        r21 = new androidx.fragment.app.FragmentManager$6;

        specialinvoke r21.<androidx.fragment.app.FragmentManager$6: void <init>(androidx.fragment.app.FragmentManager,java.lang.String,androidx.fragment.app.FragmentResultListener,androidx.lifecycle.Lifecycle)>(r0, r1, r3, r4);

        r5 = r21;

        r24 = (androidx.lifecycle.LifecycleObserver) r5;

        virtualinvoke r4.<androidx.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)>(r24);

        $r11 = r0.<androidx.fragment.app.FragmentManager: java.util.Map mResultListeners>;

        r22 = new androidx.fragment.app.FragmentManager$LifecycleAwareResultListener;

        specialinvoke r22.<androidx.fragment.app.FragmentManager$LifecycleAwareResultListener: void <init>(androidx.lifecycle.Lifecycle,androidx.fragment.app.FragmentResultListener,androidx.lifecycle.LifecycleEventObserver)>(r4, r3, r5);

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r22);

        r6 = (androidx.fragment.app.FragmentManager$LifecycleAwareResultListener) $r12;

        if r6 == null goto label2;

        virtualinvoke r6.<androidx.fragment.app.FragmentManager$LifecycleAwareResultListener: void removeObserver()>();

     label2:
        $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2);

        if $z0 == 0 goto label3;

        r23 = new java.lang.StringBuilder;

        specialinvoke r23.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting FragmentResultListener with key ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lifecycleOwner ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and listener ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r20);

     label3:
        return;
    }

    public final void clearFragmentResultListener(java.lang.String)
    {
        androidx.fragment.app.FragmentManager r0;
        java.lang.String r1, $r8;
        androidx.fragment.app.FragmentManager$LifecycleAwareResultListener r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        boolean $z0;
        java.lang.StringBuilder $r5, $r6, $r7;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<androidx.fragment.app.FragmentManager: java.util.Map mResultListeners>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r2 = (androidx.fragment.app.FragmentManager$LifecycleAwareResultListener) $r4;

        if r2 == null goto label1;

        virtualinvoke r2.<androidx.fragment.app.FragmentManager$LifecycleAwareResultListener: void removeObserver()>();

     label1:
        $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2);

        if $z0 == 0 goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Clearing FragmentResultListener for key ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r8);

     label2:
        return;
    }

    public void putFragment(android.os.Bundle, java.lang.String, androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManager r0, $r4;
        android.os.Bundle r1;
        java.lang.String r2, $r5, $r11;
        androidx.fragment.app.Fragment r3;
        java.lang.IllegalStateException $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.fragment.app.Fragment;

        $r4 = r3.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mFragmentManager>;

        if $r4 == r0 goto label1;

        $r6 = new java.lang.IllegalStateException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not currently in the FragmentManager");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>($r6);

     label1:
        $r5 = r3.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        virtualinvoke r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>(r2, $r5);

        return;
    }

    public androidx.fragment.app.Fragment getFragment(android.os.Bundle, java.lang.String)
    {
        androidx.fragment.app.FragmentManager r0;
        android.os.Bundle r1;
        java.lang.String r2, r3, $r11;
        androidx.fragment.app.Fragment r4;
        java.lang.IllegalStateException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: java.lang.String;

        r3 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(r2);

        if r3 != null goto label1;

        return null;

     label1:
        r4 = virtualinvoke r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findActiveFragment(java.lang.String)>(r3);

        if r4 != null goto label2;

        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment no longer exists for key ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": unique id ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>($r5);

     label2:
        return r4;
    }

    public static androidx.fragment.app.Fragment findFragment(android.view.View)
    {
        android.view.View r0;
        androidx.fragment.app.Fragment r1;
        java.lang.IllegalStateException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @parameter0: android.view.View;

        r1 = staticinvoke <androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findViewFragment(android.view.View)>(r0);

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have a Fragment set");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label1:
        return r1;
    }

    private static androidx.fragment.app.Fragment findViewFragment(android.view.View)
    {
        androidx.fragment.app.Fragment r0;
        android.view.ViewParent r1;
        boolean $z0;
        android.view.View r2, $r3;

        r2 := @parameter0: android.view.View;

     label1:
        if r2 == null goto label5;

        r0 = staticinvoke <androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getViewFragment(android.view.View)>(r2);

        if r0 == null goto label2;

        return r0;

     label2:
        r1 = virtualinvoke r2.<android.view.View: android.view.ViewParent getParent()>();

        $z0 = r1 instanceof android.view.View;

        if $z0 == 0 goto label3;

        $r3 = (android.view.View) r1;

        goto label4;

     label3:
        $r3 = null;

     label4:
        r2 = $r3;

        goto label1;

     label5:
        return null;
    }

    static androidx.fragment.app.Fragment getViewFragment(android.view.View)
    {
        android.view.View r0;
        java.lang.Object r1;
        int $i0;
        boolean $z0;
        androidx.fragment.app.Fragment $r2;

        r0 := @parameter0: android.view.View;

        $i0 = <androidx.fragment.R$id: int fragment_container_view_tag>;

        r1 = virtualinvoke r0.<android.view.View: java.lang.Object getTag(int)>($i0);

        $z0 = r1 instanceof androidx.fragment.app.Fragment;

        if $z0 == 0 goto label1;

        $r2 = (androidx.fragment.app.Fragment) r1;

        return $r2;

     label1:
        return null;
    }

    void onContainerAvailable(androidx.fragment.app.FragmentContainerView)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.FragmentContainerView r1;
        java.util.Iterator r2;
        androidx.fragment.app.FragmentStateManager r3;
        androidx.fragment.app.Fragment r4;
        androidx.fragment.app.FragmentStore $r5;
        java.util.List $r6;
        boolean $z0;
        java.lang.Object $r7;
        int $i0, $i1;
        android.view.View $r8, $r9;
        android.view.ViewParent $r10;
        android.view.ViewGroup r11;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.FragmentContainerView;

        $r5 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        $r6 = virtualinvoke $r5.<androidx.fragment.app.FragmentStore: java.util.List getActiveFragmentStateManagers()>();

        r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.fragment.app.FragmentStateManager) $r7;

        r4 = virtualinvoke r3.<androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment getFragment()>();

        $i0 = r4.<androidx.fragment.app.Fragment: int mContainerId>;

        $i1 = virtualinvoke r1.<androidx.fragment.app.FragmentContainerView: int getId()>();

        if $i0 != $i1 goto label2;

        $r8 = r4.<androidx.fragment.app.Fragment: android.view.View mView>;

        if $r8 == null goto label2;

        $r9 = r4.<androidx.fragment.app.Fragment: android.view.View mView>;

        $r10 = virtualinvoke $r9.<android.view.View: android.view.ViewParent getParent()>();

        if $r10 != null goto label2;

        r11 = (android.view.ViewGroup) r1;

        r4.<androidx.fragment.app.Fragment: android.view.ViewGroup mContainer> = r11;

        virtualinvoke r3.<androidx.fragment.app.FragmentStateManager: void addViewToContainer()>();

     label2:
        goto label1;

     label3:
        return;
    }

    static androidx.fragment.app.FragmentManager findFragmentManager(android.view.View)
    {
        android.view.View r0;
        androidx.fragment.app.Fragment r1;
        boolean $z0, $z1, $z2;
        java.lang.IllegalStateException $r2, $r9;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r10, $r11, $r12, $r13, $r14, $r15;
        java.lang.String $r7, $r16;
        android.content.ContextWrapper $r8;
        androidx.fragment.app.FragmentManager r17;
        android.content.Context r18;
        androidx.fragment.app.FragmentActivity r19;

        r0 := @parameter0: android.view.View;

        r1 = staticinvoke <androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findViewFragment(android.view.View)>(r0);

        if r1 == null goto label2;

        $z2 = virtualinvoke r1.<androidx.fragment.app.Fragment: boolean isAdded()>();

        if $z2 != 0 goto label1;

        $r9 = new java.lang.IllegalStateException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The Fragment ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that owns View ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has already been destroyed. Nested fragments should always use the child FragmentManager.");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r16);

        throw $r9;

     label1:
        r17 = virtualinvoke r1.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getChildFragmentManager()>();

        goto label7;

     label2:
        r18 = virtualinvoke r0.<android.view.View: android.content.Context getContext()>();

        r19 = null;

     label3:
        $z0 = r18 instanceof android.content.ContextWrapper;

        if $z0 == 0 goto label5;

        $z1 = r18 instanceof androidx.fragment.app.FragmentActivity;

        if $z1 == 0 goto label4;

        r19 = (androidx.fragment.app.FragmentActivity) r18;

        goto label5;

     label4:
        $r8 = (android.content.ContextWrapper) r18;

        r18 = virtualinvoke $r8.<android.content.ContextWrapper: android.content.Context getBaseContext()>();

        goto label3;

     label5:
        if r19 == null goto label6;

        r17 = virtualinvoke r19.<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()>();

        goto label7;

     label6:
        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not within a subclass of FragmentActivity.");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label7:
        return r17;
    }

    public java.util.List getFragments()
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.FragmentStore $r1;
        java.util.List $r2;

        r0 := @this: androidx.fragment.app.FragmentManager;

        $r1 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        $r2 = virtualinvoke $r1.<androidx.fragment.app.FragmentStore: java.util.List getFragments()>();

        return $r2;
    }

    androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.Fragment r1;
        androidx.fragment.app.FragmentManagerViewModel $r2;
        androidx.lifecycle.ViewModelStore $r3;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        $r2 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerViewModel mNonConfig>;

        $r3 = virtualinvoke $r2.<androidx.fragment.app.FragmentManagerViewModel: androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)>(r1);

        return $r3;
    }

    private androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.Fragment r1;
        androidx.fragment.app.FragmentManagerViewModel $r2, $r3;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        $r2 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerViewModel mNonConfig>;

        $r3 = virtualinvoke $r2.<androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)>(r1);

        return $r3;
    }

    void addRetainedFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.Fragment r1;
        androidx.fragment.app.FragmentManagerViewModel $r2;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        $r2 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerViewModel mNonConfig>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentManagerViewModel: void addRetainedFragment(androidx.fragment.app.Fragment)>(r1);

        return;
    }

    void removeRetainedFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.Fragment r1;
        androidx.fragment.app.FragmentManagerViewModel $r2;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        $r2 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerViewModel mNonConfig>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentManagerViewModel: void removeRetainedFragment(androidx.fragment.app.Fragment)>(r1);

        return;
    }

    java.util.List getActiveFragments()
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.FragmentStore $r1;
        java.util.List $r2;

        r0 := @this: androidx.fragment.app.FragmentManager;

        $r1 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        $r2 = virtualinvoke $r1.<androidx.fragment.app.FragmentStore: java.util.List getActiveFragments()>();

        return $r2;
    }

    int getActiveFragmentCount()
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.FragmentStore $r1;
        int $i0;

        r0 := @this: androidx.fragment.app.FragmentManager;

        $r1 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        $i0 = virtualinvoke $r1.<androidx.fragment.app.FragmentStore: int getActiveFragmentCount()>();

        return $i0;
    }

    public androidx.fragment.app.Fragment$SavedState saveFragmentInstanceState(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.Fragment r1, $r11;
        androidx.fragment.app.FragmentStateManager r2;
        java.lang.String $r3, $r10;
        androidx.fragment.app.FragmentStore $r4;
        java.lang.IllegalStateException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;
        boolean $z0;
        androidx.fragment.app.Fragment$SavedState $r12;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        $r4 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        $r3 = r1.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        r2 = virtualinvoke $r4.<androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentStateManager getFragmentStateManager(java.lang.String)>($r3);

        if r2 == null goto label1;

        $r11 = virtualinvoke r2.<androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment getFragment()>();

        $z0 = virtualinvoke $r11.<androidx.fragment.app.Fragment: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

     label1:
        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not currently in the FragmentManager");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>($r5);

     label2:
        $r12 = virtualinvoke r2.<androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment$SavedState saveInstanceState()>();

        return $r12;
    }

    private void clearBackStackStateViewModels()
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.BackStackState r1;
        java.util.Iterator r2, r19;
        java.lang.String r3;
        androidx.fragment.app.FragmentHostCallback $r4, $r5, $r14;
        boolean $z0, $z1, $z2, $z3, $z4, z5, $z6;
        android.content.Context $r6, $r15;
        java.util.Map $r7;
        java.util.Collection $r8;
        java.lang.Object $r9, $r11;
        java.util.List $r10;
        androidx.fragment.app.FragmentStore $r12, $r16;
        androidx.fragment.app.FragmentManagerViewModel $r13, $r17;
        android.app.Activity r18;

        r0 := @this: androidx.fragment.app.FragmentManager;

        $r4 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $z0 = $r4 instanceof androidx.lifecycle.ViewModelStoreOwner;

        if $z0 == 0 goto label1;

        $r16 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        $r17 = virtualinvoke $r16.<androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentManagerViewModel getNonConfig()>();

        z5 = virtualinvoke $r17.<androidx.fragment.app.FragmentManagerViewModel: boolean isCleared()>();

        goto label5;

     label1:
        $r5 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $r6 = virtualinvoke $r5.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        $z1 = $r6 instanceof android.app.Activity;

        if $z1 == 0 goto label4;

        $r14 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $r15 = virtualinvoke $r14.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        r18 = (android.app.Activity) $r15;

        $z4 = virtualinvoke r18.<android.app.Activity: boolean isChangingConfigurations()>();

        if $z4 != 0 goto label2;

        $z6 = 1;

        goto label3;

     label2:
        $z6 = 0;

     label3:
        z5 = $z6;

        goto label5;

     label4:
        z5 = 1;

     label5:
        if z5 == 0 goto label9;

        $r7 = r0.<androidx.fragment.app.FragmentManager: java.util.Map mBackStackStates>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Collection values()>();

        r19 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label6:
        $z2 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label9;

        $r9 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r1 = (androidx.fragment.app.BackStackState) $r9;

        $r10 = r1.<androidx.fragment.app.BackStackState: java.util.List mFragments>;

        r2 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label7:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label8;

        $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r11;

        $r12 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        $r13 = virtualinvoke $r12.<androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentManagerViewModel getNonConfig()>();

        virtualinvoke $r13.<androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigState(java.lang.String)>(r3);

        goto label7;

     label8:
        goto label6;

     label9:
        return;
    }

    public boolean isDestroyed()
    {
        androidx.fragment.app.FragmentManager r0;
        boolean $z0;

        r0 := @this: androidx.fragment.app.FragmentManager;

        $z0 = r0.<androidx.fragment.app.FragmentManager: boolean mDestroyed>;

        return $z0;
    }

    public java.lang.String toString()
    {
        androidx.fragment.app.FragmentManager r0;
        java.lang.StringBuilder r1, $r2;
        int $i0, $i1, $i2;
        java.lang.String $r4, $r12, $r16, $r20, $r24, $r29;
        androidx.fragment.app.Fragment $r7, $r19, $r23;
        androidx.fragment.app.FragmentHostCallback $r8, $r11, $r15;
        java.lang.Class r27, r28;

        r0 := @this: androidx.fragment.app.FragmentManager;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(128);

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FragmentManager{");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r7 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mParent>;

        if $r7 == null goto label1;

        $r19 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mParent>;

        r27 = virtualinvoke $r19.<java.lang.Object: java.lang.Class getClass()>();

        $r20 = virtualinvoke r27.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        $r23 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mParent>;

        $i2 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r23);

        $r24 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        goto label3;

     label1:
        $r8 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        if $r8 == null goto label2;

        $r11 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        r28 = virtualinvoke $r11.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke r28.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        $r15 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $i1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r15);

        $r16 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        goto label3;

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("null");

     label3:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}}");

        $r29 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r29;
    }

    public void dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        androidx.fragment.app.FragmentManager r0;
        java.lang.String r1, r5, $r22, $r26, $r35;
        java.io.FileDescriptor r2;
        java.io.PrintWriter r3;
        java.lang.String[] r4;
        androidx.fragment.app.FragmentManager$OpGenerator r6;
        java.lang.Throwable r7, $r27;
        java.lang.StringBuilder $r8, $r9, $r10, $r31, $r32, $r34;
        androidx.fragment.app.FragmentStore $r11;
        java.util.ArrayList $r12, $r17, $r19, $r20, $r23, $r24, $r29, $r36, r37, $r38;
        androidx.fragment.app.FragmentHostCallback $r13;
        androidx.fragment.app.FragmentContainer $r14;
        androidx.fragment.app.Fragment $r15, $r16, r28;
        int $i0, i1, i2, i3, i4, $i5, i6, i7;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object $r18, $r21, $r25;
        androidx.fragment.app.BackStackRecord r30;
        java.util.concurrent.atomic.AtomicInteger $r33;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.PrintWriter;

        r4 := @parameter3: java.lang.String[];

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        virtualinvoke $r11.<androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3, r4);

        $r12 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mCreatedMenus>;

        if $r12 == null goto label02;

        $r23 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mCreatedMenus>;

        i1 = virtualinvoke $r23.<java.util.ArrayList: int size()>();

        if i1 <= 0 goto label02;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>("Fragments Created Menus:");

        i2 = 0;

     label01:
        if i2 >= i1 goto label02;

        $r24 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mCreatedMenus>;

        $r25 = virtualinvoke $r24.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r28 = (androidx.fragment.app.Fragment) $r25;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("  #");

        virtualinvoke r3.<java.io.PrintWriter: void print(int)>(i2);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $r26 = virtualinvoke r28.<androidx.fragment.app.Fragment: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>($r26);

        i2 = i2 + 1;

        goto label01;

     label02:
        $r29 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack>;

        if $r29 == null goto label04;

        $r19 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack>;

        i3 = virtualinvoke $r19.<java.util.ArrayList: int size()>();

        if i3 <= 0 goto label04;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>("Back Stack:");

        i4 = 0;

     label03:
        if i4 >= i3 goto label04;

        $r20 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack>;

        $r21 = virtualinvoke $r20.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r30 = (androidx.fragment.app.BackStackRecord) $r21;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("  #");

        virtualinvoke r3.<java.io.PrintWriter: void print(int)>(i4);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $r22 = virtualinvoke r30.<androidx.fragment.app.BackStackRecord: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>($r22);

        virtualinvoke r30.<androidx.fragment.app.BackStackRecord: void dump(java.lang.String,java.io.PrintWriter)>(r5, r3);

        i4 = i4 + 1;

        goto label03;

     label04:
        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Back Stack Index: ");

        $r33 = r0.<androidx.fragment.app.FragmentManager: java.util.concurrent.atomic.AtomicInteger mBackStackIndex>;

        $i5 = virtualinvoke $r33.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>($r35);

        $r36 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mPendingActions>;

        r37 = $r36;

        entermonitor $r36;

     label05:
        $r38 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mPendingActions>;

        i6 = virtualinvoke $r38.<java.util.ArrayList: int size()>();

        if i6 <= 0 goto label07;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>("Pending Actions:");

        i7 = 0;

     label06:
        if i7 >= i6 goto label07;

        $r17 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mPendingActions>;

        $r18 = virtualinvoke $r17.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r6 = (androidx.fragment.app.FragmentManager$OpGenerator) $r18;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("  #");

        virtualinvoke r3.<java.io.PrintWriter: void print(int)>(i7);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.Object)>(r6);

        i7 = i7 + 1;

        goto label06;

     label07:
        exitmonitor r37;

     label08:
        goto label11;

     label09:
        $r27 := @caughtexception;

        r7 = $r27;

        exitmonitor r37;

     label10:
        throw r7;

     label11:
        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>("FragmentManager misc state:");

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("  mHost=");

        $r13 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.Object)>($r13);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("  mContainer=");

        $r14 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentContainer mContainer>;

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.Object)>($r14);

        $r15 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mParent>;

        if $r15 == null goto label12;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("  mParent=");

        $r16 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mParent>;

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.Object)>($r16);

     label12:
        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("  mCurState=");

        $i0 = r0.<androidx.fragment.app.FragmentManager: int mCurState>;

        virtualinvoke r3.<java.io.PrintWriter: void print(int)>($i0);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mStateSaved=");

        $z0 = r0.<androidx.fragment.app.FragmentManager: boolean mStateSaved>;

        virtualinvoke r3.<java.io.PrintWriter: void print(boolean)>($z0);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mStopped=");

        $z1 = r0.<androidx.fragment.app.FragmentManager: boolean mStopped>;

        virtualinvoke r3.<java.io.PrintWriter: void print(boolean)>($z1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mDestroyed=");

        $z2 = r0.<androidx.fragment.app.FragmentManager: boolean mDestroyed>;

        virtualinvoke r3.<java.io.PrintWriter: void println(boolean)>($z2);

        $z3 = r0.<androidx.fragment.app.FragmentManager: boolean mNeedMenuInvalidate>;

        if $z3 == 0 goto label13;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("  mNeedMenuInvalidate=");

        $z4 = r0.<androidx.fragment.app.FragmentManager: boolean mNeedMenuInvalidate>;

        virtualinvoke r3.<java.io.PrintWriter: void println(boolean)>($z4);

     label13:
        return;

        catch java.lang.Throwable from label05 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.FragmentStateManager r1;
        androidx.fragment.app.Fragment r2;
        boolean $z0, $z1;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.FragmentStateManager;

        r2 = virtualinvoke r1.<androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment getFragment()>();

        $z0 = r2.<androidx.fragment.app.Fragment: boolean mDeferStart>;

        if $z0 == 0 goto label2;

        $z1 = r0.<androidx.fragment.app.FragmentManager: boolean mExecutingActions>;

        if $z1 == 0 goto label1;

        r0.<androidx.fragment.app.FragmentManager: boolean mHavePendingDeferredStart> = 1;

        return;

     label1:
        r2.<androidx.fragment.app.Fragment: boolean mDeferStart> = 0;

        virtualinvoke r1.<androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>();

     label2:
        return;
    }

    boolean isStateAtLeast(int)
    {
        androidx.fragment.app.FragmentManager r0;
        int i0, $i1;
        boolean $z0;

        r0 := @this: androidx.fragment.app.FragmentManager;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.fragment.app.FragmentManager: int mCurState>;

        if $i1 < i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    void setExitAnimationOrder(androidx.fragment.app.Fragment, boolean)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.Fragment r1;
        boolean z0, $z1, $z2;
        android.view.ViewGroup r2;
        androidx.fragment.app.FragmentContainerView $r3;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        z0 := @parameter1: boolean;

        r2 = specialinvoke r0.<androidx.fragment.app.FragmentManager: android.view.ViewGroup getFragmentContainer(androidx.fragment.app.Fragment)>(r1);

        if r2 == null goto label3;

        $z1 = r2 instanceof androidx.fragment.app.FragmentContainerView;

        if $z1 == 0 goto label3;

        $r3 = (androidx.fragment.app.FragmentContainerView) r2;

        if z0 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        virtualinvoke $r3.<androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)>($z2);

     label3:
        return;
    }

    void moveToState(int, boolean)
    {
        androidx.fragment.app.FragmentManager r0;
        int i0, $i1, $i2;
        boolean z0, $z1;
        androidx.fragment.app.FragmentHostCallback $r1, $r3, $r4;
        androidx.fragment.app.FragmentStore $r2;
        java.lang.IllegalStateException $r5;

        r0 := @this: androidx.fragment.app.FragmentManager;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        if $r1 != null goto label1;

        if i0 == -1 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No activity");

        throw $r5;

     label1:
        if z0 != 0 goto label2;

        $i2 = r0.<androidx.fragment.app.FragmentManager: int mCurState>;

        if i0 != $i2 goto label2;

        return;

     label2:
        r0.<androidx.fragment.app.FragmentManager: int mCurState> = i0;

        $r2 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentStore: void moveToExpectedState()>();

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>();

        $z1 = r0.<androidx.fragment.app.FragmentManager: boolean mNeedMenuInvalidate>;

        if $z1 == 0 goto label3;

        $r3 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        if $r3 == null goto label3;

        $i1 = r0.<androidx.fragment.app.FragmentManager: int mCurState>;

        if $i1 != 7 goto label3;

        $r4 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        virtualinvoke $r4.<androidx.fragment.app.FragmentHostCallback: void onSupportInvalidateOptionsMenu()>();

        r0.<androidx.fragment.app.FragmentManager: boolean mNeedMenuInvalidate> = 0;

     label3:
        return;
    }

    private void startPendingDeferredFragments()
    {
        androidx.fragment.app.FragmentManager r0;
        java.util.Iterator r1;
        androidx.fragment.app.FragmentStateManager r2;
        androidx.fragment.app.FragmentStore $r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: androidx.fragment.app.FragmentManager;

        $r3 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        $r4 = virtualinvoke $r3.<androidx.fragment.app.FragmentStore: java.util.List getActiveFragmentStateManagers()>();

        r1 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.fragment.app.FragmentStateManager) $r5;

        virtualinvoke r0.<androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)>(r2);

        goto label1;

     label2:
        return;
    }

    androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.Fragment r1;
        androidx.fragment.app.FragmentStateManager r2, r3, $r6;
        java.lang.String $r4;
        androidx.fragment.app.FragmentStore $r5, $r7;
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher $r8;
        androidx.fragment.app.FragmentHostCallback $r9;
        android.content.Context $r10;
        java.lang.ClassLoader $r11;
        int $i0;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        $r5 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        $r4 = r1.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        r2 = virtualinvoke $r5.<androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentStateManager getFragmentStateManager(java.lang.String)>($r4);

        if r2 == null goto label1;

        return r2;

     label1:
        $r6 = new androidx.fragment.app.FragmentStateManager;

        $r8 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher mLifecycleCallbacksDispatcher>;

        $r7 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        specialinvoke $r6.<androidx.fragment.app.FragmentStateManager: void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment)>($r8, $r7, r1);

        r3 = $r6;

        $r9 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $r10 = virtualinvoke $r9.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        $r11 = virtualinvoke $r10.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke r3.<androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>($r11);

        $i0 = r0.<androidx.fragment.app.FragmentManager: int mCurState>;

        virtualinvoke r3.<androidx.fragment.app.FragmentStateManager: void setFragmentManagerState(int)>($i0);

        return r3;
    }

    androidx.fragment.app.FragmentStateManager addFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.Fragment r1;
        androidx.fragment.app.FragmentStateManager r2;
        java.lang.String $r3, $r10, $r11;
        boolean $z0, $z1, $z2;
        androidx.fragment.app.FragmentStore $r4, $r5;
        android.view.View $r6;
        java.lang.StringBuilder $r7, $r8, $r9;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        $r3 = r1.<androidx.fragment.app.Fragment: java.lang.String mPreviousWho>;

        if $r3 == null goto label1;

        $r11 = r1.<androidx.fragment.app.Fragment: java.lang.String mPreviousWho>;

        staticinvoke <androidx.fragment.app.strictmode.FragmentStrictMode: void onFragmentReuse(androidx.fragment.app.Fragment,java.lang.String)>(r1, $r11);

     label1:
        $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2);

        if $z0 == 0 goto label2;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("add: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r10);

     label2:
        r2 = virtualinvoke r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>(r1);

        r1.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mFragmentManager> = r0;

        $r4 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        virtualinvoke $r4.<androidx.fragment.app.FragmentStore: void makeActive(androidx.fragment.app.FragmentStateManager)>(r2);

        $z1 = r1.<androidx.fragment.app.Fragment: boolean mDetached>;

        if $z1 != 0 goto label4;

        $r5 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        virtualinvoke $r5.<androidx.fragment.app.FragmentStore: void addFragment(androidx.fragment.app.Fragment)>(r1);

        r1.<androidx.fragment.app.Fragment: boolean mRemoving> = 0;

        $r6 = r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        if $r6 != null goto label3;

        r1.<androidx.fragment.app.Fragment: boolean mHiddenChanged> = 0;

     label3:
        $z2 = specialinvoke r0.<androidx.fragment.app.FragmentManager: boolean isMenuAvailable(androidx.fragment.app.Fragment)>(r1);

        if $z2 == 0 goto label4;

        r0.<androidx.fragment.app.FragmentManager: boolean mNeedMenuInvalidate> = 1;

     label4:
        return r2;
    }

    void removeFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.Fragment r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        androidx.fragment.app.FragmentStore $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7;
        int $i0;
        java.lang.String $r8;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        $z1 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2);

        if $z1 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("remove: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nesting=");

        $i0 = r1.<androidx.fragment.app.Fragment: int mBackStackNesting>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r8);

     label1:
        $z2 = virtualinvoke r1.<androidx.fragment.app.Fragment: boolean isInBackStack()>();

        if $z2 != 0 goto label2;

        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        z0 = $z5;

        $z3 = r1.<androidx.fragment.app.Fragment: boolean mDetached>;

        if $z3 == 0 goto label4;

        if z0 == 0 goto label6;

     label4:
        $r2 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentStore: void removeFragment(androidx.fragment.app.Fragment)>(r1);

        $z4 = specialinvoke r0.<androidx.fragment.app.FragmentManager: boolean isMenuAvailable(androidx.fragment.app.Fragment)>(r1);

        if $z4 == 0 goto label5;

        r0.<androidx.fragment.app.FragmentManager: boolean mNeedMenuInvalidate> = 1;

     label5:
        r1.<androidx.fragment.app.Fragment: boolean mRemoving> = 1;

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void setVisibleRemovingFragment(androidx.fragment.app.Fragment)>(r1);

     label6:
        return;
    }

    void hideFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.Fragment r1;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2);

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hide: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r6);

     label1:
        $z1 = r1.<androidx.fragment.app.Fragment: boolean mHidden>;

        if $z1 != 0 goto label4;

        r1.<androidx.fragment.app.Fragment: boolean mHidden> = 1;

        $z2 = r1.<androidx.fragment.app.Fragment: boolean mHiddenChanged>;

        if $z2 != 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        r1.<androidx.fragment.app.Fragment: boolean mHiddenChanged> = $z3;

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void setVisibleRemovingFragment(androidx.fragment.app.Fragment)>(r1);

     label4:
        return;
    }

    void showFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.Fragment r1;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2);

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("show: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r6);

     label1:
        $z1 = r1.<androidx.fragment.app.Fragment: boolean mHidden>;

        if $z1 == 0 goto label4;

        r1.<androidx.fragment.app.Fragment: boolean mHidden> = 0;

        $z2 = r1.<androidx.fragment.app.Fragment: boolean mHiddenChanged>;

        if $z2 != 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        r1.<androidx.fragment.app.Fragment: boolean mHiddenChanged> = $z3;

     label4:
        return;
    }

    void detachFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.Fragment r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        androidx.fragment.app.FragmentStore $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r7, $r8, $r9;
        java.lang.String $r6, $r10;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2);

        if $z0 == 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("detach: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r10);

     label1:
        $z1 = r1.<androidx.fragment.app.Fragment: boolean mDetached>;

        if $z1 != 0 goto label4;

        r1.<androidx.fragment.app.Fragment: boolean mDetached> = 1;

        $z2 = r1.<androidx.fragment.app.Fragment: boolean mAdded>;

        if $z2 == 0 goto label4;

        $z3 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2);

        if $z3 == 0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("remove from detach: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r6);

     label2:
        $r2 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentStore: void removeFragment(androidx.fragment.app.Fragment)>(r1);

        $z4 = specialinvoke r0.<androidx.fragment.app.FragmentManager: boolean isMenuAvailable(androidx.fragment.app.Fragment)>(r1);

        if $z4 == 0 goto label3;

        r0.<androidx.fragment.app.FragmentManager: boolean mNeedMenuInvalidate> = 1;

     label3:
        specialinvoke r0.<androidx.fragment.app.FragmentManager: void setVisibleRemovingFragment(androidx.fragment.app.Fragment)>(r1);

     label4:
        return;
    }

    void attachFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.Fragment r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        androidx.fragment.app.FragmentStore $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r7, $r8, $r9;
        java.lang.String $r6, $r10;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2);

        if $z0 == 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("attach: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r10);

     label1:
        $z1 = r1.<androidx.fragment.app.Fragment: boolean mDetached>;

        if $z1 == 0 goto label3;

        r1.<androidx.fragment.app.Fragment: boolean mDetached> = 0;

        $z2 = r1.<androidx.fragment.app.Fragment: boolean mAdded>;

        if $z2 != 0 goto label3;

        $r2 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentStore: void addFragment(androidx.fragment.app.Fragment)>(r1);

        $z3 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2);

        if $z3 == 0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("add from attach: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r6);

     label2:
        $z4 = specialinvoke r0.<androidx.fragment.app.FragmentManager: boolean isMenuAvailable(androidx.fragment.app.Fragment)>(r1);

        if $z4 == 0 goto label3;

        r0.<androidx.fragment.app.FragmentManager: boolean mNeedMenuInvalidate> = 1;

     label3:
        return;
    }

    public androidx.fragment.app.Fragment findFragmentById(int)
    {
        androidx.fragment.app.FragmentManager r0;
        int i0;
        androidx.fragment.app.FragmentStore $r1;
        androidx.fragment.app.Fragment $r2;

        r0 := @this: androidx.fragment.app.FragmentManager;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        $r2 = virtualinvoke $r1.<androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findFragmentById(int)>(i0);

        return $r2;
    }

    public androidx.fragment.app.Fragment findFragmentByTag(java.lang.String)
    {
        androidx.fragment.app.FragmentManager r0;
        java.lang.String r1;
        androidx.fragment.app.FragmentStore $r2;
        androidx.fragment.app.Fragment $r3;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        $r3 = virtualinvoke $r2.<androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findFragmentByTag(java.lang.String)>(r1);

        return $r3;
    }

    androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
    {
        androidx.fragment.app.FragmentManager r0;
        java.lang.String r1;
        androidx.fragment.app.FragmentStore $r2;
        androidx.fragment.app.Fragment $r3;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        $r3 = virtualinvoke $r2.<androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)>(r1);

        return $r3;
    }

    androidx.fragment.app.Fragment findActiveFragment(java.lang.String)
    {
        androidx.fragment.app.FragmentManager r0;
        java.lang.String r1;
        androidx.fragment.app.FragmentStore $r2;
        androidx.fragment.app.Fragment $r3;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        $r3 = virtualinvoke $r2.<androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findActiveFragment(java.lang.String)>(r1);

        return $r3;
    }

    private void checkStateLoss()
    {
        androidx.fragment.app.FragmentManager r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        r0 := @this: androidx.fragment.app.FragmentManager;

        $z0 = virtualinvoke r0.<androidx.fragment.app.FragmentManager: boolean isStateSaved()>();

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can not perform this action after onSaveInstanceState");

        throw $r1;

     label1:
        return;
    }

    public boolean isStateSaved()
    {
        androidx.fragment.app.FragmentManager r0;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.fragment.app.FragmentManager;

        $z0 = r0.<androidx.fragment.app.FragmentManager: boolean mStateSaved>;

        if $z0 != 0 goto label1;

        $z1 = r0.<androidx.fragment.app.FragmentManager: boolean mStopped>;

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator, boolean)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.FragmentManager$OpGenerator r1;
        boolean z0, $z2;
        java.util.ArrayList r2, $r4, $r6;
        java.lang.Throwable r3, $r11;
        androidx.fragment.app.FragmentHostCallback $r5, $r8;
        java.lang.IllegalStateException $r7, $r9, $r10;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.FragmentManager$OpGenerator;

        z0 := @parameter1: boolean;

        if z0 != 0 goto label03;

        $r8 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        if $r8 != null goto label02;

        $z2 = r0.<androidx.fragment.app.FragmentManager: boolean mDestroyed>;

        if $z2 == 0 goto label01;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("FragmentManager has been destroyed");

        throw $r10;

     label01:
        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("FragmentManager has not been attached to a host.");

        throw $r9;

     label02:
        specialinvoke r0.<androidx.fragment.app.FragmentManager: void checkStateLoss()>();

     label03:
        $r4 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mPendingActions>;

        r2 = $r4;

        entermonitor $r4;

     label04:
        $r5 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        if $r5 != null goto label07;

        if z0 == 0 goto label06;

        exitmonitor r2;

     label05:
        return;

     label06:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Activity has been destroyed");

        throw $r7;

     label07:
        $r6 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mPendingActions>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        virtualinvoke r0.<androidx.fragment.app.FragmentManager: void scheduleCommit()>();

        exitmonitor r2;

     label08:
        goto label11;

     label09:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r2;

     label10:
        throw r3;

     label11:
        return;

        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    void scheduleCommit()
    {
        androidx.fragment.app.FragmentManager r0;
        java.util.ArrayList r1, $r3, $r4;
        boolean z0, $z2;
        java.lang.Throwable r2, $r11;
        int $i0;
        androidx.fragment.app.FragmentHostCallback $r5, $r8;
        android.os.Handler $r6, $r9;
        java.lang.Runnable $r7, $r10;

        r0 := @this: androidx.fragment.app.FragmentManager;

        $r3 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mPendingActions>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mPendingActions>;

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i0 != 1 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        z0 = $z2;

        if z0 == 0 goto label4;

        $r5 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $r6 = virtualinvoke $r5.<androidx.fragment.app.FragmentHostCallback: android.os.Handler getHandler()>();

        $r7 = r0.<androidx.fragment.app.FragmentManager: java.lang.Runnable mExecCommit>;

        virtualinvoke $r6.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r7);

        $r8 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $r9 = virtualinvoke $r8.<androidx.fragment.app.FragmentHostCallback: android.os.Handler getHandler()>();

        $r10 = r0.<androidx.fragment.app.FragmentManager: java.lang.Runnable mExecCommit>;

        virtualinvoke $r9.<android.os.Handler: boolean post(java.lang.Runnable)>($r10);

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void updateOnBackPressedCallbackEnabled()>();

     label4:
        exitmonitor r1;

     label5:
        goto label8;

     label6:
        $r11 := @caughtexception;

        r2 = $r11;

        exitmonitor r1;

     label7:
        throw r2;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    int allocBackStackIndex()
    {
        androidx.fragment.app.FragmentManager r0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        int $i0;

        r0 := @this: androidx.fragment.app.FragmentManager;

        $r1 = r0.<androidx.fragment.app.FragmentManager: java.util.concurrent.atomic.AtomicInteger mBackStackIndex>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        return $i0;
    }

    private void ensureExecReady(boolean)
    {
        androidx.fragment.app.FragmentManager r0;
        boolean z0, $z1, $z2;
        androidx.fragment.app.FragmentHostCallback $r1, $r3;
        android.os.Looper $r2, $r5;
        android.os.Handler $r4;
        java.util.ArrayList $r6, $r7, $r8;
        java.lang.IllegalStateException $r9, $r10, $r11, $r12;

        r0 := @this: androidx.fragment.app.FragmentManager;

        z0 := @parameter0: boolean;

        $z1 = r0.<androidx.fragment.app.FragmentManager: boolean mExecutingActions>;

        if $z1 == 0 goto label1;

        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("FragmentManager is already executing transactions");

        throw $r12;

     label1:
        $r1 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        if $r1 != null goto label3;

        $z2 = r0.<androidx.fragment.app.FragmentManager: boolean mDestroyed>;

        if $z2 == 0 goto label2;

        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("FragmentManager has been destroyed");

        throw $r11;

     label2:
        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("FragmentManager has not been attached to a host.");

        throw $r10;

     label3:
        $r2 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r3 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $r4 = virtualinvoke $r3.<androidx.fragment.app.FragmentHostCallback: android.os.Handler getHandler()>();

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Looper getLooper()>();

        if $r2 == $r5 goto label4;

        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Must be called from main thread of fragment host");

        throw $r9;

     label4:
        if z0 != 0 goto label5;

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void checkStateLoss()>();

     label5:
        $r6 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpRecords>;

        if $r6 != null goto label6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpRecords> = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpIsPop> = $r8;

     label6:
        return;
    }

    void execSingleAction(androidx.fragment.app.FragmentManager$OpGenerator, boolean)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.FragmentManager$OpGenerator r1;
        boolean z0, $z1, $z2;
        java.lang.Throwable r2, $r9;
        java.util.ArrayList $r3, $r4, $r6, $r7;
        androidx.fragment.app.FragmentStore $r5;
        androidx.fragment.app.FragmentHostCallback $r8;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.FragmentManager$OpGenerator;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label2;

        $r8 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        if $r8 == null goto label1;

        $z2 = r0.<androidx.fragment.app.FragmentManager: boolean mDestroyed>;

        if $z2 == 0 goto label2;

     label1:
        return;

     label2:
        specialinvoke r0.<androidx.fragment.app.FragmentManager: void ensureExecReady(boolean)>(z0);

        $r4 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpRecords>;

        $r3 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpIsPop>;

        $z1 = interfaceinvoke r1.<androidx.fragment.app.FragmentManager$OpGenerator: boolean generateOps(java.util.ArrayList,java.util.ArrayList)>($r4, $r3);

        if $z1 == 0 goto label6;

        r0.<androidx.fragment.app.FragmentManager: boolean mExecutingActions> = 1;

     label3:
        $r7 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpRecords>;

        $r6 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpIsPop>;

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>($r7, $r6);

     label4:
        specialinvoke r0.<androidx.fragment.app.FragmentManager: void cleanupExec()>();

        goto label6;

     label5:
        $r9 := @caughtexception;

        r2 = $r9;

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void cleanupExec()>();

        throw r2;

     label6:
        specialinvoke r0.<androidx.fragment.app.FragmentManager: void updateOnBackPressedCallbackEnabled()>();

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>();

        $r5 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        virtualinvoke $r5.<androidx.fragment.app.FragmentStore: void burpActive()>();

        return;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    private void cleanupExec()
    {
        androidx.fragment.app.FragmentManager r0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r0.<androidx.fragment.app.FragmentManager: boolean mExecutingActions> = 0;

        $r1 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpIsPop>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        $r2 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpRecords>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        return;
    }

    boolean execPendingActions(boolean)
    {
        androidx.fragment.app.FragmentManager r0;
        boolean z0, $z1, z2;
        java.lang.Throwable r1, $r7;
        java.util.ArrayList $r2, $r3, $r5, $r6;
        androidx.fragment.app.FragmentStore $r4;

        r0 := @this: androidx.fragment.app.FragmentManager;

        z0 := @parameter0: boolean;

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void ensureExecReady(boolean)>(z0);

        z2 = 0;

     label1:
        $r3 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpRecords>;

        $r2 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpIsPop>;

        $z1 = specialinvoke r0.<androidx.fragment.app.FragmentManager: boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList)>($r3, $r2);

        if $z1 == 0 goto label6;

        r0.<androidx.fragment.app.FragmentManager: boolean mExecutingActions> = 1;

     label2:
        $r6 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpRecords>;

        $r5 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpIsPop>;

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>($r6, $r5);

     label3:
        specialinvoke r0.<androidx.fragment.app.FragmentManager: void cleanupExec()>();

        goto label5;

     label4:
        $r7 := @caughtexception;

        r1 = $r7;

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void cleanupExec()>();

        throw r1;

     label5:
        z2 = 1;

        goto label1;

     label6:
        specialinvoke r0.<androidx.fragment.app.FragmentManager: void updateOnBackPressedCallbackEnabled()>();

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void doPendingDeferredStart()>();

        $r4 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        virtualinvoke $r4.<androidx.fragment.app.FragmentStore: void burpActive()>();

        return z2;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private void removeRedundantOperationsAndExecute(java.util.ArrayList, java.util.ArrayList)
    {
        androidx.fragment.app.FragmentManager r0;
        java.util.ArrayList r1, r2;
        int i0, $i1, $i2, i3, i4, i5;
        boolean z0, $z1, $z2, $z3, $z4;
        java.lang.Object $r3, $r5, $r7, $r9;
        androidx.fragment.app.BackStackRecord $r4, $r10;
        java.lang.Boolean $r6, $r8;
        java.lang.IllegalStateException $r11;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: java.util.ArrayList;

        $z1 = virtualinvoke r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        return;

     label1:
        $i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $i2 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if $i1 == $i2 goto label2;

        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Internal error with the back stack records");

        throw $r11;

     label2:
        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i3 = 0;

        i4 = 0;

     label3:
        if i4 >= i0 goto label8;

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r4 = (androidx.fragment.app.BackStackRecord) $r3;

        z0 = $r4.<androidx.fragment.app.BackStackRecord: boolean mReorderingAllowed>;

        if z0 != 0 goto label7;

        if i3 == i4 goto label4;

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>(r1, r2, i3, i4);

     label4:
        i5 = i4 + 1;

        $r5 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r6 = (java.lang.Boolean) $r5;

        $z2 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 == 0 goto label6;

     label5:
        if i5 >= i0 goto label6;

        $r7 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r8 = (java.lang.Boolean) $r7;

        $z3 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        if $z3 == 0 goto label6;

        $r9 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r10 = (androidx.fragment.app.BackStackRecord) $r9;

        $z4 = $r10.<androidx.fragment.app.BackStackRecord: boolean mReorderingAllowed>;

        if $z4 != 0 goto label6;

        i5 = i5 + 1;

        goto label5;

     label6:
        specialinvoke r0.<androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>(r1, r2, i4, i5);

        i3 = i5;

        i4 = i5 - 1;

     label7:
        i4 = i4 + 1;

        goto label3;

     label8:
        if i3 == i0 goto label9;

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>(r1, r2, i3, i0);

     label9:
        return;
    }

    private void executeOpsTogether(java.util.ArrayList, java.util.ArrayList, int, int)
    {
        androidx.fragment.app.FragmentManager r0, $r24;
        java.util.ArrayList r1, r2, $r5, $r6, $r8, $r10, $r16, $r18, $r19, $r22, $r29, $r30, $r31;
        int i0, i1, $i2, $i3, $i4, $i5, i6, i7, $i8, i9, i10, i11;
        boolean z0, $z2, $z3, $z4, $z5, z6, z7, $z8, z9, z10;
        java.lang.Object $r3, $r11, $r12, $r14, $r15, $r17, $r20, $r21, $r23, $r26, $r27, $r39;
        androidx.fragment.app.BackStackRecord $r4, r33, r34, r41, r52;
        androidx.fragment.app.FragmentStore $r7, $r25;
        java.util.List $r9;
        java.lang.Boolean $r13, $r28, $r40;
        androidx.fragment.app.Fragment r32, r37, r43, r47;
        java.util.Iterator r35, r45, r50;
        androidx.fragment.app.FragmentTransaction$Op r36, r42, r46;
        androidx.fragment.app.FragmentStateManager r38, r44, r48;
        java.util.Set r49;
        androidx.fragment.app.SpecialEffectsController r51;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: java.util.ArrayList;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r4 = (androidx.fragment.app.BackStackRecord) $r3;

        z0 = $r4.<androidx.fragment.app.BackStackRecord: boolean mReorderingAllowed>;

        z6 = 0;

        $r5 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpAddedFragments>;

        if $r5 != null goto label01;

        $r31 = new java.util.ArrayList;

        specialinvoke $r31.<java.util.ArrayList: void <init>()>();

        r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpAddedFragments> = $r31;

        goto label02;

     label01:
        $r6 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpAddedFragments>;

        virtualinvoke $r6.<java.util.ArrayList: void clear()>();

     label02:
        $r8 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpAddedFragments>;

        $r7 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        $r9 = virtualinvoke $r7.<androidx.fragment.app.FragmentStore: java.util.List getFragments()>();

        virtualinvoke $r8.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r9);

        r32 = virtualinvoke r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getPrimaryNavigationFragment()>();

        i6 = i0;

     label03:
        if i6 >= i1 goto label09;

        $r26 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        r33 = (androidx.fragment.app.BackStackRecord) $r26;

        $r27 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r28 = (java.lang.Boolean) $r27;

        z7 = virtualinvoke $r28.<java.lang.Boolean: boolean booleanValue()>();

        if z7 != 0 goto label04;

        $r30 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpAddedFragments>;

        r32 = virtualinvoke r33.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.Fragment expandOps(java.util.ArrayList,androidx.fragment.app.Fragment)>($r30, r32);

        goto label05;

     label04:
        $r29 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpAddedFragments>;

        r32 = virtualinvoke r33.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment)>($r29, r32);

     label05:
        if z6 != 0 goto label06;

        $z5 = r33.<androidx.fragment.app.BackStackRecord: boolean mAddToBackStack>;

        if $z5 == 0 goto label07;

     label06:
        $z8 = 1;

        goto label08;

     label07:
        $z8 = 0;

     label08:
        z6 = $z8;

        i6 = i6 + 1;

        goto label03;

     label09:
        $r10 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpAddedFragments>;

        virtualinvoke $r10.<java.util.ArrayList: void clear()>();

        if z0 != 0 goto label14;

        $i5 = r0.<androidx.fragment.app.FragmentManager: int mCurState>;

        if $i5 < 1 goto label14;

        i7 = i0;

     label10:
        if i7 >= i1 goto label14;

        $r21 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r34 = (androidx.fragment.app.BackStackRecord) $r21;

        $r22 = r34.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        r35 = virtualinvoke $r22.<java.util.ArrayList: java.util.Iterator iterator()>();

     label11:
        $z4 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label13;

        $r23 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>();

        r36 = (androidx.fragment.app.FragmentTransaction$Op) $r23;

        r37 = r36.<androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment>;

        if r37 == null goto label12;

        $r24 = r37.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mFragmentManager>;

        if $r24 == null goto label12;

        r38 = virtualinvoke r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>(r37);

        $r25 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        virtualinvoke $r25.<androidx.fragment.app.FragmentStore: void makeActive(androidx.fragment.app.FragmentStateManager)>(r38);

     label12:
        goto label11;

     label13:
        i7 = i7 + 1;

        goto label10;

     label14:
        staticinvoke <androidx.fragment.app.FragmentManager: void executeOps(java.util.ArrayList,java.util.ArrayList,int,int)>(r1, r2, i0, i1);

        $i8 = i1 - 1;

        $r39 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>($i8);

        $r40 = (java.lang.Boolean) $r39;

        z9 = virtualinvoke $r40.<java.lang.Boolean: boolean booleanValue()>();

        i9 = i0;

     label15:
        if i9 >= i1 goto label23;

        $r15 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        r41 = (androidx.fragment.app.BackStackRecord) $r15;

        if z9 == 0 goto label19;

        $r18 = r41.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        $i4 = virtualinvoke $r18.<java.util.ArrayList: int size()>();

        i10 = $i4 - 1;

     label16:
        if i10 < 0 goto label18;

        $r19 = r41.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        $r20 = virtualinvoke $r19.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        r42 = (androidx.fragment.app.FragmentTransaction$Op) $r20;

        r43 = r42.<androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment>;

        if r43 == null goto label17;

        r44 = virtualinvoke r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>(r43);

        virtualinvoke r44.<androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>();

     label17:
        i10 = i10 + -1;

        goto label16;

     label18:
        goto label22;

     label19:
        $r16 = r41.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        r45 = virtualinvoke $r16.<java.util.ArrayList: java.util.Iterator iterator()>();

     label20:
        $z3 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label22;

        $r17 = interfaceinvoke r45.<java.util.Iterator: java.lang.Object next()>();

        r46 = (androidx.fragment.app.FragmentTransaction$Op) $r17;

        r47 = r46.<androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment>;

        if r47 == null goto label21;

        r48 = virtualinvoke r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)>(r47);

        virtualinvoke r48.<androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>();

     label21:
        goto label20;

     label22:
        i9 = i9 + 1;

        goto label15;

     label23:
        $i2 = r0.<androidx.fragment.app.FragmentManager: int mCurState>;

        virtualinvoke r0.<androidx.fragment.app.FragmentManager: void moveToState(int,boolean)>($i2, 1);

        r49 = specialinvoke r0.<androidx.fragment.app.FragmentManager: java.util.Set collectChangedControllers(java.util.ArrayList,int,int)>(r1, i0, i1);

        r50 = interfaceinvoke r49.<java.util.Set: java.util.Iterator iterator()>();

     label24:
        $z2 = interfaceinvoke r50.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label25;

        $r14 = interfaceinvoke r50.<java.util.Iterator: java.lang.Object next()>();

        r51 = (androidx.fragment.app.SpecialEffectsController) $r14;

        virtualinvoke r51.<androidx.fragment.app.SpecialEffectsController: void updateOperationDirection(boolean)>(z9);

        virtualinvoke r51.<androidx.fragment.app.SpecialEffectsController: void markPostponedState()>();

        virtualinvoke r51.<androidx.fragment.app.SpecialEffectsController: void executePendingOperations()>();

        goto label24;

     label25:
        i11 = i0;

     label26:
        if i11 >= i1 goto label28;

        $r11 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i11);

        r52 = (androidx.fragment.app.BackStackRecord) $r11;

        $r12 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i11);

        $r13 = (java.lang.Boolean) $r12;

        z10 = virtualinvoke $r13.<java.lang.Boolean: boolean booleanValue()>();

        if z10 == 0 goto label27;

        $i3 = r52.<androidx.fragment.app.BackStackRecord: int mIndex>;

        if $i3 < 0 goto label27;

        r52.<androidx.fragment.app.BackStackRecord: int mIndex> = -1;

     label27:
        virtualinvoke r52.<androidx.fragment.app.BackStackRecord: void runOnCommitRunnables()>();

        i11 = i11 + 1;

        goto label26;

     label28:
        if z6 == 0 goto label29;

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void reportBackStackChanged()>();

     label29:
        return;
    }

    private java.util.Set collectChangedControllers(java.util.ArrayList, int, int)
    {
        androidx.fragment.app.FragmentManager r0;
        java.util.ArrayList r1, $r10;
        int i0, i1, i2;
        java.util.HashSet r2, $r8;
        androidx.fragment.app.BackStackRecord r3;
        java.util.Iterator r4;
        androidx.fragment.app.FragmentTransaction$Op r5;
        androidx.fragment.app.Fragment r6;
        android.view.ViewGroup r7;
        java.lang.Object $r9, $r11;
        boolean $z0;
        androidx.fragment.app.SpecialEffectsController $r12;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: java.util.ArrayList;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r8 = new java.util.HashSet;

        specialinvoke $r8.<java.util.HashSet: void <init>()>();

        r2 = $r8;

        i2 = i0;

     label1:
        if i2 >= i1 goto label5;

        $r9 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r3 = (androidx.fragment.app.BackStackRecord) $r9;

        $r10 = r3.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        r4 = virtualinvoke $r10.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.fragment.app.FragmentTransaction$Op) $r11;

        r6 = r5.<androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment>;

        if r6 == null goto label3;

        r7 = r6.<androidx.fragment.app.Fragment: android.view.ViewGroup mContainer>;

        if r7 == null goto label3;

        $r12 = staticinvoke <androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.FragmentManager)>(r7, r0);

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r12);

     label3:
        goto label2;

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        return r2;
    }

    private static void executeOps(java.util.ArrayList, java.util.ArrayList, int, int)
    {
        java.util.ArrayList r0, r1;
        int i0, i1, i2;
        androidx.fragment.app.BackStackRecord r2;
        boolean z0;
        java.lang.Object $r3, $r4;
        java.lang.Boolean $r5;

        r0 := @parameter0: java.util.ArrayList;

        r1 := @parameter1: java.util.ArrayList;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 = i0;

     label1:
        if i2 >= i1 goto label4;

        $r3 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r2 = (androidx.fragment.app.BackStackRecord) $r3;

        $r4 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r5 = (java.lang.Boolean) $r4;

        z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if z0 == 0 goto label2;

        virtualinvoke r2.<androidx.fragment.app.BackStackRecord: void bumpBackStackNesting(int)>(-1);

        virtualinvoke r2.<androidx.fragment.app.BackStackRecord: void executePopOps()>();

        goto label3;

     label2:
        virtualinvoke r2.<androidx.fragment.app.BackStackRecord: void bumpBackStackNesting(int)>(1);

        virtualinvoke r2.<androidx.fragment.app.BackStackRecord: void executeOps()>();

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return;
    }

    private void setVisibleRemovingFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.Fragment r1, $r5;
        android.view.ViewGroup r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.Object $r3, $r4;
        boolean $z0;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        r2 = specialinvoke r0.<androidx.fragment.app.FragmentManager: android.view.ViewGroup getFragmentContainer(androidx.fragment.app.Fragment)>(r1);

        if r2 == null goto label2;

        $i0 = virtualinvoke r1.<androidx.fragment.app.Fragment: int getEnterAnim()>();

        $i1 = virtualinvoke r1.<androidx.fragment.app.Fragment: int getExitAnim()>();

        $i2 = $i0 + $i1;

        $i3 = virtualinvoke r1.<androidx.fragment.app.Fragment: int getPopEnterAnim()>();

        $i4 = $i2 + $i3;

        $i5 = virtualinvoke r1.<androidx.fragment.app.Fragment: int getPopExitAnim()>();

        $i6 = $i4 + $i5;

        if $i6 <= 0 goto label2;

        $i7 = <androidx.fragment.R$id: int visible_removing_fragment_view_tag>;

        $r3 = virtualinvoke r2.<android.view.ViewGroup: java.lang.Object getTag(int)>($i7);

        if $r3 != null goto label1;

        $i9 = <androidx.fragment.R$id: int visible_removing_fragment_view_tag>;

        virtualinvoke r2.<android.view.ViewGroup: void setTag(int,java.lang.Object)>($i9, r1);

     label1:
        $i8 = <androidx.fragment.R$id: int visible_removing_fragment_view_tag>;

        $r4 = virtualinvoke r2.<android.view.ViewGroup: java.lang.Object getTag(int)>($i8);

        $r5 = (androidx.fragment.app.Fragment) $r4;

        $z0 = virtualinvoke r1.<androidx.fragment.app.Fragment: boolean getPopDirection()>();

        virtualinvoke $r5.<androidx.fragment.app.Fragment: void setPopDirection(boolean)>($z0);

     label2:
        return;
    }

    private android.view.ViewGroup getFragmentContainer(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.Fragment r1;
        android.view.View r2;
        android.view.ViewGroup $r3, $r6, $r7;
        int $i0, $i1;
        androidx.fragment.app.FragmentContainer $r4, $r5;
        boolean $z0, $z1;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        $r3 = r1.<androidx.fragment.app.Fragment: android.view.ViewGroup mContainer>;

        if $r3 == null goto label1;

        $r7 = r1.<androidx.fragment.app.Fragment: android.view.ViewGroup mContainer>;

        return $r7;

     label1:
        $i0 = r1.<androidx.fragment.app.Fragment: int mContainerId>;

        if $i0 > 0 goto label2;

        return null;

     label2:
        $r4 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentContainer mContainer>;

        $z0 = virtualinvoke $r4.<androidx.fragment.app.FragmentContainer: boolean onHasView()>();

        if $z0 == 0 goto label3;

        $r5 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentContainer mContainer>;

        $i1 = r1.<androidx.fragment.app.Fragment: int mContainerId>;

        r2 = virtualinvoke $r5.<androidx.fragment.app.FragmentContainer: android.view.View onFindViewById(int)>($i1);

        $z1 = r2 instanceof android.view.ViewGroup;

        if $z1 == 0 goto label3;

        $r6 = (android.view.ViewGroup) r2;

        return $r6;

     label3:
        return null;
    }

    private void forcePostponedTransactions()
    {
        androidx.fragment.app.FragmentManager r0;
        java.util.Set r1;
        java.util.Iterator r2;
        androidx.fragment.app.SpecialEffectsController r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 = specialinvoke r0.<androidx.fragment.app.FragmentManager: java.util.Set collectAllSpecialEffectsController()>();

        r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.fragment.app.SpecialEffectsController) $r4;

        virtualinvoke r3.<androidx.fragment.app.SpecialEffectsController: void forcePostponedExecutePendingOperations()>();

        goto label1;

     label2:
        return;
    }

    private void endAnimatingAwayFragments()
    {
        androidx.fragment.app.FragmentManager r0;
        java.util.Set r1;
        java.util.Iterator r2;
        androidx.fragment.app.SpecialEffectsController r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 = specialinvoke r0.<androidx.fragment.app.FragmentManager: java.util.Set collectAllSpecialEffectsController()>();

        r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.fragment.app.SpecialEffectsController) $r4;

        virtualinvoke r3.<androidx.fragment.app.SpecialEffectsController: void forceCompleteAllOperations()>();

        goto label1;

     label2:
        return;
    }

    private java.util.Set collectAllSpecialEffectsController()
    {
        androidx.fragment.app.FragmentManager r0;
        java.util.HashSet r1, $r5;
        java.util.Iterator r2;
        androidx.fragment.app.FragmentStateManager r3;
        android.view.ViewGroup r4;
        androidx.fragment.app.FragmentStore $r6;
        java.util.List $r7;
        boolean $z0;
        java.lang.Object $r8;
        androidx.fragment.app.Fragment $r9;
        androidx.fragment.app.SpecialEffectsControllerFactory $r10;
        androidx.fragment.app.SpecialEffectsController $r11;

        r0 := @this: androidx.fragment.app.FragmentManager;

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        r1 = $r5;

        $r6 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        $r7 = virtualinvoke $r6.<androidx.fragment.app.FragmentStore: java.util.List getActiveFragmentStateManagers()>();

        r2 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.fragment.app.FragmentStateManager) $r8;

        $r9 = virtualinvoke r3.<androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment getFragment()>();

        r4 = $r9.<androidx.fragment.app.Fragment: android.view.ViewGroup mContainer>;

        if r4 == null goto label2;

        $r10 = virtualinvoke r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.SpecialEffectsControllerFactory getSpecialEffectsControllerFactory()>();

        $r11 = staticinvoke <androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.SpecialEffectsControllerFactory)>(r4, $r10);

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r11);

     label2:
        goto label1;

     label3:
        return r1;
    }

    private boolean generateOpsForPendingActions(java.util.ArrayList, java.util.ArrayList)
    {
        androidx.fragment.app.FragmentManager r0;
        java.util.ArrayList r1, r2, r3, $r6, $r7, $r8, $r9, $r13, $r18;
        int i0, i1;
        java.lang.Throwable r4, r5, $r16, $r17;
        boolean $z0, $z1, z2;
        androidx.fragment.app.FragmentHostCallback $r10, $r19;
        android.os.Handler $r11, $r20;
        java.lang.Runnable $r12, $r21;
        java.lang.Object $r14;
        androidx.fragment.app.FragmentManager$OpGenerator $r15;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: java.util.ArrayList;

        z2 = 0;

        $r6 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mPendingActions>;

        r3 = $r6;

        entermonitor $r6;

     label01:
        $r7 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mPendingActions>;

        $z0 = virtualinvoke $r7.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label03;

        exitmonitor r3;

     label02:
        return 0;

     label03:
        $r8 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mPendingActions>;

        i0 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        i1 = 0;

     label04:
        if i1 >= i0 goto label05;

        $r13 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mPendingActions>;

        $r14 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r15 = (androidx.fragment.app.FragmentManager$OpGenerator) $r14;

        $z1 = interfaceinvoke $r15.<androidx.fragment.app.FragmentManager$OpGenerator: boolean generateOps(java.util.ArrayList,java.util.ArrayList)>(r1, r2);

        z2 = z2 | $z1;

        i1 = i1 + 1;

        goto label04;

     label05:
        $r9 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mPendingActions>;

        virtualinvoke $r9.<java.util.ArrayList: void clear()>();

        $r10 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $r11 = virtualinvoke $r10.<androidx.fragment.app.FragmentHostCallback: android.os.Handler getHandler()>();

        $r12 = r0.<androidx.fragment.app.FragmentManager: java.lang.Runnable mExecCommit>;

        virtualinvoke $r11.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r12);

        goto label08;

     label06:
        $r17 := @caughtexception;

        r4 = $r17;

     label07:
        $r18 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mPendingActions>;

        virtualinvoke $r18.<java.util.ArrayList: void clear()>();

        $r19 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $r20 = virtualinvoke $r19.<androidx.fragment.app.FragmentHostCallback: android.os.Handler getHandler()>();

        $r21 = r0.<androidx.fragment.app.FragmentManager: java.lang.Runnable mExecCommit>;

        virtualinvoke $r20.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r21);

        throw r4;

     label08:
        exitmonitor r3;

     label09:
        goto label12;

     label10:
        $r16 := @caughtexception;

        r5 = $r16;

        exitmonitor r3;

     label11:
        throw r5;

     label12:
        return z2;

        catch java.lang.Throwable from label03 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private void doPendingDeferredStart()
    {
        androidx.fragment.app.FragmentManager r0;
        boolean $z0;

        r0 := @this: androidx.fragment.app.FragmentManager;

        $z0 = r0.<androidx.fragment.app.FragmentManager: boolean mHavePendingDeferredStart>;

        if $z0 == 0 goto label1;

        r0.<androidx.fragment.app.FragmentManager: boolean mHavePendingDeferredStart> = 0;

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()>();

     label1:
        return;
    }

    private void reportBackStackChanged()
    {
        androidx.fragment.app.FragmentManager r0;
        java.util.ArrayList $r1, $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;
        androidx.fragment.app.FragmentManager$OnBackStackChangedListener $r5;

        r0 := @this: androidx.fragment.app.FragmentManager;

        $r1 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStackChangeListeners>;

        if $r1 == null goto label2;

        i1 = 0;

     label1:
        $r2 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStackChangeListeners>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label2;

        $r3 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStackChangeListeners>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (androidx.fragment.app.FragmentManager$OnBackStackChangedListener) $r4;

        interfaceinvoke $r5.<androidx.fragment.app.FragmentManager$OnBackStackChangedListener: void onBackStackChanged()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void addBackStackState(androidx.fragment.app.BackStackRecord)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.BackStackRecord r1;
        java.util.ArrayList $r2, $r3, $r4;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.BackStackRecord;

        $r2 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack>;

        if $r2 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack> = $r4;

     label1:
        $r3 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    boolean restoreBackStackState(java.util.ArrayList, java.util.ArrayList, java.lang.String)
    {
        androidx.fragment.app.FragmentManager r0;
        java.util.ArrayList r1, r2, $r11;
        java.lang.String r3, $r16;
        androidx.fragment.app.BackStackState r4;
        java.util.HashMap r5, $r8;
        java.util.Map $r6;
        java.lang.Object $r7, $r9, $r10, $r12;
        boolean $z0, $z1, $z2, $z3, $z4, z5, $z6;
        androidx.fragment.app.Fragment $r13, $r14, $r15;
        java.util.Iterator r18, r20, r23;
        androidx.fragment.app.BackStackRecord r19, r24;
        androidx.fragment.app.FragmentTransaction$Op r21;
        java.util.List r22;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: java.util.ArrayList;

        r3 := @parameter2: java.lang.String;

        $r6 = r0.<androidx.fragment.app.FragmentManager: java.util.Map mBackStackStates>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r3);

        r4 = (androidx.fragment.app.BackStackState) $r7;

        if r4 != null goto label01;

        return 0;

     label01:
        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r5 = $r8;

        r18 = virtualinvoke r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r10 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        r19 = (androidx.fragment.app.BackStackRecord) $r10;

        $z3 = r19.<androidx.fragment.app.BackStackRecord: boolean mBeingSaved>;

        if $z3 == 0 goto label05;

        $r11 = r19.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        r20 = virtualinvoke $r11.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z4 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label05;

        $r12 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        r21 = (androidx.fragment.app.FragmentTransaction$Op) $r12;

        $r13 = r21.<androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment>;

        if $r13 == null goto label04;

        $r14 = r21.<androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment>;

        $r16 = $r14.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        $r15 = r21.<androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment>;

        virtualinvoke r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r15);

     label04:
        goto label03;

     label05:
        goto label02;

     label06:
        r22 = virtualinvoke r4.<androidx.fragment.app.BackStackState: java.util.List instantiate(androidx.fragment.app.FragmentManager,java.util.Map)>(r0, r5);

        z5 = 0;

        r23 = interfaceinvoke r22.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r9 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>();

        r24 = (androidx.fragment.app.BackStackRecord) $r9;

        $z2 = virtualinvoke r24.<androidx.fragment.app.BackStackRecord: boolean generateOps(java.util.ArrayList,java.util.ArrayList)>(r1, r2);

        if $z2 != 0 goto label08;

        if z5 == 0 goto label09;

     label08:
        $z6 = 1;

        goto label10;

     label09:
        $z6 = 0;

     label10:
        z5 = $z6;

        goto label07;

     label11:
        return z5;
    }

    boolean saveBackStackState(java.util.ArrayList, java.util.ArrayList, java.lang.String)
    {
        androidx.fragment.app.FragmentManager r0, $r84;
        java.util.ArrayList r1, r2, $r5, $r7, $r9, $r10, $r11, $r12, $r14, $r17, $r37, $r41, $r62, r88, r91;
        java.lang.String r3, $r24, $r35, $r54, $r71, $r80, $r83;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, $i15, i16, i17;
        androidx.fragment.app.BackStackRecordState r4, $r20;
        java.util.HashSet $r6, $r39, $r40, r73, r75, r76;
        java.util.ArrayDeque $r8, r81;
        boolean $z0, $z1, $z6, $z7, $z9, $z10, $z14, $z15, $z16;
        androidx.fragment.app.BackStackState $r13, r92;
        java.util.Map $r15;
        java.lang.Object $r18, $r23, $r25, $r26, $r38, $r58, $r61, $r63;
        androidx.fragment.app.BackStackRecord $r19, r72, r74, r93, r94;
        java.lang.Boolean $r22;
        java.lang.IllegalArgumentException $r27, $r42, $r64;
        java.lang.StringBuilder $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r55, $r56, $r59, $r65, $r66, $r67, $r68, $r69, $r70;
        java.util.Iterator $r57, r77, r86, r89;
        androidx.fragment.app.FragmentTransaction$Op r78;
        androidx.fragment.app.Fragment r79, r82, r87, r90;
        java.util.List $r85;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: java.util.ArrayList;

        r3 := @parameter2: java.lang.String;

        i0 = specialinvoke r0.<androidx.fragment.app.FragmentManager: int findBackStackIndex(java.lang.String,int,boolean)>(r3, -1, 1);

        if i0 >= 0 goto label01;

        return 0;

     label01:
        i13 = i0;

     label02:
        $r5 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack>;

        $i1 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if i13 >= $i1 goto label04;

        $r62 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack>;

        $r63 = virtualinvoke $r62.<java.util.ArrayList: java.lang.Object get(int)>(i13);

        r72 = (androidx.fragment.app.BackStackRecord) $r63;

        $z14 = r72.<androidx.fragment.app.BackStackRecord: boolean mReorderingAllowed>;

        if $z14 != 0 goto label03;

        $r64 = new java.lang.IllegalArgumentException;

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("saveBackStack(\"");

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\") included FragmentTransactions must use setReorderingAllowed(true) to ensure that the back stack can be restored as an atomic operation. Found ");

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r72);

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that did not use setReorderingAllowed(true).");

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r64.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r71);

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>($r64);

     label03:
        i13 = i13 + 1;

        goto label02;

     label04:
        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        r73 = $r6;

        i14 = i0;

     label05:
        $r7 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack>;

        $i2 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if i14 >= $i2 goto label16;

        $r37 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack>;

        $r38 = virtualinvoke $r37.<java.util.ArrayList: java.lang.Object get(int)>(i14);

        r74 = (androidx.fragment.app.BackStackRecord) $r38;

        $r39 = new java.util.HashSet;

        specialinvoke $r39.<java.util.HashSet: void <init>()>();

        r75 = $r39;

        $r40 = new java.util.HashSet;

        specialinvoke $r40.<java.util.HashSet: void <init>()>();

        r76 = $r40;

        $r41 = r74.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        r77 = virtualinvoke $r41.<java.util.ArrayList: java.util.Iterator iterator()>();

     label06:
        $z15 = interfaceinvoke r77.<java.util.Iterator: boolean hasNext()>();

        if $z15 == 0 goto label12;

        $r61 = interfaceinvoke r77.<java.util.Iterator: java.lang.Object next()>();

        r78 = (androidx.fragment.app.FragmentTransaction$Op) $r61;

        r79 = r78.<androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment>;

        if r79 != null goto label07;

        goto label06;

     label07:
        $z10 = r78.<androidx.fragment.app.FragmentTransaction$Op: boolean mFromExpandedOp>;

        if $z10 == 0 goto label08;

        $i10 = r78.<androidx.fragment.app.FragmentTransaction$Op: int mCmd>;

        if $i10 == 1 goto label08;

        $i11 = r78.<androidx.fragment.app.FragmentTransaction$Op: int mCmd>;

        if $i11 == 2 goto label08;

        $i12 = r78.<androidx.fragment.app.FragmentTransaction$Op: int mCmd>;

        if $i12 != 8 goto label09;

     label08:
        virtualinvoke r73.<java.util.HashSet: boolean add(java.lang.Object)>(r79);

        virtualinvoke r75.<java.util.HashSet: boolean add(java.lang.Object)>(r79);

     label09:
        $i15 = r78.<androidx.fragment.app.FragmentTransaction$Op: int mCmd>;

        if $i15 == 1 goto label10;

        $i9 = r78.<androidx.fragment.app.FragmentTransaction$Op: int mCmd>;

        if $i9 != 2 goto label11;

     label10:
        virtualinvoke r76.<java.util.HashSet: boolean add(java.lang.Object)>(r79);

     label11:
        goto label06;

     label12:
        virtualinvoke r75.<java.util.HashSet: boolean removeAll(java.util.Collection)>(r76);

        $z9 = virtualinvoke r75.<java.util.HashSet: boolean isEmpty()>();

        if $z9 != 0 goto label15;

        $r42 = new java.lang.IllegalArgumentException;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("saveBackStack(\"");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\") must be self contained and not reference fragments from non-saved FragmentTransactions. Found reference to fragment");

        $i8 = virtualinvoke r75.<java.util.HashSet: int size()>();

        if $i8 != 1 goto label13;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r57 = virtualinvoke r75.<java.util.HashSet: java.util.Iterator iterator()>();

        $r58 = interfaceinvoke $r57.<java.util.Iterator: java.lang.Object next()>();

        $r59 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r58);

        $r80 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label14;

     label13:
        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("s ");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r75);

        $r80 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

     label14:
        $r50 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r80);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r74);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that were previously added to the FragmentManager through a separate FragmentTransaction.");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r42.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r54);

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>($r42);

     label15:
        i14 = i14 + 1;

        goto label05;

     label16:
        $r8 = new java.util.ArrayDeque;

        specialinvoke $r8.<java.util.ArrayDeque: void <init>(java.util.Collection)>(r73);

        r81 = $r8;

     label17:
        $z0 = virtualinvoke r81.<java.util.ArrayDeque: boolean isEmpty()>();

        if $z0 != 0 goto label24;

        $r25 = virtualinvoke r81.<java.util.ArrayDeque: java.lang.Object removeFirst()>();

        r82 = (androidx.fragment.app.Fragment) $r25;

        $z6 = r82.<androidx.fragment.app.Fragment: boolean mRetainInstance>;

        if $z6 == 0 goto label20;

        $r27 = new java.lang.IllegalArgumentException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("saveBackStack(\"");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\") must not contain retained fragments. Found ");

        $z7 = virtualinvoke r73.<java.util.HashSet: boolean contains(java.lang.Object)>(r82);

        if $z7 == 0 goto label18;

        $r83 = "direct reference to retained ";

        goto label19;

     label18:
        $r83 = "retained child ";

     label19:
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r83);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fragment ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r82);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r35);

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>($r27);

     label20:
        $r84 = r82.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mChildFragmentManager>;

        $r85 = virtualinvoke $r84.<androidx.fragment.app.FragmentManager: java.util.List getActiveFragments()>();

        r86 = interfaceinvoke $r85.<java.util.List: java.util.Iterator iterator()>();

     label21:
        $z16 = interfaceinvoke r86.<java.util.Iterator: boolean hasNext()>();

        if $z16 == 0 goto label23;

        $r26 = interfaceinvoke r86.<java.util.Iterator: java.lang.Object next()>();

        r87 = (androidx.fragment.app.Fragment) $r26;

        if r87 == null goto label22;

        virtualinvoke r81.<java.util.ArrayDeque: void addLast(java.lang.Object)>(r87);

     label22:
        goto label21;

     label23:
        goto label17;

     label24:
        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r88 = $r9;

        r89 = virtualinvoke r73.<java.util.HashSet: java.util.Iterator iterator()>();

     label25:
        $z1 = interfaceinvoke r89.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label26;

        $r23 = interfaceinvoke r89.<java.util.Iterator: java.lang.Object next()>();

        r90 = (androidx.fragment.app.Fragment) $r23;

        $r24 = r90.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        virtualinvoke r88.<java.util.ArrayList: boolean add(java.lang.Object)>($r24);

        goto label25;

     label26:
        $r10 = new java.util.ArrayList;

        $r11 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack>;

        $i3 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        $i4 = $i3 - i0;

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>($i4);

        r91 = $r10;

        i16 = i0;

     label27:
        $r12 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack>;

        $i5 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        if i16 >= $i5 goto label28;

        virtualinvoke r91.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

        i16 = i16 + 1;

        goto label27;

     label28:
        $r13 = new androidx.fragment.app.BackStackState;

        specialinvoke $r13.<androidx.fragment.app.BackStackState: void <init>(java.util.List,java.util.List)>(r88, r91);

        r92 = $r13;

        $r14 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack>;

        $i6 = virtualinvoke $r14.<java.util.ArrayList: int size()>();

        i17 = $i6 - 1;

     label29:
        if i17 < i0 goto label30;

        $r17 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack>;

        $r18 = virtualinvoke $r17.<java.util.ArrayList: java.lang.Object remove(int)>(i17);

        r93 = (androidx.fragment.app.BackStackRecord) $r18;

        $r19 = new androidx.fragment.app.BackStackRecord;

        specialinvoke $r19.<androidx.fragment.app.BackStackRecord: void <init>(androidx.fragment.app.BackStackRecord)>(r93);

        r94 = $r19;

        virtualinvoke r94.<androidx.fragment.app.BackStackRecord: void collapseOps()>();

        $r20 = new androidx.fragment.app.BackStackRecordState;

        specialinvoke $r20.<androidx.fragment.app.BackStackRecordState: void <init>(androidx.fragment.app.BackStackRecord)>(r94);

        r4 = $r20;

        $i7 = i17 - i0;

        virtualinvoke r91.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>($i7, r4);

        r93.<androidx.fragment.app.BackStackRecord: boolean mBeingSaved> = 1;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r93);

        $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r22);

        i17 = i17 + -1;

        goto label29;

     label30:
        $r15 = r0.<androidx.fragment.app.FragmentManager: java.util.Map mBackStackStates>;

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r92);

        return 1;
    }

    boolean clearBackStackState(java.util.ArrayList, java.util.ArrayList, java.lang.String)
    {
        androidx.fragment.app.FragmentManager r0;
        java.util.ArrayList r1, r2;
        java.lang.String r3;
        boolean z0, $z1;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: java.util.ArrayList;

        r3 := @parameter2: java.lang.String;

        z0 = virtualinvoke r0.<androidx.fragment.app.FragmentManager: boolean restoreBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String)>(r1, r2, r3);

        if z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = virtualinvoke r0.<androidx.fragment.app.FragmentManager: boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int)>(r1, r2, r3, -1, 1);

        return $z1;
    }

    boolean popBackStackState(java.util.ArrayList, java.util.ArrayList, java.lang.String, int, int)
    {
        androidx.fragment.app.FragmentManager r0;
        java.util.ArrayList r1, r2, $r4, $r5;
        java.lang.String r3;
        int i0, i1, i2, $i3, $i4, i6;
        java.lang.Object $r6;
        androidx.fragment.app.BackStackRecord $r7;
        java.lang.Boolean $r8;
        boolean $z2;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: java.util.ArrayList;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        $i3 = i1 & 1;

        if $i3 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        i2 = specialinvoke r0.<androidx.fragment.app.FragmentManager: int findBackStackIndex(java.lang.String,int,boolean)>(r3, i0, $z2);

        if i2 >= 0 goto label3;

        return 0;

     label3:
        $r4 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack>;

        $i4 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i6 = $i4 - 1;

     label4:
        if i6 < i2 goto label5;

        $r5 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object remove(int)>(i6);

        $r7 = (androidx.fragment.app.BackStackRecord) $r6;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        i6 = i6 + -1;

        goto label4;

     label5:
        return 1;
    }

    private int findBackStackIndex(java.lang.String, int, boolean)
    {
        androidx.fragment.app.FragmentManager r0;
        java.lang.String r1, $r8, $r11;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        boolean z0, $z1, $z2, $z3;
        java.util.ArrayList $r2, $r3, $r4, $r5, $r6, $r9, $r12;
        java.lang.Object $r7, $r10;
        androidx.fragment.app.BackStackRecord r13, r14;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r2 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack>;

        if $r2 == null goto label01;

        $r3 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack>;

        $z1 = virtualinvoke $r3.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label02;

     label01:
        return -1;

     label02:
        if r1 != null goto label04;

        if i0 >= 0 goto label04;

        if z0 == 0 goto label03;

        return 0;

     label03:
        $r12 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack>;

        $i7 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        $i8 = $i7 - 1;

        return $i8;

     label04:
        $r4 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i9 = $i1 - 1;

     label05:
        if i9 < 0 goto label08;

        $r9 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        r13 = (androidx.fragment.app.BackStackRecord) $r10;

        if r1 == null goto label06;

        $r11 = virtualinvoke r13.<androidx.fragment.app.BackStackRecord: java.lang.String getName()>();

        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z3 == 0 goto label06;

        goto label08;

     label06:
        if i0 < 0 goto label07;

        $i6 = r13.<androidx.fragment.app.BackStackRecord: int mIndex>;

        if i0 != $i6 goto label07;

        goto label08;

     label07:
        i9 = i9 + -1;

        goto label05;

     label08:
        if i9 >= 0 goto label09;

        return i9;

     label09:
        if z0 == 0 goto label13;

     label10:
        if i9 <= 0 goto label15;

        $r6 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack>;

        $i4 = i9 - 1;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>($i4);

        r14 = (androidx.fragment.app.BackStackRecord) $r7;

        if r1 == null goto label11;

        $r8 = virtualinvoke r14.<androidx.fragment.app.BackStackRecord: java.lang.String getName()>();

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z2 != 0 goto label12;

     label11:
        if i0 < 0 goto label15;

        $i5 = r14.<androidx.fragment.app.BackStackRecord: int mIndex>;

        if i0 != $i5 goto label15;

     label12:
        i9 = i9 + -1;

        goto label10;

     label13:
        $r5 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack>;

        $i2 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        $i3 = $i2 - 1;

        if i9 != $i3 goto label14;

        return -1;

     label14:
        i9 = i9 + 1;

     label15:
        return i9;
    }

    androidx.fragment.app.FragmentManagerNonConfig retainNonConfig()
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.FragmentHostCallback $r1;
        boolean $z0;
        androidx.fragment.app.FragmentManagerViewModel $r2;
        androidx.fragment.app.FragmentManagerNonConfig $r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: androidx.fragment.app.FragmentManager;

        $r1 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $z0 = $r1 instanceof androidx.lifecycle.ViewModelStoreOwner;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You cannot use retainNonConfig when your FragmentHostCallback implements ViewModelStoreOwner.");

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>($r4);

     label1:
        $r2 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerViewModel mNonConfig>;

        $r3 = virtualinvoke $r2.<androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerNonConfig getSnapshot()>();

        return $r3;
    }

    android.os.Parcelable saveAllState()
    {
        androidx.fragment.app.FragmentManager r0;
        android.os.Bundle r1, $r4;
        androidx.fragment.app.FragmentHostCallback $r2;
        boolean $z0, $z1;
        java.lang.IllegalStateException r5;
        android.os.Parcelable r6;

        r0 := @this: androidx.fragment.app.FragmentManager;

        $r2 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $z0 = $r2 instanceof androidx.savedstate.SavedStateRegistryOwner;

        if $z0 == 0 goto label1;

        r5 = new java.lang.IllegalStateException;

        specialinvoke r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You cannot use saveAllState when your FragmentHostCallback implements SavedStateRegistryOwner.");

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>(r5);

     label1:
        r1 = virtualinvoke r0.<androidx.fragment.app.FragmentManager: android.os.Bundle saveAllStateInternal()>();

        $z1 = virtualinvoke r1.<android.os.Bundle: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        $r4 = null;

        goto label3;

     label2:
        $r4 = r1;

     label3:
        r6 = (android.os.Parcelable) $r4;

        return r6;
    }

    android.os.Bundle saveAllStateInternal()
    {
        androidx.fragment.app.FragmentManager r0;
        android.os.Bundle r1, r5, $r6, $r23, $r36;
        java.util.ArrayList r2, r3, r4, $r11, $r13, $r16, $r18, $r39, $r41, $r48;
        androidx.fragment.app.FragmentManagerViewModel $r7;
        androidx.fragment.app.FragmentStore $r8, $r9, $r10;
        boolean $z1, $z4, $z5, $z6, $z7;
        java.util.Map $r12, $r15, $r20, $r34;
        java.util.Set $r14, $r21;
        java.util.Collection $r17;
        java.util.ArrayDeque $r19;
        java.lang.Object $r22, $r29, $r35, $r42, $r49;
        java.lang.StringBuilder $r24, $r25, $r27, $r30, $r31, $r32, $r44, $r45, $r46, $r47, $r50;
        java.lang.String $r26, $r28, $r33, $r38, $r51, r58;
        androidx.fragment.app.Fragment $r37, $r56;
        androidx.fragment.app.BackStackRecordState $r40;
        androidx.fragment.app.BackStackRecord $r43;
        androidx.fragment.app.BackStackRecordState[] r52;
        int i2, i3, $i4;
        androidx.fragment.app.FragmentManagerState $r53, r54;
        java.util.concurrent.atomic.AtomicInteger $r55;
        java.util.Iterator r57, r59;
        androidx.fragment.app.FragmentState r60;

        r0 := @this: androidx.fragment.app.FragmentManager;

        $r6 = new android.os.Bundle;

        specialinvoke $r6.<android.os.Bundle: void <init>()>();

        r1 = $r6;

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void forcePostponedTransactions()>();

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void endAnimatingAwayFragments()>();

        virtualinvoke r0.<androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>(1);

        r0.<androidx.fragment.app.FragmentManager: boolean mStateSaved> = 1;

        $r7 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerViewModel mNonConfig>;

        virtualinvoke $r7.<androidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)>(1);

        $r8 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        r2 = virtualinvoke $r8.<androidx.fragment.app.FragmentStore: java.util.ArrayList saveActiveFragments()>();

        $r9 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        r3 = virtualinvoke $r9.<androidx.fragment.app.FragmentStore: java.util.ArrayList getAllSavedState()>();

        $z1 = virtualinvoke r3.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        $z6 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2);

        if $z6 == 0 goto label9;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", "saveAllState: no fragments!");

        goto label9;

     label1:
        $r10 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        r4 = virtualinvoke $r10.<androidx.fragment.app.FragmentStore: java.util.ArrayList saveAddedFragments()>();

        r52 = null;

        $r11 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack>;

        if $r11 == null goto label4;

        $r39 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack>;

        i2 = virtualinvoke $r39.<java.util.ArrayList: int size()>();

        if i2 <= 0 goto label4;

        r52 = newarray (androidx.fragment.app.BackStackRecordState)[i2];

        i3 = 0;

     label2:
        if i3 >= i2 goto label4;

        $r40 = new androidx.fragment.app.BackStackRecordState;

        $r41 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack>;

        $r42 = virtualinvoke $r41.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r43 = (androidx.fragment.app.BackStackRecord) $r42;

        specialinvoke $r40.<androidx.fragment.app.BackStackRecordState: void <init>(androidx.fragment.app.BackStackRecord)>($r43);

        r52[i3] = $r40;

        $z5 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2);

        if $z5 == 0 goto label3;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("saveAllState: adding back stack #");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r48 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack>;

        $r49 = virtualinvoke $r48.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r50 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r49);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r51);

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        $r53 = new androidx.fragment.app.FragmentManagerState;

        specialinvoke $r53.<androidx.fragment.app.FragmentManagerState: void <init>()>();

        r54 = $r53;

        r54.<androidx.fragment.app.FragmentManagerState: java.util.ArrayList mActive> = r2;

        r54.<androidx.fragment.app.FragmentManagerState: java.util.ArrayList mAdded> = r4;

        r54.<androidx.fragment.app.FragmentManagerState: androidx.fragment.app.BackStackRecordState[] mBackStack> = r52;

        $r55 = r0.<androidx.fragment.app.FragmentManager: java.util.concurrent.atomic.AtomicInteger mBackStackIndex>;

        $i4 = virtualinvoke $r55.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        r54.<androidx.fragment.app.FragmentManagerState: int mBackStackIndex> = $i4;

        $r56 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mPrimaryNav>;

        if $r56 == null goto label5;

        $r37 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mPrimaryNav>;

        $r38 = $r37.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        r54.<androidx.fragment.app.FragmentManagerState: java.lang.String mPrimaryNavActiveWho> = $r38;

     label5:
        $r13 = r54.<androidx.fragment.app.FragmentManagerState: java.util.ArrayList mBackStackStateKeys>;

        $r12 = r0.<androidx.fragment.app.FragmentManager: java.util.Map mBackStackStates>;

        $r14 = interfaceinvoke $r12.<java.util.Map: java.util.Set keySet()>();

        virtualinvoke $r13.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r14);

        $r16 = r54.<androidx.fragment.app.FragmentManagerState: java.util.ArrayList mBackStackStates>;

        $r15 = r0.<androidx.fragment.app.FragmentManager: java.util.Map mBackStackStates>;

        $r17 = interfaceinvoke $r15.<java.util.Map: java.util.Collection values()>();

        virtualinvoke $r16.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r17);

        $r18 = new java.util.ArrayList;

        $r19 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayDeque mLaunchedFragments>;

        specialinvoke $r18.<java.util.ArrayList: void <init>(java.util.Collection)>($r19);

        r54.<androidx.fragment.app.FragmentManagerState: java.util.ArrayList mLaunchedFragments> = $r18;

        virtualinvoke r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("state", r54);

        $r20 = r0.<androidx.fragment.app.FragmentManager: java.util.Map mResults>;

        $r21 = interfaceinvoke $r20.<java.util.Map: java.util.Set keySet()>();

        r57 = interfaceinvoke $r21.<java.util.Set: java.util.Iterator iterator()>();

     label6:
        $z7 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label7;

        $r29 = interfaceinvoke r57.<java.util.Iterator: java.lang.Object next()>();

        r58 = (java.lang.String) $r29;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("result_");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r58);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        $r34 = r0.<androidx.fragment.app.FragmentManager: java.util.Map mResults>;

        $r35 = interfaceinvoke $r34.<java.util.Map: java.lang.Object get(java.lang.Object)>(r58);

        $r36 = (android.os.Bundle) $r35;

        virtualinvoke r1.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>($r33, $r36);

        goto label6;

     label7:
        r59 = virtualinvoke r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label8:
        $z4 = interfaceinvoke r59.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label9;

        $r22 = interfaceinvoke r59.<java.util.Iterator: java.lang.Object next()>();

        r60 = (androidx.fragment.app.FragmentState) $r22;

        $r23 = new android.os.Bundle;

        specialinvoke $r23.<android.os.Bundle: void <init>()>();

        r5 = $r23;

        virtualinvoke r5.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("state", r60);

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fragment_");

        $r26 = r60.<androidx.fragment.app.FragmentState: java.lang.String mWho>;

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>($r28, r5);

        goto label8;

     label9:
        return r1;
    }

    void restoreAllState(android.os.Parcelable, androidx.fragment.app.FragmentManagerNonConfig)
    {
        androidx.fragment.app.FragmentManager r0;
        android.os.Parcelable r1;
        androidx.fragment.app.FragmentManagerNonConfig r2;
        androidx.fragment.app.FragmentHostCallback $r3;
        boolean $z0;
        androidx.fragment.app.FragmentManagerViewModel $r4;
        java.lang.IllegalStateException $r5;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: android.os.Parcelable;

        r2 := @parameter1: androidx.fragment.app.FragmentManagerNonConfig;

        $r3 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $z0 = $r3 instanceof androidx.lifecycle.ViewModelStoreOwner;

        if $z0 == 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You must use restoreSaveState when your FragmentHostCallback implements ViewModelStoreOwner");

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>($r5);

     label1:
        $r4 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerViewModel mNonConfig>;

        virtualinvoke $r4.<androidx.fragment.app.FragmentManagerViewModel: void restoreFromSnapshot(androidx.fragment.app.FragmentManagerNonConfig)>(r2);

        virtualinvoke r0.<androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)>(r1);

        return;
    }

    void restoreSaveState(android.os.Parcelable)
    {
        androidx.fragment.app.FragmentManager r0;
        android.os.Parcelable r1;
        androidx.fragment.app.FragmentHostCallback $r2;
        boolean $z0;
        java.lang.IllegalStateException $r3;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: android.os.Parcelable;

        $r2 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $z0 = $r2 instanceof androidx.savedstate.SavedStateRegistryOwner;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You cannot use restoreSaveState when your FragmentHostCallback implements SavedStateRegistryOwner.");

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>($r3);

     label1:
        virtualinvoke r0.<androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)>(r1);

        return;
    }

    void restoreSaveStateInternal(android.os.Parcelable)
    {
        androidx.fragment.app.FragmentManager r0;
        android.os.Parcelable r1, $r9, $r94;
        android.os.Bundle r2, r105, r110;
        androidx.fragment.app.Fragment r3, r4, $r29, $r30, r117;
        java.util.Set $r5, $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z6, $z7, $z8, $z9, $z10, $z12;
        java.util.ArrayList $r6, $r11, $r14, $r20, $r23, $r31, $r36, $r58, r107, r122;
        androidx.fragment.app.FragmentStore $r8, $r10, $r15, $r49, $r52, $r62, $r68, $r75, $r84;
        androidx.fragment.app.FragmentManagerViewModel $r12, $r50, $r64;
        java.util.Collection $r13;
        androidx.fragment.app.BackStackRecordState[] $r16, $r32, $r33, $r34;
        int $i0, $i1, $i2, $i3, $i4, $i7, $i10, i11, i12;
        java.util.concurrent.atomic.AtomicInteger $r17;
        java.lang.String $r18, $r24, $r28, $r44, $r48, $r60, $r63, $r78, $r82, $r89, $r100, r104, r106, r109, r113;
        java.util.ArrayDeque $r19;
        java.util.Map $r21, $r101;
        java.lang.Object $r22, $r25, $r47, $r61, $r90, $r96;
        androidx.fragment.app.BackStackState $r26;
        androidx.fragment.app.BackStackRecordState $r35;
        java.lang.StringBuilder $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r54, $r55, $r56, $r57, $r59, $r76, $r77, $r79, $r80, $r81, $r86, $r87, $r88;
        androidx.fragment.app.LogWriter $r45, r120;
        java.io.PrintWriter $r46, r121;
        androidx.fragment.app.FragmentStateManager $r51, $r65, $r83, r115, r118;
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher $r53, $r67, $r85;
        androidx.fragment.app.FragmentHostCallback $r66, $r72, $r91, $r97;
        android.content.Context $r69, $r73, $r92, $r98;
        java.lang.ClassLoader $r70, $r74, $r93, $r99;
        androidx.fragment.app.FragmentFactory $r71;
        androidx.fragment.app.FragmentState $r95, r114;
        java.util.Iterator r103, r108, r112, r116;
        androidx.fragment.app.FragmentManagerState r111;
        androidx.fragment.app.BackStackRecord r119;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: android.os.Parcelable;

        if r1 != null goto label01;

        return;

     label01:
        r2 = (android.os.Bundle) r1;

        $r5 = virtualinvoke r2.<android.os.Bundle: java.util.Set keySet()>();

        r103 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r103.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r96 = interfaceinvoke r103.<java.util.Iterator: java.lang.Object next()>();

        r104 = (java.lang.String) $r96;

        $z12 = virtualinvoke r104.<java.lang.String: boolean startsWith(java.lang.String)>("result_");

        if $z12 == 0 goto label03;

        r105 = virtualinvoke r2.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>(r104);

        if r105 == null goto label03;

        $r97 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $r98 = virtualinvoke $r97.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        $r99 = virtualinvoke $r98.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke r105.<android.os.Bundle: void setClassLoader(java.lang.ClassLoader)>($r99);

        $r100 = "result_";

        $i10 = virtualinvoke $r100.<java.lang.String: int length()>();

        r106 = virtualinvoke r104.<java.lang.String: java.lang.String substring(int)>($i10);

        $r101 = r0.<androidx.fragment.app.FragmentManager: java.util.Map mResults>;

        interfaceinvoke $r101.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r106, r105);

     label03:
        goto label02;

     label04:
        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r107 = $r6;

        $r7 = virtualinvoke r2.<android.os.Bundle: java.util.Set keySet()>();

        r108 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z1 = interfaceinvoke r108.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r90 = interfaceinvoke r108.<java.util.Iterator: java.lang.Object next()>();

        r109 = (java.lang.String) $r90;

        $z10 = virtualinvoke r109.<java.lang.String: boolean startsWith(java.lang.String)>("fragment_");

        if $z10 == 0 goto label06;

        r110 = virtualinvoke r2.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>(r109);

        if r110 == null goto label06;

        $r91 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $r92 = virtualinvoke $r91.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        $r93 = virtualinvoke $r92.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke r110.<android.os.Bundle: void setClassLoader(java.lang.ClassLoader)>($r93);

        $r94 = virtualinvoke r110.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("state");

        $r95 = (androidx.fragment.app.FragmentState) $r94;

        virtualinvoke r107.<java.util.ArrayList: boolean add(java.lang.Object)>($r95);

     label06:
        goto label05;

     label07:
        $r8 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        virtualinvoke $r8.<androidx.fragment.app.FragmentStore: void restoreSaveState(java.util.ArrayList)>(r107);

        $r9 = virtualinvoke r2.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("state");

        r111 = (androidx.fragment.app.FragmentManagerState) $r9;

        if r111 != null goto label08;

        return;

     label08:
        $r10 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        virtualinvoke $r10.<androidx.fragment.app.FragmentStore: void resetActiveFragments()>();

        $r11 = r111.<androidx.fragment.app.FragmentManagerState: java.util.ArrayList mActive>;

        r112 = virtualinvoke $r11.<java.util.ArrayList: java.util.Iterator iterator()>();

     label09:
        $z2 = interfaceinvoke r112.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label15;

        $r61 = interfaceinvoke r112.<java.util.Iterator: java.lang.Object next()>();

        r113 = (java.lang.String) $r61;

        $r62 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        r114 = virtualinvoke $r62.<androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentState setSavedState(java.lang.String,androidx.fragment.app.FragmentState)>(r113, null);

        if r114 == null goto label14;

        $r64 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerViewModel mNonConfig>;

        $r63 = r114.<androidx.fragment.app.FragmentState: java.lang.String mWho>;

        r3 = virtualinvoke $r64.<androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.Fragment findRetainedFragmentByWho(java.lang.String)>($r63);

        if r3 == null goto label11;

        $z9 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2);

        if $z9 == 0 goto label10;

        $r86 = new java.lang.StringBuilder;

        specialinvoke $r86.<java.lang.StringBuilder: void <init>()>();

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("restoreSaveState: re-attaching retained ");

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r89);

     label10:
        $r83 = new androidx.fragment.app.FragmentStateManager;

        $r85 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher mLifecycleCallbacksDispatcher>;

        $r84 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        specialinvoke $r83.<androidx.fragment.app.FragmentStateManager: void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentState)>($r85, $r84, r3, r114);

        r115 = $r83;

        goto label12;

     label11:
        $r65 = new androidx.fragment.app.FragmentStateManager;

        $r67 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher mLifecycleCallbacksDispatcher>;

        $r68 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        $r66 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $r69 = virtualinvoke $r66.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        $r70 = virtualinvoke $r69.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

        $r71 = virtualinvoke r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory getFragmentFactory()>();

        specialinvoke $r65.<androidx.fragment.app.FragmentStateManager: void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,java.lang.ClassLoader,androidx.fragment.app.FragmentFactory,androidx.fragment.app.FragmentState)>($r67, $r68, $r70, $r71, r114);

        r115 = $r65;

     label12:
        r4 = virtualinvoke r115.<androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment getFragment()>();

        r4.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mFragmentManager> = r0;

        $z8 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2);

        if $z8 == 0 goto label13;

        $r76 = new java.lang.StringBuilder;

        specialinvoke $r76.<java.lang.StringBuilder: void <init>()>();

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("restoreSaveState: active (");

        $r78 = r4.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        $r79 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r78);

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r82);

     label13:
        $r72 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $r73 = virtualinvoke $r72.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        $r74 = virtualinvoke $r73.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke r115.<androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)>($r74);

        $r75 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        virtualinvoke $r75.<androidx.fragment.app.FragmentStore: void makeActive(androidx.fragment.app.FragmentStateManager)>(r115);

        $i7 = r0.<androidx.fragment.app.FragmentManager: int mCurState>;

        virtualinvoke r115.<androidx.fragment.app.FragmentStateManager: void setFragmentManagerState(int)>($i7);

     label14:
        goto label09;

     label15:
        $r12 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerViewModel mNonConfig>;

        $r13 = virtualinvoke $r12.<androidx.fragment.app.FragmentManagerViewModel: java.util.Collection getRetainedFragments()>();

        r116 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();

     label16:
        $z3 = interfaceinvoke r116.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label19;

        $r47 = interfaceinvoke r116.<java.util.Iterator: java.lang.Object next()>();

        r117 = (androidx.fragment.app.Fragment) $r47;

        $r49 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        $r48 = r117.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        $z6 = virtualinvoke $r49.<androidx.fragment.app.FragmentStore: boolean containsActiveFragment(java.lang.String)>($r48);

        if $z6 != 0 goto label18;

        $z7 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2);

        if $z7 == 0 goto label17;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Discarding retained Fragment ");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r117);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that was not found in the set of active Fragments ");

        $r58 = r111.<androidx.fragment.app.FragmentManagerState: java.util.ArrayList mActive>;

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r58);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r60);

     label17:
        $r50 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerViewModel mNonConfig>;

        virtualinvoke $r50.<androidx.fragment.app.FragmentManagerViewModel: void removeRetainedFragment(androidx.fragment.app.Fragment)>(r117);

        r117.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mFragmentManager> = r0;

        $r51 = new androidx.fragment.app.FragmentStateManager;

        $r53 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher mLifecycleCallbacksDispatcher>;

        $r52 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        specialinvoke $r51.<androidx.fragment.app.FragmentStateManager: void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment)>($r53, $r52, r117);

        r118 = $r51;

        virtualinvoke r118.<androidx.fragment.app.FragmentStateManager: void setFragmentManagerState(int)>(1);

        virtualinvoke r118.<androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>();

        r117.<androidx.fragment.app.Fragment: boolean mRemoving> = 1;

        virtualinvoke r118.<androidx.fragment.app.FragmentStateManager: void moveToExpectedState()>();

     label18:
        goto label16;

     label19:
        $r15 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        $r14 = r111.<androidx.fragment.app.FragmentManagerState: java.util.ArrayList mAdded>;

        virtualinvoke $r15.<androidx.fragment.app.FragmentStore: void restoreAddedFragments(java.util.List)>($r14);

        $r16 = r111.<androidx.fragment.app.FragmentManagerState: androidx.fragment.app.BackStackRecordState[] mBackStack>;

        if $r16 == null goto label23;

        $r31 = new java.util.ArrayList;

        $r32 = r111.<androidx.fragment.app.FragmentManagerState: androidx.fragment.app.BackStackRecordState[] mBackStack>;

        $i2 = lengthof $r32;

        specialinvoke $r31.<java.util.ArrayList: void <init>(int)>($i2);

        r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack> = $r31;

        i11 = 0;

     label20:
        $r33 = r111.<androidx.fragment.app.FragmentManagerState: androidx.fragment.app.BackStackRecordState[] mBackStack>;

        $i3 = lengthof $r33;

        if i11 >= $i3 goto label22;

        $r34 = r111.<androidx.fragment.app.FragmentManagerState: androidx.fragment.app.BackStackRecordState[] mBackStack>;

        $r35 = $r34[i11];

        r119 = virtualinvoke $r35.<androidx.fragment.app.BackStackRecordState: androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManager)>(r0);

        $z4 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2);

        if $z4 == 0 goto label21;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("restoreAllState: back stack #");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (index ");

        $i4 = r119.<androidx.fragment.app.BackStackRecord: int mIndex>;

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r119);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r44);

        $r45 = new androidx.fragment.app.LogWriter;

        specialinvoke $r45.<androidx.fragment.app.LogWriter: void <init>(java.lang.String)>("FragmentManager");

        r120 = $r45;

        $r46 = new java.io.PrintWriter;

        specialinvoke $r46.<java.io.PrintWriter: void <init>(java.io.Writer)>(r120);

        r121 = $r46;

        virtualinvoke r119.<androidx.fragment.app.BackStackRecord: void dump(java.lang.String,java.io.PrintWriter,boolean)>("  ", r121, 0);

        virtualinvoke r121.<java.io.PrintWriter: void close()>();

     label21:
        $r36 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack>;

        virtualinvoke $r36.<java.util.ArrayList: boolean add(java.lang.Object)>(r119);

        i11 = i11 + 1;

        goto label20;

     label22:
        goto label24;

     label23:
        r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack> = null;

     label24:
        $r17 = r0.<androidx.fragment.app.FragmentManager: java.util.concurrent.atomic.AtomicInteger mBackStackIndex>;

        $i0 = r111.<androidx.fragment.app.FragmentManagerState: int mBackStackIndex>;

        virtualinvoke $r17.<java.util.concurrent.atomic.AtomicInteger: void set(int)>($i0);

        $r18 = r111.<androidx.fragment.app.FragmentManagerState: java.lang.String mPrimaryNavActiveWho>;

        if $r18 == null goto label25;

        $r28 = r111.<androidx.fragment.app.FragmentManagerState: java.lang.String mPrimaryNavActiveWho>;

        $r29 = virtualinvoke r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findActiveFragment(java.lang.String)>($r28);

        r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mPrimaryNav> = $r29;

        $r30 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mPrimaryNav>;

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment)>($r30);

     label25:
        r122 = r111.<androidx.fragment.app.FragmentManagerState: java.util.ArrayList mBackStackStateKeys>;

        if r122 == null goto label27;

        i12 = 0;

     label26:
        $i1 = virtualinvoke r122.<java.util.ArrayList: int size()>();

        if i12 >= $i1 goto label27;

        $r21 = r0.<androidx.fragment.app.FragmentManager: java.util.Map mBackStackStates>;

        $r22 = virtualinvoke r122.<java.util.ArrayList: java.lang.Object get(int)>(i12);

        $r24 = (java.lang.String) $r22;

        $r23 = r111.<androidx.fragment.app.FragmentManagerState: java.util.ArrayList mBackStackStates>;

        $r25 = virtualinvoke $r23.<java.util.ArrayList: java.lang.Object get(int)>(i12);

        $r26 = (androidx.fragment.app.BackStackState) $r25;

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, $r26);

        i12 = i12 + 1;

        goto label26;

     label27:
        $r19 = new java.util.ArrayDeque;

        $r20 = r111.<androidx.fragment.app.FragmentManagerState: java.util.ArrayList mLaunchedFragments>;

        specialinvoke $r19.<java.util.ArrayDeque: void <init>(java.util.Collection)>($r20);

        r0.<androidx.fragment.app.FragmentManager: java.util.ArrayDeque mLaunchedFragments> = $r19;

        return;
    }

    public androidx.fragment.app.FragmentHostCallback getHost()
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.FragmentHostCallback $r1;

        r0 := @this: androidx.fragment.app.FragmentManager;

        $r1 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        return $r1;
    }

    androidx.fragment.app.Fragment getParent()
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.Fragment $r1;

        r0 := @this: androidx.fragment.app.FragmentManager;

        $r1 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mParent>;

        return $r1;
    }

    androidx.fragment.app.FragmentContainer getContainer()
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.FragmentContainer $r1;

        r0 := @this: androidx.fragment.app.FragmentManager;

        $r1 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentContainer mContainer>;

        return $r1;
    }

    androidx.fragment.app.FragmentStore getFragmentStore()
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.FragmentStore $r1;

        r0 := @this: androidx.fragment.app.FragmentManager;

        $r1 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        return $r1;
    }

    void attachController(androidx.fragment.app.FragmentHostCallback, androidx.fragment.app.FragmentContainer, androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManager r0, $r58;
        androidx.fragment.app.FragmentHostCallback r1, $r5, $r8, $r9, $r10, $r11, $r12, $r15, $r17, $r19, $r21, $r23, $r53, $r74, $r77, $r81;
        androidx.fragment.app.FragmentContainer r2;
        androidx.fragment.app.Fragment r3, $r6, $r66;
        java.lang.String r4, $r31, $r38, $r45, $r50, $r79, r80;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        androidx.core.view.MenuProvider $r13;
        androidx.core.view.MenuHost $r14;
        androidx.core.util.Consumer $r16, $r18, $r20, $r22;
        androidx.activity.result.ActivityResultRegistryOwner $r24;
        java.lang.StringBuilder $r26, $r27, $r29, $r30, $r36, $r37, $r43, $r44, $r51, $r52, r89, r90, r91, r94, r97;
        androidx.activity.result.ActivityResultLauncher $r34, $r41, $r48;
        androidx.savedstate.SavedStateRegistryOwner $r54;
        androidx.savedstate.SavedStateRegistry$SavedStateProvider $r55;
        androidx.lifecycle.ViewModelStoreOwner $r56;
        androidx.fragment.app.FragmentManagerViewModel $r57, $r59, $r71, $r73, r88;
        androidx.activity.OnBackPressedDispatcher $r60, $r62;
        androidx.activity.OnBackPressedCallback $r61;
        androidx.fragment.app.FragmentOnAttachListener $r63;
        androidx.activity.OnBackPressedDispatcherOwner r67;
        java.lang.Object $r68, r69;
        androidx.lifecycle.ViewModelStore r70;
        androidx.fragment.app.FragmentStore $r72;
        androidx.savedstate.SavedStateRegistry r75;
        android.os.Bundle r76;
        androidx.activity.result.ActivityResultRegistry r78;
        androidx.core.content.OnConfigurationChangedProvider r82;
        androidx.core.content.OnTrimMemoryProvider r83;
        androidx.core.app.OnMultiWindowModeChangedProvider r84;
        androidx.core.app.OnPictureInPictureModeChangedProvider r85;
        java.lang.IllegalStateException r86;
        androidx.fragment.app.FragmentManager$7 r87;
        androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult r92;
        androidx.fragment.app.FragmentManager$8 r93;
        androidx.fragment.app.FragmentManager$FragmentIntentSenderContract r95;
        androidx.fragment.app.FragmentManager$9 r96;
        androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions r98;
        androidx.fragment.app.FragmentManager$10 r99;
        androidx.lifecycle.LifecycleOwner r100;
        android.os.Parcelable r101;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.FragmentHostCallback;

        r2 := @parameter1: androidx.fragment.app.FragmentContainer;

        r3 := @parameter2: androidx.fragment.app.Fragment;

        $r5 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        if $r5 == null goto label01;

        r86 = new java.lang.IllegalStateException;

        specialinvoke r86.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already attached");

        throw r86;

     label01:
        r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost> = r1;

        r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentContainer mContainer> = r2;

        r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mParent> = r3;

        $r6 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mParent>;

        if $r6 == null goto label02;

        r87 = new androidx.fragment.app.FragmentManager$7;

        specialinvoke r87.<androidx.fragment.app.FragmentManager$7: void <init>(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)>(r0, r3);

        virtualinvoke r0.<androidx.fragment.app.FragmentManager: void addFragmentOnAttachListener(androidx.fragment.app.FragmentOnAttachListener)>(r87);

        goto label03;

     label02:
        $z0 = r1 instanceof androidx.fragment.app.FragmentOnAttachListener;

        if $z0 == 0 goto label03;

        $r63 = (androidx.fragment.app.FragmentOnAttachListener) r1;

        virtualinvoke r0.<androidx.fragment.app.FragmentManager: void addFragmentOnAttachListener(androidx.fragment.app.FragmentOnAttachListener)>($r63);

     label03:
        $r66 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mParent>;

        if $r66 == null goto label04;

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void updateOnBackPressedCallbackEnabled()>();

     label04:
        $z1 = r1 instanceof androidx.activity.OnBackPressedDispatcherOwner;

        if $z1 == 0 goto label07;

        r67 = (androidx.activity.OnBackPressedDispatcherOwner) r1;

        $r60 = interfaceinvoke r67.<androidx.activity.OnBackPressedDispatcherOwner: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()>();

        r0.<androidx.fragment.app.FragmentManager: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher> = $r60;

        if r3 == null goto label05;

        $r68 = r3;

        goto label06;

     label05:
        $r68 = r67;

     label06:
        r69 = $r68;

        $r62 = r0.<androidx.fragment.app.FragmentManager: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher>;

        $r61 = r0.<androidx.fragment.app.FragmentManager: androidx.activity.OnBackPressedCallback mOnBackPressedCallback>;

        r100 = (androidx.lifecycle.LifecycleOwner) r69;

        virtualinvoke $r62.<androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)>(r100, $r61);

     label07:
        if r3 == null goto label08;

        $r58 = r3.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mFragmentManager>;

        $r59 = specialinvoke $r58.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)>(r3);

        r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerViewModel mNonConfig> = $r59;

        goto label10;

     label08:
        $z2 = r1 instanceof androidx.lifecycle.ViewModelStoreOwner;

        if $z2 == 0 goto label09;

        $r56 = (androidx.lifecycle.ViewModelStoreOwner) r1;

        r70 = interfaceinvoke $r56.<androidx.lifecycle.ViewModelStoreOwner: androidx.lifecycle.ViewModelStore getViewModelStore()>();

        $r57 = staticinvoke <androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore)>(r70);

        r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerViewModel mNonConfig> = $r57;

        goto label10;

     label09:
        r88 = new androidx.fragment.app.FragmentManagerViewModel;

        specialinvoke r88.<androidx.fragment.app.FragmentManagerViewModel: void <init>(boolean)>(0);

        r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerViewModel mNonConfig> = r88;

     label10:
        $r71 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerViewModel mNonConfig>;

        $z7 = virtualinvoke r0.<androidx.fragment.app.FragmentManager: boolean isStateSaved()>();

        virtualinvoke $r71.<androidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)>($z7);

        $r72 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        $r73 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerViewModel mNonConfig>;

        virtualinvoke $r72.<androidx.fragment.app.FragmentStore: void setNonConfig(androidx.fragment.app.FragmentManagerViewModel)>($r73);

        $r74 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $z8 = $r74 instanceof androidx.savedstate.SavedStateRegistryOwner;

        if $z8 == 0 goto label11;

        if r3 != null goto label11;

        $r53 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $r54 = (androidx.savedstate.SavedStateRegistryOwner) $r53;

        r75 = interfaceinvoke $r54.<androidx.savedstate.SavedStateRegistryOwner: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()>();

        $r55 = dynamicinvoke "saveState" <androidx.savedstate.SavedStateRegistry$SavedStateProvider (androidx.fragment.app.FragmentManager)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: android.os.Bundle __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.fragment.app.FragmentManager: android.os.Bundle lambda$attachController$4()>, methodtype: android.os.Bundle __METHODTYPE__());

        virtualinvoke r75.<androidx.savedstate.SavedStateRegistry: void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)>("android:support:fragments", $r55);

        r76 = virtualinvoke r75.<androidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)>("android:support:fragments");

        if r76 == null goto label11;

        r101 = (android.os.Parcelable) r76;

        virtualinvoke r0.<androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)>(r101);

     label11:
        $r77 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $z9 = $r77 instanceof androidx.activity.result.ActivityResultRegistryOwner;

        if $z9 == 0 goto label14;

        $r23 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $r24 = (androidx.activity.result.ActivityResultRegistryOwner) $r23;

        r78 = interfaceinvoke $r24.<androidx.activity.result.ActivityResultRegistryOwner: androidx.activity.result.ActivityResultRegistry getActivityResultRegistry()>();

        if r3 == null goto label12;

        r89 = new java.lang.StringBuilder;

        specialinvoke r89.<java.lang.StringBuilder: void <init>()>();

        $r50 = r3.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        $r51 = virtualinvoke r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r79 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label13;

     label12:
        $r79 = "";

     label13:
        r80 = $r79;

        r90 = new java.lang.StringBuilder;

        specialinvoke r90.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FragmentManager:");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r80);

        r4 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        r91 = new java.lang.StringBuilder;

        specialinvoke r91.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("StartActivityForResult");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        r92 = new androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult;

        specialinvoke r92.<androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult: void <init>()>();

        r93 = new androidx.fragment.app.FragmentManager$8;

        specialinvoke r93.<androidx.fragment.app.FragmentManager$8: void <init>(androidx.fragment.app.FragmentManager)>(r0);

        $r34 = virtualinvoke r78.<androidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)>($r31, r92, r93);

        r0.<androidx.fragment.app.FragmentManager: androidx.activity.result.ActivityResultLauncher mStartActivityForResult> = $r34;

        r94 = new java.lang.StringBuilder;

        specialinvoke r94.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("StartIntentSenderForResult");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        r95 = new androidx.fragment.app.FragmentManager$FragmentIntentSenderContract;

        specialinvoke r95.<androidx.fragment.app.FragmentManager$FragmentIntentSenderContract: void <init>()>();

        r96 = new androidx.fragment.app.FragmentManager$9;

        specialinvoke r96.<androidx.fragment.app.FragmentManager$9: void <init>(androidx.fragment.app.FragmentManager)>(r0);

        $r41 = virtualinvoke r78.<androidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)>($r38, r95, r96);

        r0.<androidx.fragment.app.FragmentManager: androidx.activity.result.ActivityResultLauncher mStartIntentSenderForResult> = $r41;

        r97 = new java.lang.StringBuilder;

        specialinvoke r97.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RequestPermissions");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        r98 = new androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions;

        specialinvoke r98.<androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: void <init>()>();

        r99 = new androidx.fragment.app.FragmentManager$10;

        specialinvoke r99.<androidx.fragment.app.FragmentManager$10: void <init>(androidx.fragment.app.FragmentManager)>(r0);

        $r48 = virtualinvoke r78.<androidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)>($r45, r98, r99);

        r0.<androidx.fragment.app.FragmentManager: androidx.activity.result.ActivityResultLauncher mRequestPermissions> = $r48;

     label14:
        $r81 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $z10 = $r81 instanceof androidx.core.content.OnConfigurationChangedProvider;

        if $z10 == 0 goto label15;

        $r21 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        r82 = (androidx.core.content.OnConfigurationChangedProvider) $r21;

        $r22 = r0.<androidx.fragment.app.FragmentManager: androidx.core.util.Consumer mOnConfigurationChangedListener>;

        interfaceinvoke r82.<androidx.core.content.OnConfigurationChangedProvider: void addOnConfigurationChangedListener(androidx.core.util.Consumer)>($r22);

     label15:
        $r8 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $z3 = $r8 instanceof androidx.core.content.OnTrimMemoryProvider;

        if $z3 == 0 goto label16;

        $r19 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        r83 = (androidx.core.content.OnTrimMemoryProvider) $r19;

        $r20 = r0.<androidx.fragment.app.FragmentManager: androidx.core.util.Consumer mOnTrimMemoryListener>;

        interfaceinvoke r83.<androidx.core.content.OnTrimMemoryProvider: void addOnTrimMemoryListener(androidx.core.util.Consumer)>($r20);

     label16:
        $r9 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $z4 = $r9 instanceof androidx.core.app.OnMultiWindowModeChangedProvider;

        if $z4 == 0 goto label17;

        $r17 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        r84 = (androidx.core.app.OnMultiWindowModeChangedProvider) $r17;

        $r18 = r0.<androidx.fragment.app.FragmentManager: androidx.core.util.Consumer mOnMultiWindowModeChangedListener>;

        interfaceinvoke r84.<androidx.core.app.OnMultiWindowModeChangedProvider: void addOnMultiWindowModeChangedListener(androidx.core.util.Consumer)>($r18);

     label17:
        $r10 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $z5 = $r10 instanceof androidx.core.app.OnPictureInPictureModeChangedProvider;

        if $z5 == 0 goto label18;

        $r15 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        r85 = (androidx.core.app.OnPictureInPictureModeChangedProvider) $r15;

        $r16 = r0.<androidx.fragment.app.FragmentManager: androidx.core.util.Consumer mOnPictureInPictureModeChangedListener>;

        interfaceinvoke r85.<androidx.core.app.OnPictureInPictureModeChangedProvider: void addOnPictureInPictureModeChangedListener(androidx.core.util.Consumer)>($r16);

     label18:
        $r11 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $z6 = $r11 instanceof androidx.core.view.MenuHost;

        if $z6 == 0 goto label19;

        if r3 != null goto label19;

        $r12 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $r14 = (androidx.core.view.MenuHost) $r12;

        $r13 = r0.<androidx.fragment.app.FragmentManager: androidx.core.view.MenuProvider mMenuProvider>;

        interfaceinvoke $r14.<androidx.core.view.MenuHost: void addMenuProvider(androidx.core.view.MenuProvider)>($r13);

     label19:
        return;
    }

    void noteStateNotSaved()
    {
        androidx.fragment.app.FragmentManager r0;
        java.util.Iterator r1;
        androidx.fragment.app.Fragment r2;
        androidx.fragment.app.FragmentHostCallback $r3;
        androidx.fragment.app.FragmentManagerViewModel $r4;
        androidx.fragment.app.FragmentStore $r5;
        java.util.List $r6;
        boolean $z0;
        java.lang.Object $r7;

        r0 := @this: androidx.fragment.app.FragmentManager;

        $r3 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        if $r3 != null goto label1;

        return;

     label1:
        r0.<androidx.fragment.app.FragmentManager: boolean mStateSaved> = 0;

        r0.<androidx.fragment.app.FragmentManager: boolean mStopped> = 0;

        $r4 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerViewModel mNonConfig>;

        virtualinvoke $r4.<androidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)>(0);

        $r5 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        $r6 = virtualinvoke $r5.<androidx.fragment.app.FragmentStore: java.util.List getFragments()>();

        r1 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.fragment.app.Fragment) $r7;

        if r2 == null goto label3;

        virtualinvoke r2.<androidx.fragment.app.Fragment: void noteStateNotSaved()>();

     label3:
        goto label2;

     label4:
        return;
    }

    void launchStartActivityForResult(androidx.fragment.app.Fragment, android.content.Intent, int, android.os.Bundle)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.Fragment r1;
        android.content.Intent r2;
        int i0;
        android.os.Bundle r3;
        androidx.fragment.app.FragmentManager$LaunchedFragmentInfo r4, $r7;
        androidx.activity.result.ActivityResultLauncher $r5, $r11;
        androidx.fragment.app.FragmentHostCallback $r6;
        java.lang.String $r8;
        java.util.ArrayDeque $r9;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        r2 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        r3 := @parameter3: android.os.Bundle;

        $r5 = r0.<androidx.fragment.app.FragmentManager: androidx.activity.result.ActivityResultLauncher mStartActivityForResult>;

        if $r5 == null goto label2;

        $r7 = new androidx.fragment.app.FragmentManager$LaunchedFragmentInfo;

        $r8 = r1.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        specialinvoke $r7.<androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: void <init>(java.lang.String,int)>($r8, i0);

        r4 = $r7;

        $r9 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayDeque mLaunchedFragments>;

        virtualinvoke $r9.<java.util.ArrayDeque: void addLast(java.lang.Object)>(r4);

        if r2 == null goto label1;

        if r3 == null goto label1;

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)>("androidx.activity.result.contract.extra.ACTIVITY_OPTIONS_BUNDLE", r3);

     label1:
        $r11 = r0.<androidx.fragment.app.FragmentManager: androidx.activity.result.ActivityResultLauncher mStartActivityForResult>;

        virtualinvoke $r11.<androidx.activity.result.ActivityResultLauncher: void launch(java.lang.Object)>(r2);

        goto label3;

     label2:
        $r6 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        virtualinvoke $r6.<androidx.fragment.app.FragmentHostCallback: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)>(r1, r2, i0, r3);

     label3:
        return;
    }

    void launchStartIntentSenderForResult(androidx.fragment.app.Fragment, android.content.IntentSender, int, android.content.Intent, int, int, int, android.os.Bundle) throws android.content.IntentSender$SendIntentException
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.Fragment r1;
        android.content.IntentSender r2;
        int i0, i1, i2, i3;
        android.os.Bundle r3;
        androidx.activity.result.IntentSenderRequest r4;
        androidx.fragment.app.FragmentManager$LaunchedFragmentInfo r5, $r29;
        androidx.activity.result.ActivityResultLauncher $r6, $r8;
        androidx.fragment.app.FragmentHostCallback $r7;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r15, $r16, $r17, $r18, $r19, $r20, $r21;
        java.lang.String $r13, $r22, $r30;
        boolean $z0, $z1;
        android.content.Intent $r23, r25;
        androidx.activity.result.IntentSenderRequest$Builder $r26, $r27, $r28;
        java.util.ArrayDeque $r31;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        r2 := @parameter1: android.content.IntentSender;

        i0 := @parameter2: int;

        r25 := @parameter3: android.content.Intent;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        r3 := @parameter7: android.os.Bundle;

        $r6 = r0.<androidx.fragment.app.FragmentManager: androidx.activity.result.ActivityResultLauncher mStartIntentSenderForResult>;

        if $r6 == null goto label5;

        if r3 == null goto label3;

        if r25 != null goto label1;

        $r23 = new android.content.Intent;

        specialinvoke $r23.<android.content.Intent: void <init>()>();

        r25 = $r23;

        virtualinvoke r25.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("androidx.fragment.extra.ACTIVITY_OPTIONS_BUNDLE", 1);

     label1:
        $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2);

        if $z0 == 0 goto label2;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ActivityOptions ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" were added to fillInIntent ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r25);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for fragment ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r22);

     label2:
        virtualinvoke r25.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)>("androidx.activity.result.contract.extra.ACTIVITY_OPTIONS_BUNDLE", r3);

     label3:
        $r26 = new androidx.activity.result.IntentSenderRequest$Builder;

        specialinvoke $r26.<androidx.activity.result.IntentSenderRequest$Builder: void <init>(android.content.IntentSender)>(r2);

        $r27 = virtualinvoke $r26.<androidx.activity.result.IntentSenderRequest$Builder: androidx.activity.result.IntentSenderRequest$Builder setFillInIntent(android.content.Intent)>(r25);

        $r28 = virtualinvoke $r27.<androidx.activity.result.IntentSenderRequest$Builder: androidx.activity.result.IntentSenderRequest$Builder setFlags(int,int)>(i2, i1);

        r4 = virtualinvoke $r28.<androidx.activity.result.IntentSenderRequest$Builder: androidx.activity.result.IntentSenderRequest build()>();

        $r29 = new androidx.fragment.app.FragmentManager$LaunchedFragmentInfo;

        $r30 = r1.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        specialinvoke $r29.<androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: void <init>(java.lang.String,int)>($r30, i0);

        r5 = $r29;

        $r31 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayDeque mLaunchedFragments>;

        virtualinvoke $r31.<java.util.ArrayDeque: void addLast(java.lang.Object)>(r5);

        $z1 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2);

        if $z1 == 0 goto label4;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("is launching an IntentSender for result ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r13);

     label4:
        $r8 = r0.<androidx.fragment.app.FragmentManager: androidx.activity.result.ActivityResultLauncher mStartIntentSenderForResult>;

        virtualinvoke $r8.<androidx.activity.result.ActivityResultLauncher: void launch(java.lang.Object)>(r4);

        goto label6;

     label5:
        $r7 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        virtualinvoke $r7.<androidx.fragment.app.FragmentHostCallback: void onStartIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>(r1, r2, i0, r25, i1, i2, i3, r3);

     label6:
        return;
    }

    void launchRequestPermissions(androidx.fragment.app.Fragment, java.lang.String[], int)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.Fragment r1;
        java.lang.String[] r2;
        int i0;
        androidx.fragment.app.FragmentManager$LaunchedFragmentInfo r3, $r6;
        androidx.activity.result.ActivityResultLauncher $r4, $r9;
        androidx.fragment.app.FragmentHostCallback $r5;
        java.lang.String $r7;
        java.util.ArrayDeque $r8;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        r2 := @parameter1: java.lang.String[];

        i0 := @parameter2: int;

        $r4 = r0.<androidx.fragment.app.FragmentManager: androidx.activity.result.ActivityResultLauncher mRequestPermissions>;

        if $r4 == null goto label1;

        $r6 = new androidx.fragment.app.FragmentManager$LaunchedFragmentInfo;

        $r7 = r1.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        specialinvoke $r6.<androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: void <init>(java.lang.String,int)>($r7, i0);

        r3 = $r6;

        $r8 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayDeque mLaunchedFragments>;

        virtualinvoke $r8.<java.util.ArrayDeque: void addLast(java.lang.Object)>(r3);

        $r9 = r0.<androidx.fragment.app.FragmentManager: androidx.activity.result.ActivityResultLauncher mRequestPermissions>;

        virtualinvoke $r9.<androidx.activity.result.ActivityResultLauncher: void launch(java.lang.Object)>(r2);

        goto label2;

     label1:
        $r5 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        virtualinvoke $r5.<androidx.fragment.app.FragmentHostCallback: void onRequestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int)>(r1, r2, i0);

     label2:
        return;
    }

    void dispatchAttach()
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.FragmentManagerViewModel $r1;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r0.<androidx.fragment.app.FragmentManager: boolean mStateSaved> = 0;

        r0.<androidx.fragment.app.FragmentManager: boolean mStopped> = 0;

        $r1 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerViewModel mNonConfig>;

        virtualinvoke $r1.<androidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)>(0);

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>(0);

        return;
    }

    void dispatchCreate()
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.FragmentManagerViewModel $r1;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r0.<androidx.fragment.app.FragmentManager: boolean mStateSaved> = 0;

        r0.<androidx.fragment.app.FragmentManager: boolean mStopped> = 0;

        $r1 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerViewModel mNonConfig>;

        virtualinvoke $r1.<androidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)>(0);

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>(1);

        return;
    }

    void dispatchViewCreated()
    {
        androidx.fragment.app.FragmentManager r0;

        r0 := @this: androidx.fragment.app.FragmentManager;

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>(2);

        return;
    }

    void dispatchActivityCreated()
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.FragmentManagerViewModel $r1;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r0.<androidx.fragment.app.FragmentManager: boolean mStateSaved> = 0;

        r0.<androidx.fragment.app.FragmentManager: boolean mStopped> = 0;

        $r1 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerViewModel mNonConfig>;

        virtualinvoke $r1.<androidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)>(0);

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>(4);

        return;
    }

    void dispatchStart()
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.FragmentManagerViewModel $r1;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r0.<androidx.fragment.app.FragmentManager: boolean mStateSaved> = 0;

        r0.<androidx.fragment.app.FragmentManager: boolean mStopped> = 0;

        $r1 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerViewModel mNonConfig>;

        virtualinvoke $r1.<androidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)>(0);

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>(5);

        return;
    }

    void dispatchResume()
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.FragmentManagerViewModel $r1;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r0.<androidx.fragment.app.FragmentManager: boolean mStateSaved> = 0;

        r0.<androidx.fragment.app.FragmentManager: boolean mStopped> = 0;

        $r1 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerViewModel mNonConfig>;

        virtualinvoke $r1.<androidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)>(0);

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>(7);

        return;
    }

    void dispatchPause()
    {
        androidx.fragment.app.FragmentManager r0;

        r0 := @this: androidx.fragment.app.FragmentManager;

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>(5);

        return;
    }

    void dispatchStop()
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.FragmentManagerViewModel $r1;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r0.<androidx.fragment.app.FragmentManager: boolean mStopped> = 1;

        $r1 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerViewModel mNonConfig>;

        virtualinvoke $r1.<androidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)>(1);

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>(4);

        return;
    }

    void dispatchDestroyView()
    {
        androidx.fragment.app.FragmentManager r0;

        r0 := @this: androidx.fragment.app.FragmentManager;

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>(1);

        return;
    }

    void dispatchDestroy()
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.FragmentHostCallback $r1, $r2, $r3, $r4, $r5, $r12, $r15, $r17, $r19, $r21;
        boolean $z1, $z2, $z3, $z4, $z5;
        androidx.activity.OnBackPressedDispatcher $r6;
        androidx.activity.result.ActivityResultLauncher $r7, $r8, $r9, $r10;
        androidx.activity.OnBackPressedCallback $r11;
        androidx.core.view.MenuProvider $r13;
        androidx.core.view.MenuHost $r14;
        androidx.core.util.Consumer $r16, $r18, $r20, $r22;
        androidx.core.content.OnTrimMemoryProvider r23;
        androidx.core.content.OnConfigurationChangedProvider r24;
        androidx.core.app.OnMultiWindowModeChangedProvider r25;
        androidx.core.app.OnPictureInPictureModeChangedProvider r26;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r0.<androidx.fragment.app.FragmentManager: boolean mDestroyed> = 1;

        virtualinvoke r0.<androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>(1);

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void endAnimatingAwayFragments()>();

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void clearBackStackStateViewModels()>();

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void dispatchStateChange(int)>(-1);

        $r1 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $z1 = $r1 instanceof androidx.core.content.OnTrimMemoryProvider;

        if $z1 == 0 goto label1;

        $r21 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        r23 = (androidx.core.content.OnTrimMemoryProvider) $r21;

        $r22 = r0.<androidx.fragment.app.FragmentManager: androidx.core.util.Consumer mOnTrimMemoryListener>;

        interfaceinvoke r23.<androidx.core.content.OnTrimMemoryProvider: void removeOnTrimMemoryListener(androidx.core.util.Consumer)>($r22);

     label1:
        $r2 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $z2 = $r2 instanceof androidx.core.content.OnConfigurationChangedProvider;

        if $z2 == 0 goto label2;

        $r19 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        r24 = (androidx.core.content.OnConfigurationChangedProvider) $r19;

        $r20 = r0.<androidx.fragment.app.FragmentManager: androidx.core.util.Consumer mOnConfigurationChangedListener>;

        interfaceinvoke r24.<androidx.core.content.OnConfigurationChangedProvider: void removeOnConfigurationChangedListener(androidx.core.util.Consumer)>($r20);

     label2:
        $r3 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $z3 = $r3 instanceof androidx.core.app.OnMultiWindowModeChangedProvider;

        if $z3 == 0 goto label3;

        $r17 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        r25 = (androidx.core.app.OnMultiWindowModeChangedProvider) $r17;

        $r18 = r0.<androidx.fragment.app.FragmentManager: androidx.core.util.Consumer mOnMultiWindowModeChangedListener>;

        interfaceinvoke r25.<androidx.core.app.OnMultiWindowModeChangedProvider: void removeOnMultiWindowModeChangedListener(androidx.core.util.Consumer)>($r18);

     label3:
        $r4 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $z4 = $r4 instanceof androidx.core.app.OnPictureInPictureModeChangedProvider;

        if $z4 == 0 goto label4;

        $r15 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        r26 = (androidx.core.app.OnPictureInPictureModeChangedProvider) $r15;

        $r16 = r0.<androidx.fragment.app.FragmentManager: androidx.core.util.Consumer mOnPictureInPictureModeChangedListener>;

        interfaceinvoke r26.<androidx.core.app.OnPictureInPictureModeChangedProvider: void removeOnPictureInPictureModeChangedListener(androidx.core.util.Consumer)>($r16);

     label4:
        $r5 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $z5 = $r5 instanceof androidx.core.view.MenuHost;

        if $z5 == 0 goto label5;

        $r12 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $r14 = (androidx.core.view.MenuHost) $r12;

        $r13 = r0.<androidx.fragment.app.FragmentManager: androidx.core.view.MenuProvider mMenuProvider>;

        interfaceinvoke $r14.<androidx.core.view.MenuHost: void removeMenuProvider(androidx.core.view.MenuProvider)>($r13);

     label5:
        r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost> = null;

        r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentContainer mContainer> = null;

        r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mParent> = null;

        $r6 = r0.<androidx.fragment.app.FragmentManager: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher>;

        if $r6 == null goto label6;

        $r11 = r0.<androidx.fragment.app.FragmentManager: androidx.activity.OnBackPressedCallback mOnBackPressedCallback>;

        virtualinvoke $r11.<androidx.activity.OnBackPressedCallback: void remove()>();

        r0.<androidx.fragment.app.FragmentManager: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher> = null;

     label6:
        $r7 = r0.<androidx.fragment.app.FragmentManager: androidx.activity.result.ActivityResultLauncher mStartActivityForResult>;

        if $r7 == null goto label7;

        $r8 = r0.<androidx.fragment.app.FragmentManager: androidx.activity.result.ActivityResultLauncher mStartActivityForResult>;

        virtualinvoke $r8.<androidx.activity.result.ActivityResultLauncher: void unregister()>();

        $r9 = r0.<androidx.fragment.app.FragmentManager: androidx.activity.result.ActivityResultLauncher mStartIntentSenderForResult>;

        virtualinvoke $r9.<androidx.activity.result.ActivityResultLauncher: void unregister()>();

        $r10 = r0.<androidx.fragment.app.FragmentManager: androidx.activity.result.ActivityResultLauncher mRequestPermissions>;

        virtualinvoke $r10.<androidx.activity.result.ActivityResultLauncher: void unregister()>();

     label7:
        return;
    }

    private void dispatchStateChange(int)
    {
        androidx.fragment.app.FragmentManager r0;
        int i0;
        java.util.Set r1;
        java.util.Iterator r2;
        androidx.fragment.app.SpecialEffectsController r3;
        java.lang.Throwable r4, $r7;
        androidx.fragment.app.FragmentStore $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: androidx.fragment.app.FragmentManager;

        i0 := @parameter0: int;

     label1:
        r0.<androidx.fragment.app.FragmentManager: boolean mExecutingActions> = 1;

        $r5 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        virtualinvoke $r5.<androidx.fragment.app.FragmentStore: void dispatchStateChange(int)>(i0);

        virtualinvoke r0.<androidx.fragment.app.FragmentManager: void moveToState(int,boolean)>(i0, 0);

        r1 = specialinvoke r0.<androidx.fragment.app.FragmentManager: java.util.Set collectAllSpecialEffectsController()>();

        r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.fragment.app.SpecialEffectsController) $r6;

        virtualinvoke r3.<androidx.fragment.app.SpecialEffectsController: void forceCompleteAllOperations()>();

        goto label2;

     label3:
        r0.<androidx.fragment.app.FragmentManager: boolean mExecutingActions> = 0;

        goto label6;

     label4:
        $r7 := @caughtexception;

        r4 = $r7;

     label5:
        r0.<androidx.fragment.app.FragmentManager: boolean mExecutingActions> = 0;

        throw r4;

     label6:
        virtualinvoke r0.<androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>(1);

        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    void dispatchMultiWindowModeChanged(boolean, boolean)
    {
        androidx.fragment.app.FragmentManager r0, $r4;
        boolean z0, z1, $z2, $z3;
        java.util.Iterator r1;
        androidx.fragment.app.Fragment r2;
        java.lang.Object $r3;
        androidx.fragment.app.FragmentHostCallback $r5;
        java.lang.IllegalStateException $r6;
        androidx.fragment.app.FragmentStore $r7;
        java.util.List $r8;

        r0 := @this: androidx.fragment.app.FragmentManager;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        if z1 == 0 goto label1;

        $r5 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $z2 = $r5 instanceof androidx.core.app.OnMultiWindowModeChangedProvider;

        if $z2 == 0 goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Do not call dispatchMultiWindowModeChanged() on host. Host implements OnMultiWindowModeChangedProvider and automatically dispatches multi-window mode changes to fragments.");

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>($r6);

     label1:
        $r7 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        $r8 = virtualinvoke $r7.<androidx.fragment.app.FragmentStore: java.util.List getFragments()>();

        r1 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label4;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.fragment.app.Fragment) $r3;

        if r2 == null goto label3;

        virtualinvoke r2.<androidx.fragment.app.Fragment: void performMultiWindowModeChanged(boolean)>(z0);

        if z1 == 0 goto label3;

        $r4 = r2.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mChildFragmentManager>;

        virtualinvoke $r4.<androidx.fragment.app.FragmentManager: void dispatchMultiWindowModeChanged(boolean,boolean)>(z0, 1);

     label3:
        goto label2;

     label4:
        return;
    }

    void dispatchPictureInPictureModeChanged(boolean, boolean)
    {
        androidx.fragment.app.FragmentManager r0, $r4;
        boolean z0, z1, $z2, $z3;
        java.util.Iterator r1;
        androidx.fragment.app.Fragment r2;
        java.lang.Object $r3;
        androidx.fragment.app.FragmentHostCallback $r5;
        java.lang.IllegalStateException $r6;
        androidx.fragment.app.FragmentStore $r7;
        java.util.List $r8;

        r0 := @this: androidx.fragment.app.FragmentManager;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        if z1 == 0 goto label1;

        $r5 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $z2 = $r5 instanceof androidx.core.app.OnPictureInPictureModeChangedProvider;

        if $z2 == 0 goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Do not call dispatchPictureInPictureModeChanged() on host. Host implements OnPictureInPictureModeChangedProvider and automatically dispatches picture-in-picture mode changes to fragments.");

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>($r6);

     label1:
        $r7 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        $r8 = virtualinvoke $r7.<androidx.fragment.app.FragmentStore: java.util.List getFragments()>();

        r1 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label4;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.fragment.app.Fragment) $r3;

        if r2 == null goto label3;

        virtualinvoke r2.<androidx.fragment.app.Fragment: void performPictureInPictureModeChanged(boolean)>(z0);

        if z1 == 0 goto label3;

        $r4 = r2.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mChildFragmentManager>;

        virtualinvoke $r4.<androidx.fragment.app.FragmentManager: void dispatchPictureInPictureModeChanged(boolean,boolean)>(z0, 1);

     label3:
        goto label2;

     label4:
        return;
    }

    void dispatchConfigurationChanged(android.content.res.Configuration, boolean)
    {
        androidx.fragment.app.FragmentManager r0, $r5;
        android.content.res.Configuration r1;
        boolean z0, $z1, $z2;
        java.util.Iterator r2;
        androidx.fragment.app.Fragment r3;
        java.lang.Object $r4;
        androidx.fragment.app.FragmentHostCallback $r6;
        java.lang.IllegalStateException $r7;
        androidx.fragment.app.FragmentStore $r8;
        java.util.List $r9;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: android.content.res.Configuration;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r6 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $z1 = $r6 instanceof androidx.core.content.OnConfigurationChangedProvider;

        if $z1 == 0 goto label1;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Do not call dispatchConfigurationChanged() on host. Host implements OnConfigurationChangedProvider and automatically dispatches configuration changes to fragments.");

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>($r7);

     label1:
        $r8 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        $r9 = virtualinvoke $r8.<androidx.fragment.app.FragmentStore: java.util.List getFragments()>();

        r2 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.fragment.app.Fragment) $r4;

        if r3 == null goto label3;

        virtualinvoke r3.<androidx.fragment.app.Fragment: void performConfigurationChanged(android.content.res.Configuration)>(r1);

        if z0 == 0 goto label3;

        $r5 = r3.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mChildFragmentManager>;

        virtualinvoke $r5.<androidx.fragment.app.FragmentManager: void dispatchConfigurationChanged(android.content.res.Configuration,boolean)>(r1, 1);

     label3:
        goto label2;

     label4:
        return;
    }

    void dispatchLowMemory(boolean)
    {
        androidx.fragment.app.FragmentManager r0, $r4;
        boolean z0, $z1, $z2;
        java.util.Iterator r1;
        androidx.fragment.app.Fragment r2;
        java.lang.Object $r3;
        androidx.fragment.app.FragmentHostCallback $r5;
        java.lang.IllegalStateException $r6;
        androidx.fragment.app.FragmentStore $r7;
        java.util.List $r8;

        r0 := @this: androidx.fragment.app.FragmentManager;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r5 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost>;

        $z1 = $r5 instanceof androidx.core.content.OnTrimMemoryProvider;

        if $z1 == 0 goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Do not call dispatchLowMemory() on host. Host implements OnTrimMemoryProvider and automatically dispatches low memory callbacks to fragments.");

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)>($r6);

     label1:
        $r7 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        $r8 = virtualinvoke $r7.<androidx.fragment.app.FragmentStore: java.util.List getFragments()>();

        r1 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.fragment.app.Fragment) $r3;

        if r2 == null goto label3;

        virtualinvoke r2.<androidx.fragment.app.Fragment: void performLowMemory()>();

        if z0 == 0 goto label3;

        $r4 = r2.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mChildFragmentManager>;

        virtualinvoke $r4.<androidx.fragment.app.FragmentManager: void dispatchLowMemory(boolean)>(1);

     label3:
        goto label2;

     label4:
        return;
    }

    boolean dispatchCreateOptionsMenu(android.view.Menu, android.view.MenuInflater)
    {
        androidx.fragment.app.FragmentManager r0;
        android.view.Menu r1;
        android.view.MenuInflater r2;
        int $i0, $i1, i2;
        androidx.fragment.app.FragmentStore $r3;
        java.util.List $r4;
        boolean $z0, $z1, $z2, $z3, z5;
        java.util.ArrayList $r5, $r6, $r7, $r10, r11;
        java.lang.Object $r8, $r9;
        java.util.Iterator r12;
        androidx.fragment.app.Fragment r13, r14;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: android.view.Menu;

        r2 := @parameter1: android.view.MenuInflater;

        $i0 = r0.<androidx.fragment.app.FragmentManager: int mCurState>;

        if $i0 >= 1 goto label1;

        return 0;

     label1:
        z5 = 0;

        r11 = null;

        $r3 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        $r4 = virtualinvoke $r3.<androidx.fragment.app.FragmentStore: java.util.List getFragments()>();

        r12 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r9 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r13 = (androidx.fragment.app.Fragment) $r9;

        if r13 == null goto label4;

        $z2 = virtualinvoke r0.<androidx.fragment.app.FragmentManager: boolean isParentMenuVisible(androidx.fragment.app.Fragment)>(r13);

        if $z2 == 0 goto label4;

        $z3 = virtualinvoke r13.<androidx.fragment.app.Fragment: boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>(r1, r2);

        if $z3 == 0 goto label4;

        z5 = 1;

        if r11 != null goto label3;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r11 = $r10;

     label3:
        virtualinvoke r11.<java.util.ArrayList: boolean add(java.lang.Object)>(r13);

     label4:
        goto label2;

     label5:
        $r5 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mCreatedMenus>;

        if $r5 == null goto label9;

        i2 = 0;

     label6:
        $r6 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mCreatedMenus>;

        $i1 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if i2 >= $i1 goto label9;

        $r7 = r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mCreatedMenus>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r14 = (androidx.fragment.app.Fragment) $r8;

        if r11 == null goto label7;

        $z1 = virtualinvoke r11.<java.util.ArrayList: boolean contains(java.lang.Object)>(r14);

        if $z1 != 0 goto label8;

     label7:
        virtualinvoke r14.<androidx.fragment.app.Fragment: void onDestroyOptionsMenu()>();

     label8:
        i2 = i2 + 1;

        goto label6;

     label9:
        r0.<androidx.fragment.app.FragmentManager: java.util.ArrayList mCreatedMenus> = r11;

        return z5;
    }

    boolean dispatchPrepareOptionsMenu(android.view.Menu)
    {
        androidx.fragment.app.FragmentManager r0;
        android.view.Menu r1;
        java.util.Iterator r2;
        androidx.fragment.app.Fragment r3;
        int $i0;
        androidx.fragment.app.FragmentStore $r4;
        java.util.List $r5;
        boolean $z0, $z1, $z2, z3;
        java.lang.Object $r6;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: android.view.Menu;

        $i0 = r0.<androidx.fragment.app.FragmentManager: int mCurState>;

        if $i0 >= 1 goto label1;

        return 0;

     label1:
        z3 = 0;

        $r4 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        $r5 = virtualinvoke $r4.<androidx.fragment.app.FragmentStore: java.util.List getFragments()>();

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.fragment.app.Fragment) $r6;

        if r3 == null goto label3;

        $z1 = virtualinvoke r0.<androidx.fragment.app.FragmentManager: boolean isParentMenuVisible(androidx.fragment.app.Fragment)>(r3);

        if $z1 == 0 goto label3;

        $z2 = virtualinvoke r3.<androidx.fragment.app.Fragment: boolean performPrepareOptionsMenu(android.view.Menu)>(r1);

        if $z2 == 0 goto label3;

        z3 = 1;

     label3:
        goto label2;

     label4:
        return z3;
    }

    boolean dispatchOptionsItemSelected(android.view.MenuItem)
    {
        androidx.fragment.app.FragmentManager r0;
        android.view.MenuItem r1;
        java.util.Iterator r2;
        androidx.fragment.app.Fragment r3;
        int $i0;
        androidx.fragment.app.FragmentStore $r4;
        java.util.List $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: android.view.MenuItem;

        $i0 = r0.<androidx.fragment.app.FragmentManager: int mCurState>;

        if $i0 >= 1 goto label1;

        return 0;

     label1:
        $r4 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        $r5 = virtualinvoke $r4.<androidx.fragment.app.FragmentStore: java.util.List getFragments()>();

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.fragment.app.Fragment) $r6;

        if r3 == null goto label3;

        $z1 = virtualinvoke r3.<androidx.fragment.app.Fragment: boolean performOptionsItemSelected(android.view.MenuItem)>(r1);

        if $z1 == 0 goto label3;

        return 1;

     label3:
        goto label2;

     label4:
        return 0;
    }

    boolean dispatchContextItemSelected(android.view.MenuItem)
    {
        androidx.fragment.app.FragmentManager r0;
        android.view.MenuItem r1;
        java.util.Iterator r2;
        androidx.fragment.app.Fragment r3;
        int $i0;
        androidx.fragment.app.FragmentStore $r4;
        java.util.List $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: android.view.MenuItem;

        $i0 = r0.<androidx.fragment.app.FragmentManager: int mCurState>;

        if $i0 >= 1 goto label1;

        return 0;

     label1:
        $r4 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        $r5 = virtualinvoke $r4.<androidx.fragment.app.FragmentStore: java.util.List getFragments()>();

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.fragment.app.Fragment) $r6;

        if r3 == null goto label3;

        $z1 = virtualinvoke r3.<androidx.fragment.app.Fragment: boolean performContextItemSelected(android.view.MenuItem)>(r1);

        if $z1 == 0 goto label3;

        return 1;

     label3:
        goto label2;

     label4:
        return 0;
    }

    void dispatchOptionsMenuClosed(android.view.Menu)
    {
        androidx.fragment.app.FragmentManager r0;
        android.view.Menu r1;
        java.util.Iterator r2;
        androidx.fragment.app.Fragment r3;
        int $i0;
        androidx.fragment.app.FragmentStore $r4;
        java.util.List $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: android.view.Menu;

        $i0 = r0.<androidx.fragment.app.FragmentManager: int mCurState>;

        if $i0 >= 1 goto label1;

        return;

     label1:
        $r4 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        $r5 = virtualinvoke $r4.<androidx.fragment.app.FragmentStore: java.util.List getFragments()>();

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.fragment.app.Fragment) $r6;

        if r3 == null goto label3;

        virtualinvoke r3.<androidx.fragment.app.Fragment: void performOptionsMenuClosed(android.view.Menu)>(r1);

     label3:
        goto label2;

     label4:
        return;
    }

    void setPrimaryNavigationFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManager r0, $r13;
        androidx.fragment.app.Fragment r1, r2, $r4, $r14;
        java.lang.String $r3, $r11;
        boolean $z0;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10;
        androidx.fragment.app.FragmentHostCallback $r12;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        if r1 == null goto label2;

        $r3 = r1.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        $r4 = virtualinvoke r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findActiveFragment(java.lang.String)>($r3);

        $z0 = virtualinvoke r1.<androidx.fragment.app.Fragment: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $r12 = r1.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentHostCallback mHost>;

        if $r12 == null goto label2;

        $r13 = r1.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mFragmentManager>;

        if $r13 == r0 goto label2;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not an active fragment of FragmentManager ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r5;

     label2:
        r2 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mPrimaryNav>;

        r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mPrimaryNav> = r1;

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment)>(r2);

        $r14 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mPrimaryNav>;

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment)>($r14);

        return;
    }

    private void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.Fragment r1, $r3;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        if r1 == null goto label1;

        $r2 = r1.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        $r3 = virtualinvoke r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findActiveFragment(java.lang.String)>($r2);

        $z0 = virtualinvoke r1.<androidx.fragment.app.Fragment: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        virtualinvoke r1.<androidx.fragment.app.Fragment: void performPrimaryNavigationFragmentChanged()>();

     label1:
        return;
    }

    void dispatchPrimaryNavigationFragmentChanged()
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.Fragment $r1;

        r0 := @this: androidx.fragment.app.FragmentManager;

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void updateOnBackPressedCallbackEnabled()>();

        $r1 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mPrimaryNav>;

        specialinvoke r0.<androidx.fragment.app.FragmentManager: void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment)>($r1);

        return;
    }

    public androidx.fragment.app.Fragment getPrimaryNavigationFragment()
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.Fragment $r1;

        r0 := @this: androidx.fragment.app.FragmentManager;

        $r1 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mPrimaryNav>;

        return $r1;
    }

    void setMaxLifecycle(androidx.fragment.app.Fragment, androidx.lifecycle.Lifecycle$State)
    {
        androidx.fragment.app.FragmentManager r0, $r13;
        androidx.fragment.app.Fragment r1, $r4;
        androidx.lifecycle.Lifecycle$State r2;
        java.lang.String $r3, $r11;
        boolean $z0;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10;
        androidx.fragment.app.FragmentHostCallback $r12;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        r2 := @parameter1: androidx.lifecycle.Lifecycle$State;

        $r3 = r1.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        $r4 = virtualinvoke r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findActiveFragment(java.lang.String)>($r3);

        $z0 = virtualinvoke r1.<androidx.fragment.app.Fragment: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $r12 = r1.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentHostCallback mHost>;

        if $r12 == null goto label2;

        $r13 = r1.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mFragmentManager>;

        if $r13 == r0 goto label2;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not an active fragment of FragmentManager ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r5;

     label2:
        r1.<androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle$State mMaxState> = r2;

        return;
    }

    public void setFragmentFactory(androidx.fragment.app.FragmentFactory)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.FragmentFactory r1;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.FragmentFactory;

        r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory mFragmentFactory> = r1;

        return;
    }

    public androidx.fragment.app.FragmentFactory getFragmentFactory()
    {
        androidx.fragment.app.FragmentManager r0, $r5;
        androidx.fragment.app.FragmentFactory $r1, $r3, $r6, $r7;
        androidx.fragment.app.Fragment $r2, $r4;

        r0 := @this: androidx.fragment.app.FragmentManager;

        $r1 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory mFragmentFactory>;

        if $r1 == null goto label1;

        $r7 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory mFragmentFactory>;

        return $r7;

     label1:
        $r2 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mParent>;

        if $r2 == null goto label2;

        $r4 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mParent>;

        $r5 = $r4.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mFragmentManager>;

        $r6 = virtualinvoke $r5.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory getFragmentFactory()>();

        return $r6;

     label2:
        $r3 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory mHostFragmentFactory>;

        return $r3;
    }

    void setSpecialEffectsControllerFactory(androidx.fragment.app.SpecialEffectsControllerFactory)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.SpecialEffectsControllerFactory r1;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.SpecialEffectsControllerFactory;

        r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.SpecialEffectsControllerFactory mSpecialEffectsControllerFactory> = r1;

        return;
    }

    androidx.fragment.app.SpecialEffectsControllerFactory getSpecialEffectsControllerFactory()
    {
        androidx.fragment.app.FragmentManager r0, $r5;
        androidx.fragment.app.SpecialEffectsControllerFactory $r1, $r3, $r6, $r7;
        androidx.fragment.app.Fragment $r2, $r4;

        r0 := @this: androidx.fragment.app.FragmentManager;

        $r1 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.SpecialEffectsControllerFactory mSpecialEffectsControllerFactory>;

        if $r1 == null goto label1;

        $r7 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.SpecialEffectsControllerFactory mSpecialEffectsControllerFactory>;

        return $r7;

     label1:
        $r2 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mParent>;

        if $r2 == null goto label2;

        $r4 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mParent>;

        $r5 = $r4.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mFragmentManager>;

        $r6 = virtualinvoke $r5.<androidx.fragment.app.FragmentManager: androidx.fragment.app.SpecialEffectsControllerFactory getSpecialEffectsControllerFactory()>();

        return $r6;

     label2:
        $r3 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.SpecialEffectsControllerFactory mDefaultSpecialEffectsControllerFactory>;

        return $r3;
    }

    androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher $r1;

        r0 := @this: androidx.fragment.app.FragmentManager;

        $r1 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher mLifecycleCallbacksDispatcher>;

        return $r1;
    }

    public void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks, boolean)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks r1;
        boolean z0;
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher $r2;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks;

        z0 := @parameter1: boolean;

        $r2 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher mLifecycleCallbacksDispatcher>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean)>(r1, z0);

        return;
    }

    public void unregisterFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks r1;
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher $r2;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks;

        $r2 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher mLifecycleCallbacksDispatcher>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void unregisterFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks)>(r1);

        return;
    }

    public void addFragmentOnAttachListener(androidx.fragment.app.FragmentOnAttachListener)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.FragmentOnAttachListener r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.FragmentOnAttachListener;

        $r2 = r0.<androidx.fragment.app.FragmentManager: java.util.concurrent.CopyOnWriteArrayList mOnAttachListeners>;

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    void dispatchOnAttachFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.Fragment r1;
        java.util.Iterator r2;
        androidx.fragment.app.FragmentOnAttachListener r3;
        java.util.concurrent.CopyOnWriteArrayList $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        $r4 = r0.<androidx.fragment.app.FragmentManager: java.util.concurrent.CopyOnWriteArrayList mOnAttachListeners>;

        r2 = virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.fragment.app.FragmentOnAttachListener) $r5;

        interfaceinvoke r3.<androidx.fragment.app.FragmentOnAttachListener: void onAttachFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)>(r0, r1);

        goto label1;

     label2:
        return;
    }

    public void removeFragmentOnAttachListener(androidx.fragment.app.FragmentOnAttachListener)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.FragmentOnAttachListener r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.FragmentOnAttachListener;

        $r2 = r0.<androidx.fragment.app.FragmentManager: java.util.concurrent.CopyOnWriteArrayList mOnAttachListeners>;

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    void dispatchOnHiddenChanged()
    {
        androidx.fragment.app.FragmentManager r0, $r6;
        java.util.Iterator r1;
        androidx.fragment.app.Fragment r2;
        androidx.fragment.app.FragmentStore $r3;
        java.util.List $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;

        r0 := @this: androidx.fragment.app.FragmentManager;

        $r3 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        $r4 = virtualinvoke $r3.<androidx.fragment.app.FragmentStore: java.util.List getActiveFragments()>();

        r1 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.fragment.app.Fragment) $r5;

        if r2 == null goto label2;

        $z1 = virtualinvoke r2.<androidx.fragment.app.Fragment: boolean isHidden()>();

        virtualinvoke r2.<androidx.fragment.app.Fragment: void onHiddenChanged(boolean)>($z1);

        $r6 = r2.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mChildFragmentManager>;

        virtualinvoke $r6.<androidx.fragment.app.FragmentManager: void dispatchOnHiddenChanged()>();

     label2:
        goto label1;

     label3:
        return;
    }

    boolean checkForMenus()
    {
        androidx.fragment.app.FragmentManager r0;
        java.util.Iterator r1;
        androidx.fragment.app.Fragment r2;
        androidx.fragment.app.FragmentStore $r3;
        java.util.List $r4;
        boolean $z0, z1;
        java.lang.Object $r5;

        r0 := @this: androidx.fragment.app.FragmentManager;

        z1 = 0;

        $r3 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        $r4 = virtualinvoke $r3.<androidx.fragment.app.FragmentStore: java.util.List getActiveFragments()>();

        r1 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.fragment.app.Fragment) $r5;

        if r2 == null goto label2;

        z1 = specialinvoke r0.<androidx.fragment.app.FragmentManager: boolean isMenuAvailable(androidx.fragment.app.Fragment)>(r2);

     label2:
        if z1 == 0 goto label3;

        return 1;

     label3:
        goto label1;

     label4:
        return 0;
    }

    private boolean isMenuAvailable(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManager r0, $r2;
        androidx.fragment.app.Fragment r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        $z0 = r1.<androidx.fragment.app.Fragment: boolean mHasMenu>;

        if $z0 == 0 goto label1;

        $z2 = r1.<androidx.fragment.app.Fragment: boolean mMenuVisible>;

        if $z2 != 0 goto label2;

     label1:
        $r2 = r1.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mChildFragmentManager>;

        $z1 = virtualinvoke $r2.<androidx.fragment.app.FragmentManager: boolean checkForMenus()>();

        if $z1 == 0 goto label3;

     label2:
        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    void invalidateMenuForFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.Fragment r1;
        boolean $z0, $z1;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        $z0 = r1.<androidx.fragment.app.Fragment: boolean mAdded>;

        if $z0 == 0 goto label1;

        $z1 = specialinvoke r0.<androidx.fragment.app.FragmentManager: boolean isMenuAvailable(androidx.fragment.app.Fragment)>(r1);

        if $z1 == 0 goto label1;

        r0.<androidx.fragment.app.FragmentManager: boolean mNeedMenuInvalidate> = 1;

     label1:
        return;
    }

    private boolean isParentAdded()
    {
        androidx.fragment.app.FragmentManager r0, $r4;
        androidx.fragment.app.Fragment $r1, $r2, $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.fragment.app.FragmentManager;

        $r1 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mParent>;

        if $r1 != null goto label1;

        return 1;

     label1:
        $r2 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mParent>;

        $z0 = virtualinvoke $r2.<androidx.fragment.app.Fragment: boolean isAdded()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mParent>;

        $r4 = virtualinvoke $r3.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>();

        $z1 = specialinvoke $r4.<androidx.fragment.app.FragmentManager: boolean isParentAdded()>();

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    static int reverseTransit(int)
    {
        int i0;
        short s1;

        i0 := @parameter0: int;

        s1 = 0;

        lookupswitch(i0)
        {
            case 4097: goto label1;
            case 4099: goto label3;
            case 4100: goto label4;
            case 8194: goto label2;
            case 8197: goto label5;
            default: goto label6;
        };

     label1:
        s1 = 8194;

        goto label6;

     label2:
        s1 = 4097;

        goto label6;

     label3:
        s1 = 4099;

        goto label6;

     label4:
        s1 = 8197;

        goto label6;

     label5:
        s1 = 4100;

     label6:
        return s1;
    }

    android.view.LayoutInflater$Factory2 getLayoutInflaterFactory()
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.FragmentLayoutInflaterFactory $r1;

        r0 := @this: androidx.fragment.app.FragmentManager;

        $r1 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLayoutInflaterFactory mLayoutInflaterFactory>;

        return $r1;
    }

    public androidx.fragment.app.strictmode.FragmentStrictMode$Policy getStrictModePolicy()
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.strictmode.FragmentStrictMode$Policy $r1;

        r0 := @this: androidx.fragment.app.FragmentManager;

        $r1 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.strictmode.FragmentStrictMode$Policy mStrictModePolicy>;

        return $r1;
    }

    public void setStrictModePolicy(androidx.fragment.app.strictmode.FragmentStrictMode$Policy)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.strictmode.FragmentStrictMode$Policy r1;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.fragment.app.strictmode.FragmentStrictMode$Policy;

        r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.strictmode.FragmentStrictMode$Policy mStrictModePolicy> = r1;

        return;
    }

    private android.os.Bundle lambda$attachController$4()
    {
        androidx.fragment.app.FragmentManager r0;
        android.os.Bundle $r1;

        r0 := @this: androidx.fragment.app.FragmentManager;

        $r1 = virtualinvoke r0.<androidx.fragment.app.FragmentManager: android.os.Bundle saveAllStateInternal()>();

        return $r1;
    }

    private void lambda$new$3(androidx.core.app.PictureInPictureModeChangedInfo)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.core.app.PictureInPictureModeChangedInfo r1;
        boolean $z0, $z1;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.core.app.PictureInPictureModeChangedInfo;

        $z0 = specialinvoke r0.<androidx.fragment.app.FragmentManager: boolean isParentAdded()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r1.<androidx.core.app.PictureInPictureModeChangedInfo: boolean isInPictureInPictureMode()>();

        virtualinvoke r0.<androidx.fragment.app.FragmentManager: void dispatchPictureInPictureModeChanged(boolean,boolean)>($z1, 0);

     label1:
        return;
    }

    private void lambda$new$2(androidx.core.app.MultiWindowModeChangedInfo)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.core.app.MultiWindowModeChangedInfo r1;
        boolean $z0, $z1;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: androidx.core.app.MultiWindowModeChangedInfo;

        $z0 = specialinvoke r0.<androidx.fragment.app.FragmentManager: boolean isParentAdded()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r1.<androidx.core.app.MultiWindowModeChangedInfo: boolean isInMultiWindowMode()>();

        virtualinvoke r0.<androidx.fragment.app.FragmentManager: void dispatchMultiWindowModeChanged(boolean,boolean)>($z1, 0);

     label1:
        return;
    }

    private void lambda$new$1(java.lang.Integer)
    {
        androidx.fragment.app.FragmentManager r0;
        java.lang.Integer r1;
        boolean $z0;
        int $i0;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: java.lang.Integer;

        $z0 = specialinvoke r0.<androidx.fragment.app.FragmentManager: boolean isParentAdded()>();

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        if $i0 != 80 goto label1;

        virtualinvoke r0.<androidx.fragment.app.FragmentManager: void dispatchLowMemory(boolean)>(0);

     label1:
        return;
    }

    private void lambda$new$0(android.content.res.Configuration)
    {
        androidx.fragment.app.FragmentManager r0;
        android.content.res.Configuration r1;
        boolean $z0;

        r0 := @this: androidx.fragment.app.FragmentManager;

        r1 := @parameter0: android.content.res.Configuration;

        $z0 = specialinvoke r0.<androidx.fragment.app.FragmentManager: boolean isParentAdded()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<androidx.fragment.app.FragmentManager: void dispatchConfigurationChanged(android.content.res.Configuration,boolean)>(r1, 0);

     label1:
        return;
    }

    static java.util.Map access$000(androidx.fragment.app.FragmentManager)
    {
        androidx.fragment.app.FragmentManager r0;
        java.util.Map $r1;

        r0 := @parameter0: androidx.fragment.app.FragmentManager;

        $r1 = r0.<androidx.fragment.app.FragmentManager: java.util.Map mResults>;

        return $r1;
    }

    static java.util.Map access$100(androidx.fragment.app.FragmentManager)
    {
        androidx.fragment.app.FragmentManager r0;
        java.util.Map $r1;

        r0 := @parameter0: androidx.fragment.app.FragmentManager;

        $r1 = r0.<androidx.fragment.app.FragmentManager: java.util.Map mResultListeners>;

        return $r1;
    }

    static androidx.fragment.app.FragmentStore access$200(androidx.fragment.app.FragmentManager)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.FragmentStore $r1;

        r0 := @parameter0: androidx.fragment.app.FragmentManager;

        $r1 = r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore>;

        return $r1;
    }

    static void <clinit>()
    {
        <androidx.fragment.app.FragmentManager: boolean DEBUG> = 0;

        return;
    }

androidx.fragment.app.FragmentManager$1
<androidx.fragment.app.FragmentManager$1: androidx.fragment.app.FragmentManager this$0>
    void <init>(androidx.fragment.app.FragmentManager, boolean)
    {
        androidx.fragment.app.FragmentManager$1 r0;
        androidx.fragment.app.FragmentManager r1;
        boolean z0;

        r0 := @this: androidx.fragment.app.FragmentManager$1;

        r1 := @parameter0: androidx.fragment.app.FragmentManager;

        z0 := @parameter1: boolean;

        r0.<androidx.fragment.app.FragmentManager$1: androidx.fragment.app.FragmentManager this$0> = r1;

        specialinvoke r0.<androidx.activity.OnBackPressedCallback: void <init>(boolean)>(z0);

        return;
    }

    public void handleOnBackPressed()
    {
        androidx.fragment.app.FragmentManager$1 r0;
        androidx.fragment.app.FragmentManager $r1;

        r0 := @this: androidx.fragment.app.FragmentManager$1;

        $r1 = r0.<androidx.fragment.app.FragmentManager$1: androidx.fragment.app.FragmentManager this$0>;

        virtualinvoke $r1.<androidx.fragment.app.FragmentManager: void handleOnBackPressed()>();

        return;
    }

androidx.fragment.app.FragmentManager$10
<androidx.fragment.app.FragmentManager$10: androidx.fragment.app.FragmentManager this$0>
    void <init>(androidx.fragment.app.FragmentManager)
    {
        androidx.fragment.app.FragmentManager$10 r0;
        androidx.fragment.app.FragmentManager r1;

        r0 := @this: androidx.fragment.app.FragmentManager$10;

        r1 := @parameter0: androidx.fragment.app.FragmentManager;

        r0.<androidx.fragment.app.FragmentManager$10: androidx.fragment.app.FragmentManager this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onActivityResult(java.util.Map)
    {
        androidx.fragment.app.FragmentManager$10 r0;
        java.util.Map r1;
        java.lang.String[] r2, $r8;
        java.util.ArrayList r3, $r10;
        int[] r4;
        java.lang.String r5, $r20, $r24;
        int i0, $i1, $i2, $i5, i6;
        androidx.fragment.app.Fragment r6;
        java.util.Set $r7;
        java.lang.Object[] $r9;
        java.util.Collection $r11;
        androidx.fragment.app.FragmentManager $r12, $r15;
        java.util.ArrayDeque $r13;
        java.lang.Object $r14, $r25;
        androidx.fragment.app.FragmentStore $r16;
        java.lang.StringBuilder $r17, $r18, $r19, $r21, $r22, $r23;
        java.lang.Boolean $r26;
        boolean $z0;
        byte $b7;
        androidx.fragment.app.FragmentManager$LaunchedFragmentInfo r28;

        r0 := @this: androidx.fragment.app.FragmentManager$10;

        r1 := @parameter0: java.util.Map;

        $r7 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        $r8 = newarray (java.lang.String)[0];

        $r9 = interfaceinvoke $r7.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        r2 = (java.lang.String[]) $r9;

        $r10 = new java.util.ArrayList;

        $r11 = interfaceinvoke r1.<java.util.Map: java.util.Collection values()>();

        specialinvoke $r10.<java.util.ArrayList: void <init>(java.util.Collection)>($r11);

        r3 = $r10;

        $i1 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        r4 = newarray (int)[$i1];

        i6 = 0;

     label1:
        $i2 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if i6 >= $i2 goto label4;

        $i5 = i6;

        $r25 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r26 = (java.lang.Boolean) $r25;

        $z0 = virtualinvoke $r26.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $b7 = 0;

        goto label3;

     label2:
        $b7 = -1;

     label3:
        r4[$i5] = $b7;

        i6 = i6 + 1;

        goto label1;

     label4:
        $r12 = r0.<androidx.fragment.app.FragmentManager$10: androidx.fragment.app.FragmentManager this$0>;

        $r13 = $r12.<androidx.fragment.app.FragmentManager: java.util.ArrayDeque mLaunchedFragments>;

        $r14 = virtualinvoke $r13.<java.util.ArrayDeque: java.lang.Object pollFirst()>();

        r28 = (androidx.fragment.app.FragmentManager$LaunchedFragmentInfo) $r14;

        if r28 != null goto label5;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No permissions were requested for ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("FragmentManager", $r24);

        return;

     label5:
        r5 = r28.<androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: java.lang.String mWho>;

        i0 = r28.<androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: int mRequestCode>;

        $r15 = r0.<androidx.fragment.app.FragmentManager$10: androidx.fragment.app.FragmentManager this$0>;

        $r16 = staticinvoke <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore access$200(androidx.fragment.app.FragmentManager)>($r15);

        r6 = virtualinvoke $r16.<androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)>(r5);

        if r6 != null goto label6;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission request result delivered for unknown Fragment ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("FragmentManager", $r20);

        return;

     label6:
        virtualinvoke r6.<androidx.fragment.app.Fragment: void onRequestPermissionsResult(int,java.lang.String[],int[])>(i0, r2, r4);

        return;
    }

    public volatile void onActivityResult(java.lang.Object)
    {
        androidx.fragment.app.FragmentManager$10 r0;
        java.lang.Object r1;
        java.util.Map $r2;

        r0 := @this: androidx.fragment.app.FragmentManager$10;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.Map) r1;

        virtualinvoke r0.<androidx.fragment.app.FragmentManager$10: void onActivityResult(java.util.Map)>($r2);

        return;
    }

androidx.fragment.app.FragmentManager$2
<androidx.fragment.app.FragmentManager$2: androidx.fragment.app.FragmentManager this$0>
    void <init>(androidx.fragment.app.FragmentManager)
    {
        androidx.fragment.app.FragmentManager$2 r0;
        androidx.fragment.app.FragmentManager r1;

        r0 := @this: androidx.fragment.app.FragmentManager$2;

        r1 := @parameter0: androidx.fragment.app.FragmentManager;

        r0.<androidx.fragment.app.FragmentManager$2: androidx.fragment.app.FragmentManager this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onPrepareMenu(android.view.Menu)
    {
        androidx.fragment.app.FragmentManager$2 r0;
        android.view.Menu r1;
        androidx.fragment.app.FragmentManager $r2;

        r0 := @this: androidx.fragment.app.FragmentManager$2;

        r1 := @parameter0: android.view.Menu;

        $r2 = r0.<androidx.fragment.app.FragmentManager$2: androidx.fragment.app.FragmentManager this$0>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentManager: boolean dispatchPrepareOptionsMenu(android.view.Menu)>(r1);

        return;
    }

    public void onCreateMenu(android.view.Menu, android.view.MenuInflater)
    {
        androidx.fragment.app.FragmentManager$2 r0;
        android.view.Menu r1;
        android.view.MenuInflater r2;
        androidx.fragment.app.FragmentManager $r3;

        r0 := @this: androidx.fragment.app.FragmentManager$2;

        r1 := @parameter0: android.view.Menu;

        r2 := @parameter1: android.view.MenuInflater;

        $r3 = r0.<androidx.fragment.app.FragmentManager$2: androidx.fragment.app.FragmentManager this$0>;

        virtualinvoke $r3.<androidx.fragment.app.FragmentManager: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>(r1, r2);

        return;
    }

    public boolean onMenuItemSelected(android.view.MenuItem)
    {
        androidx.fragment.app.FragmentManager$2 r0;
        android.view.MenuItem r1;
        androidx.fragment.app.FragmentManager $r2;
        boolean $z0;

        r0 := @this: androidx.fragment.app.FragmentManager$2;

        r1 := @parameter0: android.view.MenuItem;

        $r2 = r0.<androidx.fragment.app.FragmentManager$2: androidx.fragment.app.FragmentManager this$0>;

        $z0 = virtualinvoke $r2.<androidx.fragment.app.FragmentManager: boolean dispatchOptionsItemSelected(android.view.MenuItem)>(r1);

        return $z0;
    }

    public void onMenuClosed(android.view.Menu)
    {
        androidx.fragment.app.FragmentManager$2 r0;
        android.view.Menu r1;
        androidx.fragment.app.FragmentManager $r2;

        r0 := @this: androidx.fragment.app.FragmentManager$2;

        r1 := @parameter0: android.view.Menu;

        $r2 = r0.<androidx.fragment.app.FragmentManager$2: androidx.fragment.app.FragmentManager this$0>;

        virtualinvoke $r2.<androidx.fragment.app.FragmentManager: void dispatchOptionsMenuClosed(android.view.Menu)>(r1);

        return;
    }

androidx.fragment.app.FragmentManager$3
<androidx.fragment.app.FragmentManager$3: androidx.fragment.app.FragmentManager this$0>
    void <init>(androidx.fragment.app.FragmentManager)
    {
        androidx.fragment.app.FragmentManager$3 r0;
        androidx.fragment.app.FragmentManager r1;

        r0 := @this: androidx.fragment.app.FragmentManager$3;

        r1 := @parameter0: androidx.fragment.app.FragmentManager;

        r0.<androidx.fragment.app.FragmentManager$3: androidx.fragment.app.FragmentManager this$0> = r1;

        specialinvoke r0.<androidx.fragment.app.FragmentFactory: void <init>()>();

        return;
    }

    public androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader, java.lang.String)
    {
        androidx.fragment.app.FragmentManager$3 r0;
        java.lang.ClassLoader r1;
        java.lang.String r2;
        androidx.fragment.app.FragmentManager $r3, $r5;
        androidx.fragment.app.FragmentHostCallback $r4, $r6;
        android.content.Context $r7;
        androidx.fragment.app.Fragment $r8;

        r0 := @this: androidx.fragment.app.FragmentManager$3;

        r1 := @parameter0: java.lang.ClassLoader;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<androidx.fragment.app.FragmentManager$3: androidx.fragment.app.FragmentManager this$0>;

        $r4 = virtualinvoke $r3.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback getHost()>();

        $r5 = r0.<androidx.fragment.app.FragmentManager$3: androidx.fragment.app.FragmentManager this$0>;

        $r6 = virtualinvoke $r5.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback getHost()>();

        $r7 = virtualinvoke $r6.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        $r8 = virtualinvoke $r4.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>($r7, r2, null);

        return $r8;
    }

androidx.fragment.app.FragmentManager$4
<androidx.fragment.app.FragmentManager$4: androidx.fragment.app.FragmentManager this$0>
    void <init>(androidx.fragment.app.FragmentManager)
    {
        androidx.fragment.app.FragmentManager$4 r0;
        androidx.fragment.app.FragmentManager r1;

        r0 := @this: androidx.fragment.app.FragmentManager$4;

        r1 := @parameter0: androidx.fragment.app.FragmentManager;

        r0.<androidx.fragment.app.FragmentManager$4: androidx.fragment.app.FragmentManager this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.fragment.app.SpecialEffectsController createController(android.view.ViewGroup)
    {
        androidx.fragment.app.FragmentManager$4 r0;
        android.view.ViewGroup r1;
        androidx.fragment.app.DefaultSpecialEffectsController $r2;

        r0 := @this: androidx.fragment.app.FragmentManager$4;

        r1 := @parameter0: android.view.ViewGroup;

        $r2 = new androidx.fragment.app.DefaultSpecialEffectsController;

        specialinvoke $r2.<androidx.fragment.app.DefaultSpecialEffectsController: void <init>(android.view.ViewGroup)>(r1);

        return $r2;
    }

androidx.fragment.app.FragmentManager$5
<androidx.fragment.app.FragmentManager$5: androidx.fragment.app.FragmentManager this$0>
    void <init>(androidx.fragment.app.FragmentManager)
    {
        androidx.fragment.app.FragmentManager$5 r0;
        androidx.fragment.app.FragmentManager r1;

        r0 := @this: androidx.fragment.app.FragmentManager$5;

        r1 := @parameter0: androidx.fragment.app.FragmentManager;

        r0.<androidx.fragment.app.FragmentManager$5: androidx.fragment.app.FragmentManager this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.fragment.app.FragmentManager$5 r0;
        androidx.fragment.app.FragmentManager $r1;

        r0 := @this: androidx.fragment.app.FragmentManager$5;

        $r1 = r0.<androidx.fragment.app.FragmentManager$5: androidx.fragment.app.FragmentManager this$0>;

        virtualinvoke $r1.<androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)>(1);

        return;
    }

androidx.fragment.app.FragmentManager$6
<androidx.fragment.app.FragmentManager$6: java.lang.String val$requestKey>
<androidx.fragment.app.FragmentManager$6: androidx.fragment.app.FragmentResultListener val$listener>
<androidx.fragment.app.FragmentManager$6: androidx.lifecycle.Lifecycle val$lifecycle>
<androidx.fragment.app.FragmentManager$6: androidx.fragment.app.FragmentManager this$0>
    void <init>(androidx.fragment.app.FragmentManager, java.lang.String, androidx.fragment.app.FragmentResultListener, androidx.lifecycle.Lifecycle)
    {
        androidx.fragment.app.FragmentManager$6 r0;
        androidx.fragment.app.FragmentManager r1;
        java.lang.String r2;
        androidx.fragment.app.FragmentResultListener r3;
        androidx.lifecycle.Lifecycle r4;

        r0 := @this: androidx.fragment.app.FragmentManager$6;

        r1 := @parameter0: androidx.fragment.app.FragmentManager;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.fragment.app.FragmentResultListener;

        r4 := @parameter3: androidx.lifecycle.Lifecycle;

        r0.<androidx.fragment.app.FragmentManager$6: androidx.fragment.app.FragmentManager this$0> = r1;

        r0.<androidx.fragment.app.FragmentManager$6: java.lang.String val$requestKey> = r2;

        r0.<androidx.fragment.app.FragmentManager$6: androidx.fragment.app.FragmentResultListener val$listener> = r3;

        r0.<androidx.fragment.app.FragmentManager$6: androidx.lifecycle.Lifecycle val$lifecycle> = r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onStateChanged(androidx.lifecycle.LifecycleOwner, androidx.lifecycle.Lifecycle$Event)
    {
        androidx.fragment.app.FragmentManager$6 r0;
        androidx.lifecycle.LifecycleOwner r1;
        androidx.lifecycle.Lifecycle$Event r2, $r4, $r18;
        android.os.Bundle r3;
        androidx.lifecycle.Lifecycle $r5;
        androidx.fragment.app.FragmentManager $r6, $r10, $r17;
        java.util.Map $r7, $r11;
        java.lang.String $r8, $r12, $r14, $r16;
        java.lang.Object $r13;
        androidx.fragment.app.FragmentResultListener $r15;
        androidx.lifecycle.LifecycleObserver r19;

        r0 := @this: androidx.fragment.app.FragmentManager$6;

        r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        r2 := @parameter1: androidx.lifecycle.Lifecycle$Event;

        $r4 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START>;

        if r2 != $r4 goto label1;

        $r10 = r0.<androidx.fragment.app.FragmentManager$6: androidx.fragment.app.FragmentManager this$0>;

        $r11 = staticinvoke <androidx.fragment.app.FragmentManager: java.util.Map access$000(androidx.fragment.app.FragmentManager)>($r10);

        $r12 = r0.<androidx.fragment.app.FragmentManager$6: java.lang.String val$requestKey>;

        $r13 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r12);

        r3 = (android.os.Bundle) $r13;

        if r3 == null goto label1;

        $r15 = r0.<androidx.fragment.app.FragmentManager$6: androidx.fragment.app.FragmentResultListener val$listener>;

        $r14 = r0.<androidx.fragment.app.FragmentManager$6: java.lang.String val$requestKey>;

        interfaceinvoke $r15.<androidx.fragment.app.FragmentResultListener: void onFragmentResult(java.lang.String,android.os.Bundle)>($r14, r3);

        $r17 = r0.<androidx.fragment.app.FragmentManager$6: androidx.fragment.app.FragmentManager this$0>;

        $r16 = r0.<androidx.fragment.app.FragmentManager$6: java.lang.String val$requestKey>;

        virtualinvoke $r17.<androidx.fragment.app.FragmentManager: void clearFragmentResult(java.lang.String)>($r16);

     label1:
        $r18 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY>;

        if r2 != $r18 goto label2;

        $r5 = r0.<androidx.fragment.app.FragmentManager$6: androidx.lifecycle.Lifecycle val$lifecycle>;

        r19 = (androidx.lifecycle.LifecycleObserver) r0;

        virtualinvoke $r5.<androidx.lifecycle.Lifecycle: void removeObserver(androidx.lifecycle.LifecycleObserver)>(r19);

        $r6 = r0.<androidx.fragment.app.FragmentManager$6: androidx.fragment.app.FragmentManager this$0>;

        $r7 = staticinvoke <androidx.fragment.app.FragmentManager: java.util.Map access$100(androidx.fragment.app.FragmentManager)>($r6);

        $r8 = r0.<androidx.fragment.app.FragmentManager$6: java.lang.String val$requestKey>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r8);

     label2:
        return;
    }

androidx.fragment.app.FragmentManager$7
<androidx.fragment.app.FragmentManager$7: androidx.fragment.app.Fragment val$parent>
<androidx.fragment.app.FragmentManager$7: androidx.fragment.app.FragmentManager this$0>
    void <init>(androidx.fragment.app.FragmentManager, androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManager$7 r0;
        androidx.fragment.app.FragmentManager r1;
        androidx.fragment.app.Fragment r2;

        r0 := @this: androidx.fragment.app.FragmentManager$7;

        r1 := @parameter0: androidx.fragment.app.FragmentManager;

        r2 := @parameter1: androidx.fragment.app.Fragment;

        r0.<androidx.fragment.app.FragmentManager$7: androidx.fragment.app.FragmentManager this$0> = r1;

        r0.<androidx.fragment.app.FragmentManager$7: androidx.fragment.app.Fragment val$parent> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onAttachFragment(androidx.fragment.app.FragmentManager, androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManager$7 r0;
        androidx.fragment.app.FragmentManager r1;
        androidx.fragment.app.Fragment r2, $r3;

        r0 := @this: androidx.fragment.app.FragmentManager$7;

        r1 := @parameter0: androidx.fragment.app.FragmentManager;

        r2 := @parameter1: androidx.fragment.app.Fragment;

        $r3 = r0.<androidx.fragment.app.FragmentManager$7: androidx.fragment.app.Fragment val$parent>;

        virtualinvoke $r3.<androidx.fragment.app.Fragment: void onAttachFragment(androidx.fragment.app.Fragment)>(r2);

        return;
    }

androidx.fragment.app.FragmentManager$8
<androidx.fragment.app.FragmentManager$8: androidx.fragment.app.FragmentManager this$0>
    void <init>(androidx.fragment.app.FragmentManager)
    {
        androidx.fragment.app.FragmentManager$8 r0;
        androidx.fragment.app.FragmentManager r1;

        r0 := @this: androidx.fragment.app.FragmentManager$8;

        r1 := @parameter0: androidx.fragment.app.FragmentManager;

        r0.<androidx.fragment.app.FragmentManager$8: androidx.fragment.app.FragmentManager this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onActivityResult(androidx.activity.result.ActivityResult)
    {
        androidx.fragment.app.FragmentManager$8 r0;
        androidx.activity.result.ActivityResult r1;
        androidx.fragment.app.FragmentManager$LaunchedFragmentInfo r2;
        java.lang.String r3, $r14, $r18;
        int i0, $i1;
        androidx.fragment.app.Fragment r4;
        androidx.fragment.app.FragmentManager $r5, $r8;
        java.util.ArrayDeque $r6;
        java.lang.Object $r7;
        androidx.fragment.app.FragmentStore $r9;
        android.content.Intent $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r15, $r16, $r17;

        r0 := @this: androidx.fragment.app.FragmentManager$8;

        r1 := @parameter0: androidx.activity.result.ActivityResult;

        $r5 = r0.<androidx.fragment.app.FragmentManager$8: androidx.fragment.app.FragmentManager this$0>;

        $r6 = $r5.<androidx.fragment.app.FragmentManager: java.util.ArrayDeque mLaunchedFragments>;

        $r7 = virtualinvoke $r6.<java.util.ArrayDeque: java.lang.Object pollFirst()>();

        r2 = (androidx.fragment.app.FragmentManager$LaunchedFragmentInfo) $r7;

        if r2 != null goto label1;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No Activities were started for result for ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("FragmentManager", $r18);

        return;

     label1:
        r3 = r2.<androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: java.lang.String mWho>;

        i0 = r2.<androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: int mRequestCode>;

        $r8 = r0.<androidx.fragment.app.FragmentManager$8: androidx.fragment.app.FragmentManager this$0>;

        $r9 = staticinvoke <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore access$200(androidx.fragment.app.FragmentManager)>($r8);

        r4 = virtualinvoke $r9.<androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)>(r3);

        if r4 != null goto label2;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity result delivered for unknown Fragment ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("FragmentManager", $r14);

        return;

     label2:
        $i1 = virtualinvoke r1.<androidx.activity.result.ActivityResult: int getResultCode()>();

        $r10 = virtualinvoke r1.<androidx.activity.result.ActivityResult: android.content.Intent getData()>();

        virtualinvoke r4.<androidx.fragment.app.Fragment: void onActivityResult(int,int,android.content.Intent)>(i0, $i1, $r10);

        return;
    }

    public volatile void onActivityResult(java.lang.Object)
    {
        androidx.fragment.app.FragmentManager$8 r0;
        java.lang.Object r1;
        androidx.activity.result.ActivityResult $r2;

        r0 := @this: androidx.fragment.app.FragmentManager$8;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.activity.result.ActivityResult) r1;

        virtualinvoke r0.<androidx.fragment.app.FragmentManager$8: void onActivityResult(androidx.activity.result.ActivityResult)>($r2);

        return;
    }

androidx.fragment.app.FragmentManager$9
<androidx.fragment.app.FragmentManager$9: androidx.fragment.app.FragmentManager this$0>
    void <init>(androidx.fragment.app.FragmentManager)
    {
        androidx.fragment.app.FragmentManager$9 r0;
        androidx.fragment.app.FragmentManager r1;

        r0 := @this: androidx.fragment.app.FragmentManager$9;

        r1 := @parameter0: androidx.fragment.app.FragmentManager;

        r0.<androidx.fragment.app.FragmentManager$9: androidx.fragment.app.FragmentManager this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onActivityResult(androidx.activity.result.ActivityResult)
    {
        androidx.fragment.app.FragmentManager$9 r0;
        androidx.activity.result.ActivityResult r1;
        androidx.fragment.app.FragmentManager$LaunchedFragmentInfo r2;
        java.lang.String r3, $r14, $r18;
        int i0, $i1;
        androidx.fragment.app.Fragment r4;
        androidx.fragment.app.FragmentManager $r5, $r8;
        java.util.ArrayDeque $r6;
        java.lang.Object $r7;
        androidx.fragment.app.FragmentStore $r9;
        android.content.Intent $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r15, $r16, $r17;

        r0 := @this: androidx.fragment.app.FragmentManager$9;

        r1 := @parameter0: androidx.activity.result.ActivityResult;

        $r5 = r0.<androidx.fragment.app.FragmentManager$9: androidx.fragment.app.FragmentManager this$0>;

        $r6 = $r5.<androidx.fragment.app.FragmentManager: java.util.ArrayDeque mLaunchedFragments>;

        $r7 = virtualinvoke $r6.<java.util.ArrayDeque: java.lang.Object pollFirst()>();

        r2 = (androidx.fragment.app.FragmentManager$LaunchedFragmentInfo) $r7;

        if r2 != null goto label1;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No IntentSenders were started for ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("FragmentManager", $r18);

        return;

     label1:
        r3 = r2.<androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: java.lang.String mWho>;

        i0 = r2.<androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: int mRequestCode>;

        $r8 = r0.<androidx.fragment.app.FragmentManager$9: androidx.fragment.app.FragmentManager this$0>;

        $r9 = staticinvoke <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore access$200(androidx.fragment.app.FragmentManager)>($r8);

        r4 = virtualinvoke $r9.<androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)>(r3);

        if r4 != null goto label2;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Intent Sender result delivered for unknown Fragment ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("FragmentManager", $r14);

        return;

     label2:
        $i1 = virtualinvoke r1.<androidx.activity.result.ActivityResult: int getResultCode()>();

        $r10 = virtualinvoke r1.<androidx.activity.result.ActivityResult: android.content.Intent getData()>();

        virtualinvoke r4.<androidx.fragment.app.Fragment: void onActivityResult(int,int,android.content.Intent)>(i0, $i1, $r10);

        return;
    }

    public volatile void onActivityResult(java.lang.Object)
    {
        androidx.fragment.app.FragmentManager$9 r0;
        java.lang.Object r1;
        androidx.activity.result.ActivityResult $r2;

        r0 := @this: androidx.fragment.app.FragmentManager$9;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.activity.result.ActivityResult) r1;

        virtualinvoke r0.<androidx.fragment.app.FragmentManager$9: void onActivityResult(androidx.activity.result.ActivityResult)>($r2);

        return;
    }

androidx.fragment.app.FragmentManager$BackStackEntry
<androidx.fragment.app.FragmentManager$BackStackEntry: int getId()>
<androidx.fragment.app.FragmentManager$BackStackEntry: java.lang.String getName()>
<androidx.fragment.app.FragmentManager$BackStackEntry: int getBreadCrumbTitleRes()>
<androidx.fragment.app.FragmentManager$BackStackEntry: int getBreadCrumbShortTitleRes()>
<androidx.fragment.app.FragmentManager$BackStackEntry: java.lang.CharSequence getBreadCrumbTitle()>
<androidx.fragment.app.FragmentManager$BackStackEntry: java.lang.CharSequence getBreadCrumbShortTitle()>
androidx.fragment.app.FragmentManager$ClearBackStackState
<androidx.fragment.app.FragmentManager$ClearBackStackState: java.lang.String mName>
<androidx.fragment.app.FragmentManager$ClearBackStackState: androidx.fragment.app.FragmentManager this$0>
    void <init>(androidx.fragment.app.FragmentManager, java.lang.String)
    {
        androidx.fragment.app.FragmentManager$ClearBackStackState r0;
        androidx.fragment.app.FragmentManager r1;
        java.lang.String r2;

        r0 := @this: androidx.fragment.app.FragmentManager$ClearBackStackState;

        r1 := @parameter0: androidx.fragment.app.FragmentManager;

        r2 := @parameter1: java.lang.String;

        r0.<androidx.fragment.app.FragmentManager$ClearBackStackState: androidx.fragment.app.FragmentManager this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.fragment.app.FragmentManager$ClearBackStackState: java.lang.String mName> = r2;

        return;
    }

    public boolean generateOps(java.util.ArrayList, java.util.ArrayList)
    {
        androidx.fragment.app.FragmentManager$ClearBackStackState r0;
        java.util.ArrayList r1, r2;
        java.lang.String $r3;
        androidx.fragment.app.FragmentManager $r4;
        boolean $z0;

        r0 := @this: androidx.fragment.app.FragmentManager$ClearBackStackState;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: java.util.ArrayList;

        $r4 = r0.<androidx.fragment.app.FragmentManager$ClearBackStackState: androidx.fragment.app.FragmentManager this$0>;

        $r3 = r0.<androidx.fragment.app.FragmentManager$ClearBackStackState: java.lang.String mName>;

        $z0 = virtualinvoke $r4.<androidx.fragment.app.FragmentManager: boolean clearBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String)>(r1, r2, $r3);

        return $z0;
    }

androidx.fragment.app.FragmentManager$FragmentIntentSenderContract
    void <init>()
    {
        androidx.fragment.app.FragmentManager$FragmentIntentSenderContract r0;

        r0 := @this: androidx.fragment.app.FragmentManager$FragmentIntentSenderContract;

        specialinvoke r0.<androidx.activity.result.contract.ActivityResultContract: void <init>()>();

        return;
    }

    public android.content.Intent createIntent(android.content.Context, androidx.activity.result.IntentSenderRequest)
    {
        androidx.fragment.app.FragmentManager$FragmentIntentSenderContract r0;
        android.content.Context r1;
        android.content.Intent r2, r3, r17;
        android.os.Bundle r4;
        java.lang.StringBuilder $r8, $r9, r19;
        java.lang.String $r10;
        boolean $z0, $z1;
        android.content.IntentSender $r13;
        androidx.activity.result.IntentSenderRequest$Builder $r14, $r15, r18;
        int $i1, $i2;
        androidx.activity.result.IntentSenderRequest r16;
        android.os.Parcelable r20;

        r0 := @this: androidx.fragment.app.FragmentManager$FragmentIntentSenderContract;

        r1 := @parameter0: android.content.Context;

        r16 := @parameter1: androidx.activity.result.IntentSenderRequest;

        r17 = new android.content.Intent;

        specialinvoke r17.<android.content.Intent: void <init>(java.lang.String)>("androidx.activity.result.contract.action.INTENT_SENDER_REQUEST");

        r2 = r17;

        r3 = virtualinvoke r16.<androidx.activity.result.IntentSenderRequest: android.content.Intent getFillInIntent()>();

        if r3 == null goto label1;

        r4 = virtualinvoke r3.<android.content.Intent: android.os.Bundle getBundleExtra(java.lang.String)>("androidx.activity.result.contract.extra.ACTIVITY_OPTIONS_BUNDLE");

        if r4 == null goto label1;

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)>("androidx.activity.result.contract.extra.ACTIVITY_OPTIONS_BUNDLE", r4);

        virtualinvoke r3.<android.content.Intent: void removeExtra(java.lang.String)>("androidx.activity.result.contract.extra.ACTIVITY_OPTIONS_BUNDLE");

        $z0 = virtualinvoke r3.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("androidx.fragment.extra.ACTIVITY_OPTIONS_BUNDLE", 0);

        if $z0 == 0 goto label1;

        r18 = new androidx.activity.result.IntentSenderRequest$Builder;

        $r13 = virtualinvoke r16.<androidx.activity.result.IntentSenderRequest: android.content.IntentSender getIntentSender()>();

        specialinvoke r18.<androidx.activity.result.IntentSenderRequest$Builder: void <init>(android.content.IntentSender)>($r13);

        $r14 = virtualinvoke r18.<androidx.activity.result.IntentSenderRequest$Builder: androidx.activity.result.IntentSenderRequest$Builder setFillInIntent(android.content.Intent)>(null);

        $i1 = virtualinvoke r16.<androidx.activity.result.IntentSenderRequest: int getFlagsValues()>();

        $i2 = virtualinvoke r16.<androidx.activity.result.IntentSenderRequest: int getFlagsMask()>();

        $r15 = virtualinvoke $r14.<androidx.activity.result.IntentSenderRequest$Builder: androidx.activity.result.IntentSenderRequest$Builder setFlags(int,int)>($i1, $i2);

        r16 = virtualinvoke $r15.<androidx.activity.result.IntentSenderRequest$Builder: androidx.activity.result.IntentSenderRequest build()>();

     label1:
        r20 = (android.os.Parcelable) r16;

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("androidx.activity.result.contract.extra.INTENT_SENDER_REQUEST", r20);

        $z1 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2);

        if $z1 == 0 goto label2;

        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CreateIntent created the following intent: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r10);

     label2:
        return r2;
    }

    public androidx.activity.result.ActivityResult parseResult(int, android.content.Intent)
    {
        androidx.fragment.app.FragmentManager$FragmentIntentSenderContract r0;
        int i0;
        android.content.Intent r1;
        androidx.activity.result.ActivityResult $r2;

        r0 := @this: androidx.fragment.app.FragmentManager$FragmentIntentSenderContract;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        $r2 = new androidx.activity.result.ActivityResult;

        specialinvoke $r2.<androidx.activity.result.ActivityResult: void <init>(int,android.content.Intent)>(i0, r1);

        return $r2;
    }

    public volatile java.lang.Object parseResult(int, android.content.Intent)
    {
        androidx.fragment.app.FragmentManager$FragmentIntentSenderContract r0;
        int i0;
        android.content.Intent r1;
        androidx.activity.result.ActivityResult $r2;

        r0 := @this: androidx.fragment.app.FragmentManager$FragmentIntentSenderContract;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        $r2 = virtualinvoke r0.<androidx.fragment.app.FragmentManager$FragmentIntentSenderContract: androidx.activity.result.ActivityResult parseResult(int,android.content.Intent)>(i0, r1);

        return $r2;
    }

    public volatile android.content.Intent createIntent(android.content.Context, java.lang.Object)
    {
        androidx.fragment.app.FragmentManager$FragmentIntentSenderContract r0;
        android.content.Context r1;
        java.lang.Object r2;
        androidx.activity.result.IntentSenderRequest $r3;
        android.content.Intent $r4;

        r0 := @this: androidx.fragment.app.FragmentManager$FragmentIntentSenderContract;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        $r3 = (androidx.activity.result.IntentSenderRequest) r2;

        $r4 = virtualinvoke r0.<androidx.fragment.app.FragmentManager$FragmentIntentSenderContract: android.content.Intent createIntent(android.content.Context,androidx.activity.result.IntentSenderRequest)>(r1, $r3);

        return $r4;
    }

androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks
    public void <init>()
    {
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks r0;

        r0 := @this: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onFragmentPreAttached(androidx.fragment.app.FragmentManager, androidx.fragment.app.Fragment, android.content.Context)
    {
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks r0;
        androidx.fragment.app.FragmentManager r1;
        androidx.fragment.app.Fragment r2;
        android.content.Context r3;

        r0 := @this: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks;

        r1 := @parameter0: androidx.fragment.app.FragmentManager;

        r2 := @parameter1: androidx.fragment.app.Fragment;

        r3 := @parameter2: android.content.Context;

        return;
    }

    public void onFragmentAttached(androidx.fragment.app.FragmentManager, androidx.fragment.app.Fragment, android.content.Context)
    {
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks r0;
        androidx.fragment.app.FragmentManager r1;
        androidx.fragment.app.Fragment r2;
        android.content.Context r3;

        r0 := @this: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks;

        r1 := @parameter0: androidx.fragment.app.FragmentManager;

        r2 := @parameter1: androidx.fragment.app.Fragment;

        r3 := @parameter2: android.content.Context;

        return;
    }

    public void onFragmentPreCreated(androidx.fragment.app.FragmentManager, androidx.fragment.app.Fragment, android.os.Bundle)
    {
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks r0;
        androidx.fragment.app.FragmentManager r1;
        androidx.fragment.app.Fragment r2;
        android.os.Bundle r3;

        r0 := @this: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks;

        r1 := @parameter0: androidx.fragment.app.FragmentManager;

        r2 := @parameter1: androidx.fragment.app.Fragment;

        r3 := @parameter2: android.os.Bundle;

        return;
    }

    public void onFragmentCreated(androidx.fragment.app.FragmentManager, androidx.fragment.app.Fragment, android.os.Bundle)
    {
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks r0;
        androidx.fragment.app.FragmentManager r1;
        androidx.fragment.app.Fragment r2;
        android.os.Bundle r3;

        r0 := @this: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks;

        r1 := @parameter0: androidx.fragment.app.FragmentManager;

        r2 := @parameter1: androidx.fragment.app.Fragment;

        r3 := @parameter2: android.os.Bundle;

        return;
    }

    public void onFragmentActivityCreated(androidx.fragment.app.FragmentManager, androidx.fragment.app.Fragment, android.os.Bundle)
    {
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks r0;
        androidx.fragment.app.FragmentManager r1;
        androidx.fragment.app.Fragment r2;
        android.os.Bundle r3;

        r0 := @this: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks;

        r1 := @parameter0: androidx.fragment.app.FragmentManager;

        r2 := @parameter1: androidx.fragment.app.Fragment;

        r3 := @parameter2: android.os.Bundle;

        return;
    }

    public void onFragmentViewCreated(androidx.fragment.app.FragmentManager, androidx.fragment.app.Fragment, android.view.View, android.os.Bundle)
    {
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks r0;
        androidx.fragment.app.FragmentManager r1;
        androidx.fragment.app.Fragment r2;
        android.view.View r3;
        android.os.Bundle r4;

        r0 := @this: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks;

        r1 := @parameter0: androidx.fragment.app.FragmentManager;

        r2 := @parameter1: androidx.fragment.app.Fragment;

        r3 := @parameter2: android.view.View;

        r4 := @parameter3: android.os.Bundle;

        return;
    }

    public void onFragmentStarted(androidx.fragment.app.FragmentManager, androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks r0;
        androidx.fragment.app.FragmentManager r1;
        androidx.fragment.app.Fragment r2;

        r0 := @this: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks;

        r1 := @parameter0: androidx.fragment.app.FragmentManager;

        r2 := @parameter1: androidx.fragment.app.Fragment;

        return;
    }

    public void onFragmentResumed(androidx.fragment.app.FragmentManager, androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks r0;
        androidx.fragment.app.FragmentManager r1;
        androidx.fragment.app.Fragment r2;

        r0 := @this: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks;

        r1 := @parameter0: androidx.fragment.app.FragmentManager;

        r2 := @parameter1: androidx.fragment.app.Fragment;

        return;
    }

    public void onFragmentPaused(androidx.fragment.app.FragmentManager, androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks r0;
        androidx.fragment.app.FragmentManager r1;
        androidx.fragment.app.Fragment r2;

        r0 := @this: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks;

        r1 := @parameter0: androidx.fragment.app.FragmentManager;

        r2 := @parameter1: androidx.fragment.app.Fragment;

        return;
    }

    public void onFragmentStopped(androidx.fragment.app.FragmentManager, androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks r0;
        androidx.fragment.app.FragmentManager r1;
        androidx.fragment.app.Fragment r2;

        r0 := @this: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks;

        r1 := @parameter0: androidx.fragment.app.FragmentManager;

        r2 := @parameter1: androidx.fragment.app.Fragment;

        return;
    }

    public void onFragmentSaveInstanceState(androidx.fragment.app.FragmentManager, androidx.fragment.app.Fragment, android.os.Bundle)
    {
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks r0;
        androidx.fragment.app.FragmentManager r1;
        androidx.fragment.app.Fragment r2;
        android.os.Bundle r3;

        r0 := @this: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks;

        r1 := @parameter0: androidx.fragment.app.FragmentManager;

        r2 := @parameter1: androidx.fragment.app.Fragment;

        r3 := @parameter2: android.os.Bundle;

        return;
    }

    public void onFragmentViewDestroyed(androidx.fragment.app.FragmentManager, androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks r0;
        androidx.fragment.app.FragmentManager r1;
        androidx.fragment.app.Fragment r2;

        r0 := @this: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks;

        r1 := @parameter0: androidx.fragment.app.FragmentManager;

        r2 := @parameter1: androidx.fragment.app.Fragment;

        return;
    }

    public void onFragmentDestroyed(androidx.fragment.app.FragmentManager, androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks r0;
        androidx.fragment.app.FragmentManager r1;
        androidx.fragment.app.Fragment r2;

        r0 := @this: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks;

        r1 := @parameter0: androidx.fragment.app.FragmentManager;

        r2 := @parameter1: androidx.fragment.app.Fragment;

        return;
    }

    public void onFragmentDetached(androidx.fragment.app.FragmentManager, androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks r0;
        androidx.fragment.app.FragmentManager r1;
        androidx.fragment.app.Fragment r2;

        r0 := @this: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks;

        r1 := @parameter0: androidx.fragment.app.FragmentManager;

        r2 := @parameter1: androidx.fragment.app.Fragment;

        return;
    }

androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1
    void <init>()
    {
        androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1 r0;

        r0 := @this: androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.fragment.app.FragmentManager$LaunchedFragmentInfo createFromParcel(android.os.Parcel)
    {
        androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1 r0;
        android.os.Parcel r1;
        androidx.fragment.app.FragmentManager$LaunchedFragmentInfo $r2;

        r0 := @this: androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1;

        r1 := @parameter0: android.os.Parcel;

        $r2 = new androidx.fragment.app.FragmentManager$LaunchedFragmentInfo;

        specialinvoke $r2.<androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: void <init>(android.os.Parcel)>(r1);

        return $r2;
    }

    public androidx.fragment.app.FragmentManager$LaunchedFragmentInfo[] newArray(int)
    {
        androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1 r0;
        int i0;
        androidx.fragment.app.FragmentManager$LaunchedFragmentInfo[] $r1;

        r0 := @this: androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1;

        i0 := @parameter0: int;

        $r1 = newarray (androidx.fragment.app.FragmentManager$LaunchedFragmentInfo)[i0];

        return $r1;
    }

    public volatile java.lang.Object[] newArray(int)
    {
        androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1 r0;
        int i0;
        androidx.fragment.app.FragmentManager$LaunchedFragmentInfo[] $r1;

        r0 := @this: androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1: androidx.fragment.app.FragmentManager$LaunchedFragmentInfo[] newArray(int)>(i0);

        return $r1;
    }

    public volatile java.lang.Object createFromParcel(android.os.Parcel)
    {
        androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1 r0;
        android.os.Parcel r1;
        androidx.fragment.app.FragmentManager$LaunchedFragmentInfo $r2;

        r0 := @this: androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1;

        r1 := @parameter0: android.os.Parcel;

        $r2 = virtualinvoke r0.<androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1: androidx.fragment.app.FragmentManager$LaunchedFragmentInfo createFromParcel(android.os.Parcel)>(r1);

        return $r2;
    }

androidx.fragment.app.FragmentManager$LaunchedFragmentInfo
<androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: java.lang.String mWho>
<androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: int mRequestCode>
<androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: android.os.Parcelable$Creator CREATOR>
    void <init>(java.lang.String, int)
    {
        androidx.fragment.app.FragmentManager$LaunchedFragmentInfo r0;
        java.lang.String r1;
        int i0;

        r0 := @this: androidx.fragment.app.FragmentManager$LaunchedFragmentInfo;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: java.lang.String mWho> = r1;

        r0.<androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: int mRequestCode> = i0;

        return;
    }

    void <init>(android.os.Parcel)
    {
        androidx.fragment.app.FragmentManager$LaunchedFragmentInfo r0;
        android.os.Parcel r1;
        java.lang.String $r2;
        int $i0;

        r0 := @this: androidx.fragment.app.FragmentManager$LaunchedFragmentInfo;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: java.lang.String mWho> = $r2;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: int mRequestCode> = $i0;

        return;
    }

    public int describeContents()
    {
        androidx.fragment.app.FragmentManager$LaunchedFragmentInfo r0;

        r0 := @this: androidx.fragment.app.FragmentManager$LaunchedFragmentInfo;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        androidx.fragment.app.FragmentManager$LaunchedFragmentInfo r0;
        android.os.Parcel r1;
        int i0, $i1;
        java.lang.String $r2;

        r0 := @this: androidx.fragment.app.FragmentManager$LaunchedFragmentInfo;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: java.lang.String mWho>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $i1 = r0.<androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: int mRequestCode>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        return;
    }

    static void <clinit>()
    {
        androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1 $r0;

        $r0 = new androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1;

        specialinvoke $r0.<androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1: void <init>()>();

        <androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

androidx.fragment.app.FragmentManager$LifecycleAwareResultListener
<androidx.fragment.app.FragmentManager$LifecycleAwareResultListener: androidx.lifecycle.Lifecycle mLifecycle>
<androidx.fragment.app.FragmentManager$LifecycleAwareResultListener: androidx.fragment.app.FragmentResultListener mListener>
<androidx.fragment.app.FragmentManager$LifecycleAwareResultListener: androidx.lifecycle.LifecycleEventObserver mObserver>
    void <init>(androidx.lifecycle.Lifecycle, androidx.fragment.app.FragmentResultListener, androidx.lifecycle.LifecycleEventObserver)
    {
        androidx.fragment.app.FragmentManager$LifecycleAwareResultListener r0;
        androidx.lifecycle.Lifecycle r1;
        androidx.fragment.app.FragmentResultListener r2;
        androidx.lifecycle.LifecycleEventObserver r3;

        r0 := @this: androidx.fragment.app.FragmentManager$LifecycleAwareResultListener;

        r1 := @parameter0: androidx.lifecycle.Lifecycle;

        r2 := @parameter1: androidx.fragment.app.FragmentResultListener;

        r3 := @parameter2: androidx.lifecycle.LifecycleEventObserver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.fragment.app.FragmentManager$LifecycleAwareResultListener: androidx.lifecycle.Lifecycle mLifecycle> = r1;

        r0.<androidx.fragment.app.FragmentManager$LifecycleAwareResultListener: androidx.fragment.app.FragmentResultListener mListener> = r2;

        r0.<androidx.fragment.app.FragmentManager$LifecycleAwareResultListener: androidx.lifecycle.LifecycleEventObserver mObserver> = r3;

        return;
    }

    public boolean isAtLeast(androidx.lifecycle.Lifecycle$State)
    {
        androidx.fragment.app.FragmentManager$LifecycleAwareResultListener r0;
        androidx.lifecycle.Lifecycle$State r1, $r3;
        androidx.lifecycle.Lifecycle $r2;
        boolean $z0;

        r0 := @this: androidx.fragment.app.FragmentManager$LifecycleAwareResultListener;

        r1 := @parameter0: androidx.lifecycle.Lifecycle$State;

        $r2 = r0.<androidx.fragment.app.FragmentManager$LifecycleAwareResultListener: androidx.lifecycle.Lifecycle mLifecycle>;

        $r3 = virtualinvoke $r2.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $z0 = virtualinvoke $r3.<androidx.lifecycle.Lifecycle$State: boolean isAtLeast(androidx.lifecycle.Lifecycle$State)>(r1);

        return $z0;
    }

    public void onFragmentResult(java.lang.String, android.os.Bundle)
    {
        androidx.fragment.app.FragmentManager$LifecycleAwareResultListener r0;
        java.lang.String r1;
        android.os.Bundle r2;
        androidx.fragment.app.FragmentResultListener $r3;

        r0 := @this: androidx.fragment.app.FragmentManager$LifecycleAwareResultListener;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        $r3 = r0.<androidx.fragment.app.FragmentManager$LifecycleAwareResultListener: androidx.fragment.app.FragmentResultListener mListener>;

        interfaceinvoke $r3.<androidx.fragment.app.FragmentResultListener: void onFragmentResult(java.lang.String,android.os.Bundle)>(r1, r2);

        return;
    }

    public void removeObserver()
    {
        androidx.fragment.app.FragmentManager$LifecycleAwareResultListener r0;
        androidx.lifecycle.LifecycleEventObserver $r1;
        androidx.lifecycle.Lifecycle $r2;
        androidx.lifecycle.LifecycleObserver r3;

        r0 := @this: androidx.fragment.app.FragmentManager$LifecycleAwareResultListener;

        $r2 = r0.<androidx.fragment.app.FragmentManager$LifecycleAwareResultListener: androidx.lifecycle.Lifecycle mLifecycle>;

        $r1 = r0.<androidx.fragment.app.FragmentManager$LifecycleAwareResultListener: androidx.lifecycle.LifecycleEventObserver mObserver>;

        r3 = (androidx.lifecycle.LifecycleObserver) $r1;

        virtualinvoke $r2.<androidx.lifecycle.Lifecycle: void removeObserver(androidx.lifecycle.LifecycleObserver)>(r3);

        return;
    }

androidx.fragment.app.FragmentManager$OnBackStackChangedListener
<androidx.fragment.app.FragmentManager$OnBackStackChangedListener: void onBackStackChanged()>
androidx.fragment.app.FragmentManager$OpGenerator
<androidx.fragment.app.FragmentManager$OpGenerator: boolean generateOps(java.util.ArrayList,java.util.ArrayList)>
androidx.fragment.app.FragmentManager$PopBackStackState
<androidx.fragment.app.FragmentManager$PopBackStackState: java.lang.String mName>
<androidx.fragment.app.FragmentManager$PopBackStackState: int mId>
<androidx.fragment.app.FragmentManager$PopBackStackState: int mFlags>
<androidx.fragment.app.FragmentManager$PopBackStackState: androidx.fragment.app.FragmentManager this$0>
    void <init>(androidx.fragment.app.FragmentManager, java.lang.String, int, int)
    {
        androidx.fragment.app.FragmentManager$PopBackStackState r0;
        androidx.fragment.app.FragmentManager r1;
        java.lang.String r2;
        int i0, i1;

        r0 := @this: androidx.fragment.app.FragmentManager$PopBackStackState;

        r1 := @parameter0: androidx.fragment.app.FragmentManager;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r0.<androidx.fragment.app.FragmentManager$PopBackStackState: androidx.fragment.app.FragmentManager this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.fragment.app.FragmentManager$PopBackStackState: java.lang.String mName> = r2;

        r0.<androidx.fragment.app.FragmentManager$PopBackStackState: int mId> = i0;

        r0.<androidx.fragment.app.FragmentManager$PopBackStackState: int mFlags> = i1;

        return;
    }

    public boolean generateOps(java.util.ArrayList, java.util.ArrayList)
    {
        androidx.fragment.app.FragmentManager$PopBackStackState r0;
        java.util.ArrayList r1, r2;
        androidx.fragment.app.FragmentManager r3, $r4, $r7, $r9;
        androidx.fragment.app.Fragment $r5, $r8;
        int $i0, $i1, $i2;
        java.lang.String $r6, $r10;
        boolean $z0, $z1;

        r0 := @this: androidx.fragment.app.FragmentManager$PopBackStackState;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: java.util.ArrayList;

        $r4 = r0.<androidx.fragment.app.FragmentManager$PopBackStackState: androidx.fragment.app.FragmentManager this$0>;

        $r5 = $r4.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mPrimaryNav>;

        if $r5 == null goto label1;

        $i0 = r0.<androidx.fragment.app.FragmentManager$PopBackStackState: int mId>;

        if $i0 >= 0 goto label1;

        $r6 = r0.<androidx.fragment.app.FragmentManager$PopBackStackState: java.lang.String mName>;

        if $r6 != null goto label1;

        $r7 = r0.<androidx.fragment.app.FragmentManager$PopBackStackState: androidx.fragment.app.FragmentManager this$0>;

        $r8 = $r7.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mPrimaryNav>;

        r3 = virtualinvoke $r8.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getChildFragmentManager()>();

        $z0 = virtualinvoke r3.<androidx.fragment.app.FragmentManager: boolean popBackStackImmediate()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r9 = r0.<androidx.fragment.app.FragmentManager$PopBackStackState: androidx.fragment.app.FragmentManager this$0>;

        $r10 = r0.<androidx.fragment.app.FragmentManager$PopBackStackState: java.lang.String mName>;

        $i1 = r0.<androidx.fragment.app.FragmentManager$PopBackStackState: int mId>;

        $i2 = r0.<androidx.fragment.app.FragmentManager$PopBackStackState: int mFlags>;

        $z1 = virtualinvoke $r9.<androidx.fragment.app.FragmentManager: boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int)>(r1, r2, $r10, $i1, $i2);

        return $z1;
    }

androidx.fragment.app.FragmentManager$RestoreBackStackState
<androidx.fragment.app.FragmentManager$RestoreBackStackState: java.lang.String mName>
<androidx.fragment.app.FragmentManager$RestoreBackStackState: androidx.fragment.app.FragmentManager this$0>
    void <init>(androidx.fragment.app.FragmentManager, java.lang.String)
    {
        androidx.fragment.app.FragmentManager$RestoreBackStackState r0;
        androidx.fragment.app.FragmentManager r1;
        java.lang.String r2;

        r0 := @this: androidx.fragment.app.FragmentManager$RestoreBackStackState;

        r1 := @parameter0: androidx.fragment.app.FragmentManager;

        r2 := @parameter1: java.lang.String;

        r0.<androidx.fragment.app.FragmentManager$RestoreBackStackState: androidx.fragment.app.FragmentManager this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.fragment.app.FragmentManager$RestoreBackStackState: java.lang.String mName> = r2;

        return;
    }

    public boolean generateOps(java.util.ArrayList, java.util.ArrayList)
    {
        androidx.fragment.app.FragmentManager$RestoreBackStackState r0;
        java.util.ArrayList r1, r2;
        java.lang.String $r3;
        androidx.fragment.app.FragmentManager $r4;
        boolean $z0;

        r0 := @this: androidx.fragment.app.FragmentManager$RestoreBackStackState;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: java.util.ArrayList;

        $r4 = r0.<androidx.fragment.app.FragmentManager$RestoreBackStackState: androidx.fragment.app.FragmentManager this$0>;

        $r3 = r0.<androidx.fragment.app.FragmentManager$RestoreBackStackState: java.lang.String mName>;

        $z0 = virtualinvoke $r4.<androidx.fragment.app.FragmentManager: boolean restoreBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String)>(r1, r2, $r3);

        return $z0;
    }

androidx.fragment.app.FragmentManager$SaveBackStackState
<androidx.fragment.app.FragmentManager$SaveBackStackState: java.lang.String mName>
<androidx.fragment.app.FragmentManager$SaveBackStackState: androidx.fragment.app.FragmentManager this$0>
    void <init>(androidx.fragment.app.FragmentManager, java.lang.String)
    {
        androidx.fragment.app.FragmentManager$SaveBackStackState r0;
        androidx.fragment.app.FragmentManager r1;
        java.lang.String r2;

        r0 := @this: androidx.fragment.app.FragmentManager$SaveBackStackState;

        r1 := @parameter0: androidx.fragment.app.FragmentManager;

        r2 := @parameter1: java.lang.String;

        r0.<androidx.fragment.app.FragmentManager$SaveBackStackState: androidx.fragment.app.FragmentManager this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.fragment.app.FragmentManager$SaveBackStackState: java.lang.String mName> = r2;

        return;
    }

    public boolean generateOps(java.util.ArrayList, java.util.ArrayList)
    {
        androidx.fragment.app.FragmentManager$SaveBackStackState r0;
        java.util.ArrayList r1, r2;
        java.lang.String $r3;
        androidx.fragment.app.FragmentManager $r4;
        boolean $z0;

        r0 := @this: androidx.fragment.app.FragmentManager$SaveBackStackState;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: java.util.ArrayList;

        $r4 = r0.<androidx.fragment.app.FragmentManager$SaveBackStackState: androidx.fragment.app.FragmentManager this$0>;

        $r3 = r0.<androidx.fragment.app.FragmentManager$SaveBackStackState: java.lang.String mName>;

        $z0 = virtualinvoke $r4.<androidx.fragment.app.FragmentManager: boolean saveBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String)>(r1, r2, $r3);

        return $z0;
    }

