androidx.room.compiler.processing.DeclarationCollectorKt
    public static final kotlin.sequences.Sequence collectFieldsIncludingPrivateSupers(androidx.room.compiler.processing.XTypeElement)
    {
        androidx.room.compiler.processing.XTypeElement r0;
        androidx.room.compiler.processing.DeclarationCollectorKt$collectFieldsIncludingPrivateSupers$1 $r1;
        kotlin.jvm.functions.Function2 $r2;
        kotlin.sequences.Sequence $r3;

        r0 := @parameter0: androidx.room.compiler.processing.XTypeElement;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "xTypeElement");

        $r1 = new androidx.room.compiler.processing.DeclarationCollectorKt$collectFieldsIncludingPrivateSupers$1;

        specialinvoke $r1.<androidx.room.compiler.processing.DeclarationCollectorKt$collectFieldsIncludingPrivateSupers$1: void <init>(androidx.room.compiler.processing.XTypeElement,kotlin.coroutines.Continuation)>(r0, null);

        $r2 = (kotlin.jvm.functions.Function2) $r1;

        $r3 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence sequence(kotlin.jvm.functions.Function2)>($r2);

        return $r3;
    }

    public static final kotlin.sequences.Sequence collectAllMethods(androidx.room.compiler.processing.XTypeElement)
    {
        androidx.room.compiler.processing.XTypeElement r0;
        androidx.room.compiler.processing.DeclarationCollectorKt$collectAllMethods$1 $r1;
        kotlin.jvm.functions.Function2 $r2;
        kotlin.sequences.Sequence $r3;

        r0 := @parameter0: androidx.room.compiler.processing.XTypeElement;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "xTypeElement");

        $r1 = new androidx.room.compiler.processing.DeclarationCollectorKt$collectAllMethods$1;

        specialinvoke $r1.<androidx.room.compiler.processing.DeclarationCollectorKt$collectAllMethods$1: void <init>(androidx.room.compiler.processing.XTypeElement,kotlin.coroutines.Continuation)>(r0, null);

        $r2 = (kotlin.jvm.functions.Function2) $r1;

        $r3 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence sequence(kotlin.jvm.functions.Function2)>($r2);

        return $r3;
    }

    private static final boolean isAccessibleFrom(androidx.room.compiler.processing.XMethodElement, java.lang.String)
    {
        androidx.room.compiler.processing.XMethodElement $r0;
        java.lang.String r1, $r4;
        boolean $z0, $z1, $z2, $z3;
        androidx.room.compiler.processing.XMemberContainer $r2;
        com.squareup.javapoet.ClassName $r3;

        $r0 := @parameter0: androidx.room.compiler.processing.XMethodElement;

        r1 := @parameter1: java.lang.String;

        $z0 = interfaceinvoke $r0.<androidx.room.compiler.processing.XMethodElement: boolean isPublic()>();

        if $z0 != 0 goto label1;

        $z1 = interfaceinvoke $r0.<androidx.room.compiler.processing.XMethodElement: boolean isProtected()>();

        if $z1 == 0 goto label2;

     label1:
        return 1;

     label2:
        $z2 = interfaceinvoke $r0.<androidx.room.compiler.processing.XMethodElement: boolean isPrivate()>();

        if $z2 == 0 goto label3;

        return 0;

     label3:
        $r2 = interfaceinvoke $r0.<androidx.room.compiler.processing.XMethodElement: androidx.room.compiler.processing.XMemberContainer getClosestMemberContainer()>();

        $r3 = interfaceinvoke $r2.<androidx.room.compiler.processing.XMemberContainer: com.squareup.javapoet.ClassName getClassName()>();

        $r4 = virtualinvoke $r3.<com.squareup.javapoet.ClassName: java.lang.String packageName()>();

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, $r4);

        return $z3;
    }

    private static final boolean isStaticInterfaceMethod(androidx.room.compiler.processing.XMethodElement)
    {
        androidx.room.compiler.processing.XMethodElement $r0;
        androidx.room.compiler.processing.XMemberContainer r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        androidx.room.compiler.processing.XTypeElement $r2;

        $r0 := @parameter0: androidx.room.compiler.processing.XMethodElement;

        $z0 = interfaceinvoke $r0.<androidx.room.compiler.processing.XMethodElement: boolean isStatic()>();

        if $z0 == 0 goto label6;

        r1 = interfaceinvoke $r0.<androidx.room.compiler.processing.XMethodElement: androidx.room.compiler.processing.XMemberContainer getEnclosingElement()>();

        $z1 = r1 instanceof androidx.room.compiler.processing.XTypeElement;

        if $z1 == 0 goto label1;

        $r2 = (androidx.room.compiler.processing.XTypeElement) r1;

        goto label2;

     label1:
        $r2 = null;

     label2:
        if $r2 == null goto label4;

        $z2 = interfaceinvoke $r2.<androidx.room.compiler.processing.XTypeElement: boolean isInterface()>();

        if $z2 != 1 goto label3;

        $z3 = 1;

        goto label5;

     label3:
        $z3 = 0;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        if $z3 == 0 goto label6;

        $z4 = 1;

        goto label7;

     label6:
        $z4 = 0;

     label7:
        return $z4;
    }

    public static final boolean access$isAccessibleFrom(androidx.room.compiler.processing.XMethodElement, java.lang.String)
    {
        androidx.room.compiler.processing.XMethodElement $r0;
        java.lang.String r1;
        boolean $z0;

        $r0 := @parameter0: androidx.room.compiler.processing.XMethodElement;

        r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <androidx.room.compiler.processing.DeclarationCollectorKt: boolean isAccessibleFrom(androidx.room.compiler.processing.XMethodElement,java.lang.String)>($r0, r1);

        return $z0;
    }

    public static final boolean access$isStaticInterfaceMethod(androidx.room.compiler.processing.XMethodElement)
    {
        androidx.room.compiler.processing.XMethodElement $r0;
        boolean $z0;

        $r0 := @parameter0: androidx.room.compiler.processing.XMethodElement;

        $z0 = staticinvoke <androidx.room.compiler.processing.DeclarationCollectorKt: boolean isStaticInterfaceMethod(androidx.room.compiler.processing.XMethodElement)>($r0);

        return $z0;
    }

