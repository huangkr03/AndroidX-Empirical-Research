androidx.camera.extensions.internal.AdvancedVendorExtender
<androidx.camera.extensions.internal.AdvancedVendorExtender: androidx.camera.extensions.internal.compat.workaround.ExtensionDisabledValidator mExtensionDisabledValidator>
<androidx.camera.extensions.internal.AdvancedVendorExtender: androidx.camera.extensions.impl.advanced.AdvancedExtenderImpl mAdvancedExtenderImpl>
<androidx.camera.extensions.internal.AdvancedVendorExtender: java.lang.String mCameraId>
<androidx.camera.extensions.internal.AdvancedVendorExtender: int mMode>
    public void <init>(int)
    {
        androidx.camera.extensions.internal.AdvancedVendorExtender r0;
        int i0;
        java.lang.Throwable r1, $r9;
        androidx.camera.extensions.internal.compat.workaround.ExtensionDisabledValidator $r2;
        androidx.camera.extensions.impl.advanced.AutoAdvancedExtenderImpl $r3;
        androidx.camera.extensions.impl.advanced.BeautyAdvancedExtenderImpl $r4;
        androidx.camera.extensions.impl.advanced.NightAdvancedExtenderImpl $r5;
        androidx.camera.extensions.impl.advanced.HdrAdvancedExtenderImpl $r6;
        androidx.camera.extensions.impl.advanced.BokehAdvancedExtenderImpl $r7;
        java.lang.IllegalArgumentException $r8, $r10;

        r0 := @this: androidx.camera.extensions.internal.AdvancedVendorExtender;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new androidx.camera.extensions.internal.compat.workaround.ExtensionDisabledValidator;

        specialinvoke $r2.<androidx.camera.extensions.internal.compat.workaround.ExtensionDisabledValidator: void <init>()>();

        r0.<androidx.camera.extensions.internal.AdvancedVendorExtender: androidx.camera.extensions.internal.compat.workaround.ExtensionDisabledValidator mExtensionDisabledValidator> = $r2;

        r0.<androidx.camera.extensions.internal.AdvancedVendorExtender: int mMode> = i0;

     label01:
        tableswitch(i0)
        {
            case 0: goto label07;
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            default: goto label07;
        };

     label02:
        $r7 = new androidx.camera.extensions.impl.advanced.BokehAdvancedExtenderImpl;

        specialinvoke $r7.<androidx.camera.extensions.impl.advanced.BokehAdvancedExtenderImpl: void <init>()>();

        r0.<androidx.camera.extensions.internal.AdvancedVendorExtender: androidx.camera.extensions.impl.advanced.AdvancedExtenderImpl mAdvancedExtenderImpl> = $r7;

        goto label08;

     label03:
        $r6 = new androidx.camera.extensions.impl.advanced.HdrAdvancedExtenderImpl;

        specialinvoke $r6.<androidx.camera.extensions.impl.advanced.HdrAdvancedExtenderImpl: void <init>()>();

        r0.<androidx.camera.extensions.internal.AdvancedVendorExtender: androidx.camera.extensions.impl.advanced.AdvancedExtenderImpl mAdvancedExtenderImpl> = $r6;

        goto label08;

     label04:
        $r5 = new androidx.camera.extensions.impl.advanced.NightAdvancedExtenderImpl;

        specialinvoke $r5.<androidx.camera.extensions.impl.advanced.NightAdvancedExtenderImpl: void <init>()>();

        r0.<androidx.camera.extensions.internal.AdvancedVendorExtender: androidx.camera.extensions.impl.advanced.AdvancedExtenderImpl mAdvancedExtenderImpl> = $r5;

        goto label08;

     label05:
        $r4 = new androidx.camera.extensions.impl.advanced.BeautyAdvancedExtenderImpl;

        specialinvoke $r4.<androidx.camera.extensions.impl.advanced.BeautyAdvancedExtenderImpl: void <init>()>();

        r0.<androidx.camera.extensions.internal.AdvancedVendorExtender: androidx.camera.extensions.impl.advanced.AdvancedExtenderImpl mAdvancedExtenderImpl> = $r4;

        goto label08;

     label06:
        $r3 = new androidx.camera.extensions.impl.advanced.AutoAdvancedExtenderImpl;

        specialinvoke $r3.<androidx.camera.extensions.impl.advanced.AutoAdvancedExtenderImpl: void <init>()>();

        r0.<androidx.camera.extensions.internal.AdvancedVendorExtender: androidx.camera.extensions.impl.advanced.AdvancedExtenderImpl mAdvancedExtenderImpl> = $r3;

        goto label08;

     label07:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Should not active ExtensionMode.NONE");

        throw $r8;

     label08:
        goto label10;

     label09:
        $r9 := @caughtexception;

        r1 = $r9;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("AdvancedExtenderImpl does not exist");

        throw $r10;

     label10:
        return;

        catch java.lang.NoClassDefFoundError from label01 to label08 with label09;
    }

    public void init(androidx.camera.core.CameraInfo)
    {
        androidx.camera.extensions.internal.AdvancedVendorExtender r0;
        androidx.camera.core.CameraInfo r1;
        java.util.Map r2;
        androidx.camera.camera2.interop.Camera2CameraInfo $r3, $r5;
        java.lang.String $r4, $r6;
        androidx.camera.extensions.impl.advanced.AdvancedExtenderImpl $r7;

        r0 := @this: androidx.camera.extensions.internal.AdvancedVendorExtender;

        r1 := @parameter0: androidx.camera.core.CameraInfo;

        $r3 = staticinvoke <androidx.camera.camera2.interop.Camera2CameraInfo: androidx.camera.camera2.interop.Camera2CameraInfo 'from'(androidx.camera.core.CameraInfo)>(r1);

        $r4 = virtualinvoke $r3.<androidx.camera.camera2.interop.Camera2CameraInfo: java.lang.String getCameraId()>();

        r0.<androidx.camera.extensions.internal.AdvancedVendorExtender: java.lang.String mCameraId> = $r4;

        $r5 = staticinvoke <androidx.camera.camera2.interop.Camera2CameraInfo: androidx.camera.camera2.interop.Camera2CameraInfo 'from'(androidx.camera.core.CameraInfo)>(r1);

        r2 = virtualinvoke $r5.<androidx.camera.camera2.interop.Camera2CameraInfo: java.util.Map getCameraCharacteristicsMap()>();

        $r7 = r0.<androidx.camera.extensions.internal.AdvancedVendorExtender: androidx.camera.extensions.impl.advanced.AdvancedExtenderImpl mAdvancedExtenderImpl>;

        $r6 = r0.<androidx.camera.extensions.internal.AdvancedVendorExtender: java.lang.String mCameraId>;

        interfaceinvoke $r7.<androidx.camera.extensions.impl.advanced.AdvancedExtenderImpl: void init(java.lang.String,java.util.Map)>($r6, r2);

        return;
    }

    public boolean isExtensionAvailable(java.lang.String, java.util.Map)
    {
        androidx.camera.extensions.internal.AdvancedVendorExtender r0;
        java.lang.String r1;
        java.util.Map r2;
        int $i0;
        androidx.camera.extensions.internal.compat.workaround.ExtensionDisabledValidator $r3;
        boolean $z0, $z1;
        androidx.camera.extensions.impl.advanced.AdvancedExtenderImpl $r4;

        r0 := @this: androidx.camera.extensions.internal.AdvancedVendorExtender;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Map;

        $r3 = r0.<androidx.camera.extensions.internal.AdvancedVendorExtender: androidx.camera.extensions.internal.compat.workaround.ExtensionDisabledValidator mExtensionDisabledValidator>;

        $i0 = r0.<androidx.camera.extensions.internal.AdvancedVendorExtender: int mMode>;

        $z0 = virtualinvoke $r3.<androidx.camera.extensions.internal.compat.workaround.ExtensionDisabledValidator: boolean shouldDisableExtension(java.lang.String,int)>(r1, $i0);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r4 = r0.<androidx.camera.extensions.internal.AdvancedVendorExtender: androidx.camera.extensions.impl.advanced.AdvancedExtenderImpl mAdvancedExtenderImpl>;

        $z1 = interfaceinvoke $r4.<androidx.camera.extensions.impl.advanced.AdvancedExtenderImpl: boolean isExtensionAvailable(java.lang.String,java.util.Map)>(r1, r2);

        return $z1;
    }

    public android.util.Range getEstimatedCaptureLatencyRange(android.util.Size)
    {
        androidx.camera.extensions.internal.AdvancedVendorExtender r0;
        android.util.Size r1;
        java.lang.String $r2, $r4;
        androidx.camera.extensions.impl.advanced.AdvancedExtenderImpl $r5;
        android.util.Range $r6;

        r0 := @this: androidx.camera.extensions.internal.AdvancedVendorExtender;

        r1 := @parameter0: android.util.Size;

        $r2 = r0.<androidx.camera.extensions.internal.AdvancedVendorExtender: java.lang.String mCameraId>;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r2, "VendorExtender#init() must be called first");

        $r5 = r0.<androidx.camera.extensions.internal.AdvancedVendorExtender: androidx.camera.extensions.impl.advanced.AdvancedExtenderImpl mAdvancedExtenderImpl>;

        $r4 = r0.<androidx.camera.extensions.internal.AdvancedVendorExtender: java.lang.String mCameraId>;

        $r6 = interfaceinvoke $r5.<androidx.camera.extensions.impl.advanced.AdvancedExtenderImpl: android.util.Range getEstimatedCaptureLatencyRange(java.lang.String,android.util.Size,int)>($r4, r1, 256);

        return $r6;
    }

    public java.util.List getSupportedPreviewOutputResolutions()
    {
        androidx.camera.extensions.internal.AdvancedVendorExtender r0;
        java.lang.String $r1, $r3;
        androidx.camera.extensions.impl.advanced.AdvancedExtenderImpl $r4;
        java.util.Map $r5;
        java.util.List $r6;

        r0 := @this: androidx.camera.extensions.internal.AdvancedVendorExtender;

        $r1 = r0.<androidx.camera.extensions.internal.AdvancedVendorExtender: java.lang.String mCameraId>;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "VendorExtender#init() must be called first");

        $r4 = r0.<androidx.camera.extensions.internal.AdvancedVendorExtender: androidx.camera.extensions.impl.advanced.AdvancedExtenderImpl mAdvancedExtenderImpl>;

        $r3 = r0.<androidx.camera.extensions.internal.AdvancedVendorExtender: java.lang.String mCameraId>;

        $r5 = interfaceinvoke $r4.<androidx.camera.extensions.impl.advanced.AdvancedExtenderImpl: java.util.Map getSupportedPreviewOutputResolutions(java.lang.String)>($r3);

        $r6 = specialinvoke r0.<androidx.camera.extensions.internal.AdvancedVendorExtender: java.util.List convertResolutionMapToList(java.util.Map)>($r5);

        return $r6;
    }

    public java.util.List getSupportedCaptureOutputResolutions()
    {
        androidx.camera.extensions.internal.AdvancedVendorExtender r0;
        java.lang.String $r1, $r3;
        androidx.camera.extensions.impl.advanced.AdvancedExtenderImpl $r4;
        java.util.Map $r5;
        java.util.List $r6;

        r0 := @this: androidx.camera.extensions.internal.AdvancedVendorExtender;

        $r1 = r0.<androidx.camera.extensions.internal.AdvancedVendorExtender: java.lang.String mCameraId>;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "VendorExtender#init() must be called first");

        $r4 = r0.<androidx.camera.extensions.internal.AdvancedVendorExtender: androidx.camera.extensions.impl.advanced.AdvancedExtenderImpl mAdvancedExtenderImpl>;

        $r3 = r0.<androidx.camera.extensions.internal.AdvancedVendorExtender: java.lang.String mCameraId>;

        $r5 = interfaceinvoke $r4.<androidx.camera.extensions.impl.advanced.AdvancedExtenderImpl: java.util.Map getSupportedCaptureOutputResolutions(java.lang.String)>($r3);

        $r6 = specialinvoke r0.<androidx.camera.extensions.internal.AdvancedVendorExtender: java.util.List convertResolutionMapToList(java.util.Map)>($r5);

        return $r6;
    }

    private java.util.List convertResolutionMapToList(java.util.Map)
    {
        androidx.camera.extensions.internal.AdvancedVendorExtender r0;
        java.util.Map r1;
        java.util.ArrayList r2, $r6;
        java.util.Iterator r3;
        java.lang.Integer r4;
        android.util.Size[] r5, $r11;
        java.util.Set $r7;
        boolean $z0;
        java.util.List $r8, $r12;
        java.lang.Object $r9, $r10;
        java.lang.Object[] $r13;
        android.util.Pair $r14;

        r0 := @this: androidx.camera.extensions.internal.AdvancedVendorExtender;

        r1 := @parameter0: java.util.Map;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r2 = $r6;

        $r7 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        r3 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.Integer) $r9;

        $r10 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        $r12 = (java.util.List) $r10;

        $r11 = newarray (android.util.Size)[0];

        $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11);

        r5 = (android.util.Size[]) $r13;

        $r14 = new android.util.Pair;

        specialinvoke $r14.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r4, r5);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r14);

        goto label1;

     label2:
        $r8 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r2);

        return $r8;
    }

    public android.util.Size[] getSupportedYuvAnalysisResolutions()
    {
        androidx.camera.extensions.internal.AdvancedVendorExtender r0;
        java.util.List r1;
        java.lang.String $r2, $r4;
        androidx.camera.extensions.impl.advanced.AdvancedExtenderImpl $r5;
        android.util.Size[] $r6, $r8;
        java.lang.Object[] $r7;

        r0 := @this: androidx.camera.extensions.internal.AdvancedVendorExtender;

        $r2 = r0.<androidx.camera.extensions.internal.AdvancedVendorExtender: java.lang.String mCameraId>;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r2, "VendorExtender#init() must be called first");

        $r5 = r0.<androidx.camera.extensions.internal.AdvancedVendorExtender: androidx.camera.extensions.impl.advanced.AdvancedExtenderImpl mAdvancedExtenderImpl>;

        $r4 = r0.<androidx.camera.extensions.internal.AdvancedVendorExtender: java.lang.String mCameraId>;

        r1 = interfaceinvoke $r5.<androidx.camera.extensions.impl.advanced.AdvancedExtenderImpl: java.util.List getSupportedYuvAnalysisResolutions(java.lang.String)>($r4);

        if r1 != null goto label1;

        $r8 = newarray (android.util.Size)[0];

        goto label2;

     label1:
        $r6 = newarray (android.util.Size)[0];

        $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r8 = (android.util.Size[]) $r7;

     label2:
        return $r8;
    }

    public androidx.camera.core.impl.SessionProcessor createSessionProcessor(android.content.Context)
    {
        androidx.camera.extensions.internal.AdvancedVendorExtender r0;
        android.content.Context r1;
        java.lang.String $r2;
        androidx.camera.extensions.internal.sessionprocessor.AdvancedSessionProcessor $r4;
        androidx.camera.extensions.impl.advanced.AdvancedExtenderImpl $r5;
        androidx.camera.extensions.impl.advanced.SessionProcessorImpl $r6;

        r0 := @this: androidx.camera.extensions.internal.AdvancedVendorExtender;

        r1 := @parameter0: android.content.Context;

        $r2 = r0.<androidx.camera.extensions.internal.AdvancedVendorExtender: java.lang.String mCameraId>;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r2, "VendorExtender#init() must be called first");

        $r4 = new androidx.camera.extensions.internal.sessionprocessor.AdvancedSessionProcessor;

        $r5 = r0.<androidx.camera.extensions.internal.AdvancedVendorExtender: androidx.camera.extensions.impl.advanced.AdvancedExtenderImpl mAdvancedExtenderImpl>;

        $r6 = interfaceinvoke $r5.<androidx.camera.extensions.impl.advanced.AdvancedExtenderImpl: androidx.camera.extensions.impl.advanced.SessionProcessorImpl createSessionProcessor()>();

        specialinvoke $r4.<androidx.camera.extensions.internal.sessionprocessor.AdvancedSessionProcessor: void <init>(androidx.camera.extensions.impl.advanced.SessionProcessorImpl,android.content.Context)>($r6, r1);

        return $r4;
    }

