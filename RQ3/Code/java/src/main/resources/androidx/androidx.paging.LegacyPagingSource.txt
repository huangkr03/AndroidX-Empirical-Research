androidx.paging.LegacyPagingSource
<androidx.paging.LegacyPagingSource: androidx.paging.LegacyPagingSource$Companion Companion>
<androidx.paging.LegacyPagingSource: kotlinx.coroutines.CoroutineDispatcher fetchDispatcher>
<androidx.paging.LegacyPagingSource: androidx.paging.DataSource dataSource>
<androidx.paging.LegacyPagingSource: int pageSize>
<androidx.paging.LegacyPagingSource: int PAGE_SIZE_NOT_SET>
    public void <init>(kotlinx.coroutines.CoroutineDispatcher, androidx.paging.DataSource)
    {
        androidx.paging.LegacyPagingSource r0, r3;
        kotlinx.coroutines.CoroutineDispatcher r1;
        androidx.paging.DataSource r2, $r5;
        androidx.paging.LegacyPagingSource$1 $r4;
        androidx.paging.DataSource$InvalidatedCallback $r6;
        androidx.paging.LegacyPagingSource$2 $r7;
        kotlin.jvm.functions.Function0 $r8;

        r0 := @this: androidx.paging.LegacyPagingSource;

        r1 := @parameter0: kotlinx.coroutines.CoroutineDispatcher;

        r2 := @parameter1: androidx.paging.DataSource;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "fetchDispatcher");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "dataSource");

        specialinvoke r0.<androidx.paging.PagingSource: void <init>()>();

        r0.<androidx.paging.LegacyPagingSource: kotlinx.coroutines.CoroutineDispatcher fetchDispatcher> = r1;

        r0.<androidx.paging.LegacyPagingSource: androidx.paging.DataSource dataSource> = r2;

        r0.<androidx.paging.LegacyPagingSource: int pageSize> = -2147483648;

        $r5 = r0.<androidx.paging.LegacyPagingSource: androidx.paging.DataSource dataSource>;

        r3 = r0;

        $r4 = new androidx.paging.LegacyPagingSource$1;

        specialinvoke $r4.<androidx.paging.LegacyPagingSource$1: void <init>(androidx.paging.LegacyPagingSource)>(r3);

        $r6 = (androidx.paging.DataSource$InvalidatedCallback) $r4;

        virtualinvoke $r5.<androidx.paging.DataSource: void addInvalidatedCallback(androidx.paging.DataSource$InvalidatedCallback)>($r6);

        $r7 = new androidx.paging.LegacyPagingSource$2;

        specialinvoke $r7.<androidx.paging.LegacyPagingSource$2: void <init>(androidx.paging.LegacyPagingSource)>(r0);

        $r8 = (kotlin.jvm.functions.Function0) $r7;

        virtualinvoke r0.<androidx.paging.LegacyPagingSource: void registerInvalidatedCallback(kotlin.jvm.functions.Function0)>($r8);

        return;
    }

    public final androidx.paging.DataSource getDataSource$paging_common()
    {
        androidx.paging.LegacyPagingSource r0;
        androidx.paging.DataSource $r1;

        r0 := @this: androidx.paging.LegacyPagingSource;

        $r1 = r0.<androidx.paging.LegacyPagingSource: androidx.paging.DataSource dataSource>;

        return $r1;
    }

    public final void setPageSize(int)
    {
        androidx.paging.LegacyPagingSource r0;
        int i0, $i1, $i2, $i3;
        boolean z0, z1, $z3, z4;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        java.lang.IllegalStateException $r5;
        java.lang.String $r6, r8;
        java.lang.Throwable $r7;

        r0 := @this: androidx.paging.LegacyPagingSource;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.paging.LegacyPagingSource: int pageSize>;

        if $i1 == -2147483648 goto label1;

        $i3 = r0.<androidx.paging.LegacyPagingSource: int pageSize>;

        if i0 != $i3 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        z0 = $z3;

        z1 = 0;

        z4 = 0;

        if z0 != 0 goto label4;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Page size is already set to ");

        $i2 = r0.<androidx.paging.LegacyPagingSource: int pageSize>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke r8.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        $r7 = (java.lang.Throwable) $r5;

        throw $r7;

     label4:
        r0.<androidx.paging.LegacyPagingSource: int pageSize> = i0;

        return;
    }

    private final int guessPageSize(androidx.paging.PagingSource$LoadParams)
    {
        androidx.paging.LegacyPagingSource r0;
        androidx.paging.PagingSource$LoadParams r1;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: androidx.paging.LegacyPagingSource;

        r1 := @parameter0: androidx.paging.PagingSource$LoadParams;

        $z0 = r1 instanceof androidx.paging.PagingSource$LoadParams$Refresh;

        if $z0 == 0 goto label1;

        $i1 = virtualinvoke r1.<androidx.paging.PagingSource$LoadParams: int getLoadSize()>();

        $i2 = $i1 % 3;

        if $i2 != 0 goto label1;

        $i3 = virtualinvoke r1.<androidx.paging.PagingSource$LoadParams: int getLoadSize()>();

        $i4 = $i3 / 3;

        return $i4;

     label1:
        $i0 = virtualinvoke r1.<androidx.paging.PagingSource$LoadParams: int getLoadSize()>();

        return $i0;
    }

    public java.lang.Object load(androidx.paging.PagingSource$LoadParams, kotlin.coroutines.Continuation)
    {
        androidx.paging.LegacyPagingSource r0;
        androidx.paging.PagingSource$LoadParams r1, r13;
        kotlin.coroutines.Continuation $r2;
        androidx.paging.LoadType r3, $r14;
        boolean z0, $z1, $z2, $z3, $z4;
        kotlin.NoWhenBranchMatchedException $r4;
        androidx.paging.DataSource$Params $r5, r16;
        java.lang.Object $r6, $r11;
        int $i0, $i1, $i2, $i3;
        kotlinx.coroutines.CoroutineDispatcher $r7;
        androidx.paging.LegacyPagingSource$load$2 $r8;
        kotlin.coroutines.CoroutineContext $r9;
        kotlin.jvm.functions.Function2 $r10;
        java.io.PrintStream $r12;
        java.lang.String r15;

        r0 := @this: androidx.paging.LegacyPagingSource;

        r1 := @parameter0: androidx.paging.PagingSource$LoadParams;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r13 = r1;

        $z1 = r13 instanceof androidx.paging.PagingSource$LoadParams$Refresh;

        if $z1 == 0 goto label1;

        $r14 = <androidx.paging.LoadType: androidx.paging.LoadType REFRESH>;

        goto label4;

     label1:
        $z2 = r13 instanceof androidx.paging.PagingSource$LoadParams$Append;

        if $z2 == 0 goto label2;

        $r14 = <androidx.paging.LoadType: androidx.paging.LoadType APPEND>;

        goto label4;

     label2:
        $z3 = r13 instanceof androidx.paging.PagingSource$LoadParams$Prepend;

        if $z3 == 0 goto label3;

        $r14 = <androidx.paging.LoadType: androidx.paging.LoadType PREPEND>;

        goto label4;

     label3:
        $r4 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r4.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r4;

     label4:
        r3 = $r14;

        $i3 = r0.<androidx.paging.LegacyPagingSource: int pageSize>;

        if $i3 != -2147483648 goto label5;

        r15 = "WARNING: pageSize on the LegacyPagingSource is not set.\nWhen using legacy DataSource / DataSourceFactory with Paging3, page size\nshould\'ve been set by the paging library but it is not set yet.\n\nIf you are seeing this message in tests where you are testing DataSource\nin isolation (without a Pager), it is expected and page size will be estimated\nbased on parameters.\n\nIf you are seeing this message despite using a Pager, please file a bug:\nhttps://issuetracker.google.com/issues/new?component=413106";

        z0 = 0;

        $r12 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.Object)>(r15);

        $i2 = specialinvoke r0.<androidx.paging.LegacyPagingSource: int guessPageSize(androidx.paging.PagingSource$LoadParams)>(r1);

        r0.<androidx.paging.LegacyPagingSource: int pageSize> = $i2;

     label5:
        $r5 = new androidx.paging.DataSource$Params;

        $r6 = virtualinvoke r1.<androidx.paging.PagingSource$LoadParams: java.lang.Object getKey()>();

        $i0 = virtualinvoke r1.<androidx.paging.PagingSource$LoadParams: int getLoadSize()>();

        $z4 = virtualinvoke r1.<androidx.paging.PagingSource$LoadParams: boolean getPlaceholdersEnabled()>();

        $i1 = r0.<androidx.paging.LegacyPagingSource: int pageSize>;

        specialinvoke $r5.<androidx.paging.DataSource$Params: void <init>(androidx.paging.LoadType,java.lang.Object,int,boolean,int)>(r3, $r6, $i0, $z4, $i1);

        r16 = $r5;

        $r7 = r0.<androidx.paging.LegacyPagingSource: kotlinx.coroutines.CoroutineDispatcher fetchDispatcher>;

        $r9 = (kotlin.coroutines.CoroutineContext) $r7;

        $r8 = new androidx.paging.LegacyPagingSource$load$2;

        specialinvoke $r8.<androidx.paging.LegacyPagingSource$load$2: void <init>(androidx.paging.LegacyPagingSource,androidx.paging.DataSource$Params,androidx.paging.PagingSource$LoadParams,kotlin.coroutines.Continuation)>(r0, r16, r1, null);

        $r10 = (kotlin.jvm.functions.Function2) $r8;

        $r11 = staticinvoke <kotlinx.coroutines.BuildersKt: java.lang.Object withContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r9, $r10, $r2);

        return $r11;
    }

    public java.lang.Object getRefreshKey(androidx.paging.PagingState)
    {
        androidx.paging.LegacyPagingSource r0;
        androidx.paging.PagingState r1, r24;
        androidx.paging.DataSource$KeyType r2;
        int i0, i1, i2, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, $i12, $i13, $i14;
        androidx.paging.PagingSource$LoadResult$Page r3, $r14, $r18;
        java.lang.Object r4, r5, $r13, $r17, $r22, $r25, r30, r31;
        androidx.paging.DataSource $r6, $r9;
        int[] $r7;
        java.lang.Number $r8, $r10;
        java.util.List $r11, $r12, $r15, $r16, $r19;
        kotlin.NoWhenBranchMatchedException $r20;
        java.lang.Integer r21, r23, $r26, $r27, r28, r29;
        boolean z2, z3, z5, z6, z7, z8, z9, z10;

        r0 := @this: androidx.paging.LegacyPagingSource;

        r1 := @parameter0: androidx.paging.PagingState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "state");

        $r6 = r0.<androidx.paging.LegacyPagingSource: androidx.paging.DataSource dataSource>;

        r2 = virtualinvoke $r6.<androidx.paging.DataSource: androidx.paging.DataSource$KeyType getType$paging_common()>();

        $r7 = <androidx.paging.LegacyPagingSource$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i4 = virtualinvoke r2.<androidx.paging.DataSource$KeyType: int ordinal()>();

        i0 = $r7[$i4];

        tableswitch(i0)
        {
            case 1: goto label01;
            case 2: goto label08;
            case 3: goto label09;
            default: goto label12;
        };

     label01:
        r21 = virtualinvoke r1.<androidx.paging.PagingState: java.lang.Integer getAnchorPosition()>();

        if r21 != null goto label02;

        $r22 = null;

        goto label13;

     label02:
        r23 = r21;

        z2 = 0;

        z3 = 0;

        $r10 = (java.lang.Number) r23;

        i9 = virtualinvoke $r10.<java.lang.Number: int intValue()>();

        r24 = r1;

        i10 = 0;

        $i5 = staticinvoke <androidx.paging.PagingState: int access$getLeadingPlaceholderCount$p(androidx.paging.PagingState)>(r24);

        i11 = i9 - $i5;

     label03:
        $r11 = virtualinvoke r24.<androidx.paging.PagingState: java.util.List getPages()>();

        $i6 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r11);

        if i10 >= $i6 goto label04;

        $r12 = virtualinvoke r24.<androidx.paging.PagingState: java.util.List getPages()>();

        $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(i10);

        $r14 = (androidx.paging.PagingSource$LoadResult$Page) $r13;

        $r15 = virtualinvoke $r14.<androidx.paging.PagingSource$LoadResult$Page: java.util.List getData()>();

        $i7 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r15);

        if i11 <= $i7 goto label04;

        $r16 = virtualinvoke r24.<androidx.paging.PagingState: java.util.List getPages()>();

        $r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(i10);

        $r18 = (androidx.paging.PagingSource$LoadResult$Page) $r17;

        $r19 = virtualinvoke $r18.<androidx.paging.PagingSource$LoadResult$Page: java.util.List getData()>();

        $i8 = interfaceinvoke $r19.<java.util.List: int size()>();

        i11 = i11 - $i8;

        i1 = i10;

        i10 = i1 + 1;

        goto label03;

     label04:
        i2 = i11;

        r3 = virtualinvoke r1.<androidx.paging.PagingState: androidx.paging.PagingSource$LoadResult$Page closestPageToPosition(int)>(i9);

        if r3 != null goto label05;

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        goto label07;

     label05:
        r4 = virtualinvoke r3.<androidx.paging.PagingSource$LoadResult$Page: java.lang.Object getPrevKey()>();

        if r4 != null goto label06;

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        goto label07;

     label06:
        $r25 = r4;

     label07:
        r5 = $r25;

        $r26 = (java.lang.Integer) r5;

        $i12 = virtualinvoke $r26.<java.lang.Integer: int intValue()>();

        $i13 = $i12 + i2;

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        $r22 = (java.lang.Object) $r27;

        goto label13;

     label08:
        $r22 = null;

        goto label13;

     label09:
        r28 = virtualinvoke r1.<androidx.paging.PagingState: java.lang.Integer getAnchorPosition()>();

        if r28 != null goto label10;

        $r22 = null;

        goto label13;

     label10:
        r29 = r28;

        z5 = 0;

        z6 = 0;

        $r8 = (java.lang.Number) r29;

        $i14 = virtualinvoke $r8.<java.lang.Number: int intValue()>();

        z7 = 0;

        r30 = virtualinvoke r1.<androidx.paging.PagingState: java.lang.Object closestItemToPosition(int)>($i14);

        if r30 != null goto label11;

        $r22 = null;

        goto label13;

     label11:
        r31 = r30;

        z8 = 0;

        z9 = 0;

        z10 = 0;

        $r9 = virtualinvoke r0.<androidx.paging.LegacyPagingSource: androidx.paging.DataSource getDataSource$paging_common()>();

        $r22 = virtualinvoke $r9.<androidx.paging.DataSource: java.lang.Object getKeyInternal$paging_common(java.lang.Object)>(r31);

        goto label13;

     label12:
        $r20 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r20.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r20;

     label13:
        return $r22;
    }

    public boolean getJumpingSupported()
    {
        androidx.paging.LegacyPagingSource r0;
        androidx.paging.DataSource $r1;
        androidx.paging.DataSource$KeyType $r2, $r3;
        boolean $z0;

        r0 := @this: androidx.paging.LegacyPagingSource;

        $r1 = r0.<androidx.paging.LegacyPagingSource: androidx.paging.DataSource dataSource>;

        $r2 = virtualinvoke $r1.<androidx.paging.DataSource: androidx.paging.DataSource$KeyType getType$paging_common()>();

        $r3 = <androidx.paging.DataSource$KeyType: androidx.paging.DataSource$KeyType POSITIONAL>;

        if $r2 != $r3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static void <clinit>()
    {
        androidx.paging.LegacyPagingSource$Companion $r0;

        $r0 = new androidx.paging.LegacyPagingSource$Companion;

        specialinvoke $r0.<androidx.paging.LegacyPagingSource$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.paging.LegacyPagingSource: androidx.paging.LegacyPagingSource$Companion Companion> = $r0;

        return;
    }

androidx.paging.LegacyPagingSource$1
<androidx.paging.LegacyPagingSource$1: androidx.paging.LegacyPagingSource $tmp0>
    void <init>(androidx.paging.LegacyPagingSource)
    {
        androidx.paging.LegacyPagingSource$1 r0;
        androidx.paging.LegacyPagingSource $r1;

        r0 := @this: androidx.paging.LegacyPagingSource$1;

        $r1 := @parameter0: androidx.paging.LegacyPagingSource;

        r0.<androidx.paging.LegacyPagingSource$1: androidx.paging.LegacyPagingSource $tmp0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final void onInvalidated()
    {
        androidx.paging.LegacyPagingSource$1 r0;
        androidx.paging.LegacyPagingSource $r1;

        r0 := @this: androidx.paging.LegacyPagingSource$1;

        $r1 = r0.<androidx.paging.LegacyPagingSource$1: androidx.paging.LegacyPagingSource $tmp0>;

        virtualinvoke $r1.<androidx.paging.LegacyPagingSource: void invalidate()>();

        return;
    }

    public final kotlin.Function getFunctionDelegate()
    {
        androidx.paging.LegacyPagingSource$1 r0;
        kotlin.jvm.internal.FunctionReferenceImpl $r1;
        androidx.paging.LegacyPagingSource $r2;
        kotlin.Function $r3;

        r0 := @this: androidx.paging.LegacyPagingSource$1;

        $r1 = new kotlin.jvm.internal.FunctionReferenceImpl;

        $r2 = r0.<androidx.paging.LegacyPagingSource$1: androidx.paging.LegacyPagingSource $tmp0>;

        specialinvoke $r1.<kotlin.jvm.internal.FunctionReferenceImpl: void <init>(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)>(0, $r2, class "Landroidx/paging/LegacyPagingSource;", "invalidate", "invalidate()V", 0);

        $r3 = (kotlin.Function) $r1;

        return $r3;
    }

    public final boolean equals(java.lang.Object)
    {
        androidx.paging.LegacyPagingSource$1 r0;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        kotlin.Function $r2, $r4;
        kotlin.jvm.internal.FunctionAdapter $r3;

        r0 := @this: androidx.paging.LegacyPagingSource$1;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof androidx.paging.DataSource$InvalidatedCallback;

        if $z0 == 0 goto label2;

        $z1 = r1 instanceof kotlin.jvm.internal.FunctionAdapter;

        if $z1 == 0 goto label1;

        $r2 = virtualinvoke r0.<androidx.paging.LegacyPagingSource$1: kotlin.Function getFunctionDelegate()>();

        $r3 = (kotlin.jvm.internal.FunctionAdapter) r1;

        $r4 = interfaceinvoke $r3.<kotlin.jvm.internal.FunctionAdapter: kotlin.Function getFunctionDelegate()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r4);

        goto label3;

     label1:
        $z2 = 0;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public final int hashCode()
    {
        androidx.paging.LegacyPagingSource$1 r0;
        kotlin.Function $r1;
        int $i0;

        r0 := @this: androidx.paging.LegacyPagingSource$1;

        $r1 = virtualinvoke r0.<androidx.paging.LegacyPagingSource$1: kotlin.Function getFunctionDelegate()>();

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

androidx.paging.LegacyPagingSource$2$1
<androidx.paging.LegacyPagingSource$2$1: androidx.paging.LegacyPagingSource $tmp0>
    void <init>(androidx.paging.LegacyPagingSource)
    {
        androidx.paging.LegacyPagingSource$2$1 r0;
        androidx.paging.LegacyPagingSource $r1;

        r0 := @this: androidx.paging.LegacyPagingSource$2$1;

        $r1 := @parameter0: androidx.paging.LegacyPagingSource;

        r0.<androidx.paging.LegacyPagingSource$2$1: androidx.paging.LegacyPagingSource $tmp0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final void onInvalidated()
    {
        androidx.paging.LegacyPagingSource$2$1 r0;
        androidx.paging.LegacyPagingSource $r1;

        r0 := @this: androidx.paging.LegacyPagingSource$2$1;

        $r1 = r0.<androidx.paging.LegacyPagingSource$2$1: androidx.paging.LegacyPagingSource $tmp0>;

        virtualinvoke $r1.<androidx.paging.LegacyPagingSource: void invalidate()>();

        return;
    }

    public final kotlin.Function getFunctionDelegate()
    {
        androidx.paging.LegacyPagingSource$2$1 r0;
        kotlin.jvm.internal.FunctionReferenceImpl $r1;
        androidx.paging.LegacyPagingSource $r2;
        kotlin.Function $r3;

        r0 := @this: androidx.paging.LegacyPagingSource$2$1;

        $r1 = new kotlin.jvm.internal.FunctionReferenceImpl;

        $r2 = r0.<androidx.paging.LegacyPagingSource$2$1: androidx.paging.LegacyPagingSource $tmp0>;

        specialinvoke $r1.<kotlin.jvm.internal.FunctionReferenceImpl: void <init>(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)>(0, $r2, class "Landroidx/paging/LegacyPagingSource;", "invalidate", "invalidate()V", 0);

        $r3 = (kotlin.Function) $r1;

        return $r3;
    }

    public final boolean equals(java.lang.Object)
    {
        androidx.paging.LegacyPagingSource$2$1 r0;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        kotlin.Function $r2, $r4;
        kotlin.jvm.internal.FunctionAdapter $r3;

        r0 := @this: androidx.paging.LegacyPagingSource$2$1;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof androidx.paging.DataSource$InvalidatedCallback;

        if $z0 == 0 goto label2;

        $z1 = r1 instanceof kotlin.jvm.internal.FunctionAdapter;

        if $z1 == 0 goto label1;

        $r2 = virtualinvoke r0.<androidx.paging.LegacyPagingSource$2$1: kotlin.Function getFunctionDelegate()>();

        $r3 = (kotlin.jvm.internal.FunctionAdapter) r1;

        $r4 = interfaceinvoke $r3.<kotlin.jvm.internal.FunctionAdapter: kotlin.Function getFunctionDelegate()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r4);

        goto label3;

     label1:
        $z2 = 0;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public final int hashCode()
    {
        androidx.paging.LegacyPagingSource$2$1 r0;
        kotlin.Function $r1;
        int $i0;

        r0 := @this: androidx.paging.LegacyPagingSource$2$1;

        $r1 = virtualinvoke r0.<androidx.paging.LegacyPagingSource$2$1: kotlin.Function getFunctionDelegate()>();

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

androidx.paging.LegacyPagingSource$2
<androidx.paging.LegacyPagingSource$2: androidx.paging.LegacyPagingSource this$0>
    void <init>(androidx.paging.LegacyPagingSource)
    {
        androidx.paging.LegacyPagingSource$2 r0;
        androidx.paging.LegacyPagingSource $r1;

        r0 := @this: androidx.paging.LegacyPagingSource$2;

        $r1 := @parameter0: androidx.paging.LegacyPagingSource;

        r0.<androidx.paging.LegacyPagingSource$2: androidx.paging.LegacyPagingSource this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.paging.LegacyPagingSource$2 r0;
        androidx.paging.LegacyPagingSource r1, $r2, $r6;
        androidx.paging.DataSource $r3, $r7;
        androidx.paging.LegacyPagingSource$2$1 $r4;
        androidx.paging.DataSource$InvalidatedCallback $r5;

        r0 := @this: androidx.paging.LegacyPagingSource$2;

        $r2 = r0.<androidx.paging.LegacyPagingSource$2: androidx.paging.LegacyPagingSource this$0>;

        $r3 = virtualinvoke $r2.<androidx.paging.LegacyPagingSource: androidx.paging.DataSource getDataSource$paging_common()>();

        r1 = r0.<androidx.paging.LegacyPagingSource$2: androidx.paging.LegacyPagingSource this$0>;

        $r4 = new androidx.paging.LegacyPagingSource$2$1;

        specialinvoke $r4.<androidx.paging.LegacyPagingSource$2$1: void <init>(androidx.paging.LegacyPagingSource)>(r1);

        $r5 = (androidx.paging.DataSource$InvalidatedCallback) $r4;

        virtualinvoke $r3.<androidx.paging.DataSource: void removeInvalidatedCallback(androidx.paging.DataSource$InvalidatedCallback)>($r5);

        $r6 = r0.<androidx.paging.LegacyPagingSource$2: androidx.paging.LegacyPagingSource this$0>;

        $r7 = virtualinvoke $r6.<androidx.paging.LegacyPagingSource: androidx.paging.DataSource getDataSource$paging_common()>();

        virtualinvoke $r7.<androidx.paging.DataSource: void invalidate()>();

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.paging.LegacyPagingSource$2 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.paging.LegacyPagingSource$2;

        virtualinvoke r0.<androidx.paging.LegacyPagingSource$2: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.paging.LegacyPagingSource$Companion
    private void <init>()
    {
        androidx.paging.LegacyPagingSource$Companion r0;

        r0 := @this: androidx.paging.LegacyPagingSource$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.paging.LegacyPagingSource$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.paging.LegacyPagingSource$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.paging.LegacyPagingSource$Companion: void <init>()>();

        return;
    }

androidx.paging.LegacyPagingSource$load$2
<androidx.paging.LegacyPagingSource$load$2: int label>
<androidx.paging.LegacyPagingSource$load$2: androidx.paging.LegacyPagingSource this$0>
<androidx.paging.LegacyPagingSource$load$2: androidx.paging.DataSource$Params $dataSourceParams>
<androidx.paging.LegacyPagingSource$load$2: androidx.paging.PagingSource$LoadParams $params>
    void <init>(androidx.paging.LegacyPagingSource, androidx.paging.DataSource$Params, androidx.paging.PagingSource$LoadParams, kotlin.coroutines.Continuation)
    {
        androidx.paging.LegacyPagingSource$load$2 r0;
        androidx.paging.LegacyPagingSource $r1;
        androidx.paging.DataSource$Params $r2;
        androidx.paging.PagingSource$LoadParams $r3;
        kotlin.coroutines.Continuation $r4;

        r0 := @this: androidx.paging.LegacyPagingSource$load$2;

        $r1 := @parameter0: androidx.paging.LegacyPagingSource;

        $r2 := @parameter1: androidx.paging.DataSource$Params;

        $r3 := @parameter2: androidx.paging.PagingSource$LoadParams;

        $r4 := @parameter3: kotlin.coroutines.Continuation;

        r0.<androidx.paging.LegacyPagingSource$load$2: androidx.paging.LegacyPagingSource this$0> = $r1;

        r0.<androidx.paging.LegacyPagingSource$load$2: androidx.paging.DataSource$Params $dataSourceParams> = $r2;

        r0.<androidx.paging.LegacyPagingSource$load$2: androidx.paging.PagingSource$LoadParams $params> = $r3;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r4);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.paging.LegacyPagingSource$load$2 r0;
        java.lang.Object $r1, r2, r5, $r12, $r15, $r17;
        androidx.paging.PagingSource$LoadParams r3;
        androidx.paging.DataSource$BaseResult $r4;
        int $i0, $i1, $i2;
        java.util.List $r6, $r14, $r16;
        boolean $z0, $z1, $z2, $z3;
        androidx.paging.LegacyPagingSource $r7;
        androidx.paging.DataSource $r8;
        androidx.paging.DataSource$Params $r9;
        kotlin.coroutines.Continuation $r10;
        java.lang.IllegalStateException $r11;
        androidx.paging.PagingSource$LoadResult$Page $r13;

        r0 := @this: androidx.paging.LegacyPagingSource$load$2;

        $r1 := @parameter0: java.lang.Object;

        r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.paging.LegacyPagingSource$load$2: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label8;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r7 = r0.<androidx.paging.LegacyPagingSource$load$2: androidx.paging.LegacyPagingSource this$0>;

        $r8 = virtualinvoke $r7.<androidx.paging.LegacyPagingSource: androidx.paging.DataSource getDataSource$paging_common()>();

        $r9 = r0.<androidx.paging.LegacyPagingSource$load$2: androidx.paging.DataSource$Params $dataSourceParams>;

        $r10 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.paging.LegacyPagingSource$load$2: int label> = 1;

        $r12 = virtualinvoke $r8.<androidx.paging.DataSource: java.lang.Object load$paging_common(androidx.paging.DataSource$Params,kotlin.coroutines.Continuation)>($r9, $r10);

        if $r12 != r5 goto label3;

        return r5;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r12 = $r1;

     label3:
        r2 = $r12;

        r3 = r0.<androidx.paging.LegacyPagingSource$load$2: androidx.paging.PagingSource$LoadParams $params>;

        $r4 = (androidx.paging.DataSource$BaseResult) r2;

        $r13 = new androidx.paging.PagingSource$LoadResult$Page;

        $r14 = $r4.<androidx.paging.DataSource$BaseResult: java.util.List data>;

        $r6 = $r4.<androidx.paging.DataSource$BaseResult: java.util.List data>;

        $z0 = interfaceinvoke $r6.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label4;

        $z2 = r3 instanceof androidx.paging.PagingSource$LoadParams$Prepend;

        if $z2 == 0 goto label4;

        $r15 = null;

        goto label5;

     label4:
        $r15 = virtualinvoke $r4.<androidx.paging.DataSource$BaseResult: java.lang.Object getPrevKey()>();

     label5:
        $r16 = $r4.<androidx.paging.DataSource$BaseResult: java.util.List data>;

        $z3 = interfaceinvoke $r16.<java.util.List: boolean isEmpty()>();

        if $z3 == 0 goto label6;

        $z1 = r3 instanceof androidx.paging.PagingSource$LoadParams$Append;

        if $z1 == 0 goto label6;

        $r17 = null;

        goto label7;

     label6:
        $r17 = virtualinvoke $r4.<androidx.paging.DataSource$BaseResult: java.lang.Object getNextKey()>();

     label7:
        $i1 = virtualinvoke $r4.<androidx.paging.DataSource$BaseResult: int getItemsBefore()>();

        $i2 = virtualinvoke $r4.<androidx.paging.DataSource$BaseResult: int getItemsAfter()>();

        specialinvoke $r13.<androidx.paging.PagingSource$LoadResult$Page: void <init>(java.util.List,java.lang.Object,java.lang.Object,int,int)>($r14, $r15, $r17, $i1, $i2);

        return $r13;

     label8:
        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r11;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.paging.LegacyPagingSource$load$2 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r7;
        androidx.paging.PagingSource$LoadParams $r4;
        androidx.paging.DataSource$Params $r5;
        androidx.paging.LegacyPagingSource $r6;

        r0 := @this: androidx.paging.LegacyPagingSource$load$2;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.paging.LegacyPagingSource$load$2;

        $r6 = r0.<androidx.paging.LegacyPagingSource$load$2: androidx.paging.LegacyPagingSource this$0>;

        $r5 = r0.<androidx.paging.LegacyPagingSource$load$2: androidx.paging.DataSource$Params $dataSourceParams>;

        $r4 = r0.<androidx.paging.LegacyPagingSource$load$2: androidx.paging.PagingSource$LoadParams $params>;

        specialinvoke $r3.<androidx.paging.LegacyPagingSource$load$2: void <init>(androidx.paging.LegacyPagingSource,androidx.paging.DataSource$Params,androidx.paging.PagingSource$LoadParams,kotlin.coroutines.Continuation)>($r6, $r5, $r4, $r2);

        $r7 = (kotlin.coroutines.Continuation) $r3;

        return $r7;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.paging.LegacyPagingSource$load$2 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.paging.LegacyPagingSource$load$2;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.paging.LegacyPagingSource$load$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.paging.LegacyPagingSource$load$2) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.paging.LegacyPagingSource$load$2: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.paging.LegacyPagingSource$load$2 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.paging.LegacyPagingSource$load$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.paging.LegacyPagingSource$load$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.paging.LegacyPagingSource$WhenMappings
<androidx.paging.LegacyPagingSource$WhenMappings: int[] $EnumSwitchMapping$0>
    static void <clinit>()
    {
        int[] r0;
        androidx.paging.DataSource$KeyType[] $r1;
        int $i0, $i1, $i2, $i3;
        androidx.paging.DataSource$KeyType $r2, $r3, $r4;

        $r1 = staticinvoke <androidx.paging.DataSource$KeyType: androidx.paging.DataSource$KeyType[] values()>();

        $i0 = lengthof $r1;

        r0 = newarray (int)[$i0];

        $r2 = <androidx.paging.DataSource$KeyType: androidx.paging.DataSource$KeyType POSITIONAL>;

        $i1 = virtualinvoke $r2.<androidx.paging.DataSource$KeyType: int ordinal()>();

        r0[$i1] = 1;

        $r3 = <androidx.paging.DataSource$KeyType: androidx.paging.DataSource$KeyType PAGE_KEYED>;

        $i2 = virtualinvoke $r3.<androidx.paging.DataSource$KeyType: int ordinal()>();

        r0[$i2] = 2;

        $r4 = <androidx.paging.DataSource$KeyType: androidx.paging.DataSource$KeyType ITEM_KEYED>;

        $i3 = virtualinvoke $r4.<androidx.paging.DataSource$KeyType: int ordinal()>();

        r0[$i3] = 3;

        <androidx.paging.LegacyPagingSource$WhenMappings: int[] $EnumSwitchMapping$0> = r0;

        return;
    }

