androidx.ui.text.selection.SelectionMode
<androidx.ui.text.selection.SelectionMode: androidx.ui.text.selection.SelectionMode Vertical>
<androidx.ui.text.selection.SelectionMode: androidx.ui.text.selection.SelectionMode Horizontal>
<androidx.ui.text.selection.SelectionMode: androidx.ui.text.selection.SelectionMode[] $VALUES>
    private void <init>(java.lang.String, int)
    {
        androidx.ui.text.selection.SelectionMode r0;
        java.lang.String r1;
        int i0;

        r0 := @this: androidx.ui.text.selection.SelectionMode;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

<androidx.ui.text.selection.SelectionMode: boolean isSelected$ui_text_release(androidx.ui.geometry.Rect,androidx.ui.geometry.Offset,androidx.ui.geometry.Offset)>
<androidx.ui.text.selection.SelectionMode: boolean areHandlesCrossed$ui_text_release(androidx.ui.geometry.Rect,androidx.ui.geometry.Offset,androidx.ui.geometry.Offset)>
    public static final androidx.ui.text.selection.SelectionMode[] values()
    {
        androidx.ui.text.selection.SelectionMode[] r0, r1;
        int $i0, $i1;

        r0 = <androidx.ui.text.selection.SelectionMode: androidx.ui.text.selection.SelectionMode[] $VALUES>;

        $i0 = lengthof r0;

        r1 = newarray (androidx.ui.text.selection.SelectionMode)[$i0];

        $i1 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, $i1);

        return r1;
    }

    public static final androidx.ui.text.selection.SelectionMode valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.ui.text.selection.SelectionMode $r2;

        r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "value");

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/ui/text/selection/SelectionMode;", r0);

        $r2 = (androidx.ui.text.selection.SelectionMode) $r1;

        return $r2;
    }

    public void <init>(java.lang.String, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.ui.text.selection.SelectionMode r0;
        java.lang.String r1;
        int i0;
        kotlin.jvm.internal.DefaultConstructorMarker r2;

        r0 := @this: androidx.ui.text.selection.SelectionMode;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.ui.text.selection.SelectionMode: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public static final void <clinit>()
    {
        androidx.ui.text.selection.SelectionMode[] r0;
        androidx.ui.text.selection.SelectionMode$Vertical $r1;
        androidx.ui.text.selection.SelectionMode $r2, $r4, $r5, $r6;
        androidx.ui.text.selection.SelectionMode$Horizontal $r3;

        $r1 = new androidx.ui.text.selection.SelectionMode$Vertical;

        specialinvoke $r1.<androidx.ui.text.selection.SelectionMode$Vertical: void <init>(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>("Vertical", 0, null);

        $r2 = (androidx.ui.text.selection.SelectionMode) $r1;

        <androidx.ui.text.selection.SelectionMode: androidx.ui.text.selection.SelectionMode Vertical> = $r2;

        $r3 = new androidx.ui.text.selection.SelectionMode$Horizontal;

        specialinvoke $r3.<androidx.ui.text.selection.SelectionMode$Horizontal: void <init>(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>("Horizontal", 1, null);

        $r4 = (androidx.ui.text.selection.SelectionMode) $r3;

        <androidx.ui.text.selection.SelectionMode: androidx.ui.text.selection.SelectionMode Horizontal> = $r4;

        r0 = newarray (androidx.ui.text.selection.SelectionMode)[2];

        $r5 = <androidx.ui.text.selection.SelectionMode: androidx.ui.text.selection.SelectionMode Vertical>;

        r0[0] = $r5;

        $r6 = <androidx.ui.text.selection.SelectionMode: androidx.ui.text.selection.SelectionMode Horizontal>;

        r0[1] = $r6;

        <androidx.ui.text.selection.SelectionMode: androidx.ui.text.selection.SelectionMode[] $VALUES> = r0;

        return;
    }

androidx.ui.text.selection.SelectionMode$Horizontal
    void <init>(java.lang.String, int)
    {
        androidx.ui.text.selection.SelectionMode$Horizontal r0;
        java.lang.String r1;
        int i0;

        r0 := @this: androidx.ui.text.selection.SelectionMode$Horizontal;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<androidx.ui.text.selection.SelectionMode: void <init>(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, i0, null);

        return;
    }

    public boolean isSelected$ui_text_release(androidx.ui.geometry.Rect, androidx.ui.geometry.Offset, androidx.ui.geometry.Offset)
    {
        androidx.ui.text.selection.SelectionMode$Horizontal r0;
        androidx.ui.geometry.Rect r1;
        androidx.ui.geometry.Offset r2, r3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        byte $b0, $b1, $b2, $b3, $b4, $b5;

        r0 := @this: androidx.ui.text.selection.SelectionMode$Horizontal;

        r1 := @parameter0: androidx.ui.geometry.Rect;

        r2 := @parameter1: androidx.ui.geometry.Offset;

        r3 := @parameter2: androidx.ui.geometry.Offset;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "bounds");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "start");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "end");

        $f0 = virtualinvoke r3.<androidx.ui.geometry.Offset: float getX()>();

        $f1 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getLeft()>();

        $b0 = $f0 cmpg $f1;

        if $b0 >= 0 goto label1;

        return 0;

     label1:
        $f2 = virtualinvoke r3.<androidx.ui.geometry.Offset: float getY()>();

        $f3 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getTop()>();

        $b1 = $f2 cmpg $f3;

        if $b1 >= 0 goto label2;

        $f10 = virtualinvoke r3.<androidx.ui.geometry.Offset: float getX()>();

        $f11 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getRight()>();

        $b5 = $f10 cmpg $f11;

        if $b5 >= 0 goto label2;

        return 0;

     label2:
        $f4 = virtualinvoke r2.<androidx.ui.geometry.Offset: float getX()>();

        $f5 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getRight()>();

        $b2 = $f4 cmpl $f5;

        if $b2 < 0 goto label3;

        return 0;

     label3:
        $f6 = virtualinvoke r2.<androidx.ui.geometry.Offset: float getY()>();

        $f7 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getBottom()>();

        $b3 = $f6 cmpl $f7;

        if $b3 < 0 goto label4;

        $f8 = virtualinvoke r2.<androidx.ui.geometry.Offset: float getX()>();

        $f9 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getLeft()>();

        $b4 = $f8 cmpl $f9;

        if $b4 < 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    public boolean areHandlesCrossed$ui_text_release(androidx.ui.geometry.Rect, androidx.ui.geometry.Offset, androidx.ui.geometry.Offset)
    {
        androidx.ui.text.selection.SelectionMode$Horizontal r0;
        androidx.ui.geometry.Rect r1;
        androidx.ui.geometry.Offset r2, r3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        byte $b0, $b1, $b2, $b3, $b4, $b5;
        boolean $z0, $z1;

        r0 := @this: androidx.ui.text.selection.SelectionMode$Horizontal;

        r1 := @parameter0: androidx.ui.geometry.Rect;

        r2 := @parameter1: androidx.ui.geometry.Offset;

        r3 := @parameter2: androidx.ui.geometry.Offset;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "bounds");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "start");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "end");

        $f0 = virtualinvoke r2.<androidx.ui.geometry.Offset: float getX()>();

        $f1 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getLeft()>();

        $b0 = $f0 cmpl $f1;

        if $b0 < 0 goto label3;

        $f2 = virtualinvoke r2.<androidx.ui.geometry.Offset: float getX()>();

        $f3 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getRight()>();

        $b1 = $f2 cmpg $f3;

        if $b1 >= 0 goto label3;

        $f4 = virtualinvoke r3.<androidx.ui.geometry.Offset: float getX()>();

        $f5 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getLeft()>();

        $b2 = $f4 cmpl $f5;

        if $b2 < 0 goto label3;

        $f6 = virtualinvoke r3.<androidx.ui.geometry.Offset: float getX()>();

        $f7 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getRight()>();

        $b3 = $f6 cmpg $f7;

        if $b3 >= 0 goto label3;

        $f8 = virtualinvoke r2.<androidx.ui.geometry.Offset: float getY()>();

        $f9 = virtualinvoke r3.<androidx.ui.geometry.Offset: float getY()>();

        $b4 = $f8 cmpl $f9;

        if $b4 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;

     label3:
        $f10 = virtualinvoke r2.<androidx.ui.geometry.Offset: float getX()>();

        $f11 = virtualinvoke r3.<androidx.ui.geometry.Offset: float getX()>();

        $b5 = $f10 cmpl $f11;

        if $b5 <= 0 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        return $z1;
    }

    public void <init>(java.lang.String, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.ui.text.selection.SelectionMode$Horizontal r0;
        java.lang.String r1;
        int i0;
        kotlin.jvm.internal.DefaultConstructorMarker r2;

        r0 := @this: androidx.ui.text.selection.SelectionMode$Horizontal;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.ui.text.selection.SelectionMode$Horizontal: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

androidx.ui.text.selection.SelectionMode$Vertical
    void <init>(java.lang.String, int)
    {
        androidx.ui.text.selection.SelectionMode$Vertical r0;
        java.lang.String r1;
        int i0;

        r0 := @this: androidx.ui.text.selection.SelectionMode$Vertical;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<androidx.ui.text.selection.SelectionMode: void <init>(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, i0, null);

        return;
    }

    public boolean isSelected$ui_text_release(androidx.ui.geometry.Rect, androidx.ui.geometry.Offset, androidx.ui.geometry.Offset)
    {
        androidx.ui.text.selection.SelectionMode$Vertical r0;
        androidx.ui.geometry.Rect r1;
        androidx.ui.geometry.Offset r2, r3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        byte $b0, $b1, $b2, $b3, $b4, $b5;

        r0 := @this: androidx.ui.text.selection.SelectionMode$Vertical;

        r1 := @parameter0: androidx.ui.geometry.Rect;

        r2 := @parameter1: androidx.ui.geometry.Offset;

        r3 := @parameter2: androidx.ui.geometry.Offset;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "bounds");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "start");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "end");

        $f0 = virtualinvoke r3.<androidx.ui.geometry.Offset: float getY()>();

        $f1 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getTop()>();

        $b0 = $f0 cmpg $f1;

        if $b0 >= 0 goto label1;

        return 0;

     label1:
        $f2 = virtualinvoke r3.<androidx.ui.geometry.Offset: float getX()>();

        $f3 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getLeft()>();

        $b1 = $f2 cmpg $f3;

        if $b1 >= 0 goto label2;

        $f10 = virtualinvoke r3.<androidx.ui.geometry.Offset: float getY()>();

        $f11 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getBottom()>();

        $b5 = $f10 cmpg $f11;

        if $b5 >= 0 goto label2;

        return 0;

     label2:
        $f4 = virtualinvoke r2.<androidx.ui.geometry.Offset: float getY()>();

        $f5 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getBottom()>();

        $b2 = $f4 cmpl $f5;

        if $b2 < 0 goto label3;

        return 0;

     label3:
        $f6 = virtualinvoke r2.<androidx.ui.geometry.Offset: float getX()>();

        $f7 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getRight()>();

        $b3 = $f6 cmpl $f7;

        if $b3 < 0 goto label4;

        $f8 = virtualinvoke r2.<androidx.ui.geometry.Offset: float getY()>();

        $f9 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getTop()>();

        $b4 = $f8 cmpl $f9;

        if $b4 < 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    public boolean areHandlesCrossed$ui_text_release(androidx.ui.geometry.Rect, androidx.ui.geometry.Offset, androidx.ui.geometry.Offset)
    {
        androidx.ui.text.selection.SelectionMode$Vertical r0;
        androidx.ui.geometry.Rect r1;
        androidx.ui.geometry.Offset r2, r3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        byte $b0, $b1, $b2, $b3, $b4, $b5;
        boolean $z0, $z1;

        r0 := @this: androidx.ui.text.selection.SelectionMode$Vertical;

        r1 := @parameter0: androidx.ui.geometry.Rect;

        r2 := @parameter1: androidx.ui.geometry.Offset;

        r3 := @parameter2: androidx.ui.geometry.Offset;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "bounds");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "start");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "end");

        $f0 = virtualinvoke r2.<androidx.ui.geometry.Offset: float getY()>();

        $f1 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getTop()>();

        $b0 = $f0 cmpl $f1;

        if $b0 < 0 goto label3;

        $f2 = virtualinvoke r2.<androidx.ui.geometry.Offset: float getY()>();

        $f3 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getBottom()>();

        $b1 = $f2 cmpg $f3;

        if $b1 >= 0 goto label3;

        $f4 = virtualinvoke r3.<androidx.ui.geometry.Offset: float getY()>();

        $f5 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getTop()>();

        $b2 = $f4 cmpl $f5;

        if $b2 < 0 goto label3;

        $f6 = virtualinvoke r3.<androidx.ui.geometry.Offset: float getY()>();

        $f7 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getBottom()>();

        $b3 = $f6 cmpg $f7;

        if $b3 >= 0 goto label3;

        $f8 = virtualinvoke r2.<androidx.ui.geometry.Offset: float getX()>();

        $f9 = virtualinvoke r3.<androidx.ui.geometry.Offset: float getX()>();

        $b4 = $f8 cmpl $f9;

        if $b4 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;

     label3:
        $f10 = virtualinvoke r2.<androidx.ui.geometry.Offset: float getY()>();

        $f11 = virtualinvoke r3.<androidx.ui.geometry.Offset: float getY()>();

        $b5 = $f10 cmpl $f11;

        if $b5 <= 0 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        return $z1;
    }

    public void <init>(java.lang.String, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.ui.text.selection.SelectionMode$Vertical r0;
        java.lang.String r1;
        int i0;
        kotlin.jvm.internal.DefaultConstructorMarker r2;

        r0 := @this: androidx.ui.text.selection.SelectionMode$Vertical;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.ui.text.selection.SelectionMode$Vertical: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

