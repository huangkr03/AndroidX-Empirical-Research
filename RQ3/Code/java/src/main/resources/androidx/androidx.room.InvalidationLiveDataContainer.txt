androidx.room.InvalidationLiveDataContainer
<androidx.room.InvalidationLiveDataContainer: androidx.room.RoomDatabase database>
<androidx.room.InvalidationLiveDataContainer: java.util.Set liveDataSet>
    public void <init>(androidx.room.RoomDatabase)
    {
        androidx.room.InvalidationLiveDataContainer r0;
        androidx.room.RoomDatabase r1;
        java.util.IdentityHashMap $r2;
        java.util.Map $r3;
        java.util.Set $r4;

        r0 := @this: androidx.room.InvalidationLiveDataContainer;

        r1 := @parameter0: androidx.room.RoomDatabase;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "database");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.room.InvalidationLiveDataContainer: androidx.room.RoomDatabase database> = r1;

        $r2 = new java.util.IdentityHashMap;

        specialinvoke $r2.<java.util.IdentityHashMap: void <init>()>();

        $r3 = (java.util.Map) $r2;

        $r4 = staticinvoke <java.util.Collections: java.util.Set newSetFromMap(java.util.Map)>($r3);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "newSetFromMap(IdentityHashMap())");

        r0.<androidx.room.InvalidationLiveDataContainer: java.util.Set liveDataSet> = $r4;

        return;
    }

    public final java.util.Set getLiveDataSet$room_runtime_release()
    {
        androidx.room.InvalidationLiveDataContainer r0;
        java.util.Set $r1;

        r0 := @this: androidx.room.InvalidationLiveDataContainer;

        $r1 = r0.<androidx.room.InvalidationLiveDataContainer: java.util.Set liveDataSet>;

        return $r1;
    }

    public final androidx.lifecycle.LiveData create(java.lang.String[], boolean, java.util.concurrent.Callable)
    {
        androidx.room.InvalidationLiveDataContainer r0;
        java.lang.String[] r1;
        boolean z0;
        java.util.concurrent.Callable r2;
        androidx.room.RoomTrackingLiveData $r3;
        androidx.room.RoomDatabase $r4;
        androidx.lifecycle.LiveData $r5;

        r0 := @this: androidx.room.InvalidationLiveDataContainer;

        r1 := @parameter0: java.lang.String[];

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.util.concurrent.Callable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "tableNames");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "computeFunction");

        $r3 = new androidx.room.RoomTrackingLiveData;

        $r4 = r0.<androidx.room.InvalidationLiveDataContainer: androidx.room.RoomDatabase database>;

        specialinvoke $r3.<androidx.room.RoomTrackingLiveData: void <init>(androidx.room.RoomDatabase,androidx.room.InvalidationLiveDataContainer,boolean,java.util.concurrent.Callable,java.lang.String[])>($r4, r0, z0, r2, r1);

        $r5 = (androidx.lifecycle.LiveData) $r3;

        return $r5;
    }

    public final void onActive(androidx.lifecycle.LiveData)
    {
        androidx.room.InvalidationLiveDataContainer r0;
        androidx.lifecycle.LiveData r1;
        java.util.Set $r2;

        r0 := @this: androidx.room.InvalidationLiveDataContainer;

        r1 := @parameter0: androidx.lifecycle.LiveData;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "liveData");

        $r2 = r0.<androidx.room.InvalidationLiveDataContainer: java.util.Set liveDataSet>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return;
    }

    public final void onInactive(androidx.lifecycle.LiveData)
    {
        androidx.room.InvalidationLiveDataContainer r0;
        androidx.lifecycle.LiveData r1;
        java.util.Set $r2;

        r0 := @this: androidx.room.InvalidationLiveDataContainer;

        r1 := @parameter0: androidx.lifecycle.LiveData;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "liveData");

        $r2 = r0.<androidx.room.InvalidationLiveDataContainer: java.util.Set liveDataSet>;

        interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>(r1);

        return;
    }

