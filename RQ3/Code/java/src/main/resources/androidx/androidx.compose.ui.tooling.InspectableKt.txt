androidx.compose.ui.tooling.InspectableKt
    public static final void Inspectable(androidx.compose.ui.tooling.CompositionDataRecord, kotlin.jvm.functions.Function2, androidx.compose.runtime.Composer, int)
    {
        androidx.compose.ui.tooling.CompositionDataRecord r0;
        kotlin.jvm.functions.Function2 r1, $r12;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i8, $i10;
        java.util.Set r2;
        androidx.compose.runtime.ProvidedValue[] r3;
        boolean $z0, $z2, $z3, $z4, $z5;
        androidx.compose.ui.tooling.CompositionDataRecordImpl $r4;
        androidx.compose.runtime.tooling.CompositionData $r5;
        androidx.compose.runtime.ProvidableCompositionLocal $r6, $r9;
        java.lang.Boolean $r7;
        androidx.compose.runtime.ProvidedValue $r8, $r10;
        androidx.compose.ui.tooling.InspectableKt$Inspectable$1 $r11;
        androidx.compose.runtime.Composer $r13, $r14;
        byte $b7, $b9;
        androidx.compose.runtime.ScopeUpdateScope $r15;

        r0 := @parameter0: androidx.compose.ui.tooling.CompositionDataRecord;

        r1 := @parameter1: kotlin.jvm.functions.Function2;

        $r13 := @parameter2: androidx.compose.runtime.Composer;

        $i0 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "compositionDataRecord");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "content");

        $r14 = interfaceinvoke $r13.<androidx.compose.runtime.Composer: androidx.compose.runtime.Composer startRestartGroup(int)>(-913922352);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r14, "C(Inspectable)60@2034L146:Inspectable.kt#hevd2p");

        $i6 = $i0;

        $i1 = $i0 & 14;

        if $i1 != 0 goto label03;

        $z5 = interfaceinvoke $r14.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>(r0);

        if $z5 == 0 goto label01;

        $b7 = 4;

        goto label02;

     label01:
        $b7 = 2;

     label02:
        $i6 = $i0 | $b7;

     label03:
        $i8 = $i0 & 112;

        if $i8 != 0 goto label06;

        $i4 = $i6;

        $z4 = interfaceinvoke $r14.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>(r1);

        if $z4 == 0 goto label04;

        $b9 = 32;

        goto label05;

     label04:
        $b9 = 16;

     label05:
        $i6 = $i4 | $b9;

     label06:
        $i10 = $i6 & 91;

        if $i10 != 18 goto label07;

        $z3 = interfaceinvoke $r14.<androidx.compose.runtime.Composer: boolean getSkipping()>();

        if $z3 != 0 goto label09;

     label07:
        $z0 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z0 == 0 goto label08;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(-913922352, $i6, -1, "androidx.compose.ui.tooling.Inspectable (Inspectable.kt:53)");

     label08:
        interfaceinvoke $r14.<androidx.compose.runtime.Composer: void collectParameterInformation()>();

        $r4 = (androidx.compose.ui.tooling.CompositionDataRecordImpl) r0;

        r2 = virtualinvoke $r4.<androidx.compose.ui.tooling.CompositionDataRecordImpl: java.util.Set getStore()>();

        $r5 = interfaceinvoke $r14.<androidx.compose.runtime.Composer: androidx.compose.runtime.tooling.CompositionData getCompositionData()>();

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r5);

        r3 = newarray (androidx.compose.runtime.ProvidedValue)[2];

        $r6 = staticinvoke <androidx.compose.ui.platform.InspectionModeKt: androidx.compose.runtime.ProvidableCompositionLocal getLocalInspectionMode()>();

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r8 = virtualinvoke $r6.<androidx.compose.runtime.ProvidableCompositionLocal: androidx.compose.runtime.ProvidedValue provides(java.lang.Object)>($r7);

        r3[0] = $r8;

        $r9 = staticinvoke <androidx.compose.runtime.tooling.InspectionTablesKt: androidx.compose.runtime.ProvidableCompositionLocal getLocalInspectionTables()>();

        $r10 = virtualinvoke $r9.<androidx.compose.runtime.ProvidableCompositionLocal: androidx.compose.runtime.ProvidedValue provides(java.lang.Object)>(r2);

        r3[1] = $r10;

        $i2 = 112 & $i6;

        $i3 = 8 | $i2;

        staticinvoke <androidx.compose.runtime.CompositionLocalKt: void CompositionLocalProvider(androidx.compose.runtime.ProvidedValue[],kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int)>(r3, r1, $r14, $i3);

        $z2 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z2 == 0 goto label10;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

        goto label10;

     label09:
        interfaceinvoke $r14.<androidx.compose.runtime.Composer: void skipToGroupEnd()>();

     label10:
        $r15 = interfaceinvoke $r14.<androidx.compose.runtime.Composer: androidx.compose.runtime.ScopeUpdateScope endRestartGroup()>();

        if $r15 != null goto label11;

        goto label12;

     label11:
        $r11 = new androidx.compose.ui.tooling.InspectableKt$Inspectable$1;

        specialinvoke $r11.<androidx.compose.ui.tooling.InspectableKt$Inspectable$1: void <init>(androidx.compose.ui.tooling.CompositionDataRecord,kotlin.jvm.functions.Function2,int)>(r0, r1, $i0);

        $r12 = (kotlin.jvm.functions.Function2) $r11;

        interfaceinvoke $r15.<androidx.compose.runtime.ScopeUpdateScope: void updateScope(kotlin.jvm.functions.Function2)>($r12);

     label12:
        return;
    }

    public static final void InInspectionModeOnly(kotlin.jvm.functions.Function2, androidx.compose.runtime.Composer, int)
    {
        kotlin.jvm.functions.Function2 r0, $r6;
        int $i0, $i1, $i2, $i4, $i6;
        androidx.compose.runtime.CompositionLocal r1;
        java.lang.Object r2;
        boolean $z2, $z3, $z4, $z5, $z6;
        androidx.compose.runtime.ProvidableCompositionLocal $r3;
        java.lang.Boolean $r4;
        androidx.compose.ui.tooling.InspectableKt$InInspectionModeOnly$1 $r5;
        java.lang.Integer $r7;
        androidx.compose.runtime.Composer $r9, $r10;
        byte $b5;
        androidx.compose.runtime.ScopeUpdateScope $r11;

        r0 := @parameter0: kotlin.jvm.functions.Function2;

        $r9 := @parameter1: androidx.compose.runtime.Composer;

        $i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "content");

        $r10 = interfaceinvoke $r9.<androidx.compose.runtime.Composer: androidx.compose.runtime.Composer startRestartGroup(int)>(-1456071021);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r10, "C(InInspectionModeOnly)75@2597L7,76@2616L9:Inspectable.kt#hevd2p");

        $i4 = $i0;

        $i1 = $i0 & 14;

        if $i1 != 0 goto label03;

        $z6 = interfaceinvoke $r10.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>(r0);

        if $z6 == 0 goto label01;

        $b5 = 4;

        goto label02;

     label01:
        $b5 = 2;

     label02:
        $i4 = $i0 | $b5;

     label03:
        $i6 = $i4 & 11;

        if $i6 != 2 goto label04;

        $z5 = interfaceinvoke $r10.<androidx.compose.runtime.Composer: boolean getSkipping()>();

        if $z5 != 0 goto label07;

     label04:
        $z2 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z2 == 0 goto label05;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(-1456071021, $i4, -1, "androidx.compose.ui.tooling.InInspectionModeOnly (Inspectable.kt:74)");

     label05:
        $r3 = staticinvoke <androidx.compose.ui.platform.InspectionModeKt: androidx.compose.runtime.ProvidableCompositionLocal getLocalInspectionMode()>();

        r1 = (androidx.compose.runtime.CompositionLocal) $r3;

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformationMarkerStart(androidx.compose.runtime.Composer,int,java.lang.String)>($r10, 2023513938, "C:CompositionLocal.kt#9igjgp");

        r2 = interfaceinvoke $r10.<androidx.compose.runtime.Composer: java.lang.Object consume(androidx.compose.runtime.CompositionLocal)>(r1);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformationMarkerEnd(androidx.compose.runtime.Composer)>($r10);

        $r4 = (java.lang.Boolean) r2;

        $z3 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z3 == 0 goto label06;

        $i2 = 14 & $i4;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r10, $r7);

     label06:
        $z4 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z4 == 0 goto label08;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

        goto label08;

     label07:
        interfaceinvoke $r10.<androidx.compose.runtime.Composer: void skipToGroupEnd()>();

     label08:
        $r11 = interfaceinvoke $r10.<androidx.compose.runtime.Composer: androidx.compose.runtime.ScopeUpdateScope endRestartGroup()>();

        if $r11 != null goto label09;

        goto label10;

     label09:
        $r5 = new androidx.compose.ui.tooling.InspectableKt$InInspectionModeOnly$1;

        specialinvoke $r5.<androidx.compose.ui.tooling.InspectableKt$InInspectionModeOnly$1: void <init>(kotlin.jvm.functions.Function2,int)>(r0, $i0);

        $r6 = (kotlin.jvm.functions.Function2) $r5;

        interfaceinvoke $r11.<androidx.compose.runtime.ScopeUpdateScope: void updateScope(kotlin.jvm.functions.Function2)>($r6);

     label10:
        return;
    }

