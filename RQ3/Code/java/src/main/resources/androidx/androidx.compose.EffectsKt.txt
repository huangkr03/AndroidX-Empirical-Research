androidx.compose.EffectsKt
<androidx.compose.EffectsKt: kotlin.jvm.functions.Function0 emptyDispose>
<androidx.compose.EffectsKt: kotlin.jvm.functions.Function1 emptyCommit>
    public static final void onActive(kotlin.jvm.functions.Function1, androidx.compose.Composer, int, int)
    {
        kotlin.jvm.functions.Function1 r0;
        androidx.compose.Composer $r1;
        int $i0, $i1, $i2, $i3, i4, $i6, $i7;
        boolean z2, $z4, $z5;
        androidx.compose.PostCommitScopeImpl r3, $r7, $r8;
        java.lang.Object r4, $r6, r11;
        androidx.compose.SlotTable$Companion $r5;
        androidx.compose.EffectsKt$onActive$2 $r9;
        kotlin.jvm.functions.Function3 $r10;
        byte $b5;
        androidx.compose.ScopeUpdateScope $r13;

        r0 := @parameter0: kotlin.jvm.functions.Function1;

        $r1 := @parameter1: androidx.compose.Composer;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "callback");

        virtualinvoke $r1.<androidx.compose.Composer: void startRestartGroup(int)>($i0);

        i4 = $i1;

        $i2 = $i1 & 6;

        if $i2 != 0 goto label03;

        $i3 = i4;

        $z5 = virtualinvoke $r1.<androidx.compose.Composer: boolean changed(java.lang.Object)>(r0);

        if $z5 == 0 goto label01;

        $b5 = 4;

        goto label02;

     label01:
        $b5 = 2;

     label02:
        i4 = $i3 | $b5;

     label03:
        $i6 = i4 & 3;

        $i7 = $i6 ^ 2;

        if $i7 != 0 goto label04;

        $z4 = virtualinvoke $r1.<androidx.compose.Composer: boolean getSkipping()>();

        if $z4 != 0 goto label07;

     label04:
        virtualinvoke $r1.<androidx.compose.Composer: void startReplaceableGroup(int)>(1336236532);

        z2 = 1;

        r11 = virtualinvoke $r1.<androidx.compose.Composer: java.lang.Object nextSlot()>();

        $r5 = <androidx.compose.SlotTable: androidx.compose.SlotTable$Companion Companion>;

        $r6 = virtualinvoke $r5.<androidx.compose.SlotTable$Companion: java.lang.Object getEMPTY()>();

        if r11 == $r6 goto label05;

        goto label06;

     label05:
        $r7 = new androidx.compose.PostCommitScopeImpl;

        specialinvoke $r7.<androidx.compose.PostCommitScopeImpl: void <init>(kotlin.jvm.functions.Function1)>(r0);

        r3 = $r7;

        virtualinvoke $r1.<androidx.compose.Composer: void updateValue(java.lang.Object)>(r3);

        r11 = r3;

     label06:
        r4 = r11;

        virtualinvoke $r1.<androidx.compose.Composer: void endReplaceableGroup()>();

        $r8 = (androidx.compose.PostCommitScopeImpl) r4;

        goto label08;

     label07:
        virtualinvoke $r1.<androidx.compose.Composer: void skipToGroupEnd()>();

     label08:
        $r13 = virtualinvoke $r1.<androidx.compose.Composer: androidx.compose.ScopeUpdateScope endRestartGroup()>();

        if $r13 != null goto label09;

        goto label10;

     label09:
        $r9 = new androidx.compose.EffectsKt$onActive$2;

        specialinvoke $r9.<androidx.compose.EffectsKt$onActive$2: void <init>(kotlin.jvm.functions.Function1,int)>(r0, $i1);

        $r10 = (kotlin.jvm.functions.Function3) $r9;

        interfaceinvoke $r13.<androidx.compose.ScopeUpdateScope: void updateScope(kotlin.jvm.functions.Function3)>($r10);

     label10:
        return;
    }

    public static final void onDispose(kotlin.jvm.functions.Function0, androidx.compose.Composer, int, int)
    {
        kotlin.jvm.functions.Function0 r0;
        androidx.compose.Composer $r1;
        int $i0, $i1, $i2, $i3, i4, $i6, $i7;
        boolean z2, z4, z5, $z7, $z8;
        androidx.compose.PreCommitScopeImpl r3, r4, r5, $r9, $r11;
        java.lang.Object r6, $r8, r14;
        androidx.compose.SlotTable$Companion $r7;
        kotlin.jvm.functions.Function1 $r10;
        androidx.compose.EffectsKt$onDispose$2 $r12;
        kotlin.jvm.functions.Function3 $r13;
        byte $b5;
        androidx.compose.ScopeUpdateScope $r16;

        r0 := @parameter0: kotlin.jvm.functions.Function0;

        $r1 := @parameter1: androidx.compose.Composer;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "callback");

        virtualinvoke $r1.<androidx.compose.Composer: void startRestartGroup(int)>($i0);

        i4 = $i1;

        $i2 = $i1 & 6;

        if $i2 != 0 goto label03;

        $i3 = i4;

        $z8 = virtualinvoke $r1.<androidx.compose.Composer: boolean changed(java.lang.Object)>(r0);

        if $z8 == 0 goto label01;

        $b5 = 4;

        goto label02;

     label01:
        $b5 = 2;

     label02:
        i4 = $i3 | $b5;

     label03:
        $i6 = i4 & 3;

        $i7 = $i6 ^ 2;

        if $i7 != 0 goto label04;

        $z7 = virtualinvoke $r1.<androidx.compose.Composer: boolean getSkipping()>();

        if $z7 != 0 goto label07;

     label04:
        virtualinvoke $r1.<androidx.compose.Composer: void startReplaceableGroup(int)>(414705092);

        z2 = 1;

        r14 = virtualinvoke $r1.<androidx.compose.Composer: java.lang.Object nextSlot()>();

        $r7 = <androidx.compose.SlotTable: androidx.compose.SlotTable$Companion Companion>;

        $r8 = virtualinvoke $r7.<androidx.compose.SlotTable$Companion: java.lang.Object getEMPTY()>();

        if r14 == $r8 goto label05;

        goto label06;

     label05:
        $r9 = new androidx.compose.PreCommitScopeImpl;

        $r10 = <androidx.compose.EffectsKt: kotlin.jvm.functions.Function1 emptyCommit>;

        specialinvoke $r9.<androidx.compose.PreCommitScopeImpl: void <init>(kotlin.jvm.functions.Function1)>($r10);

        r3 = $r9;

        z4 = 0;

        z5 = 0;

        r4 = r3;

        virtualinvoke r4.<androidx.compose.PreCommitScopeImpl: void setDisposeCallback$compose_runtime_release(kotlin.jvm.functions.Function0)>(r0);

        r5 = r3;

        virtualinvoke $r1.<androidx.compose.Composer: void updateValue(java.lang.Object)>(r5);

        r14 = r5;

     label06:
        r6 = r14;

        virtualinvoke $r1.<androidx.compose.Composer: void endReplaceableGroup()>();

        $r11 = (androidx.compose.PreCommitScopeImpl) r6;

        goto label08;

     label07:
        virtualinvoke $r1.<androidx.compose.Composer: void skipToGroupEnd()>();

     label08:
        $r16 = virtualinvoke $r1.<androidx.compose.Composer: androidx.compose.ScopeUpdateScope endRestartGroup()>();

        if $r16 != null goto label09;

        goto label10;

     label09:
        $r12 = new androidx.compose.EffectsKt$onDispose$2;

        specialinvoke $r12.<androidx.compose.EffectsKt$onDispose$2: void <init>(kotlin.jvm.functions.Function0,int)>(r0, $i1);

        $r13 = (kotlin.jvm.functions.Function3) $r12;

        interfaceinvoke $r16.<androidx.compose.ScopeUpdateScope: void updateScope(kotlin.jvm.functions.Function3)>($r13);

     label10:
        return;
    }

    public static final void onCommit(kotlin.jvm.functions.Function1, androidx.compose.Composer, int, int)
    {
        kotlin.jvm.functions.Function1 r0;
        androidx.compose.Composer $r1;
        int $i0, $i1;
        androidx.compose.PostCommitScopeImpl $r2;

        r0 := @parameter0: kotlin.jvm.functions.Function1;

        $r1 := @parameter1: androidx.compose.Composer;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "callback");

        virtualinvoke $r1.<androidx.compose.Composer: void startReplaceableGroup(int)>($i0);

        $r2 = new androidx.compose.PostCommitScopeImpl;

        specialinvoke $r2.<androidx.compose.PostCommitScopeImpl: void <init>(kotlin.jvm.functions.Function1)>(r0);

        virtualinvoke $r1.<androidx.compose.Composer: boolean changed(java.lang.Object)>($r2);

        virtualinvoke $r1.<androidx.compose.Composer: void endReplaceableGroup()>();

        return;
    }

    public static final void onCommit(java.lang.Object, kotlin.jvm.functions.Function1, androidx.compose.Composer, int, int)
    {
        java.lang.Object r0, r5, $r7, r12;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.Composer $r2;
        int $i0, $i1;
        boolean z1, $z3, $z4;
        androidx.compose.PostCommitScopeImpl r4, $r8, $r9;
        androidx.compose.SlotTable$Companion $r6;
        androidx.compose.EffectsKt$onCommit$2 $r10;
        kotlin.jvm.functions.Function3 $r11;
        androidx.compose.ScopeUpdateScope $r14;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 := @parameter2: androidx.compose.Composer;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "callback");

        virtualinvoke $r2.<androidx.compose.Composer: void startRestartGroup(int)>($i0);

        virtualinvoke $r2.<androidx.compose.Composer: void startReplaceableGroup(int)>(-846528908);

        $z3 = virtualinvoke $r2.<androidx.compose.Composer: boolean changed(java.lang.Object)>(r0);

        if $z3 != 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        z1 = $z4;

        r12 = virtualinvoke $r2.<androidx.compose.Composer: java.lang.Object nextSlot()>();

        $r6 = <androidx.compose.SlotTable: androidx.compose.SlotTable$Companion Companion>;

        $r7 = virtualinvoke $r6.<androidx.compose.SlotTable$Companion: java.lang.Object getEMPTY()>();

        if r12 == $r7 goto label3;

        if z1 != 0 goto label4;

     label3:
        $r8 = new androidx.compose.PostCommitScopeImpl;

        specialinvoke $r8.<androidx.compose.PostCommitScopeImpl: void <init>(kotlin.jvm.functions.Function1)>(r1);

        r4 = $r8;

        virtualinvoke $r2.<androidx.compose.Composer: void updateValue(java.lang.Object)>(r4);

        r12 = r4;

     label4:
        r5 = r12;

        virtualinvoke $r2.<androidx.compose.Composer: void endReplaceableGroup()>();

        $r9 = (androidx.compose.PostCommitScopeImpl) r5;

        $r14 = virtualinvoke $r2.<androidx.compose.Composer: androidx.compose.ScopeUpdateScope endRestartGroup()>();

        if $r14 != null goto label5;

        goto label6;

     label5:
        $r10 = new androidx.compose.EffectsKt$onCommit$2;

        specialinvoke $r10.<androidx.compose.EffectsKt$onCommit$2: void <init>(java.lang.Object,kotlin.jvm.functions.Function1,int)>(r0, r1, $i1);

        $r11 = (kotlin.jvm.functions.Function3) $r10;

        interfaceinvoke $r14.<androidx.compose.ScopeUpdateScope: void updateScope(kotlin.jvm.functions.Function3)>($r11);

     label6:
        return;
    }

    public static final void onCommit(java.lang.Object, java.lang.Object, kotlin.jvm.functions.Function1, androidx.compose.Composer, int, int)
    {
        java.lang.Object r0, r1, r6, r11, $r13;
        kotlin.jvm.functions.Function1 r2;
        androidx.compose.Composer $r3;
        int $i0, $i1;
        androidx.compose.PostCommitScopeImpl r5, $r7, $r8;
        boolean $z2, $z3, $z4, z5, $z6, z7;
        androidx.compose.EffectsKt$onCommit$4 $r9;
        kotlin.jvm.functions.Function3 $r10;
        androidx.compose.SlotTable$Companion $r12;
        androidx.compose.ScopeUpdateScope $r15;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: kotlin.jvm.functions.Function1;

        $r3 := @parameter3: androidx.compose.Composer;

        $i0 := @parameter4: int;

        $i1 := @parameter5: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "callback");

        virtualinvoke $r3.<androidx.compose.Composer: void startRestartGroup(int)>($i0);

        virtualinvoke $r3.<androidx.compose.Composer: void startReplaceableGroup(int)>(-846527844);

        $z2 = virtualinvoke $r3.<androidx.compose.Composer: boolean changed(java.lang.Object)>(r0);

        if $z2 != 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        z5 = $z4;

        $z3 = virtualinvoke $r3.<androidx.compose.Composer: boolean changed(java.lang.Object)>(r1);

        if $z3 != 0 goto label3;

        if z5 == 0 goto label3;

        $z6 = 1;

        goto label4;

     label3:
        $z6 = 0;

     label4:
        z7 = $z6;

        r11 = virtualinvoke $r3.<androidx.compose.Composer: java.lang.Object nextSlot()>();

        $r12 = <androidx.compose.SlotTable: androidx.compose.SlotTable$Companion Companion>;

        $r13 = virtualinvoke $r12.<androidx.compose.SlotTable$Companion: java.lang.Object getEMPTY()>();

        if r11 == $r13 goto label5;

        if z7 != 0 goto label6;

     label5:
        $r7 = new androidx.compose.PostCommitScopeImpl;

        specialinvoke $r7.<androidx.compose.PostCommitScopeImpl: void <init>(kotlin.jvm.functions.Function1)>(r2);

        r5 = $r7;

        virtualinvoke $r3.<androidx.compose.Composer: void updateValue(java.lang.Object)>(r5);

        r11 = r5;

     label6:
        r6 = r11;

        virtualinvoke $r3.<androidx.compose.Composer: void endReplaceableGroup()>();

        $r8 = (androidx.compose.PostCommitScopeImpl) r6;

        $r15 = virtualinvoke $r3.<androidx.compose.Composer: androidx.compose.ScopeUpdateScope endRestartGroup()>();

        if $r15 != null goto label7;

        goto label8;

     label7:
        $r9 = new androidx.compose.EffectsKt$onCommit$4;

        specialinvoke $r9.<androidx.compose.EffectsKt$onCommit$4: void <init>(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1,int)>(r0, r1, r2, $i1);

        $r10 = (kotlin.jvm.functions.Function3) $r9;

        interfaceinvoke $r15.<androidx.compose.ScopeUpdateScope: void updateScope(kotlin.jvm.functions.Function3)>($r10);

     label8:
        return;
    }

    public static final void onCommit(java.lang.Object[], kotlin.jvm.functions.Function1, androidx.compose.Composer, int, int)
    {
        java.lang.Object[] r0, r10, r11, r12;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.Composer $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        androidx.compose.PostCommitScopeImpl r3, $r6, $r7;
        androidx.compose.SlotTable$Companion $r4;
        java.lang.Object $r5, r13, r15, r17;
        androidx.compose.EffectsKt$onCommit$6 $r8;
        kotlin.jvm.functions.Function3 $r9;
        boolean $z2, z3, $z4;
        androidx.compose.ScopeUpdateScope r18;

        r0 := @parameter0: java.lang.Object[];

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 := @parameter2: androidx.compose.Composer;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "inputs");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "callback");

        virtualinvoke $r2.<androidx.compose.Composer: void startRestartGroup(int)>($i0);

        $i2 = lengthof r0;

        r10 = newarray (java.lang.Object)[$i2];

        $i3 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r10, 0, $i3);

        r11 = r10;

        virtualinvoke $r2.<androidx.compose.Composer: void startReplaceableGroup(int)>(-846526958);

        z3 = 1;

        r12 = r11;

        $i4 = 0;

        $i5 = lengthof r12;

     label1:
        if $i4 >= $i5 goto label4;

        r13 = r12[$i4];

        $i4 = $i4 + 1;

        $z2 = virtualinvoke $r2.<androidx.compose.Composer: boolean changed(java.lang.Object)>(r13);

        if $z2 != 0 goto label2;

        if z3 == 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        z3 = $z4;

        goto label1;

     label4:
        r15 = virtualinvoke $r2.<androidx.compose.Composer: java.lang.Object nextSlot()>();

        $r4 = <androidx.compose.SlotTable: androidx.compose.SlotTable$Companion Companion>;

        $r5 = virtualinvoke $r4.<androidx.compose.SlotTable$Companion: java.lang.Object getEMPTY()>();

        if r15 == $r5 goto label5;

        if z3 != 0 goto label6;

     label5:
        $r6 = new androidx.compose.PostCommitScopeImpl;

        specialinvoke $r6.<androidx.compose.PostCommitScopeImpl: void <init>(kotlin.jvm.functions.Function1)>(r1);

        r3 = $r6;

        virtualinvoke $r2.<androidx.compose.Composer: void updateValue(java.lang.Object)>(r3);

        r15 = r3;

     label6:
        r17 = r15;

        virtualinvoke $r2.<androidx.compose.Composer: void endReplaceableGroup()>();

        $r7 = (androidx.compose.PostCommitScopeImpl) r17;

        r18 = virtualinvoke $r2.<androidx.compose.Composer: androidx.compose.ScopeUpdateScope endRestartGroup()>();

        if r18 != null goto label7;

        goto label8;

     label7:
        $r8 = new androidx.compose.EffectsKt$onCommit$6;

        specialinvoke $r8.<androidx.compose.EffectsKt$onCommit$6: void <init>(java.lang.Object[],kotlin.jvm.functions.Function1,int)>(r0, r1, $i1);

        $r9 = (kotlin.jvm.functions.Function3) $r8;

        interfaceinvoke r18.<androidx.compose.ScopeUpdateScope: void updateScope(kotlin.jvm.functions.Function3)>($r9);

     label8:
        return;
    }

    public static final void onPreCommit(kotlin.jvm.functions.Function1, androidx.compose.Composer, int, int)
    {
        kotlin.jvm.functions.Function1 r0;
        androidx.compose.Composer $r1;
        int $i0, $i1;
        androidx.compose.PreCommitScopeImpl $r2;

        r0 := @parameter0: kotlin.jvm.functions.Function1;

        $r1 := @parameter1: androidx.compose.Composer;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "callback");

        virtualinvoke $r1.<androidx.compose.Composer: void startReplaceableGroup(int)>($i0);

        $r2 = new androidx.compose.PreCommitScopeImpl;

        specialinvoke $r2.<androidx.compose.PreCommitScopeImpl: void <init>(kotlin.jvm.functions.Function1)>(r0);

        virtualinvoke $r1.<androidx.compose.Composer: boolean changed(java.lang.Object)>($r2);

        virtualinvoke $r1.<androidx.compose.Composer: void endReplaceableGroup()>();

        return;
    }

    public static final void onPreCommit(java.lang.Object, kotlin.jvm.functions.Function1, androidx.compose.Composer, int, int)
    {
        java.lang.Object r0, r5, $r7, r12;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.Composer $r2;
        int $i0, $i1;
        boolean z1, $z3, $z4;
        androidx.compose.PreCommitScopeImpl r4, $r8, $r9;
        androidx.compose.SlotTable$Companion $r6;
        androidx.compose.EffectsKt$onPreCommit$2 $r10;
        kotlin.jvm.functions.Function3 $r11;
        androidx.compose.ScopeUpdateScope $r14;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 := @parameter2: androidx.compose.Composer;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "callback");

        virtualinvoke $r2.<androidx.compose.Composer: void startRestartGroup(int)>($i0);

        virtualinvoke $r2.<androidx.compose.Composer: void startReplaceableGroup(int)>(2027344902);

        $z3 = virtualinvoke $r2.<androidx.compose.Composer: boolean changed(java.lang.Object)>(r0);

        if $z3 != 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        z1 = $z4;

        r12 = virtualinvoke $r2.<androidx.compose.Composer: java.lang.Object nextSlot()>();

        $r6 = <androidx.compose.SlotTable: androidx.compose.SlotTable$Companion Companion>;

        $r7 = virtualinvoke $r6.<androidx.compose.SlotTable$Companion: java.lang.Object getEMPTY()>();

        if r12 == $r7 goto label3;

        if z1 != 0 goto label4;

     label3:
        $r8 = new androidx.compose.PreCommitScopeImpl;

        specialinvoke $r8.<androidx.compose.PreCommitScopeImpl: void <init>(kotlin.jvm.functions.Function1)>(r1);

        r4 = $r8;

        virtualinvoke $r2.<androidx.compose.Composer: void updateValue(java.lang.Object)>(r4);

        r12 = r4;

     label4:
        r5 = r12;

        virtualinvoke $r2.<androidx.compose.Composer: void endReplaceableGroup()>();

        $r9 = (androidx.compose.PreCommitScopeImpl) r5;

        $r14 = virtualinvoke $r2.<androidx.compose.Composer: androidx.compose.ScopeUpdateScope endRestartGroup()>();

        if $r14 != null goto label5;

        goto label6;

     label5:
        $r10 = new androidx.compose.EffectsKt$onPreCommit$2;

        specialinvoke $r10.<androidx.compose.EffectsKt$onPreCommit$2: void <init>(java.lang.Object,kotlin.jvm.functions.Function1,int)>(r0, r1, $i1);

        $r11 = (kotlin.jvm.functions.Function3) $r10;

        interfaceinvoke $r14.<androidx.compose.ScopeUpdateScope: void updateScope(kotlin.jvm.functions.Function3)>($r11);

     label6:
        return;
    }

    public static final void onPreCommit(java.lang.Object, java.lang.Object, kotlin.jvm.functions.Function1, androidx.compose.Composer, int, int)
    {
        java.lang.Object r0, r1, r6, r11, $r13;
        kotlin.jvm.functions.Function1 r2;
        androidx.compose.Composer $r3;
        int $i0, $i1;
        androidx.compose.PreCommitScopeImpl r5, $r7, $r8;
        boolean $z2, $z3, $z4, z5, $z6, z7;
        androidx.compose.EffectsKt$onPreCommit$4 $r9;
        kotlin.jvm.functions.Function3 $r10;
        androidx.compose.SlotTable$Companion $r12;
        androidx.compose.ScopeUpdateScope $r15;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: kotlin.jvm.functions.Function1;

        $r3 := @parameter3: androidx.compose.Composer;

        $i0 := @parameter4: int;

        $i1 := @parameter5: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "callback");

        virtualinvoke $r3.<androidx.compose.Composer: void startRestartGroup(int)>($i0);

        virtualinvoke $r3.<androidx.compose.Composer: void startReplaceableGroup(int)>(2027346133);

        $z2 = virtualinvoke $r3.<androidx.compose.Composer: boolean changed(java.lang.Object)>(r0);

        if $z2 != 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        z5 = $z4;

        $z3 = virtualinvoke $r3.<androidx.compose.Composer: boolean changed(java.lang.Object)>(r1);

        if $z3 != 0 goto label3;

        if z5 == 0 goto label3;

        $z6 = 1;

        goto label4;

     label3:
        $z6 = 0;

     label4:
        z7 = $z6;

        r11 = virtualinvoke $r3.<androidx.compose.Composer: java.lang.Object nextSlot()>();

        $r12 = <androidx.compose.SlotTable: androidx.compose.SlotTable$Companion Companion>;

        $r13 = virtualinvoke $r12.<androidx.compose.SlotTable$Companion: java.lang.Object getEMPTY()>();

        if r11 == $r13 goto label5;

        if z7 != 0 goto label6;

     label5:
        $r7 = new androidx.compose.PreCommitScopeImpl;

        specialinvoke $r7.<androidx.compose.PreCommitScopeImpl: void <init>(kotlin.jvm.functions.Function1)>(r2);

        r5 = $r7;

        virtualinvoke $r3.<androidx.compose.Composer: void updateValue(java.lang.Object)>(r5);

        r11 = r5;

     label6:
        r6 = r11;

        virtualinvoke $r3.<androidx.compose.Composer: void endReplaceableGroup()>();

        $r8 = (androidx.compose.PreCommitScopeImpl) r6;

        $r15 = virtualinvoke $r3.<androidx.compose.Composer: androidx.compose.ScopeUpdateScope endRestartGroup()>();

        if $r15 != null goto label7;

        goto label8;

     label7:
        $r9 = new androidx.compose.EffectsKt$onPreCommit$4;

        specialinvoke $r9.<androidx.compose.EffectsKt$onPreCommit$4: void <init>(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1,int)>(r0, r1, r2, $i1);

        $r10 = (kotlin.jvm.functions.Function3) $r9;

        interfaceinvoke $r15.<androidx.compose.ScopeUpdateScope: void updateScope(kotlin.jvm.functions.Function3)>($r10);

     label8:
        return;
    }

    public static final void onPreCommit(java.lang.Object[], kotlin.jvm.functions.Function1, androidx.compose.Composer, int, int)
    {
        java.lang.Object[] r0, r10, r11, r12;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.Composer $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        androidx.compose.PreCommitScopeImpl r3, $r6, $r7;
        androidx.compose.SlotTable$Companion $r4;
        java.lang.Object $r5, r13, r15, r17;
        androidx.compose.EffectsKt$onPreCommit$6 $r8;
        kotlin.jvm.functions.Function3 $r9;
        boolean $z2, z3, $z4;
        androidx.compose.ScopeUpdateScope r18;

        r0 := @parameter0: java.lang.Object[];

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 := @parameter2: androidx.compose.Composer;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "inputs");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "callback");

        virtualinvoke $r2.<androidx.compose.Composer: void startRestartGroup(int)>($i0);

        $i2 = lengthof r0;

        r10 = newarray (java.lang.Object)[$i2];

        $i3 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r10, 0, $i3);

        r11 = r10;

        virtualinvoke $r2.<androidx.compose.Composer: void startReplaceableGroup(int)>(2027347186);

        z3 = 1;

        r12 = r11;

        $i4 = 0;

        $i5 = lengthof r12;

     label1:
        if $i4 >= $i5 goto label4;

        r13 = r12[$i4];

        $i4 = $i4 + 1;

        $z2 = virtualinvoke $r2.<androidx.compose.Composer: boolean changed(java.lang.Object)>(r13);

        if $z2 != 0 goto label2;

        if z3 == 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        z3 = $z4;

        goto label1;

     label4:
        r15 = virtualinvoke $r2.<androidx.compose.Composer: java.lang.Object nextSlot()>();

        $r4 = <androidx.compose.SlotTable: androidx.compose.SlotTable$Companion Companion>;

        $r5 = virtualinvoke $r4.<androidx.compose.SlotTable$Companion: java.lang.Object getEMPTY()>();

        if r15 == $r5 goto label5;

        if z3 != 0 goto label6;

     label5:
        $r6 = new androidx.compose.PreCommitScopeImpl;

        specialinvoke $r6.<androidx.compose.PreCommitScopeImpl: void <init>(kotlin.jvm.functions.Function1)>(r1);

        r3 = $r6;

        virtualinvoke $r2.<androidx.compose.Composer: void updateValue(java.lang.Object)>(r3);

        r15 = r3;

     label6:
        r17 = r15;

        virtualinvoke $r2.<androidx.compose.Composer: void endReplaceableGroup()>();

        $r7 = (androidx.compose.PreCommitScopeImpl) r17;

        r18 = virtualinvoke $r2.<androidx.compose.Composer: androidx.compose.ScopeUpdateScope endRestartGroup()>();

        if r18 != null goto label7;

        goto label8;

     label7:
        $r8 = new androidx.compose.EffectsKt$onPreCommit$6;

        specialinvoke $r8.<androidx.compose.EffectsKt$onPreCommit$6: void <init>(java.lang.Object[],kotlin.jvm.functions.Function1,int)>(r0, r1, $i1);

        $r9 = (kotlin.jvm.functions.Function3) $r8;

        interfaceinvoke r18.<androidx.compose.ScopeUpdateScope: void updateScope(kotlin.jvm.functions.Function3)>($r9);

     label8:
        return;
    }

    public static final kotlin.jvm.functions.Function0 getInvalidate(androidx.compose.Composer, int, int)
    {
        androidx.compose.Composer $r0;
        int $i0, $i1;
        androidx.compose.RecomposeScope r1, r7;
        java.lang.String r2, $r5;
        boolean z0;
        androidx.compose.EffectsKt$invalidate$1 $r3;
        java.lang.IllegalStateException $r4;
        java.lang.Throwable $r6;
        kotlin.jvm.functions.Function0 r8;

        $r0 := @parameter0: androidx.compose.Composer;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        virtualinvoke $r0.<androidx.compose.Composer: void startReplaceableGroup(int)>($i0);

        r7 = virtualinvoke $r0.<androidx.compose.Composer: androidx.compose.RecomposeScope getCurrentRecomposeScope$compose_runtime_release()>();

        if r7 != null goto label1;

        r2 = "no recompose scope found";

        z0 = 0;

        $r4 = new java.lang.IllegalStateException;

        $r5 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        $r6 = (java.lang.Throwable) $r4;

        throw $r6;

     label1:
        r1 = r7;

        virtualinvoke r1.<androidx.compose.RecomposeScope: void setUsed(boolean)>(1);

        $r3 = new androidx.compose.EffectsKt$invalidate$1;

        specialinvoke $r3.<androidx.compose.EffectsKt$invalidate$1: void <init>(androidx.compose.RecomposeScope)>(r1);

        r8 = (kotlin.jvm.functions.Function0) $r3;

        virtualinvoke $r0.<androidx.compose.Composer: void endReplaceableGroup()>();

        return r8;
    }

    public static void getInvalidate$annotations()
    {
        return;
    }

    public static final androidx.compose.CompositionReference compositionReference(androidx.compose.Composer, int, int)
    {
        androidx.compose.Composer $r0;
        int $i0, $i1;
        androidx.compose.CompositionReference r1;

        $r0 := @parameter0: androidx.compose.Composer;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        virtualinvoke $r0.<androidx.compose.Composer: void startReplaceableGroup(int)>($i0);

        r1 = virtualinvoke $r0.<androidx.compose.Composer: androidx.compose.CompositionReference buildReference$compose_runtime_release()>();

        virtualinvoke $r0.<androidx.compose.Composer: void endReplaceableGroup()>();

        return r1;
    }

    public static final kotlin.jvm.functions.Function0 access$getEmptyDispose$cp$s535325163()
    {
        kotlin.jvm.functions.Function0 $r0;

        $r0 = <androidx.compose.EffectsKt: kotlin.jvm.functions.Function0 emptyDispose>;

        return $r0;
    }

    public static final void <clinit>()
    {
        androidx.compose.EffectsKt$emptyDispose$1 $r0;
        kotlin.jvm.functions.Function0 $r1;
        androidx.compose.EffectsKt$emptyCommit$1 $r2;
        kotlin.jvm.functions.Function1 $r3;

        $r0 = new androidx.compose.EffectsKt$emptyDispose$1;

        specialinvoke $r0.<androidx.compose.EffectsKt$emptyDispose$1: void <init>()>();

        $r1 = (kotlin.jvm.functions.Function0) $r0;

        <androidx.compose.EffectsKt: kotlin.jvm.functions.Function0 emptyDispose> = $r1;

        $r2 = new androidx.compose.EffectsKt$emptyCommit$1;

        specialinvoke $r2.<androidx.compose.EffectsKt$emptyCommit$1: void <init>()>();

        $r3 = (kotlin.jvm.functions.Function1) $r2;

        <androidx.compose.EffectsKt: kotlin.jvm.functions.Function1 emptyCommit> = $r3;

        return;
    }

