androidx.health.connect.client.request.ReadRecordsRequest
<androidx.health.connect.client.request.ReadRecordsRequest: kotlin.reflect.KClass recordType>
<androidx.health.connect.client.request.ReadRecordsRequest: androidx.health.connect.client.time.TimeRangeFilter timeRangeFilter>
<androidx.health.connect.client.request.ReadRecordsRequest: java.util.Set dataOriginFilter>
<androidx.health.connect.client.request.ReadRecordsRequest: boolean ascendingOrder>
<androidx.health.connect.client.request.ReadRecordsRequest: int pageSize>
<androidx.health.connect.client.request.ReadRecordsRequest: java.lang.String pageToken>
    public void <init>(kotlin.reflect.KClass, androidx.health.connect.client.time.TimeRangeFilter, java.util.Set, boolean, int, java.lang.String)
    {
        androidx.health.connect.client.request.ReadRecordsRequest r0;
        kotlin.reflect.KClass r1;
        androidx.health.connect.client.time.TimeRangeFilter r2;
        java.util.Set r3;
        boolean z0, $z1;
        int i0, $i1;
        java.lang.String r4, $r6, $r7;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: androidx.health.connect.client.request.ReadRecordsRequest;

        r1 := @parameter0: kotlin.reflect.KClass;

        r2 := @parameter1: androidx.health.connect.client.time.TimeRangeFilter;

        r3 := @parameter2: java.util.Set;

        z0 := @parameter3: boolean;

        i0 := @parameter4: int;

        r4 := @parameter5: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "recordType");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "timeRangeFilter");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "dataOriginFilter");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.health.connect.client.request.ReadRecordsRequest: kotlin.reflect.KClass recordType> = r1;

        r0.<androidx.health.connect.client.request.ReadRecordsRequest: androidx.health.connect.client.time.TimeRangeFilter timeRangeFilter> = r2;

        r0.<androidx.health.connect.client.request.ReadRecordsRequest: java.util.Set dataOriginFilter> = r3;

        r0.<androidx.health.connect.client.request.ReadRecordsRequest: boolean ascendingOrder> = z0;

        r0.<androidx.health.connect.client.request.ReadRecordsRequest: int pageSize> = i0;

        r0.<androidx.health.connect.client.request.ReadRecordsRequest: java.lang.String pageToken> = r4;

        $i1 = r0.<androidx.health.connect.client.request.ReadRecordsRequest: int pageSize>;

        if $i1 <= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 != 0 goto label3;

        $r7 = "pageSize must be positive.";

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label3:
        return;
    }

    public void <init>(kotlin.reflect.KClass, androidx.health.connect.client.time.TimeRangeFilter, java.util.Set, boolean, int, java.lang.String, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.health.connect.client.request.ReadRecordsRequest r0;
        kotlin.reflect.KClass r1;
        androidx.health.connect.client.time.TimeRangeFilter r2;
        int i0, $i1, $i2, $i3, $i4, i5;
        kotlin.jvm.internal.DefaultConstructorMarker r3;
        java.util.Set r4;
        boolean z0;
        java.lang.String r5;

        r0 := @this: androidx.health.connect.client.request.ReadRecordsRequest;

        r1 := @parameter0: kotlin.reflect.KClass;

        r2 := @parameter1: androidx.health.connect.client.time.TimeRangeFilter;

        r4 := @parameter2: java.util.Set;

        z0 := @parameter3: boolean;

        i5 := @parameter4: int;

        r5 := @parameter5: java.lang.String;

        i0 := @parameter6: int;

        r3 := @parameter7: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        r4 = staticinvoke <kotlin.collections.SetsKt: java.util.Set emptySet()>();

     label1:
        $i2 = i0 & 8;

        if $i2 == 0 goto label2;

        z0 = 1;

     label2:
        $i3 = i0 & 16;

        if $i3 == 0 goto label3;

        i5 = 1000;

     label3:
        $i4 = i0 & 32;

        if $i4 == 0 goto label4;

        r5 = null;

     label4:
        specialinvoke r0.<androidx.health.connect.client.request.ReadRecordsRequest: void <init>(kotlin.reflect.KClass,androidx.health.connect.client.time.TimeRangeFilter,java.util.Set,boolean,int,java.lang.String)>(r1, r2, r4, z0, i5, r5);

        return;
    }

    public final kotlin.reflect.KClass getRecordType$health_connect_client_release()
    {
        androidx.health.connect.client.request.ReadRecordsRequest r0;
        kotlin.reflect.KClass $r1;

        r0 := @this: androidx.health.connect.client.request.ReadRecordsRequest;

        $r1 = r0.<androidx.health.connect.client.request.ReadRecordsRequest: kotlin.reflect.KClass recordType>;

        return $r1;
    }

    public final androidx.health.connect.client.time.TimeRangeFilter getTimeRangeFilter$health_connect_client_release()
    {
        androidx.health.connect.client.request.ReadRecordsRequest r0;
        androidx.health.connect.client.time.TimeRangeFilter $r1;

        r0 := @this: androidx.health.connect.client.request.ReadRecordsRequest;

        $r1 = r0.<androidx.health.connect.client.request.ReadRecordsRequest: androidx.health.connect.client.time.TimeRangeFilter timeRangeFilter>;

        return $r1;
    }

    public final java.util.Set getDataOriginFilter$health_connect_client_release()
    {
        androidx.health.connect.client.request.ReadRecordsRequest r0;
        java.util.Set $r1;

        r0 := @this: androidx.health.connect.client.request.ReadRecordsRequest;

        $r1 = r0.<androidx.health.connect.client.request.ReadRecordsRequest: java.util.Set dataOriginFilter>;

        return $r1;
    }

    public final boolean getAscendingOrder$health_connect_client_release()
    {
        androidx.health.connect.client.request.ReadRecordsRequest r0;
        boolean $z0;

        r0 := @this: androidx.health.connect.client.request.ReadRecordsRequest;

        $z0 = r0.<androidx.health.connect.client.request.ReadRecordsRequest: boolean ascendingOrder>;

        return $z0;
    }

    public final int getPageSize$health_connect_client_release()
    {
        androidx.health.connect.client.request.ReadRecordsRequest r0;
        int $i0;

        r0 := @this: androidx.health.connect.client.request.ReadRecordsRequest;

        $i0 = r0.<androidx.health.connect.client.request.ReadRecordsRequest: int pageSize>;

        return $i0;
    }

    public final java.lang.String getPageToken$health_connect_client_release()
    {
        androidx.health.connect.client.request.ReadRecordsRequest r0;
        java.lang.String $r1;

        r0 := @this: androidx.health.connect.client.request.ReadRecordsRequest;

        $r1 = r0.<androidx.health.connect.client.request.ReadRecordsRequest: java.lang.String pageToken>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.health.connect.client.request.ReadRecordsRequest r0, $r3, $r4, $r7, $r10, $r13, $r14, $r15;
        java.lang.Object r1;
        java.lang.Class $r2, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        kotlin.reflect.KClass $r5, $r6;
        androidx.health.connect.client.time.TimeRangeFilter $r8, $r9;
        java.util.Set $r11, $r12;
        int $i0, $i1;
        java.lang.String $r16, $r17;

        r0 := @this: androidx.health.connect.client.request.ReadRecordsRequest;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label01;

        return 1;

     label01:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if r1 == null goto label02;

        $r18 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        goto label03;

     label02:
        $r18 = null;

     label03:
        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r18);

        if $z0 != 0 goto label04;

        return 0;

     label04:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r1, "null cannot be cast to non-null type androidx.health.connect.client.request.ReadRecordsRequest<*>");

        $r3 = (androidx.health.connect.client.request.ReadRecordsRequest) r1;

        $r6 = r0.<androidx.health.connect.client.request.ReadRecordsRequest: kotlin.reflect.KClass recordType>;

        $r4 = (androidx.health.connect.client.request.ReadRecordsRequest) r1;

        $r5 = $r4.<androidx.health.connect.client.request.ReadRecordsRequest: kotlin.reflect.KClass recordType>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z1 != 0 goto label05;

        return 0;

     label05:
        $r9 = r0.<androidx.health.connect.client.request.ReadRecordsRequest: androidx.health.connect.client.time.TimeRangeFilter timeRangeFilter>;

        $r7 = (androidx.health.connect.client.request.ReadRecordsRequest) r1;

        $r8 = $r7.<androidx.health.connect.client.request.ReadRecordsRequest: androidx.health.connect.client.time.TimeRangeFilter timeRangeFilter>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r9, $r8);

        if $z2 != 0 goto label06;

        return 0;

     label06:
        $r12 = r0.<androidx.health.connect.client.request.ReadRecordsRequest: java.util.Set dataOriginFilter>;

        $r10 = (androidx.health.connect.client.request.ReadRecordsRequest) r1;

        $r11 = $r10.<androidx.health.connect.client.request.ReadRecordsRequest: java.util.Set dataOriginFilter>;

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r12, $r11);

        if $z3 != 0 goto label07;

        return 0;

     label07:
        $z5 = r0.<androidx.health.connect.client.request.ReadRecordsRequest: boolean ascendingOrder>;

        $r13 = (androidx.health.connect.client.request.ReadRecordsRequest) r1;

        $z4 = $r13.<androidx.health.connect.client.request.ReadRecordsRequest: boolean ascendingOrder>;

        if $z5 == $z4 goto label08;

        return 0;

     label08:
        $i1 = r0.<androidx.health.connect.client.request.ReadRecordsRequest: int pageSize>;

        $r14 = (androidx.health.connect.client.request.ReadRecordsRequest) r1;

        $i0 = $r14.<androidx.health.connect.client.request.ReadRecordsRequest: int pageSize>;

        if $i1 == $i0 goto label09;

        return 0;

     label09:
        $r17 = r0.<androidx.health.connect.client.request.ReadRecordsRequest: java.lang.String pageToken>;

        $r15 = (androidx.health.connect.client.request.ReadRecordsRequest) r1;

        $r16 = $r15.<androidx.health.connect.client.request.ReadRecordsRequest: java.lang.String pageToken>;

        $z6 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r17, $r16);

        if $z6 != 0 goto label10;

        return 0;

     label10:
        return 1;
    }

    public int hashCode()
    {
        androidx.health.connect.client.request.ReadRecordsRequest r0;
        kotlin.reflect.KClass $r1;
        androidx.health.connect.client.time.TimeRangeFilter $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12, i13, $i14, i15;
        java.util.Set $r3;
        boolean $z0;
        java.lang.String $r4;

        r0 := @this: androidx.health.connect.client.request.ReadRecordsRequest;

        $r1 = r0.<androidx.health.connect.client.request.ReadRecordsRequest: kotlin.reflect.KClass recordType>;

        i9 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i0 = 31 * i9;

        $r2 = r0.<androidx.health.connect.client.request.ReadRecordsRequest: androidx.health.connect.client.time.TimeRangeFilter timeRangeFilter>;

        $i1 = virtualinvoke $r2.<androidx.health.connect.client.time.TimeRangeFilter: int hashCode()>();

        i10 = $i0 + $i1;

        $i2 = 31 * i10;

        $r3 = r0.<androidx.health.connect.client.request.ReadRecordsRequest: java.util.Set dataOriginFilter>;

        $i3 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

        i11 = $i2 + $i3;

        $i4 = 31 * i11;

        $z0 = r0.<androidx.health.connect.client.request.ReadRecordsRequest: boolean ascendingOrder>;

        $i5 = staticinvoke <java.lang.Boolean: int hashCode(boolean)>($z0);

        i12 = $i4 + $i5;

        $i7 = 31 * i12;

        $i6 = r0.<androidx.health.connect.client.request.ReadRecordsRequest: int pageSize>;

        i13 = $i7 + $i6;

        $i8 = 31 * i13;

        $r4 = r0.<androidx.health.connect.client.request.ReadRecordsRequest: java.lang.String pageToken>;

        if $r4 == null goto label1;

        $i14 = virtualinvoke $r4.<java.lang.String: int hashCode()>();

        goto label2;

     label1:
        $i14 = 0;

     label2:
        i15 = $i8 + $i14;

        return i15;
    }

