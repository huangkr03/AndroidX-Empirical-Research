androidx.camera.core.impl.utils.CameraOrientationUtil
<androidx.camera.core.impl.utils.CameraOrientationUtil: java.lang.String TAG>
    private void <init>()
    {
        androidx.camera.core.impl.utils.CameraOrientationUtil r0;

        r0 := @this: androidx.camera.core.impl.utils.CameraOrientationUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int getRelativeImageRotation(int, int, boolean)
    {
        int i0, i1, $i2, $i3, $i4, i5;
        boolean z0, $z1;
        java.lang.Object[] $r0;
        java.lang.Integer $r1, $r2, $r4;
        java.lang.Boolean $r3;
        java.lang.String $r5;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        $i3 = i1 - i0;

        $i4 = $i3 + 360;

        i5 = $i4 % 360;

        goto label2;

     label1:
        $i2 = i1 + i0;

        i5 = $i2 % 360;

     label2:
        $z1 = staticinvoke <androidx.camera.core.Logger: boolean isDebugEnabled(java.lang.String)>("CameraOrientationUtil");

        if $z1 == 0 goto label3;

        $r0 = newarray (java.lang.Object)[4];

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r0[0] = $r1;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r0[1] = $r2;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r0[2] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        $r0[3] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("getRelativeImageRotation: destRotationDegrees=%s, sourceRotationDegrees=%s, isOppositeFacing=%s, result=%s", $r0);

        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("CameraOrientationUtil", $r5);

     label3:
        return i5;
    }

    public static int surfaceRotationToDegrees(int)
    {
        int i0;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        short s1;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label5;
        };

     label1:
        s1 = 0;

        goto label6;

     label2:
        s1 = 90;

        goto label6;

     label3:
        s1 = 180;

        goto label6;

     label4:
        s1 = 270;

        goto label6;

     label5:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported surface rotation: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r0;

     label6:
        return s1;
    }

    public static int degreesToSurfaceRotation(int)
    {
        int i0;
        java.lang.IllegalStateException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        boolean z0;
        byte b1;

        i0 := @parameter0: int;

        z0 = 0;

        lookupswitch(i0)
        {
            case 0: goto label1;
            case 90: goto label2;
            case 180: goto label3;
            case 270: goto label4;
            default: goto label5;
        };

     label1:
        b1 = 0;

        goto label6;

     label2:
        b1 = 1;

        goto label6;

     label3:
        b1 = 2;

        goto label6;

     label4:
        b1 = 3;

        goto label6;

     label5:
        $r0 = new java.lang.IllegalStateException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid sensor rotation: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);

        throw $r0;

     label6:
        return b1;
    }

