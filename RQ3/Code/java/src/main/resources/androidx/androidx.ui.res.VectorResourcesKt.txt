androidx.ui.res.VectorResourcesKt
    public static final androidx.ui.graphics.vector.VectorAsset vectorResource(int, androidx.compose.Composer)
    {
        int i0;
        androidx.compose.Composer $r0;
        android.content.Context r1, r13;
        java.lang.Integer r2, $r6, $r9;
        boolean z1, $z4, $z6;
        android.content.res.Resources r4, r14;
        androidx.ui.graphics.vector.VectorAsset r5, $r17;
        androidx.compose.ProvidableAmbient $r7;
        java.lang.Object $r8, $r11, r16;
        androidx.compose.SlotTable$Companion $r10;
        androidx.compose.Ambient r12;
        android.content.res.Resources$Theme r15;

        i0 := @parameter0: int;

        $r0 := @parameter1: androidx.compose.Composer;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-899647051);

        virtualinvoke $r0.<androidx.compose.Composer: void startExpr(java.lang.Object)>($r6);

        $r7 = staticinvoke <androidx.ui.core.WrapperKt: androidx.compose.ProvidableAmbient getContextAmbient()>();

        r12 = (androidx.compose.Ambient) $r7;

        $r8 = virtualinvoke $r0.<androidx.compose.Composer: java.lang.Object consume(androidx.compose.Ambient)>(r12);

        r13 = (android.content.Context) $r8;

        virtualinvoke $r0.<androidx.compose.Composer: void endExpr()>();

        r1 = r13;

        r14 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        r15 = virtualinvoke r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-2008874519);

        virtualinvoke $r0.<androidx.compose.Composer: void startExpr(java.lang.Object)>($r9);

        r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z4 = virtualinvoke $r0.<androidx.compose.Composer: boolean changed(java.lang.Object)>(r2);

        if $z4 != 0 goto label1;

        $z6 = 1;

        goto label2;

     label1:
        $z6 = 0;

     label2:
        z1 = $z6;

        r16 = virtualinvoke $r0.<androidx.compose.Composer: java.lang.Object nextSlot()>();

        $r10 = <androidx.compose.SlotTable: androidx.compose.SlotTable$Companion Companion>;

        $r11 = virtualinvoke $r10.<androidx.compose.SlotTable$Companion: java.lang.Object getEMPTY()>();

        if r16 == $r11 goto label3;

        if z1 != 0 goto label4;

     label3:
        r4 = r14;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r4, "res");

        r5 = staticinvoke <androidx.ui.res.VectorResourcesKt: androidx.ui.graphics.vector.VectorAsset loadVectorResource(android.content.res.Resources$Theme,android.content.res.Resources,int)>(r15, r4, i0);

        virtualinvoke $r0.<androidx.compose.Composer: void updateValue(java.lang.Object)>(r5);

        r16 = r5;

     label4:
        virtualinvoke $r0.<androidx.compose.Composer: void endExpr()>();

        $r17 = (androidx.ui.graphics.vector.VectorAsset) r16;

        return $r17;
    }

    public static final androidx.ui.res.DeferredResource loadVectorResource(int, androidx.ui.graphics.vector.VectorAsset, androidx.ui.graphics.vector.VectorAsset, androidx.compose.Composer)
    {
        int i0;
        androidx.ui.graphics.vector.VectorAsset r0, r1;
        androidx.compose.Composer $r2;
        android.content.Context r3, r16;
        boolean z0;
        java.lang.Integer $r5, $r8, $r12;
        androidx.compose.ProvidableAmbient $r6;
        java.lang.Object $r7, $r10, r19;
        androidx.compose.SlotTable$Companion $r9;
        android.util.TypedValue $r11, r21;
        androidx.ui.res.VectorResourcesKt$loadVectorResource$1 $r13;
        kotlin.jvm.functions.Function0 $r14;
        androidx.compose.Ambient r15;
        android.content.res.Resources r17;
        android.content.res.Resources$Theme r18;
        java.lang.CharSequence $r23;
        java.lang.String r24;
        androidx.ui.res.DeferredResource $r25;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.ui.graphics.vector.VectorAsset;

        r1 := @parameter2: androidx.ui.graphics.vector.VectorAsset;

        $r2 := @parameter3: androidx.compose.Composer;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-899648027);

        virtualinvoke $r2.<androidx.compose.Composer: void startExpr(java.lang.Object)>($r5);

        $r6 = staticinvoke <androidx.ui.core.WrapperKt: androidx.compose.ProvidableAmbient getContextAmbient()>();

        r15 = (androidx.compose.Ambient) $r6;

        $r7 = virtualinvoke $r2.<androidx.compose.Composer: java.lang.Object consume(androidx.compose.Ambient)>(r15);

        r16 = (android.content.Context) $r7;

        virtualinvoke $r2.<androidx.compose.Composer: void endExpr()>();

        r3 = r16;

        r17 = virtualinvoke r3.<android.content.Context: android.content.res.Resources getResources()>();

        r18 = virtualinvoke r3.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-2008871917);

        virtualinvoke $r2.<androidx.compose.Composer: void startExpr(java.lang.Object)>($r8);

        z0 = 1;

        r19 = virtualinvoke $r2.<androidx.compose.Composer: java.lang.Object nextSlot()>();

        $r9 = <androidx.compose.SlotTable: androidx.compose.SlotTable$Companion Companion>;

        $r10 = virtualinvoke $r9.<androidx.compose.SlotTable$Companion: java.lang.Object getEMPTY()>();

        if r19 == $r10 goto label1;

        goto label2;

     label1:
        $r11 = new android.util.TypedValue;

        specialinvoke $r11.<android.util.TypedValue: void <init>()>();

        virtualinvoke $r2.<androidx.compose.Composer: void updateValue(java.lang.Object)>($r11);

        r19 = $r11;

     label2:
        r21 = (android.util.TypedValue) r19;

        virtualinvoke $r2.<androidx.compose.Composer: void endExpr()>();

        virtualinvoke r17.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>(i0, r21, 1);

        $r23 = r21.<android.util.TypedValue: java.lang.CharSequence string>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r23);

        r24 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r23);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-896108587);

        virtualinvoke $r2.<androidx.compose.Composer: void startExpr(java.lang.Object)>($r12);

        $r13 = new androidx.ui.res.VectorResourcesKt$loadVectorResource$1;

        specialinvoke $r13.<androidx.ui.res.VectorResourcesKt$loadVectorResource$1: void <init>(android.content.res.Resources$Theme,android.content.res.Resources,int)>(r18, r17, i0);

        $r14 = (kotlin.jvm.functions.Function0) $r13;

        $r25 = staticinvoke <androidx.ui.res.ResourcesKt: androidx.ui.res.DeferredResource loadResource(java.lang.String,java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function0,androidx.compose.Composer)>(r24, r0, r1, $r14, $r2);

        virtualinvoke $r2.<androidx.compose.Composer: void endExpr()>();

        return $r25;
    }

    public static androidx.ui.res.DeferredResource loadVectorResource$default(int, androidx.ui.graphics.vector.VectorAsset, androidx.ui.graphics.vector.VectorAsset, androidx.compose.Composer, int, java.lang.Object)
    {
        int i0, i1, $i2, $i3;
        androidx.compose.Composer $r0;
        java.lang.Object r1;
        androidx.ui.res.DeferredResource $r2;
        androidx.ui.graphics.vector.VectorAsset r3, r4;

        i0 := @parameter0: int;

        r3 := @parameter1: androidx.ui.graphics.vector.VectorAsset;

        r4 := @parameter2: androidx.ui.graphics.vector.VectorAsset;

        $r0 := @parameter3: androidx.compose.Composer;

        i1 := @parameter4: int;

        r1 := @parameter5: java.lang.Object;

        $i2 = i1 & 2;

        if $i2 == 0 goto label1;

        r3 = (androidx.ui.graphics.vector.VectorAsset) null;

     label1:
        $i3 = i1 & 4;

        if $i3 == 0 goto label2;

        r4 = (androidx.ui.graphics.vector.VectorAsset) null;

     label2:
        $r2 = staticinvoke <androidx.ui.res.VectorResourcesKt: androidx.ui.res.DeferredResource loadVectorResource(int,androidx.ui.graphics.vector.VectorAsset,androidx.ui.graphics.vector.VectorAsset,androidx.compose.Composer)>(i0, r3, r4, $r0);

        return $r2;
    }

    public static final androidx.ui.graphics.vector.VectorAsset loadVectorResource(android.content.res.Resources$Theme, android.content.res.Resources, int) throws org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.Resources$Theme r0;
        android.content.res.Resources r1;
        int i0;
        android.content.res.XmlResourceParser r2, r10;
        androidx.ui.graphics.vector.VectorAssetBuilder r3;
        org.xmlpull.v1.XmlPullParser $r4, $r5, $r6, $r7, $r9;
        boolean $z0;
        androidx.ui.graphics.vector.VectorAsset $r8;
        android.util.AttributeSet r11, r12, r13;

        r0 := @parameter0: android.content.res.Resources$Theme;

        r1 := @parameter1: android.content.res.Resources;

        i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "res");

        r10 = virtualinvoke r1.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r10, "res.getXml(resId)");

        r2 = r10;

        $r4 = (org.xmlpull.v1.XmlPullParser) r2;

        r11 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r4);

        $r5 = (org.xmlpull.v1.XmlPullParser) r2;

        $r6 = staticinvoke <androidx.ui.graphics.vector.compat.XmlVectorParserKt: org.xmlpull.v1.XmlPullParser seekToStartTag(org.xmlpull.v1.XmlPullParser)>($r5);

        r12 = r11;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r12, "attrs");

        r3 = staticinvoke <androidx.ui.graphics.vector.compat.XmlVectorParserKt: androidx.ui.graphics.vector.VectorAssetBuilder createVectorImageBuilder(org.xmlpull.v1.XmlPullParser,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet)>($r6, r1, r0, r12);

     label1:
        $r7 = (org.xmlpull.v1.XmlPullParser) r2;

        $z0 = staticinvoke <androidx.ui.graphics.vector.compat.XmlVectorParserKt: boolean isAtEnd(org.xmlpull.v1.XmlPullParser)>($r7);

        if $z0 != 0 goto label2;

        $r9 = (org.xmlpull.v1.XmlPullParser) r2;

        r13 = r11;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r13, "attrs");

        staticinvoke <androidx.ui.graphics.vector.compat.XmlVectorParserKt: void parseCurrentVectorNode(org.xmlpull.v1.XmlPullParser,android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,androidx.ui.graphics.vector.VectorAssetBuilder)>($r9, r1, r13, r0, r3);

        interfaceinvoke r2.<android.content.res.XmlResourceParser: int next()>();

        goto label1;

     label2:
        $r8 = virtualinvoke r3.<androidx.ui.graphics.vector.VectorAssetBuilder: androidx.ui.graphics.vector.VectorAsset build()>();

        return $r8;
    }

    public static androidx.ui.graphics.vector.VectorAsset loadVectorResource$default(android.content.res.Resources$Theme, android.content.res.Resources, int, int, java.lang.Object) throws org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.Resources r0;
        int i0, i1, $i2;
        java.lang.Object r1;
        androidx.ui.graphics.vector.VectorAsset $r2;
        android.content.res.Resources$Theme r3;

        r3 := @parameter0: android.content.res.Resources$Theme;

        r0 := @parameter1: android.content.res.Resources;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $i2 = i1 & 1;

        if $i2 == 0 goto label1;

        r3 = (android.content.res.Resources$Theme) null;

     label1:
        $r2 = staticinvoke <androidx.ui.res.VectorResourcesKt: androidx.ui.graphics.vector.VectorAsset loadVectorResource(android.content.res.Resources$Theme,android.content.res.Resources,int)>(r3, r0, i0);

        return $r2;
    }

