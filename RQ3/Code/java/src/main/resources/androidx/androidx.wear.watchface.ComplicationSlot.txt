androidx.wear.watchface.ComplicationSlot
<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.ComplicationSlot$Companion Companion>
<androidx.wear.watchface.ComplicationSlot: int id>
<androidx.wear.watchface.ComplicationSlot: int boundsType>
<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.CanvasComplicationFactory canvasComplicationFactory>
<androidx.wear.watchface.ComplicationSlot: boolean initiallyEnabled>
<androidx.wear.watchface.ComplicationSlot: android.os.Bundle configExtras>
<androidx.wear.watchface.ComplicationSlot: boolean fixedComplicationDataSource>
<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.ComplicationTapFilter tapFilter>
<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.ComplicationSlotsManager complicationSlotsManager>
<androidx.wear.watchface.ComplicationSlot: kotlin.Lazy renderer$delegate>
<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.ComplicationSlot$InvalidateListener invalidateListener>
<androidx.wear.watchface.ComplicationSlot: boolean complicationBoundsDirty>
<androidx.wear.watchface.ComplicationSlot: androidx.wear.complications.ComplicationSlotBounds complicationSlotBounds>
<androidx.wear.watchface.ComplicationSlot: boolean enabledDirty>
<androidx.wear.watchface.ComplicationSlot: boolean enabled>
<androidx.wear.watchface.ComplicationSlot: boolean supportedTypesDirty>
<androidx.wear.watchface.ComplicationSlot: java.util.List supportedTypes>
<androidx.wear.watchface.ComplicationSlot: boolean defaultDataSourcePolicyDirty>
<androidx.wear.watchface.ComplicationSlot: androidx.wear.complications.DefaultComplicationDataSourcePolicy defaultDataSourcePolicy>
<androidx.wear.watchface.ComplicationSlot: boolean defaultDataSourceTypeDirty>
<androidx.wear.watchface.ComplicationSlot: androidx.wear.complications.data.ComplicationType defaultDataSourceType>
<androidx.wear.watchface.ComplicationSlot: boolean accessibilityTraversalIndexDirty>
<androidx.wear.watchface.ComplicationSlot: int accessibilityTraversalIndex>
<androidx.wear.watchface.ComplicationSlot: boolean dataDirty>
<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.ObservableWatchData complicationData>
<androidx.wear.watchface.ComplicationSlot: android.graphics.RectF unitSquare>
    public void <init>(int, int, int, androidx.wear.complications.ComplicationSlotBounds, androidx.wear.watchface.CanvasComplicationFactory, java.util.List, androidx.wear.complications.DefaultComplicationDataSourcePolicy, androidx.wear.complications.data.ComplicationType, boolean, android.os.Bundle, boolean, androidx.wear.watchface.ComplicationTapFilter)
    {
        androidx.wear.watchface.ComplicationSlot r0;
        int i0, i1, i2, $i3;
        androidx.wear.complications.ComplicationSlotBounds r1;
        androidx.wear.watchface.CanvasComplicationFactory r2;
        java.util.List r3;
        androidx.wear.complications.DefaultComplicationDataSourcePolicy r4;
        androidx.wear.complications.data.ComplicationType r5;
        boolean z0, z1, $z2, $z3, z4, z5, z6, $z8, z9, z10, z11;
        android.os.Bundle r6;
        androidx.wear.watchface.ComplicationTapFilter r7;
        androidx.wear.watchface.ComplicationSlot$renderer$2 $r8;
        kotlin.jvm.functions.Function0 $r9;
        kotlin.Lazy $r10;
        androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData $r11;
        androidx.wear.complications.data.NoDataComplicationData $r12;
        androidx.wear.watchface.ObservableWatchData $r13;
        java.lang.IllegalArgumentException $r14, $r17;
        java.lang.String $r15, $r18, r20, r21;
        java.lang.Throwable $r16, $r19;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: androidx.wear.complications.ComplicationSlotBounds;

        r2 := @parameter4: androidx.wear.watchface.CanvasComplicationFactory;

        r3 := @parameter5: java.util.List;

        r4 := @parameter6: androidx.wear.complications.DefaultComplicationDataSourcePolicy;

        r5 := @parameter7: androidx.wear.complications.data.ComplicationType;

        z0 := @parameter8: boolean;

        r6 := @parameter9: android.os.Bundle;

        z1 := @parameter10: boolean;

        r7 := @parameter11: androidx.wear.watchface.ComplicationTapFilter;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "bounds");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "canvasComplicationFactory");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "supportedTypes");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "defaultPolicy");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "defaultDataSourceType");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r6, "configExtras");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r7, "tapFilter");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.wear.watchface.ComplicationSlot: int id> = i0;

        r0.<androidx.wear.watchface.ComplicationSlot: int boundsType> = i2;

        r0.<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.CanvasComplicationFactory canvasComplicationFactory> = r2;

        r0.<androidx.wear.watchface.ComplicationSlot: boolean initiallyEnabled> = z0;

        r0.<androidx.wear.watchface.ComplicationSlot: android.os.Bundle configExtras> = r6;

        r0.<androidx.wear.watchface.ComplicationSlot: boolean fixedComplicationDataSource> = z1;

        r0.<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.ComplicationTapFilter tapFilter> = r7;

        $r8 = new androidx.wear.watchface.ComplicationSlot$renderer$2;

        specialinvoke $r8.<androidx.wear.watchface.ComplicationSlot$renderer$2: void <init>(androidx.wear.watchface.ComplicationSlot)>(r0);

        $r9 = (kotlin.jvm.functions.Function0) $r8;

        $r10 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r9);

        r0.<androidx.wear.watchface.ComplicationSlot: kotlin.Lazy renderer$delegate> = $r10;

        $i3 = r0.<androidx.wear.watchface.ComplicationSlot: int id>;

        if $i3 < 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        z4 = $z3;

        z5 = 0;

        z6 = 0;

        if z4 != 0 goto label3;

        r20 = "id must be >= 0";

        $r17 = new java.lang.IllegalArgumentException;

        $r18 = virtualinvoke r20.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        $r19 = (java.lang.Throwable) $r17;

        throw $r19;

     label3:
        if i1 < 0 goto label4;

        $z8 = 1;

        goto label5;

     label4:
        $z8 = 0;

     label5:
        z9 = $z8;

        z10 = 0;

        z11 = 0;

        if z9 != 0 goto label6;

        r21 = "accessibilityTraversalIndex must be >= 0";

        $r14 = new java.lang.IllegalArgumentException;

        $r15 = virtualinvoke r21.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        $r16 = (java.lang.Throwable) $r14;

        throw $r16;

     label6:
        r0.<androidx.wear.watchface.ComplicationSlot: boolean complicationBoundsDirty> = 1;

        r0.<androidx.wear.watchface.ComplicationSlot: androidx.wear.complications.ComplicationSlotBounds complicationSlotBounds> = r1;

        r0.<androidx.wear.watchface.ComplicationSlot: boolean enabledDirty> = 1;

        $z2 = r0.<androidx.wear.watchface.ComplicationSlot: boolean initiallyEnabled>;

        r0.<androidx.wear.watchface.ComplicationSlot: boolean enabled> = $z2;

        r0.<androidx.wear.watchface.ComplicationSlot: boolean supportedTypesDirty> = 1;

        r0.<androidx.wear.watchface.ComplicationSlot: java.util.List supportedTypes> = r3;

        r0.<androidx.wear.watchface.ComplicationSlot: boolean defaultDataSourcePolicyDirty> = 1;

        r0.<androidx.wear.watchface.ComplicationSlot: androidx.wear.complications.DefaultComplicationDataSourcePolicy defaultDataSourcePolicy> = r4;

        r0.<androidx.wear.watchface.ComplicationSlot: boolean defaultDataSourceTypeDirty> = 1;

        r0.<androidx.wear.watchface.ComplicationSlot: androidx.wear.complications.data.ComplicationType defaultDataSourceType> = r5;

        r0.<androidx.wear.watchface.ComplicationSlot: boolean accessibilityTraversalIndexDirty> = 1;

        r0.<androidx.wear.watchface.ComplicationSlot: int accessibilityTraversalIndex> = i1;

        r0.<androidx.wear.watchface.ComplicationSlot: boolean dataDirty> = 1;

        $r11 = new androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData;

        $r12 = new androidx.wear.complications.data.NoDataComplicationData;

        specialinvoke $r12.<androidx.wear.complications.data.NoDataComplicationData: void <init>()>();

        specialinvoke $r11.<androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData: void <init>(java.lang.Object)>($r12);

        $r13 = (androidx.wear.watchface.ObservableWatchData) $r11;

        r0.<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.ObservableWatchData complicationData> = $r13;

        return;
    }

    public final int getId()
    {
        androidx.wear.watchface.ComplicationSlot r0;
        int $i0;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        $i0 = r0.<androidx.wear.watchface.ComplicationSlot: int id>;

        return $i0;
    }

    public final int getBoundsType()
    {
        androidx.wear.watchface.ComplicationSlot r0;
        int $i0;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        $i0 = r0.<androidx.wear.watchface.ComplicationSlot: int boundsType>;

        return $i0;
    }

    public final androidx.wear.watchface.CanvasComplicationFactory getCanvasComplicationFactory()
    {
        androidx.wear.watchface.ComplicationSlot r0;
        androidx.wear.watchface.CanvasComplicationFactory $r1;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        $r1 = r0.<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.CanvasComplicationFactory canvasComplicationFactory>;

        return $r1;
    }

    public final boolean isInitiallyEnabled()
    {
        androidx.wear.watchface.ComplicationSlot r0;
        boolean $z0;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        $z0 = r0.<androidx.wear.watchface.ComplicationSlot: boolean initiallyEnabled>;

        return $z0;
    }

    public final android.os.Bundle getConfigExtras()
    {
        androidx.wear.watchface.ComplicationSlot r0;
        android.os.Bundle $r1;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        $r1 = r0.<androidx.wear.watchface.ComplicationSlot: android.os.Bundle configExtras>;

        return $r1;
    }

    public final boolean isFixedComplicationDataSource()
    {
        androidx.wear.watchface.ComplicationSlot r0;
        boolean $z0;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        $z0 = r0.<androidx.wear.watchface.ComplicationSlot: boolean fixedComplicationDataSource>;

        return $z0;
    }

    public final androidx.wear.watchface.ComplicationTapFilter getTapFilter()
    {
        androidx.wear.watchface.ComplicationSlot r0;
        androidx.wear.watchface.ComplicationTapFilter $r1;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        $r1 = r0.<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.ComplicationTapFilter tapFilter>;

        return $r1;
    }

    public final androidx.wear.watchface.ComplicationSlotsManager getComplicationSlotsManager$wear_watchface_release()
    {
        androidx.wear.watchface.ComplicationSlot r0;
        androidx.wear.watchface.ComplicationSlotsManager r1;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        r1 = r0.<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.ComplicationSlotsManager complicationSlotsManager>;

        if r1 == null goto label1;

        return r1;

     label1:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("complicationSlotsManager");

        return null;
    }

    public final void setComplicationSlotsManager$wear_watchface_release(androidx.wear.watchface.ComplicationSlotsManager)
    {
        androidx.wear.watchface.ComplicationSlot r0;
        androidx.wear.watchface.ComplicationSlotsManager r1;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        r1 := @parameter0: androidx.wear.watchface.ComplicationSlotsManager;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.ComplicationSlotsManager complicationSlotsManager> = r1;

        return;
    }

    public final androidx.wear.watchface.CanvasComplication getRenderer()
    {
        androidx.wear.watchface.ComplicationSlot r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.wear.watchface.CanvasComplication $r3;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        r1 = r0.<androidx.wear.watchface.ComplicationSlot: kotlin.Lazy renderer$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.wear.watchface.CanvasComplication) $r2;

        return $r3;
    }

    public final boolean getComplicationBoundsDirty$wear_watchface_release()
    {
        androidx.wear.watchface.ComplicationSlot r0;
        boolean $z0;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        $z0 = r0.<androidx.wear.watchface.ComplicationSlot: boolean complicationBoundsDirty>;

        return $z0;
    }

    public final void setComplicationBoundsDirty$wear_watchface_release(boolean)
    {
        androidx.wear.watchface.ComplicationSlot r0;
        boolean z0;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        z0 := @parameter0: boolean;

        r0.<androidx.wear.watchface.ComplicationSlot: boolean complicationBoundsDirty> = z0;

        return;
    }

    public final androidx.wear.complications.ComplicationSlotBounds getComplicationSlotBounds()
    {
        androidx.wear.watchface.ComplicationSlot r0;
        androidx.wear.complications.ComplicationSlotBounds $r1;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        $r1 = r0.<androidx.wear.watchface.ComplicationSlot: androidx.wear.complications.ComplicationSlotBounds complicationSlotBounds>;

        return $r1;
    }

    public final void setComplicationSlotBounds$wear_watchface_release(androidx.wear.complications.ComplicationSlotBounds)
    {
        androidx.wear.watchface.ComplicationSlot r0;
        androidx.wear.complications.ComplicationSlotBounds r1, $r2;
        boolean z0, z1, z2, $z3, $z4, z5, z6, z7;
        int $i0;
        java.lang.IllegalArgumentException $r3;
        java.lang.String $r4, r6;
        java.lang.Throwable $r5;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        r1 := @parameter0: androidx.wear.complications.ComplicationSlotBounds;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $i0 = r0.<androidx.wear.watchface.ComplicationSlot: int boundsType>;

        if $i0 == 1 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        z0 = $z4;

        z1 = 0;

        z5 = 0;

        z6 = 0;

        z7 = 0;

        if z0 != 0 goto label3;

        z2 = 0;

        r6 = "Failed requirement.";

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = virtualinvoke r6.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        $r5 = (java.lang.Throwable) $r3;

        throw $r5;

     label3:
        $r2 = r0.<androidx.wear.watchface.ComplicationSlot: androidx.wear.complications.ComplicationSlotBounds complicationSlotBounds>;

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, r1);

        if $z3 == 0 goto label4;

        return;

     label4:
        r0.<androidx.wear.watchface.ComplicationSlot: androidx.wear.complications.ComplicationSlotBounds complicationSlotBounds> = r1;

        r0.<androidx.wear.watchface.ComplicationSlot: boolean complicationBoundsDirty> = 1;

        return;
    }

    public final boolean getEnabledDirty$wear_watchface_release()
    {
        androidx.wear.watchface.ComplicationSlot r0;
        boolean $z0;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        $z0 = r0.<androidx.wear.watchface.ComplicationSlot: boolean enabledDirty>;

        return $z0;
    }

    public final void setEnabledDirty$wear_watchface_release(boolean)
    {
        androidx.wear.watchface.ComplicationSlot r0;
        boolean z0;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        z0 := @parameter0: boolean;

        r0.<androidx.wear.watchface.ComplicationSlot: boolean enabledDirty> = z0;

        return;
    }

    public final boolean isEnabled()
    {
        androidx.wear.watchface.ComplicationSlot r0;
        boolean $z0;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        $z0 = r0.<androidx.wear.watchface.ComplicationSlot: boolean enabled>;

        return $z0;
    }

    public final void setEnabled$wear_watchface_release(boolean)
    {
        androidx.wear.watchface.ComplicationSlot r0;
        boolean z0, $z1;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        z0 := @parameter0: boolean;

        $z1 = r0.<androidx.wear.watchface.ComplicationSlot: boolean enabled>;

        if $z1 != z0 goto label1;

        return;

     label1:
        r0.<androidx.wear.watchface.ComplicationSlot: boolean enabled> = z0;

        r0.<androidx.wear.watchface.ComplicationSlot: boolean enabledDirty> = 1;

        return;
    }

    public final boolean getSupportedTypesDirty$wear_watchface_release()
    {
        androidx.wear.watchface.ComplicationSlot r0;
        boolean $z0;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        $z0 = r0.<androidx.wear.watchface.ComplicationSlot: boolean supportedTypesDirty>;

        return $z0;
    }

    public final void setSupportedTypesDirty$wear_watchface_release(boolean)
    {
        androidx.wear.watchface.ComplicationSlot r0;
        boolean z0;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        z0 := @parameter0: boolean;

        r0.<androidx.wear.watchface.ComplicationSlot: boolean supportedTypesDirty> = z0;

        return;
    }

    public final java.util.List getSupportedTypes()
    {
        androidx.wear.watchface.ComplicationSlot r0;
        java.util.List $r1;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        $r1 = r0.<androidx.wear.watchface.ComplicationSlot: java.util.List supportedTypes>;

        return $r1;
    }

    public final void setSupportedTypes$wear_watchface_release(java.util.List)
    {
        androidx.wear.watchface.ComplicationSlot r0;
        java.util.List r1, $r2;
        boolean z0, $z1, $z2, z3, $z4, z5, z6, z7, z8, z9;
        java.lang.IllegalArgumentException $r3;
        java.lang.String $r4, r7;
        java.lang.Throwable $r5;
        java.util.Collection r6;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = r0.<androidx.wear.watchface.ComplicationSlot: java.util.List supportedTypes>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, r1);

        if $z1 == 0 goto label1;

        return;

     label1:
        r6 = (java.util.Collection) r1;

        z3 = 0;

        $z2 = interfaceinvoke r6.<java.util.Collection: boolean isEmpty()>();

        if $z2 != 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        z5 = $z4;

        z6 = 0;

        z7 = 0;

        z8 = 0;

        z9 = 0;

        if z5 != 0 goto label4;

        z0 = 0;

        r7 = "Failed requirement.";

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = virtualinvoke r7.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        $r5 = (java.lang.Throwable) $r3;

        throw $r5;

     label4:
        r0.<androidx.wear.watchface.ComplicationSlot: java.util.List supportedTypes> = r1;

        r0.<androidx.wear.watchface.ComplicationSlot: boolean supportedTypesDirty> = 1;

        return;
    }

    public final boolean getDefaultDataSourcePolicyDirty$wear_watchface_release()
    {
        androidx.wear.watchface.ComplicationSlot r0;
        boolean $z0;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        $z0 = r0.<androidx.wear.watchface.ComplicationSlot: boolean defaultDataSourcePolicyDirty>;

        return $z0;
    }

    public final void setDefaultDataSourcePolicyDirty$wear_watchface_release(boolean)
    {
        androidx.wear.watchface.ComplicationSlot r0;
        boolean z0;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        z0 := @parameter0: boolean;

        r0.<androidx.wear.watchface.ComplicationSlot: boolean defaultDataSourcePolicyDirty> = z0;

        return;
    }

    public final androidx.wear.complications.DefaultComplicationDataSourcePolicy getDefaultDataSourcePolicy()
    {
        androidx.wear.watchface.ComplicationSlot r0;
        androidx.wear.complications.DefaultComplicationDataSourcePolicy $r1;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        $r1 = r0.<androidx.wear.watchface.ComplicationSlot: androidx.wear.complications.DefaultComplicationDataSourcePolicy defaultDataSourcePolicy>;

        return $r1;
    }

    public final void setDefaultDataSourcePolicy$wear_watchface_release(androidx.wear.complications.DefaultComplicationDataSourcePolicy)
    {
        androidx.wear.watchface.ComplicationSlot r0;
        androidx.wear.complications.DefaultComplicationDataSourcePolicy r1, $r2;
        boolean $z0;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        r1 := @parameter0: androidx.wear.complications.DefaultComplicationDataSourcePolicy;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = r0.<androidx.wear.watchface.ComplicationSlot: androidx.wear.complications.DefaultComplicationDataSourcePolicy defaultDataSourcePolicy>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<androidx.wear.watchface.ComplicationSlot: androidx.wear.complications.DefaultComplicationDataSourcePolicy defaultDataSourcePolicy> = r1;

        r0.<androidx.wear.watchface.ComplicationSlot: boolean defaultDataSourcePolicyDirty> = 1;

        return;
    }

    public final boolean getDefaultDataSourceTypeDirty$wear_watchface_release()
    {
        androidx.wear.watchface.ComplicationSlot r0;
        boolean $z0;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        $z0 = r0.<androidx.wear.watchface.ComplicationSlot: boolean defaultDataSourceTypeDirty>;

        return $z0;
    }

    public final void setDefaultDataSourceTypeDirty$wear_watchface_release(boolean)
    {
        androidx.wear.watchface.ComplicationSlot r0;
        boolean z0;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        z0 := @parameter0: boolean;

        r0.<androidx.wear.watchface.ComplicationSlot: boolean defaultDataSourceTypeDirty> = z0;

        return;
    }

    public final androidx.wear.complications.data.ComplicationType getDefaultDataSourceType()
    {
        androidx.wear.watchface.ComplicationSlot r0;
        androidx.wear.complications.data.ComplicationType $r1;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        $r1 = r0.<androidx.wear.watchface.ComplicationSlot: androidx.wear.complications.data.ComplicationType defaultDataSourceType>;

        return $r1;
    }

    public final void setDefaultDataSourceType$wear_watchface_release(androidx.wear.complications.data.ComplicationType)
    {
        androidx.wear.watchface.ComplicationSlot r0;
        androidx.wear.complications.data.ComplicationType r1, $r2;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        r1 := @parameter0: androidx.wear.complications.data.ComplicationType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = r0.<androidx.wear.watchface.ComplicationSlot: androidx.wear.complications.data.ComplicationType defaultDataSourceType>;

        if $r2 != r1 goto label1;

        return;

     label1:
        r0.<androidx.wear.watchface.ComplicationSlot: androidx.wear.complications.data.ComplicationType defaultDataSourceType> = r1;

        r0.<androidx.wear.watchface.ComplicationSlot: boolean defaultDataSourceTypeDirty> = 1;

        return;
    }

    public final boolean getAccessibilityTraversalIndexDirty$wear_watchface_release()
    {
        androidx.wear.watchface.ComplicationSlot r0;
        boolean $z0;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        $z0 = r0.<androidx.wear.watchface.ComplicationSlot: boolean accessibilityTraversalIndexDirty>;

        return $z0;
    }

    public final void setAccessibilityTraversalIndexDirty$wear_watchface_release(boolean)
    {
        androidx.wear.watchface.ComplicationSlot r0;
        boolean z0;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        z0 := @parameter0: boolean;

        r0.<androidx.wear.watchface.ComplicationSlot: boolean accessibilityTraversalIndexDirty> = z0;

        return;
    }

    public final int getAccessibilityTraversalIndex()
    {
        androidx.wear.watchface.ComplicationSlot r0;
        int $i0;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        $i0 = r0.<androidx.wear.watchface.ComplicationSlot: int accessibilityTraversalIndex>;

        return $i0;
    }

    public final void setAccessibilityTraversalIndex$wear_watchface_release(int)
    {
        androidx.wear.watchface.ComplicationSlot r0;
        int i0, $i1;
        boolean z0, z1, $z3, z4;
        java.lang.IllegalArgumentException $r1;
        java.lang.String $r2, r4;
        java.lang.Throwable $r3;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        z0 = $z3;

        z1 = 0;

        z4 = 0;

        if z0 != 0 goto label3;

        r4 = "accessibilityTraversalIndex must be >= 0";

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        $r3 = (java.lang.Throwable) $r1;

        throw $r3;

     label3:
        $i1 = r0.<androidx.wear.watchface.ComplicationSlot: int accessibilityTraversalIndex>;

        if $i1 != i0 goto label4;

        return;

     label4:
        r0.<androidx.wear.watchface.ComplicationSlot: int accessibilityTraversalIndex> = i0;

        r0.<androidx.wear.watchface.ComplicationSlot: boolean accessibilityTraversalIndexDirty> = 1;

        return;
    }

    public final boolean getDataDirty$wear_watchface_release()
    {
        androidx.wear.watchface.ComplicationSlot r0;
        boolean $z0;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        $z0 = r0.<androidx.wear.watchface.ComplicationSlot: boolean dataDirty>;

        return $z0;
    }

    public final void setDataDirty$wear_watchface_release(boolean)
    {
        androidx.wear.watchface.ComplicationSlot r0;
        boolean z0;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        z0 := @parameter0: boolean;

        r0.<androidx.wear.watchface.ComplicationSlot: boolean dataDirty> = z0;

        return;
    }

    public final androidx.wear.watchface.ObservableWatchData getComplicationData()
    {
        androidx.wear.watchface.ComplicationSlot r0;
        androidx.wear.watchface.ObservableWatchData $r1;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        $r1 = r0.<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.ObservableWatchData complicationData>;

        return $r1;
    }

    public final boolean isActiveAt(java.time.Instant)
    {
        androidx.wear.watchface.ComplicationSlot r0;
        java.time.Instant r1;
        androidx.wear.complications.data.ComplicationType r2;
        int i0, $i1;
        androidx.wear.watchface.ObservableWatchData $r3, $r7;
        java.lang.Object $r4, $r8;
        androidx.wear.complications.data.ComplicationData $r5, $r9;
        int[] $r6;
        androidx.wear.complications.data.TimeRange $r10;
        boolean $z0;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        r1 := @parameter0: java.time.Instant;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "instant");

        $r3 = r0.<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.ObservableWatchData complicationData>;

        $r4 = virtualinvoke $r3.<androidx.wear.watchface.ObservableWatchData: java.lang.Object getValue()>();

        $r5 = (androidx.wear.complications.data.ComplicationData) $r4;

        r2 = virtualinvoke $r5.<androidx.wear.complications.data.ComplicationData: androidx.wear.complications.data.ComplicationType getType()>();

        $r6 = <androidx.wear.watchface.ComplicationSlot$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i1 = virtualinvoke r2.<androidx.wear.complications.data.ComplicationType: int ordinal()>();

        i0 = $r6[$i1];

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        $z0 = 0;

        goto label5;

     label2:
        $z0 = 0;

        goto label5;

     label3:
        $z0 = 0;

        goto label5;

     label4:
        $r7 = r0.<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.ObservableWatchData complicationData>;

        $r8 = virtualinvoke $r7.<androidx.wear.watchface.ObservableWatchData: java.lang.Object getValue()>();

        $r9 = (androidx.wear.complications.data.ComplicationData) $r8;

        $r10 = virtualinvoke $r9.<androidx.wear.complications.data.ComplicationData: androidx.wear.complications.data.TimeRange getValidTimeRange()>();

        $z0 = virtualinvoke $r10.<androidx.wear.complications.data.TimeRange: boolean contains(java.time.Instant)>(r1);

     label5:
        return $z0;
    }

    public final void render(android.graphics.Canvas, java.time.ZonedDateTime, androidx.wear.watchface.RenderParameters)
    {
        androidx.wear.watchface.ComplicationSlot r0;
        android.graphics.Canvas r1;
        java.time.ZonedDateTime r2;
        androidx.wear.watchface.RenderParameters r3;
        android.graphics.Rect r4, $r5;
        int $i0, $i1, $i2;
        androidx.wear.watchface.CanvasComplication $r6;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: java.time.ZonedDateTime;

        r3 := @parameter2: androidx.wear.watchface.RenderParameters;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "canvas");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "zonedDateTime");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "renderParameters");

        $r5 = new android.graphics.Rect;

        $i0 = virtualinvoke r1.<android.graphics.Canvas: int getWidth()>();

        $i1 = virtualinvoke r1.<android.graphics.Canvas: int getHeight()>();

        specialinvoke $r5.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, $i0, $i1);

        r4 = virtualinvoke r0.<androidx.wear.watchface.ComplicationSlot: android.graphics.Rect computeBounds(android.graphics.Rect)>($r5);

        $r6 = virtualinvoke r0.<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.CanvasComplication getRenderer()>();

        $i2 = r0.<androidx.wear.watchface.ComplicationSlot: int id>;

        interfaceinvoke $r6.<androidx.wear.watchface.CanvasComplication: void render(android.graphics.Canvas,android.graphics.Rect,java.time.ZonedDateTime,androidx.wear.watchface.RenderParameters,int)>(r1, r4, r2, r3, $i2);

        return;
    }

    public final void renderHighlightLayer(android.graphics.Canvas, java.time.ZonedDateTime, androidx.wear.watchface.RenderParameters)
    {
        androidx.wear.watchface.ComplicationSlot r0;
        android.graphics.Canvas r1;
        java.time.ZonedDateTime r2;
        androidx.wear.watchface.RenderParameters r3;
        android.graphics.Rect r4, $r7;
        androidx.wear.watchface.RenderParameters$HighlightedElement r5, $r13;
        androidx.wear.watchface.RenderParameters$HighlightLayer r6, $r10, $r12;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        androidx.wear.watchface.RenderParameters$HighlightedElement$ComplicationSlot $r8;
        androidx.wear.watchface.CanvasComplication $r9, $r11;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: java.time.ZonedDateTime;

        r3 := @parameter2: androidx.wear.watchface.RenderParameters;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "canvas");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "zonedDateTime");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "renderParameters");

        $z0 = r0.<androidx.wear.watchface.ComplicationSlot: boolean fixedComplicationDataSource>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r7 = new android.graphics.Rect;

        $i0 = virtualinvoke r1.<android.graphics.Canvas: int getWidth()>();

        $i1 = virtualinvoke r1.<android.graphics.Canvas: int getHeight()>();

        specialinvoke $r7.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, $i0, $i1);

        r4 = virtualinvoke r0.<androidx.wear.watchface.ComplicationSlot: android.graphics.Rect computeBounds(android.graphics.Rect)>($r7);

        r6 = virtualinvoke r3.<androidx.wear.watchface.RenderParameters: androidx.wear.watchface.RenderParameters$HighlightLayer getHighlightLayer()>();

        if r6 != null goto label2;

        $r13 = null;

        goto label3;

     label2:
        $r13 = virtualinvoke r6.<androidx.wear.watchface.RenderParameters$HighlightLayer: androidx.wear.watchface.RenderParameters$HighlightedElement getHighlightedElement()>();

     label3:
        r5 = $r13;

        $z1 = r5 instanceof androidx.wear.watchface.RenderParameters$HighlightedElement$AllComplicationSlots;

        if $z1 == 0 goto label4;

        $r11 = virtualinvoke r0.<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.CanvasComplication getRenderer()>();

        $i6 = r0.<androidx.wear.watchface.ComplicationSlot: int boundsType>;

        $r12 = virtualinvoke r3.<androidx.wear.watchface.RenderParameters: androidx.wear.watchface.RenderParameters$HighlightLayer getHighlightLayer()>();

        $i7 = virtualinvoke $r12.<androidx.wear.watchface.RenderParameters$HighlightLayer: int getHighlightTint()>();

        interfaceinvoke $r11.<androidx.wear.watchface.CanvasComplication: void drawHighlight(android.graphics.Canvas,android.graphics.Rect,int,java.time.ZonedDateTime,int)>(r1, r4, $i6, r2, $i7);

        goto label5;

     label4:
        $z2 = r5 instanceof androidx.wear.watchface.RenderParameters$HighlightedElement$ComplicationSlot;

        if $z2 == 0 goto label5;

        $r8 = (androidx.wear.watchface.RenderParameters$HighlightedElement$ComplicationSlot) r5;

        $i2 = virtualinvoke $r8.<androidx.wear.watchface.RenderParameters$HighlightedElement$ComplicationSlot: int getId()>();

        $i3 = r0.<androidx.wear.watchface.ComplicationSlot: int id>;

        if $i2 != $i3 goto label5;

        $r9 = virtualinvoke r0.<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.CanvasComplication getRenderer()>();

        $i4 = r0.<androidx.wear.watchface.ComplicationSlot: int boundsType>;

        $r10 = virtualinvoke r3.<androidx.wear.watchface.RenderParameters: androidx.wear.watchface.RenderParameters$HighlightLayer getHighlightLayer()>();

        $i5 = virtualinvoke $r10.<androidx.wear.watchface.RenderParameters$HighlightLayer: int getHighlightTint()>();

        interfaceinvoke $r9.<androidx.wear.watchface.CanvasComplication: void drawHighlight(android.graphics.Canvas,android.graphics.Rect,int,java.time.ZonedDateTime,int)>(r1, r4, $i4, r2, $i5);

     label5:
        return;
    }

    public final void init$wear_watchface_release(androidx.wear.watchface.ComplicationSlot$InvalidateListener)
    {
        androidx.wear.watchface.ComplicationSlot r0;
        androidx.wear.watchface.ComplicationSlot$InvalidateListener r1;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        r1 := @parameter0: androidx.wear.watchface.ComplicationSlot$InvalidateListener;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "invalidateListener");

        r0.<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.ComplicationSlot$InvalidateListener invalidateListener> = r1;

        return;
    }

    public final android.graphics.Rect computeBounds(android.graphics.Rect, androidx.wear.complications.data.ComplicationType)
    {
        androidx.wear.watchface.ComplicationSlot r0;
        android.graphics.Rect r1, $r8;
        androidx.wear.complications.data.ComplicationType r2;
        android.graphics.RectF r3, $r7;
        androidx.wear.complications.ComplicationSlotBounds $r4;
        java.util.Map $r5;
        java.lang.Object $r6;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        r1 := @parameter0: android.graphics.Rect;

        r2 := @parameter1: androidx.wear.complications.data.ComplicationType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "screen");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "complicationType");

        $r4 = r0.<androidx.wear.watchface.ComplicationSlot: androidx.wear.complications.ComplicationSlotBounds complicationSlotBounds>;

        $r5 = virtualinvoke $r4.<androidx.wear.complications.ComplicationSlotBounds: java.util.Map getPerComplicationTypeBounds()>();

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r6);

        r3 = (android.graphics.RectF) $r6;

        $r7 = <androidx.wear.watchface.ComplicationSlot: android.graphics.RectF unitSquare>;

        virtualinvoke r3.<android.graphics.RectF: boolean intersect(android.graphics.RectF)>($r7);

        $r8 = new android.graphics.Rect;

        $f0 = r3.<android.graphics.RectF: float left>;

        $i0 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        $f1 = (float) $i0;

        $f2 = $f0 * $f1;

        $f3 = 0.5F + $f2;

        $i1 = (int) $f3;

        $f4 = r3.<android.graphics.RectF: float top>;

        $i2 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        $f5 = (float) $i2;

        $f6 = $f4 * $f5;

        $f7 = 0.5F + $f6;

        $i3 = (int) $f7;

        $f8 = r3.<android.graphics.RectF: float right>;

        $i4 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        $f9 = (float) $i4;

        $f10 = $f8 * $f9;

        $f11 = 0.5F + $f10;

        $i5 = (int) $f11;

        $f12 = r3.<android.graphics.RectF: float bottom>;

        $i6 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        $f13 = (float) $i6;

        $f14 = $f12 * $f13;

        $f15 = 0.5F + $f14;

        $i7 = (int) $f15;

        specialinvoke $r8.<android.graphics.Rect: void <init>(int,int,int,int)>($i1, $i3, $i5, $i7);

        return $r8;
    }

    public final android.graphics.Rect computeBounds(android.graphics.Rect)
    {
        androidx.wear.watchface.ComplicationSlot r0;
        android.graphics.Rect r1, $r6;
        androidx.wear.watchface.ObservableWatchData $r2;
        java.lang.Object $r3;
        androidx.wear.complications.data.ComplicationData $r4;
        androidx.wear.complications.data.ComplicationType $r5;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        r1 := @parameter0: android.graphics.Rect;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "screen");

        $r2 = r0.<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.ObservableWatchData complicationData>;

        $r3 = virtualinvoke $r2.<androidx.wear.watchface.ObservableWatchData: java.lang.Object getValue()>();

        $r4 = (androidx.wear.complications.data.ComplicationData) $r3;

        $r5 = virtualinvoke $r4.<androidx.wear.complications.data.ComplicationData: androidx.wear.complications.data.ComplicationType getType()>();

        $r6 = virtualinvoke r0.<androidx.wear.watchface.ComplicationSlot: android.graphics.Rect computeBounds(android.graphics.Rect,androidx.wear.complications.data.ComplicationType)>(r1, $r5);

        return $r6;
    }

    public final void dump$wear_watchface_release(androidx.wear.watchface.IndentingPrintWriter)
    {
        androidx.wear.watchface.ComplicationSlot r0;
        androidx.wear.watchface.IndentingPrintWriter r1;
        java.util.List r2, $r24;
        java.util.Map $r3, r5;
        java.util.Collection r4, r9;
        boolean z2, $z4, $z5, $z6, $z7;
        java.util.Iterator r6;
        java.util.Map$Entry r7, r8;
        java.lang.String r10, $r15, $r17, $r19, $r21, $r23, $r28, $r29, $r31, $r34, $r37, $r40, $r43, $r51;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r47, $r48, $r49, $r50, $r53, $r55, $r56, $r58;
        int $i0, $i1, $i2, $i3;
        java.lang.Boolean $r16, $r18, $r30;
        java.lang.Integer $r20, $r39;
        android.os.Bundle $r22;
        androidx.wear.watchface.ComplicationSlot$dump$1 $r25;
        kotlin.jvm.functions.Function1 $r26;
        java.lang.Iterable $r27;
        androidx.wear.complications.DefaultComplicationDataSourcePolicy $r32, $r35, $r38;
        android.content.ComponentName $r33, $r36;
        androidx.wear.watchface.CanvasComplication $r41;
        androidx.wear.complications.data.ComplicationData $r42;
        androidx.wear.complications.ComplicationSlotBounds $r44;
        java.util.ArrayList $r45;
        java.util.Set $r46;
        java.lang.Object $r52, $r54, $r57;

        r0 := @this: androidx.wear.watchface.ComplicationSlot;

        r1 := @parameter0: androidx.wear.watchface.IndentingPrintWriter;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "writer");

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ComplicationSlot ");

        $i0 = r0.<androidx.wear.watchface.ComplicationSlot: int id>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void println(java.lang.String)>($r15);

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void increaseIndent()>();

        $z4 = r0.<androidx.wear.watchface.ComplicationSlot: boolean fixedComplicationDataSource>;

        $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4);

        $r17 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("fixedComplicationDataSource=", $r16);

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void println(java.lang.String)>($r17);

        $z5 = r0.<androidx.wear.watchface.ComplicationSlot: boolean enabled>;

        $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5);

        $r19 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("enabled=", $r18);

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void println(java.lang.String)>($r19);

        $i1 = r0.<androidx.wear.watchface.ComplicationSlot: int boundsType>;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r21 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("boundsType=", $r20);

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void println(java.lang.String)>($r21);

        $r22 = r0.<androidx.wear.watchface.ComplicationSlot: android.os.Bundle configExtras>;

        $r23 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("configExtras=", $r22);

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void println(java.lang.String)>($r23);

        $r24 = r0.<androidx.wear.watchface.ComplicationSlot: java.util.List supportedTypes>;

        $r27 = (java.lang.Iterable) $r24;

        $r25 = <androidx.wear.watchface.ComplicationSlot$dump$1: androidx.wear.watchface.ComplicationSlot$dump$1 INSTANCE>;

        $r26 = (kotlin.jvm.functions.Function1) $r25;

        $r28 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r27, null, null, null, 0, null, $r26, 31, null);

        $r29 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("supportedTypes=", $r28);

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void println(java.lang.String)>($r29);

        $z6 = r0.<androidx.wear.watchface.ComplicationSlot: boolean initiallyEnabled>;

        $r30 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z6);

        $r31 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("initiallyEnabled=", $r30);

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void println(java.lang.String)>($r31);

        $r32 = r0.<androidx.wear.watchface.ComplicationSlot: androidx.wear.complications.DefaultComplicationDataSourcePolicy defaultDataSourcePolicy>;

        $r33 = virtualinvoke $r32.<androidx.wear.complications.DefaultComplicationDataSourcePolicy: android.content.ComponentName getPrimaryDataSource()>();

        $r34 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("defaultDataSourcePolicy.primaryDataSource=", $r33);

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void println(java.lang.String)>($r34);

        $r35 = r0.<androidx.wear.watchface.ComplicationSlot: androidx.wear.complications.DefaultComplicationDataSourcePolicy defaultDataSourcePolicy>;

        $r36 = virtualinvoke $r35.<androidx.wear.complications.DefaultComplicationDataSourcePolicy: android.content.ComponentName getSecondaryDataSource()>();

        $r37 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("defaultDataSourcePolicy.secondaryDataSource=", $r36);

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void println(java.lang.String)>($r37);

        $r38 = r0.<androidx.wear.watchface.ComplicationSlot: androidx.wear.complications.DefaultComplicationDataSourcePolicy defaultDataSourcePolicy>;

        $i2 = virtualinvoke $r38.<androidx.wear.complications.DefaultComplicationDataSourcePolicy: int getSystemDataSourceFallback()>();

        $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r40 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("defaultDataSourcePolicy.systemDataSourceFallback=", $r39);

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void println(java.lang.String)>($r40);

        $r41 = virtualinvoke r0.<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.CanvasComplication getRenderer()>();

        $r42 = interfaceinvoke $r41.<androidx.wear.watchface.CanvasComplication: androidx.wear.complications.data.ComplicationData getData()>();

        $r43 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("data=", $r42);

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void println(java.lang.String)>($r43);

        $r44 = r0.<androidx.wear.watchface.ComplicationSlot: androidx.wear.complications.ComplicationSlotBounds complicationSlotBounds>;

        $r3 = virtualinvoke $r44.<androidx.wear.complications.ComplicationSlotBounds: java.util.Map getPerComplicationTypeBounds()>();

        $r45 = new java.util.ArrayList;

        $i3 = interfaceinvoke $r3.<java.util.Map: int size()>();

        specialinvoke $r45.<java.util.ArrayList: void <init>(int)>($i3);

        r4 = (java.util.Collection) $r45;

        r5 = $r3;

        z2 = 0;

        $r46 = interfaceinvoke r5.<java.util.Map: java.util.Set entrySet()>();

        r6 = interfaceinvoke $r46.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z7 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label2;

        $r52 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r52;

        r8 = r7;

        r9 = r4;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r54 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r54);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r57 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r57);

        r10 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r9.<java.util.Collection: boolean add(java.lang.Object)>(r10);

        goto label1;

     label2:
        r2 = (java.util.List) r4;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bounds=[");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void println(java.lang.String)>($r51);

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void decreaseIndent()>();

        return;
    }

    public static final androidx.wear.watchface.ComplicationSlot$Builder createRoundRectComplicationSlotBuilder(int, androidx.wear.watchface.CanvasComplicationFactory, java.util.List, androidx.wear.complications.DefaultComplicationDataSourcePolicy, androidx.wear.complications.ComplicationSlotBounds)
    {
        int i0;
        androidx.wear.watchface.CanvasComplicationFactory r0;
        java.util.List r1;
        androidx.wear.complications.DefaultComplicationDataSourcePolicy r2;
        androidx.wear.complications.ComplicationSlotBounds r3;
        androidx.wear.watchface.ComplicationSlot$Companion $r4;
        androidx.wear.watchface.ComplicationSlot$Builder $r5;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.wear.watchface.CanvasComplicationFactory;

        r1 := @parameter2: java.util.List;

        r2 := @parameter3: androidx.wear.complications.DefaultComplicationDataSourcePolicy;

        r3 := @parameter4: androidx.wear.complications.ComplicationSlotBounds;

        $r4 = <androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.ComplicationSlot$Companion Companion>;

        $r5 = virtualinvoke $r4.<androidx.wear.watchface.ComplicationSlot$Companion: androidx.wear.watchface.ComplicationSlot$Builder createRoundRectComplicationSlotBuilder(int,androidx.wear.watchface.CanvasComplicationFactory,java.util.List,androidx.wear.complications.DefaultComplicationDataSourcePolicy,androidx.wear.complications.ComplicationSlotBounds)>(i0, r0, r1, r2, r3);

        return $r5;
    }

    public static final androidx.wear.watchface.ComplicationSlot$Builder createBackgroundComplicationSlotBuilder(int, androidx.wear.watchface.CanvasComplicationFactory, java.util.List, androidx.wear.complications.DefaultComplicationDataSourcePolicy)
    {
        int i0;
        androidx.wear.watchface.CanvasComplicationFactory r0;
        java.util.List r1;
        androidx.wear.complications.DefaultComplicationDataSourcePolicy r2;
        androidx.wear.watchface.ComplicationSlot$Companion $r3;
        androidx.wear.watchface.ComplicationSlot$Builder $r4;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.wear.watchface.CanvasComplicationFactory;

        r1 := @parameter2: java.util.List;

        r2 := @parameter3: androidx.wear.complications.DefaultComplicationDataSourcePolicy;

        $r3 = <androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.ComplicationSlot$Companion Companion>;

        $r4 = virtualinvoke $r3.<androidx.wear.watchface.ComplicationSlot$Companion: androidx.wear.watchface.ComplicationSlot$Builder createBackgroundComplicationSlotBuilder(int,androidx.wear.watchface.CanvasComplicationFactory,java.util.List,androidx.wear.complications.DefaultComplicationDataSourcePolicy)>(i0, r0, r1, r2);

        return $r4;
    }

    public static final androidx.wear.watchface.ComplicationSlot$Builder createEdgeComplicationSlotBuilder(int, androidx.wear.watchface.CanvasComplicationFactory, java.util.List, androidx.wear.complications.DefaultComplicationDataSourcePolicy, androidx.wear.complications.ComplicationSlotBounds, androidx.wear.watchface.ComplicationTapFilter)
    {
        int i0;
        androidx.wear.watchface.CanvasComplicationFactory r0;
        java.util.List r1;
        androidx.wear.complications.DefaultComplicationDataSourcePolicy r2;
        androidx.wear.complications.ComplicationSlotBounds r3;
        androidx.wear.watchface.ComplicationTapFilter r4;
        androidx.wear.watchface.ComplicationSlot$Companion $r5;
        androidx.wear.watchface.ComplicationSlot$Builder $r6;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.wear.watchface.CanvasComplicationFactory;

        r1 := @parameter2: java.util.List;

        r2 := @parameter3: androidx.wear.complications.DefaultComplicationDataSourcePolicy;

        r3 := @parameter4: androidx.wear.complications.ComplicationSlotBounds;

        r4 := @parameter5: androidx.wear.watchface.ComplicationTapFilter;

        $r5 = <androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.ComplicationSlot$Companion Companion>;

        $r6 = virtualinvoke $r5.<androidx.wear.watchface.ComplicationSlot$Companion: androidx.wear.watchface.ComplicationSlot$Builder createEdgeComplicationSlotBuilder(int,androidx.wear.watchface.CanvasComplicationFactory,java.util.List,androidx.wear.complications.DefaultComplicationDataSourcePolicy,androidx.wear.complications.ComplicationSlotBounds,androidx.wear.watchface.ComplicationTapFilter)>(i0, r0, r1, r2, r3, r4);

        return $r6;
    }

    public static final android.graphics.RectF access$getUnitSquare$cp()
    {
        android.graphics.RectF $r0;

        $r0 = <androidx.wear.watchface.ComplicationSlot: android.graphics.RectF unitSquare>;

        return $r0;
    }

    public static final androidx.wear.watchface.ComplicationSlot$InvalidateListener access$getInvalidateListener$p(androidx.wear.watchface.ComplicationSlot)
    {
        androidx.wear.watchface.ComplicationSlot $r0;
        androidx.wear.watchface.ComplicationSlot$InvalidateListener $r1;

        $r0 := @parameter0: androidx.wear.watchface.ComplicationSlot;

        $r1 = $r0.<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.ComplicationSlot$InvalidateListener invalidateListener>;

        return $r1;
    }

    static void <clinit>()
    {
        androidx.wear.watchface.ComplicationSlot$Companion $r0;
        android.graphics.RectF $r1;

        $r0 = new androidx.wear.watchface.ComplicationSlot$Companion;

        specialinvoke $r0.<androidx.wear.watchface.ComplicationSlot$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.ComplicationSlot$Companion Companion> = $r0;

        $r1 = new android.graphics.RectF;

        specialinvoke $r1.<android.graphics.RectF: void <init>(float,float,float,float)>(0.0F, 0.0F, 1.0F, 1.0F);

        <androidx.wear.watchface.ComplicationSlot: android.graphics.RectF unitSquare> = $r1;

        return;
    }

