androidx.media3.exoplayer.source.MediaSource
<androidx.media3.exoplayer.source.MediaSource: void addEventListener(android.os.Handler,androidx.media3.exoplayer.source.MediaSourceEventListener)>
<androidx.media3.exoplayer.source.MediaSource: void removeEventListener(androidx.media3.exoplayer.source.MediaSourceEventListener)>
<androidx.media3.exoplayer.source.MediaSource: void addDrmEventListener(android.os.Handler,androidx.media3.exoplayer.drm.DrmSessionEventListener)>
<androidx.media3.exoplayer.source.MediaSource: void removeDrmEventListener(androidx.media3.exoplayer.drm.DrmSessionEventListener)>
    public androidx.media3.common.Timeline getInitialTimeline()
    {
        androidx.media3.exoplayer.source.MediaSource r0;

        r0 := @this: androidx.media3.exoplayer.source.MediaSource;

        return null;
    }

    public boolean isSingleWindow()
    {
        androidx.media3.exoplayer.source.MediaSource r0;

        r0 := @this: androidx.media3.exoplayer.source.MediaSource;

        return 1;
    }

<androidx.media3.exoplayer.source.MediaSource: androidx.media3.common.MediaItem getMediaItem()>
    public void prepareSource(androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller, androidx.media3.datasource.TransferListener)
    {
        androidx.media3.exoplayer.source.MediaSource r0;
        androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller r1;
        androidx.media3.datasource.TransferListener r2;
        androidx.media3.exoplayer.analytics.PlayerId $r3;

        r0 := @this: androidx.media3.exoplayer.source.MediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller;

        r2 := @parameter1: androidx.media3.datasource.TransferListener;

        $r3 = <androidx.media3.exoplayer.analytics.PlayerId: androidx.media3.exoplayer.analytics.PlayerId UNSET>;

        interfaceinvoke r0.<androidx.media3.exoplayer.source.MediaSource: void prepareSource(androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller,androidx.media3.datasource.TransferListener,androidx.media3.exoplayer.analytics.PlayerId)>(r1, r2, $r3);

        return;
    }

<androidx.media3.exoplayer.source.MediaSource: void prepareSource(androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller,androidx.media3.datasource.TransferListener,androidx.media3.exoplayer.analytics.PlayerId)>
<androidx.media3.exoplayer.source.MediaSource: void maybeThrowSourceInfoRefreshError()>
<androidx.media3.exoplayer.source.MediaSource: void enable(androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller)>
<androidx.media3.exoplayer.source.MediaSource: androidx.media3.exoplayer.source.MediaPeriod createPeriod(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.upstream.Allocator,long)>
<androidx.media3.exoplayer.source.MediaSource: void releasePeriod(androidx.media3.exoplayer.source.MediaPeriod)>
<androidx.media3.exoplayer.source.MediaSource: void disable(androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller)>
<androidx.media3.exoplayer.source.MediaSource: void releaseSource(androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller)>
androidx.media3.exoplayer.source.MediaSource$Factory
<androidx.media3.exoplayer.source.MediaSource$Factory: androidx.media3.exoplayer.source.MediaSource$Factory UNSUPPORTED>
<androidx.media3.exoplayer.source.MediaSource$Factory: androidx.media3.exoplayer.source.MediaSource$Factory setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider)>
<androidx.media3.exoplayer.source.MediaSource$Factory: androidx.media3.exoplayer.source.MediaSource$Factory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy)>
<androidx.media3.exoplayer.source.MediaSource$Factory: int[] getSupportedTypes()>
<androidx.media3.exoplayer.source.MediaSource$Factory: androidx.media3.exoplayer.source.MediaSource createMediaSource(androidx.media3.common.MediaItem)>
    static void <clinit>()
    {
        androidx.media3.exoplayer.source.MediaSourceFactory $r0;

        $r0 = <androidx.media3.exoplayer.source.MediaSourceFactory: androidx.media3.exoplayer.source.MediaSourceFactory UNSUPPORTED>;

        <androidx.media3.exoplayer.source.MediaSource$Factory: androidx.media3.exoplayer.source.MediaSource$Factory UNSUPPORTED> = $r0;

        return;
    }

androidx.media3.exoplayer.source.MediaSource$MediaPeriodId
    public void <init>(java.lang.Object)
    {
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r0;
        java.lang.Object r1;

        r0 := @this: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<androidx.media3.common.MediaPeriodId: void <init>(java.lang.Object)>(r1);

        return;
    }

    public void <init>(java.lang.Object, long)
    {
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r0;
        java.lang.Object r1;
        long l0;

        r0 := @this: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        r1 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        specialinvoke r0.<androidx.media3.common.MediaPeriodId: void <init>(java.lang.Object,long)>(r1, l0);

        return;
    }

    public void <init>(java.lang.Object, long, int)
    {
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r0;
        java.lang.Object r1;
        long l0;
        int i1;

        r0 := @this: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        r1 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        specialinvoke r0.<androidx.media3.common.MediaPeriodId: void <init>(java.lang.Object,long,int)>(r1, l0, i1);

        return;
    }

    public void <init>(java.lang.Object, int, int, long)
    {
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r0;
        java.lang.Object r1;
        int i0, i1;
        long l2;

        r0 := @this: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        l2 := @parameter3: long;

        specialinvoke r0.<androidx.media3.common.MediaPeriodId: void <init>(java.lang.Object,int,int,long)>(r1, i0, i1, l2);

        return;
    }

    public void <init>(androidx.media3.common.MediaPeriodId)
    {
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r0;
        androidx.media3.common.MediaPeriodId r1;

        r0 := @this: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        r1 := @parameter0: androidx.media3.common.MediaPeriodId;

        specialinvoke r0.<androidx.media3.common.MediaPeriodId: void <init>(androidx.media3.common.MediaPeriodId)>(r1);

        return;
    }

    public androidx.media3.exoplayer.source.MediaSource$MediaPeriodId copyWithPeriodUid(java.lang.Object)
    {
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r0, $r2;
        java.lang.Object r1;
        androidx.media3.common.MediaPeriodId $r3;

        r0 := @this: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        r1 := @parameter0: java.lang.Object;

        $r2 = new androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        $r3 = specialinvoke r0.<androidx.media3.common.MediaPeriodId: androidx.media3.common.MediaPeriodId copyWithPeriodUid(java.lang.Object)>(r1);

        specialinvoke $r2.<androidx.media3.exoplayer.source.MediaSource$MediaPeriodId: void <init>(androidx.media3.common.MediaPeriodId)>($r3);

        return $r2;
    }

    public androidx.media3.exoplayer.source.MediaSource$MediaPeriodId copyWithWindowSequenceNumber(long)
    {
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r0, $r1;
        long l0;
        androidx.media3.common.MediaPeriodId $r2;

        r0 := @this: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        l0 := @parameter0: long;

        $r1 = new androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        $r2 = specialinvoke r0.<androidx.media3.common.MediaPeriodId: androidx.media3.common.MediaPeriodId copyWithWindowSequenceNumber(long)>(l0);

        specialinvoke $r1.<androidx.media3.exoplayer.source.MediaSource$MediaPeriodId: void <init>(androidx.media3.common.MediaPeriodId)>($r2);

        return $r1;
    }

    public volatile androidx.media3.common.MediaPeriodId copyWithWindowSequenceNumber(long)
    {
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r0, $r1;
        long l0;

        r0 := @this: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<androidx.media3.exoplayer.source.MediaSource$MediaPeriodId: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId copyWithWindowSequenceNumber(long)>(l0);

        return $r1;
    }

    public volatile androidx.media3.common.MediaPeriodId copyWithPeriodUid(java.lang.Object)
    {
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r0, $r2;
        java.lang.Object r1;

        r0 := @this: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.source.MediaSource$MediaPeriodId: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId copyWithPeriodUid(java.lang.Object)>(r1);

        return $r2;
    }

androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller
<androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller: void onSourceInfoRefreshed(androidx.media3.exoplayer.source.MediaSource,androidx.media3.common.Timeline)>
