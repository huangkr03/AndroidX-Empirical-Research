junit.framework.JUnit4TestAdapter
<junit.framework.JUnit4TestAdapter: junit.framework.JUnit4TestAdapterCache fCache>
<junit.framework.JUnit4TestAdapter: java.lang.Class fNewTestClass>
<junit.framework.JUnit4TestAdapter: org.junit.runner.Runner fRunner>
    public void <init>(java.lang.Class)
    {
        junit.framework.JUnit4TestAdapter $r0;
        java.lang.Class $r1;
        junit.framework.JUnit4TestAdapterCache $r2;

        $r0 := @this: junit.framework.JUnit4TestAdapter;

        $r1 := @parameter0: java.lang.Class;

        $r2 = staticinvoke <junit.framework.JUnit4TestAdapterCache: junit.framework.JUnit4TestAdapterCache getDefault()>();

        specialinvoke $r0.<junit.framework.JUnit4TestAdapter: void <init>(java.lang.Class,junit.framework.JUnit4TestAdapterCache)>($r1, $r2);

        return;
    }

    public void <init>(java.lang.Class, junit.framework.JUnit4TestAdapterCache)
    {
        junit.framework.JUnit4TestAdapter $r0;
        java.lang.Class $r1;
        junit.framework.JUnit4TestAdapterCache $r2;
        org.junit.runner.Request $r3;
        org.junit.runner.Runner $r4;

        $r0 := @this: junit.framework.JUnit4TestAdapter;

        $r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: junit.framework.JUnit4TestAdapterCache;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<junit.framework.JUnit4TestAdapter: junit.framework.JUnit4TestAdapterCache fCache> = $r2;

        $r0.<junit.framework.JUnit4TestAdapter: java.lang.Class fNewTestClass> = $r1;

        $r3 = staticinvoke <org.junit.runner.Request: org.junit.runner.Request classWithoutSuiteMethod(java.lang.Class)>($r1);

        $r4 = virtualinvoke $r3.<org.junit.runner.Request: org.junit.runner.Runner getRunner()>();

        $r0.<junit.framework.JUnit4TestAdapter: org.junit.runner.Runner fRunner> = $r4;

        return;
    }

    private boolean isIgnored(org.junit.runner.Description)
    {
        junit.framework.JUnit4TestAdapter $r0;
        org.junit.runner.Description $r1;
        java.lang.'annotation'.Annotation $r2;

        $r0 := @this: junit.framework.JUnit4TestAdapter;

        $r1 := @parameter0: org.junit.runner.Description;

        $r2 = virtualinvoke $r1.<org.junit.runner.Description: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lorg/junit/Ignore;");

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    private org.junit.runner.Description removeIgnored(org.junit.runner.Description)
    {
        junit.framework.JUnit4TestAdapter $r0;
        org.junit.runner.Description $r1, $r2;
        boolean $z0;
        java.util.ArrayList $r3;
        java.util.Iterator $r4;
        java.lang.Object $r5;

        $r0 := @this: junit.framework.JUnit4TestAdapter;

        $r1 := @parameter0: org.junit.runner.Description;

        $z0 = specialinvoke $r0.<junit.framework.JUnit4TestAdapter: boolean isIgnored(org.junit.runner.Description)>($r1);

        if $z0 == 0 goto label1;

        $r1 = <org.junit.runner.Description: org.junit.runner.Description EMPTY>;

        return $r1;

     label1:
        $r2 = virtualinvoke $r1.<org.junit.runner.Description: org.junit.runner.Description childlessCopy()>();

        $r3 = virtualinvoke $r1.<org.junit.runner.Description: java.util.ArrayList getChildren()>();

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r1 = (org.junit.runner.Description) $r5;

        $r1 = specialinvoke $r0.<junit.framework.JUnit4TestAdapter: org.junit.runner.Description removeIgnored(org.junit.runner.Description)>($r1);

        $z0 = virtualinvoke $r1.<org.junit.runner.Description: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        virtualinvoke $r2.<org.junit.runner.Description: void addChild(org.junit.runner.Description)>($r1);

        goto label2;

     label3:
        return $r2;
    }

    public int countTestCases()
    {
        junit.framework.JUnit4TestAdapter $r0;
        int $i0;
        org.junit.runner.Runner $r1;

        $r0 := @this: junit.framework.JUnit4TestAdapter;

        $r1 = $r0.<junit.framework.JUnit4TestAdapter: org.junit.runner.Runner fRunner>;

        $i0 = virtualinvoke $r1.<org.junit.runner.Runner: int testCount()>();

        return $i0;
    }

    public void filter(org.junit.runner.manipulation.Filter) throws org.junit.runner.manipulation.NoTestsRemainException
    {
        junit.framework.JUnit4TestAdapter $r0;
        org.junit.runner.manipulation.Filter $r1;
        org.junit.runner.Runner $r2;

        $r0 := @this: junit.framework.JUnit4TestAdapter;

        $r1 := @parameter0: org.junit.runner.manipulation.Filter;

        $r2 = $r0.<junit.framework.JUnit4TestAdapter: org.junit.runner.Runner fRunner>;

        virtualinvoke $r1.<org.junit.runner.manipulation.Filter: void apply(java.lang.Object)>($r2);

        return;
    }

    public org.junit.runner.Description getDescription()
    {
        junit.framework.JUnit4TestAdapter $r0;
        org.junit.runner.Runner $r1;
        org.junit.runner.Description $r2;

        $r0 := @this: junit.framework.JUnit4TestAdapter;

        $r1 = $r0.<junit.framework.JUnit4TestAdapter: org.junit.runner.Runner fRunner>;

        $r2 = virtualinvoke $r1.<org.junit.runner.Runner: org.junit.runner.Description getDescription()>();

        $r2 = specialinvoke $r0.<junit.framework.JUnit4TestAdapter: org.junit.runner.Description removeIgnored(org.junit.runner.Description)>($r2);

        return $r2;
    }

    public java.lang.Class getTestClass()
    {
        junit.framework.JUnit4TestAdapter $r0;
        java.lang.Class r1;

        $r0 := @this: junit.framework.JUnit4TestAdapter;

        r1 = $r0.<junit.framework.JUnit4TestAdapter: java.lang.Class fNewTestClass>;

        return r1;
    }

    public java.util.List getTests()
    {
        junit.framework.JUnit4TestAdapter $r0;
        junit.framework.JUnit4TestAdapterCache $r1;
        org.junit.runner.Description $r2;
        java.util.List $r3;

        $r0 := @this: junit.framework.JUnit4TestAdapter;

        $r1 = $r0.<junit.framework.JUnit4TestAdapter: junit.framework.JUnit4TestAdapterCache fCache>;

        $r2 = virtualinvoke $r0.<junit.framework.JUnit4TestAdapter: org.junit.runner.Description getDescription()>();

        $r3 = virtualinvoke $r1.<junit.framework.JUnit4TestAdapterCache: java.util.List asTestList(org.junit.runner.Description)>($r2);

        return $r3;
    }

    public void run(junit.framework.TestResult)
    {
        junit.framework.JUnit4TestAdapter $r0;
        junit.framework.TestResult $r1;
        org.junit.runner.Runner $r2;
        org.junit.runner.notification.RunNotifier $r3;
        junit.framework.JUnit4TestAdapterCache $r4;

        $r0 := @this: junit.framework.JUnit4TestAdapter;

        $r1 := @parameter0: junit.framework.TestResult;

        $r2 = $r0.<junit.framework.JUnit4TestAdapter: org.junit.runner.Runner fRunner>;

        $r4 = $r0.<junit.framework.JUnit4TestAdapter: junit.framework.JUnit4TestAdapterCache fCache>;

        $r3 = virtualinvoke $r4.<junit.framework.JUnit4TestAdapterCache: org.junit.runner.notification.RunNotifier getNotifier(junit.framework.TestResult,junit.framework.JUnit4TestAdapter)>($r1, $r0);

        virtualinvoke $r2.<org.junit.runner.Runner: void run(org.junit.runner.notification.RunNotifier)>($r3);

        return;
    }

    public void sort(org.junit.runner.manipulation.Sorter)
    {
        junit.framework.JUnit4TestAdapter $r0;
        org.junit.runner.manipulation.Sorter $r1;
        org.junit.runner.Runner $r2;

        $r0 := @this: junit.framework.JUnit4TestAdapter;

        $r1 := @parameter0: org.junit.runner.manipulation.Sorter;

        $r2 = $r0.<junit.framework.JUnit4TestAdapter: org.junit.runner.Runner fRunner>;

        virtualinvoke $r1.<org.junit.runner.manipulation.Sorter: void apply(java.lang.Object)>($r2);

        return;
    }

    public java.lang.String toString()
    {
        junit.framework.JUnit4TestAdapter $r0;
        java.lang.String $r1;
        java.lang.Class $r2;

        $r0 := @this: junit.framework.JUnit4TestAdapter;

        $r2 = $r0.<junit.framework.JUnit4TestAdapter: java.lang.Class fNewTestClass>;

        $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        return $r1;
    }

