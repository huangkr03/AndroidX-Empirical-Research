androidx.webkit.internal.WebMessagePortImpl
<androidx.webkit.internal.WebMessagePortImpl: android.webkit.WebMessagePort mFrameworksImpl>
<androidx.webkit.internal.WebMessagePortImpl: org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface mBoundaryInterface>
    public void <init>(android.webkit.WebMessagePort)
    {
        androidx.webkit.internal.WebMessagePortImpl r0;
        android.webkit.WebMessagePort r1;

        r0 := @this: androidx.webkit.internal.WebMessagePortImpl;

        r1 := @parameter0: android.webkit.WebMessagePort;

        specialinvoke r0.<androidx.webkit.WebMessagePortCompat: void <init>()>();

        r0.<androidx.webkit.internal.WebMessagePortImpl: android.webkit.WebMessagePort mFrameworksImpl> = r1;

        return;
    }

    public void <init>(java.lang.reflect.InvocationHandler)
    {
        androidx.webkit.internal.WebMessagePortImpl r0;
        java.lang.reflect.InvocationHandler r1;
        java.lang.Object $r2;
        org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface $r3;

        r0 := @this: androidx.webkit.internal.WebMessagePortImpl;

        r1 := @parameter0: java.lang.reflect.InvocationHandler;

        specialinvoke r0.<androidx.webkit.WebMessagePortCompat: void <init>()>();

        $r2 = staticinvoke <org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil: java.lang.Object castToSuppLibClass(java.lang.Class,java.lang.reflect.InvocationHandler)>(class "Lorg/chromium/support_lib_boundary/WebMessagePortBoundaryInterface;", r1);

        $r3 = (org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface) $r2;

        r0.<androidx.webkit.internal.WebMessagePortImpl: org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface mBoundaryInterface> = $r3;

        return;
    }

    private android.webkit.WebMessagePort getFrameworksImpl()
    {
        androidx.webkit.internal.WebMessagePortImpl r0;
        android.webkit.WebMessagePort $r1, $r2, $r6;
        androidx.webkit.internal.WebkitToCompatConverter $r3;
        org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface $r4;
        java.lang.reflect.InvocationHandler $r5;

        r0 := @this: androidx.webkit.internal.WebMessagePortImpl;

        $r1 = r0.<androidx.webkit.internal.WebMessagePortImpl: android.webkit.WebMessagePort mFrameworksImpl>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <androidx.webkit.internal.WebViewGlueCommunicator: androidx.webkit.internal.WebkitToCompatConverter getCompatConverter()>();

        $r4 = r0.<androidx.webkit.internal.WebMessagePortImpl: org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface mBoundaryInterface>;

        $r5 = staticinvoke <java.lang.reflect.Proxy: java.lang.reflect.InvocationHandler getInvocationHandler(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r3.<androidx.webkit.internal.WebkitToCompatConverter: android.webkit.WebMessagePort convertWebMessagePort(java.lang.reflect.InvocationHandler)>($r5);

        r0.<androidx.webkit.internal.WebMessagePortImpl: android.webkit.WebMessagePort mFrameworksImpl> = $r6;

     label1:
        $r2 = r0.<androidx.webkit.internal.WebMessagePortImpl: android.webkit.WebMessagePort mFrameworksImpl>;

        return $r2;
    }

    private org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface getBoundaryInterface()
    {
        androidx.webkit.internal.WebMessagePortImpl r0;
        org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface $r1, $r2, $r7;
        androidx.webkit.internal.WebkitToCompatConverter $r3;
        android.webkit.WebMessagePort $r4;
        java.lang.reflect.InvocationHandler $r5;
        java.lang.Object $r6;

        r0 := @this: androidx.webkit.internal.WebMessagePortImpl;

        $r1 = r0.<androidx.webkit.internal.WebMessagePortImpl: org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface mBoundaryInterface>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <androidx.webkit.internal.WebViewGlueCommunicator: androidx.webkit.internal.WebkitToCompatConverter getCompatConverter()>();

        $r4 = r0.<androidx.webkit.internal.WebMessagePortImpl: android.webkit.WebMessagePort mFrameworksImpl>;

        $r5 = virtualinvoke $r3.<androidx.webkit.internal.WebkitToCompatConverter: java.lang.reflect.InvocationHandler convertWebMessagePort(android.webkit.WebMessagePort)>($r4);

        $r6 = staticinvoke <org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil: java.lang.Object castToSuppLibClass(java.lang.Class,java.lang.reflect.InvocationHandler)>(class "Lorg/chromium/support_lib_boundary/WebMessagePortBoundaryInterface;", $r5);

        $r7 = (org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface) $r6;

        r0.<androidx.webkit.internal.WebMessagePortImpl: org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface mBoundaryInterface> = $r7;

     label1:
        $r2 = r0.<androidx.webkit.internal.WebMessagePortImpl: org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface mBoundaryInterface>;

        return $r2;
    }

    public void postMessage(androidx.webkit.WebMessageCompat)
    {
        androidx.webkit.internal.WebMessagePortImpl r0;
        androidx.webkit.WebMessageCompat r1;
        androidx.webkit.internal.WebViewFeatureInternal r2;
        boolean $z0, $z1;
        java.lang.UnsupportedOperationException $r3;
        org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface $r4;
        androidx.webkit.internal.WebMessageAdapter $r5;
        java.lang.reflect.InvocationHandler $r6;
        android.webkit.WebMessagePort $r7;
        android.webkit.WebMessage $r8;

        r0 := @this: androidx.webkit.internal.WebMessagePortImpl;

        r1 := @parameter0: androidx.webkit.WebMessageCompat;

        r2 = staticinvoke <androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal getFeature(java.lang.String)>("WEB_MESSAGE_PORT_POST_MESSAGE");

        $z0 = virtualinvoke r2.<androidx.webkit.internal.WebViewFeatureInternal: boolean isSupportedByFramework()>();

        if $z0 == 0 goto label1;

        $r7 = specialinvoke r0.<androidx.webkit.internal.WebMessagePortImpl: android.webkit.WebMessagePort getFrameworksImpl()>();

        $r8 = staticinvoke <androidx.webkit.internal.WebMessagePortImpl: android.webkit.WebMessage compatToFrameworkMessage(androidx.webkit.WebMessageCompat)>(r1);

        virtualinvoke $r7.<android.webkit.WebMessagePort: void postMessage(android.webkit.WebMessage)>($r8);

        goto label3;

     label1:
        $z1 = virtualinvoke r2.<androidx.webkit.internal.WebViewFeatureInternal: boolean isSupportedByWebView()>();

        if $z1 == 0 goto label2;

        $r4 = specialinvoke r0.<androidx.webkit.internal.WebMessagePortImpl: org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface getBoundaryInterface()>();

        $r5 = new androidx.webkit.internal.WebMessageAdapter;

        specialinvoke $r5.<androidx.webkit.internal.WebMessageAdapter: void <init>(androidx.webkit.WebMessageCompat)>(r1);

        $r6 = staticinvoke <org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil: java.lang.reflect.InvocationHandler createInvocationHandlerFor(java.lang.Object)>($r5);

        interfaceinvoke $r4.<org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void postMessage(java.lang.reflect.InvocationHandler)>($r6);

        goto label3;

     label2:
        $r3 = staticinvoke <androidx.webkit.internal.WebViewFeatureInternal: java.lang.UnsupportedOperationException getUnsupportedOperationException()>();

        throw $r3;

     label3:
        return;
    }

    public void close()
    {
        androidx.webkit.internal.WebMessagePortImpl r0;
        androidx.webkit.internal.WebViewFeatureInternal r1;
        boolean $z0, $z1;
        java.lang.UnsupportedOperationException $r2;
        org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface $r3;
        android.webkit.WebMessagePort $r4;

        r0 := @this: androidx.webkit.internal.WebMessagePortImpl;

        r1 = staticinvoke <androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal getFeature(java.lang.String)>("WEB_MESSAGE_PORT_CLOSE");

        $z0 = virtualinvoke r1.<androidx.webkit.internal.WebViewFeatureInternal: boolean isSupportedByFramework()>();

        if $z0 == 0 goto label1;

        $r4 = specialinvoke r0.<androidx.webkit.internal.WebMessagePortImpl: android.webkit.WebMessagePort getFrameworksImpl()>();

        virtualinvoke $r4.<android.webkit.WebMessagePort: void close()>();

        goto label3;

     label1:
        $z1 = virtualinvoke r1.<androidx.webkit.internal.WebViewFeatureInternal: boolean isSupportedByWebView()>();

        if $z1 == 0 goto label2;

        $r3 = specialinvoke r0.<androidx.webkit.internal.WebMessagePortImpl: org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface getBoundaryInterface()>();

        interfaceinvoke $r3.<org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void close()>();

        goto label3;

     label2:
        $r2 = staticinvoke <androidx.webkit.internal.WebViewFeatureInternal: java.lang.UnsupportedOperationException getUnsupportedOperationException()>();

        throw $r2;

     label3:
        return;
    }

    public void setWebMessageCallback(androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat)
    {
        androidx.webkit.internal.WebMessagePortImpl r0;
        androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat r1;
        androidx.webkit.internal.WebViewFeatureInternal r2;
        boolean $z0, $z1;
        java.lang.UnsupportedOperationException $r3;
        org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface $r4;
        androidx.webkit.internal.WebMessageCallbackAdapter $r5;
        java.lang.reflect.InvocationHandler $r6;
        android.webkit.WebMessagePort $r7;
        androidx.webkit.internal.WebMessagePortImpl$1 $r8;

        r0 := @this: androidx.webkit.internal.WebMessagePortImpl;

        r1 := @parameter0: androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat;

        r2 = staticinvoke <androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal getFeature(java.lang.String)>("WEB_MESSAGE_PORT_SET_MESSAGE_CALLBACK");

        $z0 = virtualinvoke r2.<androidx.webkit.internal.WebViewFeatureInternal: boolean isSupportedByFramework()>();

        if $z0 == 0 goto label1;

        $r7 = specialinvoke r0.<androidx.webkit.internal.WebMessagePortImpl: android.webkit.WebMessagePort getFrameworksImpl()>();

        $r8 = new androidx.webkit.internal.WebMessagePortImpl$1;

        specialinvoke $r8.<androidx.webkit.internal.WebMessagePortImpl$1: void <init>(androidx.webkit.internal.WebMessagePortImpl,androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat)>(r0, r1);

        virtualinvoke $r7.<android.webkit.WebMessagePort: void setWebMessageCallback(android.webkit.WebMessagePort$WebMessageCallback)>($r8);

        goto label3;

     label1:
        $z1 = virtualinvoke r2.<androidx.webkit.internal.WebViewFeatureInternal: boolean isSupportedByWebView()>();

        if $z1 == 0 goto label2;

        $r4 = specialinvoke r0.<androidx.webkit.internal.WebMessagePortImpl: org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface getBoundaryInterface()>();

        $r5 = new androidx.webkit.internal.WebMessageCallbackAdapter;

        specialinvoke $r5.<androidx.webkit.internal.WebMessageCallbackAdapter: void <init>(androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat)>(r1);

        $r6 = staticinvoke <org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil: java.lang.reflect.InvocationHandler createInvocationHandlerFor(java.lang.Object)>($r5);

        interfaceinvoke $r4.<org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void setWebMessageCallback(java.lang.reflect.InvocationHandler)>($r6);

        goto label3;

     label2:
        $r3 = staticinvoke <androidx.webkit.internal.WebViewFeatureInternal: java.lang.UnsupportedOperationException getUnsupportedOperationException()>();

        throw $r3;

     label3:
        return;
    }

    public void setWebMessageCallback(android.os.Handler, androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat)
    {
        androidx.webkit.internal.WebMessagePortImpl r0;
        android.os.Handler r1;
        androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat r2;
        androidx.webkit.internal.WebViewFeatureInternal r3;
        boolean $z0, $z1;
        java.lang.UnsupportedOperationException $r4;
        org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface $r5;
        androidx.webkit.internal.WebMessageCallbackAdapter $r6;
        java.lang.reflect.InvocationHandler $r7;
        android.webkit.WebMessagePort $r8;
        androidx.webkit.internal.WebMessagePortImpl$2 $r9;

        r0 := @this: androidx.webkit.internal.WebMessagePortImpl;

        r1 := @parameter0: android.os.Handler;

        r2 := @parameter1: androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat;

        r3 = staticinvoke <androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal getFeature(java.lang.String)>("CREATE_WEB_MESSAGE_CHANNEL");

        $z0 = virtualinvoke r3.<androidx.webkit.internal.WebViewFeatureInternal: boolean isSupportedByFramework()>();

        if $z0 == 0 goto label1;

        $r8 = specialinvoke r0.<androidx.webkit.internal.WebMessagePortImpl: android.webkit.WebMessagePort getFrameworksImpl()>();

        $r9 = new androidx.webkit.internal.WebMessagePortImpl$2;

        specialinvoke $r9.<androidx.webkit.internal.WebMessagePortImpl$2: void <init>(androidx.webkit.internal.WebMessagePortImpl,androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat)>(r0, r2);

        virtualinvoke $r8.<android.webkit.WebMessagePort: void setWebMessageCallback(android.webkit.WebMessagePort$WebMessageCallback,android.os.Handler)>($r9, r1);

        goto label3;

     label1:
        $z1 = virtualinvoke r3.<androidx.webkit.internal.WebViewFeatureInternal: boolean isSupportedByWebView()>();

        if $z1 == 0 goto label2;

        $r5 = specialinvoke r0.<androidx.webkit.internal.WebMessagePortImpl: org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface getBoundaryInterface()>();

        $r6 = new androidx.webkit.internal.WebMessageCallbackAdapter;

        specialinvoke $r6.<androidx.webkit.internal.WebMessageCallbackAdapter: void <init>(androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat)>(r2);

        $r7 = staticinvoke <org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil: java.lang.reflect.InvocationHandler createInvocationHandlerFor(java.lang.Object)>($r6);

        interfaceinvoke $r5.<org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void setWebMessageCallback(java.lang.reflect.InvocationHandler,android.os.Handler)>($r7, r1);

        goto label3;

     label2:
        $r4 = staticinvoke <androidx.webkit.internal.WebViewFeatureInternal: java.lang.UnsupportedOperationException getUnsupportedOperationException()>();

        throw $r4;

     label3:
        return;
    }

    public android.webkit.WebMessagePort getFrameworkPort()
    {
        androidx.webkit.internal.WebMessagePortImpl r0;
        android.webkit.WebMessagePort $r1;

        r0 := @this: androidx.webkit.internal.WebMessagePortImpl;

        $r1 = specialinvoke r0.<androidx.webkit.internal.WebMessagePortImpl: android.webkit.WebMessagePort getFrameworksImpl()>();

        return $r1;
    }

    public java.lang.reflect.InvocationHandler getInvocationHandler()
    {
        androidx.webkit.internal.WebMessagePortImpl r0;
        org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface $r1;
        java.lang.reflect.InvocationHandler $r2;

        r0 := @this: androidx.webkit.internal.WebMessagePortImpl;

        $r1 = specialinvoke r0.<androidx.webkit.internal.WebMessagePortImpl: org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface getBoundaryInterface()>();

        $r2 = staticinvoke <java.lang.reflect.Proxy: java.lang.reflect.InvocationHandler getInvocationHandler(java.lang.Object)>($r1);

        return $r2;
    }

    public static androidx.webkit.WebMessagePortCompat[] portsToCompat(android.webkit.WebMessagePort[])
    {
        android.webkit.WebMessagePort[] r0;
        androidx.webkit.WebMessagePortCompat[] r1;
        int $i0, $i1, i2;
        androidx.webkit.internal.WebMessagePortImpl $r2;
        android.webkit.WebMessagePort $r3;

        r0 := @parameter0: android.webkit.WebMessagePort[];

        if r0 != null goto label1;

        return null;

     label1:
        $i0 = lengthof r0;

        r1 = newarray (androidx.webkit.WebMessagePortCompat)[$i0];

        i2 = 0;

     label2:
        $i1 = lengthof r0;

        if i2 >= $i1 goto label3;

        $r2 = new androidx.webkit.internal.WebMessagePortImpl;

        $r3 = r0[i2];

        specialinvoke $r2.<androidx.webkit.internal.WebMessagePortImpl: void <init>(android.webkit.WebMessagePort)>($r3);

        r1[i2] = $r2;

        i2 = i2 + 1;

        goto label2;

     label3:
        return r1;
    }

    public static android.webkit.WebMessagePort[] compatToPorts(androidx.webkit.WebMessagePortCompat[])
    {
        androidx.webkit.WebMessagePortCompat[] r0;
        android.webkit.WebMessagePort[] r1;
        int $i0, $i1, i2;
        androidx.webkit.WebMessagePortCompat $r2;
        android.webkit.WebMessagePort $r3;

        r0 := @parameter0: androidx.webkit.WebMessagePortCompat[];

        if r0 != null goto label1;

        return null;

     label1:
        $i0 = lengthof r0;

        r1 = newarray (android.webkit.WebMessagePort)[$i0];

        i2 = 0;

     label2:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label3;

        $r2 = r0[i2];

        $r3 = virtualinvoke $r2.<androidx.webkit.WebMessagePortCompat: android.webkit.WebMessagePort getFrameworkPort()>();

        r1[i2] = $r3;

        i2 = i2 + 1;

        goto label2;

     label3:
        return r1;
    }

    public static android.webkit.WebMessage compatToFrameworkMessage(androidx.webkit.WebMessageCompat)
    {
        androidx.webkit.WebMessageCompat r0;
        android.webkit.WebMessage $r1;
        java.lang.String $r2;
        androidx.webkit.WebMessagePortCompat[] $r3;
        android.webkit.WebMessagePort[] $r4;

        r0 := @parameter0: androidx.webkit.WebMessageCompat;

        $r1 = new android.webkit.WebMessage;

        $r2 = virtualinvoke r0.<androidx.webkit.WebMessageCompat: java.lang.String getData()>();

        $r3 = virtualinvoke r0.<androidx.webkit.WebMessageCompat: androidx.webkit.WebMessagePortCompat[] getPorts()>();

        $r4 = staticinvoke <androidx.webkit.internal.WebMessagePortImpl: android.webkit.WebMessagePort[] compatToPorts(androidx.webkit.WebMessagePortCompat[])>($r3);

        specialinvoke $r1.<android.webkit.WebMessage: void <init>(java.lang.String,android.webkit.WebMessagePort[])>($r2, $r4);

        return $r1;
    }

    public static androidx.webkit.WebMessageCompat frameworkMessageToCompat(android.webkit.WebMessage)
    {
        android.webkit.WebMessage r0;
        androidx.webkit.WebMessageCompat $r1;
        java.lang.String $r2;
        android.webkit.WebMessagePort[] $r3;
        androidx.webkit.WebMessagePortCompat[] $r4;

        r0 := @parameter0: android.webkit.WebMessage;

        $r1 = new androidx.webkit.WebMessageCompat;

        $r2 = virtualinvoke r0.<android.webkit.WebMessage: java.lang.String getData()>();

        $r3 = virtualinvoke r0.<android.webkit.WebMessage: android.webkit.WebMessagePort[] getPorts()>();

        $r4 = staticinvoke <androidx.webkit.internal.WebMessagePortImpl: androidx.webkit.WebMessagePortCompat[] portsToCompat(android.webkit.WebMessagePort[])>($r3);

        specialinvoke $r1.<androidx.webkit.WebMessageCompat: void <init>(java.lang.String,androidx.webkit.WebMessagePortCompat[])>($r2, $r4);

        return $r1;
    }

androidx.webkit.internal.WebMessagePortImpl$1
<androidx.webkit.internal.WebMessagePortImpl$1: androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat val$callback>
<androidx.webkit.internal.WebMessagePortImpl$1: androidx.webkit.internal.WebMessagePortImpl this$0>
    void <init>(androidx.webkit.internal.WebMessagePortImpl, androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat)
    {
        androidx.webkit.internal.WebMessagePortImpl$1 r0;
        androidx.webkit.internal.WebMessagePortImpl r1;
        androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat r2;

        r0 := @this: androidx.webkit.internal.WebMessagePortImpl$1;

        r1 := @parameter0: androidx.webkit.internal.WebMessagePortImpl;

        r2 := @parameter1: androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat;

        r0.<androidx.webkit.internal.WebMessagePortImpl$1: androidx.webkit.internal.WebMessagePortImpl this$0> = r1;

        r0.<androidx.webkit.internal.WebMessagePortImpl$1: androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat val$callback> = r2;

        specialinvoke r0.<android.webkit.WebMessagePort$WebMessageCallback: void <init>()>();

        return;
    }

    public void onMessage(android.webkit.WebMessagePort, android.webkit.WebMessage)
    {
        androidx.webkit.internal.WebMessagePortImpl$1 r0;
        android.webkit.WebMessagePort r1;
        android.webkit.WebMessage r2;
        androidx.webkit.internal.WebMessagePortImpl $r3;
        androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat $r4;
        androidx.webkit.WebMessageCompat $r5;

        r0 := @this: androidx.webkit.internal.WebMessagePortImpl$1;

        r1 := @parameter0: android.webkit.WebMessagePort;

        r2 := @parameter1: android.webkit.WebMessage;

        $r4 = r0.<androidx.webkit.internal.WebMessagePortImpl$1: androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat val$callback>;

        $r3 = new androidx.webkit.internal.WebMessagePortImpl;

        specialinvoke $r3.<androidx.webkit.internal.WebMessagePortImpl: void <init>(android.webkit.WebMessagePort)>(r1);

        $r5 = staticinvoke <androidx.webkit.internal.WebMessagePortImpl: androidx.webkit.WebMessageCompat frameworkMessageToCompat(android.webkit.WebMessage)>(r2);

        virtualinvoke $r4.<androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat: void onMessage(androidx.webkit.WebMessagePortCompat,androidx.webkit.WebMessageCompat)>($r3, $r5);

        return;
    }

androidx.webkit.internal.WebMessagePortImpl$2
<androidx.webkit.internal.WebMessagePortImpl$2: androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat val$callback>
<androidx.webkit.internal.WebMessagePortImpl$2: androidx.webkit.internal.WebMessagePortImpl this$0>
    void <init>(androidx.webkit.internal.WebMessagePortImpl, androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat)
    {
        androidx.webkit.internal.WebMessagePortImpl$2 r0;
        androidx.webkit.internal.WebMessagePortImpl r1;
        androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat r2;

        r0 := @this: androidx.webkit.internal.WebMessagePortImpl$2;

        r1 := @parameter0: androidx.webkit.internal.WebMessagePortImpl;

        r2 := @parameter1: androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat;

        r0.<androidx.webkit.internal.WebMessagePortImpl$2: androidx.webkit.internal.WebMessagePortImpl this$0> = r1;

        r0.<androidx.webkit.internal.WebMessagePortImpl$2: androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat val$callback> = r2;

        specialinvoke r0.<android.webkit.WebMessagePort$WebMessageCallback: void <init>()>();

        return;
    }

    public void onMessage(android.webkit.WebMessagePort, android.webkit.WebMessage)
    {
        androidx.webkit.internal.WebMessagePortImpl$2 r0;
        android.webkit.WebMessagePort r1;
        android.webkit.WebMessage r2;
        androidx.webkit.internal.WebMessagePortImpl $r3;
        androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat $r4;
        androidx.webkit.WebMessageCompat $r5;

        r0 := @this: androidx.webkit.internal.WebMessagePortImpl$2;

        r1 := @parameter0: android.webkit.WebMessagePort;

        r2 := @parameter1: android.webkit.WebMessage;

        $r4 = r0.<androidx.webkit.internal.WebMessagePortImpl$2: androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat val$callback>;

        $r3 = new androidx.webkit.internal.WebMessagePortImpl;

        specialinvoke $r3.<androidx.webkit.internal.WebMessagePortImpl: void <init>(android.webkit.WebMessagePort)>(r1);

        $r5 = staticinvoke <androidx.webkit.internal.WebMessagePortImpl: androidx.webkit.WebMessageCompat frameworkMessageToCompat(android.webkit.WebMessage)>(r2);

        virtualinvoke $r4.<androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat: void onMessage(androidx.webkit.WebMessagePortCompat,androidx.webkit.WebMessageCompat)>($r3, $r5);

        return;
    }

