androidx.ui.core.gesture.util.Vector
<androidx.ui.core.gesture.util.Vector: int length>
<androidx.ui.core.gesture.util.Vector: java.lang.Float[] elements>
    public void <init>(int)
    {
        androidx.ui.core.gesture.util.Vector r0;
        int i0, i1, i2, i3;
        java.lang.Float[] r1;
        java.lang.Float $r2;

        r0 := @this: androidx.ui.core.gesture.util.Vector;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.ui.core.gesture.util.Vector: int length> = i0;

        i3 = 0;

        i1 = virtualinvoke r0.<androidx.ui.core.gesture.util.Vector: int getLength()>();

        r1 = newarray (java.lang.Float)[i1];

     label1:
        if i3 >= i1 goto label2;

        i2 = i3;

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

        r1[i2] = $r2;

        i3 = i3 + 1;

        goto label1;

     label2:
        r0.<androidx.ui.core.gesture.util.Vector: java.lang.Float[] elements> = r1;

        return;
    }

    public final int getLength()
    {
        androidx.ui.core.gesture.util.Vector r0;
        int $i0;

        r0 := @this: androidx.ui.core.gesture.util.Vector;

        $i0 = r0.<androidx.ui.core.gesture.util.Vector: int length>;

        return $i0;
    }

    public final java.lang.Float[] getElements()
    {
        androidx.ui.core.gesture.util.Vector r0;
        java.lang.Float[] $r1;

        r0 := @this: androidx.ui.core.gesture.util.Vector;

        $r1 = r0.<androidx.ui.core.gesture.util.Vector: java.lang.Float[] elements>;

        return $r1;
    }

    public final float get(int)
    {
        androidx.ui.core.gesture.util.Vector r0;
        int i0;
        java.lang.Float[] $r1;
        java.lang.Float $r2;
        float $f0;

        r0 := @this: androidx.ui.core.gesture.util.Vector;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.ui.core.gesture.util.Vector: java.lang.Float[] getElements()>();

        $r2 = $r1[i0];

        $f0 = virtualinvoke $r2.<java.lang.Float: float floatValue()>();

        return $f0;
    }

    public final void set(int, float)
    {
        androidx.ui.core.gesture.util.Vector r0;
        int i0;
        float f0;
        java.lang.Float[] $r1;
        java.lang.Float $r2;

        r0 := @this: androidx.ui.core.gesture.util.Vector;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $r1 = virtualinvoke r0.<androidx.ui.core.gesture.util.Vector: java.lang.Float[] getElements()>();

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        $r1[i0] = $r2;

        return;
    }

    public final float times(androidx.ui.core.gesture.util.Vector)
    {
        androidx.ui.core.gesture.util.Vector r0, r1;
        int i0, i1, i2, i3;
        float $f0, $f1, $f2, f3;

        r0 := @this: androidx.ui.core.gesture.util.Vector;

        r1 := @parameter0: androidx.ui.core.gesture.util.Vector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "a");

        f3 = 0.0F;

        i0 = virtualinvoke r0.<androidx.ui.core.gesture.util.Vector: int getLength()>();

        i3 = 0;

        i1 = i0 + -1;

        if i0 == -2147483648 goto label2;

        if i3 > i1 goto label2;

     label1:
        i2 = i3;

        i3 = i3 + 1;

        $f0 = virtualinvoke r0.<androidx.ui.core.gesture.util.Vector: float get(int)>(i2);

        $f1 = virtualinvoke r1.<androidx.ui.core.gesture.util.Vector: float get(int)>(i2);

        $f2 = $f0 * $f1;

        f3 = f3 + $f2;

        if i3 <= i1 goto label1;

     label2:
        return f3;
    }

    public final float norm()
    {
        androidx.ui.core.gesture.util.Vector r0;
        float f0, $f1;
        boolean z0;
        double $d0, $d1;

        r0 := @this: androidx.ui.core.gesture.util.Vector;

        f0 = virtualinvoke r0.<androidx.ui.core.gesture.util.Vector: float times(androidx.ui.core.gesture.util.Vector)>(r0);

        z0 = 0;

        $d0 = (double) f0;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f1 = (float) $d1;

        return $f1;
    }

