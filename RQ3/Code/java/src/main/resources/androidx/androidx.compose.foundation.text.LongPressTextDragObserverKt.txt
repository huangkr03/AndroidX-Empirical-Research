androidx.compose.foundation.text.LongPressTextDragObserverKt
    public static final java.lang.Object detectDragGesturesAfterLongPressWithObserver(androidx.compose.ui.input.pointer.PointerInputScope, androidx.compose.foundation.text.TextDragObserver, kotlin.coroutines.Continuation)
    {
        androidx.compose.ui.input.pointer.PointerInputScope $r0;
        androidx.compose.foundation.text.TextDragObserver r1;
        kotlin.coroutines.Continuation $r2;
        androidx.compose.foundation.text.LongPressTextDragObserverKt$detectDragGesturesAfterLongPressWithObserver$2 $r3;
        androidx.compose.foundation.text.LongPressTextDragObserverKt$detectDragGesturesAfterLongPressWithObserver$3 $r4;
        kotlin.jvm.functions.Function1 $r5;
        androidx.compose.foundation.text.LongPressTextDragObserverKt$detectDragGesturesAfterLongPressWithObserver$4 $r6;
        kotlin.jvm.functions.Function0 $r7, $r9;
        androidx.compose.foundation.text.LongPressTextDragObserverKt$detectDragGesturesAfterLongPressWithObserver$5 $r8;
        kotlin.jvm.functions.Function2 $r10;
        java.lang.Object $r11, $r12;
        kotlin.Unit $r13;

        $r0 := @parameter0: androidx.compose.ui.input.pointer.PointerInputScope;

        r1 := @parameter1: androidx.compose.foundation.text.TextDragObserver;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = new androidx.compose.foundation.text.LongPressTextDragObserverKt$detectDragGesturesAfterLongPressWithObserver$2;

        specialinvoke $r3.<androidx.compose.foundation.text.LongPressTextDragObserverKt$detectDragGesturesAfterLongPressWithObserver$2: void <init>(androidx.compose.foundation.text.TextDragObserver)>(r1);

        $r5 = (kotlin.jvm.functions.Function1) $r3;

        $r4 = new androidx.compose.foundation.text.LongPressTextDragObserverKt$detectDragGesturesAfterLongPressWithObserver$3;

        specialinvoke $r4.<androidx.compose.foundation.text.LongPressTextDragObserverKt$detectDragGesturesAfterLongPressWithObserver$3: void <init>(androidx.compose.foundation.text.TextDragObserver)>(r1);

        $r7 = (kotlin.jvm.functions.Function0) $r4;

        $r6 = new androidx.compose.foundation.text.LongPressTextDragObserverKt$detectDragGesturesAfterLongPressWithObserver$4;

        specialinvoke $r6.<androidx.compose.foundation.text.LongPressTextDragObserverKt$detectDragGesturesAfterLongPressWithObserver$4: void <init>(androidx.compose.foundation.text.TextDragObserver)>(r1);

        $r9 = (kotlin.jvm.functions.Function0) $r6;

        $r8 = new androidx.compose.foundation.text.LongPressTextDragObserverKt$detectDragGesturesAfterLongPressWithObserver$5;

        specialinvoke $r8.<androidx.compose.foundation.text.LongPressTextDragObserverKt$detectDragGesturesAfterLongPressWithObserver$5: void <init>(androidx.compose.foundation.text.TextDragObserver)>(r1);

        $r10 = (kotlin.jvm.functions.Function2) $r8;

        $r11 = staticinvoke <androidx.compose.foundation.gestures.DragGestureDetectorKt: java.lang.Object detectDragGesturesAfterLongPress(androidx.compose.ui.input.pointer.PointerInputScope,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r0, $r5, $r7, $r9, $r10, $r2);

        $r12 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r11 != $r12 goto label1;

        return $r11;

     label1:
        $r13 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r13;
    }

    public static final java.lang.Object detectDownAndDragGesturesWithObserver(androidx.compose.ui.input.pointer.PointerInputScope, androidx.compose.foundation.text.TextDragObserver, kotlin.coroutines.Continuation)
    {
        androidx.compose.ui.input.pointer.PointerInputScope $r0;
        androidx.compose.foundation.text.TextDragObserver r1;
        kotlin.coroutines.Continuation $r2;
        androidx.compose.foundation.text.LongPressTextDragObserverKt$detectDownAndDragGesturesWithObserver$2 $r3;
        kotlin.jvm.functions.Function2 $r4;
        java.lang.Object $r5, $r6;
        kotlin.Unit $r7;

        $r0 := @parameter0: androidx.compose.ui.input.pointer.PointerInputScope;

        r1 := @parameter1: androidx.compose.foundation.text.TextDragObserver;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = new androidx.compose.foundation.text.LongPressTextDragObserverKt$detectDownAndDragGesturesWithObserver$2;

        specialinvoke $r3.<androidx.compose.foundation.text.LongPressTextDragObserverKt$detectDownAndDragGesturesWithObserver$2: void <init>(androidx.compose.ui.input.pointer.PointerInputScope,androidx.compose.foundation.text.TextDragObserver,kotlin.coroutines.Continuation)>($r0, r1, null);

        $r4 = (kotlin.jvm.functions.Function2) $r3;

        $r5 = staticinvoke <kotlinx.coroutines.CoroutineScopeKt: java.lang.Object coroutineScope(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r4, $r2);

        $r6 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r5 != $r6 goto label1;

        return $r5;

     label1:
        $r7 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r7;
    }

    private static final java.lang.Object detectPreDragGesturesWithObserver(androidx.compose.ui.input.pointer.PointerInputScope, androidx.compose.foundation.text.TextDragObserver, kotlin.coroutines.Continuation)
    {
        androidx.compose.ui.input.pointer.PointerInputScope $r0;
        androidx.compose.foundation.text.TextDragObserver r1;
        kotlin.coroutines.Continuation $r2;
        androidx.compose.foundation.text.LongPressTextDragObserverKt$detectPreDragGesturesWithObserver$2 $r3;
        kotlin.jvm.functions.Function2 $r4;
        java.lang.Object $r5, $r6;
        kotlin.Unit $r7;

        $r0 := @parameter0: androidx.compose.ui.input.pointer.PointerInputScope;

        r1 := @parameter1: androidx.compose.foundation.text.TextDragObserver;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = new androidx.compose.foundation.text.LongPressTextDragObserverKt$detectPreDragGesturesWithObserver$2;

        specialinvoke $r3.<androidx.compose.foundation.text.LongPressTextDragObserverKt$detectPreDragGesturesWithObserver$2: void <init>(androidx.compose.foundation.text.TextDragObserver,kotlin.coroutines.Continuation)>(r1, null);

        $r4 = (kotlin.jvm.functions.Function2) $r3;

        $r5 = staticinvoke <androidx.compose.foundation.gestures.ForEachGestureKt: java.lang.Object forEachGesture(androidx.compose.ui.input.pointer.PointerInputScope,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r0, $r4, $r2);

        $r6 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r5 != $r6 goto label1;

        return $r5;

     label1:
        $r7 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r7;
    }

    private static final java.lang.Object detectDragGesturesWithObserver(androidx.compose.ui.input.pointer.PointerInputScope, androidx.compose.foundation.text.TextDragObserver, kotlin.coroutines.Continuation)
    {
        androidx.compose.ui.input.pointer.PointerInputScope $r0;
        androidx.compose.foundation.text.TextDragObserver r1;
        kotlin.coroutines.Continuation $r2;
        androidx.compose.foundation.text.LongPressTextDragObserverKt$detectDragGesturesWithObserver$2 $r3;
        androidx.compose.foundation.text.LongPressTextDragObserverKt$detectDragGesturesWithObserver$3 $r4;
        kotlin.jvm.functions.Function1 $r5;
        androidx.compose.foundation.text.LongPressTextDragObserverKt$detectDragGesturesWithObserver$4 $r6;
        kotlin.jvm.functions.Function0 $r7, $r9;
        androidx.compose.foundation.text.LongPressTextDragObserverKt$detectDragGesturesWithObserver$5 $r8;
        kotlin.jvm.functions.Function2 $r10;
        java.lang.Object $r11, $r12;
        kotlin.Unit $r13;

        $r0 := @parameter0: androidx.compose.ui.input.pointer.PointerInputScope;

        r1 := @parameter1: androidx.compose.foundation.text.TextDragObserver;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = new androidx.compose.foundation.text.LongPressTextDragObserverKt$detectDragGesturesWithObserver$2;

        specialinvoke $r3.<androidx.compose.foundation.text.LongPressTextDragObserverKt$detectDragGesturesWithObserver$2: void <init>(androidx.compose.foundation.text.TextDragObserver)>(r1);

        $r5 = (kotlin.jvm.functions.Function1) $r3;

        $r4 = new androidx.compose.foundation.text.LongPressTextDragObserverKt$detectDragGesturesWithObserver$3;

        specialinvoke $r4.<androidx.compose.foundation.text.LongPressTextDragObserverKt$detectDragGesturesWithObserver$3: void <init>(androidx.compose.foundation.text.TextDragObserver)>(r1);

        $r7 = (kotlin.jvm.functions.Function0) $r4;

        $r6 = new androidx.compose.foundation.text.LongPressTextDragObserverKt$detectDragGesturesWithObserver$4;

        specialinvoke $r6.<androidx.compose.foundation.text.LongPressTextDragObserverKt$detectDragGesturesWithObserver$4: void <init>(androidx.compose.foundation.text.TextDragObserver)>(r1);

        $r9 = (kotlin.jvm.functions.Function0) $r6;

        $r8 = new androidx.compose.foundation.text.LongPressTextDragObserverKt$detectDragGesturesWithObserver$5;

        specialinvoke $r8.<androidx.compose.foundation.text.LongPressTextDragObserverKt$detectDragGesturesWithObserver$5: void <init>(androidx.compose.foundation.text.TextDragObserver)>(r1);

        $r10 = (kotlin.jvm.functions.Function2) $r8;

        $r11 = staticinvoke <androidx.compose.foundation.gestures.DragGestureDetectorKt: java.lang.Object detectDragGestures(androidx.compose.ui.input.pointer.PointerInputScope,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r0, $r5, $r7, $r9, $r10, $r2);

        $r12 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r11 != $r12 goto label1;

        return $r11;

     label1:
        $r13 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r13;
    }

    public static final java.lang.Object access$detectPreDragGesturesWithObserver(androidx.compose.ui.input.pointer.PointerInputScope, androidx.compose.foundation.text.TextDragObserver, kotlin.coroutines.Continuation)
    {
        androidx.compose.ui.input.pointer.PointerInputScope $r0;
        androidx.compose.foundation.text.TextDragObserver r1;
        kotlin.coroutines.Continuation $r2;
        java.lang.Object $r3;

        $r0 := @parameter0: androidx.compose.ui.input.pointer.PointerInputScope;

        r1 := @parameter1: androidx.compose.foundation.text.TextDragObserver;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = staticinvoke <androidx.compose.foundation.text.LongPressTextDragObserverKt: java.lang.Object detectPreDragGesturesWithObserver(androidx.compose.ui.input.pointer.PointerInputScope,androidx.compose.foundation.text.TextDragObserver,kotlin.coroutines.Continuation)>($r0, r1, $r2);

        return $r3;
    }

    public static final java.lang.Object access$detectDragGesturesWithObserver(androidx.compose.ui.input.pointer.PointerInputScope, androidx.compose.foundation.text.TextDragObserver, kotlin.coroutines.Continuation)
    {
        androidx.compose.ui.input.pointer.PointerInputScope $r0;
        androidx.compose.foundation.text.TextDragObserver r1;
        kotlin.coroutines.Continuation $r2;
        java.lang.Object $r3;

        $r0 := @parameter0: androidx.compose.ui.input.pointer.PointerInputScope;

        r1 := @parameter1: androidx.compose.foundation.text.TextDragObserver;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = staticinvoke <androidx.compose.foundation.text.LongPressTextDragObserverKt: java.lang.Object detectDragGesturesWithObserver(androidx.compose.ui.input.pointer.PointerInputScope,androidx.compose.foundation.text.TextDragObserver,kotlin.coroutines.Continuation)>($r0, r1, $r2);

        return $r3;
    }

