androidx.media3.test.utils.CacheAsserts
    public static void assertCachedData(androidx.media3.datasource.cache.Cache, androidx.media3.test.utils.CacheAsserts$RequestSet) throws java.io.IOException
    {
        androidx.media3.datasource.cache.Cache r0;
        androidx.media3.test.utils.CacheAsserts$RequestSet r1;
        byte[] r2;
        int $i0, $i2, i3, i4;
        long $l1;
        java.lang.Long $r3;
        com.google.common.truth.LongSubject $r4;
        java.lang.Integer $r5;
        androidx.media3.datasource.DataSpec $r6;

        r0 := @parameter0: androidx.media3.datasource.cache.Cache;

        r1 := @parameter1: androidx.media3.test.utils.CacheAsserts$RequestSet;

        i3 = 0;

        i4 = 0;

     label1:
        $i0 = virtualinvoke r1.<androidx.media3.test.utils.CacheAsserts$RequestSet: int getCount()>();

        if i4 >= $i0 goto label2;

        r2 = virtualinvoke r1.<androidx.media3.test.utils.CacheAsserts$RequestSet: byte[] getData(int)>(i4);

        $r6 = virtualinvoke r1.<androidx.media3.test.utils.CacheAsserts$RequestSet: androidx.media3.datasource.DataSpec getDataSpec(int)>(i4);

        staticinvoke <androidx.media3.test.utils.CacheAsserts: void assertDataCached(androidx.media3.datasource.cache.Cache,androidx.media3.datasource.DataSpec,byte[])>(r0, $r6, r2);

        $i2 = lengthof r2;

        i3 = i3 + $i2;

        i4 = i4 + 1;

        goto label1;

     label2:
        $l1 = interfaceinvoke r0.<androidx.media3.datasource.cache.Cache: long getCacheSpace()>();

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r4 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.LongSubject assertThat(java.lang.Long)>($r3);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        virtualinvoke $r4.<com.google.common.truth.LongSubject: void isEqualTo(java.lang.Object)>($r5);

        return;
    }

    public static void assertCachedData(androidx.media3.datasource.cache.Cache, androidx.media3.test.utils.FakeDataSet) throws java.io.IOException
    {
        androidx.media3.datasource.cache.Cache r0;
        androidx.media3.test.utils.FakeDataSet r1;
        androidx.media3.test.utils.CacheAsserts$RequestSet $r2;

        r0 := @parameter0: androidx.media3.datasource.cache.Cache;

        r1 := @parameter1: androidx.media3.test.utils.FakeDataSet;

        $r2 = new androidx.media3.test.utils.CacheAsserts$RequestSet;

        specialinvoke $r2.<androidx.media3.test.utils.CacheAsserts$RequestSet: void <init>(androidx.media3.test.utils.FakeDataSet)>(r1);

        staticinvoke <androidx.media3.test.utils.CacheAsserts: void assertCachedData(androidx.media3.datasource.cache.Cache,androidx.media3.test.utils.CacheAsserts$RequestSet)>(r0, $r2);

        return;
    }

    public static void assertDataCached(androidx.media3.datasource.cache.Cache, androidx.media3.datasource.DataSpec, byte[]) throws java.io.IOException
    {
        androidx.media3.datasource.cache.Cache r0;
        androidx.media3.datasource.DataSpec r1;
        byte[] r2, r4;
        androidx.media3.datasource.cache.CacheDataSource r3, r24;
        java.lang.Throwable r5, r6, $r17, $r18, r28;
        androidx.media3.datasource.PlaceholderDataSource $r8;
        java.lang.StringBuilder $r10, $r12, $r13, $r21, $r22, r25, r27;
        android.net.Uri $r11;
        java.lang.String $r14, $r23;
        com.google.common.truth.StandardSubjectBuilder $r15;
        com.google.common.truth.PrimitiveByteArraySubject $r16;
        java.io.IOException r26;

        r0 := @parameter0: androidx.media3.datasource.cache.Cache;

        r1 := @parameter1: androidx.media3.datasource.DataSpec;

        r2 := @parameter2: byte[];

        r24 = new androidx.media3.datasource.cache.CacheDataSource;

        $r8 = <androidx.media3.datasource.PlaceholderDataSource: androidx.media3.datasource.PlaceholderDataSource INSTANCE>;

        specialinvoke r24.<androidx.media3.datasource.cache.CacheDataSource: void <init>(androidx.media3.datasource.cache.Cache,androidx.media3.datasource.DataSource,int)>(r0, $r8, 0);

        r3 = r24;

     label1:
        interfaceinvoke r3.<androidx.media3.datasource.DataSource: long open(androidx.media3.datasource.DataSpec)>(r1);

        r4 = staticinvoke <androidx.media3.datasource.DataSourceUtil: byte[] readToEnd(androidx.media3.datasource.DataSource)>(r3);

     label2:
        interfaceinvoke r3.<androidx.media3.datasource.DataSource: void close()>();

        goto label6;

     label3:
        $r18 := @caughtexception;

        r5 = $r18;

        r26 = new java.io.IOException;

        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Opening/reading cache failed: ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r26.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>($r23, r5);

        r28 = (java.lang.Throwable) r26;

        throw r28;

     label4:
        $r17 := @caughtexception;

        r6 = $r17;

     label5:
        interfaceinvoke r3.<androidx.media3.datasource.DataSource: void close()>();

        throw r6;

     label6:
        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cached data doesn\'t match expected for \'");

        $r11 = r1.<androidx.media3.datasource.DataSpec: android.net.Uri uri>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\',");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.StandardSubjectBuilder assertWithMessage(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.PrimitiveByteArraySubject that(byte[])>(r4);

        virtualinvoke $r16.<com.google.common.truth.PrimitiveByteArraySubject: void isEqualTo(java.lang.Object)>(r2);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label5 with label4;
    }

    public static void assertReadData(androidx.media3.datasource.DataSource, androidx.media3.datasource.DataSpec, byte[]) throws java.io.IOException
    {
        androidx.media3.datasource.DataSource r0;
        androidx.media3.datasource.DataSpec r1;
        byte[] r2, r9;
        androidx.media3.datasource.DataSourceInputStream r3, $r5;
        java.lang.Throwable r4, $r7, $r8, r10;
        com.google.common.truth.PrimitiveByteArraySubject $r6;

        r0 := @parameter0: androidx.media3.datasource.DataSource;

        r1 := @parameter1: androidx.media3.datasource.DataSpec;

        r2 := @parameter2: byte[];

        $r5 = new androidx.media3.datasource.DataSourceInputStream;

        specialinvoke $r5.<androidx.media3.datasource.DataSourceInputStream: void <init>(androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec)>(r0, r1);

        r3 = $r5;

     label1:
        r9 = staticinvoke <androidx.media3.common.util.Util: byte[] toByteArray(java.io.InputStream)>(r3);

        $r6 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.PrimitiveByteArraySubject assertThat(byte[])>(r9);

        virtualinvoke $r6.<com.google.common.truth.PrimitiveByteArraySubject: void isEqualTo(java.lang.Object)>(r2);

     label2:
        virtualinvoke r3.<androidx.media3.datasource.DataSourceInputStream: void close()>();

        goto label8;

     label3:
        $r8 := @caughtexception;

        r10 = $r8;

     label4:
        virtualinvoke r3.<androidx.media3.datasource.DataSourceInputStream: void close()>();

     label5:
        goto label7;

     label6:
        $r7 := @caughtexception;

        r4 = $r7;

        virtualinvoke r10.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r4);

     label7:
        throw r10;

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public static void assertCacheEmpty(androidx.media3.datasource.cache.Cache)
    {
        androidx.media3.datasource.cache.Cache r0;
        long $l0;
        java.lang.Long $r1;
        com.google.common.truth.LongSubject $r2;
        java.lang.Integer $r3;
        java.util.Set $r4;
        com.google.common.truth.IterableSubject $r5;

        r0 := @parameter0: androidx.media3.datasource.cache.Cache;

        $l0 = interfaceinvoke r0.<androidx.media3.datasource.cache.Cache: long getCacheSpace()>();

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r2 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.LongSubject assertThat(java.lang.Long)>($r1);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke $r2.<com.google.common.truth.LongSubject: void isEqualTo(java.lang.Object)>($r3);

        $r4 = interfaceinvoke r0.<androidx.media3.datasource.cache.Cache: java.util.Set getKeys()>();

        $r5 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.IterableSubject assertThat(java.lang.Iterable)>($r4);

        virtualinvoke $r5.<com.google.common.truth.IterableSubject: void isEmpty()>();

        return;
    }

    private void <init>()
    {
        androidx.media3.test.utils.CacheAsserts r0;

        r0 := @this: androidx.media3.test.utils.CacheAsserts;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.media3.test.utils.CacheAsserts$RequestSet
<androidx.media3.test.utils.CacheAsserts$RequestSet: androidx.media3.test.utils.FakeDataSet fakeDataSet>
<androidx.media3.test.utils.CacheAsserts$RequestSet: androidx.media3.datasource.DataSpec[] dataSpecs>
    public void <init>(androidx.media3.test.utils.FakeDataSet)
    {
        androidx.media3.test.utils.CacheAsserts$RequestSet r0;
        androidx.media3.test.utils.FakeDataSet r1;
        java.util.ArrayList r2;
        int $i0, $i1, i2;
        androidx.media3.datasource.DataSpec[] $r3, $r4, $r6;
        androidx.media3.datasource.DataSpec $r5;
        java.lang.Object $r7, $r10;
        androidx.media3.test.utils.FakeDataSet$FakeData $r8;
        android.net.Uri $r9, $r11;

        r0 := @this: androidx.media3.test.utils.CacheAsserts$RequestSet;

        r1 := @parameter0: androidx.media3.test.utils.FakeDataSet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.test.utils.CacheAsserts$RequestSet: androidx.media3.test.utils.FakeDataSet fakeDataSet> = r1;

        r2 = virtualinvoke r1.<androidx.media3.test.utils.FakeDataSet: java.util.ArrayList getAllData()>();

        $i0 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        $r3 = newarray (androidx.media3.datasource.DataSpec)[$i0];

        r0.<androidx.media3.test.utils.CacheAsserts$RequestSet: androidx.media3.datasource.DataSpec[] dataSpecs> = $r3;

        i2 = 0;

     label1:
        $r4 = r0.<androidx.media3.test.utils.CacheAsserts$RequestSet: androidx.media3.datasource.DataSpec[] dataSpecs>;

        $i1 = lengthof $r4;

        if i2 >= $i1 goto label2;

        $r6 = r0.<androidx.media3.test.utils.CacheAsserts$RequestSet: androidx.media3.datasource.DataSpec[] dataSpecs>;

        $r5 = new androidx.media3.datasource.DataSpec;

        $r7 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r8 = (androidx.media3.test.utils.FakeDataSet$FakeData) $r7;

        $r9 = $r8.<androidx.media3.test.utils.FakeDataSet$FakeData: android.net.Uri uri>;

        $r10 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r9);

        $r11 = (android.net.Uri) $r10;

        specialinvoke $r5.<androidx.media3.datasource.DataSpec: void <init>(android.net.Uri)>($r11);

        $r6[i2] = $r5;

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public transient androidx.media3.test.utils.CacheAsserts$RequestSet subset(java.lang.String[])
    {
        androidx.media3.test.utils.CacheAsserts$RequestSet r0;
        java.lang.String[] r1;
        int $i0, $i1, i2;
        androidx.media3.datasource.DataSpec[] $r2, $r3, $r6;
        androidx.media3.datasource.DataSpec $r4;
        java.lang.String $r5;
        android.net.Uri $r7;

        r0 := @this: androidx.media3.test.utils.CacheAsserts$RequestSet;

        r1 := @parameter0: java.lang.String[];

        $i0 = lengthof r1;

        $r2 = newarray (androidx.media3.datasource.DataSpec)[$i0];

        r0.<androidx.media3.test.utils.CacheAsserts$RequestSet: androidx.media3.datasource.DataSpec[] dataSpecs> = $r2;

        i2 = 0;

     label1:
        $r3 = r0.<androidx.media3.test.utils.CacheAsserts$RequestSet: androidx.media3.datasource.DataSpec[] dataSpecs>;

        $i1 = lengthof $r3;

        if i2 >= $i1 goto label2;

        $r6 = r0.<androidx.media3.test.utils.CacheAsserts$RequestSet: androidx.media3.datasource.DataSpec[] dataSpecs>;

        $r4 = new androidx.media3.datasource.DataSpec;

        $r5 = r1[i2];

        $r7 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r5);

        specialinvoke $r4.<androidx.media3.datasource.DataSpec: void <init>(android.net.Uri)>($r7);

        $r6[i2] = $r4;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r0;
    }

    public transient androidx.media3.test.utils.CacheAsserts$RequestSet subset(android.net.Uri[])
    {
        androidx.media3.test.utils.CacheAsserts$RequestSet r0;
        android.net.Uri[] r1;
        int $i0, $i1, i2;
        androidx.media3.datasource.DataSpec[] $r2, $r3, $r6;
        androidx.media3.datasource.DataSpec $r4;
        android.net.Uri $r5;

        r0 := @this: androidx.media3.test.utils.CacheAsserts$RequestSet;

        r1 := @parameter0: android.net.Uri[];

        $i0 = lengthof r1;

        $r2 = newarray (androidx.media3.datasource.DataSpec)[$i0];

        r0.<androidx.media3.test.utils.CacheAsserts$RequestSet: androidx.media3.datasource.DataSpec[] dataSpecs> = $r2;

        i2 = 0;

     label1:
        $r3 = r0.<androidx.media3.test.utils.CacheAsserts$RequestSet: androidx.media3.datasource.DataSpec[] dataSpecs>;

        $i1 = lengthof $r3;

        if i2 >= $i1 goto label2;

        $r6 = r0.<androidx.media3.test.utils.CacheAsserts$RequestSet: androidx.media3.datasource.DataSpec[] dataSpecs>;

        $r4 = new androidx.media3.datasource.DataSpec;

        $r5 = r1[i2];

        specialinvoke $r4.<androidx.media3.datasource.DataSpec: void <init>(android.net.Uri)>($r5);

        $r6[i2] = $r4;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r0;
    }

    public transient androidx.media3.test.utils.CacheAsserts$RequestSet subset(androidx.media3.datasource.DataSpec[])
    {
        androidx.media3.test.utils.CacheAsserts$RequestSet r0;
        androidx.media3.datasource.DataSpec[] r1;

        r0 := @this: androidx.media3.test.utils.CacheAsserts$RequestSet;

        r1 := @parameter0: androidx.media3.datasource.DataSpec[];

        r0.<androidx.media3.test.utils.CacheAsserts$RequestSet: androidx.media3.datasource.DataSpec[] dataSpecs> = r1;

        return r0;
    }

    public int getCount()
    {
        androidx.media3.test.utils.CacheAsserts$RequestSet r0;
        androidx.media3.datasource.DataSpec[] $r1;
        int $i0;

        r0 := @this: androidx.media3.test.utils.CacheAsserts$RequestSet;

        $r1 = r0.<androidx.media3.test.utils.CacheAsserts$RequestSet: androidx.media3.datasource.DataSpec[] dataSpecs>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public byte[] getData(int)
    {
        androidx.media3.test.utils.CacheAsserts$RequestSet r0;
        int i0;
        androidx.media3.datasource.DataSpec[] $r1;
        androidx.media3.datasource.DataSpec $r2;
        android.net.Uri $r3;
        androidx.media3.test.utils.FakeDataSet $r4;
        androidx.media3.test.utils.FakeDataSet$FakeData $r5, $r7;
        java.lang.Object $r6;
        byte[] $r8;

        r0 := @this: androidx.media3.test.utils.CacheAsserts$RequestSet;

        i0 := @parameter0: int;

        $r4 = r0.<androidx.media3.test.utils.CacheAsserts$RequestSet: androidx.media3.test.utils.FakeDataSet fakeDataSet>;

        $r1 = r0.<androidx.media3.test.utils.CacheAsserts$RequestSet: androidx.media3.datasource.DataSpec[] dataSpecs>;

        $r2 = $r1[i0];

        $r3 = $r2.<androidx.media3.datasource.DataSpec: android.net.Uri uri>;

        $r5 = virtualinvoke $r4.<androidx.media3.test.utils.FakeDataSet: androidx.media3.test.utils.FakeDataSet$FakeData getData(android.net.Uri)>($r3);

        $r6 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r5);

        $r7 = (androidx.media3.test.utils.FakeDataSet$FakeData) $r6;

        $r8 = virtualinvoke $r7.<androidx.media3.test.utils.FakeDataSet$FakeData: byte[] getData()>();

        return $r8;
    }

    public androidx.media3.datasource.DataSpec getDataSpec(int)
    {
        androidx.media3.test.utils.CacheAsserts$RequestSet r0;
        int i0;
        androidx.media3.datasource.DataSpec[] $r1;
        androidx.media3.datasource.DataSpec $r2;

        r0 := @this: androidx.media3.test.utils.CacheAsserts$RequestSet;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.test.utils.CacheAsserts$RequestSet: androidx.media3.datasource.DataSpec[] dataSpecs>;

        $r2 = $r1[i0];

        return $r2;
    }

    public androidx.media3.test.utils.CacheAsserts$RequestSet useBoundedDataSpecFor(java.lang.String)
    {
        androidx.media3.test.utils.CacheAsserts$RequestSet r0;
        java.lang.String r1, $r11, $r13;
        androidx.media3.test.utils.FakeDataSet$FakeData r2, $r5;
        androidx.media3.datasource.DataSpec r3, $r16;
        androidx.media3.test.utils.FakeDataSet $r4;
        java.lang.Object $r6, $r12;
        androidx.media3.datasource.DataSpec[] $r7, $r9, $r14;
        int $i0, $i1, i3;
        java.lang.IllegalStateException $r8;
        android.net.Uri $r10;
        boolean $z0;
        byte[] $r15;
        long $l2;

        r0 := @this: androidx.media3.test.utils.CacheAsserts$RequestSet;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<androidx.media3.test.utils.CacheAsserts$RequestSet: androidx.media3.test.utils.FakeDataSet fakeDataSet>;

        $r5 = virtualinvoke $r4.<androidx.media3.test.utils.FakeDataSet: androidx.media3.test.utils.FakeDataSet$FakeData getData(java.lang.String)>(r1);

        $r6 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r5);

        r2 = (androidx.media3.test.utils.FakeDataSet$FakeData) $r6;

        i3 = 0;

     label1:
        $r7 = r0.<androidx.media3.test.utils.CacheAsserts$RequestSet: androidx.media3.datasource.DataSpec[] dataSpecs>;

        $i0 = lengthof $r7;

        if i3 >= $i0 goto label3;

        $r9 = r0.<androidx.media3.test.utils.CacheAsserts$RequestSet: androidx.media3.datasource.DataSpec[] dataSpecs>;

        r3 = $r9[i3];

        $r10 = r3.<androidx.media3.datasource.DataSpec: android.net.Uri uri>;

        $r11 = virtualinvoke $r10.<android.net.Uri: java.lang.String getPath()>();

        $r12 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r11);

        $r13 = (java.lang.String) $r12;

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r14 = r0.<androidx.media3.test.utils.CacheAsserts$RequestSet: androidx.media3.datasource.DataSpec[] dataSpecs>;

        $r15 = virtualinvoke r2.<androidx.media3.test.utils.FakeDataSet$FakeData: byte[] getData()>();

        $i1 = lengthof $r15;

        $l2 = (long) $i1;

        $r16 = virtualinvoke r3.<androidx.media3.datasource.DataSpec: androidx.media3.datasource.DataSpec subrange(long,long)>(0L, $l2);

        $r14[i3] = $r16;

        return r0;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>()>();

        throw $r8;
    }

