androidx.graphics.lowlatency.FrameBufferRenderer
<androidx.graphics.lowlatency.FrameBufferRenderer: androidx.graphics.lowlatency.FrameBufferRenderer$Companion Companion>
<androidx.graphics.lowlatency.FrameBufferRenderer: androidx.graphics.lowlatency.FrameBufferRenderer$RenderCallback frameBufferRendererCallbacks>
<androidx.graphics.lowlatency.FrameBufferRenderer: androidx.graphics.lowlatency.SyncStrategy syncStrategy>
<androidx.graphics.lowlatency.FrameBufferRenderer: java.util.concurrent.atomic.AtomicBoolean mClear>
<androidx.graphics.lowlatency.FrameBufferRenderer: java.lang.String TAG>
    public void <init>(androidx.graphics.lowlatency.FrameBufferRenderer$RenderCallback, androidx.graphics.lowlatency.SyncStrategy)
    {
        androidx.graphics.lowlatency.FrameBufferRenderer r0;
        androidx.graphics.lowlatency.FrameBufferRenderer$RenderCallback r1;
        androidx.graphics.lowlatency.SyncStrategy r2;
        java.util.concurrent.atomic.AtomicBoolean $r3;

        r0 := @this: androidx.graphics.lowlatency.FrameBufferRenderer;

        r1 := @parameter0: androidx.graphics.lowlatency.FrameBufferRenderer$RenderCallback;

        r2 := @parameter1: androidx.graphics.lowlatency.SyncStrategy;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "frameBufferRendererCallbacks");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "syncStrategy");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.graphics.lowlatency.FrameBufferRenderer: androidx.graphics.lowlatency.FrameBufferRenderer$RenderCallback frameBufferRendererCallbacks> = r1;

        r0.<androidx.graphics.lowlatency.FrameBufferRenderer: androidx.graphics.lowlatency.SyncStrategy syncStrategy> = r2;

        $r3 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<androidx.graphics.lowlatency.FrameBufferRenderer: java.util.concurrent.atomic.AtomicBoolean mClear> = $r3;

        return;
    }

    public void <init>(androidx.graphics.lowlatency.FrameBufferRenderer$RenderCallback, androidx.graphics.lowlatency.SyncStrategy, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.graphics.lowlatency.FrameBufferRenderer r0;
        androidx.graphics.lowlatency.FrameBufferRenderer$RenderCallback r1;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r2;
        androidx.graphics.lowlatency.SyncStrategy r3;

        r0 := @this: androidx.graphics.lowlatency.FrameBufferRenderer;

        r1 := @parameter0: androidx.graphics.lowlatency.FrameBufferRenderer$RenderCallback;

        r3 := @parameter1: androidx.graphics.lowlatency.SyncStrategy;

        i0 := @parameter2: int;

        r2 := @parameter3: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r3 = <androidx.graphics.lowlatency.SyncStrategy: androidx.graphics.lowlatency.SyncStrategy ALWAYS>;

     label1:
        specialinvoke r0.<androidx.graphics.lowlatency.FrameBufferRenderer: void <init>(androidx.graphics.lowlatency.FrameBufferRenderer$RenderCallback,androidx.graphics.lowlatency.SyncStrategy)>(r1, r3);

        return;
    }

    public android.opengl.EGLSurface onSurfaceCreated(androidx.graphics.opengl.egl.EGLSpec, android.opengl.EGLConfig, android.view.Surface, int, int)
    {
        androidx.graphics.lowlatency.FrameBufferRenderer r0;
        androidx.graphics.opengl.egl.EGLSpec r1;
        android.opengl.EGLConfig r2;
        android.view.Surface r3;
        int i0, i1;

        r0 := @this: androidx.graphics.lowlatency.FrameBufferRenderer;

        r1 := @parameter0: androidx.graphics.opengl.egl.EGLSpec;

        r2 := @parameter1: android.opengl.EGLConfig;

        r3 := @parameter2: android.view.Surface;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "spec");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "config");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "surface");

        return null;
    }

    public final void clear()
    {
        androidx.graphics.lowlatency.FrameBufferRenderer r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @this: androidx.graphics.lowlatency.FrameBufferRenderer;

        $r1 = r0.<androidx.graphics.lowlatency.FrameBufferRenderer: java.util.concurrent.atomic.AtomicBoolean mClear>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        return;
    }

    public void onDrawFrame(androidx.graphics.opengl.egl.EGLManager)
    {
        androidx.graphics.lowlatency.FrameBufferRenderer r0;
        androidx.graphics.opengl.egl.EGLManager r1;
        androidx.graphics.opengl.egl.EGLSpec r2;
        androidx.graphics.lowlatency.FrameBuffer r3;
        int i0;
        androidx.graphics.lowlatency.FrameBufferRenderer$RenderCallback $r4, $r6, $r18, $r20, $r24;
        java.util.concurrent.atomic.AtomicBoolean $r5;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r7, $r8, $r9, $r13, $r14, $r16;
        java.lang.String $r10, $r15, $r17;
        androidx.graphics.lowlatency.SyncStrategy $r11;
        java.lang.Throwable $r12, $r19, r25, r26;
        androidx.graphics.lowlatency.SyncFenceCompat $r21, r23;
        androidx.opengl.EGLSyncKHR r22;

        r0 := @this: androidx.graphics.lowlatency.FrameBufferRenderer;

        r1 := @parameter0: androidx.graphics.opengl.egl.EGLManager;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "eglManager");

        r2 = virtualinvoke r1.<androidx.graphics.opengl.egl.EGLManager: androidx.graphics.opengl.egl.EGLSpec getEGLSpec()>();

        $r4 = r0.<androidx.graphics.lowlatency.FrameBufferRenderer: androidx.graphics.lowlatency.FrameBufferRenderer$RenderCallback frameBufferRendererCallbacks>;

        r3 = interfaceinvoke $r4.<androidx.graphics.lowlatency.FrameBufferRenderer$RenderCallback: androidx.graphics.lowlatency.FrameBuffer obtainFrameBuffer(androidx.graphics.opengl.egl.EGLSpec)>(r2);

     label01:
        virtualinvoke r3.<androidx.graphics.lowlatency.FrameBuffer: void makeCurrent()>();

        $r5 = r0.<androidx.graphics.lowlatency.FrameBufferRenderer: java.util.concurrent.atomic.AtomicBoolean mClear>;

        $z0 = virtualinvoke $r5.<java.util.concurrent.atomic.AtomicBoolean: boolean getAndSet(boolean)>(0);

        if $z0 == 0 goto label02;

        staticinvoke <android.opengl.GLES20: void glClearColor(float,float,float,float)>(0.0F, 0.0F, 0.0F, 0.0F);

        staticinvoke <android.opengl.GLES20: void glClear(int)>(16384);

        goto label03;

     label02:
        $r6 = r0.<androidx.graphics.lowlatency.FrameBufferRenderer: androidx.graphics.lowlatency.FrameBufferRenderer$RenderCallback frameBufferRendererCallbacks>;

        interfaceinvoke $r6.<androidx.graphics.lowlatency.FrameBufferRenderer$RenderCallback: void onDraw(androidx.graphics.opengl.egl.EGLManager)>(r1);

     label03:
        $z1 = specialinvoke r0.<androidx.graphics.lowlatency.FrameBufferRenderer: boolean supportsNativeAndroidFence(androidx.graphics.opengl.egl.EGLManager)>(r1);

        if $z1 == 0 goto label04;

        $r11 = r0.<androidx.graphics.lowlatency.FrameBufferRenderer: androidx.graphics.lowlatency.SyncStrategy syncStrategy>;

        $r21 = interfaceinvoke $r11.<androidx.graphics.lowlatency.SyncStrategy: androidx.graphics.lowlatency.SyncFenceCompat createSyncFence(androidx.graphics.opengl.egl.EGLSpec)>(r2);

        goto label08;

     label04:
        $z2 = virtualinvoke r1.<androidx.graphics.opengl.egl.EGLManager: boolean isExtensionSupported(java.lang.String)>("EGL_KHR_fence_sync");

        if $z2 == 0 goto label07;

        r22 = interfaceinvoke r2.<androidx.graphics.opengl.egl.EGLSpec: androidx.opengl.EGLSyncKHR eglCreateSyncKHR(int,androidx.graphics.opengl.egl.EGLConfigAttributes)>(12537, null);

        if r22 == null goto label05;

        staticinvoke <android.opengl.GLES20: void glFlush()>();

        i0 = interfaceinvoke r2.<androidx.graphics.opengl.egl.EGLSpec: int eglClientWaitSyncKHR(androidx.opengl.EGLSyncKHR,int,long)>(r22, 1, -1L);

        if i0 == 12534 goto label06;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("warning waiting on sync object: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("FrameBufferRenderer", $r10);

        goto label06;

     label05:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("FrameBufferRenderer", "Unable to create EGLSync");

        staticinvoke <android.opengl.GLES20: void glFinish()>();

     label06:
        $r21 = (androidx.graphics.lowlatency.SyncFenceCompat) null;

        goto label08;

     label07:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("FrameBufferRenderer", "Device does not support creation of any fences");

        staticinvoke <android.opengl.GLES20: void glFinish()>();

        $r21 = (androidx.graphics.lowlatency.SyncFenceCompat) null;

     label08:
        r23 = $r21;

     label09:
        $r24 = r0.<androidx.graphics.lowlatency.FrameBufferRenderer: androidx.graphics.lowlatency.FrameBufferRenderer$RenderCallback frameBufferRendererCallbacks>;

        interfaceinvoke $r24.<androidx.graphics.lowlatency.FrameBufferRenderer$RenderCallback: void onDrawComplete(androidx.graphics.lowlatency.FrameBuffer,androidx.graphics.lowlatency.SyncFenceCompat)>(r3, r23);

        goto label14;

     label10:
        $r12 := @caughtexception;

        r25 = $r12;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error attempting to render to frame buffer: ");

        $r15 = virtualinvoke r25.<java.lang.Exception: java.lang.String getMessage()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("FrameBufferRenderer", $r17);

     label11:
        $r18 = r0.<androidx.graphics.lowlatency.FrameBufferRenderer: androidx.graphics.lowlatency.FrameBufferRenderer$RenderCallback frameBufferRendererCallbacks>;

        interfaceinvoke $r18.<androidx.graphics.lowlatency.FrameBufferRenderer$RenderCallback: void onDrawComplete(androidx.graphics.lowlatency.FrameBuffer,androidx.graphics.lowlatency.SyncFenceCompat)>(r3, null);

        goto label14;

     label12:
        $r19 := @caughtexception;

        r26 = $r19;

     label13:
        $r20 = r0.<androidx.graphics.lowlatency.FrameBufferRenderer: androidx.graphics.lowlatency.FrameBufferRenderer$RenderCallback frameBufferRendererCallbacks>;

        interfaceinvoke $r20.<androidx.graphics.lowlatency.FrameBufferRenderer$RenderCallback: void onDrawComplete(androidx.graphics.lowlatency.FrameBuffer,androidx.graphics.lowlatency.SyncFenceCompat)>(r3, null);

        throw r26;

     label14:
        return;

        catch java.lang.Exception from label01 to label09 with label10;
        catch java.lang.Throwable from label01 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    private final boolean supportsNativeAndroidFence(androidx.graphics.opengl.egl.EGLManager)
    {
        androidx.graphics.lowlatency.FrameBufferRenderer r0;
        androidx.graphics.opengl.egl.EGLManager $r1;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.graphics.lowlatency.FrameBufferRenderer;

        $r1 := @parameter0: androidx.graphics.opengl.egl.EGLManager;

        $z0 = virtualinvoke $r1.<androidx.graphics.opengl.egl.EGLManager: boolean isExtensionSupported(java.lang.String)>("EGL_KHR_fence_sync");

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke $r1.<androidx.graphics.opengl.egl.EGLManager: boolean isExtensionSupported(java.lang.String)>("EGL_ANDROID_native_fence_sync");

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    static void <clinit>()
    {
        androidx.graphics.lowlatency.FrameBufferRenderer$Companion $r0;

        $r0 = new androidx.graphics.lowlatency.FrameBufferRenderer$Companion;

        specialinvoke $r0.<androidx.graphics.lowlatency.FrameBufferRenderer$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.graphics.lowlatency.FrameBufferRenderer: androidx.graphics.lowlatency.FrameBufferRenderer$Companion Companion> = $r0;

        return;
    }

androidx.graphics.lowlatency.FrameBufferRenderer$Companion
    private void <init>()
    {
        androidx.graphics.lowlatency.FrameBufferRenderer$Companion r0;

        r0 := @this: androidx.graphics.lowlatency.FrameBufferRenderer$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.graphics.lowlatency.FrameBufferRenderer$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.graphics.lowlatency.FrameBufferRenderer$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.graphics.lowlatency.FrameBufferRenderer$Companion: void <init>()>();

        return;
    }

androidx.graphics.lowlatency.FrameBufferRenderer$RenderCallback
<androidx.graphics.lowlatency.FrameBufferRenderer$RenderCallback: androidx.graphics.lowlatency.FrameBuffer obtainFrameBuffer(androidx.graphics.opengl.egl.EGLSpec)>
<androidx.graphics.lowlatency.FrameBufferRenderer$RenderCallback: void onDraw(androidx.graphics.opengl.egl.EGLManager)>
<androidx.graphics.lowlatency.FrameBufferRenderer$RenderCallback: void onDrawComplete(androidx.graphics.lowlatency.FrameBuffer,androidx.graphics.lowlatency.SyncFenceCompat)>
