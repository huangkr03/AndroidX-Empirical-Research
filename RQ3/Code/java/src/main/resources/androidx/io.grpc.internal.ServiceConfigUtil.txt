io.grpc.internal.ServiceConfigUtil
    private void <init>()
    {
        io.grpc.internal.ServiceConfigUtil $r0;

        $r0 := @this: io.grpc.internal.ServiceConfigUtil;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.Double getBackoffMultiplierFromRetryPolicy(java.util.Map)
    {
        java.lang.Double $r0;
        java.util.Map $r1;

        $r1 := @parameter0: java.util.Map;

        $r0 = staticinvoke <io.grpc.internal.JsonUtil: java.lang.Double getNumberAsDouble(java.util.Map,java.lang.String)>($r1, "backoffMultiplier");

        return $r0;
    }

    public static java.util.Map getHealthCheckedService(java.util.Map)
    {
        java.util.Map $r0;

        $r0 := @parameter0: java.util.Map;

        if $r0 != null goto label1;

        return null;

     label1:
        $r0 = staticinvoke <io.grpc.internal.JsonUtil: java.util.Map getObject(java.util.Map,java.lang.String)>($r0, "healthCheckConfig");

        return $r0;
    }

    static java.lang.Long getHedgingDelayNanosFromHedgingPolicy(java.util.Map)
    {
        java.lang.Long $r0;
        java.util.Map $r1;

        $r1 := @parameter0: java.util.Map;

        $r0 = staticinvoke <io.grpc.internal.JsonUtil: java.lang.Long getStringAsDuration(java.util.Map,java.lang.String)>($r1, "hedgingDelay");

        return $r0;
    }

    static java.util.Map getHedgingPolicyFromMethodConfig(java.util.Map)
    {
        java.util.Map $r0;

        $r0 := @parameter0: java.util.Map;

        $r0 = staticinvoke <io.grpc.internal.JsonUtil: java.util.Map getObject(java.util.Map,java.lang.String)>($r0, "hedgingPolicy");

        return $r0;
    }

    static java.lang.Long getInitialBackoffNanosFromRetryPolicy(java.util.Map)
    {
        java.lang.Long $r0;
        java.util.Map $r1;

        $r1 := @parameter0: java.util.Map;

        $r0 = staticinvoke <io.grpc.internal.JsonUtil: java.lang.Long getStringAsDuration(java.util.Map,java.lang.String)>($r1, "initialBackoff");

        return $r0;
    }

    private static java.util.Set getListOfStatusCodesAsSet(java.util.Map, java.lang.String)
    {
        java.lang.String $r0;
        java.util.Map $r1;
        java.util.List $r2;
        java.util.Set $r3;

        $r1 := @parameter0: java.util.Map;

        $r0 := @parameter1: java.lang.String;

        $r2 = staticinvoke <io.grpc.internal.JsonUtil: java.util.List getList(java.util.Map,java.lang.String)>($r1, $r0);

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = staticinvoke <io.grpc.internal.ServiceConfigUtil: java.util.Set getStatusCodesFromList(java.util.List)>($r2);

        return $r3;
    }

    public static java.util.List getLoadBalancingConfigsFromServiceConfig(java.util.Map)
    {
        java.util.ArrayList $r0, r5;
        java.util.Map $r1;
        boolean $z0;
        java.util.List $r2, r6;
        java.lang.String $r3;
        java.util.Locale $r4;
        java.util.Collection r7;

        $r1 := @parameter0: java.util.Map;

        r5 = new java.util.ArrayList;

        $r0 = r5;

        specialinvoke r5.<java.util.ArrayList: void <init>()>();

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>("loadBalancingConfig");

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <io.grpc.internal.JsonUtil: java.util.List getListOfObjects(java.util.Map,java.lang.String)>($r1, "loadBalancingConfig");

        r6 = (java.util.List) $r0;

        r7 = (java.util.Collection) $r2;

        interfaceinvoke r6.<java.util.List: boolean addAll(java.util.Collection)>(r7);

     label1:
        $r2 = (java.util.List) $r0;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r3 = staticinvoke <io.grpc.internal.JsonUtil: java.lang.String getString(java.util.Map,java.lang.String)>($r1, "loadBalancingPolicy");

        if $r3 == null goto label2;

        $r4 = <java.util.Locale: java.util.Locale ROOT>;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r4);

        $r1 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        $r1 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>($r3, $r1);

        $r2 = (java.util.List) $r0;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

     label2:
        $r2 = (java.util.List) $r0;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        return $r2;
    }

    static java.lang.Integer getMaxAttemptsFromHedgingPolicy(java.util.Map)
    {
        java.lang.Integer $r0;
        java.util.Map $r1;

        $r1 := @parameter0: java.util.Map;

        $r0 = staticinvoke <io.grpc.internal.JsonUtil: java.lang.Integer getNumberAsInteger(java.util.Map,java.lang.String)>($r1, "maxAttempts");

        return $r0;
    }

    static java.lang.Integer getMaxAttemptsFromRetryPolicy(java.util.Map)
    {
        java.lang.Integer $r0;
        java.util.Map $r1;

        $r1 := @parameter0: java.util.Map;

        $r0 = staticinvoke <io.grpc.internal.JsonUtil: java.lang.Integer getNumberAsInteger(java.util.Map,java.lang.String)>($r1, "maxAttempts");

        return $r0;
    }

    static java.lang.Long getMaxBackoffNanosFromRetryPolicy(java.util.Map)
    {
        java.lang.Long $r0;
        java.util.Map $r1;

        $r1 := @parameter0: java.util.Map;

        $r0 = staticinvoke <io.grpc.internal.JsonUtil: java.lang.Long getStringAsDuration(java.util.Map,java.lang.String)>($r1, "maxBackoff");

        return $r0;
    }

    static java.lang.Integer getMaxRequestMessageBytesFromMethodConfig(java.util.Map)
    {
        java.lang.Integer $r0;
        java.util.Map $r1;

        $r1 := @parameter0: java.util.Map;

        $r0 = staticinvoke <io.grpc.internal.JsonUtil: java.lang.Integer getNumberAsInteger(java.util.Map,java.lang.String)>($r1, "maxRequestMessageBytes");

        return $r0;
    }

    static java.lang.Integer getMaxResponseMessageBytesFromMethodConfig(java.util.Map)
    {
        java.lang.Integer $r0;
        java.util.Map $r1;

        $r1 := @parameter0: java.util.Map;

        $r0 = staticinvoke <io.grpc.internal.JsonUtil: java.lang.Integer getNumberAsInteger(java.util.Map,java.lang.String)>($r1, "maxResponseMessageBytes");

        return $r0;
    }

    static java.util.List getMethodConfigFromServiceConfig(java.util.Map)
    {
        java.util.List $r0;
        java.util.Map $r1;

        $r1 := @parameter0: java.util.Map;

        $r0 = staticinvoke <io.grpc.internal.JsonUtil: java.util.List getListOfObjects(java.util.Map,java.lang.String)>($r1, "methodConfig");

        return $r0;
    }

    static java.lang.String getMethodFromName(java.util.Map)
    {
        java.lang.String $r0;
        java.util.Map $r1;

        $r1 := @parameter0: java.util.Map;

        $r0 = staticinvoke <io.grpc.internal.JsonUtil: java.lang.String getString(java.util.Map,java.lang.String)>($r1, "method");

        return $r0;
    }

    static java.util.List getNameListFromMethodConfig(java.util.Map)
    {
        java.util.List $r0;
        java.util.Map $r1;

        $r1 := @parameter0: java.util.Map;

        $r0 = staticinvoke <io.grpc.internal.JsonUtil: java.util.List getListOfObjects(java.util.Map,java.lang.String)>($r1, "name");

        return $r0;
    }

    static java.util.Set getNonFatalStatusCodesFromHedgingPolicy(java.util.Map)
    {
        java.util.Map $r0;
        java.util.Set $r1;
        java.util.EnumSet $r2;
        io.grpc.Status$Code $r3;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 = staticinvoke <io.grpc.internal.ServiceConfigUtil: java.util.Set getListOfStatusCodesAsSet(java.util.Map,java.lang.String)>($r0, "nonFatalStatusCodes");

        if $r1 != null goto label1;

        $r2 = staticinvoke <java.util.EnumSet: java.util.EnumSet noneOf(java.lang.Class)>(class "Lio/grpc/Status$Code;");

        $r1 = (java.util.Set) $r2;

        $r1 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r1);

        return $r1;

     label1:
        $r3 = <io.grpc.Status$Code: io.grpc.Status$Code OK>;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        if $z0 != 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        staticinvoke <com.google.common.base.Verify: void verify(boolean,java.lang.String,java.lang.Object)>($z0, "%s must not contain OK", "nonFatalStatusCodes");

        return $r1;
    }

    static java.lang.Long getPerAttemptRecvTimeoutNanosFromRetryPolicy(java.util.Map)
    {
        java.lang.Long $r0;
        java.util.Map $r1;

        $r1 := @parameter0: java.util.Map;

        $r0 = staticinvoke <io.grpc.internal.JsonUtil: java.lang.Long getStringAsDuration(java.util.Map,java.lang.String)>($r1, "perAttemptRecvTimeout");

        return $r0;
    }

    static java.util.Map getRetryPolicyFromMethodConfig(java.util.Map)
    {
        java.util.Map $r0;

        $r0 := @parameter0: java.util.Map;

        $r0 = staticinvoke <io.grpc.internal.JsonUtil: java.util.Map getObject(java.util.Map,java.lang.String)>($r0, "retryPolicy");

        return $r0;
    }

    static java.util.Set getRetryableStatusCodesFromRetryPolicy(java.util.Map)
    {
        java.util.Map $r0;
        java.util.Set $r1;
        boolean $z0, $z1;
        io.grpc.Status$Code $r2;

        $r0 := @parameter0: java.util.Map;

        $r1 = staticinvoke <io.grpc.internal.ServiceConfigUtil: java.util.Set getListOfStatusCodesAsSet(java.util.Map,java.lang.String)>($r0, "retryableStatusCodes");

        $z0 = 1;

        if $r1 == null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <com.google.common.base.Verify: void verify(boolean,java.lang.String,java.lang.Object)>($z1, "%s is required in retry policy", "retryableStatusCodes");

        $r2 = <io.grpc.Status$Code: io.grpc.Status$Code OK>;

        $z1 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>($r2);

        if $z1 != 0 goto label3;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        staticinvoke <com.google.common.base.Verify: void verify(boolean,java.lang.String,java.lang.Object)>($z0, "%s must not contain OK", "retryableStatusCodes");

        return $r1;
    }

    static java.lang.String getServiceFromName(java.util.Map)
    {
        java.lang.String $r0;
        java.util.Map $r1;

        $r1 := @parameter0: java.util.Map;

        $r0 = staticinvoke <io.grpc.internal.JsonUtil: java.lang.String getString(java.util.Map,java.lang.String)>($r1, "service");

        return $r0;
    }

    private static java.util.Set getStatusCodesFromList(java.util.List)
    {
        byte $b0;
        java.util.List $r0;
        java.util.EnumSet $r1;
        java.util.Iterator $r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        java.lang.Double $r4;
        int $i1, $i2;
        double $d0, $d1;
        io.grpc.Status $r5;
        io.grpc.Status$Code $r6, $r7;
        java.lang.String $r8;
        java.lang.StringBuilder $r9, r12;
        java.lang.Class $r10;
        java.util.Set $r11;
        com.google.common.base.VerifyException r13;
        java.lang.Throwable r14;

        $r0 := @parameter0: java.util.List;

        $r1 = staticinvoke <java.util.EnumSet: java.util.EnumSet noneOf(java.lang.Class)>(class "Lio/grpc/Status$Code;");

        $r2 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $z0 = $r3 instanceof java.lang.Double;

        if $z0 == 0 goto label6;

        $r4 = (java.lang.Double) $r3;

        $i1 = virtualinvoke $r4.<java.lang.Double: int intValue()>();

        $d0 = (double) $i1;

        $d1 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        $z0 = 1;

        $b0 = $d0 cmpl $d1;

        if $b0 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        staticinvoke <com.google.common.base.Verify: void verify(boolean,java.lang.String,java.lang.Object)>($z1, "Status code %s is not integral", $r3);

        $r5 = staticinvoke <io.grpc.Status: io.grpc.Status fromCodeValue(int)>($i1);

        $r6 = virtualinvoke $r5.<io.grpc.Status: io.grpc.Status$Code getCode()>();

        $r7 = $r6;

        $i1 = virtualinvoke $r6.<io.grpc.Status$Code: int value()>();

        $i2 = virtualinvoke $r4.<java.lang.Double: int intValue()>();

        if $i1 != $i2 goto label4;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        staticinvoke <com.google.common.base.Verify: void verify(boolean,java.lang.String,java.lang.Object)>($z0, "Status code %s is not valid", $r3);

        goto label7;

     label6:
        $z0 = $r3 instanceof java.lang.String;

        if $z0 == 0 goto label8;

        $r8 = (java.lang.String) $r3;

        $r7 = staticinvoke <io.grpc.Status$Code: io.grpc.Status$Code valueOf(java.lang.String)>($r8);

     label7:
        virtualinvoke $r1.<java.util.EnumSet: boolean add(java.lang.Object)>($r7);

        goto label1;

     label8:
        r13 = new com.google.common.base.VerifyException;

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not convert status code ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to Status.Code, because its type is ");

        $r10 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r13.<com.google.common.base.VerifyException: void <init>(java.lang.String)>($r8);

        r14 = (java.lang.Throwable) r13;

        throw r14;

     label9:
        $r11 = (java.util.Set) $r1;

        $r11 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r11);

        return $r11;
    }

    static io.grpc.internal.RetriableStream$Throttle getThrottlePolicy(java.util.Map)
    {
        java.util.Map $r0;
        java.lang.Double $r1;
        float $f0, $f1;
        boolean $z0, $z1;
        byte $b0;
        io.grpc.internal.RetriableStream$Throttle $r2;

        $r0 := @parameter0: java.util.Map;

        if $r0 != null goto label1;

        return null;

     label1:
        $r0 = staticinvoke <io.grpc.internal.JsonUtil: java.util.Map getObject(java.util.Map,java.lang.String)>($r0, "retryThrottling");

        if $r0 != null goto label2;

        return null;

     label2:
        $r1 = staticinvoke <io.grpc.internal.JsonUtil: java.lang.Double getNumberAsDouble(java.util.Map,java.lang.String)>($r0, "maxTokens");

        $f0 = virtualinvoke $r1.<java.lang.Double: float floatValue()>();

        $r1 = staticinvoke <io.grpc.internal.JsonUtil: java.lang.Double getNumberAsDouble(java.util.Map,java.lang.String)>($r0, "tokenRatio");

        $f1 = virtualinvoke $r1.<java.lang.Double: float floatValue()>();

        $z0 = 1;

        $b0 = $f0 cmpl 0.0F;

        if $b0 <= 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z1, "maxToken should be greater than zero");

        $b0 = $f1 cmpl 0.0F;

        if $b0 <= 0 goto label5;

        goto label6;

     label5:
        $z0 = 0;

     label6:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "tokenRatio should be greater than zero");

        $r2 = new io.grpc.internal.RetriableStream$Throttle;

        specialinvoke $r2.<io.grpc.internal.RetriableStream$Throttle: void <init>(float,float)>($f0, $f1);

        return $r2;
    }

    static java.lang.Long getTimeoutFromMethodConfig(java.util.Map)
    {
        java.lang.Long $r0;
        java.util.Map $r1;

        $r1 := @parameter0: java.util.Map;

        $r0 = staticinvoke <io.grpc.internal.JsonUtil: java.lang.Long getStringAsDuration(java.util.Map,java.lang.String)>($r1, "timeout");

        return $r0;
    }

    static java.lang.Boolean getWaitForReadyFromMethodConfig(java.util.Map)
    {
        java.lang.Boolean $r0;
        java.util.Map $r1;

        $r1 := @parameter0: java.util.Map;

        $r0 = staticinvoke <io.grpc.internal.JsonUtil: java.lang.Boolean getBoolean(java.util.Map,java.lang.String)>($r1, "waitForReady");

        return $r0;
    }

    public static io.grpc.NameResolver$ConfigOrError selectLbPolicyFromList(java.util.List, io.grpc.LoadBalancerRegistry)
    {
        java.util.logging.Level $r0;
        java.util.ArrayList $r1, r15;
        java.util.List $r2;
        io.grpc.LoadBalancerRegistry $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        io.grpc.internal.ServiceConfigUtil$LbConfig $r6;
        java.lang.String $r7;
        io.grpc.LoadBalancerProvider $r8;
        java.lang.Class $r9;
        java.util.logging.Logger $r10;
        java.util.Map $r11;
        io.grpc.NameResolver$ConfigOrError $r12;
        io.grpc.Status $r13;
        java.lang.StringBuilder $r14, r17;
        io.grpc.internal.ServiceConfigUtil$PolicySelection r16;

        $r2 := @parameter0: java.util.List;

        $r3 := @parameter1: io.grpc.LoadBalancerRegistry;

        r15 = new java.util.ArrayList;

        $r1 = r15;

        specialinvoke r15.<java.util.ArrayList: void <init>()>();

        $r4 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (io.grpc.internal.ServiceConfigUtil$LbConfig) $r5;

        $r7 = virtualinvoke $r6.<io.grpc.internal.ServiceConfigUtil$LbConfig: java.lang.String getPolicyName()>();

        $r8 = virtualinvoke $r3.<io.grpc.LoadBalancerRegistry: io.grpc.LoadBalancerProvider getProvider(java.lang.String)>($r7);

        if $r8 != null goto label2;

        $r2 = (java.util.List) $r1;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label1;

     label2:
        $r2 = (java.util.List) $r1;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $r9 = class "Lio/grpc/internal/ServiceConfigUtil;";

        $r7 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        $r10 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r7);

        $r0 = <java.util.logging.Level: java.util.logging.Level FINEST>;

        virtualinvoke $r10.<java.util.logging.Logger: void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>($r0, "io.grpc.internal.ServiceConfigUtil", "selectLbPolicyFromList", "{0} specified by Service Config are not available", $r1);

     label3:
        $r11 = virtualinvoke $r6.<io.grpc.internal.ServiceConfigUtil$LbConfig: java.util.Map getRawConfigValue()>();

        $r12 = virtualinvoke $r8.<io.grpc.LoadBalancerProvider: io.grpc.NameResolver$ConfigOrError parseLoadBalancingPolicyConfig(java.util.Map)>($r11);

        $r13 = virtualinvoke $r12.<io.grpc.NameResolver$ConfigOrError: io.grpc.Status getError()>();

        if $r13 == null goto label4;

        return $r12;

     label4:
        r16 = new io.grpc.internal.ServiceConfigUtil$PolicySelection;

        $r5 = virtualinvoke $r12.<io.grpc.NameResolver$ConfigOrError: java.lang.Object getConfig()>();

        specialinvoke r16.<io.grpc.internal.ServiceConfigUtil$PolicySelection: void <init>(io.grpc.LoadBalancerProvider,java.lang.Object)>($r8, $r5);

        $r12 = staticinvoke <io.grpc.NameResolver$ConfigOrError: io.grpc.NameResolver$ConfigOrError fromConfig(java.lang.Object)>(r16);

        return $r12;

     label5:
        $r13 = <io.grpc.Status: io.grpc.Status UNKNOWN>;

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("None of ");

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" specified by Service Config are available.");

        $r7 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = virtualinvoke $r13.<io.grpc.Status: io.grpc.Status withDescription(java.lang.String)>($r7);

        $r12 = staticinvoke <io.grpc.NameResolver$ConfigOrError: io.grpc.NameResolver$ConfigOrError fromError(io.grpc.Status)>($r13);

        return $r12;
    }

    public static io.grpc.internal.ServiceConfigUtil$LbConfig unwrapLoadBalancingConfig(java.util.Map)
    {
        java.util.Map $r0;
        int $i0;
        java.util.Set $r1;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        java.util.Map$Entry $r4;
        java.lang.String $r5;
        java.lang.StringBuilder $r6, r8;
        io.grpc.internal.ServiceConfigUtil$LbConfig r7;
        java.lang.RuntimeException r9;
        java.lang.Throwable r10;

        $r0 := @parameter0: java.util.Map;

        $i0 = interfaceinvoke $r0.<java.util.Map: int size()>();

        if $i0 != 1 goto label1;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.util.Map$Entry) $r3;

        $r3 = interfaceinvoke $r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r5 = (java.lang.String) $r3;

        r7 = new io.grpc.internal.ServiceConfigUtil$LbConfig;

        $r0 = staticinvoke <io.grpc.internal.JsonUtil: java.util.Map getObject(java.util.Map,java.lang.String)>($r0, $r5);

        specialinvoke r7.<io.grpc.internal.ServiceConfigUtil$LbConfig: void <init>(java.lang.String,java.util.Map)>($r5, $r0);

        return r7;

     label1:
        r9 = new java.lang.RuntimeException;

        r8 = new java.lang.StringBuilder;

        specialinvoke r8.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("There are ");

        $i0 = interfaceinvoke $r0.<java.util.Map: int size()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fields in a LoadBalancingConfig object. Exactly one is expected. Config=");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r9.<java.lang.RuntimeException: void <init>(java.lang.String)>($r5);

        r10 = (java.lang.Throwable) r9;

        throw r10;
    }

    public static java.util.List unwrapLoadBalancingConfigList(java.util.List)
    {
        java.util.ArrayList $r0, r6;
        java.util.List $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.util.Map $r4;
        io.grpc.internal.ServiceConfigUtil$LbConfig $r5;

        $r1 := @parameter0: java.util.List;

        if $r1 != null goto label1;

        return null;

     label1:
        r6 = new java.util.ArrayList;

        $r0 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.util.Map) $r3;

        $r5 = staticinvoke <io.grpc.internal.ServiceConfigUtil: io.grpc.internal.ServiceConfigUtil$LbConfig unwrapLoadBalancingConfig(java.util.Map)>($r4);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        goto label2;

     label3:
        $r1 = (java.util.List) $r0;

        $r1 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r1;
    }

io.grpc.internal.ServiceConfigUtil$LbConfig
<io.grpc.internal.ServiceConfigUtil$LbConfig: java.lang.String policyName>
<io.grpc.internal.ServiceConfigUtil$LbConfig: java.util.Map rawConfigValue>
    public void <init>(java.lang.String, java.util.Map)
    {
        io.grpc.internal.ServiceConfigUtil$LbConfig $r0;
        java.util.Map $r1;
        java.lang.String $r2;
        java.lang.Object $r3;

        $r0 := @this: io.grpc.internal.ServiceConfigUtil$LbConfig;

        $r2 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.Map;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r2, "policyName");

        $r2 = (java.lang.String) $r3;

        $r0.<io.grpc.internal.ServiceConfigUtil$LbConfig: java.lang.String policyName> = $r2;

        $r3 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "rawConfigValue");

        $r1 = (java.util.Map) $r3;

        $r0.<io.grpc.internal.ServiceConfigUtil$LbConfig: java.util.Map rawConfigValue> = $r1;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        io.grpc.internal.ServiceConfigUtil$LbConfig $r0, $r3;
        java.lang.String $r1, $r4;
        java.lang.Object $r2;
        boolean $z0, $z1;
        java.util.Map $r5, $r6;

        $r0 := @this: io.grpc.internal.ServiceConfigUtil$LbConfig;

        $r2 := @parameter0: java.lang.Object;

        $z0 = $r2 instanceof io.grpc.internal.ServiceConfigUtil$LbConfig;

        $z1 = 0;

        if $z0 == 0 goto label2;

        $r3 = (io.grpc.internal.ServiceConfigUtil$LbConfig) $r2;

        $r4 = $r0.<io.grpc.internal.ServiceConfigUtil$LbConfig: java.lang.String policyName>;

        $r1 = $r3.<io.grpc.internal.ServiceConfigUtil$LbConfig: java.lang.String policyName>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r5 = $r0.<io.grpc.internal.ServiceConfigUtil$LbConfig: java.util.Map rawConfigValue>;

        $r6 = $r3.<io.grpc.internal.ServiceConfigUtil$LbConfig: java.util.Map rawConfigValue>;

        $z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label1;

     label1:
        return $z1;

     label2:
        return 0;
    }

    public java.lang.String getPolicyName()
    {
        io.grpc.internal.ServiceConfigUtil$LbConfig $r0;
        java.lang.String r1;

        $r0 := @this: io.grpc.internal.ServiceConfigUtil$LbConfig;

        r1 = $r0.<io.grpc.internal.ServiceConfigUtil$LbConfig: java.lang.String policyName>;

        return r1;
    }

    public java.util.Map getRawConfigValue()
    {
        io.grpc.internal.ServiceConfigUtil$LbConfig $r0;
        java.util.Map r1;

        $r0 := @this: io.grpc.internal.ServiceConfigUtil$LbConfig;

        r1 = $r0.<io.grpc.internal.ServiceConfigUtil$LbConfig: java.util.Map rawConfigValue>;

        return r1;
    }

    public int hashCode()
    {
        io.grpc.internal.ServiceConfigUtil$LbConfig $r0;
        int $i0;
        java.lang.Object[] $r1;
        java.lang.String $r2;
        java.util.Map $r3;

        $r0 := @this: io.grpc.internal.ServiceConfigUtil$LbConfig;

        $r1 = newarray (java.lang.Object)[2];

        $r2 = $r0.<io.grpc.internal.ServiceConfigUtil$LbConfig: java.lang.String policyName>;

        $r1[0] = $r2;

        $r3 = $r0.<io.grpc.internal.ServiceConfigUtil$LbConfig: java.util.Map rawConfigValue>;

        $r1[1] = $r3;

        $i0 = staticinvoke <com.google.common.base.Objects: int hashCode(java.lang.Object[])>($r1);

        return $i0;
    }

    public java.lang.String toString()
    {
        io.grpc.internal.ServiceConfigUtil$LbConfig $r0;
        com.google.common.base.MoreObjects$ToStringHelper $r1;
        java.lang.String $r2;
        java.util.Map $r3;

        $r0 := @this: io.grpc.internal.ServiceConfigUtil$LbConfig;

        $r1 = staticinvoke <com.google.common.base.MoreObjects: com.google.common.base.MoreObjects$ToStringHelper toStringHelper(java.lang.Object)>($r0);

        $r2 = $r0.<io.grpc.internal.ServiceConfigUtil$LbConfig: java.lang.String policyName>;

        $r1 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object)>("policyName", $r2);

        $r3 = $r0.<io.grpc.internal.ServiceConfigUtil$LbConfig: java.util.Map rawConfigValue>;

        $r1 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object)>("rawConfigValue", $r3);

        $r2 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: java.lang.String toString()>();

        return $r2;
    }

io.grpc.internal.ServiceConfigUtil$PolicySelection
<io.grpc.internal.ServiceConfigUtil$PolicySelection: java.lang.Object config>
<io.grpc.internal.ServiceConfigUtil$PolicySelection: io.grpc.LoadBalancerProvider provider>
    public void <init>(io.grpc.LoadBalancerProvider, java.lang.Object)
    {
        io.grpc.internal.ServiceConfigUtil$PolicySelection $r0;
        java.lang.Object $r1, $r2;
        io.grpc.LoadBalancerProvider $r3;

        $r0 := @this: io.grpc.internal.ServiceConfigUtil$PolicySelection;

        $r3 := @parameter0: io.grpc.LoadBalancerProvider;

        $r1 := @parameter1: java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r3, "provider");

        $r3 = (io.grpc.LoadBalancerProvider) $r2;

        $r0.<io.grpc.internal.ServiceConfigUtil$PolicySelection: io.grpc.LoadBalancerProvider provider> = $r3;

        $r0.<io.grpc.internal.ServiceConfigUtil$PolicySelection: java.lang.Object config> = $r1;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        io.grpc.internal.ServiceConfigUtil$PolicySelection $r0, $r4;
        java.lang.Object $r1, $r7;
        boolean $z0, $z1;
        java.lang.Class $r2, $r3;
        io.grpc.LoadBalancerProvider $r5, $r6;

        $r0 := @this: io.grpc.internal.ServiceConfigUtil$PolicySelection;

        $r1 := @parameter0: java.lang.Object;

        $z0 = 1;

        if $r0 != $r1 goto label1;

        return 1;

     label1:
        if $r1 == null goto label5;

        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label2;

        return 0;

     label2:
        $r4 = (io.grpc.internal.ServiceConfigUtil$PolicySelection) $r1;

        $r5 = $r0.<io.grpc.internal.ServiceConfigUtil$PolicySelection: io.grpc.LoadBalancerProvider provider>;

        $r6 = $r4.<io.grpc.internal.ServiceConfigUtil$PolicySelection: io.grpc.LoadBalancerProvider provider>;

        $z1 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6);

        if $z1 == 0 goto label3;

        $r1 = $r0.<io.grpc.internal.ServiceConfigUtil$PolicySelection: java.lang.Object config>;

        $r7 = $r4.<io.grpc.internal.ServiceConfigUtil$PolicySelection: java.lang.Object config>;

        $z1 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r1, $r7);

        if $z1 == 0 goto label3;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;

     label5:
        return 0;
    }

    public int hashCode()
    {
        io.grpc.internal.ServiceConfigUtil$PolicySelection $r0;
        int $i0;
        java.lang.Object[] $r1;
        io.grpc.LoadBalancerProvider $r2;
        java.lang.Object $r3;

        $r0 := @this: io.grpc.internal.ServiceConfigUtil$PolicySelection;

        $r1 = newarray (java.lang.Object)[2];

        $r2 = $r0.<io.grpc.internal.ServiceConfigUtil$PolicySelection: io.grpc.LoadBalancerProvider provider>;

        $r1[0] = $r2;

        $r3 = $r0.<io.grpc.internal.ServiceConfigUtil$PolicySelection: java.lang.Object config>;

        $r1[1] = $r3;

        $i0 = staticinvoke <com.google.common.base.Objects: int hashCode(java.lang.Object[])>($r1);

        return $i0;
    }

    public java.lang.String toString()
    {
        io.grpc.internal.ServiceConfigUtil$PolicySelection $r0;
        com.google.common.base.MoreObjects$ToStringHelper $r1;
        io.grpc.LoadBalancerProvider $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        $r0 := @this: io.grpc.internal.ServiceConfigUtil$PolicySelection;

        $r1 = staticinvoke <com.google.common.base.MoreObjects: com.google.common.base.MoreObjects$ToStringHelper toStringHelper(java.lang.Object)>($r0);

        $r2 = $r0.<io.grpc.internal.ServiceConfigUtil$PolicySelection: io.grpc.LoadBalancerProvider provider>;

        $r1 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object)>("provider", $r2);

        $r3 = $r0.<io.grpc.internal.ServiceConfigUtil$PolicySelection: java.lang.Object config>;

        $r1 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object)>("config", $r3);

        $r4 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: java.lang.String toString()>();

        return $r4;
    }

