androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterKt
    public static final java.lang.String dumpSrc(org.jetbrains.kotlin.ir.IrElement)
    {
        org.jetbrains.kotlin.ir.IrElement $r0;
        java.lang.StringBuilder r1, $r2;
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor $r3;
        java.lang.Appendable $r4;
        org.jetbrains.kotlin.ir.visitors.IrElementVisitor $r5;
        java.lang.String $r7, $r11, $r14, $r17, $r20, r26, r29, r32;
        kotlin.text.Regex $r8, $r12, $r15, $r18, r22, r25, r28, r31;
        kotlin.text.RegexOption $r9, $r13, $r16, $r19;
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterKt$dumpSrc$1 $r10;
        java.lang.CharSequence r21, r24, r27, r30;
        kotlin.jvm.functions.Function1 r23;
        boolean z0, z1, z2, z3;

        $r0 := @parameter0: org.jetbrains.kotlin.ir.IrElement;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$dumpSrc");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        $r3 = new androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        $r4 = (java.lang.Appendable) r1;

        specialinvoke $r3.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void <init>(java.lang.Appendable)>($r4);

        $r5 = (org.jetbrains.kotlin.ir.visitors.IrElementVisitor) $r3;

        interfaceinvoke $r0.<org.jetbrains.kotlin.ir.IrElement: java.lang.Object accept(org.jetbrains.kotlin.ir.visitors.IrElementVisitor,java.lang.Object)>($r5, null);

        $r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r7, "sb\n        .toString()");

        r21 = (java.lang.CharSequence) $r7;

        $r8 = new kotlin.text.Regex;

        $r9 = <kotlin.text.RegexOption: kotlin.text.RegexOption MULTILINE>;

        specialinvoke $r8.<kotlin.text.Regex: void <init>(java.lang.String,kotlin.text.RegexOption)>("\\n(%tab%)+", $r9);

        r22 = $r8;

        $r10 = <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterKt$dumpSrc$1: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterKt$dumpSrc$1 INSTANCE>;

        r23 = (kotlin.jvm.functions.Function1) $r10;

        z0 = 0;

        $r11 = virtualinvoke r22.<kotlin.text.Regex: java.lang.String replace(java.lang.CharSequence,kotlin.jvm.functions.Function1)>(r21, r23);

        r24 = (java.lang.CharSequence) $r11;

        $r12 = new kotlin.text.Regex;

        $r13 = <kotlin.text.RegexOption: kotlin.text.RegexOption MULTILINE>;

        specialinvoke $r12.<kotlin.text.Regex: void <init>(java.lang.String,kotlin.text.RegexOption)>("%tab%", $r13);

        r25 = $r12;

        r26 = "";

        z1 = 0;

        $r14 = virtualinvoke r25.<kotlin.text.Regex: java.lang.String replace(java.lang.CharSequence,java.lang.String)>(r24, r26);

        r27 = (java.lang.CharSequence) $r14;

        $r15 = new kotlin.text.Regex;

        $r16 = <kotlin.text.RegexOption: kotlin.text.RegexOption MULTILINE>;

        specialinvoke $r15.<kotlin.text.Regex: void <init>(java.lang.String,kotlin.text.RegexOption)>("\\n(\\s)*$", $r16);

        r28 = $r15;

        r29 = "";

        z2 = 0;

        $r17 = virtualinvoke r28.<kotlin.text.Regex: java.lang.String replace(java.lang.CharSequence,java.lang.String)>(r27, r29);

        r30 = (java.lang.CharSequence) $r17;

        $r18 = new kotlin.text.Regex;

        $r19 = <kotlin.text.RegexOption: kotlin.text.RegexOption MULTILINE>;

        specialinvoke $r18.<kotlin.text.Regex: void <init>(java.lang.String,kotlin.text.RegexOption)>("}\\n(\\s)*,", $r19);

        r31 = $r18;

        r32 = "},";

        z3 = 0;

        $r20 = virtualinvoke r31.<kotlin.text.Regex: java.lang.String replace(java.lang.CharSequence,java.lang.String)>(r30, r32);

        return $r20;
    }

    private static final void appendListWith(java.lang.StringBuilder, java.util.List, java.lang.String, java.lang.String, java.lang.String, kotlin.jvm.functions.Function2)
    {
        java.lang.StringBuilder $r0;
        java.util.List r1;
        java.lang.String r2, r3, r4;
        kotlin.jvm.functions.Function2 r5;
        java.util.Iterator r6;
        java.lang.Object r7;
        boolean $z1, z2;

        $r0 := @parameter0: java.lang.StringBuilder;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: kotlin.jvm.functions.Function2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        z2 = 1;

        r6 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        if z2 != 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

     label2:
        interfaceinvoke r5.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r0, r7);

        z2 = 0;

        goto label1;

     label3:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        return;
    }

    public static final void access$appendListWith(java.lang.StringBuilder, java.util.List, java.lang.String, java.lang.String, java.lang.String, kotlin.jvm.functions.Function2)
    {
        java.lang.StringBuilder $r0;
        java.util.List r1;
        java.lang.String r2, r3, r4;
        kotlin.jvm.functions.Function2 r5;

        $r0 := @parameter0: java.lang.StringBuilder;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: kotlin.jvm.functions.Function2;

        staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterKt: void appendListWith(java.lang.StringBuilder,java.util.List,java.lang.String,java.lang.String,java.lang.String,kotlin.jvm.functions.Function2)>($r0, r1, r2, r3, r4, r5);

        return;
    }

