androidx.legacy.app.ActionBarDrawerToggle
<androidx.legacy.app.ActionBarDrawerToggle: java.lang.String TAG>
<androidx.legacy.app.ActionBarDrawerToggle: int[] THEME_ATTRS>
<androidx.legacy.app.ActionBarDrawerToggle: float TOGGLE_DRAWABLE_OFFSET>
<androidx.legacy.app.ActionBarDrawerToggle: int ID_HOME>
<androidx.legacy.app.ActionBarDrawerToggle: android.app.Activity mActivity>
<androidx.legacy.app.ActionBarDrawerToggle: androidx.legacy.app.ActionBarDrawerToggle$Delegate mActivityImpl>
<androidx.legacy.app.ActionBarDrawerToggle: androidx.drawerlayout.widget.DrawerLayout mDrawerLayout>
<androidx.legacy.app.ActionBarDrawerToggle: boolean mDrawerIndicatorEnabled>
<androidx.legacy.app.ActionBarDrawerToggle: boolean mHasCustomUpIndicator>
<androidx.legacy.app.ActionBarDrawerToggle: android.graphics.drawable.Drawable mHomeAsUpIndicator>
<androidx.legacy.app.ActionBarDrawerToggle: android.graphics.drawable.Drawable mDrawerImage>
<androidx.legacy.app.ActionBarDrawerToggle: androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable mSlider>
<androidx.legacy.app.ActionBarDrawerToggle: int mDrawerImageResource>
<androidx.legacy.app.ActionBarDrawerToggle: int mOpenDrawerContentDescRes>
<androidx.legacy.app.ActionBarDrawerToggle: int mCloseDrawerContentDescRes>
<androidx.legacy.app.ActionBarDrawerToggle: androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo mSetIndicatorInfo>
    public void <init>(android.app.Activity, androidx.drawerlayout.widget.DrawerLayout, int, int, int)
    {
        androidx.legacy.app.ActionBarDrawerToggle r0;
        android.app.Activity r1;
        androidx.drawerlayout.widget.DrawerLayout r2;
        int i0, i1, i2;
        boolean $z0, $z1;

        r0 := @this: androidx.legacy.app.ActionBarDrawerToggle;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: androidx.drawerlayout.widget.DrawerLayout;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $z0 = staticinvoke <androidx.legacy.app.ActionBarDrawerToggle: boolean assumeMaterial(android.content.Context)>(r1);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        specialinvoke r0.<androidx.legacy.app.ActionBarDrawerToggle: void <init>(android.app.Activity,androidx.drawerlayout.widget.DrawerLayout,boolean,int,int,int)>(r1, r2, $z1, i0, i1, i2);

        return;
    }

    private static boolean assumeMaterial(android.content.Context)
    {
        android.content.Context r0;
        android.content.pm.ApplicationInfo $r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r1.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i0 < 21 goto label1;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 21 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void <init>(android.app.Activity, androidx.drawerlayout.widget.DrawerLayout, boolean, int, int, int)
    {
        androidx.legacy.app.ActionBarDrawerToggle r0;
        android.app.Activity r1;
        androidx.drawerlayout.widget.DrawerLayout r2;
        boolean z0, $z1;
        int i0, i1, i2;
        android.graphics.drawable.Drawable $r3, $r4, $r6;
        androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable $r5, $r7;
        androidx.legacy.app.ActionBarDrawerToggle$DelegateProvider $r8;
        androidx.legacy.app.ActionBarDrawerToggle$Delegate $r9;
        float $f0;

        r0 := @this: androidx.legacy.app.ActionBarDrawerToggle;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: androidx.drawerlayout.widget.DrawerLayout;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.legacy.app.ActionBarDrawerToggle: boolean mDrawerIndicatorEnabled> = 1;

        r0.<androidx.legacy.app.ActionBarDrawerToggle: android.app.Activity mActivity> = r1;

        $z1 = r1 instanceof androidx.legacy.app.ActionBarDrawerToggle$DelegateProvider;

        if $z1 == 0 goto label1;

        $r8 = (androidx.legacy.app.ActionBarDrawerToggle$DelegateProvider) r1;

        $r9 = interfaceinvoke $r8.<androidx.legacy.app.ActionBarDrawerToggle$DelegateProvider: androidx.legacy.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()>();

        r0.<androidx.legacy.app.ActionBarDrawerToggle: androidx.legacy.app.ActionBarDrawerToggle$Delegate mActivityImpl> = $r9;

        goto label2;

     label1:
        r0.<androidx.legacy.app.ActionBarDrawerToggle: androidx.legacy.app.ActionBarDrawerToggle$Delegate mActivityImpl> = null;

     label2:
        r0.<androidx.legacy.app.ActionBarDrawerToggle: androidx.drawerlayout.widget.DrawerLayout mDrawerLayout> = r2;

        r0.<androidx.legacy.app.ActionBarDrawerToggle: int mDrawerImageResource> = i0;

        r0.<androidx.legacy.app.ActionBarDrawerToggle: int mOpenDrawerContentDescRes> = i1;

        r0.<androidx.legacy.app.ActionBarDrawerToggle: int mCloseDrawerContentDescRes> = i2;

        $r3 = specialinvoke r0.<androidx.legacy.app.ActionBarDrawerToggle: android.graphics.drawable.Drawable getThemeUpIndicator()>();

        r0.<androidx.legacy.app.ActionBarDrawerToggle: android.graphics.drawable.Drawable mHomeAsUpIndicator> = $r3;

        $r4 = staticinvoke <androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>(r1, i0);

        r0.<androidx.legacy.app.ActionBarDrawerToggle: android.graphics.drawable.Drawable mDrawerImage> = $r4;

        $r5 = new androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable;

        $r6 = r0.<androidx.legacy.app.ActionBarDrawerToggle: android.graphics.drawable.Drawable mDrawerImage>;

        specialinvoke $r5.<androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable: void <init>(androidx.legacy.app.ActionBarDrawerToggle,android.graphics.drawable.Drawable)>(r0, $r6);

        r0.<androidx.legacy.app.ActionBarDrawerToggle: androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable mSlider> = $r5;

        $r7 = r0.<androidx.legacy.app.ActionBarDrawerToggle: androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable mSlider>;

        if z0 == 0 goto label3;

        $f0 = 0.33333334F;

        goto label4;

     label3:
        $f0 = 0.0F;

     label4:
        virtualinvoke $r7.<androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable: void setOffset(float)>($f0);

        return;
    }

    public void syncState()
    {
        androidx.legacy.app.ActionBarDrawerToggle r0;
        androidx.drawerlayout.widget.DrawerLayout $r1, $r3;
        boolean $z0, $z1, $z2;
        androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable $r2, $r4, $r6;
        int $i0;
        android.graphics.drawable.Drawable r7;

        r0 := @this: androidx.legacy.app.ActionBarDrawerToggle;

        $r1 = r0.<androidx.legacy.app.ActionBarDrawerToggle: androidx.drawerlayout.widget.DrawerLayout mDrawerLayout>;

        $z0 = virtualinvoke $r1.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerOpen(int)>(8388611);

        if $z0 == 0 goto label1;

        $r6 = r0.<androidx.legacy.app.ActionBarDrawerToggle: androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable mSlider>;

        virtualinvoke $r6.<androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable: void setPosition(float)>(1.0F);

        goto label2;

     label1:
        $r2 = r0.<androidx.legacy.app.ActionBarDrawerToggle: androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable mSlider>;

        virtualinvoke $r2.<androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable: void setPosition(float)>(0.0F);

     label2:
        $z1 = r0.<androidx.legacy.app.ActionBarDrawerToggle: boolean mDrawerIndicatorEnabled>;

        if $z1 == 0 goto label5;

        $r4 = r0.<androidx.legacy.app.ActionBarDrawerToggle: androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable mSlider>;

        $r3 = r0.<androidx.legacy.app.ActionBarDrawerToggle: androidx.drawerlayout.widget.DrawerLayout mDrawerLayout>;

        $z2 = virtualinvoke $r3.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerOpen(int)>(8388611);

        if $z2 == 0 goto label3;

        $i0 = r0.<androidx.legacy.app.ActionBarDrawerToggle: int mCloseDrawerContentDescRes>;

        goto label4;

     label3:
        $i0 = r0.<androidx.legacy.app.ActionBarDrawerToggle: int mOpenDrawerContentDescRes>;

     label4:
        r7 = (android.graphics.drawable.Drawable) $r4;

        specialinvoke r0.<androidx.legacy.app.ActionBarDrawerToggle: void setActionBarUpIndicator(android.graphics.drawable.Drawable,int)>(r7, $i0);

     label5:
        return;
    }

    public void setHomeAsUpIndicator(android.graphics.drawable.Drawable)
    {
        androidx.legacy.app.ActionBarDrawerToggle r0;
        android.graphics.drawable.Drawable r1, $r2, $r3;
        boolean $z0;

        r0 := @this: androidx.legacy.app.ActionBarDrawerToggle;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        if r1 != null goto label1;

        $r3 = specialinvoke r0.<androidx.legacy.app.ActionBarDrawerToggle: android.graphics.drawable.Drawable getThemeUpIndicator()>();

        r0.<androidx.legacy.app.ActionBarDrawerToggle: android.graphics.drawable.Drawable mHomeAsUpIndicator> = $r3;

        r0.<androidx.legacy.app.ActionBarDrawerToggle: boolean mHasCustomUpIndicator> = 0;

        goto label2;

     label1:
        r0.<androidx.legacy.app.ActionBarDrawerToggle: android.graphics.drawable.Drawable mHomeAsUpIndicator> = r1;

        r0.<androidx.legacy.app.ActionBarDrawerToggle: boolean mHasCustomUpIndicator> = 1;

     label2:
        $z0 = r0.<androidx.legacy.app.ActionBarDrawerToggle: boolean mDrawerIndicatorEnabled>;

        if $z0 != 0 goto label3;

        $r2 = r0.<androidx.legacy.app.ActionBarDrawerToggle: android.graphics.drawable.Drawable mHomeAsUpIndicator>;

        specialinvoke r0.<androidx.legacy.app.ActionBarDrawerToggle: void setActionBarUpIndicator(android.graphics.drawable.Drawable,int)>($r2, 0);

     label3:
        return;
    }

    public void setHomeAsUpIndicator(int)
    {
        androidx.legacy.app.ActionBarDrawerToggle r0;
        int i0;
        android.app.Activity $r1;
        android.graphics.drawable.Drawable r2;

        r0 := @this: androidx.legacy.app.ActionBarDrawerToggle;

        i0 := @parameter0: int;

        r2 = null;

        if i0 == 0 goto label1;

        $r1 = r0.<androidx.legacy.app.ActionBarDrawerToggle: android.app.Activity mActivity>;

        r2 = staticinvoke <androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r1, i0);

     label1:
        virtualinvoke r0.<androidx.legacy.app.ActionBarDrawerToggle: void setHomeAsUpIndicator(android.graphics.drawable.Drawable)>(r2);

        return;
    }

    public void setDrawerIndicatorEnabled(boolean)
    {
        androidx.legacy.app.ActionBarDrawerToggle r0;
        boolean z0, $z1, $z2;
        android.graphics.drawable.Drawable $r1, r5;
        androidx.drawerlayout.widget.DrawerLayout $r2;
        androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable $r3;
        int $i0;

        r0 := @this: androidx.legacy.app.ActionBarDrawerToggle;

        z0 := @parameter0: boolean;

        $z1 = r0.<androidx.legacy.app.ActionBarDrawerToggle: boolean mDrawerIndicatorEnabled>;

        if z0 == $z1 goto label5;

        if z0 == 0 goto label3;

        $r3 = r0.<androidx.legacy.app.ActionBarDrawerToggle: androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable mSlider>;

        $r2 = r0.<androidx.legacy.app.ActionBarDrawerToggle: androidx.drawerlayout.widget.DrawerLayout mDrawerLayout>;

        $z2 = virtualinvoke $r2.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerOpen(int)>(8388611);

        if $z2 == 0 goto label1;

        $i0 = r0.<androidx.legacy.app.ActionBarDrawerToggle: int mCloseDrawerContentDescRes>;

        goto label2;

     label1:
        $i0 = r0.<androidx.legacy.app.ActionBarDrawerToggle: int mOpenDrawerContentDescRes>;

     label2:
        r5 = (android.graphics.drawable.Drawable) $r3;

        specialinvoke r0.<androidx.legacy.app.ActionBarDrawerToggle: void setActionBarUpIndicator(android.graphics.drawable.Drawable,int)>(r5, $i0);

        goto label4;

     label3:
        $r1 = r0.<androidx.legacy.app.ActionBarDrawerToggle: android.graphics.drawable.Drawable mHomeAsUpIndicator>;

        specialinvoke r0.<androidx.legacy.app.ActionBarDrawerToggle: void setActionBarUpIndicator(android.graphics.drawable.Drawable,int)>($r1, 0);

     label4:
        r0.<androidx.legacy.app.ActionBarDrawerToggle: boolean mDrawerIndicatorEnabled> = z0;

     label5:
        return;
    }

    public boolean isDrawerIndicatorEnabled()
    {
        androidx.legacy.app.ActionBarDrawerToggle r0;
        boolean $z0;

        r0 := @this: androidx.legacy.app.ActionBarDrawerToggle;

        $z0 = r0.<androidx.legacy.app.ActionBarDrawerToggle: boolean mDrawerIndicatorEnabled>;

        return $z0;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        androidx.legacy.app.ActionBarDrawerToggle r0;
        android.content.res.Configuration r1;
        boolean $z0;
        int $i0;
        android.app.Activity $r2;
        android.graphics.drawable.Drawable $r3, $r4;

        r0 := @this: androidx.legacy.app.ActionBarDrawerToggle;

        r1 := @parameter0: android.content.res.Configuration;

        $z0 = r0.<androidx.legacy.app.ActionBarDrawerToggle: boolean mHasCustomUpIndicator>;

        if $z0 != 0 goto label1;

        $r4 = specialinvoke r0.<androidx.legacy.app.ActionBarDrawerToggle: android.graphics.drawable.Drawable getThemeUpIndicator()>();

        r0.<androidx.legacy.app.ActionBarDrawerToggle: android.graphics.drawable.Drawable mHomeAsUpIndicator> = $r4;

     label1:
        $r2 = r0.<androidx.legacy.app.ActionBarDrawerToggle: android.app.Activity mActivity>;

        $i0 = r0.<androidx.legacy.app.ActionBarDrawerToggle: int mDrawerImageResource>;

        $r3 = staticinvoke <androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r2, $i0);

        r0.<androidx.legacy.app.ActionBarDrawerToggle: android.graphics.drawable.Drawable mDrawerImage> = $r3;

        virtualinvoke r0.<androidx.legacy.app.ActionBarDrawerToggle: void syncState()>();

        return;
    }

    public boolean onOptionsItemSelected(android.view.MenuItem)
    {
        androidx.legacy.app.ActionBarDrawerToggle r0;
        android.view.MenuItem r1;
        int $i0;
        boolean $z0, $z1;
        androidx.drawerlayout.widget.DrawerLayout $r2, $r3, $r4;

        r0 := @this: androidx.legacy.app.ActionBarDrawerToggle;

        r1 := @parameter0: android.view.MenuItem;

        if r1 == null goto label3;

        $i0 = interfaceinvoke r1.<android.view.MenuItem: int getItemId()>();

        if $i0 != 16908332 goto label3;

        $z0 = r0.<androidx.legacy.app.ActionBarDrawerToggle: boolean mDrawerIndicatorEnabled>;

        if $z0 == 0 goto label3;

        $r2 = r0.<androidx.legacy.app.ActionBarDrawerToggle: androidx.drawerlayout.widget.DrawerLayout mDrawerLayout>;

        $z1 = virtualinvoke $r2.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerVisible(int)>(8388611);

        if $z1 == 0 goto label1;

        $r4 = r0.<androidx.legacy.app.ActionBarDrawerToggle: androidx.drawerlayout.widget.DrawerLayout mDrawerLayout>;

        virtualinvoke $r4.<androidx.drawerlayout.widget.DrawerLayout: void closeDrawer(int)>(8388611);

        goto label2;

     label1:
        $r3 = r0.<androidx.legacy.app.ActionBarDrawerToggle: androidx.drawerlayout.widget.DrawerLayout mDrawerLayout>;

        virtualinvoke $r3.<androidx.drawerlayout.widget.DrawerLayout: void openDrawer(int)>(8388611);

     label2:
        return 1;

     label3:
        return 0;
    }

    public void onDrawerSlide(android.view.View, float)
    {
        androidx.legacy.app.ActionBarDrawerToggle r0;
        android.view.View r1;
        float f0, $f1, $f2, $f3, $f4, f5, f6;
        androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable $r2, $r3;
        byte $b0;

        r0 := @this: androidx.legacy.app.ActionBarDrawerToggle;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        $r2 = r0.<androidx.legacy.app.ActionBarDrawerToggle: androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable mSlider>;

        f5 = virtualinvoke $r2.<androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable: float getPosition()>();

        $b0 = f0 cmpl 0.5F;

        if $b0 <= 0 goto label1;

        $f2 = f0 - 0.5F;

        $f3 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f2);

        $f4 = $f3 * 2.0F;

        f6 = staticinvoke <java.lang.Math: float max(float,float)>(f5, $f4);

        goto label2;

     label1:
        $f1 = f0 * 2.0F;

        f6 = staticinvoke <java.lang.Math: float min(float,float)>(f5, $f1);

     label2:
        $r3 = r0.<androidx.legacy.app.ActionBarDrawerToggle: androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable mSlider>;

        virtualinvoke $r3.<androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable: void setPosition(float)>(f6);

        return;
    }

    public void onDrawerOpened(android.view.View)
    {
        androidx.legacy.app.ActionBarDrawerToggle r0;
        android.view.View r1;
        androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable $r2;
        boolean $z0;
        int $i0;

        r0 := @this: androidx.legacy.app.ActionBarDrawerToggle;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.legacy.app.ActionBarDrawerToggle: androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable mSlider>;

        virtualinvoke $r2.<androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable: void setPosition(float)>(1.0F);

        $z0 = r0.<androidx.legacy.app.ActionBarDrawerToggle: boolean mDrawerIndicatorEnabled>;

        if $z0 == 0 goto label1;

        $i0 = r0.<androidx.legacy.app.ActionBarDrawerToggle: int mCloseDrawerContentDescRes>;

        specialinvoke r0.<androidx.legacy.app.ActionBarDrawerToggle: void setActionBarDescription(int)>($i0);

     label1:
        return;
    }

    public void onDrawerClosed(android.view.View)
    {
        androidx.legacy.app.ActionBarDrawerToggle r0;
        android.view.View r1;
        androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable $r2;
        boolean $z0;
        int $i0;

        r0 := @this: androidx.legacy.app.ActionBarDrawerToggle;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.legacy.app.ActionBarDrawerToggle: androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable mSlider>;

        virtualinvoke $r2.<androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable: void setPosition(float)>(0.0F);

        $z0 = r0.<androidx.legacy.app.ActionBarDrawerToggle: boolean mDrawerIndicatorEnabled>;

        if $z0 == 0 goto label1;

        $i0 = r0.<androidx.legacy.app.ActionBarDrawerToggle: int mOpenDrawerContentDescRes>;

        specialinvoke r0.<androidx.legacy.app.ActionBarDrawerToggle: void setActionBarDescription(int)>($i0);

     label1:
        return;
    }

    public void onDrawerStateChanged(int)
    {
        androidx.legacy.app.ActionBarDrawerToggle r0;
        int i0;

        r0 := @this: androidx.legacy.app.ActionBarDrawerToggle;

        i0 := @parameter0: int;

        return;
    }

    private android.graphics.drawable.Drawable getThemeUpIndicator()
    {
        androidx.legacy.app.ActionBarDrawerToggle r0;
        android.content.res.TypedArray r1, r12;
        android.graphics.drawable.Drawable r2, $r9, r13;
        androidx.legacy.app.ActionBarDrawerToggle$Delegate $r3, $r8;
        int $i0;
        int[] $r4, $r7;
        android.app.Activity $r5, $r6;
        android.app.ActionBar r10;
        java.lang.Object r11;
        android.content.Context r14;

        r0 := @this: androidx.legacy.app.ActionBarDrawerToggle;

        $r3 = r0.<androidx.legacy.app.ActionBarDrawerToggle: androidx.legacy.app.ActionBarDrawerToggle$Delegate mActivityImpl>;

        if $r3 == null goto label1;

        $r8 = r0.<androidx.legacy.app.ActionBarDrawerToggle: androidx.legacy.app.ActionBarDrawerToggle$Delegate mActivityImpl>;

        $r9 = interfaceinvoke $r8.<androidx.legacy.app.ActionBarDrawerToggle$Delegate: android.graphics.drawable.Drawable getThemeUpIndicator()>();

        return $r9;

     label1:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 18 goto label4;

        $r6 = r0.<androidx.legacy.app.ActionBarDrawerToggle: android.app.Activity mActivity>;

        r10 = virtualinvoke $r6.<android.app.Activity: android.app.ActionBar getActionBar()>();

        if r10 == null goto label2;

        r11 = virtualinvoke r10.<android.app.ActionBar: android.content.Context getThemedContext()>();

        goto label3;

     label2:
        r11 = r0.<androidx.legacy.app.ActionBarDrawerToggle: android.app.Activity mActivity>;

     label3:
        $r7 = <androidx.legacy.app.ActionBarDrawerToggle: int[] THEME_ATTRS>;

        r14 = (android.content.Context) r11;

        r1 = virtualinvoke r14.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(null, $r7, 16843470, 0);

        r2 = virtualinvoke r1.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        virtualinvoke r1.<android.content.res.TypedArray: void recycle()>();

        return r2;

     label4:
        $r5 = r0.<androidx.legacy.app.ActionBarDrawerToggle: android.app.Activity mActivity>;

        $r4 = <androidx.legacy.app.ActionBarDrawerToggle: int[] THEME_ATTRS>;

        r12 = virtualinvoke $r5.<android.app.Activity: android.content.res.TypedArray obtainStyledAttributes(int[])>($r4);

        r13 = virtualinvoke r12.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        virtualinvoke r12.<android.content.res.TypedArray: void recycle()>();

        return r13;
    }

    private void setActionBarUpIndicator(android.graphics.drawable.Drawable, int)
    {
        androidx.legacy.app.ActionBarDrawerToggle r0;
        android.graphics.drawable.Drawable r1;
        int i0, $i1;
        androidx.legacy.app.ActionBarDrawerToggle$Delegate $r2, $r23;
        androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo $r3, $r4, $r6, $r8, $r11, $r15, $r20;
        java.lang.reflect.Method $r5, $r13, $r17;
        android.widget.ImageView $r7, $r9;
        android.app.Activity $r10, $r21, $r22;
        java.lang.Object[] $r12, $r16;
        java.lang.Integer $r18;
        java.lang.Throwable $r24, r27;
        android.app.ActionBar r25, r26;

        r0 := @this: androidx.legacy.app.ActionBarDrawerToggle;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.legacy.app.ActionBarDrawerToggle: androidx.legacy.app.ActionBarDrawerToggle$Delegate mActivityImpl>;

        if $r2 == null goto label01;

        $r23 = r0.<androidx.legacy.app.ActionBarDrawerToggle: androidx.legacy.app.ActionBarDrawerToggle$Delegate mActivityImpl>;

        interfaceinvoke $r23.<androidx.legacy.app.ActionBarDrawerToggle$Delegate: void setActionBarUpIndicator(android.graphics.drawable.Drawable,int)>(r1, i0);

        return;

     label01:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 18 goto label03;

        $r22 = r0.<androidx.legacy.app.ActionBarDrawerToggle: android.app.Activity mActivity>;

        r25 = virtualinvoke $r22.<android.app.Activity: android.app.ActionBar getActionBar()>();

        if r25 == null goto label02;

        virtualinvoke r25.<android.app.ActionBar: void setHomeAsUpIndicator(android.graphics.drawable.Drawable)>(r1);

        virtualinvoke r25.<android.app.ActionBar: void setHomeActionContentDescription(int)>(i0);

     label02:
        goto label10;

     label03:
        $r3 = r0.<androidx.legacy.app.ActionBarDrawerToggle: androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo mSetIndicatorInfo>;

        if $r3 != null goto label04;

        $r20 = new androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo;

        $r21 = r0.<androidx.legacy.app.ActionBarDrawerToggle: android.app.Activity mActivity>;

        specialinvoke $r20.<androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo: void <init>(android.app.Activity)>($r21);

        r0.<androidx.legacy.app.ActionBarDrawerToggle: androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo mSetIndicatorInfo> = $r20;

     label04:
        $r4 = r0.<androidx.legacy.app.ActionBarDrawerToggle: androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo mSetIndicatorInfo>;

        $r5 = $r4.<androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo: java.lang.reflect.Method mSetHomeAsUpIndicator>;

        if $r5 == null goto label08;

     label05:
        $r10 = r0.<androidx.legacy.app.ActionBarDrawerToggle: android.app.Activity mActivity>;

        r26 = virtualinvoke $r10.<android.app.Activity: android.app.ActionBar getActionBar()>();

        $r11 = r0.<androidx.legacy.app.ActionBarDrawerToggle: androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo mSetIndicatorInfo>;

        $r13 = $r11.<androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo: java.lang.reflect.Method mSetHomeAsUpIndicator>;

        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = r1;

        virtualinvoke $r13.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r26, $r12);

        $r15 = r0.<androidx.legacy.app.ActionBarDrawerToggle: androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo mSetIndicatorInfo>;

        $r17 = $r15.<androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo: java.lang.reflect.Method mSetHomeActionContentDescription>;

        $r16 = newarray (java.lang.Object)[1];

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r16[0] = $r18;

        virtualinvoke $r17.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r26, $r16);

     label06:
        goto label10;

     label07:
        $r24 := @caughtexception;

        r27 = $r24;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActionBarDrawerToggle", "Couldn\'t set home-as-up indicator via JB-MR2 API", r27);

        goto label10;

     label08:
        $r6 = r0.<androidx.legacy.app.ActionBarDrawerToggle: androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo mSetIndicatorInfo>;

        $r7 = $r6.<androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo: android.widget.ImageView mUpIndicatorView>;

        if $r7 == null goto label09;

        $r8 = r0.<androidx.legacy.app.ActionBarDrawerToggle: androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo mSetIndicatorInfo>;

        $r9 = $r8.<androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo: android.widget.ImageView mUpIndicatorView>;

        virtualinvoke $r9.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>(r1);

        goto label10;

     label09:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActionBarDrawerToggle", "Couldn\'t set home-as-up indicator");

     label10:
        return;

        catch java.lang.Exception from label05 to label06 with label07;
    }

    private void setActionBarDescription(int)
    {
        androidx.legacy.app.ActionBarDrawerToggle r0;
        int i0, $i1;
        androidx.legacy.app.ActionBarDrawerToggle$Delegate $r1, $r15;
        androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo $r2, $r3, $r6, $r12;
        java.lang.reflect.Method $r4, $r8;
        android.app.Activity $r5, $r13, $r14;
        java.lang.Object[] $r7;
        java.lang.Integer $r9;
        java.lang.CharSequence $r11;
        java.lang.Throwable $r16, r19;
        android.app.ActionBar r17, r18;

        r0 := @this: androidx.legacy.app.ActionBarDrawerToggle;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.legacy.app.ActionBarDrawerToggle: androidx.legacy.app.ActionBarDrawerToggle$Delegate mActivityImpl>;

        if $r1 == null goto label1;

        $r15 = r0.<androidx.legacy.app.ActionBarDrawerToggle: androidx.legacy.app.ActionBarDrawerToggle$Delegate mActivityImpl>;

        interfaceinvoke $r15.<androidx.legacy.app.ActionBarDrawerToggle$Delegate: void setActionBarDescription(int)>(i0);

        return;

     label1:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 18 goto label3;

        $r14 = r0.<androidx.legacy.app.ActionBarDrawerToggle: android.app.Activity mActivity>;

        r17 = virtualinvoke $r14.<android.app.Activity: android.app.ActionBar getActionBar()>();

        if r17 == null goto label2;

        virtualinvoke r17.<android.app.ActionBar: void setHomeActionContentDescription(int)>(i0);

     label2:
        goto label8;

     label3:
        $r2 = r0.<androidx.legacy.app.ActionBarDrawerToggle: androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo mSetIndicatorInfo>;

        if $r2 != null goto label4;

        $r12 = new androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo;

        $r13 = r0.<androidx.legacy.app.ActionBarDrawerToggle: android.app.Activity mActivity>;

        specialinvoke $r12.<androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo: void <init>(android.app.Activity)>($r13);

        r0.<androidx.legacy.app.ActionBarDrawerToggle: androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo mSetIndicatorInfo> = $r12;

     label4:
        $r3 = r0.<androidx.legacy.app.ActionBarDrawerToggle: androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo mSetIndicatorInfo>;

        $r4 = $r3.<androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo: java.lang.reflect.Method mSetHomeAsUpIndicator>;

        if $r4 == null goto label8;

     label5:
        $r5 = r0.<androidx.legacy.app.ActionBarDrawerToggle: android.app.Activity mActivity>;

        r18 = virtualinvoke $r5.<android.app.Activity: android.app.ActionBar getActionBar()>();

        $r6 = r0.<androidx.legacy.app.ActionBarDrawerToggle: androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo mSetIndicatorInfo>;

        $r8 = $r6.<androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo: java.lang.reflect.Method mSetHomeActionContentDescription>;

        $r7 = newarray (java.lang.Object)[1];

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7[0] = $r9;

        virtualinvoke $r8.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r18, $r7);

        $r11 = virtualinvoke r18.<android.app.ActionBar: java.lang.CharSequence getSubtitle()>();

        virtualinvoke r18.<android.app.ActionBar: void setSubtitle(java.lang.CharSequence)>($r11);

     label6:
        goto label8;

     label7:
        $r16 := @caughtexception;

        r19 = $r16;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActionBarDrawerToggle", "Couldn\'t set content description via JB-MR2 API", r19);

     label8:
        return;

        catch java.lang.Exception from label5 to label6 with label7;
    }

    static void <clinit>()
    {
        int[] $r0;

        $r0 = newarray (int)[1];

        $r0[0] = 16843531;

        <androidx.legacy.app.ActionBarDrawerToggle: int[] THEME_ATTRS> = $r0;

        return;
    }

androidx.legacy.app.ActionBarDrawerToggle$Delegate
<androidx.legacy.app.ActionBarDrawerToggle$Delegate: android.graphics.drawable.Drawable getThemeUpIndicator()>
<androidx.legacy.app.ActionBarDrawerToggle$Delegate: void setActionBarUpIndicator(android.graphics.drawable.Drawable,int)>
<androidx.legacy.app.ActionBarDrawerToggle$Delegate: void setActionBarDescription(int)>
androidx.legacy.app.ActionBarDrawerToggle$DelegateProvider
<androidx.legacy.app.ActionBarDrawerToggle$DelegateProvider: androidx.legacy.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()>
androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo
<androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo: java.lang.reflect.Method mSetHomeAsUpIndicator>
<androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo: java.lang.reflect.Method mSetHomeActionContentDescription>
<androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo: android.widget.ImageView mUpIndicatorView>
    void <init>(android.app.Activity)
    {
        androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo r0;
        android.app.Activity r1;
        android.view.ViewGroup r2;
        int i0, $i1;
        android.view.View r3, r4, r5, r17, $r18;
        java.lang.Class[] $r6, $r9;
        java.lang.Class $r7, $r10, $r11;
        java.lang.reflect.Method $r8, $r12;
        java.lang.Throwable $r13, r16;
        android.view.ViewParent $r14;
        boolean $z0;
        android.widget.ImageView $r15;

        r0 := @this: androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo;

        r1 := @parameter0: android.app.Activity;

        specialinvoke r0.<java.lang.Object: void <init>()>();

     label1:
        $r7 = class "Landroid/app/ActionBar;";

        $r6 = newarray (java.lang.Class)[1];

        $r6[0] = class "Landroid/graphics/drawable/Drawable;";

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("setHomeAsUpIndicator", $r6);

        r0.<androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo: java.lang.reflect.Method mSetHomeAsUpIndicator> = $r8;

        $r11 = class "Landroid/app/ActionBar;";

        $r9 = newarray (java.lang.Class)[1];

        $r10 = <java.lang.Integer: java.lang.Class TYPE>;

        $r9[0] = $r10;

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("setHomeActionContentDescription", $r9);

        r0.<androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo: java.lang.reflect.Method mSetHomeActionContentDescription> = $r12;

     label2:
        return;

     label3:
        $r13 := @caughtexception;

        r16 = $r13;

        r17 = virtualinvoke r1.<android.app.Activity: android.view.View findViewById(int)>(16908332);

        if r17 != null goto label4;

        return;

     label4:
        $r14 = virtualinvoke r17.<android.view.View: android.view.ViewParent getParent()>();

        r2 = (android.view.ViewGroup) $r14;

        i0 = virtualinvoke r2.<android.view.ViewGroup: int getChildCount()>();

        if i0 == 2 goto label5;

        return;

     label5:
        r3 = virtualinvoke r2.<android.view.ViewGroup: android.view.View getChildAt(int)>(0);

        r4 = virtualinvoke r2.<android.view.ViewGroup: android.view.View getChildAt(int)>(1);

        $i1 = virtualinvoke r3.<android.view.View: int getId()>();

        if $i1 != 16908332 goto label6;

        $r18 = r4;

        goto label7;

     label6:
        $r18 = r3;

     label7:
        r5 = $r18;

        $z0 = r5 instanceof android.widget.ImageView;

        if $z0 == 0 goto label8;

        $r15 = (android.widget.ImageView) r5;

        r0.<androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo: android.widget.ImageView mUpIndicatorView> = $r15;

     label8:
        return;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
    }

androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable
<androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable: boolean mHasMirroring>
<androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable: android.graphics.Rect mTmpRect>
<androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable: float mPosition>
<androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable: float mOffset>
<androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable: androidx.legacy.app.ActionBarDrawerToggle this$0>
    void <init>(androidx.legacy.app.ActionBarDrawerToggle, android.graphics.drawable.Drawable)
    {
        androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable r0;
        androidx.legacy.app.ActionBarDrawerToggle r1;
        android.graphics.drawable.Drawable r2;
        int $i0;
        android.graphics.Rect $r3;
        boolean $z0;

        r0 := @this: androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable;

        r1 := @parameter0: androidx.legacy.app.ActionBarDrawerToggle;

        r2 := @parameter1: android.graphics.drawable.Drawable;

        r0.<androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable: androidx.legacy.app.ActionBarDrawerToggle this$0> = r1;

        specialinvoke r0.<android.graphics.drawable.InsetDrawable: void <init>(android.graphics.drawable.Drawable,int)>(r2, 0);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 <= 18 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable: boolean mHasMirroring> = $z0;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable: android.graphics.Rect mTmpRect> = $r3;

        return;
    }

    public void setPosition(float)
    {
        androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable r0;
        float f0;

        r0 := @this: androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable;

        f0 := @parameter0: float;

        r0.<androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable: float mPosition> = f0;

        virtualinvoke r0.<androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable: void invalidateSelf()>();

        return;
    }

    public float getPosition()
    {
        androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable r0;
        float $f0;

        r0 := @this: androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable;

        $f0 = r0.<androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable: float mPosition>;

        return $f0;
    }

    public void setOffset(float)
    {
        androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable r0;
        float f0;

        r0 := @this: androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable;

        f0 := @parameter0: float;

        r0.<androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable: float mOffset> = f0;

        virtualinvoke r0.<androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable: void invalidateSelf()>();

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable r0;
        android.graphics.Canvas r1;
        boolean z0, $z1, $z2;
        byte b0, $b4;
        int i1, $i3;
        android.graphics.Rect $r2, $r7;
        androidx.legacy.app.ActionBarDrawerToggle $r3;
        android.app.Activity $r4;
        android.view.Window $r5;
        android.view.View $r6;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;

        r0 := @this: androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable: android.graphics.Rect mTmpRect>;

        virtualinvoke r0.<androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable: void copyBounds(android.graphics.Rect)>($r2);

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $r3 = r0.<androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable: androidx.legacy.app.ActionBarDrawerToggle this$0>;

        $r4 = $r3.<androidx.legacy.app.ActionBarDrawerToggle: android.app.Activity mActivity>;

        $r5 = virtualinvoke $r4.<android.app.Activity: android.view.Window getWindow()>();

        $r6 = virtualinvoke $r5.<android.view.Window: android.view.View getDecorView()>();

        $i3 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>($r6);

        if $i3 != 1 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z0 = $z2;

        if z0 == 0 goto label3;

        $b4 = -1;

        goto label4;

     label3:
        $b4 = 1;

     label4:
        b0 = $b4;

        $r7 = r0.<androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable: android.graphics.Rect mTmpRect>;

        i1 = virtualinvoke $r7.<android.graphics.Rect: int width()>();

        $f0 = r0.<androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable: float mOffset>;

        $f2 = neg $f0;

        $f1 = (float) i1;

        $f4 = $f2 * $f1;

        $f3 = r0.<androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable: float mPosition>;

        $f6 = $f4 * $f3;

        $f5 = (float) b0;

        $f7 = $f6 * $f5;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f7, 0.0F);

        if z0 == 0 goto label5;

        $z1 = r0.<androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable: boolean mHasMirroring>;

        if $z1 != 0 goto label5;

        $f8 = (float) i1;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f8, 0.0F);

        virtualinvoke r1.<android.graphics.Canvas: void scale(float,float)>(-1.0F, 1.0F);

     label5:
        specialinvoke r0.<android.graphics.drawable.InsetDrawable: void draw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

        return;
    }

