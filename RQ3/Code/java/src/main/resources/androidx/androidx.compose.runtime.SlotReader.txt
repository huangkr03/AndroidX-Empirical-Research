androidx.compose.runtime.SlotReader
<androidx.compose.runtime.SlotReader: androidx.compose.runtime.SlotTable table>
<androidx.compose.runtime.SlotReader: int[] groups>
<androidx.compose.runtime.SlotReader: int groupsSize>
<androidx.compose.runtime.SlotReader: java.lang.Object[] slots>
<androidx.compose.runtime.SlotReader: int slotsSize>
<androidx.compose.runtime.SlotReader: boolean closed>
<androidx.compose.runtime.SlotReader: int currentGroup>
<androidx.compose.runtime.SlotReader: int currentEnd>
<androidx.compose.runtime.SlotReader: int parent>
<androidx.compose.runtime.SlotReader: int emptyCount>
<androidx.compose.runtime.SlotReader: int currentSlot>
<androidx.compose.runtime.SlotReader: int currentSlotEnd>
    public void <init>(androidx.compose.runtime.SlotTable)
    {
        androidx.compose.runtime.SlotReader r0;
        androidx.compose.runtime.SlotTable r1, $r2, $r4, $r5, $r7;
        int[] $r3;
        int $i0, $i1, $i2;
        java.lang.Object[] $r6;

        r0 := @this: androidx.compose.runtime.SlotReader;

        r1 := @parameter0: androidx.compose.runtime.SlotTable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "table");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.runtime.SlotReader: androidx.compose.runtime.SlotTable table> = r1;

        $r2 = r0.<androidx.compose.runtime.SlotReader: androidx.compose.runtime.SlotTable table>;

        $r3 = virtualinvoke $r2.<androidx.compose.runtime.SlotTable: int[] getGroups()>();

        r0.<androidx.compose.runtime.SlotReader: int[] groups> = $r3;

        $r4 = r0.<androidx.compose.runtime.SlotReader: androidx.compose.runtime.SlotTable table>;

        $i0 = virtualinvoke $r4.<androidx.compose.runtime.SlotTable: int getGroupsSize()>();

        r0.<androidx.compose.runtime.SlotReader: int groupsSize> = $i0;

        $r5 = r0.<androidx.compose.runtime.SlotReader: androidx.compose.runtime.SlotTable table>;

        $r6 = virtualinvoke $r5.<androidx.compose.runtime.SlotTable: java.lang.Object[] getSlots()>();

        r0.<androidx.compose.runtime.SlotReader: java.lang.Object[] slots> = $r6;

        $r7 = r0.<androidx.compose.runtime.SlotReader: androidx.compose.runtime.SlotTable table>;

        $i1 = virtualinvoke $r7.<androidx.compose.runtime.SlotTable: int getSlotsSize()>();

        r0.<androidx.compose.runtime.SlotReader: int slotsSize> = $i1;

        $i2 = r0.<androidx.compose.runtime.SlotReader: int groupsSize>;

        r0.<androidx.compose.runtime.SlotReader: int currentEnd> = $i2;

        r0.<androidx.compose.runtime.SlotReader: int parent> = -1;

        return;
    }

    public final androidx.compose.runtime.SlotTable getTable$runtime_release()
    {
        androidx.compose.runtime.SlotReader r0;
        androidx.compose.runtime.SlotTable $r1;

        r0 := @this: androidx.compose.runtime.SlotReader;

        $r1 = r0.<androidx.compose.runtime.SlotReader: androidx.compose.runtime.SlotTable table>;

        return $r1;
    }

    public final boolean getClosed()
    {
        androidx.compose.runtime.SlotReader r0;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.SlotReader;

        $z0 = r0.<androidx.compose.runtime.SlotReader: boolean closed>;

        return $z0;
    }

    public final int getCurrentGroup()
    {
        androidx.compose.runtime.SlotReader r0;
        int $i0;

        r0 := @this: androidx.compose.runtime.SlotReader;

        $i0 = r0.<androidx.compose.runtime.SlotReader: int currentGroup>;

        return $i0;
    }

    public final int getCurrentEnd()
    {
        androidx.compose.runtime.SlotReader r0;
        int $i0;

        r0 := @this: androidx.compose.runtime.SlotReader;

        $i0 = r0.<androidx.compose.runtime.SlotReader: int currentEnd>;

        return $i0;
    }

    public final int getParent()
    {
        androidx.compose.runtime.SlotReader r0;
        int $i0;

        r0 := @this: androidx.compose.runtime.SlotReader;

        $i0 = r0.<androidx.compose.runtime.SlotReader: int parent>;

        return $i0;
    }

    public final int getSize()
    {
        androidx.compose.runtime.SlotReader r0;
        int $i0;

        r0 := @this: androidx.compose.runtime.SlotReader;

        $i0 = r0.<androidx.compose.runtime.SlotReader: int groupsSize>;

        return $i0;
    }

    public final int getSlot()
    {
        androidx.compose.runtime.SlotReader r0;
        int $i0, $i1, $i2, $i3;
        int[] $r1;

        r0 := @this: androidx.compose.runtime.SlotReader;

        $i1 = r0.<androidx.compose.runtime.SlotReader: int currentSlot>;

        $r1 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $i0 = r0.<androidx.compose.runtime.SlotReader: int parent>;

        $i2 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$slotAnchor(int[],int)>($r1, $i0);

        $i3 = $i1 - $i2;

        return $i3;
    }

    public final int parent(int)
    {
        androidx.compose.runtime.SlotReader r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: androidx.compose.runtime.SlotReader;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $i1 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$parentAnchor(int[],int)>($r1, i0);

        return $i1;
    }

    public final boolean isNode()
    {
        androidx.compose.runtime.SlotReader r0;
        int $i0;
        int[] $r1;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.SlotReader;

        $r1 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $i0 = r0.<androidx.compose.runtime.SlotReader: int currentGroup>;

        $z0 = staticinvoke <androidx.compose.runtime.SlotTableKt: boolean access$isNode(int[],int)>($r1, $i0);

        return $z0;
    }

    public final boolean isNode(int)
    {
        androidx.compose.runtime.SlotReader r0;
        int i0;
        int[] $r1;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.SlotReader;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $z0 = staticinvoke <androidx.compose.runtime.SlotTableKt: boolean access$isNode(int[],int)>($r1, i0);

        return $z0;
    }

    public final int getNodeCount()
    {
        androidx.compose.runtime.SlotReader r0;
        int $i0, $i1;
        int[] $r1;

        r0 := @this: androidx.compose.runtime.SlotReader;

        $r1 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $i0 = r0.<androidx.compose.runtime.SlotReader: int currentGroup>;

        $i1 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$nodeCount(int[],int)>($r1, $i0);

        return $i1;
    }

    public final int nodeCount(int)
    {
        androidx.compose.runtime.SlotReader r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: androidx.compose.runtime.SlotReader;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $i1 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$nodeCount(int[],int)>($r1, i0);

        return $i1;
    }

    public final java.lang.Object node(int)
    {
        androidx.compose.runtime.SlotReader r0;
        int i0;
        int[] $r1, $r2;
        boolean $z0;
        java.lang.Object $r3;

        r0 := @this: androidx.compose.runtime.SlotReader;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $z0 = staticinvoke <androidx.compose.runtime.SlotTableKt: boolean access$isNode(int[],int)>($r1, i0);

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $r3 = specialinvoke r0.<androidx.compose.runtime.SlotReader: java.lang.Object node(int[],int)>($r2, i0);

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public final boolean isGroupEnd()
    {
        androidx.compose.runtime.SlotReader r0;
        boolean $z0, $z1;
        int $i0, $i1;

        r0 := @this: androidx.compose.runtime.SlotReader;

        $z0 = virtualinvoke r0.<androidx.compose.runtime.SlotReader: boolean getInEmpty()>();

        if $z0 != 0 goto label1;

        $i1 = r0.<androidx.compose.runtime.SlotReader: int currentGroup>;

        $i0 = r0.<androidx.compose.runtime.SlotReader: int currentEnd>;

        if $i1 != $i0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public final boolean getInEmpty()
    {
        androidx.compose.runtime.SlotReader r0;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.SlotReader;

        $i0 = r0.<androidx.compose.runtime.SlotReader: int emptyCount>;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final int getGroupSize()
    {
        androidx.compose.runtime.SlotReader r0;
        int $i0, $i1;
        int[] $r1;

        r0 := @this: androidx.compose.runtime.SlotReader;

        $r1 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $i0 = r0.<androidx.compose.runtime.SlotReader: int currentGroup>;

        $i1 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$groupSize(int[],int)>($r1, $i0);

        return $i1;
    }

    public final int groupSize(int)
    {
        androidx.compose.runtime.SlotReader r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: androidx.compose.runtime.SlotReader;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $i1 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$groupSize(int[],int)>($r1, i0);

        return $i1;
    }

    public final int getGroupEnd()
    {
        androidx.compose.runtime.SlotReader r0;
        int $i0;

        r0 := @this: androidx.compose.runtime.SlotReader;

        $i0 = r0.<androidx.compose.runtime.SlotReader: int currentEnd>;

        return $i0;
    }

    public final int groupEnd(int)
    {
        androidx.compose.runtime.SlotReader r0;
        int i0, $i1, $i2;
        int[] $r1;

        r0 := @this: androidx.compose.runtime.SlotReader;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $i1 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$groupSize(int[],int)>($r1, i0);

        $i2 = i0 + $i1;

        return $i2;
    }

    public final int getGroupKey()
    {
        androidx.compose.runtime.SlotReader r0;
        int $i0, $i1, $i2, $i3;
        int[] $r1;

        r0 := @this: androidx.compose.runtime.SlotReader;

        $i1 = r0.<androidx.compose.runtime.SlotReader: int currentGroup>;

        $i0 = r0.<androidx.compose.runtime.SlotReader: int currentEnd>;

        if $i1 >= $i0 goto label1;

        $r1 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $i2 = r0.<androidx.compose.runtime.SlotReader: int currentGroup>;

        $i3 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$key(int[],int)>($r1, $i2);

        goto label2;

     label1:
        $i3 = 0;

     label2:
        return $i3;
    }

    public final int groupKey(int)
    {
        androidx.compose.runtime.SlotReader r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: androidx.compose.runtime.SlotReader;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $i1 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$key(int[],int)>($r1, i0);

        return $i1;
    }

    public final int getGroupSlotIndex()
    {
        androidx.compose.runtime.SlotReader r0;
        int $i0, $i1, $i2, $i3;
        int[] $r1;

        r0 := @this: androidx.compose.runtime.SlotReader;

        $i1 = r0.<androidx.compose.runtime.SlotReader: int currentSlot>;

        $r1 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $i0 = r0.<androidx.compose.runtime.SlotReader: int parent>;

        $i2 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$slotAnchor(int[],int)>($r1, $i0);

        $i3 = $i1 - $i2;

        return $i3;
    }

    public final boolean hasObjectKey(int)
    {
        androidx.compose.runtime.SlotReader r0;
        int i0;
        int[] $r1;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.SlotReader;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $z0 = staticinvoke <androidx.compose.runtime.SlotTableKt: boolean access$hasObjectKey(int[],int)>($r1, i0);

        return $z0;
    }

    public final java.lang.Object getGroupObjectKey()
    {
        androidx.compose.runtime.SlotReader r0;
        int $i0, $i1, $i2;
        int[] $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.compose.runtime.SlotReader;

        $i1 = r0.<androidx.compose.runtime.SlotReader: int currentGroup>;

        $i0 = r0.<androidx.compose.runtime.SlotReader: int currentEnd>;

        if $i1 >= $i0 goto label1;

        $r1 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $i2 = r0.<androidx.compose.runtime.SlotReader: int currentGroup>;

        $r2 = specialinvoke r0.<androidx.compose.runtime.SlotReader: java.lang.Object objectKey(int[],int)>($r1, $i2);

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public final java.lang.Object groupObjectKey(int)
    {
        androidx.compose.runtime.SlotReader r0;
        int i0;
        int[] $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.compose.runtime.SlotReader;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $r2 = specialinvoke r0.<androidx.compose.runtime.SlotReader: java.lang.Object objectKey(int[],int)>($r1, i0);

        return $r2;
    }

    public final java.lang.Object getGroupAux()
    {
        androidx.compose.runtime.SlotReader r0;
        int $i0, $i1, $i2;
        int[] $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.compose.runtime.SlotReader;

        $i1 = r0.<androidx.compose.runtime.SlotReader: int currentGroup>;

        $i0 = r0.<androidx.compose.runtime.SlotReader: int currentEnd>;

        if $i1 >= $i0 goto label1;

        $r1 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $i2 = r0.<androidx.compose.runtime.SlotReader: int currentGroup>;

        $r2 = specialinvoke r0.<androidx.compose.runtime.SlotReader: java.lang.Object aux(int[],int)>($r1, $i2);

        goto label2;

     label1:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

     label2:
        return $r2;
    }

    public final java.lang.Object groupAux(int)
    {
        androidx.compose.runtime.SlotReader r0;
        int i0;
        int[] $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.compose.runtime.SlotReader;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $r2 = specialinvoke r0.<androidx.compose.runtime.SlotReader: java.lang.Object aux(int[],int)>($r1, i0);

        return $r2;
    }

    public final java.lang.Object getGroupNode()
    {
        androidx.compose.runtime.SlotReader r0;
        int $i0, $i1, $i2;
        int[] $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.compose.runtime.SlotReader;

        $i1 = r0.<androidx.compose.runtime.SlotReader: int currentGroup>;

        $i0 = r0.<androidx.compose.runtime.SlotReader: int currentEnd>;

        if $i1 >= $i0 goto label1;

        $r1 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $i2 = r0.<androidx.compose.runtime.SlotReader: int currentGroup>;

        $r2 = specialinvoke r0.<androidx.compose.runtime.SlotReader: java.lang.Object node(int[],int)>($r1, $i2);

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public final int groupKey(androidx.compose.runtime.Anchor)
    {
        androidx.compose.runtime.SlotReader r0;
        androidx.compose.runtime.Anchor r1;
        boolean $z0;
        androidx.compose.runtime.SlotTable $r2;
        int[] $r3;
        int $i0, $i1;

        r0 := @this: androidx.compose.runtime.SlotReader;

        r1 := @parameter0: androidx.compose.runtime.Anchor;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "anchor");

        $z0 = virtualinvoke r1.<androidx.compose.runtime.Anchor: boolean getValid()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $r2 = r0.<androidx.compose.runtime.SlotReader: androidx.compose.runtime.SlotTable table>;

        $i0 = virtualinvoke $r2.<androidx.compose.runtime.SlotTable: int anchorIndex(androidx.compose.runtime.Anchor)>(r1);

        $i1 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$key(int[],int)>($r3, $i0);

        goto label2;

     label1:
        $i1 = 0;

     label2:
        return $i1;
    }

    public final boolean hasMark(int)
    {
        androidx.compose.runtime.SlotReader r0;
        int i0;
        int[] $r1;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.SlotReader;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $z0 = staticinvoke <androidx.compose.runtime.SlotTableKt: boolean access$hasMark(int[],int)>($r1, i0);

        return $z0;
    }

    public final boolean containsMark(int)
    {
        androidx.compose.runtime.SlotReader r0;
        int i0;
        int[] $r1;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.SlotReader;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $z0 = staticinvoke <androidx.compose.runtime.SlotTableKt: boolean access$containsMark(int[],int)>($r1, i0);

        return $z0;
    }

    public final int getParentNodes()
    {
        androidx.compose.runtime.SlotReader r0;
        int $i0, $i1, $i2;
        int[] $r1;

        r0 := @this: androidx.compose.runtime.SlotReader;

        $i0 = r0.<androidx.compose.runtime.SlotReader: int parent>;

        if $i0 < 0 goto label1;

        $r1 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $i1 = r0.<androidx.compose.runtime.SlotReader: int parent>;

        $i2 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$nodeCount(int[],int)>($r1, $i1);

        goto label2;

     label1:
        $i2 = 0;

     label2:
        return $i2;
    }

    public final int parentOf(int)
    {
        androidx.compose.runtime.SlotReader r0;
        int i0, $i1, $i2;
        int[] $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6, $r7;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.SlotReader;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i2 = r0.<androidx.compose.runtime.SlotReader: int groupsSize>;

        if i0 >= $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid group index ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label3:
        $r1 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $i1 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$parentAnchor(int[],int)>($r1, i0);

        return $i1;
    }

    public final int getGroupSlotCount()
    {
        androidx.compose.runtime.SlotReader r0;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        int[] $r1, $r2;

        r0 := @this: androidx.compose.runtime.SlotReader;

        i0 = r0.<androidx.compose.runtime.SlotReader: int currentGroup>;

        $r1 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        i1 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$slotAnchor(int[],int)>($r1, i0);

        i2 = i0 + 1;

        $i4 = r0.<androidx.compose.runtime.SlotReader: int groupsSize>;

        if i2 >= $i4 goto label1;

        $r2 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $i6 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$dataAnchor(int[],int)>($r2, i2);

        goto label2;

     label1:
        $i6 = r0.<androidx.compose.runtime.SlotReader: int slotsSize>;

     label2:
        i3 = $i6;

        $i5 = i3 - i1;

        return $i5;
    }

    public final java.lang.Object get(int)
    {
        androidx.compose.runtime.SlotReader r0;
        int i0, i1, $i2, $i3;
        androidx.compose.runtime.Composer$Companion $r1;
        java.lang.Object[] $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.compose.runtime.SlotReader;

        i0 := @parameter0: int;

        $i2 = r0.<androidx.compose.runtime.SlotReader: int currentSlot>;

        i1 = $i2 + i0;

        $i3 = r0.<androidx.compose.runtime.SlotReader: int currentSlotEnd>;

        if i1 >= $i3 goto label1;

        $r2 = r0.<androidx.compose.runtime.SlotReader: java.lang.Object[] slots>;

        $r3 = $r2[i1];

        goto label2;

     label1:
        $r1 = <androidx.compose.runtime.Composer: androidx.compose.runtime.Composer$Companion Companion>;

        $r3 = virtualinvoke $r1.<androidx.compose.runtime.Composer$Companion: java.lang.Object getEmpty()>();

     label2:
        return $r3;
    }

    public final java.lang.Object groupGet(int)
    {
        androidx.compose.runtime.SlotReader r0;
        int i0, $i1;
        java.lang.Object $r1;

        r0 := @this: androidx.compose.runtime.SlotReader;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.compose.runtime.SlotReader: int currentGroup>;

        $r1 = virtualinvoke r0.<androidx.compose.runtime.SlotReader: java.lang.Object groupGet(int,int)>($i1, i0);

        return $r1;
    }

    public final java.lang.Object groupGet(int, int)
    {
        androidx.compose.runtime.SlotReader r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7;
        int[] $r1, $r4;
        androidx.compose.runtime.Composer$Companion $r2;
        java.lang.Object[] $r3;
        java.lang.Object $r5;

        r0 := @this: androidx.compose.runtime.SlotReader;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        i2 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$slotAnchor(int[],int)>($r1, i0);

        i3 = i0 + 1;

        $i6 = r0.<androidx.compose.runtime.SlotReader: int groupsSize>;

        if i3 >= $i6 goto label1;

        $r4 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $i7 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$dataAnchor(int[],int)>($r4, i3);

        goto label2;

     label1:
        $i7 = r0.<androidx.compose.runtime.SlotReader: int slotsSize>;

     label2:
        i4 = $i7;

        i5 = i2 + i1;

        if i5 >= i4 goto label3;

        $r3 = r0.<androidx.compose.runtime.SlotReader: java.lang.Object[] slots>;

        $r5 = $r3[i5];

        goto label4;

     label3:
        $r2 = <androidx.compose.runtime.Composer: androidx.compose.runtime.Composer$Companion Companion>;

        $r5 = virtualinvoke $r2.<androidx.compose.runtime.Composer$Companion: java.lang.Object getEmpty()>();

     label4:
        return $r5;
    }

    public final java.lang.Object next()
    {
        androidx.compose.runtime.SlotReader r0;
        int i0, $i1, $i2, $i3, $i4;
        androidx.compose.runtime.Composer$Companion $r1;
        java.lang.Object $r2, $r4;
        java.lang.Object[] $r3;

        r0 := @this: androidx.compose.runtime.SlotReader;

        $i1 = r0.<androidx.compose.runtime.SlotReader: int emptyCount>;

        if $i1 > 0 goto label1;

        $i3 = r0.<androidx.compose.runtime.SlotReader: int currentSlot>;

        $i2 = r0.<androidx.compose.runtime.SlotReader: int currentSlotEnd>;

        if $i3 < $i2 goto label2;

     label1:
        $r1 = <androidx.compose.runtime.Composer: androidx.compose.runtime.Composer$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.compose.runtime.Composer$Companion: java.lang.Object getEmpty()>();

        return $r2;

     label2:
        $r3 = r0.<androidx.compose.runtime.SlotReader: java.lang.Object[] slots>;

        i0 = r0.<androidx.compose.runtime.SlotReader: int currentSlot>;

        $i4 = i0 + 1;

        r0.<androidx.compose.runtime.SlotReader: int currentSlot> = $i4;

        $r4 = $r3[i0];

        return $r4;
    }

    public final void beginEmpty()
    {
        androidx.compose.runtime.SlotReader r0;
        int i0, $i1;

        r0 := @this: androidx.compose.runtime.SlotReader;

        i0 = r0.<androidx.compose.runtime.SlotReader: int emptyCount>;

        $i1 = i0 + 1;

        r0.<androidx.compose.runtime.SlotReader: int emptyCount> = $i1;

        return;
    }

    public final void endEmpty()
    {
        androidx.compose.runtime.SlotReader r0;
        int i0, $i1, $i2;
        java.lang.IllegalArgumentException $r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.SlotReader;

        $i1 = r0.<androidx.compose.runtime.SlotReader: int emptyCount>;

        if $i1 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $r3 = "Unbalanced begin/end empty";

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r1;

     label3:
        i0 = r0.<androidx.compose.runtime.SlotReader: int emptyCount>;

        $i2 = i0 + -1;

        r0.<androidx.compose.runtime.SlotReader: int emptyCount> = $i2;

        return;
    }

    public final void close()
    {
        androidx.compose.runtime.SlotReader r0;
        androidx.compose.runtime.SlotTable $r1;

        r0 := @this: androidx.compose.runtime.SlotReader;

        r0.<androidx.compose.runtime.SlotReader: boolean closed> = 1;

        $r1 = r0.<androidx.compose.runtime.SlotReader: androidx.compose.runtime.SlotTable table>;

        virtualinvoke $r1.<androidx.compose.runtime.SlotTable: void close$runtime_release(androidx.compose.runtime.SlotReader)>(r0);

        return;
    }

    public final void startGroup()
    {
        androidx.compose.runtime.SlotReader r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        int[] $r1, $r2, $r3, $r4;
        java.lang.IllegalArgumentException $r6;
        java.lang.String $r7, $r8;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.SlotReader;

        $i1 = r0.<androidx.compose.runtime.SlotReader: int emptyCount>;

        if $i1 > 0 goto label6;

        $r1 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $i2 = r0.<androidx.compose.runtime.SlotReader: int currentGroup>;

        $i3 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$parentAnchor(int[],int)>($r1, $i2);

        $i4 = r0.<androidx.compose.runtime.SlotReader: int parent>;

        if $i3 != $i4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $r8 = "Invalid slot table detected";

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label3:
        $i5 = r0.<androidx.compose.runtime.SlotReader: int currentGroup>;

        r0.<androidx.compose.runtime.SlotReader: int parent> = $i5;

        $i7 = r0.<androidx.compose.runtime.SlotReader: int currentGroup>;

        $r2 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $i6 = r0.<androidx.compose.runtime.SlotReader: int currentGroup>;

        $i8 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$groupSize(int[],int)>($r2, $i6);

        $i9 = $i7 + $i8;

        r0.<androidx.compose.runtime.SlotReader: int currentEnd> = $i9;

        $i15 = r0.<androidx.compose.runtime.SlotReader: int currentGroup>;

        $i10 = $i15 + 1;

        r0.<androidx.compose.runtime.SlotReader: int currentGroup> = $i10;

        i0 = $i15;

        $r3 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $i11 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$slotAnchor(int[],int)>($r3, i0);

        r0.<androidx.compose.runtime.SlotReader: int currentSlot> = $i11;

        $i12 = r0.<androidx.compose.runtime.SlotReader: int groupsSize>;

        $i13 = $i12 - 1;

        if i0 < $i13 goto label4;

        $i16 = r0.<androidx.compose.runtime.SlotReader: int slotsSize>;

        goto label5;

     label4:
        $r4 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $i14 = i0 + 1;

        $i16 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$dataAnchor(int[],int)>($r4, $i14);

     label5:
        r0.<androidx.compose.runtime.SlotReader: int currentSlotEnd> = $i16;

     label6:
        return;
    }

    public final void startNode()
    {
        androidx.compose.runtime.SlotReader r0;
        int $i0, $i1;
        int[] $r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;
        java.lang.String $r3, $r4;

        r0 := @this: androidx.compose.runtime.SlotReader;

        $i0 = r0.<androidx.compose.runtime.SlotReader: int emptyCount>;

        if $i0 > 0 goto label2;

        $r1 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $i1 = r0.<androidx.compose.runtime.SlotReader: int currentGroup>;

        $z0 = staticinvoke <androidx.compose.runtime.SlotTableKt: boolean access$isNode(int[],int)>($r1, $i1);

        if $z0 != 0 goto label1;

        $r4 = "Expected a node group";

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label1:
        virtualinvoke r0.<androidx.compose.runtime.SlotReader: void startGroup()>();

     label2:
        return;
    }

    public final int skipGroup()
    {
        androidx.compose.runtime.SlotReader r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        int[] $r1, $r2, $r3;
        boolean $z1, $z2, z3;
        java.lang.String $r4, $r7;
        kotlin.KotlinNothingValueException $r6;

        r0 := @this: androidx.compose.runtime.SlotReader;

        $i0 = r0.<androidx.compose.runtime.SlotReader: int emptyCount>;

        if $i0 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z3 = $z2;

        if z3 != 0 goto label3;

        $r7 = "Cannot skip while in an empty region";

        $r4 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        staticinvoke <androidx.compose.runtime.ComposerKt: java.lang.Void composeRuntimeError(java.lang.String)>($r4);

        $r6 = new kotlin.KotlinNothingValueException;

        specialinvoke $r6.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r6;

     label3:
        $r1 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $i1 = r0.<androidx.compose.runtime.SlotReader: int currentGroup>;

        $z1 = staticinvoke <androidx.compose.runtime.SlotTableKt: boolean access$isNode(int[],int)>($r1, $i1);

        if $z1 == 0 goto label4;

        $i7 = 1;

        goto label5;

     label4:
        $r2 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $i2 = r0.<androidx.compose.runtime.SlotReader: int currentGroup>;

        $i7 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$nodeCount(int[],int)>($r2, $i2);

     label5:
        i8 = $i7;

        $i4 = r0.<androidx.compose.runtime.SlotReader: int currentGroup>;

        $r3 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $i3 = r0.<androidx.compose.runtime.SlotReader: int currentGroup>;

        $i5 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$groupSize(int[],int)>($r3, $i3);

        $i6 = $i4 + $i5;

        r0.<androidx.compose.runtime.SlotReader: int currentGroup> = $i6;

        return i8;
    }

    public final void skipToGroupEnd()
    {
        androidx.compose.runtime.SlotReader r0;
        boolean z0, $z2;
        int $i0, $i1;
        java.lang.String $r1, $r4;
        kotlin.KotlinNothingValueException $r3;

        r0 := @this: androidx.compose.runtime.SlotReader;

        $i0 = r0.<androidx.compose.runtime.SlotReader: int emptyCount>;

        if $i0 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z0 = $z2;

        if z0 != 0 goto label3;

        $r4 = "Cannot skip the enclosing group while in an empty region";

        $r1 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        staticinvoke <androidx.compose.runtime.ComposerKt: java.lang.Void composeRuntimeError(java.lang.String)>($r1);

        $r3 = new kotlin.KotlinNothingValueException;

        specialinvoke $r3.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r3;

     label3:
        $i1 = r0.<androidx.compose.runtime.SlotReader: int currentEnd>;

        r0.<androidx.compose.runtime.SlotReader: int currentGroup> = $i1;

        return;
    }

    public final void reposition(int)
    {
        androidx.compose.runtime.SlotReader r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        int[] $r1, $r2;
        java.lang.String $r3, $r6;
        kotlin.KotlinNothingValueException $r5;
        boolean $z1, z2;

        r0 := @this: androidx.compose.runtime.SlotReader;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.compose.runtime.SlotReader: int emptyCount>;

        if $i1 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z2 = $z1;

        if z2 != 0 goto label3;

        $r6 = "Cannot reposition while in an empty region";

        $r3 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        staticinvoke <androidx.compose.runtime.ComposerKt: java.lang.Void composeRuntimeError(java.lang.String)>($r3);

        $r5 = new kotlin.KotlinNothingValueException;

        specialinvoke $r5.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r5;

     label3:
        r0.<androidx.compose.runtime.SlotReader: int currentGroup> = i0;

        $i2 = r0.<androidx.compose.runtime.SlotReader: int groupsSize>;

        if i0 >= $i2 goto label4;

        $r2 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $i6 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$parentAnchor(int[],int)>($r2, i0);

        goto label5;

     label4:
        $i6 = -1;

     label5:
        i7 = $i6;

        r0.<androidx.compose.runtime.SlotReader: int parent> = i7;

        if i7 >= 0 goto label6;

        $i5 = r0.<androidx.compose.runtime.SlotReader: int groupsSize>;

        r0.<androidx.compose.runtime.SlotReader: int currentEnd> = $i5;

        goto label7;

     label6:
        $r1 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $i3 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$groupSize(int[],int)>($r1, i7);

        $i4 = i7 + $i3;

        r0.<androidx.compose.runtime.SlotReader: int currentEnd> = $i4;

     label7:
        r0.<androidx.compose.runtime.SlotReader: int currentSlot> = 0;

        r0.<androidx.compose.runtime.SlotReader: int currentSlotEnd> = 0;

        return;
    }

    public final void restoreParent(int)
    {
        androidx.compose.runtime.SlotReader r0;
        int i0, i1, i2, $i3;
        boolean z0, $z3;
        java.lang.String r1, $r8;
        int[] $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7;
        kotlin.KotlinNothingValueException $r10;

        r0 := @this: androidx.compose.runtime.SlotReader;

        i0 := @parameter0: int;

        $r2 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $i3 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$groupSize(int[],int)>($r2, i0);

        i1 = i0 + $i3;

        i2 = r0.<androidx.compose.runtime.SlotReader: int currentGroup>;

        if i2 < i0 goto label1;

        if i2 > i1 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        z0 = $z3;

        if z0 != 0 goto label3;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a parent of ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        staticinvoke <androidx.compose.runtime.ComposerKt: java.lang.Void composeRuntimeError(java.lang.String)>($r8);

        $r10 = new kotlin.KotlinNothingValueException;

        specialinvoke $r10.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r10;

     label3:
        r0.<androidx.compose.runtime.SlotReader: int parent> = i0;

        r0.<androidx.compose.runtime.SlotReader: int currentEnd> = i1;

        r0.<androidx.compose.runtime.SlotReader: int currentSlot> = 0;

        r0.<androidx.compose.runtime.SlotReader: int currentSlotEnd> = 0;

        return;
    }

    public final void endGroup()
    {
        androidx.compose.runtime.SlotReader r0;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6;
        int[] $r1, $r2;
        java.lang.String $r4, $r7;
        kotlin.KotlinNothingValueException $r6;
        boolean $z1, z2;

        r0 := @this: androidx.compose.runtime.SlotReader;

        $i0 = r0.<androidx.compose.runtime.SlotReader: int emptyCount>;

        if $i0 != 0 goto label6;

        $i2 = r0.<androidx.compose.runtime.SlotReader: int currentGroup>;

        $i1 = r0.<androidx.compose.runtime.SlotReader: int currentEnd>;

        if $i2 != $i1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z2 = $z1;

        if z2 != 0 goto label3;

        $r7 = "endGroup() not called at the end of a group";

        $r4 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        staticinvoke <androidx.compose.runtime.ComposerKt: java.lang.Void composeRuntimeError(java.lang.String)>($r4);

        $r6 = new kotlin.KotlinNothingValueException;

        specialinvoke $r6.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r6;

     label3:
        $r1 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $i3 = r0.<androidx.compose.runtime.SlotReader: int parent>;

        i5 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$parentAnchor(int[],int)>($r1, $i3);

        r0.<androidx.compose.runtime.SlotReader: int parent> = i5;

        if i5 >= 0 goto label4;

        $i6 = r0.<androidx.compose.runtime.SlotReader: int groupsSize>;

        goto label5;

     label4:
        $r2 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $i4 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$groupSize(int[],int)>($r2, i5);

        $i6 = i5 + $i4;

     label5:
        r0.<androidx.compose.runtime.SlotReader: int currentEnd> = $i6;

     label6:
        return;
    }

    public final java.util.List extractKeys()
    {
        androidx.compose.runtime.SlotReader r0;
        java.util.List r1;
        java.util.ArrayList $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, $i8;
        androidx.compose.runtime.KeyInfo $r3;
        int[] $r4, $r5, $r7, $r8, $r9;
        java.lang.Object $r6;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.SlotReader;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r1 = (java.util.List) $r2;

        $i0 = r0.<androidx.compose.runtime.SlotReader: int emptyCount>;

        if $i0 <= 0 goto label1;

        return r1;

     label1:
        i6 = 0;

        i7 = r0.<androidx.compose.runtime.SlotReader: int currentGroup>;

     label2:
        $i1 = r0.<androidx.compose.runtime.SlotReader: int currentEnd>;

        if i7 >= $i1 goto label5;

        $r3 = new androidx.compose.runtime.KeyInfo;

        $r4 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $i2 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$key(int[],int)>($r4, i7);

        $r5 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $r6 = specialinvoke r0.<androidx.compose.runtime.SlotReader: java.lang.Object objectKey(int[],int)>($r5, i7);

        $i5 = i7;

        $r7 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $z0 = staticinvoke <androidx.compose.runtime.SlotTableKt: boolean access$isNode(int[],int)>($r7, i7);

        if $z0 == 0 goto label3;

        $i8 = 1;

        goto label4;

     label3:
        $r8 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $i8 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$nodeCount(int[],int)>($r8, i7);

     label4:
        $i3 = i6;

        i6 = i6 + 1;

        specialinvoke $r3.<androidx.compose.runtime.KeyInfo: void <init>(int,java.lang.Object,int,int,int)>($i2, $r6, $i5, $i8, $i3);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r3);

        $r9 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        $i4 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$groupSize(int[],int)>($r9, i7);

        i7 = i7 + $i4;

        goto label2;

     label5:
        return r1;
    }

    public final void forEachData$runtime_release(int, kotlin.jvm.functions.Function2)
    {
        androidx.compose.runtime.SlotReader r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, i8;
        kotlin.jvm.functions.Function2 r1;
        int[] $r2, $r10;
        androidx.compose.runtime.SlotTable $r3, $r4, $r9;
        java.lang.Integer $r5;
        java.lang.Object[] $r6;
        java.lang.Object $r7;

        r0 := @this: androidx.compose.runtime.SlotReader;

        i0 := @parameter0: int;

        r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        $r2 = r0.<androidx.compose.runtime.SlotReader: int[] groups>;

        i1 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$slotAnchor(int[],int)>($r2, i0);

        $i3 = i0 + 1;

        $r3 = r0.<androidx.compose.runtime.SlotReader: androidx.compose.runtime.SlotTable table>;

        $i4 = virtualinvoke $r3.<androidx.compose.runtime.SlotTable: int getGroupsSize()>();

        if $i3 >= $i4 goto label1;

        $r9 = r0.<androidx.compose.runtime.SlotReader: androidx.compose.runtime.SlotTable table>;

        $r10 = virtualinvoke $r9.<androidx.compose.runtime.SlotTable: int[] getGroups()>();

        $i6 = i0 + 1;

        $i7 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$dataAnchor(int[],int)>($r10, $i6);

        goto label2;

     label1:
        $r4 = r0.<androidx.compose.runtime.SlotReader: androidx.compose.runtime.SlotTable table>;

        $i7 = virtualinvoke $r4.<androidx.compose.runtime.SlotTable: int getSlotsSize()>();

     label2:
        i2 = $i7;

        i8 = i1;

     label3:
        if i8 >= i2 goto label4;

        $i5 = i8 - i1;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r6 = r0.<androidx.compose.runtime.SlotReader: java.lang.Object[] slots>;

        $r7 = $r6[i8];

        interfaceinvoke r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r5, $r7);

        i8 = i8 + 1;

        goto label3;

     label4:
        return;
    }

    public java.lang.String toString()
    {
        androidx.compose.runtime.SlotReader r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r11;

        r0 := @this: androidx.compose.runtime.SlotReader;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SlotReader(current=");

        $i0 = r0.<androidx.compose.runtime.SlotReader: int currentGroup>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", key=");

        $i1 = virtualinvoke r0.<androidx.compose.runtime.SlotReader: int getGroupKey()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", parent=");

        $i2 = r0.<androidx.compose.runtime.SlotReader: int parent>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", end=");

        $i3 = r0.<androidx.compose.runtime.SlotReader: int currentEnd>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public final androidx.compose.runtime.Anchor anchor(int)
    {
        androidx.compose.runtime.SlotReader r0;
        int i0, i1, i2, $i3, $i4;
        java.util.ArrayList $r1;
        androidx.compose.runtime.SlotTable $r2;
        java.lang.Object $r3;
        androidx.compose.runtime.Anchor $r4, $r6;

        r0 := @this: androidx.compose.runtime.SlotReader;

        i0 := @parameter0: int;

        $r2 = r0.<androidx.compose.runtime.SlotReader: androidx.compose.runtime.SlotTable table>;

        $r1 = virtualinvoke $r2.<androidx.compose.runtime.SlotTable: java.util.ArrayList getAnchors$runtime_release()>();

        i1 = r0.<androidx.compose.runtime.SlotReader: int groupsSize>;

        i2 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$search(java.util.ArrayList,int,int)>($r1, i0, i1);

        if i2 >= 0 goto label1;

        $r4 = new androidx.compose.runtime.Anchor;

        specialinvoke $r4.<androidx.compose.runtime.Anchor: void <init>(int)>(i0);

        $i3 = i2 + 1;

        $i4 = neg $i3;

        virtualinvoke $r1.<java.util.ArrayList: void add(int,java.lang.Object)>($i4, $r4);

        $r6 = $r4;

        goto label2;

     label1:
        $r3 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "get(location)");

        $r6 = (androidx.compose.runtime.Anchor) $r3;

     label2:
        return $r6;
    }

    public static androidx.compose.runtime.Anchor anchor$default(androidx.compose.runtime.SlotReader, int, int, java.lang.Object)
    {
        androidx.compose.runtime.SlotReader r0;
        int i0, $i1, i2;
        java.lang.Object r1;
        androidx.compose.runtime.Anchor $r2;

        r0 := @parameter0: androidx.compose.runtime.SlotReader;

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        i2 = r0.<androidx.compose.runtime.SlotReader: int currentGroup>;

     label1:
        $r2 = virtualinvoke r0.<androidx.compose.runtime.SlotReader: androidx.compose.runtime.Anchor anchor(int)>(i2);

        return $r2;
    }

    private final java.lang.Object node(int[], int)
    {
        androidx.compose.runtime.SlotReader r0;
        int[] $r1;
        int i0, $i1;
        boolean $z0;
        androidx.compose.runtime.Composer$Companion $r2;
        java.lang.Object[] $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.compose.runtime.SlotReader;

        $r1 := @parameter0: int[];

        i0 := @parameter1: int;

        $z0 = staticinvoke <androidx.compose.runtime.SlotTableKt: boolean access$isNode(int[],int)>($r1, i0);

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.compose.runtime.SlotReader: java.lang.Object[] slots>;

        $i1 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$nodeIndex(int[],int)>($r1, i0);

        $r4 = $r3[$i1];

        goto label2;

     label1:
        $r2 = <androidx.compose.runtime.Composer: androidx.compose.runtime.Composer$Companion Companion>;

        $r4 = virtualinvoke $r2.<androidx.compose.runtime.Composer$Companion: java.lang.Object getEmpty()>();

     label2:
        return $r4;
    }

    private final java.lang.Object aux(int[], int)
    {
        androidx.compose.runtime.SlotReader r0;
        int[] $r1;
        int i0, $i1;
        boolean $z0;
        androidx.compose.runtime.Composer$Companion $r2;
        java.lang.Object[] $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.compose.runtime.SlotReader;

        $r1 := @parameter0: int[];

        i0 := @parameter1: int;

        $z0 = staticinvoke <androidx.compose.runtime.SlotTableKt: boolean access$hasAux(int[],int)>($r1, i0);

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.compose.runtime.SlotReader: java.lang.Object[] slots>;

        $i1 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$auxIndex(int[],int)>($r1, i0);

        $r4 = $r3[$i1];

        goto label2;

     label1:
        $r2 = <androidx.compose.runtime.Composer: androidx.compose.runtime.Composer$Companion Companion>;

        $r4 = virtualinvoke $r2.<androidx.compose.runtime.Composer$Companion: java.lang.Object getEmpty()>();

     label2:
        return $r4;
    }

    private final java.lang.Object objectKey(int[], int)
    {
        androidx.compose.runtime.SlotReader r0;
        int[] $r1;
        int i0, $i1;
        boolean $z0;
        java.lang.Object[] $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.compose.runtime.SlotReader;

        $r1 := @parameter0: int[];

        i0 := @parameter1: int;

        $z0 = staticinvoke <androidx.compose.runtime.SlotTableKt: boolean access$hasObjectKey(int[],int)>($r1, i0);

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.compose.runtime.SlotReader: java.lang.Object[] slots>;

        $i1 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$objectKeyIndex(int[],int)>($r1, i0);

        $r3 = $r2[$i1];

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

