androidx.camera.core.SafeCloseImageReaderProxy
<androidx.camera.core.SafeCloseImageReaderProxy: java.lang.Object mLock>
<androidx.camera.core.SafeCloseImageReaderProxy: int mOutstandingImages>
<androidx.camera.core.SafeCloseImageReaderProxy: boolean mIsClosed>
<androidx.camera.core.SafeCloseImageReaderProxy: androidx.camera.core.impl.ImageReaderProxy mImageReaderProxy>
<androidx.camera.core.SafeCloseImageReaderProxy: android.view.Surface mSurface>
<androidx.camera.core.SafeCloseImageReaderProxy: androidx.camera.core.ForwardingImageProxy$OnImageCloseListener mForwardingImageCloseListener>
<androidx.camera.core.SafeCloseImageReaderProxy: androidx.camera.core.ForwardingImageProxy$OnImageCloseListener mImageCloseListener>
    public void <init>(androidx.camera.core.impl.ImageReaderProxy)
    {
        androidx.camera.core.SafeCloseImageReaderProxy r0;
        androidx.camera.core.impl.ImageReaderProxy r1;
        java.lang.Object $r2;
        androidx.camera.core.ForwardingImageProxy$OnImageCloseListener $r3;
        android.view.Surface $r4;

        r0 := @this: androidx.camera.core.SafeCloseImageReaderProxy;

        r1 := @parameter0: androidx.camera.core.impl.ImageReaderProxy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.core.SafeCloseImageReaderProxy: java.lang.Object mLock> = $r2;

        r0.<androidx.camera.core.SafeCloseImageReaderProxy: int mOutstandingImages> = 0;

        r0.<androidx.camera.core.SafeCloseImageReaderProxy: boolean mIsClosed> = 0;

        $r3 = dynamicinvoke "onImageClose" <androidx.camera.core.ForwardingImageProxy$OnImageCloseListener (androidx.camera.core.SafeCloseImageReaderProxy)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.camera.core.ImageProxy), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.core.SafeCloseImageReaderProxy: void lambda$new$0(androidx.camera.core.ImageProxy)>, methodtype: void __METHODTYPE__(androidx.camera.core.ImageProxy));

        r0.<androidx.camera.core.SafeCloseImageReaderProxy: androidx.camera.core.ForwardingImageProxy$OnImageCloseListener mImageCloseListener> = $r3;

        r0.<androidx.camera.core.SafeCloseImageReaderProxy: androidx.camera.core.impl.ImageReaderProxy mImageReaderProxy> = r1;

        $r4 = interfaceinvoke r1.<androidx.camera.core.impl.ImageReaderProxy: android.view.Surface getSurface()>();

        r0.<androidx.camera.core.SafeCloseImageReaderProxy: android.view.Surface mSurface> = $r4;

        return;
    }

    public androidx.camera.core.ImageProxy acquireLatestImage()
    {
        androidx.camera.core.SafeCloseImageReaderProxy r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r7;
        androidx.camera.core.impl.ImageReaderProxy $r4;
        androidx.camera.core.ImageProxy $r5, $r6;

        r0 := @this: androidx.camera.core.SafeCloseImageReaderProxy;

        $r3 = r0.<androidx.camera.core.SafeCloseImageReaderProxy: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.camera.core.SafeCloseImageReaderProxy: androidx.camera.core.impl.ImageReaderProxy mImageReaderProxy>;

        $r5 = interfaceinvoke $r4.<androidx.camera.core.impl.ImageReaderProxy: androidx.camera.core.ImageProxy acquireLatestImage()>();

        $r6 = specialinvoke r0.<androidx.camera.core.SafeCloseImageReaderProxy: androidx.camera.core.ImageProxy wrapImageProxy(androidx.camera.core.ImageProxy)>($r5);

        exitmonitor r1;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public androidx.camera.core.ImageProxy acquireNextImage()
    {
        androidx.camera.core.SafeCloseImageReaderProxy r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r7;
        androidx.camera.core.impl.ImageReaderProxy $r4;
        androidx.camera.core.ImageProxy $r5, $r6;

        r0 := @this: androidx.camera.core.SafeCloseImageReaderProxy;

        $r3 = r0.<androidx.camera.core.SafeCloseImageReaderProxy: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.camera.core.SafeCloseImageReaderProxy: androidx.camera.core.impl.ImageReaderProxy mImageReaderProxy>;

        $r5 = interfaceinvoke $r4.<androidx.camera.core.impl.ImageReaderProxy: androidx.camera.core.ImageProxy acquireNextImage()>();

        $r6 = specialinvoke r0.<androidx.camera.core.SafeCloseImageReaderProxy: androidx.camera.core.ImageProxy wrapImageProxy(androidx.camera.core.ImageProxy)>($r5);

        exitmonitor r1;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void close()
    {
        androidx.camera.core.SafeCloseImageReaderProxy r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r7;
        android.view.Surface $r4, $r6;
        androidx.camera.core.impl.ImageReaderProxy $r5;

        r0 := @this: androidx.camera.core.SafeCloseImageReaderProxy;

        $r3 = r0.<androidx.camera.core.SafeCloseImageReaderProxy: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.camera.core.SafeCloseImageReaderProxy: android.view.Surface mSurface>;

        if $r4 == null goto label2;

        $r6 = r0.<androidx.camera.core.SafeCloseImageReaderProxy: android.view.Surface mSurface>;

        virtualinvoke $r6.<android.view.Surface: void release()>();

     label2:
        $r5 = r0.<androidx.camera.core.SafeCloseImageReaderProxy: androidx.camera.core.impl.ImageReaderProxy mImageReaderProxy>;

        interfaceinvoke $r5.<androidx.camera.core.impl.ImageReaderProxy: void close()>();

        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private androidx.camera.core.ImageProxy wrapImageProxy(androidx.camera.core.ImageProxy)
    {
        androidx.camera.core.SafeCloseImageReaderProxy r0;
        androidx.camera.core.ImageProxy r1;
        androidx.camera.core.SingleCloseImageProxy r2, $r3;
        int $i0, $i1;
        androidx.camera.core.ForwardingImageProxy$OnImageCloseListener $r4;

        r0 := @this: androidx.camera.core.SafeCloseImageReaderProxy;

        r1 := @parameter0: androidx.camera.core.ImageProxy;

        if r1 == null goto label1;

        $i0 = r0.<androidx.camera.core.SafeCloseImageReaderProxy: int mOutstandingImages>;

        $i1 = $i0 + 1;

        r0.<androidx.camera.core.SafeCloseImageReaderProxy: int mOutstandingImages> = $i1;

        $r3 = new androidx.camera.core.SingleCloseImageProxy;

        specialinvoke $r3.<androidx.camera.core.SingleCloseImageProxy: void <init>(androidx.camera.core.ImageProxy)>(r1);

        r2 = $r3;

        $r4 = r0.<androidx.camera.core.SafeCloseImageReaderProxy: androidx.camera.core.ForwardingImageProxy$OnImageCloseListener mImageCloseListener>;

        virtualinvoke r2.<androidx.camera.core.SingleCloseImageProxy: void addOnImageCloseListener(androidx.camera.core.ForwardingImageProxy$OnImageCloseListener)>($r4);

        return r2;

     label1:
        return null;
    }

    public void safeClose()
    {
        androidx.camera.core.SafeCloseImageReaderProxy r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        androidx.camera.core.impl.ImageReaderProxy $r4;
        int $i0;

        r0 := @this: androidx.camera.core.SafeCloseImageReaderProxy;

        $r3 = r0.<androidx.camera.core.SafeCloseImageReaderProxy: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        r0.<androidx.camera.core.SafeCloseImageReaderProxy: boolean mIsClosed> = 1;

        $r4 = r0.<androidx.camera.core.SafeCloseImageReaderProxy: androidx.camera.core.impl.ImageReaderProxy mImageReaderProxy>;

        interfaceinvoke $r4.<androidx.camera.core.impl.ImageReaderProxy: void clearOnImageAvailableListener()>();

        $i0 = r0.<androidx.camera.core.SafeCloseImageReaderProxy: int mOutstandingImages>;

        if $i0 != 0 goto label2;

        virtualinvoke r0.<androidx.camera.core.SafeCloseImageReaderProxy: void close()>();

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int getCapacity()
    {
        androidx.camera.core.SafeCloseImageReaderProxy r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        androidx.camera.core.impl.ImageReaderProxy $r4;
        int $i0, $i1, $i2;

        r0 := @this: androidx.camera.core.SafeCloseImageReaderProxy;

        $r3 = r0.<androidx.camera.core.SafeCloseImageReaderProxy: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.camera.core.SafeCloseImageReaderProxy: androidx.camera.core.impl.ImageReaderProxy mImageReaderProxy>;

        $i0 = interfaceinvoke $r4.<androidx.camera.core.impl.ImageReaderProxy: int getMaxImages()>();

        $i1 = r0.<androidx.camera.core.SafeCloseImageReaderProxy: int mOutstandingImages>;

        $i2 = $i0 - $i1;

        exitmonitor r1;

     label2:
        return $i2;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setOnImageCloseListener(androidx.camera.core.ForwardingImageProxy$OnImageCloseListener)
    {
        androidx.camera.core.SafeCloseImageReaderProxy r0;
        androidx.camera.core.ForwardingImageProxy$OnImageCloseListener r1;
        java.lang.Object r2, $r3;

        r0 := @this: androidx.camera.core.SafeCloseImageReaderProxy;

        r1 := @parameter0: androidx.camera.core.ForwardingImageProxy$OnImageCloseListener;

        $r3 = r0.<androidx.camera.core.SafeCloseImageReaderProxy: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        r0.<androidx.camera.core.SafeCloseImageReaderProxy: androidx.camera.core.ForwardingImageProxy$OnImageCloseListener mForwardingImageCloseListener> = r1;

        exitmonitor r2;

        goto label1;

     label1:
        return;
    }

    public int getHeight()
    {
        androidx.camera.core.SafeCloseImageReaderProxy r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        androidx.camera.core.impl.ImageReaderProxy $r4;
        int $i0;

        r0 := @this: androidx.camera.core.SafeCloseImageReaderProxy;

        $r3 = r0.<androidx.camera.core.SafeCloseImageReaderProxy: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.camera.core.SafeCloseImageReaderProxy: androidx.camera.core.impl.ImageReaderProxy mImageReaderProxy>;

        $i0 = interfaceinvoke $r4.<androidx.camera.core.impl.ImageReaderProxy: int getHeight()>();

        exitmonitor r1;

     label2:
        return $i0;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getWidth()
    {
        androidx.camera.core.SafeCloseImageReaderProxy r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        androidx.camera.core.impl.ImageReaderProxy $r4;
        int $i0;

        r0 := @this: androidx.camera.core.SafeCloseImageReaderProxy;

        $r3 = r0.<androidx.camera.core.SafeCloseImageReaderProxy: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.camera.core.SafeCloseImageReaderProxy: androidx.camera.core.impl.ImageReaderProxy mImageReaderProxy>;

        $i0 = interfaceinvoke $r4.<androidx.camera.core.impl.ImageReaderProxy: int getWidth()>();

        exitmonitor r1;

     label2:
        return $i0;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getImageFormat()
    {
        androidx.camera.core.SafeCloseImageReaderProxy r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        androidx.camera.core.impl.ImageReaderProxy $r4;
        int $i0;

        r0 := @this: androidx.camera.core.SafeCloseImageReaderProxy;

        $r3 = r0.<androidx.camera.core.SafeCloseImageReaderProxy: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.camera.core.SafeCloseImageReaderProxy: androidx.camera.core.impl.ImageReaderProxy mImageReaderProxy>;

        $i0 = interfaceinvoke $r4.<androidx.camera.core.impl.ImageReaderProxy: int getImageFormat()>();

        exitmonitor r1;

     label2:
        return $i0;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getMaxImages()
    {
        androidx.camera.core.SafeCloseImageReaderProxy r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        androidx.camera.core.impl.ImageReaderProxy $r4;
        int $i0;

        r0 := @this: androidx.camera.core.SafeCloseImageReaderProxy;

        $r3 = r0.<androidx.camera.core.SafeCloseImageReaderProxy: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.camera.core.SafeCloseImageReaderProxy: androidx.camera.core.impl.ImageReaderProxy mImageReaderProxy>;

        $i0 = interfaceinvoke $r4.<androidx.camera.core.impl.ImageReaderProxy: int getMaxImages()>();

        exitmonitor r1;

     label2:
        return $i0;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.view.Surface getSurface()
    {
        androidx.camera.core.SafeCloseImageReaderProxy r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        androidx.camera.core.impl.ImageReaderProxy $r4;
        android.view.Surface $r5;

        r0 := @this: androidx.camera.core.SafeCloseImageReaderProxy;

        $r3 = r0.<androidx.camera.core.SafeCloseImageReaderProxy: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.camera.core.SafeCloseImageReaderProxy: androidx.camera.core.impl.ImageReaderProxy mImageReaderProxy>;

        $r5 = interfaceinvoke $r4.<androidx.camera.core.impl.ImageReaderProxy: android.view.Surface getSurface()>();

        exitmonitor r1;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setOnImageAvailableListener(androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener, java.util.concurrent.Executor)
    {
        androidx.camera.core.SafeCloseImageReaderProxy r0;
        androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener r1, $r7;
        java.util.concurrent.Executor r2;
        java.lang.Object r3, $r5;
        java.lang.Throwable r4, $r8;
        androidx.camera.core.impl.ImageReaderProxy $r6;

        r0 := @this: androidx.camera.core.SafeCloseImageReaderProxy;

        r1 := @parameter0: androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener;

        r2 := @parameter1: java.util.concurrent.Executor;

        $r5 = r0.<androidx.camera.core.SafeCloseImageReaderProxy: java.lang.Object mLock>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<androidx.camera.core.SafeCloseImageReaderProxy: androidx.camera.core.impl.ImageReaderProxy mImageReaderProxy>;

        $r7 = dynamicinvoke "onImageAvailable" <androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener (androidx.camera.core.SafeCloseImageReaderProxy,androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.camera.core.impl.ImageReaderProxy), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.core.SafeCloseImageReaderProxy: void lambda$setOnImageAvailableListener$1(androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener,androidx.camera.core.impl.ImageReaderProxy)>, methodtype: void __METHODTYPE__(androidx.camera.core.impl.ImageReaderProxy));

        interfaceinvoke $r6.<androidx.camera.core.impl.ImageReaderProxy: void setOnImageAvailableListener(androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener,java.util.concurrent.Executor)>($r7, r2);

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        r4 = $r8;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void clearOnImageAvailableListener()
    {
        androidx.camera.core.SafeCloseImageReaderProxy r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        androidx.camera.core.impl.ImageReaderProxy $r4;

        r0 := @this: androidx.camera.core.SafeCloseImageReaderProxy;

        $r3 = r0.<androidx.camera.core.SafeCloseImageReaderProxy: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.camera.core.SafeCloseImageReaderProxy: androidx.camera.core.impl.ImageReaderProxy mImageReaderProxy>;

        interfaceinvoke $r4.<androidx.camera.core.impl.ImageReaderProxy: void clearOnImageAvailableListener()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void lambda$setOnImageAvailableListener$1(androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener, androidx.camera.core.impl.ImageReaderProxy)
    {
        androidx.camera.core.SafeCloseImageReaderProxy r0;
        androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener r1;
        androidx.camera.core.impl.ImageReaderProxy r2;

        r0 := @this: androidx.camera.core.SafeCloseImageReaderProxy;

        r1 := @parameter0: androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener;

        r2 := @parameter1: androidx.camera.core.impl.ImageReaderProxy;

        interfaceinvoke r1.<androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener: void onImageAvailable(androidx.camera.core.impl.ImageReaderProxy)>(r0);

        return;
    }

    private void lambda$new$0(androidx.camera.core.ImageProxy)
    {
        androidx.camera.core.SafeCloseImageReaderProxy r0;
        androidx.camera.core.ImageProxy r1;
        androidx.camera.core.ForwardingImageProxy$OnImageCloseListener r2;
        java.lang.Object r3, $r5;
        java.lang.Throwable r4, $r6;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: androidx.camera.core.SafeCloseImageReaderProxy;

        r1 := @parameter0: androidx.camera.core.ImageProxy;

        $r5 = r0.<androidx.camera.core.SafeCloseImageReaderProxy: java.lang.Object mLock>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        $i0 = r0.<androidx.camera.core.SafeCloseImageReaderProxy: int mOutstandingImages>;

        $i1 = $i0 - 1;

        r0.<androidx.camera.core.SafeCloseImageReaderProxy: int mOutstandingImages> = $i1;

        $z0 = r0.<androidx.camera.core.SafeCloseImageReaderProxy: boolean mIsClosed>;

        if $z0 == 0 goto label2;

        $i2 = r0.<androidx.camera.core.SafeCloseImageReaderProxy: int mOutstandingImages>;

        if $i2 != 0 goto label2;

        virtualinvoke r0.<androidx.camera.core.SafeCloseImageReaderProxy: void close()>();

     label2:
        r2 = r0.<androidx.camera.core.SafeCloseImageReaderProxy: androidx.camera.core.ForwardingImageProxy$OnImageCloseListener mForwardingImageCloseListener>;

        exitmonitor r3;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        r4 = $r6;

        exitmonitor r3;

     label5:
        throw r4;

     label6:
        if r2 == null goto label7;

        interfaceinvoke r2.<androidx.camera.core.ForwardingImageProxy$OnImageCloseListener: void onImageClose(androidx.camera.core.ImageProxy)>(r1);

     label7:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

