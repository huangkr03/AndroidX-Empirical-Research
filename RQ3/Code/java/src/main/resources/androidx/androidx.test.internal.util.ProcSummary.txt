androidx.test.internal.util.ProcSummary
<androidx.test.internal.util.ProcSummary: java.lang.String name>
<androidx.test.internal.util.ProcSummary: java.lang.String pid>
<androidx.test.internal.util.ProcSummary: java.lang.String parent>
<androidx.test.internal.util.ProcSummary: java.lang.String realUid>
<androidx.test.internal.util.ProcSummary: java.lang.String cmdline>
<androidx.test.internal.util.ProcSummary: long startTime>
    public int hashCode()
    {
        androidx.test.internal.util.ProcSummary r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: androidx.test.internal.util.ProcSummary;

        $r1 = r0.<androidx.test.internal.util.ProcSummary: java.lang.String pid>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    static androidx.test.internal.util.ProcSummary parse(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r5, $r7, $r9, $r11, $r13, $r15, $r16, $r18, r20, r21, r22;
        java.lang.String[] r2, r3;
        androidx.test.internal.util.ProcSummary$Builder r4, $r6, $r8, $r10, $r12, $r14, $r17;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        long $l9;
        androidx.test.internal.util.ProcSummary $r19;

        r0 := @parameter0: java.lang.String;

        r20 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(41);

        $i1 = $i0 + 2;

        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        r2 = virtualinvoke $r5.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(" ", -1);

        $i2 = virtualinvoke r20.<java.lang.String: int indexOf(java.lang.String)>("\nUid:");

        $i3 = $i2 + 1;

        r21 = virtualinvoke r20.<java.lang.String: java.lang.String substring(int)>($i3);

        $i4 = virtualinvoke r21.<java.lang.String: int indexOf(int)>(10);

        r22 = virtualinvoke r21.<java.lang.String: java.lang.String substring(int,int)>(0, $i4);

        r3 = virtualinvoke r22.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("\\s", -1);

        $r6 = new androidx.test.internal.util.ProcSummary$Builder;

        specialinvoke $r6.<androidx.test.internal.util.ProcSummary$Builder: void <init>()>();

        $i5 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(32);

        $r7 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i5);

        $r8 = virtualinvoke $r6.<androidx.test.internal.util.ProcSummary$Builder: androidx.test.internal.util.ProcSummary$Builder withPid(java.lang.String)>($r7);

        $i6 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(40);

        $i7 = $i6 + 1;

        $i8 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(41);

        $r9 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i7, $i8);

        $r10 = virtualinvoke $r8.<androidx.test.internal.util.ProcSummary$Builder: androidx.test.internal.util.ProcSummary$Builder withName(java.lang.String)>($r9);

        $r11 = r2[1];

        $r12 = virtualinvoke $r10.<androidx.test.internal.util.ProcSummary$Builder: androidx.test.internal.util.ProcSummary$Builder withParent(java.lang.String)>($r11);

        $r13 = r3[1];

        $r14 = virtualinvoke $r12.<androidx.test.internal.util.ProcSummary$Builder: androidx.test.internal.util.ProcSummary$Builder withRealUid(java.lang.String)>($r13);

        $r15 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        $r16 = virtualinvoke $r15.<java.lang.String: java.lang.String replace(char,char)>(0, 32);

        $r17 = virtualinvoke $r14.<androidx.test.internal.util.ProcSummary$Builder: androidx.test.internal.util.ProcSummary$Builder withCmdline(java.lang.String)>($r16);

        $r18 = r2[19];

        $l9 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r18);

        r4 = virtualinvoke $r17.<androidx.test.internal.util.ProcSummary$Builder: androidx.test.internal.util.ProcSummary$Builder withStartTime(long)>($l9);

        $r19 = virtualinvoke r4.<androidx.test.internal.util.ProcSummary$Builder: androidx.test.internal.util.ProcSummary build()>();

        return $r19;
    }

    public static androidx.test.internal.util.ProcSummary summarize(java.lang.String)
    {
        java.lang.String r0, r2, r4, r6;
        java.io.File r1, r3, r5, $r7, $r8, $r9, $r10, $r11, $r12;
        androidx.test.internal.util.ProcSummary $r13;

        r0 := @parameter0: java.lang.String;

        $r7 = new java.io.File;

        $r8 = new java.io.File;

        specialinvoke $r8.<java.io.File: void <init>(java.lang.String,java.lang.String)>("/proc", r0);

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>($r8, "stat");

        r1 = $r7;

        r2 = staticinvoke <androidx.test.internal.util.ProcSummary: java.lang.String readToString(java.io.File)>(r1);

        $r9 = new java.io.File;

        $r10 = new java.io.File;

        specialinvoke $r10.<java.io.File: void <init>(java.lang.String,java.lang.String)>("/proc", r0);

        specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>($r10, "status");

        r3 = $r9;

        r4 = staticinvoke <androidx.test.internal.util.ProcSummary: java.lang.String readToString(java.io.File)>(r3);

        $r11 = new java.io.File;

        $r12 = new java.io.File;

        specialinvoke $r12.<java.io.File: void <init>(java.lang.String,java.lang.String)>("/proc", r0);

        specialinvoke $r11.<java.io.File: void <init>(java.io.File,java.lang.String)>($r12, "cmdline");

        r5 = $r11;

        r6 = staticinvoke <androidx.test.internal.util.ProcSummary: java.lang.String readToString(java.io.File)>(r5);

        $r13 = staticinvoke <androidx.test.internal.util.ProcSummary: androidx.test.internal.util.ProcSummary parse(java.lang.String,java.lang.String,java.lang.String)>(r2, r4, r6);

        return $r13;
    }

    private static final java.lang.String readToString(java.io.File)
    {
        java.io.File r0;
        java.lang.StringBuilder r1, $r15, $r16, $r22, $r23, r31, r34, r36;
        char[] r2;
        java.lang.String r3, $r17, $r24, r28, r30;
        java.lang.Throwable r4, r5, r6, $r11, $r12, $r18, $r19, $r25, r27, r29, r38, r39;
        int $i0, $i1, i2;
        java.io.InputStreamReader r26, r33;
        boolean z0;
        java.io.FileInputStream r32;
        androidx.test.internal.util.ProcSummary$SummaryException r35, r37;

        r0 := @parameter0: java.io.File;

        r31 = new java.lang.StringBuilder;

        specialinvoke r31.<java.lang.StringBuilder: void <init>()>();

        r1 = r31;

        r2 = newarray (char)[1024];

        r26 = null;

     label01:
        r33 = new java.io.InputStreamReader;

        r32 = new java.io.FileInputStream;

        specialinvoke r32.<java.io.FileInputStream: void <init>(java.io.File)>(r0);

        specialinvoke r33.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r32);

        r26 = r33;

        z0 = 0;

     label02:
        $i0 = lengthof r2;

        $i1 = virtualinvoke r26.<java.io.InputStreamReader: int read(char[],int,int)>(r2, 0, $i0);

        i2 = $i1;

        if $i1 == -1 goto label03;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>(r2, 0, i2);

        goto label02;

     label03:
        r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label04:
        if null == r26 goto label08;

     label05:
        virtualinvoke r26.<java.io.InputStreamReader: void close()>();

     label06:
        goto label08;

     label07:
        $r25 := @caughtexception;

        r4 = $r25;

     label08:
        return r3;

     label09:
        $r12 := @caughtexception;

        r27 = $r12;

        r35 = new androidx.test.internal.util.ProcSummary$SummaryException;

        r28 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        r34 = new java.lang.StringBuilder;

        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading: ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r35.<androidx.test.internal.util.ProcSummary$SummaryException: void <init>(java.lang.String,java.lang.Throwable)>($r17, r27);

        r38 = (java.lang.Throwable) r35;

        throw r38;

     label10:
        $r19 := @caughtexception;

        r29 = $r19;

        r37 = new androidx.test.internal.util.ProcSummary$SummaryException;

        r30 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        r36 = new java.lang.StringBuilder;

        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not read: ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r37.<androidx.test.internal.util.ProcSummary$SummaryException: void <init>(java.lang.String,java.lang.Throwable)>($r24, r29);

        r39 = (java.lang.Throwable) r37;

        throw r39;

     label11:
        $r11 := @caughtexception;

        r5 = $r11;

     label12:
        if null == r26 goto label16;

     label13:
        virtualinvoke r26.<java.io.InputStreamReader: void close()>();

     label14:
        goto label16;

     label15:
        $r18 := @caughtexception;

        r6 = $r18;

     label16:
        throw r5;

        catch java.io.IOException from label05 to label06 with label07;
        catch java.lang.RuntimeException from label01 to label04 with label09;
        catch java.io.IOException from label01 to label04 with label10;
        catch java.lang.Throwable from label01 to label04 with label11;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.lang.Throwable from label09 to label12 with label11;
    }

    public java.lang.String toString()
    {
        androidx.test.internal.util.ProcSummary r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r8;
        long $l0;
        java.lang.Long $r7;

        r0 := @this: androidx.test.internal.util.ProcSummary;

        $r1 = newarray (java.lang.Object)[6];

        $r2 = r0.<androidx.test.internal.util.ProcSummary: java.lang.String name>;

        $r1[0] = $r2;

        $r3 = r0.<androidx.test.internal.util.ProcSummary: java.lang.String cmdline>;

        $r1[1] = $r3;

        $r4 = r0.<androidx.test.internal.util.ProcSummary: java.lang.String pid>;

        $r1[2] = $r4;

        $r5 = r0.<androidx.test.internal.util.ProcSummary: java.lang.String parent>;

        $r1[3] = $r5;

        $r6 = r0.<androidx.test.internal.util.ProcSummary: java.lang.String realUid>;

        $r1[4] = $r6;

        $l0 = r0.<androidx.test.internal.util.ProcSummary: long startTime>;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r1[5] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("ProcSummary(name: \'%s\', cmdline: \'%s\', pid: \'%s\', parent: \'%s\', realUid: \'%s\', startTime: %d)", $r1);

        return $r8;
    }

    private void <init>(androidx.test.internal.util.ProcSummary$Builder)
    {
        androidx.test.internal.util.ProcSummary r0;
        androidx.test.internal.util.ProcSummary$Builder r1;
        java.lang.String $r2, $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14, $r16;
        java.lang.Object $r3, $r6, $r9, $r12, $r15;
        long $l0;

        r0 := @this: androidx.test.internal.util.ProcSummary;

        r1 := @parameter0: androidx.test.internal.util.ProcSummary$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <androidx.test.internal.util.ProcSummary$Builder: java.lang.String '-$$Nest$fgetname'(androidx.test.internal.util.ProcSummary$Builder)>(r1);

        $r3 = staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $r4 = (java.lang.String) $r3;

        r0.<androidx.test.internal.util.ProcSummary: java.lang.String name> = $r4;

        $r5 = staticinvoke <androidx.test.internal.util.ProcSummary$Builder: java.lang.String '-$$Nest$fgetpid'(androidx.test.internal.util.ProcSummary$Builder)>(r1);

        $r6 = staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object)>($r5);

        $r7 = (java.lang.String) $r6;

        r0.<androidx.test.internal.util.ProcSummary: java.lang.String pid> = $r7;

        $r8 = staticinvoke <androidx.test.internal.util.ProcSummary$Builder: java.lang.String '-$$Nest$fgetrealUid'(androidx.test.internal.util.ProcSummary$Builder)>(r1);

        $r9 = staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object)>($r8);

        $r10 = (java.lang.String) $r9;

        r0.<androidx.test.internal.util.ProcSummary: java.lang.String realUid> = $r10;

        $r11 = staticinvoke <androidx.test.internal.util.ProcSummary$Builder: java.lang.String '-$$Nest$fgetparent'(androidx.test.internal.util.ProcSummary$Builder)>(r1);

        $r12 = staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object)>($r11);

        $r13 = (java.lang.String) $r12;

        r0.<androidx.test.internal.util.ProcSummary: java.lang.String parent> = $r13;

        $r14 = staticinvoke <androidx.test.internal.util.ProcSummary$Builder: java.lang.String '-$$Nest$fgetcmdline'(androidx.test.internal.util.ProcSummary$Builder)>(r1);

        $r15 = staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object)>($r14);

        $r16 = (java.lang.String) $r15;

        r0.<androidx.test.internal.util.ProcSummary: java.lang.String cmdline> = $r16;

        $l0 = staticinvoke <androidx.test.internal.util.ProcSummary$Builder: long '-$$Nest$fgetstartTime'(androidx.test.internal.util.ProcSummary$Builder)>(r1);

        r0.<androidx.test.internal.util.ProcSummary: long startTime> = $l0;

        return;
    }

    void <init>(androidx.test.internal.util.ProcSummary$Builder, androidx.test.internal.util.ProcSummary-IA)
    {
        androidx.test.internal.util.ProcSummary r0;
        androidx.test.internal.util.ProcSummary$Builder r1;
        androidx.test.internal.util.ProcSummary-IA r2;

        r0 := @this: androidx.test.internal.util.ProcSummary;

        r1 := @parameter0: androidx.test.internal.util.ProcSummary$Builder;

        r2 := @parameter1: androidx.test.internal.util.ProcSummary-IA;

        specialinvoke r0.<androidx.test.internal.util.ProcSummary: void <init>(androidx.test.internal.util.ProcSummary$Builder)>(r1);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.test.internal.util.ProcSummary r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        long $l0, $l1;
        byte $b2;

        r0 := @this: androidx.test.internal.util.ProcSummary;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return 0;

     label1:
        $z0 = r1 instanceof androidx.test.internal.util.ProcSummary;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (androidx.test.internal.util.ProcSummary) r1;

        $r4 = r2.<androidx.test.internal.util.ProcSummary: java.lang.String name>;

        $r3 = r0.<androidx.test.internal.util.ProcSummary: java.lang.String name>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label3;

        $r6 = r2.<androidx.test.internal.util.ProcSummary: java.lang.String pid>;

        $r5 = r0.<androidx.test.internal.util.ProcSummary: java.lang.String pid>;

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label3;

        $r8 = r2.<androidx.test.internal.util.ProcSummary: java.lang.String parent>;

        $r7 = r0.<androidx.test.internal.util.ProcSummary: java.lang.String parent>;

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z3 == 0 goto label3;

        $r10 = r2.<androidx.test.internal.util.ProcSummary: java.lang.String realUid>;

        $r9 = r0.<androidx.test.internal.util.ProcSummary: java.lang.String realUid>;

        $z4 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z4 == 0 goto label3;

        $r12 = r2.<androidx.test.internal.util.ProcSummary: java.lang.String cmdline>;

        $r11 = r0.<androidx.test.internal.util.ProcSummary: java.lang.String cmdline>;

        $z5 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z5 == 0 goto label3;

        $l1 = r2.<androidx.test.internal.util.ProcSummary: long startTime>;

        $l0 = r0.<androidx.test.internal.util.ProcSummary: long startTime>;

        $b2 = $l1 cmp $l0;

        if $b2 != 0 goto label3;

        $z6 = 1;

        goto label4;

     label3:
        $z6 = 0;

     label4:
        return $z6;
    }

androidx.test.internal.util.ProcSummary$Builder
<androidx.test.internal.util.ProcSummary$Builder: java.lang.String name>
<androidx.test.internal.util.ProcSummary$Builder: java.lang.String pid>
<androidx.test.internal.util.ProcSummary$Builder: java.lang.String realUid>
<androidx.test.internal.util.ProcSummary$Builder: java.lang.String cmdline>
<androidx.test.internal.util.ProcSummary$Builder: long startTime>
<androidx.test.internal.util.ProcSummary$Builder: java.lang.String parent>
    static volatile long '-$$Nest$fgetstartTime'(androidx.test.internal.util.ProcSummary$Builder)
    {
        androidx.test.internal.util.ProcSummary$Builder r0;
        long $l0;

        r0 := @parameter0: androidx.test.internal.util.ProcSummary$Builder;

        $l0 = r0.<androidx.test.internal.util.ProcSummary$Builder: long startTime>;

        return $l0;
    }

    androidx.test.internal.util.ProcSummary$Builder withCmdline(java.lang.String)
    {
        androidx.test.internal.util.ProcSummary$Builder r0;
        java.lang.String r1;

        r0 := @this: androidx.test.internal.util.ProcSummary$Builder;

        r1 := @parameter0: java.lang.String;

        r0.<androidx.test.internal.util.ProcSummary$Builder: java.lang.String cmdline> = r1;

        return r0;
    }

    androidx.test.internal.util.ProcSummary$Builder withName(java.lang.String)
    {
        androidx.test.internal.util.ProcSummary$Builder r0;
        java.lang.String r1;

        r0 := @this: androidx.test.internal.util.ProcSummary$Builder;

        r1 := @parameter0: java.lang.String;

        r0.<androidx.test.internal.util.ProcSummary$Builder: java.lang.String name> = r1;

        return r0;
    }

    androidx.test.internal.util.ProcSummary$Builder withParent(java.lang.String)
    {
        androidx.test.internal.util.ProcSummary$Builder r0;
        java.lang.String r1, r3, $r9;
        java.lang.Throwable r2, $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @this: androidx.test.internal.util.ProcSummary$Builder;

        r1 := @parameter0: java.lang.String;

     label1:
        staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = new java.lang.IllegalArgumentException;

        r3 = r1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not a pid: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label4:
        r0.<androidx.test.internal.util.ProcSummary$Builder: java.lang.String parent> = r1;

        return r0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    androidx.test.internal.util.ProcSummary$Builder withPid(java.lang.String)
    {
        androidx.test.internal.util.ProcSummary$Builder r0;
        java.lang.String r1, r3, $r9;
        java.lang.Throwable r2, $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @this: androidx.test.internal.util.ProcSummary$Builder;

        r1 := @parameter0: java.lang.String;

     label1:
        staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = new java.lang.IllegalArgumentException;

        r3 = r1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not a pid: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label4:
        r0.<androidx.test.internal.util.ProcSummary$Builder: java.lang.String pid> = r1;

        return r0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    androidx.test.internal.util.ProcSummary$Builder withRealUid(java.lang.String)
    {
        androidx.test.internal.util.ProcSummary$Builder r0;
        java.lang.String r1, r3, $r9;
        java.lang.Throwable r2, $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @this: androidx.test.internal.util.ProcSummary$Builder;

        r1 := @parameter0: java.lang.String;

     label1:
        staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = new java.lang.IllegalArgumentException;

        r3 = r1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not a uid: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label4:
        r0.<androidx.test.internal.util.ProcSummary$Builder: java.lang.String realUid> = r1;

        return r0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    androidx.test.internal.util.ProcSummary$Builder withStartTime(long)
    {
        androidx.test.internal.util.ProcSummary$Builder r0;
        long l0;

        r0 := @this: androidx.test.internal.util.ProcSummary$Builder;

        l0 := @parameter0: long;

        r0.<androidx.test.internal.util.ProcSummary$Builder: long startTime> = l0;

        return r0;
    }

    androidx.test.internal.util.ProcSummary build()
    {
        androidx.test.internal.util.ProcSummary$Builder r0;
        androidx.test.internal.util.ProcSummary $r1;

        r0 := @this: androidx.test.internal.util.ProcSummary$Builder;

        $r1 = new androidx.test.internal.util.ProcSummary;

        specialinvoke $r1.<androidx.test.internal.util.ProcSummary: void <init>(androidx.test.internal.util.ProcSummary$Builder,androidx.test.internal.util.ProcSummary-IA)>(r0, null);

        return $r1;
    }

    static volatile java.lang.String '-$$Nest$fgetcmdline'(androidx.test.internal.util.ProcSummary$Builder)
    {
        androidx.test.internal.util.ProcSummary$Builder r0;
        java.lang.String $r1;

        r0 := @parameter0: androidx.test.internal.util.ProcSummary$Builder;

        $r1 = r0.<androidx.test.internal.util.ProcSummary$Builder: java.lang.String cmdline>;

        return $r1;
    }

    static volatile java.lang.String '-$$Nest$fgetname'(androidx.test.internal.util.ProcSummary$Builder)
    {
        androidx.test.internal.util.ProcSummary$Builder r0;
        java.lang.String $r1;

        r0 := @parameter0: androidx.test.internal.util.ProcSummary$Builder;

        $r1 = r0.<androidx.test.internal.util.ProcSummary$Builder: java.lang.String name>;

        return $r1;
    }

    static volatile java.lang.String '-$$Nest$fgetparent'(androidx.test.internal.util.ProcSummary$Builder)
    {
        androidx.test.internal.util.ProcSummary$Builder r0;
        java.lang.String $r1;

        r0 := @parameter0: androidx.test.internal.util.ProcSummary$Builder;

        $r1 = r0.<androidx.test.internal.util.ProcSummary$Builder: java.lang.String parent>;

        return $r1;
    }

    static volatile java.lang.String '-$$Nest$fgetpid'(androidx.test.internal.util.ProcSummary$Builder)
    {
        androidx.test.internal.util.ProcSummary$Builder r0;
        java.lang.String $r1;

        r0 := @parameter0: androidx.test.internal.util.ProcSummary$Builder;

        $r1 = r0.<androidx.test.internal.util.ProcSummary$Builder: java.lang.String pid>;

        return $r1;
    }

    static volatile java.lang.String '-$$Nest$fgetrealUid'(androidx.test.internal.util.ProcSummary$Builder)
    {
        androidx.test.internal.util.ProcSummary$Builder r0;
        java.lang.String $r1;

        r0 := @parameter0: androidx.test.internal.util.ProcSummary$Builder;

        $r1 = r0.<androidx.test.internal.util.ProcSummary$Builder: java.lang.String realUid>;

        return $r1;
    }

    void <init>()
    {
        androidx.test.internal.util.ProcSummary$Builder r0;

        r0 := @this: androidx.test.internal.util.ProcSummary$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.test.internal.util.ProcSummary$SummaryException
    public void <init>(java.lang.String)
    {
        androidx.test.internal.util.ProcSummary$SummaryException r0;
        java.lang.String r1;

        r0 := @this: androidx.test.internal.util.ProcSummary$SummaryException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String)>(r1);

        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable)
    {
        androidx.test.internal.util.ProcSummary$SummaryException r0;
        java.lang.String r1;
        java.lang.Throwable r2;

        r0 := @this: androidx.test.internal.util.ProcSummary$SummaryException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(r1, r2);

        return;
    }

