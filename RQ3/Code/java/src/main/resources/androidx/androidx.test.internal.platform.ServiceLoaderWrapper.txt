androidx.test.internal.platform.ServiceLoaderWrapper
    public static java.util.List loadService(java.lang.Class)
    {
        java.util.ArrayList $r0, r6;
        java.lang.Class $r1;
        android.os.StrictMode$ThreadPolicy $r2;
        java.util.ServiceLoader $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.util.List r7;

        $r1 := @parameter0: java.lang.Class;

        $r2 = staticinvoke <android.os.StrictMode: android.os.StrictMode$ThreadPolicy allowThreadDiskReads()>();

        r6 = new java.util.ArrayList;

        $r0 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $r3 = staticinvoke <java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class)>($r1);

        $r4 = virtualinvoke $r3.<java.util.ServiceLoader: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.List) $r0;

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r5);

        goto label1;

     label2:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>($r2);

        r7 = (java.util.List) $r0;

        return r7;
    }

androidx.test.internal.platform.ServiceLoaderWrapper$Factory
<androidx.test.internal.platform.ServiceLoaderWrapper$Factory: java.lang.Object create()>
