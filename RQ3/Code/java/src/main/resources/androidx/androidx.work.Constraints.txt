androidx.work.Constraints
<androidx.work.Constraints: androidx.work.Constraints$Companion Companion>
<androidx.work.Constraints: androidx.work.NetworkType requiredNetworkType>
<androidx.work.Constraints: boolean requiresCharging>
<androidx.work.Constraints: boolean requiresDeviceIdle>
<androidx.work.Constraints: boolean requiresBatteryNotLow>
<androidx.work.Constraints: boolean requiresStorageNotLow>
<androidx.work.Constraints: long contentTriggerUpdateDelayMillis>
<androidx.work.Constraints: long contentTriggerMaxDelayMillis>
<androidx.work.Constraints: java.util.Set contentUriTriggers>
<androidx.work.Constraints: androidx.work.Constraints NONE>
    public void <init>(androidx.work.NetworkType, boolean, boolean, boolean, boolean, long, long, java.util.Set)
    {
        androidx.work.Constraints r0;
        androidx.work.NetworkType r1;
        boolean z0, z1, z2, z3;
        long l0, l1;
        java.util.Set r2;

        r0 := @this: androidx.work.Constraints;

        r1 := @parameter0: androidx.work.NetworkType;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        z3 := @parameter4: boolean;

        l0 := @parameter5: long;

        l1 := @parameter6: long;

        r2 := @parameter7: java.util.Set;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "requiredNetworkType");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "contentUriTriggers");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.work.Constraints: androidx.work.NetworkType requiredNetworkType> = r1;

        r0.<androidx.work.Constraints: boolean requiresCharging> = z0;

        r0.<androidx.work.Constraints: boolean requiresDeviceIdle> = z1;

        r0.<androidx.work.Constraints: boolean requiresBatteryNotLow> = z2;

        r0.<androidx.work.Constraints: boolean requiresStorageNotLow> = z3;

        r0.<androidx.work.Constraints: long contentTriggerUpdateDelayMillis> = l0;

        r0.<androidx.work.Constraints: long contentTriggerMaxDelayMillis> = l1;

        r0.<androidx.work.Constraints: java.util.Set contentUriTriggers> = r2;

        return;
    }

    public void <init>(androidx.work.NetworkType, boolean, boolean, boolean, boolean, long, long, java.util.Set, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.work.Constraints r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        androidx.work.NetworkType r2;
        boolean z0, z1, z2, z3;
        long l9, l10;
        java.util.Set r3;

        r0 := @this: androidx.work.Constraints;

        r2 := @parameter0: androidx.work.NetworkType;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        z3 := @parameter4: boolean;

        l9 := @parameter5: long;

        l10 := @parameter6: long;

        r3 := @parameter7: java.util.Set;

        i0 := @parameter8: int;

        r1 := @parameter9: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r2 = <androidx.work.NetworkType: androidx.work.NetworkType NOT_REQUIRED>;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        z0 = 0;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        z1 = 0;

     label3:
        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        z2 = 0;

     label4:
        $i5 = i0 & 16;

        if $i5 == 0 goto label5;

        z3 = 0;

     label5:
        $i6 = i0 & 32;

        if $i6 == 0 goto label6;

        l9 = -1L;

     label6:
        $i7 = i0 & 64;

        if $i7 == 0 goto label7;

        l10 = -1L;

     label7:
        $i8 = i0 & 128;

        if $i8 == 0 goto label8;

        r3 = staticinvoke <kotlin.collections.SetsKt: java.util.Set emptySet()>();

     label8:
        specialinvoke r0.<androidx.work.Constraints: void <init>(androidx.work.NetworkType,boolean,boolean,boolean,boolean,long,long,java.util.Set)>(r2, z0, z1, z2, z3, l9, l10, r3);

        return;
    }

    public final androidx.work.NetworkType getRequiredNetworkType()
    {
        androidx.work.Constraints r0;
        androidx.work.NetworkType $r1;

        r0 := @this: androidx.work.Constraints;

        $r1 = r0.<androidx.work.Constraints: androidx.work.NetworkType requiredNetworkType>;

        return $r1;
    }

    public final long getContentTriggerUpdateDelayMillis()
    {
        androidx.work.Constraints r0;
        long $l0;

        r0 := @this: androidx.work.Constraints;

        $l0 = r0.<androidx.work.Constraints: long contentTriggerUpdateDelayMillis>;

        return $l0;
    }

    public final long getContentTriggerMaxDelayMillis()
    {
        androidx.work.Constraints r0;
        long $l0;

        r0 := @this: androidx.work.Constraints;

        $l0 = r0.<androidx.work.Constraints: long contentTriggerMaxDelayMillis>;

        return $l0;
    }

    public final java.util.Set getContentUriTriggers()
    {
        androidx.work.Constraints r0;
        java.util.Set $r1;

        r0 := @this: androidx.work.Constraints;

        $r1 = r0.<androidx.work.Constraints: java.util.Set contentUriTriggers>;

        return $r1;
    }

    public void <init>(androidx.work.Constraints)
    {
        androidx.work.Constraints r0, r1;
        boolean z0, z1, z2, z3;
        androidx.work.NetworkType r2;
        java.util.Set r3;
        long l0, l1;

        r0 := @this: androidx.work.Constraints;

        r1 := @parameter0: androidx.work.Constraints;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "other");

        z0 = r1.<androidx.work.Constraints: boolean requiresCharging>;

        z1 = r1.<androidx.work.Constraints: boolean requiresDeviceIdle>;

        r2 = r1.<androidx.work.Constraints: androidx.work.NetworkType requiredNetworkType>;

        z2 = r1.<androidx.work.Constraints: boolean requiresBatteryNotLow>;

        z3 = r1.<androidx.work.Constraints: boolean requiresStorageNotLow>;

        r3 = r1.<androidx.work.Constraints: java.util.Set contentUriTriggers>;

        l0 = r1.<androidx.work.Constraints: long contentTriggerUpdateDelayMillis>;

        l1 = r1.<androidx.work.Constraints: long contentTriggerMaxDelayMillis>;

        specialinvoke r0.<androidx.work.Constraints: void <init>(androidx.work.NetworkType,boolean,boolean,boolean,boolean,long,long,java.util.Set)>(r2, z0, z1, z2, z3, l0, l1, r3);

        return;
    }

    public final boolean requiresCharging()
    {
        androidx.work.Constraints r0;
        boolean $z0;

        r0 := @this: androidx.work.Constraints;

        $z0 = r0.<androidx.work.Constraints: boolean requiresCharging>;

        return $z0;
    }

    public final boolean requiresDeviceIdle()
    {
        androidx.work.Constraints r0;
        boolean $z0;

        r0 := @this: androidx.work.Constraints;

        $z0 = r0.<androidx.work.Constraints: boolean requiresDeviceIdle>;

        return $z0;
    }

    public final boolean requiresBatteryNotLow()
    {
        androidx.work.Constraints r0;
        boolean $z0;

        r0 := @this: androidx.work.Constraints;

        $z0 = r0.<androidx.work.Constraints: boolean requiresBatteryNotLow>;

        return $z0;
    }

    public final boolean requiresStorageNotLow()
    {
        androidx.work.Constraints r0;
        boolean $z0;

        r0 := @this: androidx.work.Constraints;

        $z0 = r0.<androidx.work.Constraints: boolean requiresStorageNotLow>;

        return $z0;
    }

    public final boolean hasContentUriTriggers()
    {
        androidx.work.Constraints r0;
        java.util.Set $r1;
        java.util.Collection $r2;
        boolean $z0, $z1;

        r0 := @this: androidx.work.Constraints;

        $r1 = r0.<androidx.work.Constraints: java.util.Set contentUriTriggers>;

        $r2 = (java.util.Collection) $r1;

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.work.Constraints r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        long $l0, $l1, $l3, $l4;
        byte $b2, $b5;
        androidx.work.NetworkType $r5, $r6;
        java.util.Set $r7, $r8;

        r0 := @this: androidx.work.Constraints;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label01;

        return 1;

     label01:
        if r1 == null goto label02;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $z0 != 0 goto label03;

     label02:
        return 0;

     label03:
        r2 = (androidx.work.Constraints) r1;

        $z2 = r0.<androidx.work.Constraints: boolean requiresCharging>;

        $z1 = r2.<androidx.work.Constraints: boolean requiresCharging>;

        if $z2 == $z1 goto label04;

        return 0;

     label04:
        $z4 = r0.<androidx.work.Constraints: boolean requiresDeviceIdle>;

        $z3 = r2.<androidx.work.Constraints: boolean requiresDeviceIdle>;

        if $z4 == $z3 goto label05;

        return 0;

     label05:
        $z6 = r0.<androidx.work.Constraints: boolean requiresBatteryNotLow>;

        $z5 = r2.<androidx.work.Constraints: boolean requiresBatteryNotLow>;

        if $z6 == $z5 goto label06;

        return 0;

     label06:
        $z8 = r0.<androidx.work.Constraints: boolean requiresStorageNotLow>;

        $z7 = r2.<androidx.work.Constraints: boolean requiresStorageNotLow>;

        if $z8 == $z7 goto label07;

        return 0;

     label07:
        $l1 = r0.<androidx.work.Constraints: long contentTriggerUpdateDelayMillis>;

        $l0 = r2.<androidx.work.Constraints: long contentTriggerUpdateDelayMillis>;

        $b2 = $l1 cmp $l0;

        if $b2 == 0 goto label08;

        return 0;

     label08:
        $l4 = r0.<androidx.work.Constraints: long contentTriggerMaxDelayMillis>;

        $l3 = r2.<androidx.work.Constraints: long contentTriggerMaxDelayMillis>;

        $b5 = $l4 cmp $l3;

        if $b5 == 0 goto label09;

        return 0;

     label09:
        $r6 = r0.<androidx.work.Constraints: androidx.work.NetworkType requiredNetworkType>;

        $r5 = r2.<androidx.work.Constraints: androidx.work.NetworkType requiredNetworkType>;

        if $r6 == $r5 goto label10;

        $z9 = 0;

        goto label11;

     label10:
        $r8 = r0.<androidx.work.Constraints: java.util.Set contentUriTriggers>;

        $r7 = r2.<androidx.work.Constraints: java.util.Set contentUriTriggers>;

        $z9 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r8, $r7);

     label11:
        return $z9;
    }

    public int hashCode()
    {
        androidx.work.Constraints r0;
        androidx.work.NetworkType $r1;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1, $i2, $i3, $i8, $i9, $i14, $i15, $i16, $i17, i18, i20, i22, i24, i26, i27, i28, i29;
        long $l4, $l5, $l6, $l7, $l10, $l11, $l12, $l13;
        java.util.Set $r2;
        byte $b19, $b21, $b23, $b25;

        r0 := @this: androidx.work.Constraints;

        $r1 = r0.<androidx.work.Constraints: androidx.work.NetworkType requiredNetworkType>;

        i18 = virtualinvoke $r1.<androidx.work.NetworkType: int hashCode()>();

        $i0 = 31 * i18;

        $z0 = r0.<androidx.work.Constraints: boolean requiresCharging>;

        if $z0 == 0 goto label1;

        $b19 = 1;

        goto label2;

     label1:
        $b19 = 0;

     label2:
        i20 = $i0 + $b19;

        $i1 = 31 * i20;

        $z1 = r0.<androidx.work.Constraints: boolean requiresDeviceIdle>;

        if $z1 == 0 goto label3;

        $b21 = 1;

        goto label4;

     label3:
        $b21 = 0;

     label4:
        i22 = $i1 + $b21;

        $i2 = 31 * i22;

        $z2 = r0.<androidx.work.Constraints: boolean requiresBatteryNotLow>;

        if $z2 == 0 goto label5;

        $b23 = 1;

        goto label6;

     label5:
        $b23 = 0;

     label6:
        i24 = $i2 + $b23;

        $i3 = 31 * i24;

        $z3 = r0.<androidx.work.Constraints: boolean requiresStorageNotLow>;

        if $z3 == 0 goto label7;

        $b25 = 1;

        goto label8;

     label7:
        $b25 = 0;

     label8:
        i26 = $i3 + $b25;

        $i9 = 31 * i26;

        $l6 = r0.<androidx.work.Constraints: long contentTriggerUpdateDelayMillis>;

        $l4 = r0.<androidx.work.Constraints: long contentTriggerUpdateDelayMillis>;

        $l5 = $l4 >>> 32;

        $l7 = $l6 ^ $l5;

        $i8 = (int) $l7;

        i27 = $i9 + $i8;

        $i15 = 31 * i27;

        $l12 = r0.<androidx.work.Constraints: long contentTriggerMaxDelayMillis>;

        $l10 = r0.<androidx.work.Constraints: long contentTriggerMaxDelayMillis>;

        $l11 = $l10 >>> 32;

        $l13 = $l12 ^ $l11;

        $i14 = (int) $l13;

        i28 = $i15 + $i14;

        $i16 = 31 * i28;

        $r2 = r0.<androidx.work.Constraints: java.util.Set contentUriTriggers>;

        $i17 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        i29 = $i16 + $i17;

        return i29;
    }

    public void <init>()
    {
        androidx.work.Constraints r0;

        r0 := @this: androidx.work.Constraints;

        specialinvoke r0.<androidx.work.Constraints: void <init>(androidx.work.NetworkType,boolean,boolean,boolean,boolean,long,long,java.util.Set,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, 0, 0, 0, 0, 0L, 0L, null, 255, null);

        return;
    }

    static void <clinit>()
    {
        androidx.work.Constraints$Companion $r0;
        androidx.work.Constraints $r1;

        $r0 = new androidx.work.Constraints$Companion;

        specialinvoke $r0.<androidx.work.Constraints$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.work.Constraints: androidx.work.Constraints$Companion Companion> = $r0;

        $r1 = new androidx.work.Constraints;

        specialinvoke $r1.<androidx.work.Constraints: void <init>(androidx.work.NetworkType,boolean,boolean,boolean,boolean,long,long,java.util.Set,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, 0, 0, 0, 0, 0L, 0L, null, 255, null);

        <androidx.work.Constraints: androidx.work.Constraints NONE> = $r1;

        return;
    }

androidx.work.Constraints$Builder
<androidx.work.Constraints$Builder: boolean requiresCharging>
<androidx.work.Constraints$Builder: boolean requiresDeviceIdle>
<androidx.work.Constraints$Builder: androidx.work.NetworkType requiredNetworkType>
<androidx.work.Constraints$Builder: boolean requiresBatteryNotLow>
<androidx.work.Constraints$Builder: boolean requiresStorageNotLow>
<androidx.work.Constraints$Builder: long triggerContentUpdateDelay>
<androidx.work.Constraints$Builder: long triggerContentMaxDelay>
<androidx.work.Constraints$Builder: java.util.Set contentUriTriggers>
    public void <init>()
    {
        androidx.work.Constraints$Builder r0;
        androidx.work.NetworkType $r1;
        java.util.LinkedHashSet $r2;
        java.util.Set $r3;

        r0 := @this: androidx.work.Constraints$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <androidx.work.NetworkType: androidx.work.NetworkType NOT_REQUIRED>;

        r0.<androidx.work.Constraints$Builder: androidx.work.NetworkType requiredNetworkType> = $r1;

        r0.<androidx.work.Constraints$Builder: long triggerContentUpdateDelay> = -1L;

        r0.<androidx.work.Constraints$Builder: long triggerContentMaxDelay> = -1L;

        $r2 = new java.util.LinkedHashSet;

        specialinvoke $r2.<java.util.LinkedHashSet: void <init>()>();

        $r3 = (java.util.Set) $r2;

        r0.<androidx.work.Constraints$Builder: java.util.Set contentUriTriggers> = $r3;

        return;
    }

    public void <init>(androidx.work.Constraints)
    {
        androidx.work.Constraints$Builder r0;
        androidx.work.Constraints r1;
        androidx.work.NetworkType $r2, $r9;
        java.util.LinkedHashSet $r3;
        java.util.Set $r4, $r5, $r7;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i3;
        long $l1, $l2;
        java.lang.Iterable $r6;

        r0 := @this: androidx.work.Constraints$Builder;

        r1 := @parameter0: androidx.work.Constraints;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "constraints");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <androidx.work.NetworkType: androidx.work.NetworkType NOT_REQUIRED>;

        r0.<androidx.work.Constraints$Builder: androidx.work.NetworkType requiredNetworkType> = $r2;

        r0.<androidx.work.Constraints$Builder: long triggerContentUpdateDelay> = -1L;

        r0.<androidx.work.Constraints$Builder: long triggerContentMaxDelay> = -1L;

        $r3 = new java.util.LinkedHashSet;

        specialinvoke $r3.<java.util.LinkedHashSet: void <init>()>();

        $r4 = (java.util.Set) $r3;

        r0.<androidx.work.Constraints$Builder: java.util.Set contentUriTriggers> = $r4;

        $z0 = virtualinvoke r1.<androidx.work.Constraints: boolean requiresCharging()>();

        r0.<androidx.work.Constraints$Builder: boolean requiresCharging> = $z0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label1;

        $z1 = virtualinvoke r1.<androidx.work.Constraints: boolean requiresDeviceIdle()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        r0.<androidx.work.Constraints$Builder: boolean requiresDeviceIdle> = $z2;

        $r9 = virtualinvoke r1.<androidx.work.Constraints: androidx.work.NetworkType getRequiredNetworkType()>();

        r0.<androidx.work.Constraints$Builder: androidx.work.NetworkType requiredNetworkType> = $r9;

        $z3 = virtualinvoke r1.<androidx.work.Constraints: boolean requiresBatteryNotLow()>();

        r0.<androidx.work.Constraints$Builder: boolean requiresBatteryNotLow> = $z3;

        $z4 = virtualinvoke r1.<androidx.work.Constraints: boolean requiresStorageNotLow()>();

        r0.<androidx.work.Constraints$Builder: boolean requiresStorageNotLow> = $z4;

        $i3 = <android.os.Build$VERSION: int SDK_INT>;

        if $i3 < 24 goto label3;

        $l1 = virtualinvoke r1.<androidx.work.Constraints: long getContentTriggerUpdateDelayMillis()>();

        r0.<androidx.work.Constraints$Builder: long triggerContentUpdateDelay> = $l1;

        $l2 = virtualinvoke r1.<androidx.work.Constraints: long getContentTriggerMaxDelayMillis()>();

        r0.<androidx.work.Constraints$Builder: long triggerContentMaxDelay> = $l2;

        $r5 = virtualinvoke r1.<androidx.work.Constraints: java.util.Set getContentUriTriggers()>();

        $r6 = (java.lang.Iterable) $r5;

        $r7 = staticinvoke <kotlin.collections.CollectionsKt: java.util.Set toMutableSet(java.lang.Iterable)>($r6);

        r0.<androidx.work.Constraints$Builder: java.util.Set contentUriTriggers> = $r7;

     label3:
        return;
    }

    public final androidx.work.Constraints$Builder setRequiresCharging(boolean)
    {
        androidx.work.Constraints$Builder r0;
        boolean z0;

        r0 := @this: androidx.work.Constraints$Builder;

        z0 := @parameter0: boolean;

        r0.<androidx.work.Constraints$Builder: boolean requiresCharging> = z0;

        return r0;
    }

    public final androidx.work.Constraints$Builder setRequiresDeviceIdle(boolean)
    {
        androidx.work.Constraints$Builder r0;
        boolean z0;

        r0 := @this: androidx.work.Constraints$Builder;

        z0 := @parameter0: boolean;

        r0.<androidx.work.Constraints$Builder: boolean requiresDeviceIdle> = z0;

        return r0;
    }

    public final androidx.work.Constraints$Builder setRequiredNetworkType(androidx.work.NetworkType)
    {
        androidx.work.Constraints$Builder r0;
        androidx.work.NetworkType r1;

        r0 := @this: androidx.work.Constraints$Builder;

        r1 := @parameter0: androidx.work.NetworkType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "networkType");

        r0.<androidx.work.Constraints$Builder: androidx.work.NetworkType requiredNetworkType> = r1;

        return r0;
    }

    public final androidx.work.Constraints$Builder setRequiresBatteryNotLow(boolean)
    {
        androidx.work.Constraints$Builder r0;
        boolean z0;

        r0 := @this: androidx.work.Constraints$Builder;

        z0 := @parameter0: boolean;

        r0.<androidx.work.Constraints$Builder: boolean requiresBatteryNotLow> = z0;

        return r0;
    }

    public final androidx.work.Constraints$Builder setRequiresStorageNotLow(boolean)
    {
        androidx.work.Constraints$Builder r0;
        boolean z0;

        r0 := @this: androidx.work.Constraints$Builder;

        z0 := @parameter0: boolean;

        r0.<androidx.work.Constraints$Builder: boolean requiresStorageNotLow> = z0;

        return r0;
    }

    public final androidx.work.Constraints$Builder addContentUriTrigger(android.net.Uri, boolean)
    {
        androidx.work.Constraints$Builder r0;
        android.net.Uri r1;
        boolean z0;
        androidx.work.Constraints$ContentUriTrigger $r2;
        java.util.Set $r3;

        r0 := @this: androidx.work.Constraints$Builder;

        r1 := @parameter0: android.net.Uri;

        z0 := @parameter1: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "uri");

        $r3 = r0.<androidx.work.Constraints$Builder: java.util.Set contentUriTriggers>;

        $r2 = new androidx.work.Constraints$ContentUriTrigger;

        specialinvoke $r2.<androidx.work.Constraints$ContentUriTrigger: void <init>(android.net.Uri,boolean)>(r1, z0);

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        return r0;
    }

    public final androidx.work.Constraints$Builder setTriggerContentUpdateDelay(long, java.util.concurrent.TimeUnit)
    {
        androidx.work.Constraints$Builder r0;
        long l0, $l1;
        java.util.concurrent.TimeUnit r1;

        r0 := @this: androidx.work.Constraints$Builder;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "timeUnit");

        $l1 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long toMillis(long)>(l0);

        r0.<androidx.work.Constraints$Builder: long triggerContentUpdateDelay> = $l1;

        return r0;
    }

    public final androidx.work.Constraints$Builder setTriggerContentUpdateDelay(java.time.Duration)
    {
        androidx.work.Constraints$Builder r0;
        java.time.Duration r1;
        long $l0;

        r0 := @this: androidx.work.Constraints$Builder;

        r1 := @parameter0: java.time.Duration;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "duration");

        $l0 = staticinvoke <androidx.work.impl.utils.DurationApi26Impl: long toMillisCompat(java.time.Duration)>(r1);

        r0.<androidx.work.Constraints$Builder: long triggerContentUpdateDelay> = $l0;

        return r0;
    }

    public final androidx.work.Constraints$Builder setTriggerContentMaxDelay(long, java.util.concurrent.TimeUnit)
    {
        androidx.work.Constraints$Builder r0;
        long l0, $l1;
        java.util.concurrent.TimeUnit r1;

        r0 := @this: androidx.work.Constraints$Builder;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "timeUnit");

        $l1 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long toMillis(long)>(l0);

        r0.<androidx.work.Constraints$Builder: long triggerContentMaxDelay> = $l1;

        return r0;
    }

    public final androidx.work.Constraints$Builder setTriggerContentMaxDelay(java.time.Duration)
    {
        androidx.work.Constraints$Builder r0;
        java.time.Duration r1;
        long $l0;

        r0 := @this: androidx.work.Constraints$Builder;

        r1 := @parameter0: java.time.Duration;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "duration");

        $l0 = staticinvoke <androidx.work.impl.utils.DurationApi26Impl: long toMillisCompat(java.time.Duration)>(r1);

        r0.<androidx.work.Constraints$Builder: long triggerContentMaxDelay> = $l0;

        return r0;
    }

    public final androidx.work.Constraints build()
    {
        androidx.work.Constraints$Builder r0;
        boolean z0, z1, z2, z3, $z4, $z5;
        androidx.work.NetworkType r1;
        int $i0, $i1;
        java.util.Set $r2, r4;
        java.lang.Iterable $r3;
        long l2, l3;
        androidx.work.Constraints $r5;

        r0 := @this: androidx.work.Constraints$Builder;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label1;

        $r2 = r0.<androidx.work.Constraints$Builder: java.util.Set contentUriTriggers>;

        $r3 = (java.lang.Iterable) $r2;

        r4 = staticinvoke <kotlin.collections.CollectionsKt: java.util.Set toSet(java.lang.Iterable)>($r3);

        l2 = r0.<androidx.work.Constraints$Builder: long triggerContentUpdateDelay>;

        l3 = r0.<androidx.work.Constraints$Builder: long triggerContentMaxDelay>;

        goto label2;

     label1:
        r4 = staticinvoke <kotlin.collections.SetsKt: java.util.Set emptySet()>();

        l2 = -1L;

        l3 = -1L;

     label2:
        z0 = r0.<androidx.work.Constraints$Builder: boolean requiresCharging>;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 23 goto label3;

        $z4 = r0.<androidx.work.Constraints$Builder: boolean requiresDeviceIdle>;

        if $z4 == 0 goto label3;

        $z5 = 1;

        goto label4;

     label3:
        $z5 = 0;

     label4:
        z1 = $z5;

        r1 = r0.<androidx.work.Constraints$Builder: androidx.work.NetworkType requiredNetworkType>;

        z2 = r0.<androidx.work.Constraints$Builder: boolean requiresBatteryNotLow>;

        z3 = r0.<androidx.work.Constraints$Builder: boolean requiresStorageNotLow>;

        $r5 = new androidx.work.Constraints;

        specialinvoke $r5.<androidx.work.Constraints: void <init>(androidx.work.NetworkType,boolean,boolean,boolean,boolean,long,long,java.util.Set)>(r1, z0, z1, z2, z3, l2, l3, r4);

        return $r5;
    }

androidx.work.Constraints$Companion
    private void <init>()
    {
        androidx.work.Constraints$Companion r0;

        r0 := @this: androidx.work.Constraints$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.work.Constraints$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.work.Constraints$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.work.Constraints$Companion: void <init>()>();

        return;
    }

androidx.work.Constraints$ContentUriTrigger
<androidx.work.Constraints$ContentUriTrigger: android.net.Uri uri>
<androidx.work.Constraints$ContentUriTrigger: boolean isTriggeredForDescendants>
    public void <init>(android.net.Uri, boolean)
    {
        androidx.work.Constraints$ContentUriTrigger r0;
        android.net.Uri r1;
        boolean z0;

        r0 := @this: androidx.work.Constraints$ContentUriTrigger;

        r1 := @parameter0: android.net.Uri;

        z0 := @parameter1: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "uri");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.work.Constraints$ContentUriTrigger: android.net.Uri uri> = r1;

        r0.<androidx.work.Constraints$ContentUriTrigger: boolean isTriggeredForDescendants> = z0;

        return;
    }

    public final android.net.Uri getUri()
    {
        androidx.work.Constraints$ContentUriTrigger r0;
        android.net.Uri $r1;

        r0 := @this: androidx.work.Constraints$ContentUriTrigger;

        $r1 = r0.<androidx.work.Constraints$ContentUriTrigger: android.net.Uri uri>;

        return $r1;
    }

    public final boolean isTriggeredForDescendants()
    {
        androidx.work.Constraints$ContentUriTrigger r0;
        boolean $z0;

        r0 := @this: androidx.work.Constraints$ContentUriTrigger;

        $z0 = r0.<androidx.work.Constraints$ContentUriTrigger: boolean isTriggeredForDescendants>;

        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.work.Constraints$ContentUriTrigger r0, $r3, $r4, $r7;
        java.lang.Object r1;
        java.lang.Class $r2, $r8;
        boolean $z0, $z1, $z2, $z3;
        android.net.Uri $r5, $r6;

        r0 := @this: androidx.work.Constraints$ContentUriTrigger;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if r1 == null goto label2;

        $r8 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        goto label3;

     label2:
        $r8 = null;

     label3:
        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r8);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r1, "null cannot be cast to non-null type androidx.work.Constraints.ContentUriTrigger");

        $r3 = (androidx.work.Constraints$ContentUriTrigger) r1;

        $r6 = r0.<androidx.work.Constraints$ContentUriTrigger: android.net.Uri uri>;

        $r4 = (androidx.work.Constraints$ContentUriTrigger) r1;

        $r5 = $r4.<androidx.work.Constraints$ContentUriTrigger: android.net.Uri uri>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z1 != 0 goto label5;

        return 0;

     label5:
        $z3 = r0.<androidx.work.Constraints$ContentUriTrigger: boolean isTriggeredForDescendants>;

        $r7 = (androidx.work.Constraints$ContentUriTrigger) r1;

        $z2 = $r7.<androidx.work.Constraints$ContentUriTrigger: boolean isTriggeredForDescendants>;

        if $z3 == $z2 goto label6;

        return 0;

     label6:
        return 1;
    }

    public int hashCode()
    {
        androidx.work.Constraints$ContentUriTrigger r0;
        android.net.Uri $r1;
        boolean $z0;
        int $i0, $i1, i2, i3;

        r0 := @this: androidx.work.Constraints$ContentUriTrigger;

        $r1 = r0.<androidx.work.Constraints$ContentUriTrigger: android.net.Uri uri>;

        i2 = virtualinvoke $r1.<android.net.Uri: int hashCode()>();

        $i0 = 31 * i2;

        $z0 = r0.<androidx.work.Constraints$ContentUriTrigger: boolean isTriggeredForDescendants>;

        $i1 = staticinvoke <java.lang.Boolean: int hashCode(boolean)>($z0);

        i3 = $i0 + $i1;

        return i3;
    }

