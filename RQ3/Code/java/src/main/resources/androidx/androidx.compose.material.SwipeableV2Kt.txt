androidx.compose.material.SwipeableV2Kt
    public static final androidx.compose.ui.Modifier swipeableV2(androidx.compose.ui.Modifier, androidx.compose.material.SwipeableV2State, androidx.compose.foundation.gestures.Orientation, boolean, boolean, androidx.compose.foundation.interaction.MutableInteractionSource)
    {
        androidx.compose.ui.Modifier $r0, $r7;
        androidx.compose.material.SwipeableV2State r1;
        androidx.compose.foundation.gestures.Orientation r2;
        boolean z0, z1, z2;
        androidx.compose.foundation.interaction.MutableInteractionSource r3;
        androidx.compose.foundation.gestures.DraggableState r4;
        androidx.compose.material.SwipeableV2Kt$swipeableV2$1 $r5;
        kotlin.jvm.functions.Function3 $r6;

        $r0 := @parameter0: androidx.compose.ui.Modifier;

        r1 := @parameter1: androidx.compose.material.SwipeableV2State;

        r2 := @parameter2: androidx.compose.foundation.gestures.Orientation;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        r3 := @parameter5: androidx.compose.foundation.interaction.MutableInteractionSource;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "state");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "orientation");

        r4 = virtualinvoke r1.<androidx.compose.material.SwipeableV2State: androidx.compose.foundation.gestures.DraggableState getDraggableState$material_release()>();

        z2 = virtualinvoke r1.<androidx.compose.material.SwipeableV2State: boolean isAnimationRunning()>();

        $r5 = new androidx.compose.material.SwipeableV2Kt$swipeableV2$1;

        specialinvoke $r5.<androidx.compose.material.SwipeableV2Kt$swipeableV2$1: void <init>(androidx.compose.material.SwipeableV2State,kotlin.coroutines.Continuation)>(r1, null);

        $r6 = (kotlin.jvm.functions.Function3) $r5;

        $r7 = staticinvoke <androidx.compose.foundation.gestures.DraggableKt: androidx.compose.ui.Modifier draggable$default(androidx.compose.ui.Modifier,androidx.compose.foundation.gestures.DraggableState,androidx.compose.foundation.gestures.Orientation,boolean,androidx.compose.foundation.interaction.MutableInteractionSource,boolean,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function3,boolean,int,java.lang.Object)>($r0, r4, r2, z0, r3, z2, null, $r6, z1, 32, null);

        return $r7;
    }

    public static androidx.compose.ui.Modifier swipeableV2$default(androidx.compose.ui.Modifier, androidx.compose.material.SwipeableV2State, androidx.compose.foundation.gestures.Orientation, boolean, boolean, androidx.compose.foundation.interaction.MutableInteractionSource, int, java.lang.Object)
    {
        androidx.compose.ui.Modifier r0, $r4;
        androidx.compose.material.SwipeableV2State r1;
        androidx.compose.foundation.gestures.Orientation r2;
        int i0, $i1, $i2, $i3;
        java.lang.Object r3;
        boolean z0, z1;
        androidx.compose.foundation.interaction.MutableInteractionSource r5;

        r0 := @parameter0: androidx.compose.ui.Modifier;

        r1 := @parameter1: androidx.compose.material.SwipeableV2State;

        r2 := @parameter2: androidx.compose.foundation.gestures.Orientation;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        r5 := @parameter5: androidx.compose.foundation.interaction.MutableInteractionSource;

        i0 := @parameter6: int;

        r3 := @parameter7: java.lang.Object;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        z0 = 1;

     label1:
        $i2 = i0 & 8;

        if $i2 == 0 goto label2;

        z1 = 0;

     label2:
        $i3 = i0 & 16;

        if $i3 == 0 goto label3;

        r5 = null;

     label3:
        $r4 = staticinvoke <androidx.compose.material.SwipeableV2Kt: androidx.compose.ui.Modifier swipeableV2(androidx.compose.ui.Modifier,androidx.compose.material.SwipeableV2State,androidx.compose.foundation.gestures.Orientation,boolean,boolean,androidx.compose.foundation.interaction.MutableInteractionSource)>(r0, r1, r2, z0, z1, r5);

        return $r4;
    }

    public static final androidx.compose.ui.Modifier swipeAnchors(androidx.compose.ui.Modifier, androidx.compose.material.SwipeableV2State, java.util.Set, kotlin.jvm.functions.Function2, kotlin.jvm.functions.Function2)
    {
        androidx.compose.ui.Modifier $r0, $r7;
        androidx.compose.material.SwipeableV2State r1;
        java.util.Set r2;
        kotlin.jvm.functions.Function2 r3, r4;
        androidx.compose.material.SwipeableV2Kt$swipeAnchors$1 $r5;
        kotlin.jvm.functions.Function1 $r6;

        $r0 := @parameter0: androidx.compose.ui.Modifier;

        r1 := @parameter1: androidx.compose.material.SwipeableV2State;

        r2 := @parameter2: java.util.Set;

        r3 := @parameter3: kotlin.jvm.functions.Function2;

        r4 := @parameter4: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "state");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "possibleStates");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "calculateAnchor");

        $r5 = new androidx.compose.material.SwipeableV2Kt$swipeAnchors$1;

        specialinvoke $r5.<androidx.compose.material.SwipeableV2Kt$swipeAnchors$1: void <init>(androidx.compose.material.SwipeableV2State,java.util.Set,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function2)>(r1, r2, r3, r4);

        $r6 = (kotlin.jvm.functions.Function1) $r5;

        $r7 = staticinvoke <androidx.compose.ui.layout.OnRemeasuredModifierKt: androidx.compose.ui.Modifier onSizeChanged(androidx.compose.ui.Modifier,kotlin.jvm.functions.Function1)>($r0, $r6);

        return $r7;
    }

    public static androidx.compose.ui.Modifier swipeAnchors$default(androidx.compose.ui.Modifier, androidx.compose.material.SwipeableV2State, java.util.Set, kotlin.jvm.functions.Function2, kotlin.jvm.functions.Function2, int, java.lang.Object)
    {
        androidx.compose.ui.Modifier r0, $r5;
        androidx.compose.material.SwipeableV2State r1;
        java.util.Set r2;
        kotlin.jvm.functions.Function2 r3, r6;
        int i0, $i1;
        java.lang.Object r4;

        r0 := @parameter0: androidx.compose.ui.Modifier;

        r1 := @parameter1: androidx.compose.material.SwipeableV2State;

        r2 := @parameter2: java.util.Set;

        r6 := @parameter3: kotlin.jvm.functions.Function2;

        r3 := @parameter4: kotlin.jvm.functions.Function2;

        i0 := @parameter5: int;

        r4 := @parameter6: java.lang.Object;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        r6 = null;

     label1:
        $r5 = staticinvoke <androidx.compose.material.SwipeableV2Kt: androidx.compose.ui.Modifier swipeAnchors(androidx.compose.ui.Modifier,androidx.compose.material.SwipeableV2State,java.util.Set,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function2)>(r0, r1, r2, r6, r3);

        return $r5;
    }

    public static final androidx.compose.material.SwipeableV2State rememberSwipeableV2State(java.lang.Object, androidx.compose.animation.core.AnimationSpec, kotlin.jvm.functions.Function1, androidx.compose.runtime.Composer, int, int)
    {
        java.lang.Object r0, $r8;
        androidx.compose.runtime.Composer $r1;
        int $i0, i1, $i2, $i3;
        androidx.compose.material.SwipeableV2State r2;
        boolean $z0, $z1;
        androidx.compose.material.SwipeableV2State$Companion $r3;
        java.lang.Object[] $r4;
        androidx.compose.runtime.saveable.Saver $r5;
        androidx.compose.material.SwipeableV2Kt$rememberSwipeableV2State$2 $r6;
        kotlin.jvm.functions.Function0 $r7;
        androidx.compose.material.SwipeableV2Kt$rememberSwipeableV2State$1 $r9;
        androidx.compose.material.SwipeableDefaults $r10;
        androidx.compose.animation.core.SpringSpec $r11;
        androidx.compose.animation.core.AnimationSpec r12;
        kotlin.jvm.functions.Function1 r13;

        r0 := @parameter0: java.lang.Object;

        r12 := @parameter1: androidx.compose.animation.core.AnimationSpec;

        r13 := @parameter2: kotlin.jvm.functions.Function1;

        $r1 := @parameter3: androidx.compose.runtime.Composer;

        $i0 := @parameter4: int;

        i1 := @parameter5: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "initialState");

        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-1791789117);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r1, "C(rememberSwipeableV2State)P(2)371@14229L348:SwipeableV2.kt#jmzs0o");

        $i2 = i1 & 2;

        if $i2 == 0 goto label1;

        $r10 = <androidx.compose.material.SwipeableDefaults: androidx.compose.material.SwipeableDefaults INSTANCE>;

        $r11 = virtualinvoke $r10.<androidx.compose.material.SwipeableDefaults: androidx.compose.animation.core.SpringSpec getAnimationSpec()>();

        r12 = (androidx.compose.animation.core.AnimationSpec) $r11;

     label1:
        $i3 = i1 & 4;

        if $i3 == 0 goto label2;

        $r9 = <androidx.compose.material.SwipeableV2Kt$rememberSwipeableV2State$1: androidx.compose.material.SwipeableV2Kt$rememberSwipeableV2State$1 INSTANCE>;

        r13 = (kotlin.jvm.functions.Function1) $r9;

     label2:
        $z0 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z0 == 0 goto label3;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(-1791789117, $i0, -1, "androidx.compose.material.rememberSwipeableV2State (SwipeableV2.kt:366)");

     label3:
        $r4 = newarray (java.lang.Object)[0];

        $r3 = <androidx.compose.material.SwipeableV2State: androidx.compose.material.SwipeableV2State$Companion Companion>;

        $r5 = virtualinvoke $r3.<androidx.compose.material.SwipeableV2State$Companion: androidx.compose.runtime.saveable.Saver Saver(androidx.compose.animation.core.AnimationSpec,kotlin.jvm.functions.Function1)>(r12, r13);

        $r6 = new androidx.compose.material.SwipeableV2Kt$rememberSwipeableV2State$2;

        specialinvoke $r6.<androidx.compose.material.SwipeableV2Kt$rememberSwipeableV2State$2: void <init>(java.lang.Object,androidx.compose.animation.core.AnimationSpec,kotlin.jvm.functions.Function1)>(r0, r12, r13);

        $r7 = (kotlin.jvm.functions.Function0) $r6;

        $r8 = staticinvoke <androidx.compose.runtime.saveable.RememberSaveableKt: java.lang.Object rememberSaveable(java.lang.Object[],androidx.compose.runtime.saveable.Saver,java.lang.String,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int)>($r4, $r5, null, $r7, $r1, 72, 4);

        r2 = (androidx.compose.material.SwipeableV2State) $r8;

        $z1 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z1 == 0 goto label4;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

     label4:
        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        return r2;
    }

    private static final java.lang.Object closestState(java.util.Map, float)
    {
        java.util.Map $r0;
        float f0, f1, $f2, $f3, f4, f5, f6;
        java.util.Iterator r1;
        boolean $z1, $z2, $z3, $z4, $z5;
        java.util.Set $r2;
        java.lang.Object $r3, $r5, $r8, r14, $r15, $r17;
        java.lang.Number $r4, $r6;
        int $i0;
        java.util.Map$Entry $r7, r16, r18;
        java.util.NoSuchElementException $r9;
        java.lang.IllegalArgumentException $r10;
        java.lang.String $r11, $r12;
        java.lang.Iterable $r13;

        $r0 := @parameter0: java.util.Map;

        f0 := @parameter1: float;

        $z1 = interfaceinvoke $r0.<java.util.Map: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        $z5 = 1;

        goto label2;

     label1:
        $z5 = 0;

     label2:
        if $z5 != 0 goto label3;

        $r12 = "The anchors were empty when trying to find the closest state";

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label3:
        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r13 = (java.lang.Iterable) $r2;

        r1 = interfaceinvoke $r13.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label4;

        $r9 = new java.util.NoSuchElementException;

        specialinvoke $r9.<java.util.NoSuchElementException: void <init>()>();

        throw $r9;

     label4:
        r14 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $z3 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label5;

        $r15 = r14;

        goto label8;

     label5:
        r16 = (java.util.Map$Entry) r14;

        $r3 = interfaceinvoke r16.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r4 = (java.lang.Number) $r3;

        f4 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f2 = f4 - f0;

        f5 = staticinvoke <java.lang.Math: float abs(float)>($f2);

     label6:
        $r17 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r18 = (java.util.Map$Entry) $r17;

        $r5 = interfaceinvoke r18.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = (java.lang.Number) $r5;

        f1 = virtualinvoke $r6.<java.lang.Number: float floatValue()>();

        $f3 = f1 - f0;

        f6 = staticinvoke <java.lang.Math: float abs(float)>($f3);

        $i0 = staticinvoke <java.lang.Float: int compare(float,float)>(f5, f6);

        if $i0 <= 0 goto label7;

        r14 = $r17;

        f5 = f6;

     label7:
        $z4 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z4 != 0 goto label6;

        $r15 = r14;

     label8:
        $r7 = (java.util.Map$Entry) $r15;

        $r8 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        return $r8;
    }

    static java.lang.Object closestState$default(java.util.Map, float, int, java.lang.Object)
    {
        java.util.Map r0;
        int i0, $i1;
        java.lang.Object r1, $r2;
        float f0;

        r0 := @parameter0: java.util.Map;

        f0 := @parameter1: float;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        f0 = 0.0F;

     label1:
        $r2 = staticinvoke <androidx.compose.material.SwipeableV2Kt: java.lang.Object closestState(java.util.Map,float)>(r0, f0);

        return $r2;
    }

    private static final java.lang.Object closestState(java.util.Map, float, boolean)
    {
        java.util.Map $r0;
        float f0, f1, f2, f3, $f4, f5, $f6, f7, $f8, $f9, f10;
        boolean z0, $z1, $z2, $z3, $z4, $z5, z8;
        java.util.Iterator r1;
        java.util.Set $r2;
        java.lang.Object $r3, $r6, r12, $r13, $r15, $r17;
        java.lang.Number $r4, $r18;
        byte $b0, $b1;
        int $i2;
        java.util.Map$Entry $r5, r14, r16;
        java.util.NoSuchElementException $r7;
        java.lang.IllegalArgumentException $r8;
        java.lang.String $r9, $r10;
        java.lang.Iterable $r11;

        $r0 := @parameter0: java.util.Map;

        f0 := @parameter1: float;

        z0 := @parameter2: boolean;

        $z1 = interfaceinvoke $r0.<java.util.Map: boolean isEmpty()>();

        if $z1 != 0 goto label01;

        $z5 = 1;

        goto label02;

     label01:
        $z5 = 0;

     label02:
        if $z5 != 0 goto label03;

        $r10 = "The anchors were empty when trying to find the closest state";

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label03:
        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r11 = (java.lang.Iterable) $r2;

        r1 = interfaceinvoke $r11.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label04;

        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        throw $r7;

     label04:
        r12 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $z3 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label05;

        $r13 = r12;

        goto label16;

     label05:
        r14 = (java.util.Map$Entry) r12;

        $r3 = interfaceinvoke r14.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r4 = (java.lang.Number) $r3;

        f3 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        if z0 == 0 goto label06;

        $f4 = f3 - f0;

        goto label07;

     label06:
        $f4 = f0 - f3;

     label07:
        f5 = $f4;

        $b0 = f5 cmpg 0.0F;

        if $b0 >= 0 goto label08;

        $f6 = #InfinityF;

        goto label09;

     label08:
        $f6 = f5;

     label09:
        f7 = $f6;

     label10:
        $r15 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r16 = (java.util.Map$Entry) $r15;

        z8 = 0;

        $r17 = interfaceinvoke r16.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r18 = (java.lang.Number) $r17;

        f1 = virtualinvoke $r18.<java.lang.Number: float floatValue()>();

        if z0 == 0 goto label11;

        $f8 = f1 - f0;

        goto label12;

     label11:
        $f8 = f0 - f1;

     label12:
        f2 = $f8;

        $b1 = f2 cmpg 0.0F;

        if $b1 >= 0 goto label13;

        $f9 = #InfinityF;

        goto label14;

     label13:
        $f9 = f2;

     label14:
        f10 = $f9;

        $i2 = staticinvoke <java.lang.Float: int compare(float,float)>(f7, f10);

        if $i2 <= 0 goto label15;

        r12 = $r15;

        f7 = f10;

     label15:
        $z4 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z4 != 0 goto label10;

        $r13 = r12;

     label16:
        $r5 = (java.util.Map$Entry) $r13;

        $r6 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        return $r6;
    }

    static java.lang.Object closestState$default(java.util.Map, float, boolean, int, java.lang.Object)
    {
        java.util.Map r0;
        int i0, $i1, $i2;
        java.lang.Object r1, $r2;
        float f0;
        boolean z0;

        r0 := @parameter0: java.util.Map;

        f0 := @parameter1: float;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        f0 = 0.0F;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        z0 = 0;

     label2:
        $r2 = staticinvoke <androidx.compose.material.SwipeableV2Kt: java.lang.Object closestState(java.util.Map,float,boolean)>(r0, f0, z0);

        return $r2;
    }

    private static final java.lang.Float minOrNull(java.util.Map)
    {
        java.util.Map $r0;
        java.util.Iterator r1;
        float f0, f1, f2;
        java.util.Set $r2;
        java.lang.Iterable $r3;
        boolean $z0, $z1, z3;
        java.lang.Object $r4, $r5, $r7, $r8;
        java.lang.Number $r6, $r9;
        java.lang.Float $r10;
        java.util.Map$Entry r11, $r12;

        $r0 := @parameter0: java.util.Map;

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = (java.lang.Iterable) $r2;

        r1 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r10 = null;

        goto label4;

     label1:
        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.util.Map$Entry) $r4;

        $r5 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = (java.lang.Number) $r5;

        f1 = virtualinvoke $r6.<java.lang.Number: float floatValue()>();

        f2 = f1;

     label2:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r7 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (java.util.Map$Entry) $r7;

        z3 = 0;

        $r8 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (java.lang.Number) $r8;

        f0 = virtualinvoke $r9.<java.lang.Number: float floatValue()>();

        f2 = staticinvoke <java.lang.Math: float min(float,float)>(f2, f0);

        goto label2;

     label3:
        $r10 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f2);

     label4:
        return $r10;
    }

    private static final java.lang.Float maxOrNull(java.util.Map)
    {
        java.util.Map $r0;
        java.util.Iterator r1;
        float f0, f1, f2;
        java.util.Set $r2;
        java.lang.Iterable $r3;
        boolean $z0, $z1, z3;
        java.lang.Object $r4, $r5, $r7, $r8;
        java.lang.Number $r6, $r9;
        java.lang.Float $r10;
        java.util.Map$Entry r11, $r12;

        $r0 := @parameter0: java.util.Map;

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = (java.lang.Iterable) $r2;

        r1 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r10 = null;

        goto label4;

     label1:
        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.util.Map$Entry) $r4;

        $r5 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = (java.lang.Number) $r5;

        f1 = virtualinvoke $r6.<java.lang.Number: float floatValue()>();

        f2 = f1;

     label2:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r7 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (java.util.Map$Entry) $r7;

        z3 = 0;

        $r8 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (java.lang.Number) $r8;

        f0 = virtualinvoke $r9.<java.lang.Number: float floatValue()>();

        f2 = staticinvoke <java.lang.Math: float max(float,float)>(f2, f0);

        goto label2;

     label3:
        $r10 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f2);

     label4:
        return $r10;
    }

    private static final float requireAnchor(java.util.Map, java.lang.Object)
    {
        java.util.Map $r0, $r8;
        java.lang.Object r1, $r2;
        java.lang.Number $r3;
        float $f0;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r9;
        java.lang.IllegalArgumentException $r10;
        java.lang.String $r11, $r12;

        $r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.Object;

        $r2 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        if $r2 != null goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Required anchor ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was not found in anchors. Current anchors: ");

        $r8 = staticinvoke <kotlin.collections.MapsKt: java.util.Map toMap(java.util.Map)>($r0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label1:
        $r3 = (java.lang.Number) $r2;

        $f0 = virtualinvoke $r3.<java.lang.Number: float floatValue()>();

        return $f0;
    }

    public static final float access$requireAnchor(java.util.Map, java.lang.Object)
    {
        java.util.Map $r0;
        java.lang.Object r1;
        float $f0;

        $r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.Object;

        $f0 = staticinvoke <androidx.compose.material.SwipeableV2Kt: float requireAnchor(java.util.Map,java.lang.Object)>($r0, r1);

        return $f0;
    }

    public static final java.lang.Object access$closestState(java.util.Map, float, boolean)
    {
        java.util.Map $r0;
        float f0;
        boolean z0;
        java.lang.Object $r1;

        $r0 := @parameter0: java.util.Map;

        f0 := @parameter1: float;

        z0 := @parameter2: boolean;

        $r1 = staticinvoke <androidx.compose.material.SwipeableV2Kt: java.lang.Object closestState(java.util.Map,float,boolean)>($r0, f0, z0);

        return $r1;
    }

    public static final java.lang.Object access$closestState(java.util.Map, float)
    {
        java.util.Map $r0;
        float f0;
        java.lang.Object $r1;

        $r0 := @parameter0: java.util.Map;

        f0 := @parameter1: float;

        $r1 = staticinvoke <androidx.compose.material.SwipeableV2Kt: java.lang.Object closestState(java.util.Map,float)>($r0, f0);

        return $r1;
    }

    public static final java.lang.Float access$minOrNull(java.util.Map)
    {
        java.util.Map $r0;
        java.lang.Float $r1;

        $r0 := @parameter0: java.util.Map;

        $r1 = staticinvoke <androidx.compose.material.SwipeableV2Kt: java.lang.Float minOrNull(java.util.Map)>($r0);

        return $r1;
    }

    public static final java.lang.Float access$maxOrNull(java.util.Map)
    {
        java.util.Map $r0;
        java.lang.Float $r1;

        $r0 := @parameter0: java.util.Map;

        $r1 = staticinvoke <androidx.compose.material.SwipeableV2Kt: java.lang.Float maxOrNull(java.util.Map)>($r0);

        return $r1;
    }

