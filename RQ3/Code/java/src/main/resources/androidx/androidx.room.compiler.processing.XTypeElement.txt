androidx.room.compiler.processing.XTypeElement
<androidx.room.compiler.processing.XTypeElement: java.lang.String getQualifiedName()>
<androidx.room.compiler.processing.XTypeElement: java.lang.String getPackageName()>
<androidx.room.compiler.processing.XTypeElement: androidx.room.compiler.processing.XType getType()>
    public androidx.room.compiler.processing.XType getSuperType()
    {
        androidx.room.compiler.processing.XTypeElement r0;
        androidx.room.compiler.processing.XType $r1;

        r0 := @this: androidx.room.compiler.processing.XTypeElement;

        $r1 = interfaceinvoke r0.<androidx.room.compiler.processing.XTypeElement: androidx.room.compiler.processing.XType getSuperClass()>();

        return $r1;
    }

    public static void getSuperType$annotations()
    {
        return;
    }

<androidx.room.compiler.processing.XTypeElement: java.util.List getSuperTypes()>
<androidx.room.compiler.processing.XTypeElement: androidx.room.compiler.processing.XType getSuperClass()>
<androidx.room.compiler.processing.XTypeElement: java.util.List getSuperInterfaces()>
<androidx.room.compiler.processing.XTypeElement: com.squareup.javapoet.ClassName getClassName()>
<androidx.room.compiler.processing.XTypeElement: androidx.room.compiler.codegen.XClassName asClassName()>
<androidx.room.compiler.processing.XTypeElement: androidx.room.compiler.processing.XTypeElement getEnclosingTypeElement()>
<androidx.room.compiler.processing.XTypeElement: androidx.room.compiler.processing.XMemberContainer getEnclosingElement()>
    public androidx.room.compiler.processing.XTypeElement getClosestMemberContainer()
    {
        androidx.room.compiler.processing.XTypeElement r0;

        r0 := @this: androidx.room.compiler.processing.XTypeElement;

        return r0;
    }

    public java.lang.String getFallbackLocationText()
    {
        androidx.room.compiler.processing.XTypeElement r0;
        java.lang.String $r1;

        r0 := @this: androidx.room.compiler.processing.XTypeElement;

        $r1 = interfaceinvoke r0.<androidx.room.compiler.processing.XTypeElement: java.lang.String getQualifiedName()>();

        return $r1;
    }

<androidx.room.compiler.processing.XTypeElement: boolean isNested()>
<androidx.room.compiler.processing.XTypeElement: boolean isInterface()>
<androidx.room.compiler.processing.XTypeElement: boolean isFunctionalInterface()>
<androidx.room.compiler.processing.XTypeElement: boolean isClass()>
<androidx.room.compiler.processing.XTypeElement: boolean isDataClass()>
<androidx.room.compiler.processing.XTypeElement: boolean isValueClass()>
<androidx.room.compiler.processing.XTypeElement: boolean isExpect()>
<androidx.room.compiler.processing.XTypeElement: boolean isAnnotationClass()>
<androidx.room.compiler.processing.XTypeElement: boolean isKotlinObject()>
<androidx.room.compiler.processing.XTypeElement: boolean isCompanionObject()>
<androidx.room.compiler.processing.XTypeElement: java.util.List getDeclaredFields()>
<androidx.room.compiler.processing.XTypeElement: kotlin.sequences.Sequence getAllFieldsIncludingPrivateSupers()>
<androidx.room.compiler.processing.XTypeElement: androidx.room.compiler.processing.XConstructorElement findPrimaryConstructor()>
<androidx.room.compiler.processing.XTypeElement: java.util.List getDeclaredMethods()>
<androidx.room.compiler.processing.XTypeElement: kotlin.sequences.Sequence getAllMethods()>
    public kotlin.sequences.Sequence getAllNonPrivateInstanceMethods()
    {
        androidx.room.compiler.processing.XTypeElement r0;
        kotlin.sequences.Sequence $r1, $r4;
        androidx.room.compiler.processing.XTypeElement$getAllNonPrivateInstanceMethods$1 $r2;
        kotlin.jvm.functions.Function1 $r3;

        r0 := @this: androidx.room.compiler.processing.XTypeElement;

        $r1 = interfaceinvoke r0.<androidx.room.compiler.processing.XTypeElement: kotlin.sequences.Sequence getAllMethods()>();

        $r2 = <androidx.room.compiler.processing.XTypeElement$getAllNonPrivateInstanceMethods$1: androidx.room.compiler.processing.XTypeElement$getAllNonPrivateInstanceMethods$1 INSTANCE>;

        $r3 = (kotlin.jvm.functions.Function1) $r2;

        $r4 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence filter(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>($r1, $r3);

        return $r4;
    }

<androidx.room.compiler.processing.XTypeElement: java.util.List getConstructors()>
<androidx.room.compiler.processing.XTypeElement: java.util.List getSuperInterfaceElements()>
<androidx.room.compiler.processing.XTypeElement: java.util.List getEnclosedTypeElements()>
    public java.util.List getEnclosedElements()
    {
        androidx.room.compiler.processing.XTypeElement r0;
        java.util.List r1, $r4, $r6, $r8, $r10;
        java.util.ArrayList $r3;
        java.util.Collection $r5, $r7, $r9, $r11;

        r0 := @this: androidx.room.compiler.processing.XTypeElement;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r1 = (java.util.List) $r3;

        $r4 = interfaceinvoke r0.<androidx.room.compiler.processing.XTypeElement: java.util.List getEnclosedTypeElements()>();

        $r5 = (java.util.Collection) $r4;

        interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r5);

        $r6 = interfaceinvoke r0.<androidx.room.compiler.processing.XTypeElement: java.util.List getDeclaredFields()>();

        $r7 = (java.util.Collection) $r6;

        interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r7);

        $r8 = interfaceinvoke r0.<androidx.room.compiler.processing.XTypeElement: java.util.List getConstructors()>();

        $r9 = (java.util.Collection) $r8;

        interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r9);

        $r10 = interfaceinvoke r0.<androidx.room.compiler.processing.XTypeElement: java.util.List getDeclaredMethods()>();

        $r11 = (java.util.Collection) $r10;

        interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r11);

        return r1;
    }

    public volatile androidx.room.compiler.processing.XMemberContainer getClosestMemberContainer()
    {
        androidx.room.compiler.processing.XTypeElement r0, $r1;
        androidx.room.compiler.processing.XMemberContainer $r2;

        r0 := @this: androidx.room.compiler.processing.XTypeElement;

        $r1 = interfaceinvoke r0.<androidx.room.compiler.processing.XTypeElement: androidx.room.compiler.processing.XTypeElement getClosestMemberContainer()>();

        $r2 = (androidx.room.compiler.processing.XMemberContainer) $r1;

        return $r2;
    }

