androidx.compose.runtime.SnapshotStateKt__DerivedStateKt
<androidx.compose.runtime.SnapshotStateKt__DerivedStateKt: androidx.compose.runtime.SnapshotThreadLocal calculationBlockNestedLevel>
<androidx.compose.runtime.SnapshotStateKt__DerivedStateKt: androidx.compose.runtime.SnapshotThreadLocal derivedStateObservers>
    public static final androidx.compose.runtime.State derivedStateOf(kotlin.jvm.functions.Function0)
    {
        kotlin.jvm.functions.Function0 r0;
        androidx.compose.runtime.DerivedSnapshotState $r1;
        androidx.compose.runtime.State $r2;

        r0 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "calculation");

        $r1 = new androidx.compose.runtime.DerivedSnapshotState;

        specialinvoke $r1.<androidx.compose.runtime.DerivedSnapshotState: void <init>(kotlin.jvm.functions.Function0,androidx.compose.runtime.SnapshotMutationPolicy)>(r0, null);

        $r2 = (androidx.compose.runtime.State) $r1;

        return $r2;
    }

    public static final androidx.compose.runtime.State derivedStateOf(androidx.compose.runtime.SnapshotMutationPolicy, kotlin.jvm.functions.Function0)
    {
        androidx.compose.runtime.SnapshotMutationPolicy r0;
        kotlin.jvm.functions.Function0 r1;
        androidx.compose.runtime.DerivedSnapshotState $r2;
        androidx.compose.runtime.State $r3;

        r0 := @parameter0: androidx.compose.runtime.SnapshotMutationPolicy;

        r1 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "policy");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "calculation");

        $r2 = new androidx.compose.runtime.DerivedSnapshotState;

        specialinvoke $r2.<androidx.compose.runtime.DerivedSnapshotState: void <init>(kotlin.jvm.functions.Function0,androidx.compose.runtime.SnapshotMutationPolicy)>(r1, r0);

        $r3 = (androidx.compose.runtime.State) $r2;

        return $r3;
    }

    private static final java.lang.Object notifyObservers$SnapshotStateKt__DerivedStateKt(androidx.compose.runtime.DerivedState, kotlin.jvm.functions.Function0)
    {
        androidx.compose.runtime.DerivedState r0;
        kotlin.jvm.functions.Function0 r1;
        androidx.compose.runtime.collection.MutableVector r2, $r21, r22, r27;
        kotlin.jvm.functions.Function1 r3, r25, r29;
        androidx.compose.runtime.SnapshotThreadLocal $r4;
        java.lang.Object $r5, $r7, $r8, $r12, $r13, $r18, $r19, r26;
        java.lang.Object[] $r6, $r11, $r17, r23, r28;
        kotlin.Pair $r10, r24, r33;
        kotlin.Pair[] $r15;
        java.lang.Throwable $r16, r30;
        byte b0;
        boolean z2, z5, z6, z7;
        int $i1, i2, i3, i4, i5, i6;

        r0 := @parameter0: androidx.compose.runtime.DerivedState;

        r1 := @parameter1: kotlin.jvm.functions.Function0;

        $r4 = staticinvoke <androidx.compose.runtime.SnapshotStateKt__DerivedStateKt: androidx.compose.runtime.SnapshotThreadLocal access$getDerivedStateObservers$p()>();

        $r5 = virtualinvoke $r4.<androidx.compose.runtime.SnapshotThreadLocal: java.lang.Object get()>();

        $r21 = (androidx.compose.runtime.collection.MutableVector) $r5;

        if $r21 != null goto label01;

        b0 = 0;

        $r21 = new androidx.compose.runtime.collection.MutableVector;

        $r15 = newarray (kotlin.Pair)[b0];

        specialinvoke $r21.<androidx.compose.runtime.collection.MutableVector: void <init>(java.lang.Object[],int)>($r15, 0);

     label01:
        r2 = $r21;

        r22 = r2;

        z2 = 0;

        $i1 = virtualinvoke r22.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if $i1 <= 0 goto label03;

        i2 = 0;

        $r11 = virtualinvoke r22.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r11, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r23 = $r11;

     label02:
        $r12 = r23[i2];

        r24 = (kotlin.Pair) $r12;

        $r13 = virtualinvoke r24.<kotlin.Pair: java.lang.Object component1()>();

        r25 = (kotlin.jvm.functions.Function1) $r13;

        interfaceinvoke r25.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r0);

        i2 = i2 + 1;

        if i2 < $i1 goto label02;

     label03:
        r26 = interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

     label04:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        r27 = r2;

        i3 = virtualinvoke r27.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if i3 <= 0 goto label06;

        i4 = 0;

        $r6 = virtualinvoke r27.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r6, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r28 = $r6;

     label05:
        $r7 = r28[i4];

        z5 = 0;

        $r10 = (kotlin.Pair) $r7;

        $r8 = virtualinvoke $r10.<kotlin.Pair: java.lang.Object component2()>();

        r29 = (kotlin.jvm.functions.Function1) $r8;

        interfaceinvoke r29.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r0);

        i4 = i4 + 1;

        if i4 < i3 goto label05;

     label06:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        goto label11;

     label07:
        $r16 := @caughtexception;

        r30 = $r16;

     label08:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        z6 = 0;

        i5 = virtualinvoke r2.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if i5 <= 0 goto label10;

        i6 = 0;

        $r17 = virtualinvoke r2.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r17, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

     label09:
        $r18 = $r17[i6];

        r33 = (kotlin.Pair) $r18;

        z7 = 0;

        $r19 = virtualinvoke r33.<kotlin.Pair: java.lang.Object component2()>();

        r3 = (kotlin.jvm.functions.Function1) $r19;

        interfaceinvoke r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r0);

        i6 = i6 + 1;

        if i6 < i5 goto label09;

     label10:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw r30;

     label11:
        return r26;

        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    public static final void observeDerivedStateRecalculations(kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function0)
    {
        kotlin.jvm.functions.Function1 r0, r1;
        kotlin.jvm.functions.Function0 r2;
        androidx.compose.runtime.collection.MutableVector r3, $r9, $r14, r16, r18;
        kotlin.Pair r4;
        androidx.compose.runtime.SnapshotThreadLocal $r5, $r11;
        java.lang.Object $r6;
        int $i0, $i1, $i2, $i3;
        kotlin.Pair[] $r10;
        java.lang.Throwable $r12;
        byte b4;
        boolean z4;

        r0 := @parameter0: kotlin.jvm.functions.Function1;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        r2 := @parameter2: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "start");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "done");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "block");

        $r5 = <androidx.compose.runtime.SnapshotStateKt__DerivedStateKt: androidx.compose.runtime.SnapshotThreadLocal derivedStateObservers>;

        $r6 = virtualinvoke $r5.<androidx.compose.runtime.SnapshotThreadLocal: java.lang.Object get()>();

        $r14 = (androidx.compose.runtime.collection.MutableVector) $r6;

        if $r14 != null goto label1;

        b4 = 16;

        $r9 = new androidx.compose.runtime.collection.MutableVector;

        $r10 = newarray (kotlin.Pair)[b4];

        specialinvoke $r9.<androidx.compose.runtime.collection.MutableVector: void <init>(java.lang.Object[],int)>($r10, 0);

        r16 = $r9;

        $r11 = <androidx.compose.runtime.SnapshotStateKt__DerivedStateKt: androidx.compose.runtime.SnapshotThreadLocal derivedStateObservers>;

        virtualinvoke $r11.<androidx.compose.runtime.SnapshotThreadLocal: void set(java.lang.Object)>(r16);

        $r14 = $r9;

     label1:
        r3 = $r14;

        r4 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>(r0, r1);

     label2:
        virtualinvoke r3.<androidx.compose.runtime.collection.MutableVector: boolean add(java.lang.Object)>(r4);

        interfaceinvoke r2.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

     label3:
        z4 = 0;

        $i0 = virtualinvoke r3.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        $i1 = $i0 - 1;

        virtualinvoke r3.<androidx.compose.runtime.collection.MutableVector: java.lang.Object removeAt(int)>($i1);

        goto label6;

     label4:
        $r12 := @caughtexception;

     label5:
        r18 = r3;

        $i2 = virtualinvoke r18.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        $i3 = $i2 - 1;

        virtualinvoke r3.<androidx.compose.runtime.collection.MutableVector: java.lang.Object removeAt(int)>($i3);

        throw $r12;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static final androidx.compose.runtime.SnapshotThreadLocal access$getCalculationBlockNestedLevel$p()
    {
        androidx.compose.runtime.SnapshotThreadLocal $r0;

        $r0 = <androidx.compose.runtime.SnapshotStateKt__DerivedStateKt: androidx.compose.runtime.SnapshotThreadLocal calculationBlockNestedLevel>;

        return $r0;
    }

    public static final androidx.compose.runtime.SnapshotThreadLocal access$getDerivedStateObservers$p()
    {
        androidx.compose.runtime.SnapshotThreadLocal $r0;

        $r0 = <androidx.compose.runtime.SnapshotStateKt__DerivedStateKt: androidx.compose.runtime.SnapshotThreadLocal derivedStateObservers>;

        return $r0;
    }

    static void <clinit>()
    {
        androidx.compose.runtime.SnapshotThreadLocal $r0, $r1;

        $r0 = new androidx.compose.runtime.SnapshotThreadLocal;

        specialinvoke $r0.<androidx.compose.runtime.SnapshotThreadLocal: void <init>()>();

        <androidx.compose.runtime.SnapshotStateKt__DerivedStateKt: androidx.compose.runtime.SnapshotThreadLocal calculationBlockNestedLevel> = $r0;

        $r1 = new androidx.compose.runtime.SnapshotThreadLocal;

        specialinvoke $r1.<androidx.compose.runtime.SnapshotThreadLocal: void <init>()>();

        <androidx.compose.runtime.SnapshotStateKt__DerivedStateKt: androidx.compose.runtime.SnapshotThreadLocal derivedStateObservers> = $r1;

        return;
    }

