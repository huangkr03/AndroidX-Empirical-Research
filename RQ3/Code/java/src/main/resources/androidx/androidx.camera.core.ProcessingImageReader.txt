androidx.camera.core.ProcessingImageReader
<androidx.camera.core.ProcessingImageReader: java.lang.String TAG>
<androidx.camera.core.ProcessingImageReader: int EXIF_MAX_SIZE_BYTES>
<androidx.camera.core.ProcessingImageReader: java.lang.Object mLock>
<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener mTransformedListener>
<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener mImageProcessedListener>
<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.utils.futures.FutureCallback mCaptureStageReadyCallback>
<androidx.camera.core.ProcessingImageReader: boolean mClosed>
<androidx.camera.core.ProcessingImageReader: boolean mProcessing>
<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy mInputImageReader>
<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy mOutputImageReader>
<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener mListener>
<androidx.camera.core.ProcessingImageReader: java.util.concurrent.Executor mExecutor>
<androidx.camera.core.ProcessingImageReader: androidx.concurrent.futures.CallbackToFutureAdapter$Completer mCloseCompleter>
<androidx.camera.core.ProcessingImageReader: com.google.common.util.concurrent.ListenableFuture mCloseFuture>
<androidx.camera.core.ProcessingImageReader: java.util.concurrent.Executor mPostProcessExecutor>
<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.CaptureProcessor mCaptureProcessor>
<androidx.camera.core.ProcessingImageReader: com.google.common.util.concurrent.ListenableFuture mUnderlyingCaptureProcessorCloseFuture>
<androidx.camera.core.ProcessingImageReader: java.lang.String mTagBundleKey>
<androidx.camera.core.ProcessingImageReader: androidx.camera.core.SettableImageProxyBundle mSettableImageProxyBundle>
<androidx.camera.core.ProcessingImageReader: java.util.List mCaptureIdList>
<androidx.camera.core.ProcessingImageReader: com.google.common.util.concurrent.ListenableFuture mSettableImageProxyFutureList>
<androidx.camera.core.ProcessingImageReader: androidx.camera.core.ProcessingImageReader$OnProcessingErrorCallback mOnProcessingErrorCallback>
<androidx.camera.core.ProcessingImageReader: java.util.concurrent.Executor mErrorCallbackExecutor>
    void <init>(androidx.camera.core.ProcessingImageReader$Builder)
    {
        androidx.camera.core.ProcessingImageReader r0;
        androidx.camera.core.ProcessingImageReader$Builder r1;
        java.lang.Object $r2;
        androidx.camera.core.ProcessingImageReader$1 $r3;
        androidx.camera.core.ProcessingImageReader$2 $r4;
        androidx.camera.core.ProcessingImageReader$3 $r5;
        java.lang.String $r6, $r9;
        androidx.camera.core.SettableImageProxyBundle $r7;
        java.util.List $r8, $r15;
        java.util.ArrayList $r10, $r11;
        com.google.common.util.concurrent.ListenableFuture $r12, $r32;
        androidx.camera.core.impl.ImageReaderProxy $r13, $r16, $r17, $r18, $r20, $r24, $r28, $r30;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11;
        androidx.camera.core.impl.CaptureBundle $r14, $r33;
        androidx.camera.core.AndroidImageReaderProxy $r19;
        android.media.ImageReader $r21;
        java.util.concurrent.Executor $r22;
        androidx.camera.core.impl.CaptureProcessor $r23, $r25, $r29, $r31;
        android.view.Surface $r26;
        android.util.Size $r27;
        float $f0, $f1;
        java.lang.IllegalArgumentException $r34;

        r0 := @this: androidx.camera.core.ProcessingImageReader;

        r1 := @parameter0: androidx.camera.core.ProcessingImageReader$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.core.ProcessingImageReader: java.lang.Object mLock> = $r2;

        $r3 = new androidx.camera.core.ProcessingImageReader$1;

        specialinvoke $r3.<androidx.camera.core.ProcessingImageReader$1: void <init>(androidx.camera.core.ProcessingImageReader)>(r0);

        r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener mTransformedListener> = $r3;

        $r4 = new androidx.camera.core.ProcessingImageReader$2;

        specialinvoke $r4.<androidx.camera.core.ProcessingImageReader$2: void <init>(androidx.camera.core.ProcessingImageReader)>(r0);

        r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener mImageProcessedListener> = $r4;

        $r5 = new androidx.camera.core.ProcessingImageReader$3;

        specialinvoke $r5.<androidx.camera.core.ProcessingImageReader$3: void <init>(androidx.camera.core.ProcessingImageReader)>(r0);

        r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.utils.futures.FutureCallback mCaptureStageReadyCallback> = $r5;

        r0.<androidx.camera.core.ProcessingImageReader: boolean mClosed> = 0;

        r0.<androidx.camera.core.ProcessingImageReader: boolean mProcessing> = 0;

        $r6 = new java.lang.String;

        specialinvoke $r6.<java.lang.String: void <init>()>();

        r0.<androidx.camera.core.ProcessingImageReader: java.lang.String mTagBundleKey> = $r6;

        $r7 = new androidx.camera.core.SettableImageProxyBundle;

        $r8 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $r9 = r0.<androidx.camera.core.ProcessingImageReader: java.lang.String mTagBundleKey>;

        specialinvoke $r7.<androidx.camera.core.SettableImageProxyBundle: void <init>(java.util.List,java.lang.String)>($r8, $r9);

        r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.SettableImageProxyBundle mSettableImageProxyBundle> = $r7;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r0.<androidx.camera.core.ProcessingImageReader: java.util.List mCaptureIdList> = $r10;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        $r12 = staticinvoke <androidx.camera.core.impl.utils.futures.Futures: com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)>($r11);

        r0.<androidx.camera.core.ProcessingImageReader: com.google.common.util.concurrent.ListenableFuture mSettableImageProxyFutureList> = $r12;

        $r13 = r1.<androidx.camera.core.ProcessingImageReader$Builder: androidx.camera.core.impl.ImageReaderProxy mInputImageReader>;

        $i0 = interfaceinvoke $r13.<androidx.camera.core.impl.ImageReaderProxy: int getMaxImages()>();

        $r14 = r1.<androidx.camera.core.ProcessingImageReader$Builder: androidx.camera.core.impl.CaptureBundle mCaptureBundle>;

        $r15 = interfaceinvoke $r14.<androidx.camera.core.impl.CaptureBundle: java.util.List getCaptureStages()>();

        $i1 = interfaceinvoke $r15.<java.util.List: int size()>();

        if $i0 >= $i1 goto label1;

        $r34 = new java.lang.IllegalArgumentException;

        specialinvoke $r34.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("MetadataImageReader is smaller than CaptureBundle.");

        throw $r34;

     label1:
        $r16 = r1.<androidx.camera.core.ProcessingImageReader$Builder: androidx.camera.core.impl.ImageReaderProxy mInputImageReader>;

        r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy mInputImageReader> = $r16;

        $r17 = r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy mInputImageReader>;

        i10 = interfaceinvoke $r17.<androidx.camera.core.impl.ImageReaderProxy: int getWidth()>();

        $r18 = r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy mInputImageReader>;

        i11 = interfaceinvoke $r18.<androidx.camera.core.impl.ImageReaderProxy: int getHeight()>();

        $i2 = r1.<androidx.camera.core.ProcessingImageReader$Builder: int mOutputFormat>;

        if $i2 != 256 goto label2;

        $i8 = i10 * i11;

        $f0 = (float) $i8;

        $f1 = $f0 * 1.5F;

        $i9 = (int) $f1;

        i10 = $i9 + 64000;

        i11 = 1;

     label2:
        $r19 = new androidx.camera.core.AndroidImageReaderProxy;

        $i3 = r1.<androidx.camera.core.ProcessingImageReader$Builder: int mOutputFormat>;

        $r20 = r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy mInputImageReader>;

        $i4 = interfaceinvoke $r20.<androidx.camera.core.impl.ImageReaderProxy: int getMaxImages()>();

        $r21 = staticinvoke <android.media.ImageReader: android.media.ImageReader newInstance(int,int,int,int)>(i10, i11, $i3, $i4);

        specialinvoke $r19.<androidx.camera.core.AndroidImageReaderProxy: void <init>(android.media.ImageReader)>($r21);

        r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy mOutputImageReader> = $r19;

        $r22 = r1.<androidx.camera.core.ProcessingImageReader$Builder: java.util.concurrent.Executor mPostProcessExecutor>;

        r0.<androidx.camera.core.ProcessingImageReader: java.util.concurrent.Executor mPostProcessExecutor> = $r22;

        $r23 = r1.<androidx.camera.core.ProcessingImageReader$Builder: androidx.camera.core.impl.CaptureProcessor mCaptureProcessor>;

        r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.CaptureProcessor mCaptureProcessor> = $r23;

        $r25 = r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.CaptureProcessor mCaptureProcessor>;

        $r24 = r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy mOutputImageReader>;

        $r26 = interfaceinvoke $r24.<androidx.camera.core.impl.ImageReaderProxy: android.view.Surface getSurface()>();

        $i5 = r1.<androidx.camera.core.ProcessingImageReader$Builder: int mOutputFormat>;

        interfaceinvoke $r25.<androidx.camera.core.impl.CaptureProcessor: void onOutputSurface(android.view.Surface,int)>($r26, $i5);

        $r29 = r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.CaptureProcessor mCaptureProcessor>;

        $r27 = new android.util.Size;

        $r28 = r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy mInputImageReader>;

        $i6 = interfaceinvoke $r28.<androidx.camera.core.impl.ImageReaderProxy: int getWidth()>();

        $r30 = r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy mInputImageReader>;

        $i7 = interfaceinvoke $r30.<androidx.camera.core.impl.ImageReaderProxy: int getHeight()>();

        specialinvoke $r27.<android.util.Size: void <init>(int,int)>($i6, $i7);

        interfaceinvoke $r29.<androidx.camera.core.impl.CaptureProcessor: void onResolutionUpdate(android.util.Size)>($r27);

        $r31 = r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.CaptureProcessor mCaptureProcessor>;

        $r32 = interfaceinvoke $r31.<androidx.camera.core.impl.CaptureProcessor: com.google.common.util.concurrent.ListenableFuture getCloseFuture()>();

        r0.<androidx.camera.core.ProcessingImageReader: com.google.common.util.concurrent.ListenableFuture mUnderlyingCaptureProcessorCloseFuture> = $r32;

        $r33 = r1.<androidx.camera.core.ProcessingImageReader$Builder: androidx.camera.core.impl.CaptureBundle mCaptureBundle>;

        virtualinvoke r0.<androidx.camera.core.ProcessingImageReader: void setCaptureBundle(androidx.camera.core.impl.CaptureBundle)>($r33);

        return;
    }

    public androidx.camera.core.ImageProxy acquireLatestImage()
    {
        androidx.camera.core.ProcessingImageReader r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        androidx.camera.core.impl.ImageReaderProxy $r4;
        androidx.camera.core.ImageProxy $r5;

        r0 := @this: androidx.camera.core.ProcessingImageReader;

        $r3 = r0.<androidx.camera.core.ProcessingImageReader: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy mOutputImageReader>;

        $r5 = interfaceinvoke $r4.<androidx.camera.core.impl.ImageReaderProxy: androidx.camera.core.ImageProxy acquireLatestImage()>();

        exitmonitor r1;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public androidx.camera.core.ImageProxy acquireNextImage()
    {
        androidx.camera.core.ProcessingImageReader r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        androidx.camera.core.impl.ImageReaderProxy $r4;
        androidx.camera.core.ImageProxy $r5;

        r0 := @this: androidx.camera.core.ProcessingImageReader;

        $r3 = r0.<androidx.camera.core.ProcessingImageReader: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy mOutputImageReader>;

        $r5 = interfaceinvoke $r4.<androidx.camera.core.impl.ImageReaderProxy: androidx.camera.core.ImageProxy acquireNextImage()>();

        exitmonitor r1;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void close()
    {
        androidx.camera.core.ProcessingImageReader r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r7;
        boolean $z0;
        androidx.camera.core.impl.ImageReaderProxy $r4, $r5;
        androidx.camera.core.impl.CaptureProcessor $r6;

        r0 := @this: androidx.camera.core.ProcessingImageReader;

        $r3 = r0.<androidx.camera.core.ProcessingImageReader: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $z0 = r0.<androidx.camera.core.ProcessingImageReader: boolean mClosed>;

        if $z0 == 0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 = r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy mInputImageReader>;

        interfaceinvoke $r4.<androidx.camera.core.impl.ImageReaderProxy: void clearOnImageAvailableListener()>();

        $r5 = r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy mOutputImageReader>;

        interfaceinvoke $r5.<androidx.camera.core.impl.ImageReaderProxy: void clearOnImageAvailableListener()>();

        r0.<androidx.camera.core.ProcessingImageReader: boolean mClosed> = 1;

        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        $r6 = r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.CaptureProcessor mCaptureProcessor>;

        interfaceinvoke $r6.<androidx.camera.core.impl.CaptureProcessor: void close()>();

        virtualinvoke r0.<androidx.camera.core.ProcessingImageReader: void closeAndCompleteFutureIfNecessary()>();

        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    void closeAndCompleteFutureIfNecessary()
    {
        androidx.camera.core.ProcessingImageReader r0;
        boolean z0, z1;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r11;
        com.google.common.util.concurrent.ListenableFuture $r5;
        java.lang.Runnable $r6;
        java.util.concurrent.Executor $r7;
        androidx.camera.core.impl.ImageReaderProxy $r8, $r10;
        androidx.camera.core.SettableImageProxyBundle $r9;

        r0 := @this: androidx.camera.core.ProcessingImageReader;

        $r4 = r0.<androidx.camera.core.ProcessingImageReader: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        z0 = r0.<androidx.camera.core.ProcessingImageReader: boolean mClosed>;

        z1 = r0.<androidx.camera.core.ProcessingImageReader: boolean mProcessing>;

        r1 = r0.<androidx.camera.core.ProcessingImageReader: androidx.concurrent.futures.CallbackToFutureAdapter$Completer mCloseCompleter>;

        if z0 == 0 goto label2;

        if z1 != 0 goto label2;

        $r8 = r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy mInputImageReader>;

        interfaceinvoke $r8.<androidx.camera.core.impl.ImageReaderProxy: void close()>();

        $r9 = r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.SettableImageProxyBundle mSettableImageProxyBundle>;

        virtualinvoke $r9.<androidx.camera.core.SettableImageProxyBundle: void close()>();

        $r10 = r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy mOutputImageReader>;

        interfaceinvoke $r10.<androidx.camera.core.impl.ImageReaderProxy: void close()>();

     label2:
        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        if z0 == 0 goto label7;

        if z1 != 0 goto label7;

        $r5 = r0.<androidx.camera.core.ProcessingImageReader: com.google.common.util.concurrent.ListenableFuture mUnderlyingCaptureProcessorCloseFuture>;

        $r6 = dynamicinvoke "run" <java.lang.Runnable (androidx.camera.core.ProcessingImageReader,androidx.concurrent.futures.CallbackToFutureAdapter$Completer)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.core.ProcessingImageReader: void lambda$closeAndCompleteFutureIfNecessary$0(androidx.concurrent.futures.CallbackToFutureAdapter$Completer)>, methodtype: void __METHODTYPE__());

        $r7 = staticinvoke <androidx.camera.core.impl.utils.executor.CameraXExecutors: java.util.concurrent.Executor directExecutor()>();

        interfaceinvoke $r5.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r6, $r7);

     label7:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    com.google.common.util.concurrent.ListenableFuture getCloseFuture()
    {
        androidx.camera.core.ProcessingImageReader r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r11;
        boolean $z0, $z1;
        com.google.common.util.concurrent.ListenableFuture $r4, $r5, $r7, $r8, r12;
        androidx.concurrent.futures.CallbackToFutureAdapter$Resolver $r6;
        androidx.arch.core.util.Function $r9;
        java.util.concurrent.Executor $r10;

        r0 := @this: androidx.camera.core.ProcessingImageReader;

        $r3 = r0.<androidx.camera.core.ProcessingImageReader: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $z0 = r0.<androidx.camera.core.ProcessingImageReader: boolean mClosed>;

        if $z0 == 0 goto label2;

        $z1 = r0.<androidx.camera.core.ProcessingImageReader: boolean mProcessing>;

        if $z1 != 0 goto label2;

        $r8 = r0.<androidx.camera.core.ProcessingImageReader: com.google.common.util.concurrent.ListenableFuture mUnderlyingCaptureProcessorCloseFuture>;

        $r9 = dynamicinvoke "apply" <androidx.arch.core.util.Function ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.camera.core.ProcessingImageReader: java.lang.Void lambda$getCloseFuture$1(java.lang.Void)>, methodtype: java.lang.Void __METHODTYPE__(java.lang.Void));

        $r10 = staticinvoke <androidx.camera.core.impl.utils.executor.CameraXExecutors: java.util.concurrent.Executor directExecutor()>();

        r12 = staticinvoke <androidx.camera.core.impl.utils.futures.Futures: com.google.common.util.concurrent.ListenableFuture transform(com.google.common.util.concurrent.ListenableFuture,androidx.arch.core.util.Function,java.util.concurrent.Executor)>($r8, $r9, $r10);

        goto label4;

     label2:
        $r4 = r0.<androidx.camera.core.ProcessingImageReader: com.google.common.util.concurrent.ListenableFuture mCloseFuture>;

        if $r4 != null goto label3;

        $r6 = dynamicinvoke "attachCompleter" <androidx.concurrent.futures.CallbackToFutureAdapter$Resolver (androidx.camera.core.ProcessingImageReader)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.concurrent.futures.CallbackToFutureAdapter$Completer), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.core.ProcessingImageReader: java.lang.Object lambda$getCloseFuture$2(androidx.concurrent.futures.CallbackToFutureAdapter$Completer)>, methodtype: java.lang.Object __METHODTYPE__(androidx.concurrent.futures.CallbackToFutureAdapter$Completer));

        $r7 = staticinvoke <androidx.concurrent.futures.CallbackToFutureAdapter: com.google.common.util.concurrent.ListenableFuture getFuture(androidx.concurrent.futures.CallbackToFutureAdapter$Resolver)>($r6);

        r0.<androidx.camera.core.ProcessingImageReader: com.google.common.util.concurrent.ListenableFuture mCloseFuture> = $r7;

     label3:
        $r5 = r0.<androidx.camera.core.ProcessingImageReader: com.google.common.util.concurrent.ListenableFuture mCloseFuture>;

        r12 = staticinvoke <androidx.camera.core.impl.utils.futures.Futures: com.google.common.util.concurrent.ListenableFuture nonCancellationPropagating(com.google.common.util.concurrent.ListenableFuture)>($r5);

     label4:
        exitmonitor r1;

     label5:
        goto label8;

     label6:
        $r11 := @caughtexception;

        r2 = $r11;

        exitmonitor r1;

     label7:
        throw r2;

     label8:
        return r12;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public int getHeight()
    {
        androidx.camera.core.ProcessingImageReader r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        androidx.camera.core.impl.ImageReaderProxy $r4;
        int $i0;

        r0 := @this: androidx.camera.core.ProcessingImageReader;

        $r3 = r0.<androidx.camera.core.ProcessingImageReader: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy mInputImageReader>;

        $i0 = interfaceinvoke $r4.<androidx.camera.core.impl.ImageReaderProxy: int getHeight()>();

        exitmonitor r1;

     label2:
        return $i0;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getWidth()
    {
        androidx.camera.core.ProcessingImageReader r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        androidx.camera.core.impl.ImageReaderProxy $r4;
        int $i0;

        r0 := @this: androidx.camera.core.ProcessingImageReader;

        $r3 = r0.<androidx.camera.core.ProcessingImageReader: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy mInputImageReader>;

        $i0 = interfaceinvoke $r4.<androidx.camera.core.impl.ImageReaderProxy: int getWidth()>();

        exitmonitor r1;

     label2:
        return $i0;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getImageFormat()
    {
        androidx.camera.core.ProcessingImageReader r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        androidx.camera.core.impl.ImageReaderProxy $r4;
        int $i0;

        r0 := @this: androidx.camera.core.ProcessingImageReader;

        $r3 = r0.<androidx.camera.core.ProcessingImageReader: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy mOutputImageReader>;

        $i0 = interfaceinvoke $r4.<androidx.camera.core.impl.ImageReaderProxy: int getImageFormat()>();

        exitmonitor r1;

     label2:
        return $i0;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getMaxImages()
    {
        androidx.camera.core.ProcessingImageReader r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        androidx.camera.core.impl.ImageReaderProxy $r4;
        int $i0;

        r0 := @this: androidx.camera.core.ProcessingImageReader;

        $r3 = r0.<androidx.camera.core.ProcessingImageReader: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy mInputImageReader>;

        $i0 = interfaceinvoke $r4.<androidx.camera.core.impl.ImageReaderProxy: int getMaxImages()>();

        exitmonitor r1;

     label2:
        return $i0;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.view.Surface getSurface()
    {
        androidx.camera.core.ProcessingImageReader r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        androidx.camera.core.impl.ImageReaderProxy $r4;
        android.view.Surface $r5;

        r0 := @this: androidx.camera.core.ProcessingImageReader;

        $r3 = r0.<androidx.camera.core.ProcessingImageReader: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy mInputImageReader>;

        $r5 = interfaceinvoke $r4.<androidx.camera.core.impl.ImageReaderProxy: android.view.Surface getSurface()>();

        exitmonitor r1;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setOnImageAvailableListener(androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener, java.util.concurrent.Executor)
    {
        androidx.camera.core.ProcessingImageReader r0;
        androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener r1, $r7, $r10, $r12;
        java.util.concurrent.Executor r2, $r9;
        java.lang.Object r3, $r5, $r6, $r8;
        java.lang.Throwable r4, $r14;
        androidx.camera.core.impl.ImageReaderProxy $r11, $r13;

        r0 := @this: androidx.camera.core.ProcessingImageReader;

        r1 := @parameter0: androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener;

        r2 := @parameter1: java.util.concurrent.Executor;

        $r5 = r0.<androidx.camera.core.ProcessingImageReader: java.lang.Object mLock>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        $r6 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r7 = (androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener) $r6;

        r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener mListener> = $r7;

        $r8 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r9 = (java.util.concurrent.Executor) $r8;

        r0.<androidx.camera.core.ProcessingImageReader: java.util.concurrent.Executor mExecutor> = $r9;

        $r11 = r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy mInputImageReader>;

        $r10 = r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener mTransformedListener>;

        interfaceinvoke $r11.<androidx.camera.core.impl.ImageReaderProxy: void setOnImageAvailableListener(androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener,java.util.concurrent.Executor)>($r10, r2);

        $r13 = r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy mOutputImageReader>;

        $r12 = r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener mImageProcessedListener>;

        interfaceinvoke $r13.<androidx.camera.core.impl.ImageReaderProxy: void setOnImageAvailableListener(androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener,java.util.concurrent.Executor)>($r12, r2);

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r14 := @caughtexception;

        r4 = $r14;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void clearOnImageAvailableListener()
    {
        androidx.camera.core.ProcessingImageReader r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r7;
        androidx.camera.core.impl.ImageReaderProxy $r4, $r5;
        boolean $z0;
        androidx.camera.core.SettableImageProxyBundle $r6;

        r0 := @this: androidx.camera.core.ProcessingImageReader;

        $r3 = r0.<androidx.camera.core.ProcessingImageReader: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener mListener> = null;

        r0.<androidx.camera.core.ProcessingImageReader: java.util.concurrent.Executor mExecutor> = null;

        $r4 = r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy mInputImageReader>;

        interfaceinvoke $r4.<androidx.camera.core.impl.ImageReaderProxy: void clearOnImageAvailableListener()>();

        $r5 = r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy mOutputImageReader>;

        interfaceinvoke $r5.<androidx.camera.core.impl.ImageReaderProxy: void clearOnImageAvailableListener()>();

        $z0 = r0.<androidx.camera.core.ProcessingImageReader: boolean mProcessing>;

        if $z0 != 0 goto label2;

        $r6 = r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.SettableImageProxyBundle mSettableImageProxyBundle>;

        virtualinvoke $r6.<androidx.camera.core.SettableImageProxyBundle: void close()>();

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void setCaptureBundle(androidx.camera.core.impl.CaptureBundle)
    {
        androidx.camera.core.ProcessingImageReader r0;
        androidx.camera.core.impl.CaptureBundle r1;
        java.lang.Object r2, $r6, $r16;
        java.util.Iterator r3;
        androidx.camera.core.impl.CaptureStage r4;
        java.lang.Throwable r5, $r20;
        boolean $z0, $z1;
        java.util.List $r7, $r11, $r13, $r14, $r15, $r17;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r8, $r10;
        androidx.camera.core.SettableImageProxyBundle $r9;
        androidx.camera.core.impl.ImageReaderProxy $r12;
        java.lang.Integer $r18;
        java.lang.IllegalArgumentException $r19;

        r0 := @this: androidx.camera.core.ProcessingImageReader;

        r1 := @parameter0: androidx.camera.core.impl.CaptureBundle;

        $r6 = r0.<androidx.camera.core.ProcessingImageReader: java.lang.Object mLock>;

        r2 = $r6;

        entermonitor $r6;

     label01:
        $z0 = r0.<androidx.camera.core.ProcessingImageReader: boolean mClosed>;

        if $z0 == 0 goto label03;

        exitmonitor r2;

     label02:
        return;

     label03:
        specialinvoke r0.<androidx.camera.core.ProcessingImageReader: void cancelSettableImageProxyBundleFutureList()>();

        $r7 = interfaceinvoke r1.<androidx.camera.core.impl.CaptureBundle: java.util.List getCaptureStages()>();

        if $r7 == null goto label07;

        $r12 = r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy mInputImageReader>;

        $i1 = interfaceinvoke $r12.<androidx.camera.core.impl.ImageReaderProxy: int getMaxImages()>();

        $r13 = interfaceinvoke r1.<androidx.camera.core.impl.CaptureBundle: java.util.List getCaptureStages()>();

        $i2 = interfaceinvoke $r13.<java.util.List: int size()>();

        if $i1 >= $i2 goto label04;

        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("CaptureBundle is larger than InputImageReader.");

        throw $r19;

     label04:
        $r14 = r0.<androidx.camera.core.ProcessingImageReader: java.util.List mCaptureIdList>;

        interfaceinvoke $r14.<java.util.List: void clear()>();

        $r15 = interfaceinvoke r1.<androidx.camera.core.impl.CaptureBundle: java.util.List getCaptureStages()>();

        r3 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r16 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.camera.core.impl.CaptureStage) $r16;

        if r4 == null goto label06;

        $r17 = r0.<androidx.camera.core.ProcessingImageReader: java.util.List mCaptureIdList>;

        $i3 = interfaceinvoke r4.<androidx.camera.core.impl.CaptureStage: int getId()>();

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r18);

     label06:
        goto label05;

     label07:
        $i0 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        r0.<androidx.camera.core.ProcessingImageReader: java.lang.String mTagBundleKey> = $r8;

        $r9 = new androidx.camera.core.SettableImageProxyBundle;

        $r11 = r0.<androidx.camera.core.ProcessingImageReader: java.util.List mCaptureIdList>;

        $r10 = r0.<androidx.camera.core.ProcessingImageReader: java.lang.String mTagBundleKey>;

        specialinvoke $r9.<androidx.camera.core.SettableImageProxyBundle: void <init>(java.util.List,java.lang.String)>($r11, $r10);

        r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.SettableImageProxyBundle mSettableImageProxyBundle> = $r9;

        virtualinvoke r0.<androidx.camera.core.ProcessingImageReader: void setupSettableImageProxyBundleCallbacks()>();

        exitmonitor r2;

     label08:
        goto label11;

     label09:
        $r20 := @caughtexception;

        r5 = $r20;

        exitmonitor r2;

     label10:
        throw r5;

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private void cancelSettableImageProxyBundleFutureList()
    {
        androidx.camera.core.ProcessingImageReader r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r7;
        com.google.common.util.concurrent.ListenableFuture $r4, $r6;
        boolean $z0;
        androidx.camera.core.SettableImageProxyBundle $r5;

        r0 := @this: androidx.camera.core.ProcessingImageReader;

        $r3 = r0.<androidx.camera.core.ProcessingImageReader: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.camera.core.ProcessingImageReader: com.google.common.util.concurrent.ListenableFuture mSettableImageProxyFutureList>;

        $z0 = interfaceinvoke $r4.<com.google.common.util.concurrent.ListenableFuture: boolean isDone()>();

        if $z0 != 0 goto label2;

        $r6 = r0.<androidx.camera.core.ProcessingImageReader: com.google.common.util.concurrent.ListenableFuture mSettableImageProxyFutureList>;

        interfaceinvoke $r6.<com.google.common.util.concurrent.ListenableFuture: boolean cancel(boolean)>(1);

     label2:
        $r5 = r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.SettableImageProxyBundle mSettableImageProxyBundle>;

        virtualinvoke $r5.<androidx.camera.core.SettableImageProxyBundle: void reset()>();

        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public java.lang.String getTagBundleKey()
    {
        androidx.camera.core.ProcessingImageReader r0;
        java.lang.String $r1;

        r0 := @this: androidx.camera.core.ProcessingImageReader;

        $r1 = r0.<androidx.camera.core.ProcessingImageReader: java.lang.String mTagBundleKey>;

        return $r1;
    }

    androidx.camera.core.impl.CameraCaptureCallback getCameraCaptureCallback()
    {
        androidx.camera.core.ProcessingImageReader r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r9;
        androidx.camera.core.impl.ImageReaderProxy $r4, $r6;
        boolean $z0;
        androidx.camera.core.ProcessingImageReader$4 $r5;
        androidx.camera.core.MetadataImageReader $r7;
        androidx.camera.core.impl.CameraCaptureCallback $r8;

        r0 := @this: androidx.camera.core.ProcessingImageReader;

        $r3 = r0.<androidx.camera.core.ProcessingImageReader: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy mInputImageReader>;

        $z0 = $r4 instanceof androidx.camera.core.MetadataImageReader;

        if $z0 == 0 goto label3;

        $r6 = r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy mInputImageReader>;

        $r7 = (androidx.camera.core.MetadataImageReader) $r6;

        $r8 = virtualinvoke $r7.<androidx.camera.core.MetadataImageReader: androidx.camera.core.impl.CameraCaptureCallback getCameraCaptureCallback()>();

        exitmonitor r1;

     label2:
        return $r8;

     label3:
        $r5 = new androidx.camera.core.ProcessingImageReader$4;

        specialinvoke $r5.<androidx.camera.core.ProcessingImageReader$4: void <init>(androidx.camera.core.ProcessingImageReader)>(r0);

        exitmonitor r1;

     label4:
        return $r5;

     label5:
        $r9 := @caughtexception;

        r2 = $r9;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setOnProcessingErrorCallback(java.util.concurrent.Executor, androidx.camera.core.ProcessingImageReader$OnProcessingErrorCallback)
    {
        androidx.camera.core.ProcessingImageReader r0;
        java.util.concurrent.Executor r1;
        androidx.camera.core.ProcessingImageReader$OnProcessingErrorCallback r2;
        java.lang.Object r3, $r4;

        r0 := @this: androidx.camera.core.ProcessingImageReader;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: androidx.camera.core.ProcessingImageReader$OnProcessingErrorCallback;

        $r4 = r0.<androidx.camera.core.ProcessingImageReader: java.lang.Object mLock>;

        r3 = $r4;

        entermonitor $r4;

        r0.<androidx.camera.core.ProcessingImageReader: java.util.concurrent.Executor mErrorCallbackExecutor> = r1;

        r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.ProcessingImageReader$OnProcessingErrorCallback mOnProcessingErrorCallback> = r2;

        exitmonitor r3;

        goto label1;

     label1:
        return;
    }

    void setupSettableImageProxyBundleCallbacks()
    {
        androidx.camera.core.ProcessingImageReader r0;
        java.util.ArrayList r1, $r4;
        java.util.Iterator r2;
        java.lang.Integer r3;
        java.util.List $r5;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r6, $r7, $r12;
        java.util.concurrent.Executor $r8;
        androidx.camera.core.impl.utils.futures.FutureCallback $r9;
        java.lang.Object $r10;
        androidx.camera.core.SettableImageProxyBundle $r11;
        int $i0;

        r0 := @this: androidx.camera.core.ProcessingImageReader;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = $r4;

        $r5 = r0.<androidx.camera.core.ProcessingImageReader: java.util.List mCaptureIdList>;

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.Integer) $r10;

        $r11 = r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.SettableImageProxyBundle mSettableImageProxyBundle>;

        $i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        $r12 = virtualinvoke $r11.<androidx.camera.core.SettableImageProxyBundle: com.google.common.util.concurrent.ListenableFuture getImageProxy(int)>($i0);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r12);

        goto label1;

     label2:
        $r6 = staticinvoke <androidx.camera.core.impl.utils.futures.Futures: com.google.common.util.concurrent.ListenableFuture allAsList(java.util.Collection)>(r1);

        r0.<androidx.camera.core.ProcessingImageReader: com.google.common.util.concurrent.ListenableFuture mSettableImageProxyFutureList> = $r6;

        $r7 = staticinvoke <androidx.camera.core.impl.utils.futures.Futures: com.google.common.util.concurrent.ListenableFuture allAsList(java.util.Collection)>(r1);

        $r9 = r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.utils.futures.FutureCallback mCaptureStageReadyCallback>;

        $r8 = r0.<androidx.camera.core.ProcessingImageReader: java.util.concurrent.Executor mPostProcessExecutor>;

        staticinvoke <androidx.camera.core.impl.utils.futures.Futures: void addCallback(com.google.common.util.concurrent.ListenableFuture,androidx.camera.core.impl.utils.futures.FutureCallback,java.util.concurrent.Executor)>($r7, $r9, $r8);

        return;
    }

    void imageIncoming(androidx.camera.core.impl.ImageReaderProxy)
    {
        androidx.camera.core.ProcessingImageReader r0;
        androidx.camera.core.impl.ImageReaderProxy r1;
        java.lang.Object r2, $r6, $r10, $r21, $r32;
        java.lang.Throwable r3, r5, $r17, $r28, $r39, r42;
        java.lang.Integer r4, r41, r43;
        boolean $z0, $z1, $z2, $z3;
        androidx.camera.core.ImageInfo $r7, $r18, $r29;
        androidx.camera.core.impl.TagBundle $r8, $r19, $r30;
        java.lang.String $r9, $r16, $r20, $r27, $r31, $r38;
        java.util.List $r11, $r22, $r33;
        androidx.camera.core.SettableImageProxyBundle $r12, $r23, $r34;
        java.lang.StringBuilder $r13, $r14, $r15, $r24, $r25, $r26, $r35, $r36, $r37;
        androidx.camera.core.ImageProxy r40;
        java.lang.NullPointerException r44, r45, r46, r47;

        r0 := @this: androidx.camera.core.ProcessingImageReader;

        r1 := @parameter0: androidx.camera.core.impl.ImageReaderProxy;

        $r6 = r0.<androidx.camera.core.ProcessingImageReader: java.lang.Object mLock>;

        r2 = $r6;

        entermonitor $r6;

     label01:
        $z0 = r0.<androidx.camera.core.ProcessingImageReader: boolean mClosed>;

        if $z0 == 0 goto label03;

        exitmonitor r2;

     label02:
        return;

     label03:
        r40 = interfaceinvoke r1.<androidx.camera.core.impl.ImageReaderProxy: androidx.camera.core.ImageProxy acquireNextImage()>();

     label04:
        if r40 == null goto label12;

        $r7 = interfaceinvoke r40.<androidx.camera.core.ImageProxy: androidx.camera.core.ImageInfo getImageInfo()>();

        $r8 = interfaceinvoke $r7.<androidx.camera.core.ImageInfo: androidx.camera.core.impl.TagBundle getTagBundle()>();

        $r9 = r0.<androidx.camera.core.ProcessingImageReader: java.lang.String mTagBundleKey>;

        $r10 = virtualinvoke $r8.<androidx.camera.core.impl.TagBundle: java.lang.Object getTag(java.lang.String)>($r9);

        r41 = (java.lang.Integer) $r10;

        $r11 = r0.<androidx.camera.core.ProcessingImageReader: java.util.List mCaptureIdList>;

        $z1 = interfaceinvoke $r11.<java.util.List: boolean contains(java.lang.Object)>(r41);

        if $z1 != 0 goto label05;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ImageProxyBundle does not contain this id: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r41);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.camera.core.Logger: void w(java.lang.String,java.lang.String)>("ProcessingImageReader", $r16);

        interfaceinvoke r40.<androidx.camera.core.ImageProxy: void close()>();

        goto label06;

     label05:
        $r12 = r0.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.SettableImageProxyBundle mSettableImageProxyBundle>;

        virtualinvoke $r12.<androidx.camera.core.SettableImageProxyBundle: void addImageProxy(androidx.camera.core.ImageProxy)>(r40);

     label06:
        goto label12;

     label07:
        $r28 := @caughtexception;

        r42 = $r28;

        staticinvoke <androidx.camera.core.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("ProcessingImageReader", "Failed to acquire latest image.", r42);

     label08:
        if null == null goto label12;

        r44 = new java.lang.NullPointerException;

        specialinvoke r44.<java.lang.NullPointerException: void <init>(java.lang.String)>("This statement would have triggered an Exception: $stack40 = interfaceinvoke image#1.<androidx.camera.core.ImageProxy: androidx.camera.core.ImageInfo getImageInfo()>()");

        throw r44;

     label09:
        $r17 := @caughtexception;

        r3 = $r17;

     label10:
        if null == null goto label11;

        r46 = new java.lang.NullPointerException;

        specialinvoke r46.<java.lang.NullPointerException: void <init>(java.lang.String)>("This statement would have triggered an Exception: $stack26 = interfaceinvoke image#1.<androidx.camera.core.ImageProxy: androidx.camera.core.ImageInfo getImageInfo()>()");

        throw r46;

     label11:
        throw r3;

     label12:
        exitmonitor r2;

     label13:
        goto label16;

     label14:
        $r39 := @caughtexception;

        r5 = $r39;

        exitmonitor r2;

     label15:
        throw r5;

     label16:
        return;

        catch java.lang.IllegalStateException from label03 to label04 with label07;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    private java.lang.Object lambda$getCloseFuture$2(androidx.concurrent.futures.CallbackToFutureAdapter$Completer) throws java.lang.Exception
    {
        androidx.camera.core.ProcessingImageReader r0;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r1;
        java.lang.Object r2, $r3;

        r0 := @this: androidx.camera.core.ProcessingImageReader;

        r1 := @parameter0: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        $r3 = r0.<androidx.camera.core.ProcessingImageReader: java.lang.Object mLock>;

        r2 = $r3;

        entermonitor $r3;

        r0.<androidx.camera.core.ProcessingImageReader: androidx.concurrent.futures.CallbackToFutureAdapter$Completer mCloseCompleter> = r1;

        exitmonitor r2;

        goto label1;

     label1:
        return "ProcessingImageReader-close";
    }

    private static java.lang.Void lambda$getCloseFuture$1(java.lang.Void)
    {
        java.lang.Void r0;

        r0 := @parameter0: java.lang.Void;

        return null;
    }

    private void lambda$closeAndCompleteFutureIfNecessary$0(androidx.concurrent.futures.CallbackToFutureAdapter$Completer)
    {
        androidx.camera.core.ProcessingImageReader r0;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r1;

        r0 := @this: androidx.camera.core.ProcessingImageReader;

        r1 := @parameter0: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        specialinvoke r0.<androidx.camera.core.ProcessingImageReader: void cancelSettableImageProxyBundleFutureList()>();

        if r1 == null goto label1;

        virtualinvoke r1.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean set(java.lang.Object)>(null);

     label1:
        return;
    }

androidx.camera.core.ProcessingImageReader$1
<androidx.camera.core.ProcessingImageReader$1: androidx.camera.core.ProcessingImageReader this$0>
    void <init>(androidx.camera.core.ProcessingImageReader)
    {
        androidx.camera.core.ProcessingImageReader$1 r0;
        androidx.camera.core.ProcessingImageReader r1;

        r0 := @this: androidx.camera.core.ProcessingImageReader$1;

        r1 := @parameter0: androidx.camera.core.ProcessingImageReader;

        r0.<androidx.camera.core.ProcessingImageReader$1: androidx.camera.core.ProcessingImageReader this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onImageAvailable(androidx.camera.core.impl.ImageReaderProxy)
    {
        androidx.camera.core.ProcessingImageReader$1 r0;
        androidx.camera.core.impl.ImageReaderProxy r1;
        androidx.camera.core.ProcessingImageReader $r2;

        r0 := @this: androidx.camera.core.ProcessingImageReader$1;

        r1 := @parameter0: androidx.camera.core.impl.ImageReaderProxy;

        $r2 = r0.<androidx.camera.core.ProcessingImageReader$1: androidx.camera.core.ProcessingImageReader this$0>;

        virtualinvoke $r2.<androidx.camera.core.ProcessingImageReader: void imageIncoming(androidx.camera.core.impl.ImageReaderProxy)>(r1);

        return;
    }

androidx.camera.core.ProcessingImageReader$2
<androidx.camera.core.ProcessingImageReader$2: androidx.camera.core.ProcessingImageReader this$0>
    void <init>(androidx.camera.core.ProcessingImageReader)
    {
        androidx.camera.core.ProcessingImageReader$2 r0;
        androidx.camera.core.ProcessingImageReader r1;

        r0 := @this: androidx.camera.core.ProcessingImageReader$2;

        r1 := @parameter0: androidx.camera.core.ProcessingImageReader;

        r0.<androidx.camera.core.ProcessingImageReader$2: androidx.camera.core.ProcessingImageReader this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onImageAvailable(androidx.camera.core.impl.ImageReaderProxy)
    {
        androidx.camera.core.ProcessingImageReader$2 r0;
        androidx.camera.core.impl.ImageReaderProxy r1;
        androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener r2;
        java.util.concurrent.Executor r3;
        java.lang.Object r4, $r7;
        java.lang.Throwable r5, $r15;
        androidx.camera.core.ProcessingImageReader $r6, $r8, $r9, $r10, $r12, $r13;
        androidx.camera.core.SettableImageProxyBundle $r11;
        java.lang.Runnable $r14;

        r0 := @this: androidx.camera.core.ProcessingImageReader$2;

        r1 := @parameter0: androidx.camera.core.impl.ImageReaderProxy;

        $r6 = r0.<androidx.camera.core.ProcessingImageReader$2: androidx.camera.core.ProcessingImageReader this$0>;

        $r7 = $r6.<androidx.camera.core.ProcessingImageReader: java.lang.Object mLock>;

        r4 = $r7;

        entermonitor $r7;

     label1:
        $r8 = r0.<androidx.camera.core.ProcessingImageReader$2: androidx.camera.core.ProcessingImageReader this$0>;

        r2 = $r8.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener mListener>;

        $r9 = r0.<androidx.camera.core.ProcessingImageReader$2: androidx.camera.core.ProcessingImageReader this$0>;

        r3 = $r9.<androidx.camera.core.ProcessingImageReader: java.util.concurrent.Executor mExecutor>;

        $r10 = r0.<androidx.camera.core.ProcessingImageReader$2: androidx.camera.core.ProcessingImageReader this$0>;

        $r11 = $r10.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.SettableImageProxyBundle mSettableImageProxyBundle>;

        virtualinvoke $r11.<androidx.camera.core.SettableImageProxyBundle: void reset()>();

        $r12 = r0.<androidx.camera.core.ProcessingImageReader$2: androidx.camera.core.ProcessingImageReader this$0>;

        virtualinvoke $r12.<androidx.camera.core.ProcessingImageReader: void setupSettableImageProxyBundleCallbacks()>();

        exitmonitor r4;

     label2:
        goto label5;

     label3:
        $r15 := @caughtexception;

        r5 = $r15;

        exitmonitor r4;

     label4:
        throw r5;

     label5:
        if r2 == null goto label7;

        if r3 == null goto label6;

        $r14 = dynamicinvoke "run" <java.lang.Runnable (androidx.camera.core.ProcessingImageReader$2,androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener)>(r0, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.core.ProcessingImageReader$2: void lambda$onImageAvailable$0(androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener)>, methodtype: void __METHODTYPE__());

        interfaceinvoke r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r14);

        goto label7;

     label6:
        $r13 = r0.<androidx.camera.core.ProcessingImageReader$2: androidx.camera.core.ProcessingImageReader this$0>;

        interfaceinvoke r2.<androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener: void onImageAvailable(androidx.camera.core.impl.ImageReaderProxy)>($r13);

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void lambda$onImageAvailable$0(androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener)
    {
        androidx.camera.core.ProcessingImageReader$2 r0;
        androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener r1;
        androidx.camera.core.ProcessingImageReader $r2;

        r0 := @this: androidx.camera.core.ProcessingImageReader$2;

        r1 := @parameter0: androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener;

        $r2 = r0.<androidx.camera.core.ProcessingImageReader$2: androidx.camera.core.ProcessingImageReader this$0>;

        interfaceinvoke r1.<androidx.camera.core.impl.ImageReaderProxy$OnImageAvailableListener: void onImageAvailable(androidx.camera.core.impl.ImageReaderProxy)>($r2);

        return;
    }

androidx.camera.core.ProcessingImageReader$3
<androidx.camera.core.ProcessingImageReader$3: androidx.camera.core.ProcessingImageReader this$0>
    void <init>(androidx.camera.core.ProcessingImageReader)
    {
        androidx.camera.core.ProcessingImageReader$3 r0;
        androidx.camera.core.ProcessingImageReader r1;

        r0 := @this: androidx.camera.core.ProcessingImageReader$3;

        r1 := @parameter0: androidx.camera.core.ProcessingImageReader;

        r0.<androidx.camera.core.ProcessingImageReader$3: androidx.camera.core.ProcessingImageReader this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onSuccess(java.util.List)
    {
        androidx.camera.core.ProcessingImageReader$3 r0;
        java.util.List r1;
        androidx.camera.core.SettableImageProxyBundle r2, $r25;
        androidx.camera.core.ProcessingImageReader$OnProcessingErrorCallback r3;
        java.util.concurrent.Executor r4;
        java.lang.Object r5, $r8, $r17, $r23, r27, r29;
        java.lang.Throwable r6, $r20, $r21, r28;
        androidx.camera.core.ProcessingImageReader $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r16, $r18, $r19, $r22, $r24;
        boolean $z0;
        androidx.camera.core.impl.CaptureProcessor $r15;
        java.lang.Runnable $r26;

        r0 := @this: androidx.camera.core.ProcessingImageReader$3;

        r1 := @parameter0: java.util.List;

        $r7 = r0.<androidx.camera.core.ProcessingImageReader$3: androidx.camera.core.ProcessingImageReader this$0>;

        $r8 = $r7.<androidx.camera.core.ProcessingImageReader: java.lang.Object mLock>;

        r27 = $r8;

        entermonitor $r8;

        $r9 = r0.<androidx.camera.core.ProcessingImageReader$3: androidx.camera.core.ProcessingImageReader this$0>;

        $z0 = $r9.<androidx.camera.core.ProcessingImageReader: boolean mClosed>;

        if $z0 == 0 goto label01;

        exitmonitor r27;

        return;

     label01:
        $r10 = r0.<androidx.camera.core.ProcessingImageReader$3: androidx.camera.core.ProcessingImageReader this$0>;

        $r10.<androidx.camera.core.ProcessingImageReader: boolean mProcessing> = 1;

        $r11 = r0.<androidx.camera.core.ProcessingImageReader$3: androidx.camera.core.ProcessingImageReader this$0>;

        r2 = $r11.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.SettableImageProxyBundle mSettableImageProxyBundle>;

        $r12 = r0.<androidx.camera.core.ProcessingImageReader$3: androidx.camera.core.ProcessingImageReader this$0>;

        r3 = $r12.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.ProcessingImageReader$OnProcessingErrorCallback mOnProcessingErrorCallback>;

        $r13 = r0.<androidx.camera.core.ProcessingImageReader$3: androidx.camera.core.ProcessingImageReader this$0>;

        r4 = $r13.<androidx.camera.core.ProcessingImageReader: java.util.concurrent.Executor mErrorCallbackExecutor>;

        exitmonitor r27;

        goto label02;

     label02:
        $r14 = r0.<androidx.camera.core.ProcessingImageReader$3: androidx.camera.core.ProcessingImageReader this$0>;

        $r15 = $r14.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.impl.CaptureProcessor mCaptureProcessor>;

        interfaceinvoke $r15.<androidx.camera.core.impl.CaptureProcessor: void process(androidx.camera.core.impl.ImageProxyBundle)>(r2);

     label03:
        goto label10;

     label04:
        $r21 := @caughtexception;

        r28 = $r21;

        $r22 = r0.<androidx.camera.core.ProcessingImageReader$3: androidx.camera.core.ProcessingImageReader this$0>;

        $r23 = $r22.<androidx.camera.core.ProcessingImageReader: java.lang.Object mLock>;

        r5 = $r23;

        entermonitor $r23;

     label05:
        $r24 = r0.<androidx.camera.core.ProcessingImageReader$3: androidx.camera.core.ProcessingImageReader this$0>;

        $r25 = $r24.<androidx.camera.core.ProcessingImageReader: androidx.camera.core.SettableImageProxyBundle mSettableImageProxyBundle>;

        virtualinvoke $r25.<androidx.camera.core.SettableImageProxyBundle: void reset()>();

        if r3 == null goto label06;

        if r4 == null goto label06;

        $r26 = dynamicinvoke "run" <java.lang.Runnable (androidx.camera.core.ProcessingImageReader$OnProcessingErrorCallback,java.lang.Exception)>(r3, r28) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.camera.core.ProcessingImageReader$3: void lambda$onSuccess$0(androidx.camera.core.ProcessingImageReader$OnProcessingErrorCallback,java.lang.Exception)>, methodtype: void __METHODTYPE__());

        interfaceinvoke r4.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r26);

     label06:
        exitmonitor r5;

     label07:
        goto label10;

     label08:
        $r20 := @caughtexception;

        r6 = $r20;

        exitmonitor r5;

     label09:
        throw r6;

     label10:
        $r16 = r0.<androidx.camera.core.ProcessingImageReader$3: androidx.camera.core.ProcessingImageReader this$0>;

        $r17 = $r16.<androidx.camera.core.ProcessingImageReader: java.lang.Object mLock>;

        r29 = $r17;

        entermonitor $r17;

        $r18 = r0.<androidx.camera.core.ProcessingImageReader$3: androidx.camera.core.ProcessingImageReader this$0>;

        $r18.<androidx.camera.core.ProcessingImageReader: boolean mProcessing> = 0;

        exitmonitor r29;

        goto label11;

     label11:
        $r19 = r0.<androidx.camera.core.ProcessingImageReader$3: androidx.camera.core.ProcessingImageReader this$0>;

        virtualinvoke $r19.<androidx.camera.core.ProcessingImageReader: void closeAndCompleteFutureIfNecessary()>();

        return;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.lang.Throwable from label05 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void onFailure(java.lang.Throwable)
    {
        androidx.camera.core.ProcessingImageReader$3 r0;
        java.lang.Throwable r1;

        r0 := @this: androidx.camera.core.ProcessingImageReader$3;

        r1 := @parameter0: java.lang.Throwable;

        return;
    }

    public volatile void onSuccess(java.lang.Object)
    {
        androidx.camera.core.ProcessingImageReader$3 r0;
        java.lang.Object r1;
        java.util.List $r2;

        r0 := @this: androidx.camera.core.ProcessingImageReader$3;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.List) r1;

        virtualinvoke r0.<androidx.camera.core.ProcessingImageReader$3: void onSuccess(java.util.List)>($r2);

        return;
    }

    private static void lambda$onSuccess$0(androidx.camera.core.ProcessingImageReader$OnProcessingErrorCallback, java.lang.Exception)
    {
        androidx.camera.core.ProcessingImageReader$OnProcessingErrorCallback r0;
        java.lang.Exception r1;
        java.lang.String $r2;
        java.lang.Throwable $r3;

        r0 := @parameter0: androidx.camera.core.ProcessingImageReader$OnProcessingErrorCallback;

        r1 := @parameter1: java.lang.Exception;

        $r2 = virtualinvoke r1.<java.lang.Exception: java.lang.String getMessage()>();

        $r3 = virtualinvoke r1.<java.lang.Exception: java.lang.Throwable getCause()>();

        interfaceinvoke r0.<androidx.camera.core.ProcessingImageReader$OnProcessingErrorCallback: void notifyProcessingError(java.lang.String,java.lang.Throwable)>($r2, $r3);

        return;
    }

androidx.camera.core.ProcessingImageReader$4
<androidx.camera.core.ProcessingImageReader$4: androidx.camera.core.ProcessingImageReader this$0>
    void <init>(androidx.camera.core.ProcessingImageReader)
    {
        androidx.camera.core.ProcessingImageReader$4 r0;
        androidx.camera.core.ProcessingImageReader r1;

        r0 := @this: androidx.camera.core.ProcessingImageReader$4;

        r1 := @parameter0: androidx.camera.core.ProcessingImageReader;

        r0.<androidx.camera.core.ProcessingImageReader$4: androidx.camera.core.ProcessingImageReader this$0> = r1;

        specialinvoke r0.<androidx.camera.core.impl.CameraCaptureCallback: void <init>()>();

        return;
    }

androidx.camera.core.ProcessingImageReader$Builder
<androidx.camera.core.ProcessingImageReader$Builder: androidx.camera.core.impl.ImageReaderProxy mInputImageReader>
<androidx.camera.core.ProcessingImageReader$Builder: androidx.camera.core.impl.CaptureBundle mCaptureBundle>
<androidx.camera.core.ProcessingImageReader$Builder: androidx.camera.core.impl.CaptureProcessor mCaptureProcessor>
<androidx.camera.core.ProcessingImageReader$Builder: int mOutputFormat>
<androidx.camera.core.ProcessingImageReader$Builder: java.util.concurrent.Executor mPostProcessExecutor>
    void <init>(androidx.camera.core.impl.ImageReaderProxy, androidx.camera.core.impl.CaptureBundle, androidx.camera.core.impl.CaptureProcessor)
    {
        androidx.camera.core.ProcessingImageReader$Builder r0;
        androidx.camera.core.impl.ImageReaderProxy r1;
        androidx.camera.core.impl.CaptureBundle r2;
        androidx.camera.core.impl.CaptureProcessor r3;
        java.util.concurrent.ExecutorService $r4;
        int $i0;
        java.util.concurrent.Executor r5;

        r0 := @this: androidx.camera.core.ProcessingImageReader$Builder;

        r1 := @parameter0: androidx.camera.core.impl.ImageReaderProxy;

        r2 := @parameter1: androidx.camera.core.impl.CaptureBundle;

        r3 := @parameter2: androidx.camera.core.impl.CaptureProcessor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor()>();

        r5 = (java.util.concurrent.Executor) $r4;

        r0.<androidx.camera.core.ProcessingImageReader$Builder: java.util.concurrent.Executor mPostProcessExecutor> = r5;

        r0.<androidx.camera.core.ProcessingImageReader$Builder: androidx.camera.core.impl.ImageReaderProxy mInputImageReader> = r1;

        r0.<androidx.camera.core.ProcessingImageReader$Builder: androidx.camera.core.impl.CaptureBundle mCaptureBundle> = r2;

        r0.<androidx.camera.core.ProcessingImageReader$Builder: androidx.camera.core.impl.CaptureProcessor mCaptureProcessor> = r3;

        $i0 = interfaceinvoke r1.<androidx.camera.core.impl.ImageReaderProxy: int getImageFormat()>();

        r0.<androidx.camera.core.ProcessingImageReader$Builder: int mOutputFormat> = $i0;

        return;
    }

    void <init>(int, int, int, int, androidx.camera.core.impl.CaptureBundle, androidx.camera.core.impl.CaptureProcessor)
    {
        androidx.camera.core.ProcessingImageReader$Builder r0;
        int i0, i1, i2, i3;
        androidx.camera.core.impl.CaptureBundle r1;
        androidx.camera.core.impl.CaptureProcessor r2;
        androidx.camera.core.MetadataImageReader $r3;

        r0 := @this: androidx.camera.core.ProcessingImageReader$Builder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: androidx.camera.core.impl.CaptureBundle;

        r2 := @parameter5: androidx.camera.core.impl.CaptureProcessor;

        $r3 = new androidx.camera.core.MetadataImageReader;

        specialinvoke $r3.<androidx.camera.core.MetadataImageReader: void <init>(int,int,int,int)>(i0, i1, i2, i3);

        specialinvoke r0.<androidx.camera.core.ProcessingImageReader$Builder: void <init>(androidx.camera.core.impl.ImageReaderProxy,androidx.camera.core.impl.CaptureBundle,androidx.camera.core.impl.CaptureProcessor)>($r3, r1, r2);

        return;
    }

    androidx.camera.core.ProcessingImageReader$Builder setPostProcessExecutor(java.util.concurrent.Executor)
    {
        androidx.camera.core.ProcessingImageReader$Builder r0;
        java.util.concurrent.Executor r1;

        r0 := @this: androidx.camera.core.ProcessingImageReader$Builder;

        r1 := @parameter0: java.util.concurrent.Executor;

        r0.<androidx.camera.core.ProcessingImageReader$Builder: java.util.concurrent.Executor mPostProcessExecutor> = r1;

        return r0;
    }

    androidx.camera.core.ProcessingImageReader$Builder setOutputFormat(int)
    {
        androidx.camera.core.ProcessingImageReader$Builder r0;
        int i0;

        r0 := @this: androidx.camera.core.ProcessingImageReader$Builder;

        i0 := @parameter0: int;

        r0.<androidx.camera.core.ProcessingImageReader$Builder: int mOutputFormat> = i0;

        return r0;
    }

    androidx.camera.core.ProcessingImageReader build()
    {
        androidx.camera.core.ProcessingImageReader$Builder r0;
        androidx.camera.core.ProcessingImageReader $r1;

        r0 := @this: androidx.camera.core.ProcessingImageReader$Builder;

        $r1 = new androidx.camera.core.ProcessingImageReader;

        specialinvoke $r1.<androidx.camera.core.ProcessingImageReader: void <init>(androidx.camera.core.ProcessingImageReader$Builder)>(r0);

        return $r1;
    }

androidx.camera.core.ProcessingImageReader$OnProcessingErrorCallback
<androidx.camera.core.ProcessingImageReader$OnProcessingErrorCallback: void notifyProcessingError(java.lang.String,java.lang.Throwable)>
