androidx.media3.extractor.mp4.PsshAtomUtil
<androidx.media3.extractor.mp4.PsshAtomUtil: java.lang.String TAG>
    private void <init>()
    {
        androidx.media3.extractor.mp4.PsshAtomUtil r0;

        r0 := @this: androidx.media3.extractor.mp4.PsshAtomUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] buildPsshAtom(java.util.UUID, byte[])
    {
        java.util.UUID r0;
        byte[] r1, $r2;

        r0 := @parameter0: java.util.UUID;

        r1 := @parameter1: byte[];

        $r2 = staticinvoke <androidx.media3.extractor.mp4.PsshAtomUtil: byte[] buildPsshAtom(java.util.UUID,java.util.UUID[],byte[])>(r0, null, r1);

        return $r2;
    }

    public static byte[] buildPsshAtom(java.util.UUID, java.util.UUID[], byte[])
    {
        java.util.UUID r0, r5;
        java.util.UUID[] r1, r4;
        byte[] r2, $r17;
        int i0, i1, $i4, $i5, $i6, $i9, $i10, $i11, $i12, i13, $i14, i15;
        java.nio.ByteBuffer r3;
        long $l2, $l3, $l7, $l8;

        r0 := @parameter0: java.util.UUID;

        r1 := @parameter1: java.util.UUID[];

        r2 := @parameter2: byte[];

        if r2 == null goto label1;

        $i12 = lengthof r2;

        goto label2;

     label1:
        $i12 = 0;

     label2:
        i0 = $i12;

        i13 = 32 + i0;

        if r1 == null goto label3;

        $i9 = lengthof r1;

        $i10 = $i9 * 16;

        $i11 = 4 + $i10;

        i13 = i13 + $i11;

     label3:
        r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(i13);

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(i13);

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(1886614376);

        if r1 == null goto label4;

        $i14 = 16777216;

        goto label5;

     label4:
        $i14 = 0;

     label5:
        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i14);

        $l2 = virtualinvoke r0.<java.util.UUID: long getMostSignificantBits()>();

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.ByteBuffer putLong(long)>($l2);

        $l3 = virtualinvoke r0.<java.util.UUID: long getLeastSignificantBits()>();

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.ByteBuffer putLong(long)>($l3);

        if r1 == null goto label7;

        $i6 = lengthof r1;

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i6);

        r4 = r1;

        i1 = lengthof r4;

        i15 = 0;

     label6:
        if i15 >= i1 goto label7;

        r5 = r4[i15];

        $l7 = virtualinvoke r5.<java.util.UUID: long getMostSignificantBits()>();

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.ByteBuffer putLong(long)>($l7);

        $l8 = virtualinvoke r5.<java.util.UUID: long getLeastSignificantBits()>();

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.ByteBuffer putLong(long)>($l8);

        i15 = i15 + 1;

        goto label6;

     label7:
        if r2 == null goto label8;

        $i4 = lengthof r2;

        if $i4 == 0 goto label8;

        $i5 = lengthof r2;

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i5);

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>(r2);

     label8:
        $r17 = virtualinvoke r3.<java.nio.ByteBuffer: byte[] array()>();

        return $r17;
    }

    public static boolean isPsshAtom(byte[])
    {
        byte[] r0;
        androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom $r1;
        boolean $z0;

        r0 := @parameter0: byte[];

        $r1 = staticinvoke <androidx.media3.extractor.mp4.PsshAtomUtil: androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom parsePsshAtom(byte[])>(r0);

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static java.util.UUID parseUuid(byte[])
    {
        byte[] r0;
        androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom r1;
        java.util.UUID $r2;

        r0 := @parameter0: byte[];

        r1 = staticinvoke <androidx.media3.extractor.mp4.PsshAtomUtil: androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom parsePsshAtom(byte[])>(r0);

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = staticinvoke <androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom: java.util.UUID access$000(androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom)>(r1);

        return $r2;
    }

    public static int parseVersion(byte[])
    {
        byte[] r0;
        androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom r1;
        int $i0;

        r0 := @parameter0: byte[];

        r1 = staticinvoke <androidx.media3.extractor.mp4.PsshAtomUtil: androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom parsePsshAtom(byte[])>(r0);

        if r1 != null goto label1;

        return -1;

     label1:
        $i0 = staticinvoke <androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom: int access$100(androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom)>(r1);

        return $i0;
    }

    public static byte[] parseSchemeSpecificData(byte[], java.util.UUID)
    {
        byte[] r0, $r4;
        java.util.UUID r1, $r3, $r9;
        androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom r2;
        boolean $z0;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r10, $r11;
        java.lang.String $r12;

        r0 := @parameter0: byte[];

        r1 := @parameter1: java.util.UUID;

        r2 = staticinvoke <androidx.media3.extractor.mp4.PsshAtomUtil: androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom parsePsshAtom(byte[])>(r0);

        if r2 != null goto label1;

        return null;

     label1:
        $r3 = staticinvoke <androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom: java.util.UUID access$000(androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom)>(r2);

        $z0 = virtualinvoke r1.<java.util.UUID: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UUID mismatch. Expected: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", got: ");

        $r9 = staticinvoke <androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom: java.util.UUID access$000(androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom)>(r2);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("PsshAtomUtil", $r12);

        return null;

     label2:
        $r4 = staticinvoke <androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom: byte[] access$200(androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom)>(r2);

        return $r4;
    }

    private static androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom parsePsshAtom(byte[])
    {
        byte[] r0, r3;
        androidx.media3.common.util.ParsableByteArray r1, $r4;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i9, $i10, i11, i12;
        java.util.UUID r2, $r5;
        long $l7, $l8;
        androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @parameter0: byte[];

        $r4 = new androidx.media3.common.util.ParsableByteArray;

        specialinvoke $r4.<androidx.media3.common.util.ParsableByteArray: void <init>(byte[])>(r0);

        r1 = $r4;

        $i3 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int limit()>();

        if $i3 >= 32 goto label1;

        return null;

     label1:
        virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: void setPosition(int)>(0);

        i0 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int readInt()>();

        $i4 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int bytesLeft()>();

        $i5 = $i4 + 4;

        if i0 == $i5 goto label2;

        return null;

     label2:
        i1 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int readInt()>();

        if i1 == 1886614376 goto label3;

        return null;

     label3:
        $i6 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int readInt()>();

        i2 = staticinvoke <androidx.media3.extractor.mp4.Atom: int parseFullAtomVersion(int)>($i6);

        if i2 <= 1 goto label4;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported pssh version: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("PsshAtomUtil", $r10);

        return null;

     label4:
        $r5 = new java.util.UUID;

        $l7 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: long readLong()>();

        $l8 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: long readLong()>();

        specialinvoke $r5.<java.util.UUID: void <init>(long,long)>($l7, $l8);

        r2 = $r5;

        if i2 != 1 goto label5;

        i11 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int readUnsignedIntToInt()>();

        $i10 = 16 * i11;

        virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: void skipBytes(int)>($i10);

     label5:
        i12 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int readUnsignedIntToInt()>();

        $i9 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int bytesLeft()>();

        if i12 == $i9 goto label6;

        return null;

     label6:
        r3 = newarray (byte)[i12];

        virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: void readBytes(byte[],int,int)>(r3, 0, i12);

        $r6 = new androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom;

        specialinvoke $r6.<androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom: void <init>(java.util.UUID,int,byte[])>(r2, i2, r3);

        return $r6;
    }

androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom
<androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom: java.util.UUID uuid>
<androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom: int version>
<androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom: byte[] schemeData>
    public void <init>(java.util.UUID, int, byte[])
    {
        androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom r0;
        java.util.UUID r1;
        int i0;
        byte[] r2;

        r0 := @this: androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom;

        r1 := @parameter0: java.util.UUID;

        i0 := @parameter1: int;

        r2 := @parameter2: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom: java.util.UUID uuid> = r1;

        r0.<androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom: int version> = i0;

        r0.<androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom: byte[] schemeData> = r2;

        return;
    }

    static java.util.UUID access$000(androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom)
    {
        androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom r0;
        java.util.UUID $r1;

        r0 := @parameter0: androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom;

        $r1 = r0.<androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom: java.util.UUID uuid>;

        return $r1;
    }

    static int access$100(androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom)
    {
        androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom r0;
        int $i0;

        r0 := @parameter0: androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom;

        $i0 = r0.<androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom: int version>;

        return $i0;
    }

    static byte[] access$200(androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom)
    {
        androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom r0;
        byte[] $r1;

        r0 := @parameter0: androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom;

        $r1 = r0.<androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom: byte[] schemeData>;

        return $r1;
    }

