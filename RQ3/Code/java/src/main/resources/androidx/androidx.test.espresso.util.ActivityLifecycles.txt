androidx.test.espresso.util.ActivityLifecycles
    private void <init>()
    {
        androidx.test.espresso.util.ActivityLifecycles r0;

        r0 := @this: androidx.test.espresso.util.ActivityLifecycles;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean hasForegroundActivities(androidx.test.runner.lifecycle.ActivityLifecycleMonitor)
    {
        androidx.test.runner.lifecycle.Stage $r0;
        java.util.Collection $r1;
        boolean $z0, z1;
        androidx.test.runner.lifecycle.ActivityLifecycleMonitor r2;

        r2 := @parameter0: androidx.test.runner.lifecycle.ActivityLifecycleMonitor;

        $r0 = <androidx.test.runner.lifecycle.Stage: androidx.test.runner.lifecycle.Stage RESUMED>;

        $r1 = interfaceinvoke r2.<androidx.test.runner.lifecycle.ActivityLifecycleMonitor: java.util.Collection getActivitiesInStage(androidx.test.runner.lifecycle.Stage)>($r0);

        $z0 = interfaceinvoke $r1.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        z1 = 1;

     label1:
        return z1;

     label2:
        z1 = 0;

        goto label1;
    }

    public static boolean hasTransitioningActivities(androidx.test.runner.lifecycle.ActivityLifecycleMonitor)
    {
        androidx.test.runner.lifecycle.Stage $r0, $r2, $r4;
        java.util.Collection $r1, $r3, $r5;
        boolean $z0, $z1, $z2, z3;
        androidx.test.runner.lifecycle.ActivityLifecycleMonitor r6;

        r6 := @parameter0: androidx.test.runner.lifecycle.ActivityLifecycleMonitor;

        $r0 = <androidx.test.runner.lifecycle.Stage: androidx.test.runner.lifecycle.Stage RESTARTED>;

        $r1 = interfaceinvoke r6.<androidx.test.runner.lifecycle.ActivityLifecycleMonitor: java.util.Collection getActivitiesInStage(androidx.test.runner.lifecycle.Stage)>($r0);

        $z0 = interfaceinvoke $r1.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = <androidx.test.runner.lifecycle.Stage: androidx.test.runner.lifecycle.Stage STARTED>;

        $r3 = interfaceinvoke r6.<androidx.test.runner.lifecycle.ActivityLifecycleMonitor: java.util.Collection getActivitiesInStage(androidx.test.runner.lifecycle.Stage)>($r2);

        $z1 = interfaceinvoke $r3.<java.util.Collection: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        $r4 = <androidx.test.runner.lifecycle.Stage: androidx.test.runner.lifecycle.Stage PAUSED>;

        $r5 = interfaceinvoke r6.<androidx.test.runner.lifecycle.ActivityLifecycleMonitor: java.util.Collection getActivitiesInStage(androidx.test.runner.lifecycle.Stage)>($r4);

        $z2 = interfaceinvoke $r5.<java.util.Collection: boolean isEmpty()>();

        if $z2 != 0 goto label3;

     label1:
        z3 = 1;

     label2:
        return z3;

     label3:
        z3 = 0;

        goto label2;
    }

    public static boolean hasVisibleActivities(androidx.test.runner.lifecycle.ActivityLifecycleMonitor)
    {
        boolean $z0, $z1, z2;
        androidx.test.runner.lifecycle.ActivityLifecycleMonitor r0;

        r0 := @parameter0: androidx.test.runner.lifecycle.ActivityLifecycleMonitor;

        $z0 = staticinvoke <androidx.test.espresso.util.ActivityLifecycles: boolean hasForegroundActivities(androidx.test.runner.lifecycle.ActivityLifecycleMonitor)>(r0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <androidx.test.espresso.util.ActivityLifecycles: boolean hasTransitioningActivities(androidx.test.runner.lifecycle.ActivityLifecycleMonitor)>(r0);

        if $z1 == 0 goto label3;

     label1:
        z2 = 1;

     label2:
        return z2;

     label3:
        z2 = 0;

        goto label2;
    }

