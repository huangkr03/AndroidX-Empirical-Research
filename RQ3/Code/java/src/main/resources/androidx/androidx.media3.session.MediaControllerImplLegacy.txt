androidx.media3.session.MediaControllerImplLegacy
<androidx.media3.session.MediaControllerImplLegacy: java.lang.String TAG>
<androidx.media3.session.MediaControllerImplLegacy: long AGGREGATES_CALLBACKS_WITHIN_TIMEOUT_MS>
<androidx.media3.session.MediaControllerImplLegacy: int VOLUME_FLAGS>
<androidx.media3.session.MediaControllerImplLegacy: android.content.Context context>
<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaController instance>
<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.SessionToken token>
<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.common.util.ListenerSet listeners>
<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback controllerCompatCallback>
<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.BitmapLoader bitmapLoader>
<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>
<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.MediaBrowserCompat browserCompat>
<androidx.media3.session.MediaControllerImplLegacy: boolean released>
<androidx.media3.session.MediaControllerImplLegacy: boolean connected>
<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo legacyPlayerInfo>
<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo pendingLegacyPlayerInfo>
<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>
    public void <init>(android.content.Context, androidx.media3.session.MediaController, androidx.media3.session.SessionToken, android.os.Looper, androidx.media3.session.BitmapLoader)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        android.content.Context r1;
        androidx.media3.session.MediaController r2;
        androidx.media3.session.SessionToken r3;
        android.os.Looper r4;
        androidx.media3.session.BitmapLoader r5;
        androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo $r6, $r7;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo $r8;
        androidx.media3.common.util.ListenerSet $r9;
        androidx.media3.common.util.Clock $r10;
        androidx.media3.common.util.ListenerSet$IterationFinishedEvent $r11;
        androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback $r12;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media3.session.MediaController;

        r3 := @parameter2: androidx.media3.session.SessionToken;

        r4 := @parameter3: android.os.Looper;

        r5 := @parameter4: androidx.media3.session.BitmapLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = new androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo;

        specialinvoke $r6.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: void <init>()>();

        r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo legacyPlayerInfo> = $r6;

        $r7 = new androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo;

        specialinvoke $r7.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: void <init>()>();

        r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo pendingLegacyPlayerInfo> = $r7;

        $r8 = new androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        specialinvoke $r8.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: void <init>()>();

        r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo> = $r8;

        $r9 = new androidx.media3.common.util.ListenerSet;

        $r10 = <androidx.media3.common.util.Clock: androidx.media3.common.util.Clock DEFAULT>;

        $r11 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$IterationFinishedEvent (androidx.media3.session.MediaControllerImplLegacy)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,androidx.media3.common.FlagSet), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplLegacy: void lambda$new$0(androidx.media3.common.Player$Listener,androidx.media3.common.FlagSet)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener,androidx.media3.common.FlagSet));

        specialinvoke $r9.<androidx.media3.common.util.ListenerSet: void <init>(android.os.Looper,androidx.media3.common.util.Clock,androidx.media3.common.util.ListenerSet$IterationFinishedEvent)>(r4, $r10, $r11);

        r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.common.util.ListenerSet listeners> = $r9;

        r0.<androidx.media3.session.MediaControllerImplLegacy: android.content.Context context> = r1;

        r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaController instance> = r2;

        $r12 = new androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback;

        specialinvoke $r12.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: void <init>(androidx.media3.session.MediaControllerImplLegacy,android.os.Looper)>(r0, r4);

        r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback controllerCompatCallback> = $r12;

        r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.SessionToken token> = r3;

        r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.BitmapLoader bitmapLoader> = r5;

        return;
    }

    androidx.media3.session.MediaController getInstance()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaController $r1;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaController instance>;

        return $r1;
    }

    public void connect()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.SessionToken $r1, $r2;
        int $i0;
        java.lang.Object $r3, $r4;
        android.support.v4.media.session.MediaSessionCompat$Token $r5;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.SessionToken token>;

        $i0 = virtualinvoke $r1.<androidx.media3.session.SessionToken: int getType()>();

        if $i0 != 0 goto label1;

        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.SessionToken token>;

        $r3 = virtualinvoke $r2.<androidx.media3.session.SessionToken: java.lang.Object getBinder()>();

        $r4 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r3);

        $r5 = (android.support.v4.media.session.MediaSessionCompat$Token) $r4;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void connectToSession(android.support.v4.media.session.MediaSessionCompat$Token)>($r5);

        goto label2;

     label1:
        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void connectToService()>();

     label2:
        return;
    }

    public void addListener(androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.common.util.ListenerSet $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter0: androidx.media3.common.Player$Listener;

        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.common.util.ListenerSet listeners>;

        virtualinvoke $r2.<androidx.media3.common.util.ListenerSet: void add(java.lang.Object)>(r1);

        return;
    }

    public void removeListener(androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.common.util.ListenerSet $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter0: androidx.media3.common.Player$Listener;

        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.common.util.ListenerSet listeners>;

        virtualinvoke $r2.<androidx.media3.common.util.ListenerSet: void remove(java.lang.Object)>(r1);

        return;
    }

    public void stop()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r1, $r2, $r4, $r5, $r8, $r11, $r15, $r19, $r25, $r27, $r28, $r29, $r30, $r36;
        androidx.media3.session.PlayerInfo $r3, $r6, $r9, $r12, $r16, $r20, $r22, $r26, $r37, r39;
        int $i0, $i5, $i6;
        androidx.media3.session.SessionPositionInfo $r7, $r10, $r13, $r17, $r21, $r24;
        androidx.media3.common.Player$PositionInfo $r14, $r18, $r23;
        long $l1, $l2, $l3, $l4;
        com.google.common.collect.ImmutableList $r31;
        androidx.media3.common.Player$Commands $r32;
        androidx.media3.session.SessionCommands $r33;
        android.support.v4.media.session.MediaControllerCompat $r34;
        android.support.v4.media.session.MediaControllerCompat$TransportControls $r35;
        androidx.media3.common.PlaybackException $r38;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r3 = $r2.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $i0 = $r3.<androidx.media3.session.PlayerInfo: int playbackState>;

        if $i0 != 1 goto label1;

        return;

     label1:
        $r4 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r22 = $r4.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r5 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r6 = $r5.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r7 = $r6.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r23 = $r7.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $r8 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r9 = $r8.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r10 = $r9.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $l3 = $r10.<androidx.media3.session.SessionPositionInfo: long durationMs>;

        $r11 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r12 = $r11.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r13 = $r12.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r14 = $r13.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $l4 = $r14.<androidx.media3.common.Player$PositionInfo: long positionMs>;

        $r15 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r16 = $r15.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r17 = $r16.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r18 = $r17.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $l2 = $r18.<androidx.media3.common.Player$PositionInfo: long positionMs>;

        $r19 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r20 = $r19.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r21 = $r20.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $l1 = $r21.<androidx.media3.session.SessionPositionInfo: long durationMs>;

        $i5 = staticinvoke <androidx.media3.session.MediaUtils: int calculateBufferedPercentage(long,long)>($l2, $l1);

        $r24 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.SessionPositionInfo createSessionPositionInfo(androidx.media3.common.Player$PositionInfo,boolean,long,long,int,long)>($r23, 0, $l3, $l4, $i5, 0L);

        r39 = virtualinvoke $r22.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithSessionPositionInfo(androidx.media3.session.SessionPositionInfo)>($r24);

        $r25 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r26 = $r25.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $i6 = $r26.<androidx.media3.session.PlayerInfo: int playbackState>;

        if $i6 == 1 goto label2;

        $r36 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r37 = $r36.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r38 = $r37.<androidx.media3.session.PlayerInfo: androidx.media3.common.PlaybackException playerError>;

        r39 = virtualinvoke r39.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithPlaybackState(int,androidx.media3.common.PlaybackException)>(1, $r38);

     label2:
        $r27 = new androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        $r28 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r33 = $r28.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.SessionCommands availableSessionCommands>;

        $r29 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r32 = $r29.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.common.Player$Commands availablePlayerCommands>;

        $r30 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r31 = $r30.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: com.google.common.collect.ImmutableList customLayout>;

        specialinvoke $r27.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: void <init>(androidx.media3.session.PlayerInfo,androidx.media3.session.SessionCommands,androidx.media3.common.Player$Commands,com.google.common.collect.ImmutableList)>(r39, $r33, $r32, $r31);

        r1 = $r27;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void updateStateMaskedControllerInfo(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,java.lang.Integer,java.lang.Integer)>(r1, null, null);

        $r34 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r35 = virtualinvoke $r34.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()>();

        virtualinvoke $r35.<android.support.v4.media.session.MediaControllerCompat$TransportControls: void stop()>();

        return;
    }

    public void release()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        boolean $z0;
        android.support.v4.media.MediaBrowserCompat $r1, $r7;
        android.support.v4.media.session.MediaControllerCompat $r2, $r5;
        androidx.media3.common.util.ListenerSet $r3;
        androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback $r4, $r6;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $z0 = r0.<androidx.media3.session.MediaControllerImplLegacy: boolean released>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<androidx.media3.session.MediaControllerImplLegacy: boolean released> = 1;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.MediaBrowserCompat browserCompat>;

        if $r1 == null goto label2;

        $r7 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.MediaBrowserCompat browserCompat>;

        virtualinvoke $r7.<android.support.v4.media.MediaBrowserCompat: void disconnect()>();

        r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.MediaBrowserCompat browserCompat> = null;

     label2:
        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        if $r2 == null goto label3;

        $r5 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r4 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback controllerCompatCallback>;

        virtualinvoke $r5.<android.support.v4.media.session.MediaControllerCompat: void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback)>($r4);

        $r6 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback controllerCompatCallback>;

        virtualinvoke $r6.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: void release()>();

        r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat> = null;

     label3:
        r0.<androidx.media3.session.MediaControllerImplLegacy: boolean connected> = 0;

        $r3 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.common.util.ListenerSet listeners>;

        virtualinvoke $r3.<androidx.media3.common.util.ListenerSet: void release()>();

        return;
    }

    public androidx.media3.session.SessionToken getConnectedToken()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        boolean $z0;
        androidx.media3.session.SessionToken $r1;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $z0 = r0.<androidx.media3.session.MediaControllerImplLegacy: boolean connected>;

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.SessionToken token>;

        goto label2;

     label1:
        $r1 = null;

     label2:
        return $r1;
    }

    public boolean isConnected()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $z0 = r0.<androidx.media3.session.MediaControllerImplLegacy: boolean connected>;

        return $z0;
    }

    public void play()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r1, $r2, $r4, $r5, $r8, $r9, $r10;
        androidx.media3.session.PlayerInfo $r3, $r6, $r7;
        boolean $z0, $z1, $z2;
        com.google.common.collect.ImmutableList $r11;
        androidx.media3.common.Player$Commands $r12;
        androidx.media3.session.SessionCommands $r13;
        android.support.v4.media.session.MediaControllerCompat $r14;
        android.support.v4.media.session.MediaControllerCompat$TransportControls $r15;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r3 = $r2.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $z0 = $r3.<androidx.media3.session.PlayerInfo: boolean playWhenReady>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r4 = new androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        $r5 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r6 = $r5.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r7 = virtualinvoke $r6.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithPlayWhenReady(boolean,int,int)>(1, 1, 0);

        $r8 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r13 = $r8.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.SessionCommands availableSessionCommands>;

        $r9 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r12 = $r9.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.common.Player$Commands availablePlayerCommands>;

        $r10 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r11 = $r10.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: com.google.common.collect.ImmutableList customLayout>;

        specialinvoke $r4.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: void <init>(androidx.media3.session.PlayerInfo,androidx.media3.session.SessionCommands,androidx.media3.common.Player$Commands,com.google.common.collect.ImmutableList)>($r7, $r13, $r12, $r11);

        r1 = $r4;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void updateStateMaskedControllerInfo(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,java.lang.Integer,java.lang.Integer)>(r1, null, null);

        $z1 = specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: boolean isPrepared()>();

        if $z1 == 0 goto label2;

        $z2 = specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: boolean hasMedia()>();

        if $z2 == 0 goto label2;

        $r14 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r15 = virtualinvoke $r14.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()>();

        virtualinvoke $r15.<android.support.v4.media.session.MediaControllerCompat$TransportControls: void play()>();

     label2:
        return;
    }

    public void pause()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r1, $r2, $r4, $r5, $r8, $r9, $r10;
        androidx.media3.session.PlayerInfo $r3, $r6, $r7;
        boolean $z0, $z1, $z2;
        com.google.common.collect.ImmutableList $r11;
        androidx.media3.common.Player$Commands $r12;
        androidx.media3.session.SessionCommands $r13;
        android.support.v4.media.session.MediaControllerCompat $r14;
        android.support.v4.media.session.MediaControllerCompat$TransportControls $r15;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r3 = $r2.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $z0 = $r3.<androidx.media3.session.PlayerInfo: boolean playWhenReady>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = new androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        $r5 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r6 = $r5.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r7 = virtualinvoke $r6.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithPlayWhenReady(boolean,int,int)>(0, 1, 0);

        $r8 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r13 = $r8.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.SessionCommands availableSessionCommands>;

        $r9 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r12 = $r9.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.common.Player$Commands availablePlayerCommands>;

        $r10 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r11 = $r10.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: com.google.common.collect.ImmutableList customLayout>;

        specialinvoke $r4.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: void <init>(androidx.media3.session.PlayerInfo,androidx.media3.session.SessionCommands,androidx.media3.common.Player$Commands,com.google.common.collect.ImmutableList)>($r7, $r13, $r12, $r11);

        r1 = $r4;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void updateStateMaskedControllerInfo(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,java.lang.Integer,java.lang.Integer)>(r1, null, null);

        $z1 = specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: boolean isPrepared()>();

        if $z1 == 0 goto label2;

        $z2 = specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: boolean hasMedia()>();

        if $z2 == 0 goto label2;

        $r14 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r15 = virtualinvoke $r14.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()>();

        virtualinvoke $r15.<android.support.v4.media.session.MediaControllerCompat$TransportControls: void pause()>();

     label2:
        return;
    }

    public void prepare()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r1, $r2, $r4, $r5, $r6, $r11, $r12, $r13;
        androidx.media3.session.PlayerInfo $r3, $r7, $r9, $r10;
        int $i0;
        androidx.media3.common.Timeline $r8;
        boolean $z0, $z1;
        com.google.common.collect.ImmutableList $r14;
        androidx.media3.common.Player$Commands $r15;
        androidx.media3.session.SessionCommands $r16;
        byte $b1;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r3 = $r2.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $i0 = $r3.<androidx.media3.session.PlayerInfo: int playbackState>;

        if $i0 == 1 goto label1;

        return;

     label1:
        $r4 = new androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        $r5 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r9 = $r5.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r6 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r7 = $r6.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r8 = $r7.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        $z0 = virtualinvoke $r8.<androidx.media3.common.Timeline: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $b1 = 4;

        goto label3;

     label2:
        $b1 = 2;

     label3:
        $r10 = virtualinvoke $r9.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithPlaybackState(int,androidx.media3.common.PlaybackException)>($b1, null);

        $r11 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r16 = $r11.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.SessionCommands availableSessionCommands>;

        $r12 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r15 = $r12.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.common.Player$Commands availablePlayerCommands>;

        $r13 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r14 = $r13.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: com.google.common.collect.ImmutableList customLayout>;

        specialinvoke $r4.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: void <init>(androidx.media3.session.PlayerInfo,androidx.media3.session.SessionCommands,androidx.media3.common.Player$Commands,com.google.common.collect.ImmutableList)>($r10, $r16, $r15, $r14);

        r1 = $r4;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void updateStateMaskedControllerInfo(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,java.lang.Integer,java.lang.Integer)>(r1, null, null);

        $z1 = specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: boolean hasMedia()>();

        if $z1 == 0 goto label4;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void initializeLegacyPlaylist()>();

     label4:
        return;
    }

    public void seekToDefaultPosition()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        int $i0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $i0 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: int getCurrentMediaItemIndex()>();

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void seekToInternal(int,long)>($i0, 0L);

        return;
    }

    public void seekToDefaultPosition(int)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        int i0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void seekToInternal(int,long)>(i0, 0L);

        return;
    }

    public void seekTo(long)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        long l0;
        int $i1;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        l0 := @parameter0: long;

        $i1 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: int getCurrentMediaItemIndex()>();

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void seekToInternal(int,long)>($i1, l0);

        return;
    }

    public void seekTo(int, long)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        int i0;
        long l1;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void seekToInternal(int,long)>(i0, l1);

        return;
    }

    private void seekToInternal(int, long)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        int i0, i2, $i3, $i4, $i10, i11, $i20, i21;
        long l1, $l7, $l8, l12, l13, l15, l16, l17, $l18, l19, l22;
        androidx.media3.common.Timeline r1, $r21;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r2, $r3, $r7, $r10, $r11, $r12, $r13, $r19;
        androidx.media3.session.PlayerInfo $r4, $r8, $r20, r33;
        boolean $z0, $z1, $z2, $z3;
        android.support.v4.media.session.MediaControllerCompat $r5, $r26;
        android.support.v4.media.session.MediaControllerCompat$TransportControls $r6, $r27;
        androidx.media3.session.SessionPositionInfo $r9;
        com.google.common.collect.ImmutableList $r14;
        androidx.media3.common.Player$Commands $r15;
        androidx.media3.session.SessionCommands $r16;
        androidx.media3.common.Timeline$Window $r17, $r18;
        byte $b5, $b6, $b9, $b14;
        java.lang.StringBuilder $r22, $r23, $r24;
        java.lang.String $r25;
        java.lang.Integer r28, r30;
        androidx.media3.session.QueueTimeline r29;
        androidx.media3.common.MediaItem $r31;
        androidx.media3.common.Player$PositionInfo r32;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        if i0 < 0 goto label01;

        $z3 = 1;

        goto label02;

     label01:
        $z3 = 0;

     label02:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z3);

        i2 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: int getCurrentMediaItemIndex()>();

        $r3 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r4 = $r3.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        r1 = $r4.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        $z0 = virtualinvoke r1.<androidx.media3.common.Timeline: boolean isEmpty()>();

        if $z0 != 0 goto label03;

        $i10 = virtualinvoke r1.<androidx.media3.common.Timeline: int getWindowCount()>();

        if i0 >= $i10 goto label04;

     label03:
        $z1 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: boolean isPlayingAd()>();

        if $z1 == 0 goto label05;

     label04:
        return;

     label05:
        i11 = i2;

        r28 = null;

        if i0 == i2 goto label07;

        $r19 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r20 = $r19.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r21 = $r20.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        r29 = (androidx.media3.session.QueueTimeline) $r21;

        l12 = virtualinvoke r29.<androidx.media3.session.QueueTimeline: long getQueueId(int)>(i0);

        $b9 = l12 cmp -1L;

        if $b9 == 0 goto label06;

        $r26 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r27 = virtualinvoke $r26.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()>();

        virtualinvoke $r27.<android.support.v4.media.session.MediaControllerCompat$TransportControls: void skipToQueueItem(long)>(l12);

        i11 = i0;

        r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        goto label07;

     label06:
        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot seek to new media item due to the missing queue Id at media item, mediaItemIndex=");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MCImplLegacy", $r25);

     label07:
        l13 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: long getCurrentPosition()>();

        $b14 = l1 cmp -9223372036854775807L;

        if $b14 != 0 goto label08;

        l15 = l13;

        r30 = null;

        goto label09;

     label08:
        $r5 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r6 = virtualinvoke $r5.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()>();

        virtualinvoke $r6.<android.support.v4.media.session.MediaControllerCompat$TransportControls: void seekTo(long)>(l1);

        l15 = l1;

        r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

     label09:
        if r28 != null goto label14;

        l16 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: long getBufferedPosition()>();

        l17 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: long getDuration()>();

        $b5 = l15 cmp l13;

        if $b5 >= 0 goto label10;

        $l18 = l15;

        goto label11;

     label10:
        $l18 = staticinvoke <java.lang.Math: long max(long,long)>(l15, l16);

     label11:
        l19 = $l18;

        $b6 = l17 cmp -9223372036854775807L;

        if $b6 != 0 goto label12;

        $i20 = 0;

        goto label13;

     label12:
        $l7 = l19 * 100L;

        $l8 = $l7 / l17;

        $i20 = (int) $l8;

     label13:
        i21 = $i20;

        l22 = l19 - l15;

        goto label15;

     label14:
        l17 = -9223372036854775807L;

        l19 = 0L;

        i21 = 0;

        l22 = 0L;

     label15:
        $i4 = i11;

        $z2 = virtualinvoke r1.<androidx.media3.common.Timeline: boolean isEmpty()>();

        if $z2 != 0 goto label16;

        $r17 = new androidx.media3.common.Timeline$Window;

        specialinvoke $r17.<androidx.media3.common.Timeline$Window: void <init>()>();

        $r18 = virtualinvoke r1.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window)>(i11, $r17);

        $r31 = $r18.<androidx.media3.common.Timeline$Window: androidx.media3.common.MediaItem mediaItem>;

        goto label17;

     label16:
        $r31 = null;

     label17:
        r32 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: androidx.media3.common.Player$PositionInfo createPositionInfo(int,androidx.media3.common.MediaItem,long,boolean)>($i4, $r31, l15, 0);

        $r7 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r8 = $r7.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r9 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.SessionPositionInfo createSessionPositionInfo(androidx.media3.common.Player$PositionInfo,boolean,long,long,int,long)>(r32, 0, l17, l19, i21, l22);

        r33 = virtualinvoke $r8.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithSessionPositionInfo(androidx.media3.session.SessionPositionInfo)>($r9);

        $i3 = r33.<androidx.media3.session.PlayerInfo: int playbackState>;

        if $i3 == 1 goto label18;

        r33 = virtualinvoke r33.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithPlaybackState(int,androidx.media3.common.PlaybackException)>(2, null);

     label18:
        $r10 = new androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        $r11 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r16 = $r11.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.SessionCommands availableSessionCommands>;

        $r12 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r15 = $r12.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.common.Player$Commands availablePlayerCommands>;

        $r13 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r14 = $r13.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: com.google.common.collect.ImmutableList customLayout>;

        specialinvoke $r10.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: void <init>(androidx.media3.session.PlayerInfo,androidx.media3.session.SessionCommands,androidx.media3.common.Player$Commands,com.google.common.collect.ImmutableList)>(r33, $r16, $r15, $r14);

        r2 = $r10;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void updateStateMaskedControllerInfo(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,java.lang.Integer,java.lang.Integer)>(r2, r30, r28);

        return;
    }

    public long getSeekBackIncrement()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo $r1;
        androidx.media3.session.PlayerInfo $r2;
        long $l0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r2 = $r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $l0 = $r2.<androidx.media3.session.PlayerInfo: long seekBackIncrementMs>;

        return $l0;
    }

    public void seekBack()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        android.support.v4.media.session.MediaControllerCompat $r1;
        android.support.v4.media.session.MediaControllerCompat$TransportControls $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r2 = virtualinvoke $r1.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()>();

        virtualinvoke $r2.<android.support.v4.media.session.MediaControllerCompat$TransportControls: void rewind()>();

        return;
    }

    public long getSeekForwardIncrement()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo $r1;
        androidx.media3.session.PlayerInfo $r2;
        long $l0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r2 = $r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $l0 = $r2.<androidx.media3.session.PlayerInfo: long seekForwardIncrementMs>;

        return $l0;
    }

    public void seekForward()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        android.support.v4.media.session.MediaControllerCompat $r1;
        android.support.v4.media.session.MediaControllerCompat$TransportControls $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r2 = virtualinvoke $r1.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()>();

        virtualinvoke $r2.<android.support.v4.media.session.MediaControllerCompat$TransportControls: void fastForward()>();

        return;
    }

    public android.app.PendingIntent getSessionActivity()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        android.support.v4.media.session.MediaControllerCompat $r1;
        android.app.PendingIntent $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r2 = virtualinvoke $r1.<android.support.v4.media.session.MediaControllerCompat: android.app.PendingIntent getSessionActivity()>();

        return $r2;
    }

    public androidx.media3.common.PlaybackException getPlayerError()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo $r1;
        androidx.media3.session.PlayerInfo $r2;
        androidx.media3.common.PlaybackException $r3;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r2 = $r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r3 = $r2.<androidx.media3.session.PlayerInfo: androidx.media3.common.PlaybackException playerError>;

        return $r3;
    }

    public long getDuration()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo $r1;
        androidx.media3.session.PlayerInfo $r2;
        androidx.media3.session.SessionPositionInfo $r3;
        long $l0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r2 = $r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r3 = $r2.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $l0 = $r3.<androidx.media3.session.SessionPositionInfo: long durationMs>;

        return $l0;
    }

    public long getCurrentPosition()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo $r1;
        androidx.media3.session.PlayerInfo $r2;
        androidx.media3.session.SessionPositionInfo $r3;
        androidx.media3.common.Player$PositionInfo $r4;
        long $l0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r2 = $r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r3 = $r2.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r4 = $r3.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $l0 = $r4.<androidx.media3.common.Player$PositionInfo: long positionMs>;

        return $l0;
    }

    public long getBufferedPosition()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo $r1;
        androidx.media3.session.PlayerInfo $r2;
        androidx.media3.session.SessionPositionInfo $r3;
        long $l0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r2 = $r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r3 = $r2.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $l0 = $r3.<androidx.media3.session.SessionPositionInfo: long bufferedPositionMs>;

        return $l0;
    }

    public int getBufferedPercentage()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo $r1;
        androidx.media3.session.PlayerInfo $r2;
        androidx.media3.session.SessionPositionInfo $r3;
        int $i0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r2 = $r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r3 = $r2.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $i0 = $r3.<androidx.media3.session.SessionPositionInfo: int bufferedPercentage>;

        return $i0;
    }

    public long getTotalBufferedDuration()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo $r1;
        androidx.media3.session.PlayerInfo $r2;
        androidx.media3.session.SessionPositionInfo $r3;
        long $l0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r2 = $r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r3 = $r2.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $l0 = $r3.<androidx.media3.session.SessionPositionInfo: long totalBufferedDurationMs>;

        return $l0;
    }

    public long getCurrentLiveOffset()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        return -9223372036854775807L;
    }

    public long getContentDuration()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        long $l0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $l0 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: long getDuration()>();

        return $l0;
    }

    public long getContentPosition()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        long $l0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $l0 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: long getCurrentPosition()>();

        return $l0;
    }

    public long getContentBufferedPosition()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        long $l0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $l0 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: long getBufferedPosition()>();

        return $l0;
    }

    public boolean isPlayingAd()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo $r1;
        androidx.media3.session.PlayerInfo $r2;
        androidx.media3.session.SessionPositionInfo $r3;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r2 = $r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r3 = $r2.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $z0 = $r3.<androidx.media3.session.SessionPositionInfo: boolean isPlayingAd>;

        return $z0;
    }

    public int getCurrentAdGroupIndex()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        return -1;
    }

    public int getCurrentAdIndexInAdGroup()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        return -1;
    }

    public androidx.media3.common.PlaybackParameters getPlaybackParameters()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo $r1;
        androidx.media3.session.PlayerInfo $r2;
        androidx.media3.common.PlaybackParameters $r3;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r2 = $r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r3 = $r2.<androidx.media3.session.PlayerInfo: androidx.media3.common.PlaybackParameters playbackParameters>;

        return $r3;
    }

    public androidx.media3.common.AudioAttributes getAudioAttributes()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo $r1;
        androidx.media3.session.PlayerInfo $r2;
        androidx.media3.common.AudioAttributes $r3;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r2 = $r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r3 = $r2.<androidx.media3.session.PlayerInfo: androidx.media3.common.AudioAttributes audioAttributes>;

        return $r3;
    }

    public com.google.common.util.concurrent.ListenableFuture setRating(java.lang.String, androidx.media3.common.Rating)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        java.lang.String r1, r3;
        androidx.media3.common.Rating r2;
        androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo $r4;
        android.support.v4.media.MediaMetadataCompat $r5;
        boolean $z0;
        androidx.media3.session.SessionResult $r6;
        com.google.common.util.concurrent.ListenableFuture $r7;
        android.support.v4.media.session.MediaControllerCompat $r8;
        android.support.v4.media.session.MediaControllerCompat$TransportControls $r9;
        android.support.v4.media.RatingCompat $r10;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.media3.common.Rating;

        $r4 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo legacyPlayerInfo>;

        $r5 = $r4.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.MediaMetadataCompat mediaMetadataCompat>;

        r3 = virtualinvoke $r5.<android.support.v4.media.MediaMetadataCompat: java.lang.String getString(java.lang.String)>("android.media.metadata.MEDIA_ID");

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label1;

        $r8 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r9 = virtualinvoke $r8.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()>();

        $r10 = staticinvoke <androidx.media3.session.MediaUtils: android.support.v4.media.RatingCompat convertToRatingCompat(androidx.media3.common.Rating)>(r2);

        virtualinvoke $r9.<android.support.v4.media.session.MediaControllerCompat$TransportControls: void setRating(android.support.v4.media.RatingCompat)>($r10);

     label1:
        $r6 = new androidx.media3.session.SessionResult;

        specialinvoke $r6.<androidx.media3.session.SessionResult: void <init>(int)>(0);

        $r7 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)>($r6);

        return $r7;
    }

    public com.google.common.util.concurrent.ListenableFuture setRating(androidx.media3.common.Rating)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.common.Rating r1;
        android.support.v4.media.session.MediaControllerCompat $r2;
        android.support.v4.media.session.MediaControllerCompat$TransportControls $r3;
        android.support.v4.media.RatingCompat $r4;
        androidx.media3.session.SessionResult $r5;
        com.google.common.util.concurrent.ListenableFuture $r6;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter0: androidx.media3.common.Rating;

        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r3 = virtualinvoke $r2.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()>();

        $r4 = staticinvoke <androidx.media3.session.MediaUtils: android.support.v4.media.RatingCompat convertToRatingCompat(androidx.media3.common.Rating)>(r1);

        virtualinvoke $r3.<android.support.v4.media.session.MediaControllerCompat$TransportControls: void setRating(android.support.v4.media.RatingCompat)>($r4);

        $r5 = new androidx.media3.session.SessionResult;

        specialinvoke $r5.<androidx.media3.session.SessionResult: void <init>(int)>(0);

        $r6 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)>($r5);

        return $r6;
    }

    public void setPlaybackParameters(androidx.media3.common.PlaybackParameters)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.common.PlaybackParameters r1, r2;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r3, $r6, $r7, $r10, $r11, $r12;
        boolean $z0;
        android.support.v4.media.session.MediaControllerCompat $r4;
        android.support.v4.media.session.MediaControllerCompat$TransportControls $r5;
        float $f0;
        androidx.media3.session.PlayerInfo $r8, $r9;
        com.google.common.collect.ImmutableList $r13;
        androidx.media3.common.Player$Commands $r14;
        androidx.media3.session.SessionCommands $r15;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter0: androidx.media3.common.PlaybackParameters;

        r2 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.common.PlaybackParameters getPlaybackParameters()>();

        $z0 = virtualinvoke r1.<androidx.media3.common.PlaybackParameters: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label1;

        $r6 = new androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        $r7 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r8 = $r7.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r9 = virtualinvoke $r8.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithPlaybackParameters(androidx.media3.common.PlaybackParameters)>(r1);

        $r10 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r15 = $r10.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.SessionCommands availableSessionCommands>;

        $r11 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r14 = $r11.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.common.Player$Commands availablePlayerCommands>;

        $r12 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r13 = $r12.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: com.google.common.collect.ImmutableList customLayout>;

        specialinvoke $r6.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: void <init>(androidx.media3.session.PlayerInfo,androidx.media3.session.SessionCommands,androidx.media3.common.Player$Commands,com.google.common.collect.ImmutableList)>($r9, $r15, $r14, $r13);

        r3 = $r6;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void updateStateMaskedControllerInfo(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,java.lang.Integer,java.lang.Integer)>(r3, null, null);

     label1:
        $r4 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r5 = virtualinvoke $r4.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()>();

        $f0 = r1.<androidx.media3.common.PlaybackParameters: float speed>;

        virtualinvoke $r5.<android.support.v4.media.session.MediaControllerCompat$TransportControls: void setPlaybackSpeed(float)>($f0);

        return;
    }

    public void setPlaybackSpeed(float)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        float f0, $f1;
        androidx.media3.common.PlaybackParameters r1, $r7;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r2, $r5, $r6, $r10, $r11, $r12;
        byte $b0;
        android.support.v4.media.session.MediaControllerCompat $r3;
        android.support.v4.media.session.MediaControllerCompat$TransportControls $r4;
        androidx.media3.session.PlayerInfo $r8, $r9;
        com.google.common.collect.ImmutableList $r13;
        androidx.media3.common.Player$Commands $r14;
        androidx.media3.session.SessionCommands $r15;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        f0 := @parameter0: float;

        r1 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.common.PlaybackParameters getPlaybackParameters()>();

        $f1 = r1.<androidx.media3.common.PlaybackParameters: float speed>;

        $b0 = f0 cmpl $f1;

        if $b0 == 0 goto label1;

        $r5 = new androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        $r6 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r8 = $r6.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r7 = new androidx.media3.common.PlaybackParameters;

        specialinvoke $r7.<androidx.media3.common.PlaybackParameters: void <init>(float)>(f0);

        $r9 = virtualinvoke $r8.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithPlaybackParameters(androidx.media3.common.PlaybackParameters)>($r7);

        $r10 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r15 = $r10.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.SessionCommands availableSessionCommands>;

        $r11 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r14 = $r11.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.common.Player$Commands availablePlayerCommands>;

        $r12 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r13 = $r12.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: com.google.common.collect.ImmutableList customLayout>;

        specialinvoke $r5.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: void <init>(androidx.media3.session.PlayerInfo,androidx.media3.session.SessionCommands,androidx.media3.common.Player$Commands,com.google.common.collect.ImmutableList)>($r9, $r15, $r14, $r13);

        r2 = $r5;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void updateStateMaskedControllerInfo(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,java.lang.Integer,java.lang.Integer)>(r2, null, null);

     label1:
        $r3 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r4 = virtualinvoke $r3.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()>();

        virtualinvoke $r4.<android.support.v4.media.session.MediaControllerCompat$TransportControls: void setPlaybackSpeed(float)>(f0);

        return;
    }

    public com.google.common.util.concurrent.ListenableFuture sendCustomCommand(androidx.media3.session.SessionCommand, android.os.Bundle)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.SessionCommand r1;
        android.os.Bundle r2;
        com.google.common.util.concurrent.SettableFuture r3;
        androidx.media3.session.MediaControllerImplLegacy$1 r4, $r7;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo $r5;
        androidx.media3.session.SessionCommands $r6;
        boolean $z0;
        androidx.media3.session.MediaController $r8;
        android.os.Handler $r9;
        java.lang.String $r10, $r14;
        android.support.v4.media.session.MediaControllerCompat $r11, $r12;
        android.support.v4.media.session.MediaControllerCompat$TransportControls $r13;
        androidx.media3.session.SessionResult $r15;
        com.google.common.util.concurrent.ListenableFuture $r16;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter0: androidx.media3.session.SessionCommand;

        r2 := @parameter1: android.os.Bundle;

        $r5 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r6 = $r5.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.SessionCommands availableSessionCommands>;

        $z0 = virtualinvoke $r6.<androidx.media3.session.SessionCommands: boolean contains(androidx.media3.session.SessionCommand)>(r1);

        if $z0 == 0 goto label1;

        $r12 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r13 = virtualinvoke $r12.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()>();

        $r14 = r1.<androidx.media3.session.SessionCommand: java.lang.String customAction>;

        virtualinvoke $r13.<android.support.v4.media.session.MediaControllerCompat$TransportControls: void sendCustomAction(java.lang.String,android.os.Bundle)>($r14, r2);

        $r15 = new androidx.media3.session.SessionResult;

        specialinvoke $r15.<androidx.media3.session.SessionResult: void <init>(int)>(0);

        $r16 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)>($r15);

        return $r16;

     label1:
        r3 = staticinvoke <com.google.common.util.concurrent.SettableFuture: com.google.common.util.concurrent.SettableFuture create()>();

        $r7 = new androidx.media3.session.MediaControllerImplLegacy$1;

        $r8 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaController getInstance()>();

        $r9 = $r8.<androidx.media3.session.MediaController: android.os.Handler applicationHandler>;

        specialinvoke $r7.<androidx.media3.session.MediaControllerImplLegacy$1: void <init>(androidx.media3.session.MediaControllerImplLegacy,android.os.Handler,com.google.common.util.concurrent.SettableFuture)>(r0, $r9, r3);

        r4 = $r7;

        $r11 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r10 = r1.<androidx.media3.session.SessionCommand: java.lang.String customAction>;

        virtualinvoke $r11.<android.support.v4.media.session.MediaControllerCompat: void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)>($r10, r2, r4);

        return r3;
    }

    public androidx.media3.common.Timeline getCurrentTimeline()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo $r1;
        androidx.media3.session.PlayerInfo $r2;
        androidx.media3.common.Timeline $r3;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r2 = $r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r3 = $r2.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        return $r3;
    }

    public void setMediaItem(androidx.media3.common.MediaItem)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.common.MediaItem r1;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void setMediaItem(androidx.media3.common.MediaItem,long)>(r1, -9223372036854775807L);

        return;
    }

    public void setMediaItem(androidx.media3.common.MediaItem, long)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.common.MediaItem r1;
        long l0;
        com.google.common.collect.ImmutableList $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        l0 := @parameter1: long;

        $r2 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>(r1);

        virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void setMediaItems(java.util.List,int,long)>($r2, 0, l0);

        return;
    }

    public void setMediaItem(androidx.media3.common.MediaItem, boolean)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.common.MediaItem r1;
        boolean z0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void setMediaItem(androidx.media3.common.MediaItem)>(r1);

        return;
    }

    public void setMediaItems(java.util.List)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        java.util.List r1;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter0: java.util.List;

        virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void setMediaItems(java.util.List,int,long)>(r1, 0, -9223372036854775807L);

        return;
    }

    public void setMediaItems(java.util.List, boolean)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        java.util.List r1;
        boolean z0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter0: java.util.List;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void setMediaItems(java.util.List)>(r1);

        return;
    }

    public void setMediaItems(java.util.List, int, long)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        java.util.List r1;
        int i0;
        androidx.media3.session.QueueTimeline r2, $r5;
        androidx.media3.session.PlayerInfo r3, $r7;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r4, $r6, $r12, $r13, $r14, $r15;
        boolean $z0, $z1;
        byte $b1;
        java.lang.Object $r8;
        androidx.media3.common.MediaItem $r9;
        androidx.media3.common.Player$PositionInfo $r10;
        androidx.media3.session.SessionPositionInfo $r11;
        com.google.common.collect.ImmutableList $r16;
        androidx.media3.common.Player$Commands $r17;
        androidx.media3.session.SessionCommands $r18;
        long l2;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        l2 := @parameter2: long;

        $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void clearMediaItems()>();

        return;

     label1:
        $r5 = <androidx.media3.session.QueueTimeline: androidx.media3.session.QueueTimeline DEFAULT>;

        r2 = virtualinvoke $r5.<androidx.media3.session.QueueTimeline: androidx.media3.session.QueueTimeline copyWithNewMediaItems(int,java.util.List)>(0, r1);

        $b1 = l2 cmp -9223372036854775807L;

        if $b1 != 0 goto label2;

        l2 = 0L;

     label2:
        $r6 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r7 = $r6.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r8 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r9 = (androidx.media3.common.MediaItem) $r8;

        $r10 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: androidx.media3.common.Player$PositionInfo createPositionInfo(int,androidx.media3.common.MediaItem,long,boolean)>(i0, $r9, l2, 0);

        $r11 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.SessionPositionInfo createSessionPositionInfo(androidx.media3.common.Player$PositionInfo,boolean,long,long,int,long)>($r10, 0, -9223372036854775807L, 0L, 0, 0L);

        r3 = virtualinvoke $r7.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithTimelineAndSessionPositionInfo(androidx.media3.common.Timeline,androidx.media3.session.SessionPositionInfo)>(r2, $r11);

        $r12 = new androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        $r13 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r18 = $r13.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.SessionCommands availableSessionCommands>;

        $r14 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r17 = $r14.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.common.Player$Commands availablePlayerCommands>;

        $r15 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r16 = $r15.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: com.google.common.collect.ImmutableList customLayout>;

        specialinvoke $r12.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: void <init>(androidx.media3.session.PlayerInfo,androidx.media3.session.SessionCommands,androidx.media3.common.Player$Commands,com.google.common.collect.ImmutableList)>(r3, $r18, $r17, $r16);

        r4 = $r12;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void updateStateMaskedControllerInfo(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,java.lang.Integer,java.lang.Integer)>(r4, null, null);

        $z1 = specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: boolean isPrepared()>();

        if $z1 == 0 goto label3;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void initializeLegacyPlaylist()>();

     label3:
        return;
    }

    public void setPlaylistMetadata(androidx.media3.common.MediaMetadata)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.common.MediaMetadata r1;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter0: androidx.media3.common.MediaMetadata;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MCImplLegacy", "Session doesn\'t support setting playlist metadata");

        return;
    }

    public androidx.media3.common.MediaMetadata getPlaylistMetadata()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo $r1;
        androidx.media3.session.PlayerInfo $r2;
        androidx.media3.common.MediaMetadata $r3;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r2 = $r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r3 = $r2.<androidx.media3.session.PlayerInfo: androidx.media3.common.MediaMetadata playlistMetadata>;

        return $r3;
    }

    public void addMediaItem(androidx.media3.common.MediaItem)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.common.MediaItem r1;
        java.util.List $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        $r2 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r1);

        virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void addMediaItems(int,java.util.List)>(2147483647, $r2);

        return;
    }

    public void addMediaItem(int, androidx.media3.common.MediaItem)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        int i0;
        androidx.media3.common.MediaItem r1;
        java.util.List $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.MediaItem;

        $r2 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r1);

        virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void addMediaItems(int,java.util.List)>(i0, $r2);

        return;
    }

    public void addMediaItems(java.util.List)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        java.util.List r1;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter0: java.util.List;

        virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void addMediaItems(int,java.util.List)>(2147483647, r1);

        return;
    }

    public void addMediaItems(int, java.util.List)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        java.util.List r1;
        androidx.media3.session.QueueTimeline r2, r3;
        int i0, i1, $i2, $i3, i4, i5;
        androidx.media3.session.PlayerInfo r4, $r7, $r11;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r5, $r6, $r10, $r12, $r13, $r14, $r15;
        boolean $z0, $z1, $z2, $z3;
        androidx.media3.common.Timeline $r8, $r9;
        com.google.common.collect.ImmutableList $r16;
        androidx.media3.common.Player$Commands $r17;
        androidx.media3.session.SessionCommands $r18;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        i4 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        if i4 < 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z3);

        $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        return;

     label3:
        $r6 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r7 = $r6.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r8 = $r7.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        r2 = (androidx.media3.session.QueueTimeline) $r8;

        $z1 = virtualinvoke r2.<androidx.media3.session.QueueTimeline: boolean isEmpty()>();

        if $z1 == 0 goto label4;

        virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void setMediaItems(java.util.List)>(r1);

        return;

     label4:
        $r9 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.common.Timeline getCurrentTimeline()>();

        $i2 = virtualinvoke $r9.<androidx.media3.common.Timeline: int getWindowCount()>();

        i5 = staticinvoke <java.lang.Math: int min(int,int)>(i4, $i2);

        r3 = virtualinvoke r2.<androidx.media3.session.QueueTimeline: androidx.media3.session.QueueTimeline copyWithNewMediaItems(int,java.util.List)>(i5, r1);

        i0 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: int getCurrentMediaItemIndex()>();

        $i3 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: int calculateCurrentItemIndexAfterAddItems(int,int,int)>(i0, i5, $i3);

        $r10 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r11 = $r10.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        r4 = virtualinvoke $r11.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithTimelineAndMediaItemIndex(androidx.media3.common.Timeline,int)>(r3, i1);

        $r12 = new androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        $r13 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r18 = $r13.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.SessionCommands availableSessionCommands>;

        $r14 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r17 = $r14.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.common.Player$Commands availablePlayerCommands>;

        $r15 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r16 = $r15.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: com.google.common.collect.ImmutableList customLayout>;

        specialinvoke $r12.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: void <init>(androidx.media3.session.PlayerInfo,androidx.media3.session.SessionCommands,androidx.media3.common.Player$Commands,com.google.common.collect.ImmutableList)>(r4, $r18, $r17, $r16);

        r5 = $r12;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void updateStateMaskedControllerInfo(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,java.lang.Integer,java.lang.Integer)>(r5, null, null);

        $z2 = specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: boolean isPrepared()>();

        if $z2 == 0 goto label5;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void addQueueItems(java.util.List,int)>(r1, i5);

     label5:
        return;
    }

    public void removeMediaItem(int)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        int i0, $i1;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        i0 := @parameter0: int;

        $i1 = i0 + 1;

        virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void removeMediaItems(int,int)>(i0, $i1);

        return;
    }

    public void removeMediaItems(int, int)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        int i0, i1, i2, $i3, $i4, $i5, i6, i7, i8, i9;
        androidx.media3.session.QueueTimeline r1, r2;
        androidx.media3.session.PlayerInfo r3, $r6, $r9;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r4, $r5, $r8, $r10, $r11, $r12, $r13;
        androidx.media3.common.Timeline $r7, $r30;
        com.google.common.collect.ImmutableList $r14;
        androidx.media3.common.Player$Commands $r15;
        androidx.media3.session.SessionCommands $r16;
        boolean $z0, $z1;
        androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo $r17, $r19;
        java.util.List $r18, $r20;
        android.support.v4.media.session.MediaControllerCompat $r21;
        java.lang.Object $r22;
        android.support.v4.media.session.MediaSessionCompat$QueueItem $r23;
        android.support.v4.media.MediaDescriptionCompat $r24;
        java.lang.StringBuilder $r25, $r26, $r27, $r28;
        java.lang.String $r29;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        i0 := @parameter0: int;

        i6 := @parameter1: int;

        if i0 < 0 goto label1;

        if i6 < i0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z1);

        $r30 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.common.Timeline getCurrentTimeline()>();

        i1 = virtualinvoke $r30.<androidx.media3.common.Timeline: int getWindowCount()>();

        i7 = staticinvoke <java.lang.Math: int min(int,int)>(i6, i1);

        if i0 >= i1 goto label3;

        if i0 != i7 goto label4;

     label3:
        return;

     label4:
        $r5 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r6 = $r5.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r7 = $r6.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        r1 = (androidx.media3.session.QueueTimeline) $r7;

        r2 = virtualinvoke r1.<androidx.media3.session.QueueTimeline: androidx.media3.session.QueueTimeline copyWithRemovedMediaItems(int,int)>(i0, i7);

        i2 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: int getCurrentMediaItemIndex()>();

        i8 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: int calculateCurrentItemIndexAfterRemoveItems(int,int,int)>(i2, i0, i7);

        if i8 != -1 goto label5;

        $i4 = virtualinvoke r2.<androidx.media3.session.QueueTimeline: int getWindowCount()>();

        $i5 = $i4 - 1;

        i8 = staticinvoke <androidx.media3.common.util.Util: int constrainValue(int,int,int)>(i0, 0, $i5);

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Currently playing item is removed. Assumes item at ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is the new current item");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MCImplLegacy", $r29);

     label5:
        $r8 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r9 = $r8.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        r3 = virtualinvoke $r9.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithTimelineAndMediaItemIndex(androidx.media3.common.Timeline,int)>(r2, i8);

        $r10 = new androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        $r11 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r16 = $r11.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.SessionCommands availableSessionCommands>;

        $r12 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r15 = $r12.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.common.Player$Commands availablePlayerCommands>;

        $r13 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r14 = $r13.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: com.google.common.collect.ImmutableList customLayout>;

        specialinvoke $r10.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: void <init>(androidx.media3.session.PlayerInfo,androidx.media3.session.SessionCommands,androidx.media3.common.Player$Commands,com.google.common.collect.ImmutableList)>(r3, $r16, $r15, $r14);

        r4 = $r10;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void updateStateMaskedControllerInfo(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,java.lang.Integer,java.lang.Integer)>(r4, null, null);

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: boolean isPrepared()>();

        if $z0 == 0 goto label7;

        i9 = i0;

     label6:
        if i9 >= i7 goto label7;

        $r17 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo legacyPlayerInfo>;

        $r18 = $r17.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.util.List queue>;

        $i3 = interfaceinvoke $r18.<java.util.List: int size()>();

        if i9 >= $i3 goto label7;

        $r21 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r19 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo legacyPlayerInfo>;

        $r20 = $r19.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.util.List queue>;

        $r22 = interfaceinvoke $r20.<java.util.List: java.lang.Object get(int)>(i9);

        $r23 = (android.support.v4.media.session.MediaSessionCompat$QueueItem) $r22;

        $r24 = virtualinvoke $r23.<android.support.v4.media.session.MediaSessionCompat$QueueItem: android.support.v4.media.MediaDescriptionCompat getDescription()>();

        virtualinvoke $r21.<android.support.v4.media.session.MediaControllerCompat: void removeQueueItem(android.support.v4.media.MediaDescriptionCompat)>($r24);

        i9 = i9 + 1;

        goto label6;

     label7:
        return;
    }

    public void clearMediaItems()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void removeMediaItems(int,int)>(0, 2147483647);

        return;
    }

    public void moveMediaItem(int, int)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        int i0, i1, $i2;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i0 + 1;

        virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void moveMediaItems(int,int,int)>(i0, $i2, i1);

        return;
    }

    public void moveMediaItems(int, int, int)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, i9, i10, i11, $i12, $i13, i14, i15, i16, i17;
        androidx.media3.session.QueueTimeline r1, r2;
        androidx.media3.session.PlayerInfo r3, $r8, $r36;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r4, $r7, $r9, $r10, $r11, $r12, $r35;
        java.util.ArrayList r5, $r16;
        android.support.v4.media.session.MediaSessionCompat$QueueItem r6, $r23, $r28;
        com.google.common.collect.ImmutableList $r13;
        androidx.media3.common.Player$Commands $r14;
        androidx.media3.session.SessionCommands $r15;
        boolean $z0, $z2;
        java.lang.Object $r17, $r22, $r27;
        android.support.v4.media.session.MediaControllerCompat $r18, $r26;
        android.support.v4.media.MediaDescriptionCompat $r19, $r29;
        androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo $r20, $r24;
        java.util.List $r21, $r25;
        java.lang.StringBuilder $r30, $r31, $r32, $r33;
        java.lang.String $r34;
        androidx.media3.common.Timeline $r37;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        i0 := @parameter0: int;

        i9 := @parameter1: int;

        i10 := @parameter2: int;

        if i0 < 0 goto label1;

        if i0 > i9 goto label1;

        if i10 < 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z2);

        $r35 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r36 = $r35.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r37 = $r36.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        r1 = (androidx.media3.session.QueueTimeline) $r37;

        i1 = virtualinvoke r1.<androidx.media3.session.QueueTimeline: int getWindowCount()>();

        i11 = staticinvoke <java.lang.Math: int min(int,int)>(i9, i1);

        i2 = i11 - i0;

        $i12 = i1 - i2;

        i3 = $i12 - 1;

        $i13 = i3 + 1;

        i14 = staticinvoke <java.lang.Math: int min(int,int)>(i10, $i13);

        if i0 >= i1 goto label3;

        if i0 == i11 goto label3;

        if i0 != i14 goto label4;

     label3:
        return;

     label4:
        i4 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: int getCurrentMediaItemIndex()>();

        i15 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: int calculateCurrentItemIndexAfterRemoveItems(int,int,int)>(i4, i0, i11);

        if i15 != -1 goto label5;

        i15 = staticinvoke <androidx.media3.common.util.Util: int constrainValue(int,int,int)>(i0, 0, i3);

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Currently playing item will be removed and added back to mimic move. Assumes item at ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i15);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" would be the new current item");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MCImplLegacy", $r34);

     label5:
        i5 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: int calculateCurrentItemIndexAfterAddItems(int,int,int)>(i15, i14, i2);

        r2 = virtualinvoke r1.<androidx.media3.session.QueueTimeline: androidx.media3.session.QueueTimeline copyWithMovedMediaItems(int,int,int)>(i0, i11, i14);

        $r7 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r8 = $r7.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        r3 = virtualinvoke $r8.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithTimelineAndMediaItemIndex(androidx.media3.common.Timeline,int)>(r2, i5);

        $r9 = new androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        $r10 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r15 = $r10.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.SessionCommands availableSessionCommands>;

        $r11 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r14 = $r11.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.common.Player$Commands availablePlayerCommands>;

        $r12 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r13 = $r12.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: com.google.common.collect.ImmutableList customLayout>;

        specialinvoke $r9.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: void <init>(androidx.media3.session.PlayerInfo,androidx.media3.session.SessionCommands,androidx.media3.common.Player$Commands,com.google.common.collect.ImmutableList)>(r3, $r15, $r14, $r13);

        r4 = $r9;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void updateStateMaskedControllerInfo(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,java.lang.Integer,java.lang.Integer)>(r4, null, null);

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: boolean isPrepared()>();

        if $z0 == 0 goto label9;

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        r5 = $r16;

        i16 = 0;

     label6:
        $i6 = i11 - i0;

        if i16 >= $i6 goto label7;

        $r20 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo legacyPlayerInfo>;

        $r21 = $r20.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.util.List queue>;

        $r22 = interfaceinvoke $r21.<java.util.List: java.lang.Object get(int)>(i0);

        $r23 = (android.support.v4.media.session.MediaSessionCompat$QueueItem) $r22;

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r23);

        $r26 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r24 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo legacyPlayerInfo>;

        $r25 = $r24.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.util.List queue>;

        $r27 = interfaceinvoke $r25.<java.util.List: java.lang.Object get(int)>(i0);

        $r28 = (android.support.v4.media.session.MediaSessionCompat$QueueItem) $r27;

        $r29 = virtualinvoke $r28.<android.support.v4.media.session.MediaSessionCompat$QueueItem: android.support.v4.media.MediaDescriptionCompat getDescription()>();

        virtualinvoke $r26.<android.support.v4.media.session.MediaControllerCompat: void removeQueueItem(android.support.v4.media.MediaDescriptionCompat)>($r29);

        i16 = i16 + 1;

        goto label6;

     label7:
        i17 = 0;

     label8:
        $i7 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        if i17 >= $i7 goto label9;

        $r17 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(i17);

        r6 = (android.support.v4.media.session.MediaSessionCompat$QueueItem) $r17;

        $r18 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r19 = virtualinvoke r6.<android.support.v4.media.session.MediaSessionCompat$QueueItem: android.support.v4.media.MediaDescriptionCompat getDescription()>();

        $i8 = i17 + i14;

        virtualinvoke $r18.<android.support.v4.media.session.MediaControllerCompat: void addQueueItem(android.support.v4.media.MediaDescriptionCompat,int)>($r19, $i8);

        i17 = i17 + 1;

        goto label8;

     label9:
        return;
    }

    public int getCurrentPeriodIndex()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        int $i0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $i0 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: int getCurrentMediaItemIndex()>();

        return $i0;
    }

    public int getCurrentMediaItemIndex()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo $r1;
        androidx.media3.session.PlayerInfo $r2;
        androidx.media3.session.SessionPositionInfo $r3;
        androidx.media3.common.Player$PositionInfo $r4;
        int $i0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r2 = $r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r3 = $r2.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r4 = $r3.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $i0 = $r4.<androidx.media3.common.Player$PositionInfo: int mediaItemIndex>;

        return $i0;
    }

    public int getPreviousMediaItemIndex()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        return -1;
    }

    public int getNextMediaItemIndex()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        return -1;
    }

    public boolean hasPreviousMediaItem()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $z0 = r0.<androidx.media3.session.MediaControllerImplLegacy: boolean connected>;

        return $z0;
    }

    public boolean hasNextMediaItem()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $z0 = r0.<androidx.media3.session.MediaControllerImplLegacy: boolean connected>;

        return $z0;
    }

    public void seekToPreviousMediaItem()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        android.support.v4.media.session.MediaControllerCompat $r1;
        android.support.v4.media.session.MediaControllerCompat$TransportControls $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r2 = virtualinvoke $r1.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()>();

        virtualinvoke $r2.<android.support.v4.media.session.MediaControllerCompat$TransportControls: void skipToPrevious()>();

        return;
    }

    public void seekToNextMediaItem()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        android.support.v4.media.session.MediaControllerCompat $r1;
        android.support.v4.media.session.MediaControllerCompat$TransportControls $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r2 = virtualinvoke $r1.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()>();

        virtualinvoke $r2.<android.support.v4.media.session.MediaControllerCompat$TransportControls: void skipToNext()>();

        return;
    }

    public void seekToPrevious()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        android.support.v4.media.session.MediaControllerCompat $r1;
        android.support.v4.media.session.MediaControllerCompat$TransportControls $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r2 = virtualinvoke $r1.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()>();

        virtualinvoke $r2.<android.support.v4.media.session.MediaControllerCompat$TransportControls: void skipToPrevious()>();

        return;
    }

    public void seekToNext()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        android.support.v4.media.session.MediaControllerCompat $r1;
        android.support.v4.media.session.MediaControllerCompat$TransportControls $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r2 = virtualinvoke $r1.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()>();

        virtualinvoke $r2.<android.support.v4.media.session.MediaControllerCompat$TransportControls: void skipToNext()>();

        return;
    }

    public long getMaxSeekToPreviousPosition()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        return 0L;
    }

    public int getRepeatMode()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo $r1;
        androidx.media3.session.PlayerInfo $r2;
        int $i0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r2 = $r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $i0 = $r2.<androidx.media3.session.PlayerInfo: int repeatMode>;

        return $i0;
    }

    public void setRepeatMode(int)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        int i0, i1, $i2;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r1, $r4, $r5, $r8, $r9, $r10;
        android.support.v4.media.session.MediaControllerCompat $r2;
        android.support.v4.media.session.MediaControllerCompat$TransportControls $r3;
        androidx.media3.session.PlayerInfo $r6, $r7;
        com.google.common.collect.ImmutableList $r11;
        androidx.media3.common.Player$Commands $r12;
        androidx.media3.session.SessionCommands $r13;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: int getRepeatMode()>();

        if i0 == i1 goto label1;

        $r4 = new androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        $r5 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r6 = $r5.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r7 = virtualinvoke $r6.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithRepeatMode(int)>(i0);

        $r8 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r13 = $r8.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.SessionCommands availableSessionCommands>;

        $r9 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r12 = $r9.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.common.Player$Commands availablePlayerCommands>;

        $r10 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r11 = $r10.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: com.google.common.collect.ImmutableList customLayout>;

        specialinvoke $r4.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: void <init>(androidx.media3.session.PlayerInfo,androidx.media3.session.SessionCommands,androidx.media3.common.Player$Commands,com.google.common.collect.ImmutableList)>($r7, $r13, $r12, $r11);

        r1 = $r4;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void updateStateMaskedControllerInfo(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,java.lang.Integer,java.lang.Integer)>(r1, null, null);

     label1:
        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r3 = virtualinvoke $r2.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()>();

        $i2 = staticinvoke <androidx.media3.session.MediaUtils: int convertToPlaybackStateCompatRepeatMode(int)>(i0);

        virtualinvoke $r3.<android.support.v4.media.session.MediaControllerCompat$TransportControls: void setRepeatMode(int)>($i2);

        return;
    }

    public boolean getShuffleModeEnabled()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo $r1;
        androidx.media3.session.PlayerInfo $r2;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r2 = $r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $z0 = $r2.<androidx.media3.session.PlayerInfo: boolean shuffleModeEnabled>;

        return $z0;
    }

    public void setShuffleModeEnabled(boolean)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        boolean z0, z1;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r1, $r4, $r5, $r8, $r9, $r10;
        android.support.v4.media.session.MediaControllerCompat $r2;
        android.support.v4.media.session.MediaControllerCompat$TransportControls $r3;
        int $i0;
        androidx.media3.session.PlayerInfo $r6, $r7;
        com.google.common.collect.ImmutableList $r11;
        androidx.media3.common.Player$Commands $r12;
        androidx.media3.session.SessionCommands $r13;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        z0 := @parameter0: boolean;

        z1 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: boolean getShuffleModeEnabled()>();

        if z0 == z1 goto label1;

        $r4 = new androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        $r5 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r6 = $r5.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r7 = virtualinvoke $r6.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithShuffleModeEnabled(boolean)>(z0);

        $r8 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r13 = $r8.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.SessionCommands availableSessionCommands>;

        $r9 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r12 = $r9.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.common.Player$Commands availablePlayerCommands>;

        $r10 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r11 = $r10.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: com.google.common.collect.ImmutableList customLayout>;

        specialinvoke $r4.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: void <init>(androidx.media3.session.PlayerInfo,androidx.media3.session.SessionCommands,androidx.media3.common.Player$Commands,com.google.common.collect.ImmutableList)>($r7, $r13, $r12, $r11);

        r1 = $r4;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void updateStateMaskedControllerInfo(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,java.lang.Integer,java.lang.Integer)>(r1, null, null);

     label1:
        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r3 = virtualinvoke $r2.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()>();

        $i0 = staticinvoke <androidx.media3.session.MediaUtils: int convertToPlaybackStateCompatShuffleMode(boolean)>(z0);

        virtualinvoke $r3.<android.support.v4.media.session.MediaControllerCompat$TransportControls: void setShuffleMode(int)>($i0);

        return;
    }

    public androidx.media3.common.VideoSize getVideoSize()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.common.VideoSize $r1;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MCImplLegacy", "Session doesn\'t support getting VideoSize");

        $r1 = <androidx.media3.common.VideoSize: androidx.media3.common.VideoSize UNKNOWN>;

        return $r1;
    }

    public androidx.media3.common.util.Size getSurfaceSize()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.common.util.Size $r1;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MCImplLegacy", "Session doesn\'t support getting VideoSurfaceSize");

        $r1 = <androidx.media3.common.util.Size: androidx.media3.common.util.Size UNKNOWN>;

        return $r1;
    }

    public void clearVideoSurface()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MCImplLegacy", "Session doesn\'t support clearing Surface");

        return;
    }

    public void clearVideoSurface(android.view.Surface)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        android.view.Surface r1;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter0: android.view.Surface;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MCImplLegacy", "Session doesn\'t support clearing Surface");

        return;
    }

    public void setVideoSurface(android.view.Surface)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        android.view.Surface r1;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter0: android.view.Surface;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MCImplLegacy", "Session doesn\'t support setting Surface");

        return;
    }

    public void setVideoSurfaceHolder(android.view.SurfaceHolder)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        android.view.SurfaceHolder r1;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter0: android.view.SurfaceHolder;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MCImplLegacy", "Session doesn\'t support setting SurfaceHolder");

        return;
    }

    public void clearVideoSurfaceHolder(android.view.SurfaceHolder)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        android.view.SurfaceHolder r1;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter0: android.view.SurfaceHolder;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MCImplLegacy", "Session doesn\'t support clearing SurfaceHolder");

        return;
    }

    public void setVideoSurfaceView(android.view.SurfaceView)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        android.view.SurfaceView r1;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter0: android.view.SurfaceView;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MCImplLegacy", "Session doesn\'t support setting SurfaceView");

        return;
    }

    public void clearVideoSurfaceView(android.view.SurfaceView)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        android.view.SurfaceView r1;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter0: android.view.SurfaceView;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MCImplLegacy", "Session doesn\'t support clearing SurfaceView");

        return;
    }

    public void setVideoTextureView(android.view.TextureView)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        android.view.TextureView r1;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter0: android.view.TextureView;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MCImplLegacy", "Session doesn\'t support setting TextureView");

        return;
    }

    public void clearVideoTextureView(android.view.TextureView)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        android.view.TextureView r1;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter0: android.view.TextureView;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MCImplLegacy", "Session doesn\'t support clearing TextureView");

        return;
    }

    public androidx.media3.common.text.CueGroup getCurrentCues()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.common.text.CueGroup $r1;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MCImplLegacy", "Session doesn\'t support getting Cue");

        $r1 = <androidx.media3.common.text.CueGroup: androidx.media3.common.text.CueGroup EMPTY_TIME_ZERO>;

        return $r1;
    }

    public float getVolume()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        return 1.0F;
    }

    public void setVolume(float)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        float f0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        f0 := @parameter0: float;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MCImplLegacy", "Session doesn\'t support setting player volume");

        return;
    }

    public androidx.media3.common.DeviceInfo getDeviceInfo()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo $r1;
        androidx.media3.session.PlayerInfo $r2;
        androidx.media3.common.DeviceInfo $r3;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r2 = $r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r3 = $r2.<androidx.media3.session.PlayerInfo: androidx.media3.common.DeviceInfo deviceInfo>;

        return $r3;
    }

    public int getDeviceVolume()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo $r1;
        androidx.media3.session.PlayerInfo $r2;
        int $i0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r2 = $r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $i0 = $r2.<androidx.media3.session.PlayerInfo: int deviceVolume>;

        return $i0;
    }

    public boolean isDeviceMuted()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo $r1;
        androidx.media3.session.PlayerInfo $r2;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r2 = $r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $z0 = $r2.<androidx.media3.session.PlayerInfo: boolean deviceMuted>;

        return $z0;
    }

    public void setDeviceVolume(int)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        int i0, i1, i2;
        androidx.media3.common.DeviceInfo r1;
        boolean z0;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r2, $r3, $r4, $r7, $r8, $r9;
        androidx.media3.session.PlayerInfo $r5, $r6;
        com.google.common.collect.ImmutableList $r10;
        androidx.media3.common.Player$Commands $r11;
        androidx.media3.session.SessionCommands $r12;
        android.support.v4.media.session.MediaControllerCompat $r13;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.common.DeviceInfo getDeviceInfo()>();

        i1 = r1.<androidx.media3.common.DeviceInfo: int minVolume>;

        i2 = r1.<androidx.media3.common.DeviceInfo: int maxVolume>;

        if i1 > i0 goto label1;

        if i0 > i2 goto label1;

        z0 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: boolean isDeviceMuted()>();

        $r3 = new androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        $r4 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r5 = $r4.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r6 = virtualinvoke $r5.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithDeviceVolume(int,boolean)>(i0, z0);

        $r7 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r12 = $r7.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.SessionCommands availableSessionCommands>;

        $r8 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r11 = $r8.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.common.Player$Commands availablePlayerCommands>;

        $r9 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r10 = $r9.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: com.google.common.collect.ImmutableList customLayout>;

        specialinvoke $r3.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: void <init>(androidx.media3.session.PlayerInfo,androidx.media3.session.SessionCommands,androidx.media3.common.Player$Commands,com.google.common.collect.ImmutableList)>($r6, $r12, $r11, $r10);

        r2 = $r3;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void updateStateMaskedControllerInfo(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,java.lang.Integer,java.lang.Integer)>(r2, null, null);

     label1:
        $r13 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        virtualinvoke $r13.<android.support.v4.media.session.MediaControllerCompat: void setVolumeTo(int,int)>(i0, 1);

        return;
    }

    public void increaseDeviceVolume()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        int i0, i1, $i2, $i3;
        boolean z0;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r1, $r4, $r5, $r8, $r9, $r10;
        androidx.media3.common.DeviceInfo $r2;
        android.support.v4.media.session.MediaControllerCompat $r3;
        androidx.media3.session.PlayerInfo $r6, $r7;
        com.google.common.collect.ImmutableList $r11;
        androidx.media3.common.Player$Commands $r12;
        androidx.media3.session.SessionCommands $r13;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        i0 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: int getDeviceVolume()>();

        $r2 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.common.DeviceInfo getDeviceInfo()>();

        i1 = $r2.<androidx.media3.common.DeviceInfo: int maxVolume>;

        $i2 = i0 + 1;

        if $i2 > i1 goto label1;

        z0 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: boolean isDeviceMuted()>();

        $r4 = new androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        $r5 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r6 = $r5.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $i3 = i0 + 1;

        $r7 = virtualinvoke $r6.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithDeviceVolume(int,boolean)>($i3, z0);

        $r8 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r13 = $r8.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.SessionCommands availableSessionCommands>;

        $r9 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r12 = $r9.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.common.Player$Commands availablePlayerCommands>;

        $r10 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r11 = $r10.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: com.google.common.collect.ImmutableList customLayout>;

        specialinvoke $r4.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: void <init>(androidx.media3.session.PlayerInfo,androidx.media3.session.SessionCommands,androidx.media3.common.Player$Commands,com.google.common.collect.ImmutableList)>($r7, $r13, $r12, $r11);

        r1 = $r4;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void updateStateMaskedControllerInfo(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,java.lang.Integer,java.lang.Integer)>(r1, null, null);

     label1:
        $r3 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        virtualinvoke $r3.<android.support.v4.media.session.MediaControllerCompat: void adjustVolume(int,int)>(1, 1);

        return;
    }

    public void decreaseDeviceVolume()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        int i0, i1, $i2, $i3;
        boolean z0;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r1, $r4, $r5, $r8, $r9, $r10;
        androidx.media3.common.DeviceInfo $r2;
        android.support.v4.media.session.MediaControllerCompat $r3;
        androidx.media3.session.PlayerInfo $r6, $r7;
        com.google.common.collect.ImmutableList $r11;
        androidx.media3.common.Player$Commands $r12;
        androidx.media3.session.SessionCommands $r13;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        i0 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: int getDeviceVolume()>();

        $r2 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.common.DeviceInfo getDeviceInfo()>();

        i1 = $r2.<androidx.media3.common.DeviceInfo: int minVolume>;

        $i2 = i0 - 1;

        if $i2 < i1 goto label1;

        z0 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: boolean isDeviceMuted()>();

        $r4 = new androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        $r5 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r6 = $r5.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $i3 = i0 - 1;

        $r7 = virtualinvoke $r6.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithDeviceVolume(int,boolean)>($i3, z0);

        $r8 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r13 = $r8.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.SessionCommands availableSessionCommands>;

        $r9 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r12 = $r9.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.common.Player$Commands availablePlayerCommands>;

        $r10 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r11 = $r10.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: com.google.common.collect.ImmutableList customLayout>;

        specialinvoke $r4.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: void <init>(androidx.media3.session.PlayerInfo,androidx.media3.session.SessionCommands,androidx.media3.common.Player$Commands,com.google.common.collect.ImmutableList)>($r7, $r13, $r12, $r11);

        r1 = $r4;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void updateStateMaskedControllerInfo(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,java.lang.Integer,java.lang.Integer)>(r1, null, null);

     label1:
        $r3 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        virtualinvoke $r3.<android.support.v4.media.session.MediaControllerCompat: void adjustVolume(int,int)>(-1, 1);

        return;
    }

    public void setDeviceMuted(boolean)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        boolean z0, z1;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r1, $r3, $r4, $r7, $r8, $r9;
        int $i0, i1;
        android.support.v4.media.session.MediaControllerCompat $r2;
        androidx.media3.session.PlayerInfo $r5, $r6;
        com.google.common.collect.ImmutableList $r10;
        androidx.media3.common.Player$Commands $r11;
        androidx.media3.session.SessionCommands $r12;
        byte $b2, b3;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        z0 := @parameter0: boolean;

        $i0 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i0 >= 23 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MCImplLegacy", "Session doesn\'t support setting mute state at API level less than 23");

        return;

     label1:
        z1 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: boolean isDeviceMuted()>();

        if z0 == z1 goto label2;

        i1 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: int getDeviceVolume()>();

        $r3 = new androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        $r4 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r5 = $r4.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r6 = virtualinvoke $r5.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithDeviceVolume(int,boolean)>(i1, z0);

        $r7 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r12 = $r7.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.SessionCommands availableSessionCommands>;

        $r8 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r11 = $r8.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.common.Player$Commands availablePlayerCommands>;

        $r9 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r10 = $r9.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: com.google.common.collect.ImmutableList customLayout>;

        specialinvoke $r3.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: void <init>(androidx.media3.session.PlayerInfo,androidx.media3.session.SessionCommands,androidx.media3.common.Player$Commands,com.google.common.collect.ImmutableList)>($r6, $r12, $r11, $r10);

        r1 = $r3;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void updateStateMaskedControllerInfo(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,java.lang.Integer,java.lang.Integer)>(r1, null, null);

     label2:
        if z0 == 0 goto label3;

        $b2 = -100;

        goto label4;

     label3:
        $b2 = 100;

     label4:
        b3 = $b2;

        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        virtualinvoke $r2.<android.support.v4.media.session.MediaControllerCompat: void adjustVolume(int,int)>(b3, 1);

        return;
    }

    public void setPlayWhenReady(boolean)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        boolean z0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void play()>();

        goto label2;

     label1:
        virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void pause()>();

     label2:
        return;
    }

    public boolean getPlayWhenReady()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo $r1;
        androidx.media3.session.PlayerInfo $r2;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r2 = $r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $z0 = $r2.<androidx.media3.session.PlayerInfo: boolean playWhenReady>;

        return $z0;
    }

    public int getPlaybackSuppressionReason()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        return 0;
    }

    public int getPlaybackState()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo $r1;
        androidx.media3.session.PlayerInfo $r2;
        int $i0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r2 = $r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $i0 = $r2.<androidx.media3.session.PlayerInfo: int playbackState>;

        return $i0;
    }

    public boolean isPlaying()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo $r1;
        androidx.media3.session.PlayerInfo $r2;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r2 = $r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $z0 = $r2.<androidx.media3.session.PlayerInfo: boolean isPlaying>;

        return $z0;
    }

    public boolean isLoading()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        return 0;
    }

    public androidx.media3.common.MediaMetadata getMediaMetadata()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.common.MediaItem r1;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo $r2;
        androidx.media3.session.PlayerInfo $r3;
        androidx.media3.common.MediaMetadata $r4;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r3 = $r2.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        r1 = virtualinvoke $r3.<androidx.media3.session.PlayerInfo: androidx.media3.common.MediaItem getCurrentMediaItem()>();

        if r1 != null goto label1;

        $r4 = <androidx.media3.common.MediaMetadata: androidx.media3.common.MediaMetadata EMPTY>;

        goto label2;

     label1:
        $r4 = r1.<androidx.media3.common.MediaItem: androidx.media3.common.MediaMetadata mediaMetadata>;

     label2:
        return $r4;
    }

    public androidx.media3.common.Player$Commands getAvailableCommands()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo $r1;
        androidx.media3.common.Player$Commands $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r2 = $r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.common.Player$Commands availablePlayerCommands>;

        return $r2;
    }

    public androidx.media3.common.Tracks getCurrentTracks()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.common.Tracks $r1;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = <androidx.media3.common.Tracks: androidx.media3.common.Tracks EMPTY>;

        return $r1;
    }

    public androidx.media3.common.TrackSelectionParameters getTrackSelectionParameters()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.common.TrackSelectionParameters $r1;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = <androidx.media3.common.TrackSelectionParameters: androidx.media3.common.TrackSelectionParameters DEFAULT_WITHOUT_CONTEXT>;

        return $r1;
    }

    public void setTrackSelectionParameters(androidx.media3.common.TrackSelectionParameters)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.common.TrackSelectionParameters r1;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter0: androidx.media3.common.TrackSelectionParameters;

        return;
    }

    public androidx.media3.session.SessionCommands getAvailableSessionCommands()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo $r1;
        androidx.media3.session.SessionCommands $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r2 = $r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.SessionCommands availableSessionCommands>;

        return $r2;
    }

    public android.content.Context getContext()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        android.content.Context $r1;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.content.Context context>;

        return $r1;
    }

    public android.support.v4.media.MediaBrowserCompat getBrowserCompat()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        android.support.v4.media.MediaBrowserCompat $r1;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.MediaBrowserCompat browserCompat>;

        return $r1;
    }

    void onConnected()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo r1, $r2;
        boolean $z0, $z1;
        android.support.v4.media.session.MediaControllerCompat $r3, $r5, $r8, $r10, $r13, $r15, $r16;
        android.support.v4.media.session.MediaControllerCompat$PlaybackInfo $r4;
        android.support.v4.media.session.PlaybackStateCompat $r6, $r7;
        android.support.v4.media.MediaMetadataCompat $r9;
        java.util.List $r11, $r12;
        java.lang.CharSequence $r14;
        int $i0, $i1;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $z0 = r0.<androidx.media3.session.MediaControllerImplLegacy: boolean released>;

        if $z0 != 0 goto label1;

        $z1 = r0.<androidx.media3.session.MediaControllerImplLegacy: boolean connected>;

        if $z1 == 0 goto label2;

     label1:
        return;

     label2:
        r0.<androidx.media3.session.MediaControllerImplLegacy: boolean connected> = 1;

        $r2 = new androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo;

        $r3 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r4 = virtualinvoke $r3.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo()>();

        $r5 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r6 = virtualinvoke $r5.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.PlaybackStateCompat getPlaybackState()>();

        $r7 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.PlaybackStateCompat convertToSafePlaybackStateCompat(android.support.v4.media.session.PlaybackStateCompat)>($r6);

        $r8 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r9 = virtualinvoke $r8.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.MediaMetadataCompat getMetadata()>();

        $r10 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r11 = virtualinvoke $r10.<android.support.v4.media.session.MediaControllerCompat: java.util.List getQueue()>();

        $r12 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: java.util.List convertToNonNullQueueItemList(java.util.List)>($r11);

        $r13 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r14 = virtualinvoke $r13.<android.support.v4.media.session.MediaControllerCompat: java.lang.CharSequence getQueueTitle()>();

        $r15 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $i0 = virtualinvoke $r15.<android.support.v4.media.session.MediaControllerCompat: int getRepeatMode()>();

        $r16 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $i1 = virtualinvoke $r16.<android.support.v4.media.session.MediaControllerCompat: int getShuffleMode()>();

        specialinvoke $r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: void <init>(android.support.v4.media.session.MediaControllerCompat$PlaybackInfo,android.support.v4.media.session.PlaybackStateCompat,android.support.v4.media.MediaMetadataCompat,java.util.List,java.lang.CharSequence,int,int)>($r4, $r7, $r9, $r12, $r14, $i0, $i1);

        r1 = $r2;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void handleNewLegacyParameters(boolean,androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo)>(1, r1);

        return;
    }

    private void connectToSession(android.support.v4.media.session.MediaSessionCompat$Token)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        android.support.v4.media.session.MediaSessionCompat$Token r1;
        androidx.media3.session.MediaController $r2, $r4;
        java.lang.Runnable $r3, $r6;
        android.os.Handler $r5;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter0: android.support.v4.media.session.MediaSessionCompat$Token;

        $r2 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaController getInstance()>();

        $r3 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaControllerImplLegacy,android.support.v4.media.session.MediaSessionCompat$Token)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplLegacy: void lambda$connectToSession$1(android.support.v4.media.session.MediaSessionCompat$Token)>, methodtype: void __METHODTYPE__());

        virtualinvoke $r2.<androidx.media3.session.MediaController: void runOnApplicationLooper(java.lang.Runnable)>($r3);

        $r4 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaController getInstance()>();

        $r5 = $r4.<androidx.media3.session.MediaController: android.os.Handler applicationHandler>;

        $r6 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaControllerImplLegacy)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplLegacy: void lambda$connectToSession$2()>, methodtype: void __METHODTYPE__());

        virtualinvoke $r5.<android.os.Handler: boolean post(java.lang.Runnable)>($r6);

        return;
    }

    private void connectToService()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaController $r1;
        java.lang.Runnable $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaController getInstance()>();

        $r2 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaControllerImplLegacy)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplLegacy: void lambda$connectToService$3()>, methodtype: void __METHODTYPE__());

        virtualinvoke $r1.<androidx.media3.session.MediaController: void runOnApplicationLooper(java.lang.Runnable)>($r2);

        return;
    }

    private boolean isPrepared()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo $r1;
        androidx.media3.session.PlayerInfo $r2;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r2 = $r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $i0 = $r2.<androidx.media3.session.PlayerInfo: int playbackState>;

        if $i0 == 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private boolean hasMedia()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo $r1;
        androidx.media3.session.PlayerInfo $r2;
        androidx.media3.common.Timeline $r3;
        boolean $z0, $z1;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r2 = $r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r3 = $r2.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        $z0 = virtualinvoke $r3.<androidx.media3.common.Timeline: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private void initializeLegacyPlaylist()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.common.Timeline$Window r1, $r5, $r20, $r79;
        androidx.media3.session.QueueTimeline r2;
        int i0, $i1, i9;
        androidx.media3.common.MediaItem r3, $r21;
        java.util.ArrayList r4, $r19;
        boolean $z0, $z1, $z2, $z4, $z5, $z6, $z7, $z8;
        androidx.media3.common.MediaItem$RequestMetadata $r6, $r8, $r14, $r30, $r38, $r39, $r45, $r46, $r54, $r55, $r61, $r62;
        android.net.Uri $r7, $r57, $r64;
        java.lang.String $r9, $r16, $r32, $r41, $r48;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo $r10, $r24, $r34, $r50, $r66, $r72, $r75, $r80;
        androidx.media3.session.PlayerInfo $r11, $r25, $r35, $r51, $r67, $r73, $r76, $r81;
        android.support.v4.media.session.MediaControllerCompat $r12, $r22, $r28, $r36, $r43, $r52, $r59, $r68, $r70;
        android.support.v4.media.session.MediaControllerCompat$TransportControls $r13, $r23, $r29, $r37, $r44, $r53, $r60, $r69, $r71;
        android.os.Bundle $r15, $r17, $r31, $r33, $r40, $r42, $r47, $r49, $r56, $r58, $r63, $r65;
        androidx.media3.common.Player$Commands $r18;
        long $l2, $l4, $l5, $l7;
        byte $b3, $b6, $b8;
        androidx.media3.session.SessionPositionInfo $r26, $r77, $r82;
        androidx.media3.common.Player$PositionInfo $r27, $r78, $r83;
        androidx.media3.common.Timeline $r74;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r5 = new androidx.media3.common.Timeline$Window;

        specialinvoke $r5.<androidx.media3.common.Timeline$Window: void <init>()>();

        r1 = $r5;

        $z0 = specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: boolean isPrepared()>();

        if $z0 == 0 goto label01;

        $z7 = specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: boolean hasMedia()>();

        if $z7 == 0 goto label01;

        $z8 = 1;

        goto label02;

     label01:
        $z8 = 0;

     label02:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z8);

        $r72 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r73 = $r72.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r74 = $r73.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        r2 = (androidx.media3.session.QueueTimeline) $r74;

        $r75 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r76 = $r75.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r77 = $r76.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r78 = $r77.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        i0 = $r78.<androidx.media3.common.Player$PositionInfo: int mediaItemIndex>;

        $r79 = virtualinvoke r2.<androidx.media3.session.QueueTimeline: androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window)>(i0, r1);

        r3 = $r79.<androidx.media3.common.Timeline$Window: androidx.media3.common.MediaItem mediaItem>;

        $l5 = virtualinvoke r2.<androidx.media3.session.QueueTimeline: long getQueueId(int)>(i0);

        $b6 = $l5 cmp -1L;

        if $b6 == 0 goto label04;

        $r66 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r67 = $r66.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $z6 = $r67.<androidx.media3.session.PlayerInfo: boolean playWhenReady>;

        if $z6 == 0 goto label03;

        $r70 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r71 = virtualinvoke $r70.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()>();

        virtualinvoke $r71.<android.support.v4.media.session.MediaControllerCompat$TransportControls: void play()>();

        goto label10;

     label03:
        $r68 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r69 = virtualinvoke $r68.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()>();

        virtualinvoke $r69.<android.support.v4.media.session.MediaControllerCompat$TransportControls: void prepare()>();

        goto label10;

     label04:
        $r6 = r3.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$RequestMetadata requestMetadata>;

        $r7 = $r6.<androidx.media3.common.MediaItem$RequestMetadata: android.net.Uri mediaUri>;

        if $r7 == null goto label06;

        $r50 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r51 = $r50.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $z5 = $r51.<androidx.media3.session.PlayerInfo: boolean playWhenReady>;

        if $z5 == 0 goto label05;

        $r59 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r60 = virtualinvoke $r59.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()>();

        $r61 = r3.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$RequestMetadata requestMetadata>;

        $r64 = $r61.<androidx.media3.common.MediaItem$RequestMetadata: android.net.Uri mediaUri>;

        $r62 = r3.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$RequestMetadata requestMetadata>;

        $r63 = $r62.<androidx.media3.common.MediaItem$RequestMetadata: android.os.Bundle extras>;

        $r65 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: android.os.Bundle getOrEmptyBundle(android.os.Bundle)>($r63);

        virtualinvoke $r60.<android.support.v4.media.session.MediaControllerCompat$TransportControls: void playFromUri(android.net.Uri,android.os.Bundle)>($r64, $r65);

        goto label10;

     label05:
        $r52 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r53 = virtualinvoke $r52.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()>();

        $r54 = r3.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$RequestMetadata requestMetadata>;

        $r57 = $r54.<androidx.media3.common.MediaItem$RequestMetadata: android.net.Uri mediaUri>;

        $r55 = r3.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$RequestMetadata requestMetadata>;

        $r56 = $r55.<androidx.media3.common.MediaItem$RequestMetadata: android.os.Bundle extras>;

        $r58 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: android.os.Bundle getOrEmptyBundle(android.os.Bundle)>($r56);

        virtualinvoke $r53.<android.support.v4.media.session.MediaControllerCompat$TransportControls: void prepareFromUri(android.net.Uri,android.os.Bundle)>($r57, $r58);

        goto label10;

     label06:
        $r8 = r3.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$RequestMetadata requestMetadata>;

        $r9 = $r8.<androidx.media3.common.MediaItem$RequestMetadata: java.lang.String searchQuery>;

        if $r9 == null goto label08;

        $r34 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r35 = $r34.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $z4 = $r35.<androidx.media3.session.PlayerInfo: boolean playWhenReady>;

        if $z4 == 0 goto label07;

        $r43 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r44 = virtualinvoke $r43.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()>();

        $r45 = r3.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$RequestMetadata requestMetadata>;

        $r48 = $r45.<androidx.media3.common.MediaItem$RequestMetadata: java.lang.String searchQuery>;

        $r46 = r3.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$RequestMetadata requestMetadata>;

        $r47 = $r46.<androidx.media3.common.MediaItem$RequestMetadata: android.os.Bundle extras>;

        $r49 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: android.os.Bundle getOrEmptyBundle(android.os.Bundle)>($r47);

        virtualinvoke $r44.<android.support.v4.media.session.MediaControllerCompat$TransportControls: void playFromSearch(java.lang.String,android.os.Bundle)>($r48, $r49);

        goto label10;

     label07:
        $r36 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r37 = virtualinvoke $r36.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()>();

        $r38 = r3.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$RequestMetadata requestMetadata>;

        $r41 = $r38.<androidx.media3.common.MediaItem$RequestMetadata: java.lang.String searchQuery>;

        $r39 = r3.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$RequestMetadata requestMetadata>;

        $r40 = $r39.<androidx.media3.common.MediaItem$RequestMetadata: android.os.Bundle extras>;

        $r42 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: android.os.Bundle getOrEmptyBundle(android.os.Bundle)>($r40);

        virtualinvoke $r37.<android.support.v4.media.session.MediaControllerCompat$TransportControls: void prepareFromSearch(java.lang.String,android.os.Bundle)>($r41, $r42);

        goto label10;

     label08:
        $r10 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r11 = $r10.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $z1 = $r11.<androidx.media3.session.PlayerInfo: boolean playWhenReady>;

        if $z1 == 0 goto label09;

        $r28 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r29 = virtualinvoke $r28.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()>();

        $r32 = r3.<androidx.media3.common.MediaItem: java.lang.String mediaId>;

        $r30 = r3.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$RequestMetadata requestMetadata>;

        $r31 = $r30.<androidx.media3.common.MediaItem$RequestMetadata: android.os.Bundle extras>;

        $r33 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: android.os.Bundle getOrEmptyBundle(android.os.Bundle)>($r31);

        virtualinvoke $r29.<android.support.v4.media.session.MediaControllerCompat$TransportControls: void playFromMediaId(java.lang.String,android.os.Bundle)>($r32, $r33);

        goto label10;

     label09:
        $r12 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r13 = virtualinvoke $r12.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()>();

        $r16 = r3.<androidx.media3.common.MediaItem: java.lang.String mediaId>;

        $r14 = r3.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$RequestMetadata requestMetadata>;

        $r15 = $r14.<androidx.media3.common.MediaItem$RequestMetadata: android.os.Bundle extras>;

        $r17 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: android.os.Bundle getOrEmptyBundle(android.os.Bundle)>($r15);

        virtualinvoke $r13.<android.support.v4.media.session.MediaControllerCompat$TransportControls: void prepareFromMediaId(java.lang.String,android.os.Bundle)>($r16, $r17);

     label10:
        $r80 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r81 = $r80.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r82 = $r81.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r83 = $r82.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $l7 = $r83.<androidx.media3.common.Player$PositionInfo: long positionMs>;

        $b8 = $l7 cmp 0L;

        if $b8 == 0 goto label11;

        $r22 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r23 = virtualinvoke $r22.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()>();

        $r24 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r25 = $r24.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r26 = $r25.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r27 = $r26.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $l4 = $r27.<androidx.media3.common.Player$PositionInfo: long positionMs>;

        virtualinvoke $r23.<android.support.v4.media.session.MediaControllerCompat$TransportControls: void seekTo(long)>($l4);

     label11:
        $r18 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.common.Player$Commands getAvailableCommands()>();

        $z2 = virtualinvoke $r18.<androidx.media3.common.Player$Commands: boolean contains(int)>(20);

        if $z2 == 0 goto label16;

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        r4 = $r19;

        i9 = 0;

     label12:
        $i1 = virtualinvoke r2.<androidx.media3.session.QueueTimeline: int getWindowCount()>();

        if i9 >= $i1 goto label15;

        if i9 == i0 goto label14;

        $l2 = virtualinvoke r2.<androidx.media3.session.QueueTimeline: long getQueueId(int)>(i9);

        $b3 = $l2 cmp -1L;

        if $b3 == 0 goto label13;

        goto label14;

     label13:
        $r20 = virtualinvoke r2.<androidx.media3.session.QueueTimeline: androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window)>(i9, r1);

        $r21 = $r20.<androidx.media3.common.Timeline$Window: androidx.media3.common.MediaItem mediaItem>;

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r21);

     label14:
        i9 = i9 + 1;

        goto label12;

     label15:
        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void addQueueItems(java.util.List,int)>(r4, 0);

     label16:
        return;
    }

    private void addQueueItems(java.util.List, int)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        java.util.List r1;
        int i0, $i1, i2;
        java.util.ArrayList r2, $r8;
        java.util.concurrent.atomic.AtomicInteger r3, $r9;
        java.lang.Runnable r4;
        androidx.media3.common.MediaItem r5;
        androidx.media3.common.MediaMetadata r6;
        com.google.common.util.concurrent.ListenableFuture r7;
        java.lang.Object $r10;
        byte[] $r11, $r12;
        androidx.media3.session.BitmapLoader $r13;
        androidx.media3.session.MediaController $r14;
        android.os.Handler $r15;
        java.util.concurrent.Executor $r17;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r2 = $r8;

        $r9 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r9.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        r3 = $r9;

        r4 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaControllerImplLegacy,java.util.concurrent.atomic.AtomicInteger,java.util.List,java.util.List,int)>(r0, r3, r1, r2, i0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplLegacy: void lambda$addQueueItems$4(java.util.concurrent.atomic.AtomicInteger,java.util.List,java.util.List,int)>, methodtype: void __METHODTYPE__());

        i2 = 0;

     label1:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if i2 >= $i1 goto label4;

        $r10 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        r5 = (androidx.media3.common.MediaItem) $r10;

        r6 = r5.<androidx.media3.common.MediaItem: androidx.media3.common.MediaMetadata mediaMetadata>;

        $r11 = r6.<androidx.media3.common.MediaMetadata: byte[] artworkData>;

        if $r11 != null goto label2;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(null);

        interfaceinvoke r4.<java.lang.Runnable: void run()>();

        goto label3;

     label2:
        $r13 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.BitmapLoader bitmapLoader>;

        $r12 = r6.<androidx.media3.common.MediaMetadata: byte[] artworkData>;

        r7 = interfaceinvoke $r13.<androidx.media3.session.BitmapLoader: com.google.common.util.concurrent.ListenableFuture decodeBitmap(byte[])>($r12);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r7);

        $r14 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaController getInstance()>();

        $r15 = $r14.<androidx.media3.session.MediaController: android.os.Handler applicationHandler>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r15);

        $r17 = dynamicinvoke "execute" <java.util.concurrent.Executor (android.os.Handler)>($r15) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Runnable), methodhandle: "REF_INVOKE_VIRTUAL" <android.os.Handler: boolean post(java.lang.Runnable)>, methodtype: void __METHODTYPE__(java.lang.Runnable));

        interfaceinvoke r7.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>(r4, $r17);

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return;
    }

    private void handleBitmapFuturesAllCompletedAndAddQueueItems(java.util.List, java.util.List, int)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        java.util.List r1, r2;
        int i0, $i1, i2, $i3;
        com.google.common.util.concurrent.ListenableFuture r3;
        java.lang.Throwable r4, $r7;
        java.lang.Object $r5, $r6, $r10;
        android.graphics.Bitmap r8;
        android.support.v4.media.session.MediaControllerCompat $r9;
        androidx.media3.common.MediaItem $r11;
        android.support.v4.media.MediaDescriptionCompat $r12;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        i2 = 0;

     label1:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if i2 >= $i1 goto label6;

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        r3 = (com.google.common.util.concurrent.ListenableFuture) $r5;

        r8 = null;

        if r3 == null goto label5;

     label2:
        $r6 = staticinvoke <com.google.common.util.concurrent.Futures: java.lang.Object getDone(java.util.concurrent.Future)>(r3);

        r8 = (android.graphics.Bitmap) $r6;

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        r4 = $r7;

        staticinvoke <androidx.media3.common.util.Log: void d(java.lang.String,java.lang.String)>("MCImplLegacy", "Failed to get bitmap");

     label5:
        $r9 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r10 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i2);

        $r11 = (androidx.media3.common.MediaItem) $r10;

        $r12 = staticinvoke <androidx.media3.session.MediaUtils: android.support.v4.media.MediaDescriptionCompat convertToMediaDescriptionCompat(androidx.media3.common.MediaItem,android.graphics.Bitmap)>($r11, r8);

        $i3 = i0 + i2;

        virtualinvoke $r9.<android.support.v4.media.session.MediaControllerCompat: void addQueueItem(android.support.v4.media.MediaDescriptionCompat,int)>($r12, $i3);

        i2 = i2 + 1;

        goto label1;

     label6:
        return;

        catch java.util.concurrent.CancellationException from label2 to label3 with label4;
        catch java.util.concurrent.ExecutionException from label2 to label3 with label4;
    }

    private void handleNewLegacyParameters(boolean, androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        boolean z0, $z1, $z2, $z3;
        androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo r1, $r5, $r10;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r2, $r6, $r11;
        android.util.Pair r3;
        android.support.v4.media.session.MediaControllerCompat $r4, $r7, $r8;
        long $l0, $l2, $l3;
        int $i1;
        androidx.media3.session.MediaController $r9, $r12;
        java.lang.Object $r13, $r14;
        java.lang.Integer $r15, $r16;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        z0 := @parameter0: boolean;

        r1 := @parameter1: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo;

        $z1 = r0.<androidx.media3.session.MediaControllerImplLegacy: boolean released>;

        if $z1 != 0 goto label1;

        $z2 = r0.<androidx.media3.session.MediaControllerImplLegacy: boolean connected>;

        if $z2 != 0 goto label2;

     label1:
        return;

     label2:
        $r5 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo legacyPlayerInfo>;

        $r6 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r4 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $l0 = virtualinvoke $r4.<android.support.v4.media.session.MediaControllerCompat: long getFlags()>();

        $r7 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $z3 = virtualinvoke $r7.<android.support.v4.media.session.MediaControllerCompat: boolean isSessionReady()>();

        $r8 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $i1 = virtualinvoke $r8.<android.support.v4.media.session.MediaControllerCompat: int getRatingType()>();

        $r9 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaController getInstance()>();

        $l2 = virtualinvoke $r9.<androidx.media3.session.MediaController: long getTimeDiffMs()>();

        r2 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo buildNewControllerInfo(boolean,androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo,androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo,long,boolean,int,long)>(z0, $r5, $r6, r1, $l0, $z3, $i1, $l2);

        $r10 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo legacyPlayerInfo>;

        $r11 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r12 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaController getInstance()>();

        $l3 = virtualinvoke $r12.<androidx.media3.session.MediaController: long getTimeDiffMs()>();

        r3 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: android.util.Pair calculateDiscontinuityAndTransitionReason(androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo,androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo,androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,long)>($r10, $r11, r1, r2, $l3);

        $r13 = r3.<android.util.Pair: java.lang.Object first>;

        $r16 = (java.lang.Integer) $r13;

        $r14 = r3.<android.util.Pair: java.lang.Object second>;

        $r15 = (java.lang.Integer) $r14;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void updateControllerInfo(boolean,androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo,androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,java.lang.Integer,java.lang.Integer)>(z0, r1, r2, $r16, $r15);

        return;
    }

    private void updateStateMaskedControllerInfo(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo, java.lang.Integer, java.lang.Integer)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r1;
        java.lang.Integer r2, r3;
        androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo $r4;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter0: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        r2 := @parameter1: java.lang.Integer;

        r3 := @parameter2: java.lang.Integer;

        $r4 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo legacyPlayerInfo>;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void updateControllerInfo(boolean,androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo,androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,java.lang.Integer,java.lang.Integer)>(0, $r4, r1, r2, r3);

        return;
    }

    private void updateControllerInfo(boolean, androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo, androidx.media3.session.MediaControllerImplLegacy$ControllerInfo, java.lang.Integer, java.lang.Integer)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18;
        androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo r1, r5, $r8, $r9, $r93;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r2, r6;
        java.lang.Integer r3, r4;
        androidx.media3.common.PlaybackException r7;
        androidx.media3.session.PlayerInfo $r10, $r11, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r28, $r29, $r30, $r31, $r32, $r33, $r36, $r37, $r40, $r41, $r55, $r56;
        androidx.media3.common.Timeline $r12, $r13;
        java.lang.CharSequence $r14, $r15;
        android.support.v4.media.session.PlaybackStateCompat $r16, $r17, $r75;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        androidx.media3.common.PlaybackParameters $r26, $r27;
        androidx.media3.common.AudioAttributes $r34, $r35;
        androidx.media3.common.DeviceInfo $r38, $r39;
        androidx.media3.common.util.ListenerSet $r42, $r48, $r53, $r57, $r59, $r61, $r63, $r65, $r67, $r69, $r71, $r73, $r76, $r78, $r80, $r82, $r84, $r86;
        androidx.media3.common.util.ListenerSet$Event $r43, $r54, $r58, $r60, $r62, $r64, $r66, $r68, $r70, $r72, $r74, $r77, $r79, $r81, $r83, $r85, $r87;
        androidx.media3.session.SessionCommands $r44, $r45;
        com.google.common.collect.ImmutableList $r46, $r47, $r89, $r90;
        androidx.media3.session.MediaController $r49, $r51, $r88, $r91;
        androidx.media3.common.util.Consumer $r50, $r52, $r92;
        android.support.v4.media.MediaMetadataCompat $r94, $r95;
        androidx.media3.common.Player$Commands $r96, $r97;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        z0 := @parameter0: boolean;

        r1 := @parameter1: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo;

        r2 := @parameter2: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        r3 := @parameter3: java.lang.Integer;

        r4 := @parameter4: java.lang.Integer;

        r5 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo legacyPlayerInfo>;

        r6 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r8 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo legacyPlayerInfo>;

        if $r8 == r1 goto label01;

        $r93 = new androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo;

        specialinvoke $r93.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: void <init>(androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo)>(r1);

        r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo legacyPlayerInfo> = $r93;

     label01:
        $r9 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo legacyPlayerInfo>;

        r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo pendingLegacyPlayerInfo> = $r9;

        r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo> = r2;

        if z0 == 0 goto label03;

        $r88 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaController getInstance()>();

        virtualinvoke $r88.<androidx.media3.session.MediaController: void notifyAccepted()>();

        $r90 = r6.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: com.google.common.collect.ImmutableList customLayout>;

        $r89 = r2.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: com.google.common.collect.ImmutableList customLayout>;

        $z17 = virtualinvoke $r90.<com.google.common.collect.ImmutableList: boolean equals(java.lang.Object)>($r89);

        if $z17 != 0 goto label02;

        $r91 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaController getInstance()>();

        $r92 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer (androidx.media3.session.MediaControllerImplLegacy,androidx.media3.session.MediaControllerImplLegacy$ControllerInfo)>(r0, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplLegacy: void lambda$updateControllerInfo$5(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,androidx.media3.session.MediaController$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaController$Listener));

        virtualinvoke $r91.<androidx.media3.session.MediaController: void notifyControllerListener(androidx.media3.common.util.Consumer)>($r92);

     label02:
        return;

     label03:
        $r10 = r6.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r13 = $r10.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        $r11 = r2.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r12 = $r11.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        $z1 = virtualinvoke $r13.<androidx.media3.common.Timeline: boolean equals(java.lang.Object)>($r12);

        if $z1 != 0 goto label04;

        $r86 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.common.util.ListenerSet listeners>;

        $r87 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.MediaControllerImplLegacy$ControllerInfo)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplLegacy: void lambda$updateControllerInfo$6(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r86.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(0, $r87);

     label04:
        $r15 = r5.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.lang.CharSequence queueTitle>;

        $r14 = r1.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.lang.CharSequence queueTitle>;

        $z2 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r15, $r14);

        if $z2 != 0 goto label05;

        $r84 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.common.util.ListenerSet listeners>;

        $r85 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.MediaControllerImplLegacy$ControllerInfo)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplLegacy: void lambda$updateControllerInfo$7(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r84.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(15, $r85);

     label05:
        if r3 == null goto label06;

        $r82 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.common.util.ListenerSet listeners>;

        $r83 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,java.lang.Integer)>(r6, r2, r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplLegacy: void lambda$updateControllerInfo$8(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,java.lang.Integer,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r82.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(11, $r83);

     label06:
        if r4 == null goto label07;

        $r80 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.common.util.ListenerSet listeners>;

        $r81 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,java.lang.Integer)>(r2, r4) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplLegacy: void lambda$updateControllerInfo$9(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,java.lang.Integer,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r80.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(1, $r81);

     label07:
        $r17 = r5.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.PlaybackStateCompat playbackStateCompat>;

        $r16 = r1.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.PlaybackStateCompat playbackStateCompat>;

        $z3 = staticinvoke <androidx.media3.session.MediaUtils: boolean areEqualError(android.support.v4.media.session.PlaybackStateCompat,android.support.v4.media.session.PlaybackStateCompat)>($r17, $r16);

        if $z3 != 0 goto label08;

        $r75 = r1.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.PlaybackStateCompat playbackStateCompat>;

        r7 = staticinvoke <androidx.media3.session.MediaUtils: androidx.media3.common.PlaybackException convertToPlaybackException(android.support.v4.media.session.PlaybackStateCompat)>($r75);

        $r76 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.common.util.ListenerSet listeners>;

        $r77 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.common.PlaybackException)>(r7) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplLegacy: void lambda$updateControllerInfo$10(androidx.media3.common.PlaybackException,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r76.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(10, $r77);

        if r7 == null goto label08;

        $r78 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.common.util.ListenerSet listeners>;

        $r79 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.common.PlaybackException)>(r7) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplLegacy: void lambda$updateControllerInfo$11(androidx.media3.common.PlaybackException,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r78.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(10, $r79);

     label08:
        $r94 = r5.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.MediaMetadataCompat mediaMetadataCompat>;

        $r95 = r1.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.MediaMetadataCompat mediaMetadataCompat>;

        if $r94 == $r95 goto label09;

        $r73 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.common.util.ListenerSet listeners>;

        $r74 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.MediaControllerImplLegacy)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplLegacy: void lambda$updateControllerInfo$12(androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r73.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(14, $r74);

     label09:
        $r18 = r6.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $i1 = $r18.<androidx.media3.session.PlayerInfo: int playbackState>;

        $r19 = r2.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $i0 = $r19.<androidx.media3.session.PlayerInfo: int playbackState>;

        if $i1 == $i0 goto label10;

        $r71 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.common.util.ListenerSet listeners>;

        $r72 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.MediaControllerImplLegacy$ControllerInfo)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplLegacy: void lambda$updateControllerInfo$13(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r71.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(4, $r72);

     label10:
        $r20 = r6.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $z5 = $r20.<androidx.media3.session.PlayerInfo: boolean playWhenReady>;

        $r21 = r2.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $z4 = $r21.<androidx.media3.session.PlayerInfo: boolean playWhenReady>;

        if $z5 == $z4 goto label11;

        $r69 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.common.util.ListenerSet listeners>;

        $r70 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.MediaControllerImplLegacy$ControllerInfo)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplLegacy: void lambda$updateControllerInfo$14(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r69.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(5, $r70);

     label11:
        $r22 = r6.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $z7 = $r22.<androidx.media3.session.PlayerInfo: boolean isPlaying>;

        $r23 = r2.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $z6 = $r23.<androidx.media3.session.PlayerInfo: boolean isPlaying>;

        if $z7 == $z6 goto label12;

        $r67 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.common.util.ListenerSet listeners>;

        $r68 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.MediaControllerImplLegacy$ControllerInfo)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplLegacy: void lambda$updateControllerInfo$15(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r67.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(7, $r68);

     label12:
        $r24 = r6.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r27 = $r24.<androidx.media3.session.PlayerInfo: androidx.media3.common.PlaybackParameters playbackParameters>;

        $r25 = r2.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r26 = $r25.<androidx.media3.session.PlayerInfo: androidx.media3.common.PlaybackParameters playbackParameters>;

        $z8 = virtualinvoke $r27.<androidx.media3.common.PlaybackParameters: boolean equals(java.lang.Object)>($r26);

        if $z8 != 0 goto label13;

        $r65 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.common.util.ListenerSet listeners>;

        $r66 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.MediaControllerImplLegacy$ControllerInfo)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplLegacy: void lambda$updateControllerInfo$16(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r65.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(12, $r66);

     label13:
        $r28 = r6.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $i3 = $r28.<androidx.media3.session.PlayerInfo: int repeatMode>;

        $r29 = r2.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $i2 = $r29.<androidx.media3.session.PlayerInfo: int repeatMode>;

        if $i3 == $i2 goto label14;

        $r63 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.common.util.ListenerSet listeners>;

        $r64 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.MediaControllerImplLegacy$ControllerInfo)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplLegacy: void lambda$updateControllerInfo$17(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r63.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(8, $r64);

     label14:
        $r30 = r6.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $z10 = $r30.<androidx.media3.session.PlayerInfo: boolean shuffleModeEnabled>;

        $r31 = r2.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $z9 = $r31.<androidx.media3.session.PlayerInfo: boolean shuffleModeEnabled>;

        if $z10 == $z9 goto label15;

        $r61 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.common.util.ListenerSet listeners>;

        $r62 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.MediaControllerImplLegacy$ControllerInfo)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplLegacy: void lambda$updateControllerInfo$18(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r61.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(9, $r62);

     label15:
        $r32 = r6.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r35 = $r32.<androidx.media3.session.PlayerInfo: androidx.media3.common.AudioAttributes audioAttributes>;

        $r33 = r2.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r34 = $r33.<androidx.media3.session.PlayerInfo: androidx.media3.common.AudioAttributes audioAttributes>;

        $z11 = virtualinvoke $r35.<androidx.media3.common.AudioAttributes: boolean equals(java.lang.Object)>($r34);

        if $z11 != 0 goto label16;

        $r59 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.common.util.ListenerSet listeners>;

        $r60 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.MediaControllerImplLegacy$ControllerInfo)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplLegacy: void lambda$updateControllerInfo$19(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r59.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(20, $r60);

     label16:
        $r36 = r6.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r39 = $r36.<androidx.media3.session.PlayerInfo: androidx.media3.common.DeviceInfo deviceInfo>;

        $r37 = r2.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r38 = $r37.<androidx.media3.session.PlayerInfo: androidx.media3.common.DeviceInfo deviceInfo>;

        $z12 = virtualinvoke $r39.<androidx.media3.common.DeviceInfo: boolean equals(java.lang.Object)>($r38);

        if $z12 != 0 goto label17;

        $r57 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.common.util.ListenerSet listeners>;

        $r58 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.MediaControllerImplLegacy$ControllerInfo)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplLegacy: void lambda$updateControllerInfo$20(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r57.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(29, $r58);

     label17:
        $r40 = r6.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $i5 = $r40.<androidx.media3.session.PlayerInfo: int deviceVolume>;

        $r41 = r2.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $i4 = $r41.<androidx.media3.session.PlayerInfo: int deviceVolume>;

        if $i5 != $i4 goto label18;

        $r55 = r6.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $z16 = $r55.<androidx.media3.session.PlayerInfo: boolean deviceMuted>;

        $r56 = r2.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $z15 = $r56.<androidx.media3.session.PlayerInfo: boolean deviceMuted>;

        if $z16 == $z15 goto label19;

     label18:
        $r42 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.common.util.ListenerSet listeners>;

        $r43 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.MediaControllerImplLegacy$ControllerInfo)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplLegacy: void lambda$updateControllerInfo$21(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r42.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(30, $r43);

     label19:
        $r96 = r6.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.common.Player$Commands availablePlayerCommands>;

        $r97 = r2.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.common.Player$Commands availablePlayerCommands>;

        $z18 = virtualinvoke $r96.<androidx.media3.common.Player$Commands: boolean equals(java.lang.Object)>($r97);

        if $z18 != 0 goto label20;

        $r53 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.common.util.ListenerSet listeners>;

        $r54 = dynamicinvoke "invoke" <androidx.media3.common.util.ListenerSet$Event (androidx.media3.session.MediaControllerImplLegacy$ControllerInfo)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaControllerImplLegacy: void lambda$updateControllerInfo$22(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,androidx.media3.common.Player$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.common.Player$Listener));

        virtualinvoke $r53.<androidx.media3.common.util.ListenerSet: void queueEvent(int,androidx.media3.common.util.ListenerSet$Event)>(13, $r54);

     label20:
        $r45 = r6.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.SessionCommands availableSessionCommands>;

        $r44 = r2.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.SessionCommands availableSessionCommands>;

        $z13 = virtualinvoke $r45.<androidx.media3.session.SessionCommands: boolean equals(java.lang.Object)>($r44);

        if $z13 != 0 goto label21;

        $r51 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaController getInstance()>();

        $r52 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer (androidx.media3.session.MediaControllerImplLegacy,androidx.media3.session.MediaControllerImplLegacy$ControllerInfo)>(r0, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplLegacy: void lambda$updateControllerInfo$23(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,androidx.media3.session.MediaController$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaController$Listener));

        virtualinvoke $r51.<androidx.media3.session.MediaController: void notifyControllerListener(androidx.media3.common.util.Consumer)>($r52);

     label21:
        $r47 = r6.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: com.google.common.collect.ImmutableList customLayout>;

        $r46 = r2.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: com.google.common.collect.ImmutableList customLayout>;

        $z14 = virtualinvoke $r47.<com.google.common.collect.ImmutableList: boolean equals(java.lang.Object)>($r46);

        if $z14 != 0 goto label22;

        $r49 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaController getInstance()>();

        $r50 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer (androidx.media3.session.MediaControllerImplLegacy,androidx.media3.session.MediaControllerImplLegacy$ControllerInfo)>(r0, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplLegacy: void lambda$updateControllerInfo$24(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo,androidx.media3.session.MediaController$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaController$Listener));

        virtualinvoke $r49.<androidx.media3.session.MediaController: void notifyControllerListener(androidx.media3.common.util.Consumer)>($r50);

     label22:
        $r48 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.common.util.ListenerSet listeners>;

        virtualinvoke $r48.<androidx.media3.common.util.ListenerSet: void flushEvents()>();

        return;
    }

    private static void ignoreFuture(java.util.concurrent.Future)
    {
        java.util.concurrent.Future r0;

        r0 := @parameter0: java.util.concurrent.Future;

        return;
    }

    private static androidx.media3.session.MediaControllerImplLegacy$ControllerInfo buildNewControllerInfo(boolean, androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo, androidx.media3.session.MediaControllerImplLegacy$ControllerInfo, androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo, long, boolean, int, long)
    {
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, $z10, $z11, $z12, $z13, z14;
        androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo r0, r2;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r1, $r48;
        long l0, l2, l4, l5, l6, l7, l8, l10, l13, l14;
        int i1, i3, i9, i11, i12, $i16, $i17, $i18, i19, $i20, i21;
        androidx.media3.common.MediaMetadata r3, r77, $r78, $r82;
        androidx.media3.common.Player$Commands r4, $r24, $r25, $r85;
        androidx.media3.common.PlaybackParameters r5;
        androidx.media3.common.AudioAttributes r6;
        androidx.media3.common.DeviceInfo r7;
        java.util.List $r8, $r9, $r63, $r72, $r75;
        androidx.media3.session.PlayerInfo $r10, $r17, $r46, $r47, $r53, $r68, $r71;
        androidx.media3.common.Timeline $r11;
        androidx.media3.session.QueueTimeline $r12, $r73, r74;
        android.support.v4.media.MediaMetadataCompat $r13, $r14, $r27, $r28, $r30, $r32, $r34, $r36, $r40, $r57, $r59, $r67, $r76;
        android.support.v4.media.session.PlaybackStateCompat $r15, $r16, $r21, $r22, $r26, $r29, $r31, $r33, $r35, $r37, $r39, $r41, $r42, $r49, $r51, $r52;
        byte $b15;
        java.lang.CharSequence $r18, $r19, $r20;
        android.support.v4.media.session.MediaControllerCompat$PlaybackInfo $r23, $r38, $r43, $r44, $r45, $r50;
        androidx.media3.common.MediaItem $r54, $r56, r79, r80, r81;
        java.lang.Object $r55, $r61, $r64;
        java.lang.String $r58;
        androidx.media3.common.MediaItem$Builder $r60, $r62;
        android.support.v4.media.session.MediaSessionCompat$QueueItem $r65;
        android.support.v4.media.MediaDescriptionCompat $r66;
        androidx.media3.session.SessionPositionInfo $r69;
        androidx.media3.common.Player$PositionInfo $r70;
        androidx.media3.session.SessionCommands r83;
        com.google.common.collect.ImmutableList r84;
        androidx.media3.common.PlaybackException r86;

        z0 := @parameter0: boolean;

        r0 := @parameter1: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo;

        r1 := @parameter2: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        r2 := @parameter3: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo;

        l0 := @parameter4: long;

        z1 := @parameter5: boolean;

        i1 := @parameter6: int;

        l2 := @parameter7: long;

        $r9 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.util.List queue>;

        $r8 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.util.List queue>;

        if $r9 == $r8 goto label01;

        $z10 = 1;

        goto label02;

     label01:
        $z10 = 0;

     label02:
        z3 = $z10;

        if z3 == 0 goto label03;

        $r72 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.util.List queue>;

        $r73 = staticinvoke <androidx.media3.session.QueueTimeline: androidx.media3.session.QueueTimeline create(java.util.List)>($r72);

        goto label04;

     label03:
        $r73 = new androidx.media3.session.QueueTimeline;

        $r10 = r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r11 = $r10.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        $r12 = (androidx.media3.session.QueueTimeline) $r11;

        specialinvoke $r73.<androidx.media3.session.QueueTimeline: void <init>(androidx.media3.session.QueueTimeline)>($r12);

     label04:
        r74 = $r73;

        $r14 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.MediaMetadataCompat mediaMetadataCompat>;

        $r13 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.MediaMetadataCompat mediaMetadataCompat>;

        if $r14 != $r13 goto label05;

        if z0 == 0 goto label06;

     label05:
        $z11 = 1;

        goto label07;

     label06:
        $z11 = 0;

     label07:
        z4 = $z11;

        $r15 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.PlaybackStateCompat playbackStateCompat>;

        l4 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: long getActiveQueueId(android.support.v4.media.session.PlaybackStateCompat)>($r15);

        $r16 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.PlaybackStateCompat playbackStateCompat>;

        l5 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: long getActiveQueueId(android.support.v4.media.session.PlaybackStateCompat)>($r16);

        $b15 = l4 cmp l5;

        if $b15 != 0 goto label08;

        if z0 == 0 goto label09;

     label08:
        $z12 = 1;

        goto label10;

     label09:
        $z12 = 0;

     label10:
        z5 = $z12;

        if z4 != 0 goto label11;

        if z5 != 0 goto label11;

        if z3 == 0 goto label23;

     label11:
        $r75 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.util.List queue>;

        i19 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: int findQueueItemIndex(java.util.List,long)>($r75, l5);

        $r76 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.MediaMetadataCompat mediaMetadataCompat>;

        if $r76 == null goto label12;

        $z13 = 1;

        goto label13;

     label12:
        $z13 = 0;

     label13:
        z14 = $z13;

        if z14 == 0 goto label14;

        if z4 == 0 goto label14;

        $r67 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.MediaMetadataCompat mediaMetadataCompat>;

        r77 = staticinvoke <androidx.media3.session.MediaUtils: androidx.media3.common.MediaMetadata convertToMediaMetadata(android.support.v4.media.MediaMetadataCompat,int)>($r67, i1);

        goto label18;

     label14:
        if z14 != 0 goto label17;

        if z5 == 0 goto label17;

        if i19 != -1 goto label15;

        $r78 = <androidx.media3.common.MediaMetadata: androidx.media3.common.MediaMetadata EMPTY>;

        goto label16;

     label15:
        $r63 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.util.List queue>;

        $r64 = interfaceinvoke $r63.<java.util.List: java.lang.Object get(int)>(i19);

        $r65 = (android.support.v4.media.session.MediaSessionCompat$QueueItem) $r64;

        $r66 = virtualinvoke $r65.<android.support.v4.media.session.MediaSessionCompat$QueueItem: android.support.v4.media.MediaDescriptionCompat getDescription()>();

        $r78 = staticinvoke <androidx.media3.session.MediaUtils: androidx.media3.common.MediaMetadata convertToMediaMetadata(android.support.v4.media.MediaDescriptionCompat,int)>($r66, i1);

     label16:
        r77 = $r78;

        goto label18;

     label17:
        $r17 = r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        r77 = $r17.<androidx.media3.session.PlayerInfo: androidx.media3.common.MediaMetadata mediaMetadata>;

     label18:
        if i19 != -1 goto label20;

        if z4 == 0 goto label20;

        if z14 == 0 goto label19;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MCImplLegacy", "Adding a fake MediaItem at the end of the list because there\'s no QueueItem with the active queue id and current Timeline should have currently playing MediaItem.");

        $r59 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.MediaMetadataCompat mediaMetadataCompat>;

        r79 = staticinvoke <androidx.media3.session.MediaUtils: androidx.media3.common.MediaItem convertToMediaItem(android.support.v4.media.MediaMetadataCompat,int)>($r59, i1);

        $r60 = virtualinvoke r79.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$Builder buildUpon()>();

        $r61 = new java.lang.Object;

        specialinvoke $r61.<java.lang.Object: void <init>()>();

        $r62 = virtualinvoke $r60.<androidx.media3.common.MediaItem$Builder: androidx.media3.common.MediaItem$Builder setTag(java.lang.Object)>($r61);

        r80 = virtualinvoke $r62.<androidx.media3.common.MediaItem$Builder: androidx.media3.common.MediaItem build()>();

        r74 = virtualinvoke r74.<androidx.media3.session.QueueTimeline: androidx.media3.session.QueueTimeline copyWithFakeMediaItem(androidx.media3.common.MediaItem)>(r80);

        $i18 = virtualinvoke r74.<androidx.media3.session.QueueTimeline: int getWindowCount()>();

        i19 = $i18 - 1;

        goto label22;

     label19:
        r74 = virtualinvoke r74.<androidx.media3.session.QueueTimeline: androidx.media3.session.QueueTimeline copyWithFakeMediaItem(androidx.media3.common.MediaItem)>(null);

        i19 = 0;

        goto label22;

     label20:
        if i19 == -1 goto label21;

        r74 = virtualinvoke r74.<androidx.media3.session.QueueTimeline: androidx.media3.session.QueueTimeline copyWithFakeMediaItem(androidx.media3.common.MediaItem)>(null);

        if z14 == 0 goto label22;

        $r54 = virtualinvoke r74.<androidx.media3.session.QueueTimeline: androidx.media3.common.MediaItem getMediaItemAt(int)>(i19);

        $r55 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r54);

        $r56 = (androidx.media3.common.MediaItem) $r55;

        $r58 = $r56.<androidx.media3.common.MediaItem: java.lang.String mediaId>;

        $r57 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.MediaMetadataCompat mediaMetadataCompat>;

        r81 = staticinvoke <androidx.media3.session.MediaUtils: androidx.media3.common.MediaItem convertToMediaItem(java.lang.String,android.support.v4.media.MediaMetadataCompat,int)>($r58, $r57, i1);

        r74 = virtualinvoke r74.<androidx.media3.session.QueueTimeline: androidx.media3.session.QueueTimeline copyWithNewMediaItem(int,androidx.media3.common.MediaItem)>(i19, r81);

        goto label22;

     label21:
        i19 = 0;

     label22:
        goto label24;

     label23:
        $r68 = r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r69 = $r68.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r70 = $r69.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        i19 = $r70.<androidx.media3.common.Player$PositionInfo: int mediaItemIndex>;

        $r71 = r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        r77 = $r71.<androidx.media3.session.PlayerInfo: androidx.media3.common.MediaMetadata mediaMetadata>;

     label24:
        $r19 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.lang.CharSequence queueTitle>;

        $r18 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.lang.CharSequence queueTitle>;

        if $r19 != $r18 goto label25;

        $r53 = r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r82 = $r53.<androidx.media3.session.PlayerInfo: androidx.media3.common.MediaMetadata playlistMetadata>;

        goto label26;

     label25:
        $r20 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.lang.CharSequence queueTitle>;

        $r82 = staticinvoke <androidx.media3.session.MediaUtils: androidx.media3.common.MediaMetadata convertToMediaMetadata(java.lang.CharSequence)>($r20);

     label26:
        r3 = $r82;

        $i16 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: int repeatMode>;

        i3 = staticinvoke <androidx.media3.session.MediaUtils: int convertToRepeatMode(int)>($i16);

        $i17 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: int shuffleMode>;

        z2 = staticinvoke <androidx.media3.session.MediaUtils: boolean convertToShuffleModeEnabled(int)>($i17);

        $r22 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.PlaybackStateCompat playbackStateCompat>;

        $r21 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.PlaybackStateCompat playbackStateCompat>;

        if $r22 == $r21 goto label27;

        $r51 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.PlaybackStateCompat playbackStateCompat>;

        r83 = staticinvoke <androidx.media3.session.MediaUtils: androidx.media3.session.SessionCommands convertToSessionCommands(android.support.v4.media.session.PlaybackStateCompat,boolean)>($r51, z1);

        $r52 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.PlaybackStateCompat playbackStateCompat>;

        r84 = staticinvoke <androidx.media3.session.MediaUtils: com.google.common.collect.ImmutableList convertToCustomLayout(android.support.v4.media.session.PlaybackStateCompat)>($r52);

        goto label28;

     label27:
        r83 = r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.SessionCommands availableSessionCommands>;

        r84 = r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: com.google.common.collect.ImmutableList customLayout>;

     label28:
        $r23 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.MediaControllerCompat$PlaybackInfo playbackInfoCompat>;

        if $r23 == null goto label29;

        $r50 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.MediaControllerCompat$PlaybackInfo playbackInfoCompat>;

        $i20 = virtualinvoke $r50.<android.support.v4.media.session.MediaControllerCompat$PlaybackInfo: int getVolumeControl()>();

        goto label30;

     label29:
        $i20 = 0;

     label30:
        i21 = $i20;

        $r25 = r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.common.Player$Commands availablePlayerCommands>;

        $r24 = <androidx.media3.common.Player$Commands: androidx.media3.common.Player$Commands EMPTY>;

        if $r25 != $r24 goto label31;

        $r49 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.PlaybackStateCompat playbackStateCompat>;

        $r85 = staticinvoke <androidx.media3.session.MediaUtils: androidx.media3.common.Player$Commands convertToPlayerCommands(android.support.v4.media.session.PlaybackStateCompat,int,long,boolean)>($r49, i21, l0, z1);

        goto label32;

     label31:
        $r85 = r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.common.Player$Commands availablePlayerCommands>;

     label32:
        r4 = $r85;

        $r26 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.PlaybackStateCompat playbackStateCompat>;

        r86 = staticinvoke <androidx.media3.session.MediaUtils: androidx.media3.common.PlaybackException convertToPlaybackException(android.support.v4.media.session.PlaybackStateCompat)>($r26);

        $r27 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.MediaMetadataCompat mediaMetadataCompat>;

        l6 = staticinvoke <androidx.media3.session.MediaUtils: long convertToDurationMs(android.support.v4.media.MediaMetadataCompat)>($r27);

        $r29 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.PlaybackStateCompat playbackStateCompat>;

        $r28 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.MediaMetadataCompat mediaMetadataCompat>;

        l7 = staticinvoke <androidx.media3.session.MediaUtils: long convertToCurrentPositionMs(android.support.v4.media.session.PlaybackStateCompat,android.support.v4.media.MediaMetadataCompat,long)>($r29, $r28, l2);

        $r31 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.PlaybackStateCompat playbackStateCompat>;

        $r30 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.MediaMetadataCompat mediaMetadataCompat>;

        l8 = staticinvoke <androidx.media3.session.MediaUtils: long convertToBufferedPositionMs(android.support.v4.media.session.PlaybackStateCompat,android.support.v4.media.MediaMetadataCompat,long)>($r31, $r30, l2);

        $r33 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.PlaybackStateCompat playbackStateCompat>;

        $r32 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.MediaMetadataCompat mediaMetadataCompat>;

        i9 = staticinvoke <androidx.media3.session.MediaUtils: int convertToBufferedPercentage(android.support.v4.media.session.PlaybackStateCompat,android.support.v4.media.MediaMetadataCompat,long)>($r33, $r32, l2);

        $r35 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.PlaybackStateCompat playbackStateCompat>;

        $r34 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.MediaMetadataCompat mediaMetadataCompat>;

        l10 = staticinvoke <androidx.media3.session.MediaUtils: long convertToTotalBufferedDurationMs(android.support.v4.media.session.PlaybackStateCompat,android.support.v4.media.MediaMetadataCompat,long)>($r35, $r34, l2);

        $r36 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.MediaMetadataCompat mediaMetadataCompat>;

        z6 = staticinvoke <androidx.media3.session.MediaUtils: boolean convertToIsPlayingAd(android.support.v4.media.MediaMetadataCompat)>($r36);

        $r37 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.PlaybackStateCompat playbackStateCompat>;

        r5 = staticinvoke <androidx.media3.session.MediaUtils: androidx.media3.common.PlaybackParameters convertToPlaybackParameters(android.support.v4.media.session.PlaybackStateCompat)>($r37);

        $r38 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.MediaControllerCompat$PlaybackInfo playbackInfoCompat>;

        r6 = staticinvoke <androidx.media3.session.MediaUtils: androidx.media3.common.AudioAttributes convertToAudioAttributes(android.support.v4.media.session.MediaControllerCompat$PlaybackInfo)>($r38);

        $r39 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.PlaybackStateCompat playbackStateCompat>;

        z7 = staticinvoke <androidx.media3.session.MediaUtils: boolean convertToPlayWhenReady(android.support.v4.media.session.PlaybackStateCompat)>($r39);

        $r41 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.PlaybackStateCompat playbackStateCompat>;

        $r40 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.MediaMetadataCompat mediaMetadataCompat>;

        i11 = staticinvoke <androidx.media3.session.MediaUtils: int convertToPlaybackState(android.support.v4.media.session.PlaybackStateCompat,android.support.v4.media.MediaMetadataCompat,long)>($r41, $r40, l2);

        $r42 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.PlaybackStateCompat playbackStateCompat>;

        z8 = staticinvoke <androidx.media3.session.MediaUtils: boolean convertToIsPlaying(android.support.v4.media.session.PlaybackStateCompat)>($r42);

        $r43 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.MediaControllerCompat$PlaybackInfo playbackInfoCompat>;

        r7 = staticinvoke <androidx.media3.session.MediaUtils: androidx.media3.common.DeviceInfo convertToDeviceInfo(android.support.v4.media.session.MediaControllerCompat$PlaybackInfo)>($r43);

        $r44 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.MediaControllerCompat$PlaybackInfo playbackInfoCompat>;

        i12 = staticinvoke <androidx.media3.session.MediaUtils: int convertToDeviceVolume(android.support.v4.media.session.MediaControllerCompat$PlaybackInfo)>($r44);

        $r45 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.MediaControllerCompat$PlaybackInfo playbackInfoCompat>;

        z9 = staticinvoke <androidx.media3.session.MediaUtils: boolean convertToIsDeviceMuted(android.support.v4.media.session.MediaControllerCompat$PlaybackInfo)>($r45);

        $r46 = r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        l13 = $r46.<androidx.media3.session.PlayerInfo: long seekBackIncrementMs>;

        $r47 = r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        l14 = $r47.<androidx.media3.session.PlayerInfo: long seekForwardIncrementMs>;

        $r48 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo createControllerInfo(androidx.media3.session.QueueTimeline,androidx.media3.common.MediaMetadata,int,androidx.media3.common.MediaMetadata,int,boolean,androidx.media3.session.SessionCommands,androidx.media3.common.Player$Commands,com.google.common.collect.ImmutableList,androidx.media3.common.PlaybackException,long,long,long,int,long,boolean,androidx.media3.common.PlaybackParameters,androidx.media3.common.AudioAttributes,boolean,int,boolean,androidx.media3.common.DeviceInfo,int,boolean,long,long)>(r74, r77, i19, r3, i3, z2, r83, r4, r84, r86, l6, l7, l8, i9, l10, z6, r5, r6, z7, i11, z8, r7, i12, z9, l13, l14);

        return $r48;
    }

    private static android.util.Pair calculateDiscontinuityAndTransitionReason(androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo, androidx.media3.session.MediaControllerImplLegacy$ControllerInfo, androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo, androidx.media3.session.MediaControllerImplLegacy$ControllerInfo, long)
    {
        androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo r0, r2;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r1, r3;
        long l0, l3, l4, $l6, $l7;
        boolean z0, z1;
        int i1, i2, $i9;
        androidx.media3.common.MediaItem r4, $r13;
        androidx.media3.session.PlayerInfo $r5, $r7, $r9, $r12, $r15, $r22;
        androidx.media3.common.Timeline $r6, $r8, $r16;
        androidx.media3.session.SessionPositionInfo $r10;
        androidx.media3.common.Player$PositionInfo $r11;
        java.lang.Object $r14;
        androidx.media3.session.QueueTimeline $r17;
        android.support.v4.media.MediaMetadataCompat $r18, $r20;
        android.support.v4.media.session.PlaybackStateCompat $r19, $r21;
        byte $b5, $b8;
        java.lang.Integer r23, r24;
        android.util.Pair $r25;

        r0 := @parameter0: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo;

        r1 := @parameter1: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        r2 := @parameter2: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo;

        r3 := @parameter3: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        l0 := @parameter4: long;

        $r5 = r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r6 = $r5.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        z0 = virtualinvoke $r6.<androidx.media3.common.Timeline: boolean isEmpty()>();

        $r7 = r3.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r8 = $r7.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        z1 = virtualinvoke $r8.<androidx.media3.common.Timeline: boolean isEmpty()>();

        $r9 = r3.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r10 = $r9.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r11 = $r10.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        i1 = $r11.<androidx.media3.common.Player$PositionInfo: int mediaItemIndex>;

        if z0 == 0 goto label1;

        if z1 == 0 goto label1;

        r23 = null;

        r24 = null;

        goto label8;

     label1:
        if z0 == 0 goto label2;

        if z1 != 0 goto label2;

        r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        goto label8;

     label2:
        $r12 = r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r13 = virtualinvoke $r12.<androidx.media3.session.PlayerInfo: androidx.media3.common.MediaItem getCurrentMediaItem()>();

        $r14 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r13);

        r4 = (androidx.media3.common.MediaItem) $r14;

        $r15 = r3.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r16 = $r15.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        $r17 = (androidx.media3.session.QueueTimeline) $r16;

        i2 = virtualinvoke $r17.<androidx.media3.session.QueueTimeline: int indexOf(androidx.media3.common.MediaItem)>(r4);

        if i2 != -1 goto label3;

        r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        goto label8;

     label3:
        if i2 != i1 goto label7;

        $r19 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.PlaybackStateCompat playbackStateCompat>;

        $r18 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.MediaMetadataCompat mediaMetadataCompat>;

        l3 = staticinvoke <androidx.media3.session.MediaUtils: long convertToCurrentPositionMs(android.support.v4.media.session.PlaybackStateCompat,android.support.v4.media.MediaMetadataCompat,long)>($r19, $r18, l0);

        $r21 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.PlaybackStateCompat playbackStateCompat>;

        $r20 = r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.MediaMetadataCompat mediaMetadataCompat>;

        l4 = staticinvoke <androidx.media3.session.MediaUtils: long convertToCurrentPositionMs(android.support.v4.media.session.PlaybackStateCompat,android.support.v4.media.MediaMetadataCompat,long)>($r21, $r20, l0);

        $b5 = l4 cmp 0L;

        if $b5 != 0 goto label4;

        $r22 = r3.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $i9 = $r22.<androidx.media3.session.PlayerInfo: int repeatMode>;

        if $i9 != 1 goto label4;

        r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        goto label6;

     label4:
        $l6 = l3 - l4;

        $l7 = staticinvoke <java.lang.Math: long abs(long)>($l6);

        $b8 = $l7 cmp 100L;

        if $b8 <= 0 goto label5;

        r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        r24 = null;

        goto label6;

     label5:
        r23 = null;

        r24 = null;

     label6:
        goto label8;

     label7:
        r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

     label8:
        $r25 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>(r23, r24);

        return $r25;
    }

    private static java.util.List convertToNonNullQueueItemList(java.util.List)
    {
        java.util.List r0, $r1;

        r0 := @parameter0: java.util.List;

        if r0 != null goto label1;

        $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        goto label2;

     label1:
        $r1 = staticinvoke <androidx.media3.session.MediaUtils: java.util.List removeNullElements(java.util.List)>(r0);

     label2:
        return $r1;
    }

    private static android.support.v4.media.session.PlaybackStateCompat convertToSafePlaybackStateCompat(android.support.v4.media.session.PlaybackStateCompat)
    {
        android.support.v4.media.session.PlaybackStateCompat r0, $r3;
        float $f0;
        byte $b0;
        android.support.v4.media.session.PlaybackStateCompat$Builder $r1, $r2;
        int $i1;
        long $l2, $l3;

        r0 := @parameter0: android.support.v4.media.session.PlaybackStateCompat;

        if r0 != null goto label1;

        return null;

     label1:
        $f0 = virtualinvoke r0.<android.support.v4.media.session.PlaybackStateCompat: float getPlaybackSpeed()>();

        $b0 = $f0 cmpg 0.0F;

        if $b0 > 0 goto label2;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MCImplLegacy", "Adjusting playback speed to 1.0f because negative playback speed isn\'t supported.");

        $r1 = new android.support.v4.media.session.PlaybackStateCompat$Builder;

        specialinvoke $r1.<android.support.v4.media.session.PlaybackStateCompat$Builder: void <init>(android.support.v4.media.session.PlaybackStateCompat)>(r0);

        $i1 = virtualinvoke r0.<android.support.v4.media.session.PlaybackStateCompat: int getState()>();

        $l2 = virtualinvoke r0.<android.support.v4.media.session.PlaybackStateCompat: long getPosition()>();

        $l3 = virtualinvoke r0.<android.support.v4.media.session.PlaybackStateCompat: long getLastPositionUpdateTime()>();

        $r2 = virtualinvoke $r1.<android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder setState(int,long,float,long)>($i1, $l2, 1.0F, $l3);

        $r3 = virtualinvoke $r2.<android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat build()>();

        return $r3;

     label2:
        return r0;
    }

    private static android.os.Bundle getOrEmptyBundle(android.os.Bundle)
    {
        android.os.Bundle r0, $r1;

        r0 := @parameter0: android.os.Bundle;

        if r0 != null goto label1;

        $r1 = <android.os.Bundle: android.os.Bundle EMPTY>;

        goto label2;

     label1:
        $r1 = r0;

     label2:
        return $r1;
    }

    private static long getActiveQueueId(android.support.v4.media.session.PlaybackStateCompat)
    {
        android.support.v4.media.session.PlaybackStateCompat r0;
        long $l0;

        r0 := @parameter0: android.support.v4.media.session.PlaybackStateCompat;

        if r0 != null goto label1;

        $l0 = -1L;

        goto label2;

     label1:
        $l0 = virtualinvoke r0.<android.support.v4.media.session.PlaybackStateCompat: long getActiveQueueItemId()>();

     label2:
        return $l0;
    }

    private static int findQueueItemIndex(java.util.List, long)
    {
        java.util.List r0;
        long l0, $l3;
        byte $b1, $b4;
        int $i2, i5;
        java.lang.Object $r1;
        android.support.v4.media.session.MediaSessionCompat$QueueItem $r2;

        r0 := @parameter0: java.util.List;

        l0 := @parameter1: long;

        if r0 == null goto label1;

        $b1 = l0 cmp -1L;

        if $b1 != 0 goto label2;

     label1:
        return -1;

     label2:
        i5 = 0;

     label3:
        $i2 = interfaceinvoke r0.<java.util.List: int size()>();

        if i5 >= $i2 goto label5;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i5);

        $r2 = (android.support.v4.media.session.MediaSessionCompat$QueueItem) $r1;

        $l3 = virtualinvoke $r2.<android.support.v4.media.session.MediaSessionCompat$QueueItem: long getQueueId()>();

        $b4 = $l3 cmp l0;

        if $b4 != 0 goto label4;

        return i5;

     label4:
        i5 = i5 + 1;

        goto label3;

     label5:
        return -1;
    }

    private static int calculateCurrentItemIndexAfterAddItems(int, int, int)
    {
        int i0, i1, i2, $i3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i0 >= i1 goto label1;

        $i3 = i0;

        goto label2;

     label1:
        $i3 = i0 + i2;

     label2:
        return $i3;
    }

    private static int calculateCurrentItemIndexAfterRemoveItems(int, int, int)
    {
        int i0, i1, i2, i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 = i2 - i1;

        if i0 >= i1 goto label1;

        return i0;

     label1:
        if i0 >= i2 goto label2;

        return -1;

     label2:
        $i4 = i0 - i3;

        return $i4;
    }

    private static androidx.media3.session.MediaControllerImplLegacy$ControllerInfo createControllerInfo(androidx.media3.session.QueueTimeline, androidx.media3.common.MediaMetadata, int, androidx.media3.common.MediaMetadata, int, boolean, androidx.media3.session.SessionCommands, androidx.media3.common.Player$Commands, com.google.common.collect.ImmutableList, androidx.media3.common.PlaybackException, long, long, long, int, long, boolean, androidx.media3.common.PlaybackParameters, androidx.media3.common.AudioAttributes, boolean, int, boolean, androidx.media3.common.DeviceInfo, int, boolean, long, long)
    {
        androidx.media3.session.QueueTimeline r0;
        androidx.media3.common.MediaMetadata r1, r2;
        int i0, i1, i5, i7, i8;
        boolean z0, z1, z2, z3, z4;
        androidx.media3.session.SessionCommands r3;
        androidx.media3.common.Player$Commands r4;
        com.google.common.collect.ImmutableList r5;
        androidx.media3.common.PlaybackException r6;
        long l2, l3, l4, l6, l9, l10;
        androidx.media3.common.PlaybackParameters r7;
        androidx.media3.common.AudioAttributes r8;
        androidx.media3.common.DeviceInfo r9;
        androidx.media3.common.MediaItem r10;
        androidx.media3.common.Player$PositionInfo r11, $r20, $r21;
        androidx.media3.session.SessionPositionInfo r12, $r14;
        androidx.media3.session.PlayerInfo r13, $r15;
        androidx.media3.common.TrackSelectionParameters $r16;
        androidx.media3.common.Tracks $r17;
        androidx.media3.common.text.CueGroup $r18;
        androidx.media3.common.VideoSize $r19;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo $r22;

        r0 := @parameter0: androidx.media3.session.QueueTimeline;

        r1 := @parameter1: androidx.media3.common.MediaMetadata;

        i0 := @parameter2: int;

        r2 := @parameter3: androidx.media3.common.MediaMetadata;

        i1 := @parameter4: int;

        z0 := @parameter5: boolean;

        r3 := @parameter6: androidx.media3.session.SessionCommands;

        r4 := @parameter7: androidx.media3.common.Player$Commands;

        r5 := @parameter8: com.google.common.collect.ImmutableList;

        r6 := @parameter9: androidx.media3.common.PlaybackException;

        l2 := @parameter10: long;

        l3 := @parameter11: long;

        l4 := @parameter12: long;

        i5 := @parameter13: int;

        l6 := @parameter14: long;

        z1 := @parameter15: boolean;

        r7 := @parameter16: androidx.media3.common.PlaybackParameters;

        r8 := @parameter17: androidx.media3.common.AudioAttributes;

        z2 := @parameter18: boolean;

        i7 := @parameter19: int;

        z3 := @parameter20: boolean;

        r9 := @parameter21: androidx.media3.common.DeviceInfo;

        i8 := @parameter22: int;

        z4 := @parameter23: boolean;

        l9 := @parameter24: long;

        l10 := @parameter25: long;

        r10 = virtualinvoke r0.<androidx.media3.session.QueueTimeline: androidx.media3.common.MediaItem getMediaItemAt(int)>(i0);

        r11 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: androidx.media3.common.Player$PositionInfo createPositionInfo(int,androidx.media3.common.MediaItem,long,boolean)>(i0, r10, l3, z1);

        $r14 = new androidx.media3.session.SessionPositionInfo;

        specialinvoke $r14.<androidx.media3.session.SessionPositionInfo: void <init>(androidx.media3.common.Player$PositionInfo,boolean,long,long,long,int,long,long,long,long)>(r11, z1, -9223372036854775807L, l2, l4, i5, l6, -9223372036854775807L, l2, l4);

        r12 = $r14;

        $r15 = new androidx.media3.session.PlayerInfo;

        $r21 = <androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo DEFAULT_POSITION_INFO>;

        $r20 = <androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo DEFAULT_POSITION_INFO>;

        $r19 = <androidx.media3.common.VideoSize: androidx.media3.common.VideoSize UNKNOWN>;

        $r18 = <androidx.media3.common.text.CueGroup: androidx.media3.common.text.CueGroup EMPTY_TIME_ZERO>;

        $r17 = <androidx.media3.common.Tracks: androidx.media3.common.Tracks EMPTY>;

        $r16 = <androidx.media3.common.TrackSelectionParameters: androidx.media3.common.TrackSelectionParameters DEFAULT_WITHOUT_CONTEXT>;

        specialinvoke $r15.<androidx.media3.session.PlayerInfo: void <init>(androidx.media3.common.PlaybackException,int,androidx.media3.session.SessionPositionInfo,androidx.media3.common.Player$PositionInfo,androidx.media3.common.Player$PositionInfo,int,androidx.media3.common.PlaybackParameters,int,boolean,androidx.media3.common.VideoSize,androidx.media3.common.Timeline,androidx.media3.common.MediaMetadata,float,androidx.media3.common.AudioAttributes,androidx.media3.common.text.CueGroup,androidx.media3.common.DeviceInfo,int,boolean,boolean,int,int,int,boolean,boolean,androidx.media3.common.MediaMetadata,long,long,long,androidx.media3.common.Tracks,androidx.media3.common.TrackSelectionParameters)>(r6, 0, r12, $r21, $r20, 0, r7, i1, z0, $r19, r0, r2, 1.0F, r8, $r18, r9, i8, z4, z2, 1, 0, i7, z3, 0, r1, l9, l10, 0L, $r17, $r16);

        r13 = $r15;

        $r22 = new androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        specialinvoke $r22.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: void <init>(androidx.media3.session.PlayerInfo,androidx.media3.session.SessionCommands,androidx.media3.common.Player$Commands,com.google.common.collect.ImmutableList)>(r13, r3, r4, r5);

        return $r22;
    }

    private static androidx.media3.common.Player$PositionInfo createPositionInfo(int, androidx.media3.common.MediaItem, long, boolean)
    {
        int i0;
        androidx.media3.common.MediaItem r0;
        long l1;
        boolean z0;
        androidx.media3.common.Player$PositionInfo $r1;
        byte $b6, $b7;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.media3.common.MediaItem;

        l1 := @parameter2: long;

        z0 := @parameter3: boolean;

        $r1 = new androidx.media3.common.Player$PositionInfo;

        if z0 == 0 goto label1;

        $b6 = 0;

        goto label2;

     label1:
        $b6 = -1;

     label2:
        if z0 == 0 goto label3;

        $b7 = 0;

        goto label4;

     label3:
        $b7 = -1;

     label4:
        specialinvoke $r1.<androidx.media3.common.Player$PositionInfo: void <init>(java.lang.Object,int,androidx.media3.common.MediaItem,java.lang.Object,int,long,long,int,int)>(null, i0, r0, null, i0, l1, l1, $b6, $b7);

        return $r1;
    }

    private static androidx.media3.session.SessionPositionInfo createSessionPositionInfo(androidx.media3.common.Player$PositionInfo, boolean, long, long, int, long)
    {
        androidx.media3.common.Player$PositionInfo r0;
        boolean z0;
        long l0, l1, l3, $l4;
        int i2;
        androidx.media3.session.SessionPositionInfo $r1;

        r0 := @parameter0: androidx.media3.common.Player$PositionInfo;

        z0 := @parameter1: boolean;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        i2 := @parameter4: int;

        l3 := @parameter5: long;

        $r1 = new androidx.media3.session.SessionPositionInfo;

        $l4 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke $r1.<androidx.media3.session.SessionPositionInfo: void <init>(androidx.media3.common.Player$PositionInfo,boolean,long,long,long,int,long,long,long,long)>(r0, z0, $l4, l0, l1, i2, l3, -9223372036854775807L, l0, l1);

        return $r1;
    }

    private void lambda$updateControllerInfo$24(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo, androidx.media3.session.MediaController$Listener)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r1;
        androidx.media3.session.MediaController$Listener r2;
        androidx.media3.session.MediaController $r3;
        com.google.common.collect.ImmutableList $r4;
        com.google.common.util.concurrent.ListenableFuture $r5;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter0: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        r2 := @parameter1: androidx.media3.session.MediaController$Listener;

        $r3 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaController getInstance()>();

        $r4 = r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: com.google.common.collect.ImmutableList customLayout>;

        $r5 = interfaceinvoke r2.<androidx.media3.session.MediaController$Listener: com.google.common.util.concurrent.ListenableFuture onSetCustomLayout(androidx.media3.session.MediaController,java.util.List)>($r3, $r4);

        staticinvoke <androidx.media3.session.MediaControllerImplLegacy: void ignoreFuture(java.util.concurrent.Future)>($r5);

        return;
    }

    private void lambda$updateControllerInfo$23(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo, androidx.media3.session.MediaController$Listener)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r1;
        androidx.media3.session.MediaController$Listener r2;
        androidx.media3.session.MediaController $r3;
        androidx.media3.session.SessionCommands $r4;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter0: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        r2 := @parameter1: androidx.media3.session.MediaController$Listener;

        $r3 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaController getInstance()>();

        $r4 = r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.SessionCommands availableSessionCommands>;

        interfaceinvoke r2.<androidx.media3.session.MediaController$Listener: void onAvailableSessionCommandsChanged(androidx.media3.session.MediaController,androidx.media3.session.SessionCommands)>($r3, $r4);

        return;
    }

    private static void lambda$updateControllerInfo$22(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.common.Player$Commands $r2;

        r0 := @parameter0: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.common.Player$Commands availablePlayerCommands>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onAvailableCommandsChanged(androidx.media3.common.Player$Commands)>($r2);

        return;
    }

    private static void lambda$updateControllerInfo$21(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.session.PlayerInfo $r2, $r3;
        boolean $z0;
        int $i0;

        r0 := @parameter0: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $i0 = $r2.<androidx.media3.session.PlayerInfo: int deviceVolume>;

        $r3 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $z0 = $r3.<androidx.media3.session.PlayerInfo: boolean deviceMuted>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onDeviceVolumeChanged(int,boolean)>($i0, $z0);

        return;
    }

    private static void lambda$updateControllerInfo$20(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.session.PlayerInfo $r2;
        androidx.media3.common.DeviceInfo $r3;

        r0 := @parameter0: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r3 = $r2.<androidx.media3.session.PlayerInfo: androidx.media3.common.DeviceInfo deviceInfo>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onDeviceInfoChanged(androidx.media3.common.DeviceInfo)>($r3);

        return;
    }

    private static void lambda$updateControllerInfo$19(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.session.PlayerInfo $r2;
        androidx.media3.common.AudioAttributes $r3;

        r0 := @parameter0: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r3 = $r2.<androidx.media3.session.PlayerInfo: androidx.media3.common.AudioAttributes audioAttributes>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onAudioAttributesChanged(androidx.media3.common.AudioAttributes)>($r3);

        return;
    }

    private static void lambda$updateControllerInfo$18(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.session.PlayerInfo $r2;
        boolean $z0;

        r0 := @parameter0: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $z0 = $r2.<androidx.media3.session.PlayerInfo: boolean shuffleModeEnabled>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onShuffleModeEnabledChanged(boolean)>($z0);

        return;
    }

    private static void lambda$updateControllerInfo$17(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.session.PlayerInfo $r2;
        int $i0;

        r0 := @parameter0: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $i0 = $r2.<androidx.media3.session.PlayerInfo: int repeatMode>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onRepeatModeChanged(int)>($i0);

        return;
    }

    private static void lambda$updateControllerInfo$16(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.session.PlayerInfo $r2;
        androidx.media3.common.PlaybackParameters $r3;

        r0 := @parameter0: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r3 = $r2.<androidx.media3.session.PlayerInfo: androidx.media3.common.PlaybackParameters playbackParameters>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onPlaybackParametersChanged(androidx.media3.common.PlaybackParameters)>($r3);

        return;
    }

    private static void lambda$updateControllerInfo$15(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.session.PlayerInfo $r2;
        boolean $z0;

        r0 := @parameter0: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $z0 = $r2.<androidx.media3.session.PlayerInfo: boolean isPlaying>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onIsPlayingChanged(boolean)>($z0);

        return;
    }

    private static void lambda$updateControllerInfo$14(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.session.PlayerInfo $r2;
        boolean $z0;

        r0 := @parameter0: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $z0 = $r2.<androidx.media3.session.PlayerInfo: boolean playWhenReady>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onPlayWhenReadyChanged(boolean,int)>($z0, 4);

        return;
    }

    private static void lambda$updateControllerInfo$13(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.session.PlayerInfo $r2;
        int $i0;

        r0 := @parameter0: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $i0 = $r2.<androidx.media3.session.PlayerInfo: int playbackState>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onPlaybackStateChanged(int)>($i0);

        return;
    }

    private void lambda$updateControllerInfo$12(androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo $r2;
        androidx.media3.session.PlayerInfo $r3;
        androidx.media3.common.MediaMetadata $r4;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter0: androidx.media3.common.Player$Listener;

        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo controllerInfo>;

        $r3 = $r2.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r4 = $r3.<androidx.media3.session.PlayerInfo: androidx.media3.common.MediaMetadata mediaMetadata>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onMediaMetadataChanged(androidx.media3.common.MediaMetadata)>($r4);

        return;
    }

    private static void lambda$updateControllerInfo$11(androidx.media3.common.PlaybackException, androidx.media3.common.Player$Listener)
    {
        androidx.media3.common.PlaybackException r0;
        androidx.media3.common.Player$Listener r1;

        r0 := @parameter0: androidx.media3.common.PlaybackException;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onPlayerError(androidx.media3.common.PlaybackException)>(r0);

        return;
    }

    private static void lambda$updateControllerInfo$10(androidx.media3.common.PlaybackException, androidx.media3.common.Player$Listener)
    {
        androidx.media3.common.PlaybackException r0;
        androidx.media3.common.Player$Listener r1;

        r0 := @parameter0: androidx.media3.common.PlaybackException;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onPlayerErrorChanged(androidx.media3.common.PlaybackException)>(r0);

        return;
    }

    private static void lambda$updateControllerInfo$9(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo, java.lang.Integer, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r0;
        java.lang.Integer r1;
        androidx.media3.common.Player$Listener r2;
        androidx.media3.session.PlayerInfo $r3;
        androidx.media3.common.MediaItem $r4;
        int $i0;

        r0 := @parameter0: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        r1 := @parameter1: java.lang.Integer;

        r2 := @parameter2: androidx.media3.common.Player$Listener;

        $r3 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r4 = virtualinvoke $r3.<androidx.media3.session.PlayerInfo: androidx.media3.common.MediaItem getCurrentMediaItem()>();

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        interfaceinvoke r2.<androidx.media3.common.Player$Listener: void onMediaItemTransition(androidx.media3.common.MediaItem,int)>($r4, $i0);

        return;
    }

    private static void lambda$updateControllerInfo$8(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo, androidx.media3.session.MediaControllerImplLegacy$ControllerInfo, java.lang.Integer, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r0, r1;
        java.lang.Integer r2;
        androidx.media3.common.Player$Listener r3;
        androidx.media3.session.PlayerInfo $r4, $r6;
        androidx.media3.session.SessionPositionInfo $r5, $r7;
        androidx.media3.common.Player$PositionInfo $r8, $r9;
        int $i0;

        r0 := @parameter0: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        r1 := @parameter1: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        r2 := @parameter2: java.lang.Integer;

        r3 := @parameter3: androidx.media3.common.Player$Listener;

        $r4 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r5 = $r4.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r8 = $r5.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $r6 = r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r7 = $r6.<androidx.media3.session.PlayerInfo: androidx.media3.session.SessionPositionInfo sessionPositionInfo>;

        $r9 = $r7.<androidx.media3.session.SessionPositionInfo: androidx.media3.common.Player$PositionInfo positionInfo>;

        $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        interfaceinvoke r3.<androidx.media3.common.Player$Listener: void onPositionDiscontinuity(androidx.media3.common.Player$PositionInfo,androidx.media3.common.Player$PositionInfo,int)>($r8, $r9, $i0);

        return;
    }

    private static void lambda$updateControllerInfo$7(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.session.PlayerInfo $r2;
        androidx.media3.common.MediaMetadata $r3;

        r0 := @parameter0: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r3 = $r2.<androidx.media3.session.PlayerInfo: androidx.media3.common.MediaMetadata playlistMetadata>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onPlaylistMetadataChanged(androidx.media3.common.MediaMetadata)>($r3);

        return;
    }

    private static void lambda$updateControllerInfo$6(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo, androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.session.PlayerInfo $r2;
        androidx.media3.common.Timeline $r3;

        r0 := @parameter0: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        r1 := @parameter1: androidx.media3.common.Player$Listener;

        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>;

        $r3 = $r2.<androidx.media3.session.PlayerInfo: androidx.media3.common.Timeline timeline>;

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onTimelineChanged(androidx.media3.common.Timeline,int)>($r3, 0);

        return;
    }

    private void lambda$updateControllerInfo$5(androidx.media3.session.MediaControllerImplLegacy$ControllerInfo, androidx.media3.session.MediaController$Listener)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r1;
        androidx.media3.session.MediaController$Listener r2;
        androidx.media3.session.MediaController $r3;
        com.google.common.collect.ImmutableList $r4;
        com.google.common.util.concurrent.ListenableFuture $r5;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter0: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        r2 := @parameter1: androidx.media3.session.MediaController$Listener;

        $r3 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaController getInstance()>();

        $r4 = r1.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: com.google.common.collect.ImmutableList customLayout>;

        $r5 = interfaceinvoke r2.<androidx.media3.session.MediaController$Listener: com.google.common.util.concurrent.ListenableFuture onSetCustomLayout(androidx.media3.session.MediaController,java.util.List)>($r3, $r4);

        staticinvoke <androidx.media3.session.MediaControllerImplLegacy: void ignoreFuture(java.util.concurrent.Future)>($r5);

        return;
    }

    private void lambda$addQueueItems$4(java.util.concurrent.atomic.AtomicInteger, java.util.List, java.util.List, int)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        java.util.concurrent.atomic.AtomicInteger r1;
        java.util.List r2, r3;
        int i0, i1, $i2;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter0: java.util.concurrent.atomic.AtomicInteger;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        i0 := @parameter3: int;

        i1 = virtualinvoke r1.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        $i2 = interfaceinvoke r2.<java.util.List: int size()>();

        if i1 != $i2 goto label1;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void handleBitmapFuturesAllCompletedAndAddQueueItems(java.util.List,java.util.List,int)>(r3, r2, i0);

     label1:
        return;
    }

    private void lambda$connectToService$3()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        android.support.v4.media.MediaBrowserCompat $r1, $r6;
        androidx.media3.session.SessionToken $r2;
        android.content.Context $r3;
        android.content.ComponentName $r4;
        androidx.media3.session.MediaControllerImplLegacy$ConnectionCallback $r5;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = new android.support.v4.media.MediaBrowserCompat;

        $r3 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.content.Context context>;

        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.SessionToken token>;

        $r4 = virtualinvoke $r2.<androidx.media3.session.SessionToken: android.content.ComponentName getComponentName()>();

        $r5 = new androidx.media3.session.MediaControllerImplLegacy$ConnectionCallback;

        specialinvoke $r5.<androidx.media3.session.MediaControllerImplLegacy$ConnectionCallback: void <init>(androidx.media3.session.MediaControllerImplLegacy,androidx.media3.session.MediaControllerImplLegacy$1)>(r0, null);

        specialinvoke $r1.<android.support.v4.media.MediaBrowserCompat: void <init>(android.content.Context,android.content.ComponentName,android.support.v4.media.MediaBrowserCompat$ConnectionCallback,android.os.Bundle)>($r3, $r4, $r5, null);

        r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.MediaBrowserCompat browserCompat> = $r1;

        $r6 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.MediaBrowserCompat browserCompat>;

        virtualinvoke $r6.<android.support.v4.media.MediaBrowserCompat: void connect()>();

        return;
    }

    private void lambda$connectToSession$2()
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        android.support.v4.media.session.MediaControllerCompat $r1;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $z0 = virtualinvoke $r1.<android.support.v4.media.session.MediaControllerCompat: boolean isSessionReady()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void onConnected()>();

     label1:
        return;
    }

    private void lambda$connectToSession$1(android.support.v4.media.session.MediaSessionCompat$Token)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        android.support.v4.media.session.MediaSessionCompat$Token r1;
        android.support.v4.media.session.MediaControllerCompat $r2, $r4;
        android.content.Context $r3;
        androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback $r5;
        androidx.media3.session.MediaController $r6;
        android.os.Handler $r7;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter0: android.support.v4.media.session.MediaSessionCompat$Token;

        $r2 = new android.support.v4.media.session.MediaControllerCompat;

        $r3 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.content.Context context>;

        specialinvoke $r2.<android.support.v4.media.session.MediaControllerCompat: void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token)>($r3, r1);

        r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat> = $r2;

        $r4 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        $r5 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback controllerCompatCallback>;

        $r6 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaController getInstance()>();

        $r7 = $r6.<androidx.media3.session.MediaController: android.os.Handler applicationHandler>;

        virtualinvoke $r4.<android.support.v4.media.session.MediaControllerCompat: void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler)>($r5, $r7);

        return;
    }

    private void lambda$new$0(androidx.media3.common.Player$Listener, androidx.media3.common.FlagSet)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.common.Player$Listener r1;
        androidx.media3.common.FlagSet r2;
        androidx.media3.session.MediaController $r3;
        androidx.media3.common.Player$Events $r4;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter0: androidx.media3.common.Player$Listener;

        r2 := @parameter1: androidx.media3.common.FlagSet;

        $r3 = virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaController getInstance()>();

        $r4 = new androidx.media3.common.Player$Events;

        specialinvoke $r4.<androidx.media3.common.Player$Events: void <init>(androidx.media3.common.FlagSet)>(r2);

        interfaceinvoke r1.<androidx.media3.common.Player$Listener: void onEvents(androidx.media3.common.Player,androidx.media3.common.Player$Events)>($r3, $r4);

        return;
    }

    static void access$000(androidx.media3.session.MediaControllerImplLegacy, android.support.v4.media.session.MediaSessionCompat$Token)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        android.support.v4.media.session.MediaSessionCompat$Token r1;

        r0 := @parameter0: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter1: android.support.v4.media.session.MediaSessionCompat$Token;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void connectToSession(android.support.v4.media.session.MediaSessionCompat$Token)>(r1);

        return;
    }

    static boolean access$100(androidx.media3.session.MediaControllerImplLegacy)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        boolean $z0;

        r0 := @parameter0: androidx.media3.session.MediaControllerImplLegacy;

        $z0 = r0.<androidx.media3.session.MediaControllerImplLegacy: boolean connected>;

        return $z0;
    }

    static androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo access$202(androidx.media3.session.MediaControllerImplLegacy, androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo r1;

        r0 := @parameter0: androidx.media3.session.MediaControllerImplLegacy;

        r1 := @parameter1: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo;

        r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo pendingLegacyPlayerInfo> = r1;

        return r1;
    }

    static android.support.v4.media.session.MediaControllerCompat access$300(androidx.media3.session.MediaControllerImplLegacy)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        android.support.v4.media.session.MediaControllerCompat $r1;

        r0 := @parameter0: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat controllerCompat>;

        return $r1;
    }

    static android.support.v4.media.session.PlaybackStateCompat access$400(android.support.v4.media.session.PlaybackStateCompat)
    {
        android.support.v4.media.session.PlaybackStateCompat r0, $r1;

        r0 := @parameter0: android.support.v4.media.session.PlaybackStateCompat;

        $r1 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.PlaybackStateCompat convertToSafePlaybackStateCompat(android.support.v4.media.session.PlaybackStateCompat)>(r0);

        return $r1;
    }

    static androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo access$200(androidx.media3.session.MediaControllerImplLegacy)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo $r1;

        r0 := @parameter0: androidx.media3.session.MediaControllerImplLegacy;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo pendingLegacyPlayerInfo>;

        return $r1;
    }

    static void access$500(androidx.media3.session.MediaControllerImplLegacy, boolean, androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo)
    {
        androidx.media3.session.MediaControllerImplLegacy r0;
        boolean z0;
        androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo r1;

        r0 := @parameter0: androidx.media3.session.MediaControllerImplLegacy;

        z0 := @parameter1: boolean;

        r1 := @parameter2: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy: void handleNewLegacyParameters(boolean,androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo)>(z0, r1);

        return;
    }

    static java.util.List access$600(java.util.List)
    {
        java.util.List r0, $r1;

        r0 := @parameter0: java.util.List;

        $r1 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: java.util.List convertToNonNullQueueItemList(java.util.List)>(r0);

        return $r1;
    }

    static void access$700(java.util.concurrent.Future)
    {
        java.util.concurrent.Future r0;

        r0 := @parameter0: java.util.concurrent.Future;

        staticinvoke <androidx.media3.session.MediaControllerImplLegacy: void ignoreFuture(java.util.concurrent.Future)>(r0);

        return;
    }

androidx.media3.session.MediaControllerImplLegacy$1
<androidx.media3.session.MediaControllerImplLegacy$1: com.google.common.util.concurrent.SettableFuture val$result>
    void <init>(androidx.media3.session.MediaControllerImplLegacy, android.os.Handler, com.google.common.util.concurrent.SettableFuture)
    {
        androidx.media3.session.MediaControllerImplLegacy$1 r0;
        androidx.media3.session.MediaControllerImplLegacy r1;
        android.os.Handler r2;
        com.google.common.util.concurrent.SettableFuture r3;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$1;

        r1 := @parameter0: androidx.media3.session.MediaControllerImplLegacy;

        r2 := @parameter1: android.os.Handler;

        r3 := @parameter2: com.google.common.util.concurrent.SettableFuture;

        r0.<androidx.media3.session.MediaControllerImplLegacy$1: com.google.common.util.concurrent.SettableFuture val$result> = r3;

        specialinvoke r0.<android.os.ResultReceiver: void <init>(android.os.Handler)>(r2);

        return;
    }

    protected void onReceiveResult(int, android.os.Bundle)
    {
        androidx.media3.session.MediaControllerImplLegacy$1 r0;
        int i0;
        android.os.Bundle r1, $r4;
        androidx.media3.session.SessionResult $r2;
        com.google.common.util.concurrent.SettableFuture $r3;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$1;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $r3 = r0.<androidx.media3.session.MediaControllerImplLegacy$1: com.google.common.util.concurrent.SettableFuture val$result>;

        $r2 = new androidx.media3.session.SessionResult;

        if r1 != null goto label1;

        $r4 = <android.os.Bundle: android.os.Bundle EMPTY>;

        goto label2;

     label1:
        $r4 = r1;

     label2:
        specialinvoke $r2.<androidx.media3.session.SessionResult: void <init>(int,android.os.Bundle)>(i0, $r4);

        virtualinvoke $r3.<com.google.common.util.concurrent.SettableFuture: boolean set(java.lang.Object)>($r2);

        return;
    }

androidx.media3.session.MediaControllerImplLegacy$ConnectionCallback
<androidx.media3.session.MediaControllerImplLegacy$ConnectionCallback: androidx.media3.session.MediaControllerImplLegacy this$0>
    private void <init>(androidx.media3.session.MediaControllerImplLegacy)
    {
        androidx.media3.session.MediaControllerImplLegacy$ConnectionCallback r0;
        androidx.media3.session.MediaControllerImplLegacy r1;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$ConnectionCallback;

        r1 := @parameter0: androidx.media3.session.MediaControllerImplLegacy;

        r0.<androidx.media3.session.MediaControllerImplLegacy$ConnectionCallback: androidx.media3.session.MediaControllerImplLegacy this$0> = r1;

        specialinvoke r0.<android.support.v4.media.MediaBrowserCompat$ConnectionCallback: void <init>()>();

        return;
    }

    public void onConnected()
    {
        androidx.media3.session.MediaControllerImplLegacy$ConnectionCallback r0;
        android.support.v4.media.MediaBrowserCompat r1;
        androidx.media3.session.MediaControllerImplLegacy $r2, $r3;
        android.support.v4.media.session.MediaSessionCompat$Token $r4;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$ConnectionCallback;

        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy$ConnectionCallback: androidx.media3.session.MediaControllerImplLegacy this$0>;

        r1 = virtualinvoke $r2.<androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.MediaBrowserCompat getBrowserCompat()>();

        if r1 == null goto label1;

        $r3 = r0.<androidx.media3.session.MediaControllerImplLegacy$ConnectionCallback: androidx.media3.session.MediaControllerImplLegacy this$0>;

        $r4 = virtualinvoke r1.<android.support.v4.media.MediaBrowserCompat: android.support.v4.media.session.MediaSessionCompat$Token getSessionToken()>();

        staticinvoke <androidx.media3.session.MediaControllerImplLegacy: void access$000(androidx.media3.session.MediaControllerImplLegacy,android.support.v4.media.session.MediaSessionCompat$Token)>($r3, $r4);

     label1:
        return;
    }

    public void onConnectionSuspended()
    {
        androidx.media3.session.MediaControllerImplLegacy$ConnectionCallback r0;
        androidx.media3.session.MediaControllerImplLegacy $r1;
        androidx.media3.session.MediaController $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$ConnectionCallback;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy$ConnectionCallback: androidx.media3.session.MediaControllerImplLegacy this$0>;

        $r2 = virtualinvoke $r1.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaController getInstance()>();

        virtualinvoke $r2.<androidx.media3.session.MediaController: void release()>();

        return;
    }

    public void onConnectionFailed()
    {
        androidx.media3.session.MediaControllerImplLegacy$ConnectionCallback r0;
        androidx.media3.session.MediaControllerImplLegacy $r1;
        androidx.media3.session.MediaController $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$ConnectionCallback;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy$ConnectionCallback: androidx.media3.session.MediaControllerImplLegacy this$0>;

        $r2 = virtualinvoke $r1.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaController getInstance()>();

        virtualinvoke $r2.<androidx.media3.session.MediaController: void release()>();

        return;
    }

    void <init>(androidx.media3.session.MediaControllerImplLegacy, androidx.media3.session.MediaControllerImplLegacy$1)
    {
        androidx.media3.session.MediaControllerImplLegacy$ConnectionCallback r0;
        androidx.media3.session.MediaControllerImplLegacy r1;
        androidx.media3.session.MediaControllerImplLegacy$1 r2;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$ConnectionCallback;

        r1 := @parameter0: androidx.media3.session.MediaControllerImplLegacy;

        r2 := @parameter1: androidx.media3.session.MediaControllerImplLegacy$1;

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy$ConnectionCallback: void <init>(androidx.media3.session.MediaControllerImplLegacy)>(r1);

        return;
    }

androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback
<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: int MSG_HANDLE_PENDING_UPDATES>
<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: android.os.Handler pendingChangesHandler>
<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: androidx.media3.session.MediaControllerImplLegacy this$0>
    public void <init>(androidx.media3.session.MediaControllerImplLegacy, android.os.Looper)
    {
        androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback r0;
        androidx.media3.session.MediaControllerImplLegacy r1;
        android.os.Looper r2;
        android.os.Handler $r3;
        android.os.Handler$Callback $r4;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback;

        r1 := @parameter0: androidx.media3.session.MediaControllerImplLegacy;

        r2 := @parameter1: android.os.Looper;

        r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: androidx.media3.session.MediaControllerImplLegacy this$0> = r1;

        specialinvoke r0.<android.support.v4.media.session.MediaControllerCompat$Callback: void <init>()>();

        $r3 = new android.os.Handler;

        $r4 = dynamicinvoke "handleMessage" <android.os.Handler$Callback (androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(android.os.Message), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: boolean lambda$new$0(android.os.Message)>, methodtype: boolean __METHODTYPE__(android.os.Message));

        specialinvoke $r3.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>(r2, $r4);

        r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: android.os.Handler pendingChangesHandler> = $r3;

        return;
    }

    public void release()
    {
        androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback r0;
        android.os.Handler $r1;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: android.os.Handler pendingChangesHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>(null);

        return;
    }

    public void onSessionReady()
    {
        androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback r0;
        boolean z0, $z1;
        androidx.media3.session.MediaControllerImplLegacy $r1, $r2, $r3, $r5, $r9, $r11, $r15, $r18, $r19, $r21;
        androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo $r4, $r13, $r20;
        android.support.v4.media.session.MediaControllerCompat $r6, $r10, $r12, $r16;
        android.support.v4.media.session.PlaybackStateCompat $r7, $r8;
        int $i0, $i1;
        android.os.Handler $r17;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: androidx.media3.session.MediaControllerImplLegacy this$0>;

        $z1 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: boolean access$100(androidx.media3.session.MediaControllerImplLegacy)>($r1);

        if $z1 != 0 goto label1;

        $r21 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: androidx.media3.session.MediaControllerImplLegacy this$0>;

        virtualinvoke $r21.<androidx.media3.session.MediaControllerImplLegacy: void onConnected()>();

        goto label2;

     label1:
        $r3 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: androidx.media3.session.MediaControllerImplLegacy this$0>;

        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: androidx.media3.session.MediaControllerImplLegacy this$0>;

        $r4 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo access$200(androidx.media3.session.MediaControllerImplLegacy)>($r2);

        $r5 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: androidx.media3.session.MediaControllerImplLegacy this$0>;

        $r6 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat access$300(androidx.media3.session.MediaControllerImplLegacy)>($r5);

        $r7 = virtualinvoke $r6.<android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.PlaybackStateCompat getPlaybackState()>();

        $r8 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.PlaybackStateCompat access$400(android.support.v4.media.session.PlaybackStateCompat)>($r7);

        $r9 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: androidx.media3.session.MediaControllerImplLegacy this$0>;

        $r10 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat access$300(androidx.media3.session.MediaControllerImplLegacy)>($r9);

        $i0 = virtualinvoke $r10.<android.support.v4.media.session.MediaControllerCompat: int getRepeatMode()>();

        $r11 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: androidx.media3.session.MediaControllerImplLegacy this$0>;

        $r12 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat access$300(androidx.media3.session.MediaControllerImplLegacy)>($r11);

        $i1 = virtualinvoke $r12.<android.support.v4.media.session.MediaControllerCompat: int getShuffleMode()>();

        $r13 = virtualinvoke $r4.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo copyWithExtraBinderGetters(android.support.v4.media.session.PlaybackStateCompat,int,int)>($r8, $i0, $i1);

        staticinvoke <androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo access$202(androidx.media3.session.MediaControllerImplLegacy,androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo)>($r3, $r13);

        $r15 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: androidx.media3.session.MediaControllerImplLegacy this$0>;

        $r16 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.MediaControllerCompat access$300(androidx.media3.session.MediaControllerImplLegacy)>($r15);

        z0 = virtualinvoke $r16.<android.support.v4.media.session.MediaControllerCompat: boolean isCaptioningEnabled()>();

        virtualinvoke r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: void onCaptioningEnabledChanged(boolean)>(z0);

        $r17 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: android.os.Handler pendingChangesHandler>;

        virtualinvoke $r17.<android.os.Handler: void removeMessages(int)>(1);

        $r19 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: androidx.media3.session.MediaControllerImplLegacy this$0>;

        $r18 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: androidx.media3.session.MediaControllerImplLegacy this$0>;

        $r20 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo access$200(androidx.media3.session.MediaControllerImplLegacy)>($r18);

        staticinvoke <androidx.media3.session.MediaControllerImplLegacy: void access$500(androidx.media3.session.MediaControllerImplLegacy,boolean,androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo)>($r19, 0, $r20);

     label2:
        return;
    }

    public void onSessionDestroyed()
    {
        androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback r0;
        androidx.media3.session.MediaControllerImplLegacy $r1;
        androidx.media3.session.MediaController $r2;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: androidx.media3.session.MediaControllerImplLegacy this$0>;

        $r2 = virtualinvoke $r1.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaController getInstance()>();

        virtualinvoke $r2.<androidx.media3.session.MediaController: void release()>();

        return;
    }

    public void onSessionEvent(java.lang.String, android.os.Bundle)
    {
        androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback r0;
        java.lang.String r1;
        android.os.Bundle r2;
        androidx.media3.session.MediaControllerImplLegacy $r3;
        androidx.media3.session.MediaController $r4;
        androidx.media3.common.util.Consumer $r5;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        $r3 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: androidx.media3.session.MediaControllerImplLegacy this$0>;

        $r4 = virtualinvoke $r3.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaController getInstance()>();

        $r5 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer (androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback,java.lang.String,android.os.Bundle)>(r0, r1, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: void lambda$onSessionEvent$1(java.lang.String,android.os.Bundle,androidx.media3.session.MediaController$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaController$Listener));

        virtualinvoke $r4.<androidx.media3.session.MediaController: void notifyControllerListener(androidx.media3.common.util.Consumer)>($r5);

        return;
    }

    public void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat)
    {
        androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback r0;
        android.support.v4.media.session.PlaybackStateCompat r1, $r5;
        androidx.media3.session.MediaControllerImplLegacy $r2, $r3;
        androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo $r4, $r6;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback;

        r1 := @parameter0: android.support.v4.media.session.PlaybackStateCompat;

        $r3 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: androidx.media3.session.MediaControllerImplLegacy this$0>;

        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: androidx.media3.session.MediaControllerImplLegacy this$0>;

        $r4 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo access$200(androidx.media3.session.MediaControllerImplLegacy)>($r2);

        $r5 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: android.support.v4.media.session.PlaybackStateCompat access$400(android.support.v4.media.session.PlaybackStateCompat)>(r1);

        $r6 = virtualinvoke $r4.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo copyWithPlaybackStateCompat(android.support.v4.media.session.PlaybackStateCompat)>($r5);

        staticinvoke <androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo access$202(androidx.media3.session.MediaControllerImplLegacy,androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo)>($r3, $r6);

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: void startWaitingForPendingChanges()>();

        return;
    }

    public void onMetadataChanged(android.support.v4.media.MediaMetadataCompat)
    {
        androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback r0;
        android.support.v4.media.MediaMetadataCompat r1;
        androidx.media3.session.MediaControllerImplLegacy $r2, $r3;
        androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo $r4, $r5;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback;

        r1 := @parameter0: android.support.v4.media.MediaMetadataCompat;

        $r3 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: androidx.media3.session.MediaControllerImplLegacy this$0>;

        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: androidx.media3.session.MediaControllerImplLegacy this$0>;

        $r4 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo access$200(androidx.media3.session.MediaControllerImplLegacy)>($r2);

        $r5 = virtualinvoke $r4.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo copyWithMediaMetadataCompat(android.support.v4.media.MediaMetadataCompat)>(r1);

        staticinvoke <androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo access$202(androidx.media3.session.MediaControllerImplLegacy,androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo)>($r3, $r5);

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: void startWaitingForPendingChanges()>();

        return;
    }

    public void onQueueChanged(java.util.List)
    {
        androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback r0;
        java.util.List r1, $r5;
        androidx.media3.session.MediaControllerImplLegacy $r2, $r3;
        androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo $r4, $r6;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback;

        r1 := @parameter0: java.util.List;

        $r3 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: androidx.media3.session.MediaControllerImplLegacy this$0>;

        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: androidx.media3.session.MediaControllerImplLegacy this$0>;

        $r4 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo access$200(androidx.media3.session.MediaControllerImplLegacy)>($r2);

        $r5 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: java.util.List access$600(java.util.List)>(r1);

        $r6 = virtualinvoke $r4.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo copyWithQueue(java.util.List)>($r5);

        staticinvoke <androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo access$202(androidx.media3.session.MediaControllerImplLegacy,androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo)>($r3, $r6);

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: void startWaitingForPendingChanges()>();

        return;
    }

    public void onQueueTitleChanged(java.lang.CharSequence)
    {
        androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback r0;
        java.lang.CharSequence r1;
        androidx.media3.session.MediaControllerImplLegacy $r2, $r3;
        androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo $r4, $r5;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback;

        r1 := @parameter0: java.lang.CharSequence;

        $r3 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: androidx.media3.session.MediaControllerImplLegacy this$0>;

        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: androidx.media3.session.MediaControllerImplLegacy this$0>;

        $r4 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo access$200(androidx.media3.session.MediaControllerImplLegacy)>($r2);

        $r5 = virtualinvoke $r4.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo copyWithQueueTitle(java.lang.CharSequence)>(r1);

        staticinvoke <androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo access$202(androidx.media3.session.MediaControllerImplLegacy,androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo)>($r3, $r5);

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: void startWaitingForPendingChanges()>();

        return;
    }

    public void onExtrasChanged(android.os.Bundle)
    {
        androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback r0;
        android.os.Bundle r1;
        androidx.media3.session.MediaControllerImplLegacy $r2;
        androidx.media3.session.MediaController $r3;
        androidx.media3.common.util.Consumer $r4;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback;

        r1 := @parameter0: android.os.Bundle;

        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: androidx.media3.session.MediaControllerImplLegacy this$0>;

        $r3 = virtualinvoke $r2.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaController getInstance()>();

        $r4 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer (androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback,android.os.Bundle)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: void lambda$onExtrasChanged$2(android.os.Bundle,androidx.media3.session.MediaController$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaController$Listener));

        virtualinvoke $r3.<androidx.media3.session.MediaController: void notifyControllerListener(androidx.media3.common.util.Consumer)>($r4);

        return;
    }

    public void onAudioInfoChanged(android.support.v4.media.session.MediaControllerCompat$PlaybackInfo)
    {
        androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback r0;
        android.support.v4.media.session.MediaControllerCompat$PlaybackInfo r1;
        androidx.media3.session.MediaControllerImplLegacy $r2, $r3;
        androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo $r4, $r5;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback;

        r1 := @parameter0: android.support.v4.media.session.MediaControllerCompat$PlaybackInfo;

        $r3 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: androidx.media3.session.MediaControllerImplLegacy this$0>;

        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: androidx.media3.session.MediaControllerImplLegacy this$0>;

        $r4 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo access$200(androidx.media3.session.MediaControllerImplLegacy)>($r2);

        $r5 = virtualinvoke $r4.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo copyWithPlaybackInfoCompat(android.support.v4.media.session.MediaControllerCompat$PlaybackInfo)>(r1);

        staticinvoke <androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo access$202(androidx.media3.session.MediaControllerImplLegacy,androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo)>($r3, $r5);

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: void startWaitingForPendingChanges()>();

        return;
    }

    public void onCaptioningEnabledChanged(boolean)
    {
        androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback r0;
        boolean z0;
        androidx.media3.session.MediaControllerImplLegacy $r1;
        androidx.media3.session.MediaController $r2;
        androidx.media3.common.util.Consumer $r3;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: androidx.media3.session.MediaControllerImplLegacy this$0>;

        $r2 = virtualinvoke $r1.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaController getInstance()>();

        $r3 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer (androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback,boolean)>(r0, z0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: void lambda$onCaptioningEnabledChanged$3(boolean,androidx.media3.session.MediaController$Listener)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaController$Listener));

        virtualinvoke $r2.<androidx.media3.session.MediaController: void notifyControllerListener(androidx.media3.common.util.Consumer)>($r3);

        return;
    }

    public void onRepeatModeChanged(int)
    {
        androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback r0;
        int i0;
        androidx.media3.session.MediaControllerImplLegacy $r1, $r2;
        androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo $r3, $r4;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback;

        i0 := @parameter0: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: androidx.media3.session.MediaControllerImplLegacy this$0>;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: androidx.media3.session.MediaControllerImplLegacy this$0>;

        $r3 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo access$200(androidx.media3.session.MediaControllerImplLegacy)>($r1);

        $r4 = virtualinvoke $r3.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo copyWithRepeatMode(int)>(i0);

        staticinvoke <androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo access$202(androidx.media3.session.MediaControllerImplLegacy,androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo)>($r2, $r4);

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: void startWaitingForPendingChanges()>();

        return;
    }

    public void onShuffleModeChanged(int)
    {
        androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback r0;
        int i0;
        androidx.media3.session.MediaControllerImplLegacy $r1, $r2;
        androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo $r3, $r4;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback;

        i0 := @parameter0: int;

        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: androidx.media3.session.MediaControllerImplLegacy this$0>;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: androidx.media3.session.MediaControllerImplLegacy this$0>;

        $r3 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo access$200(androidx.media3.session.MediaControllerImplLegacy)>($r1);

        $r4 = virtualinvoke $r3.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo copyWithShuffleMode(int)>(i0);

        staticinvoke <androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo access$202(androidx.media3.session.MediaControllerImplLegacy,androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo)>($r2, $r4);

        specialinvoke r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: void startWaitingForPendingChanges()>();

        return;
    }

    private void startWaitingForPendingChanges()
    {
        androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback r0;
        android.os.Handler $r1, $r2;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback;

        $r1 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: android.os.Handler pendingChangesHandler>;

        $z0 = virtualinvoke $r1.<android.os.Handler: boolean hasMessages(int)>(1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: android.os.Handler pendingChangesHandler>;

        virtualinvoke $r2.<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>(1, 500L);

        return;
    }

    private void lambda$onCaptioningEnabledChanged$3(boolean, androidx.media3.session.MediaController$Listener)
    {
        androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback r0;
        boolean z0;
        androidx.media3.session.MediaController$Listener r1;
        android.os.Bundle r2, $r3, $r7;
        androidx.media3.session.MediaControllerImplLegacy $r4;
        androidx.media3.session.MediaController $r5;
        androidx.media3.session.SessionCommand $r6;
        com.google.common.util.concurrent.ListenableFuture $r8;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback;

        z0 := @parameter0: boolean;

        r1 := @parameter1: androidx.media3.session.MediaController$Listener;

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        r2 = $r3;

        virtualinvoke r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("androidx.media3.session.ARGUMENT_CAPTIONING_ENABLED", z0);

        $r4 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: androidx.media3.session.MediaControllerImplLegacy this$0>;

        $r5 = virtualinvoke $r4.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaController getInstance()>();

        $r6 = new androidx.media3.session.SessionCommand;

        $r7 = <android.os.Bundle: android.os.Bundle EMPTY>;

        specialinvoke $r6.<androidx.media3.session.SessionCommand: void <init>(java.lang.String,android.os.Bundle)>("androidx.media3.session.SESSION_COMMAND_ON_CAPTIONING_ENABLED_CHANGED", $r7);

        $r8 = interfaceinvoke r1.<androidx.media3.session.MediaController$Listener: com.google.common.util.concurrent.ListenableFuture onCustomCommand(androidx.media3.session.MediaController,androidx.media3.session.SessionCommand,android.os.Bundle)>($r5, $r6, r2);

        staticinvoke <androidx.media3.session.MediaControllerImplLegacy: void access$700(java.util.concurrent.Future)>($r8);

        return;
    }

    private void lambda$onExtrasChanged$2(android.os.Bundle, androidx.media3.session.MediaController$Listener)
    {
        androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback r0;
        android.os.Bundle r1;
        androidx.media3.session.MediaController$Listener r2;
        androidx.media3.session.MediaControllerImplLegacy $r3;
        androidx.media3.session.MediaController $r4;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: androidx.media3.session.MediaController$Listener;

        $r3 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: androidx.media3.session.MediaControllerImplLegacy this$0>;

        $r4 = virtualinvoke $r3.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaController getInstance()>();

        interfaceinvoke r2.<androidx.media3.session.MediaController$Listener: void onExtrasChanged(androidx.media3.session.MediaController,android.os.Bundle)>($r4, r1);

        return;
    }

    private void lambda$onSessionEvent$1(java.lang.String, android.os.Bundle, androidx.media3.session.MediaController$Listener)
    {
        androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback r0;
        java.lang.String r1;
        android.os.Bundle r2, $r7;
        androidx.media3.session.MediaController$Listener r3;
        androidx.media3.session.MediaControllerImplLegacy $r4;
        androidx.media3.session.MediaController $r5;
        androidx.media3.session.SessionCommand $r6;
        com.google.common.util.concurrent.ListenableFuture $r8;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: androidx.media3.session.MediaController$Listener;

        $r4 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: androidx.media3.session.MediaControllerImplLegacy this$0>;

        $r5 = virtualinvoke $r4.<androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaController getInstance()>();

        $r6 = new androidx.media3.session.SessionCommand;

        $r7 = <android.os.Bundle: android.os.Bundle EMPTY>;

        specialinvoke $r6.<androidx.media3.session.SessionCommand: void <init>(java.lang.String,android.os.Bundle)>(r1, $r7);

        $r8 = interfaceinvoke r3.<androidx.media3.session.MediaController$Listener: com.google.common.util.concurrent.ListenableFuture onCustomCommand(androidx.media3.session.MediaController,androidx.media3.session.SessionCommand,android.os.Bundle)>($r5, $r6, r2);

        staticinvoke <androidx.media3.session.MediaControllerImplLegacy: void access$700(java.util.concurrent.Future)>($r8);

        return;
    }

    private boolean lambda$new$0(android.os.Message)
    {
        androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback r0;
        android.os.Message r1;
        int $i0;
        androidx.media3.session.MediaControllerImplLegacy $r2, $r3;
        androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo $r4;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int what>;

        if $i0 != 1 goto label1;

        $r3 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: androidx.media3.session.MediaControllerImplLegacy this$0>;

        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerCompatCallback: androidx.media3.session.MediaControllerImplLegacy this$0>;

        $r4 = staticinvoke <androidx.media3.session.MediaControllerImplLegacy: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo access$200(androidx.media3.session.MediaControllerImplLegacy)>($r2);

        staticinvoke <androidx.media3.session.MediaControllerImplLegacy: void access$500(androidx.media3.session.MediaControllerImplLegacy,boolean,androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo)>($r3, 0, $r4);

     label1:
        return 1;
    }

androidx.media3.session.MediaControllerImplLegacy$ControllerInfo
<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo>
<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.SessionCommands availableSessionCommands>
<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.common.Player$Commands availablePlayerCommands>
<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: com.google.common.collect.ImmutableList customLayout>
    public void <init>()
    {
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r0;
        androidx.media3.session.QueueTimeline $r1;
        androidx.media3.session.PlayerInfo $r2, $r3;
        androidx.media3.session.SessionCommands $r4;
        androidx.media3.common.Player$Commands $r5;
        com.google.common.collect.ImmutableList $r6;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo DEFAULT>;

        $r1 = <androidx.media3.session.QueueTimeline: androidx.media3.session.QueueTimeline DEFAULT>;

        $r3 = virtualinvoke $r2.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithTimeline(androidx.media3.common.Timeline)>($r1);

        r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo> = $r3;

        $r4 = <androidx.media3.session.SessionCommands: androidx.media3.session.SessionCommands EMPTY>;

        r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.SessionCommands availableSessionCommands> = $r4;

        $r5 = <androidx.media3.common.Player$Commands: androidx.media3.common.Player$Commands EMPTY>;

        r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.common.Player$Commands availablePlayerCommands> = $r5;

        $r6 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();

        r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: com.google.common.collect.ImmutableList customLayout> = $r6;

        return;
    }

    public void <init>(androidx.media3.session.PlayerInfo, androidx.media3.session.SessionCommands, androidx.media3.common.Player$Commands, com.google.common.collect.ImmutableList)
    {
        androidx.media3.session.MediaControllerImplLegacy$ControllerInfo r0;
        androidx.media3.session.PlayerInfo r1;
        androidx.media3.session.SessionCommands r2;
        androidx.media3.common.Player$Commands r3;
        com.google.common.collect.ImmutableList r4;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$ControllerInfo;

        r1 := @parameter0: androidx.media3.session.PlayerInfo;

        r2 := @parameter1: androidx.media3.session.SessionCommands;

        r3 := @parameter2: androidx.media3.common.Player$Commands;

        r4 := @parameter3: com.google.common.collect.ImmutableList;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.PlayerInfo playerInfo> = r1;

        r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.session.SessionCommands availableSessionCommands> = r2;

        r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: androidx.media3.common.Player$Commands availablePlayerCommands> = r3;

        r0.<androidx.media3.session.MediaControllerImplLegacy$ControllerInfo: com.google.common.collect.ImmutableList customLayout> = r4;

        return;
    }

androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo
<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.MediaControllerCompat$PlaybackInfo playbackInfoCompat>
<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.PlaybackStateCompat playbackStateCompat>
<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.MediaMetadataCompat mediaMetadataCompat>
<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.util.List queue>
<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.lang.CharSequence queueTitle>
<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: int repeatMode>
<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: int shuffleMode>
    public void <init>()
    {
        androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo r0;
        java.util.List $r1;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.MediaControllerCompat$PlaybackInfo playbackInfoCompat> = null;

        r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.PlaybackStateCompat playbackStateCompat> = null;

        r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.MediaMetadataCompat mediaMetadataCompat> = null;

        $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.util.List queue> = $r1;

        r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.lang.CharSequence queueTitle> = null;

        r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: int repeatMode> = 0;

        r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: int shuffleMode> = 0;

        return;
    }

    public void <init>(android.support.v4.media.session.MediaControllerCompat$PlaybackInfo, android.support.v4.media.session.PlaybackStateCompat, android.support.v4.media.MediaMetadataCompat, java.util.List, java.lang.CharSequence, int, int)
    {
        androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo r0;
        android.support.v4.media.session.MediaControllerCompat$PlaybackInfo r1;
        android.support.v4.media.session.PlaybackStateCompat r2;
        android.support.v4.media.MediaMetadataCompat r3;
        java.util.List r4, $r7;
        java.lang.CharSequence r5;
        int i0, i1;
        java.lang.Object $r6;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo;

        r1 := @parameter0: android.support.v4.media.session.MediaControllerCompat$PlaybackInfo;

        r2 := @parameter1: android.support.v4.media.session.PlaybackStateCompat;

        r3 := @parameter2: android.support.v4.media.MediaMetadataCompat;

        r4 := @parameter3: java.util.List;

        r5 := @parameter4: java.lang.CharSequence;

        i0 := @parameter5: int;

        i1 := @parameter6: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.MediaControllerCompat$PlaybackInfo playbackInfoCompat> = r1;

        r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.PlaybackStateCompat playbackStateCompat> = r2;

        r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.MediaMetadataCompat mediaMetadataCompat> = r3;

        $r6 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r4);

        $r7 = (java.util.List) $r6;

        r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.util.List queue> = $r7;

        r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.lang.CharSequence queueTitle> = r5;

        r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: int repeatMode> = i0;

        r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: int shuffleMode> = i1;

        return;
    }

    public void <init>(androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo)
    {
        androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo r0, r1;
        android.support.v4.media.session.MediaControllerCompat$PlaybackInfo $r2;
        android.support.v4.media.session.PlaybackStateCompat $r3;
        android.support.v4.media.MediaMetadataCompat $r4;
        java.util.List $r5;
        java.lang.CharSequence $r6;
        int $i0, $i1;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo;

        r1 := @parameter0: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r1.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.MediaControllerCompat$PlaybackInfo playbackInfoCompat>;

        r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.MediaControllerCompat$PlaybackInfo playbackInfoCompat> = $r2;

        $r3 = r1.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.PlaybackStateCompat playbackStateCompat>;

        r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.PlaybackStateCompat playbackStateCompat> = $r3;

        $r4 = r1.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.MediaMetadataCompat mediaMetadataCompat>;

        r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.MediaMetadataCompat mediaMetadataCompat> = $r4;

        $r5 = r1.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.util.List queue>;

        r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.util.List queue> = $r5;

        $r6 = r1.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.lang.CharSequence queueTitle>;

        r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.lang.CharSequence queueTitle> = $r6;

        $i0 = r1.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: int repeatMode>;

        r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: int repeatMode> = $i0;

        $i1 = r1.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: int shuffleMode>;

        r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: int shuffleMode> = $i1;

        return;
    }

    public androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo copyWithExtraBinderGetters(android.support.v4.media.session.PlaybackStateCompat, int, int)
    {
        androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo r0, $r2;
        android.support.v4.media.session.PlaybackStateCompat r1;
        int i0, i1;
        java.lang.CharSequence $r3;
        java.util.List $r4;
        android.support.v4.media.MediaMetadataCompat $r5;
        android.support.v4.media.session.MediaControllerCompat$PlaybackInfo $r6;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo;

        r1 := @parameter0: android.support.v4.media.session.PlaybackStateCompat;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo;

        $r6 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.MediaControllerCompat$PlaybackInfo playbackInfoCompat>;

        $r5 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.MediaMetadataCompat mediaMetadataCompat>;

        $r4 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.util.List queue>;

        $r3 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.lang.CharSequence queueTitle>;

        specialinvoke $r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: void <init>(android.support.v4.media.session.MediaControllerCompat$PlaybackInfo,android.support.v4.media.session.PlaybackStateCompat,android.support.v4.media.MediaMetadataCompat,java.util.List,java.lang.CharSequence,int,int)>($r6, r1, $r5, $r4, $r3, i0, i1);

        return $r2;
    }

    public androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo copyWithPlaybackStateCompat(android.support.v4.media.session.PlaybackStateCompat)
    {
        androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo r0, $r2;
        android.support.v4.media.session.PlaybackStateCompat r1;
        int $i0, $i1;
        java.lang.CharSequence $r3;
        java.util.List $r4;
        android.support.v4.media.MediaMetadataCompat $r5;
        android.support.v4.media.session.MediaControllerCompat$PlaybackInfo $r6;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo;

        r1 := @parameter0: android.support.v4.media.session.PlaybackStateCompat;

        $r2 = new androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo;

        $r6 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.MediaControllerCompat$PlaybackInfo playbackInfoCompat>;

        $r5 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.MediaMetadataCompat mediaMetadataCompat>;

        $r4 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.util.List queue>;

        $r3 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.lang.CharSequence queueTitle>;

        $i1 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: int repeatMode>;

        $i0 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: int shuffleMode>;

        specialinvoke $r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: void <init>(android.support.v4.media.session.MediaControllerCompat$PlaybackInfo,android.support.v4.media.session.PlaybackStateCompat,android.support.v4.media.MediaMetadataCompat,java.util.List,java.lang.CharSequence,int,int)>($r6, r1, $r5, $r4, $r3, $i1, $i0);

        return $r2;
    }

    public androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo copyWithMediaMetadataCompat(android.support.v4.media.MediaMetadataCompat)
    {
        androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo r0, $r2;
        android.support.v4.media.MediaMetadataCompat r1;
        int $i0, $i1;
        java.lang.CharSequence $r3;
        java.util.List $r4;
        android.support.v4.media.session.PlaybackStateCompat $r5;
        android.support.v4.media.session.MediaControllerCompat$PlaybackInfo $r6;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo;

        r1 := @parameter0: android.support.v4.media.MediaMetadataCompat;

        $r2 = new androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo;

        $r6 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.MediaControllerCompat$PlaybackInfo playbackInfoCompat>;

        $r5 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.PlaybackStateCompat playbackStateCompat>;

        $r4 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.util.List queue>;

        $r3 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.lang.CharSequence queueTitle>;

        $i1 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: int repeatMode>;

        $i0 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: int shuffleMode>;

        specialinvoke $r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: void <init>(android.support.v4.media.session.MediaControllerCompat$PlaybackInfo,android.support.v4.media.session.PlaybackStateCompat,android.support.v4.media.MediaMetadataCompat,java.util.List,java.lang.CharSequence,int,int)>($r6, $r5, r1, $r4, $r3, $i1, $i0);

        return $r2;
    }

    public androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo copyWithQueue(java.util.List)
    {
        androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo r0, $r2;
        java.util.List r1;
        int $i0, $i1;
        java.lang.CharSequence $r3;
        android.support.v4.media.MediaMetadataCompat $r4;
        android.support.v4.media.session.PlaybackStateCompat $r5;
        android.support.v4.media.session.MediaControllerCompat$PlaybackInfo $r6;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo;

        r1 := @parameter0: java.util.List;

        $r2 = new androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo;

        $r6 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.MediaControllerCompat$PlaybackInfo playbackInfoCompat>;

        $r5 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.PlaybackStateCompat playbackStateCompat>;

        $r4 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.MediaMetadataCompat mediaMetadataCompat>;

        $r3 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.lang.CharSequence queueTitle>;

        $i1 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: int repeatMode>;

        $i0 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: int shuffleMode>;

        specialinvoke $r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: void <init>(android.support.v4.media.session.MediaControllerCompat$PlaybackInfo,android.support.v4.media.session.PlaybackStateCompat,android.support.v4.media.MediaMetadataCompat,java.util.List,java.lang.CharSequence,int,int)>($r6, $r5, $r4, r1, $r3, $i1, $i0);

        return $r2;
    }

    public androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo copyWithQueueTitle(java.lang.CharSequence)
    {
        androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo r0, $r2;
        java.lang.CharSequence r1;
        int $i0, $i1;
        java.util.List $r3;
        android.support.v4.media.MediaMetadataCompat $r4;
        android.support.v4.media.session.PlaybackStateCompat $r5;
        android.support.v4.media.session.MediaControllerCompat$PlaybackInfo $r6;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = new androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo;

        $r6 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.MediaControllerCompat$PlaybackInfo playbackInfoCompat>;

        $r5 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.PlaybackStateCompat playbackStateCompat>;

        $r4 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.MediaMetadataCompat mediaMetadataCompat>;

        $r3 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.util.List queue>;

        $i1 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: int repeatMode>;

        $i0 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: int shuffleMode>;

        specialinvoke $r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: void <init>(android.support.v4.media.session.MediaControllerCompat$PlaybackInfo,android.support.v4.media.session.PlaybackStateCompat,android.support.v4.media.MediaMetadataCompat,java.util.List,java.lang.CharSequence,int,int)>($r6, $r5, $r4, $r3, r1, $i1, $i0);

        return $r2;
    }

    public androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo copyWithPlaybackInfoCompat(android.support.v4.media.session.MediaControllerCompat$PlaybackInfo)
    {
        androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo r0, $r2;
        android.support.v4.media.session.MediaControllerCompat$PlaybackInfo r1;
        int $i0, $i1;
        java.lang.CharSequence $r3;
        java.util.List $r4;
        android.support.v4.media.MediaMetadataCompat $r5;
        android.support.v4.media.session.PlaybackStateCompat $r6;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo;

        r1 := @parameter0: android.support.v4.media.session.MediaControllerCompat$PlaybackInfo;

        $r2 = new androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo;

        $r6 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.PlaybackStateCompat playbackStateCompat>;

        $r5 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.MediaMetadataCompat mediaMetadataCompat>;

        $r4 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.util.List queue>;

        $r3 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.lang.CharSequence queueTitle>;

        $i1 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: int repeatMode>;

        $i0 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: int shuffleMode>;

        specialinvoke $r2.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: void <init>(android.support.v4.media.session.MediaControllerCompat$PlaybackInfo,android.support.v4.media.session.PlaybackStateCompat,android.support.v4.media.MediaMetadataCompat,java.util.List,java.lang.CharSequence,int,int)>(r1, $r6, $r5, $r4, $r3, $i1, $i0);

        return $r2;
    }

    public androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo copyWithRepeatMode(int)
    {
        androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo r0, $r1;
        int i0, $i1;
        java.lang.CharSequence $r2;
        java.util.List $r3;
        android.support.v4.media.MediaMetadataCompat $r4;
        android.support.v4.media.session.PlaybackStateCompat $r5;
        android.support.v4.media.session.MediaControllerCompat$PlaybackInfo $r6;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo;

        i0 := @parameter0: int;

        $r1 = new androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo;

        $r6 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.MediaControllerCompat$PlaybackInfo playbackInfoCompat>;

        $r5 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.PlaybackStateCompat playbackStateCompat>;

        $r4 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.MediaMetadataCompat mediaMetadataCompat>;

        $r3 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.util.List queue>;

        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.lang.CharSequence queueTitle>;

        $i1 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: int shuffleMode>;

        specialinvoke $r1.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: void <init>(android.support.v4.media.session.MediaControllerCompat$PlaybackInfo,android.support.v4.media.session.PlaybackStateCompat,android.support.v4.media.MediaMetadataCompat,java.util.List,java.lang.CharSequence,int,int)>($r6, $r5, $r4, $r3, $r2, i0, $i1);

        return $r1;
    }

    public androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo copyWithShuffleMode(int)
    {
        androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo r0, $r1;
        int i0, $i1;
        java.lang.CharSequence $r2;
        java.util.List $r3;
        android.support.v4.media.MediaMetadataCompat $r4;
        android.support.v4.media.session.PlaybackStateCompat $r5;
        android.support.v4.media.session.MediaControllerCompat$PlaybackInfo $r6;

        r0 := @this: androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo;

        i0 := @parameter0: int;

        $r1 = new androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo;

        $r6 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.MediaControllerCompat$PlaybackInfo playbackInfoCompat>;

        $r5 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.session.PlaybackStateCompat playbackStateCompat>;

        $r4 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: android.support.v4.media.MediaMetadataCompat mediaMetadataCompat>;

        $r3 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.util.List queue>;

        $r2 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: java.lang.CharSequence queueTitle>;

        $i1 = r0.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: int repeatMode>;

        specialinvoke $r1.<androidx.media3.session.MediaControllerImplLegacy$LegacyPlayerInfo: void <init>(android.support.v4.media.session.MediaControllerCompat$PlaybackInfo,android.support.v4.media.session.PlaybackStateCompat,android.support.v4.media.MediaMetadataCompat,java.util.List,java.lang.CharSequence,int,int)>($r6, $r5, $r4, $r3, $r2, $i1, i0);

        return $r1;
    }

