androidx.compose.ui.node.LayoutNodeLayoutDelegateKt
    private static final void updateChildMeasurables(androidx.compose.ui.node.LayoutNode, androidx.compose.runtime.collection.MutableVector, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.node.LayoutNode $r0, r3, r6;
        androidx.compose.runtime.collection.MutableVector r1, r4;
        kotlin.jvm.functions.Function1 r2;
        int i0, i1, $i2, $i3, $i4, i5;
        java.lang.Object[] r5, $r8;
        java.util.List $r7;
        java.lang.Object $r9, $r10, $r12;

        $r0 := @parameter0: androidx.compose.ui.node.LayoutNode;

        r1 := @parameter1: androidx.compose.runtime.collection.MutableVector;

        r2 := @parameter2: kotlin.jvm.functions.Function1;

        r3 = $r0;

        r4 = virtualinvoke r3.<androidx.compose.ui.node.LayoutNode: androidx.compose.runtime.collection.MutableVector get_children$ui_release()>();

        i0 = virtualinvoke r4.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if i0 <= 0 goto label4;

        i5 = 0;

        $r8 = virtualinvoke r4.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r8, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r5 = $r8;

     label1:
        $r9 = r5[i5];

        r6 = (androidx.compose.ui.node.LayoutNode) $r9;

        i1 = i5;

        $i4 = virtualinvoke r1.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if $i4 > i1 goto label2;

        $r12 = interfaceinvoke r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r6);

        virtualinvoke r1.<androidx.compose.runtime.collection.MutableVector: boolean add(java.lang.Object)>($r12);

        goto label3;

     label2:
        $r10 = interfaceinvoke r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r6);

        virtualinvoke r1.<androidx.compose.runtime.collection.MutableVector: java.lang.Object set(int,java.lang.Object)>(i1, $r10);

     label3:
        i5 = i5 + 1;

        if i5 < i0 goto label1;

     label4:
        $r7 = virtualinvoke $r0.<androidx.compose.ui.node.LayoutNode: java.util.List getChildren$ui_release()>();

        $i2 = interfaceinvoke $r7.<java.util.List: int size()>();

        $i3 = virtualinvoke r1.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        virtualinvoke r1.<androidx.compose.runtime.collection.MutableVector: void removeRange(int,int)>($i2, $i3);

        return;
    }

    public static final void access$updateChildMeasurables(androidx.compose.ui.node.LayoutNode, androidx.compose.runtime.collection.MutableVector, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.node.LayoutNode $r0;
        androidx.compose.runtime.collection.MutableVector r1;
        kotlin.jvm.functions.Function1 r2;

        $r0 := @parameter0: androidx.compose.ui.node.LayoutNode;

        r1 := @parameter1: androidx.compose.runtime.collection.MutableVector;

        r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <androidx.compose.ui.node.LayoutNodeLayoutDelegateKt: void updateChildMeasurables(androidx.compose.ui.node.LayoutNode,androidx.compose.runtime.collection.MutableVector,kotlin.jvm.functions.Function1)>($r0, r1, r2);

        return;
    }

