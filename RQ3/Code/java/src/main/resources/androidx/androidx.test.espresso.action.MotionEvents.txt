androidx.test.espresso.action.MotionEvents
<androidx.test.espresso.action.MotionEvents: java.lang.String TAG>
<androidx.test.espresso.action.MotionEvents: int MAX_CLICK_ATTEMPTS>
    private static int mapInputDeviceToToolType(int)
    {
        int i0;
        byte b1;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 4098: goto label5;
            case 8194: goto label4;
            case 16386: goto label3;
            default: goto label1;
        };

     label1:
        b1 = 0;

     label2:
        return b1;

     label3:
        b1 = 2;

        goto label2;

     label4:
        b1 = 3;

        goto label2;

     label5:
        b1 = 1;

        goto label2;
    }

    private static android.view.MotionEvent obtain(android.view.MotionEvent, long, int, float[])
    {
        android.view.MotionEvent r0, $r2;
        long l0, $l2;
        int i1, $i3, $i4, $i5;
        float[] r1;
        float $f0, $f1;

        r0 := @parameter0: android.view.MotionEvent;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        r1 := @parameter3: float[];

        $l2 = virtualinvoke r0.<android.view.MotionEvent: long getDownTime()>();

        $f0 = virtualinvoke r0.<android.view.MotionEvent: float getXPrecision()>();

        $f1 = virtualinvoke r0.<android.view.MotionEvent: float getYPrecision()>();

        $i3 = virtualinvoke r0.<android.view.MotionEvent: int getSource()>();

        $i4 = virtualinvoke r0.<android.view.MotionEvent: int getToolType(int)>(0);

        $i5 = virtualinvoke r0.<android.view.MotionEvent: int getButtonState()>();

        $r2 = staticinvoke <androidx.test.espresso.action.MotionEvents: android.view.MotionEvent obtain(long,long,int,float[],float,float,int,int,int)>($l2, l0, i1, r1, $f0, $f1, $i3, $i4, $i5);

        return $r2;
    }

    private static android.view.MotionEvent obtain(long, long, int, float[], float, float, int, int)
    {
        long l0, l1;
        int i2, i3, i4, $i5;
        float[] r0;
        float f0, f1;
        android.view.MotionEvent $r1;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        r0 := @parameter3: float[];

        f0 := @parameter4: float;

        f1 := @parameter5: float;

        i3 := @parameter6: int;

        i4 := @parameter7: int;

        $i5 = staticinvoke <androidx.test.espresso.action.MotionEvents: int mapInputDeviceToToolType(int)>(i3);

        $r1 = staticinvoke <androidx.test.espresso.action.MotionEvents: android.view.MotionEvent obtain(long,long,int,float[],float,float,int,int,int)>(l0, l1, i2, r0, f0, f1, i3, $i5, i4);

        return $r1;
    }

    private static android.view.MotionEvent obtain(long, long, int, float[], float, float, int, int, int)
    {
        long l0, l1;
        int i2, i3, i4, i5;
        float[] r0;
        float f0, f1, $f2, $f3;
        android.view.MotionEvent$PointerCoords[] r1;
        android.view.MotionEvent$PointerCoords r2, $r3, $r4, $r5, $r6, $r7;
        android.view.MotionEvent $r8;
        android.view.MotionEvent$PointerProperties[] r9;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        r0 := @parameter3: float[];

        f0 := @parameter4: float;

        f1 := @parameter5: float;

        i3 := @parameter6: int;

        i5 := @parameter7: int;

        i4 := @parameter8: int;

        r1 = newarray (android.view.MotionEvent$PointerCoords)[1];

        r2 = new android.view.MotionEvent$PointerCoords;

        specialinvoke r2.<android.view.MotionEvent$PointerCoords: void <init>()>();

        r1[0] = r2;

        r9 = staticinvoke <androidx.test.espresso.action.MotionEvents: android.view.MotionEvent$PointerProperties[] getPointerProperties(int)>(i5);

        $r3 = r1[0];

        virtualinvoke $r3.<android.view.MotionEvent$PointerCoords: void clear()>();

        $r4 = r1[0];

        $f2 = r0[0];

        $r4.<android.view.MotionEvent$PointerCoords: float x> = $f2;

        $r5 = r1[0];

        $f3 = r0[1];

        $r5.<android.view.MotionEvent$PointerCoords: float y> = $f3;

        $r6 = r1[0];

        $r6.<android.view.MotionEvent$PointerCoords: float pressure> = 0.0F;

        $r7 = r1[0];

        $r7.<android.view.MotionEvent$PointerCoords: float size> = 1.0F;

        $r8 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[],int,int,float,float,int,int,int,int)>(l0, l1, i2, 1, r9, r1, 0, i4, f0, f1, 0, 0, i3, 0);

        return $r8;
    }

    public static android.view.MotionEvent obtainDownEvent(float[], float[])
    {
        float[] r0, r1;
        android.view.MotionEvent $r2;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        $r2 = staticinvoke <androidx.test.espresso.action.MotionEvents: android.view.MotionEvent obtainDownEvent(float[],float[],int,int)>(r0, r1, 0, 1);

        return $r2;
    }

    public static android.view.MotionEvent obtainDownEvent(float[], float[], int, int)
    {
        float[] r0, r1;
        int i0, i1;
        long l2;
        float $f0, $f1;
        android.view.MotionEvent $r4;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $f1 = r1[0];

        $f0 = r1[1];

        $r4 = staticinvoke <androidx.test.espresso.action.MotionEvents: android.view.MotionEvent obtain(long,long,int,float[],float,float,int,int)>(l2, l2, 0, r0, $f1, $f0, i0, i1);

        return $r4;
    }

    public static android.view.MotionEvent obtainMovement(long, float[])
    {
        long l0, $l1;
        float[] r0;
        float $f0, $f1;
        android.view.MotionEvent $r1;

        l0 := @parameter0: long;

        r0 := @parameter1: float[];

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $f1 = r0[0];

        $f0 = r0[1];

        $r1 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>(l0, $l1, 2, $f1, $f0, 0);

        return $r1;
    }

    public static android.view.MotionEvent obtainMovement(android.view.MotionEvent, float[])
    {
        android.view.MotionEvent r0, $r2;
        float[] r1;
        long $l0;

        r0 := @parameter0: android.view.MotionEvent;

        r1 := @parameter1: float[];

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r2 = staticinvoke <androidx.test.espresso.action.MotionEvents: android.view.MotionEvent obtainMovement(android.view.MotionEvent,long,float[])>(r0, $l0, r1);

        return $r2;
    }

    public static android.view.MotionEvent obtainMovement(long, long, float[])
    {
        long l0, l1;
        float[] r0;
        float $f0, $f1;
        android.view.MotionEvent $r1;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r0 := @parameter2: float[];

        $f1 = r0[1];

        $f0 = r0[1];

        $r1 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>(l0, l1, 2, $f1, $f0, 0);

        return $r1;
    }

    public static android.view.MotionEvent obtainMovement(android.view.MotionEvent, long, float[])
    {
        android.view.MotionEvent r0, $r4;
        long l0;
        float[] r1;

        r0 := @parameter0: android.view.MotionEvent;

        l0 := @parameter1: long;

        r1 := @parameter2: float[];

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = staticinvoke <androidx.test.espresso.action.MotionEvents: android.view.MotionEvent obtain(android.view.MotionEvent,long,int,float[])>(r0, l0, 2, r1);

        return $r4;
    }

    public static android.view.MotionEvent obtainUpEvent(android.view.MotionEvent, float[])
    {
        android.view.MotionEvent r0, $r2;
        float[] r1;
        long $l0;

        r0 := @parameter0: android.view.MotionEvent;

        r1 := @parameter1: float[];

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r2 = staticinvoke <androidx.test.espresso.action.MotionEvents: android.view.MotionEvent obtainUpEvent(android.view.MotionEvent,long,float[])>(r0, $l0, r1);

        return $r2;
    }

    public static android.view.MotionEvent obtainUpEvent(android.view.MotionEvent, long, float[])
    {
        android.view.MotionEvent r0, $r4;
        long l0;
        float[] r1;

        r0 := @parameter0: android.view.MotionEvent;

        l0 := @parameter1: long;

        r1 := @parameter2: float[];

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = staticinvoke <androidx.test.espresso.action.MotionEvents: android.view.MotionEvent obtain(android.view.MotionEvent,long,int,float[])>(r0, l0, 1, r1);

        return $r4;
    }

    public static androidx.test.espresso.action.MotionEvents$DownResultHolder sendDown(androidx.test.espresso.UiController, float[], float[])
    {
        androidx.test.espresso.UiController r0;
        float[] r1, r2;
        androidx.test.espresso.action.MotionEvents$DownResultHolder $r3;

        r0 := @parameter0: androidx.test.espresso.UiController;

        r1 := @parameter1: float[];

        r2 := @parameter2: float[];

        $r3 = staticinvoke <androidx.test.espresso.action.MotionEvents: androidx.test.espresso.action.MotionEvents$DownResultHolder sendDown(androidx.test.espresso.UiController,float[],float[],int,int)>(r0, r1, r2, 0, 1);

        return $r3;
    }

    public static androidx.test.espresso.action.MotionEvents$DownResultHolder sendDown(androidx.test.espresso.UiController, float[], float[], int, int)
    {
        int i0, i1, $i5, i13, i14, i17;
        android.view.MotionEvent r0;
        long l2, l3, l4, $l6, $l8, $l9, $l10, l15, l16;
        boolean z0, z1;
        java.lang.Integer $r4;
        java.lang.String $r5, $r9;
        androidx.test.espresso.PerformException$Builder $r6, $r7, $r11, $r12, $r13, r20, r21;
        androidx.test.espresso.PerformException $r8, $r14;
        byte $b7, $b11;
        androidx.test.espresso.InjectEventSecurityException $r10, r19;
        androidx.test.espresso.UiController r15;
        float[] r16, r17;
        androidx.test.espresso.action.MotionEvents$DownResultHolder r18;
        java.util.Locale r22;
        java.lang.Object[] r23;

        r15 := @parameter0: androidx.test.espresso.UiController;

        r16 := @parameter1: float[];

        r17 := @parameter2: float[];

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r15);

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r16);

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r17);

        i13 = 0;

     label01:
        if i13 >= 3 goto label17;

     label02:
        r0 = staticinvoke <androidx.test.espresso.action.MotionEvents: android.view.MotionEvent obtainDownEvent(float[],float[],int,int)>(r16, r17, i0, i1);

        l2 = virtualinvoke r0.<android.view.MotionEvent: long getDownTime()>();

        $i5 = staticinvoke <android.view.ViewConfiguration: int getTapTimeout()>();

        i14 = $i5 / 2;

     label03:
        $l6 = (long) i14;

        l3 = l2 + $l6;

     label04:
        z0 = interfaceinvoke r15.<androidx.test.espresso.UiController: boolean injectMotionEvent(android.view.MotionEvent)>(r0);

     label05:
        l15 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label06:
        l4 = l3 - l15;

        $b7 = l4 cmp 10L;

        if $b7 > 0 goto label18;

     label07:
        l16 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        i17 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>();

     label08:
        $l9 = (long) i17;

        $l10 = l2 + $l9;

        $b11 = l16 cmp $l10;

        if $b11 <= 0 goto label15;

     label09:
        $r9 = <androidx.test.espresso.action.MotionEvents: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r9, "Overslept and turned a tap into a long press");

        z1 = 1;

     label10:
        if z0 != 0 goto label13;

     label11:
        virtualinvoke r0.<android.view.MotionEvent: void recycle()>();

     label12:
        i13 = i13 + 1;

        goto label01;

     label13:
        r18 = new androidx.test.espresso.action.MotionEvents$DownResultHolder;

        specialinvoke r18.<androidx.test.espresso.action.MotionEvents$DownResultHolder: void <init>(android.view.MotionEvent,boolean)>(r0, z1);

     label14:
        return r18;

     label15:
        z1 = 0;

        goto label10;

     label16:
        $r10 := @caughtexception;

        r19 = $r10;

        r20 = new androidx.test.espresso.PerformException$Builder;

        specialinvoke r20.<androidx.test.espresso.PerformException$Builder: void <init>()>();

        $r11 = virtualinvoke r20.<androidx.test.espresso.PerformException$Builder: androidx.test.espresso.PerformException$Builder withActionDescription(java.lang.String)>("Send down motion event");

        $r12 = virtualinvoke $r11.<androidx.test.espresso.PerformException$Builder: androidx.test.espresso.PerformException$Builder withViewDescription(java.lang.String)>("unknown");

        $r13 = virtualinvoke $r12.<androidx.test.espresso.PerformException$Builder: androidx.test.espresso.PerformException$Builder withCause(java.lang.Throwable)>(r19);

        $r14 = virtualinvoke $r13.<androidx.test.espresso.PerformException$Builder: androidx.test.espresso.PerformException build()>();

        throw $r14;

     label17:
        r21 = new androidx.test.espresso.PerformException$Builder;

        specialinvoke r21.<androidx.test.espresso.PerformException$Builder: void <init>()>();

        r22 = <java.util.Locale: java.util.Locale ROOT>;

        r23 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        r23[0] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r22, "click (after %s attempts)", r23);

        $r6 = virtualinvoke r21.<androidx.test.espresso.PerformException$Builder: androidx.test.espresso.PerformException$Builder withActionDescription(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<androidx.test.espresso.PerformException$Builder: androidx.test.espresso.PerformException$Builder withViewDescription(java.lang.String)>("unknown");

        $r8 = virtualinvoke $r7.<androidx.test.espresso.PerformException$Builder: androidx.test.espresso.PerformException build()>();

        throw $r8;

     label18:
        $l8 = l4 / 4L;

        interfaceinvoke r15.<androidx.test.espresso.UiController: void loopMainThreadForAtLeast(long)>($l8);

        goto label05;

     label19:
        nop;

        catch androidx.test.espresso.InjectEventSecurityException from label02 to label03 with label16;
        catch androidx.test.espresso.InjectEventSecurityException from label04 to label05 with label16;
        catch androidx.test.espresso.InjectEventSecurityException from label05 to label06 with label16;
        catch androidx.test.espresso.InjectEventSecurityException from label07 to label08 with label16;
        catch androidx.test.espresso.InjectEventSecurityException from label09 to label10 with label16;
        catch androidx.test.espresso.InjectEventSecurityException from label11 to label12 with label16;
        catch androidx.test.espresso.InjectEventSecurityException from label13 to label14 with label16;
        catch androidx.test.espresso.InjectEventSecurityException from label18 to label19 with label16;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Landroidx/test/espresso/action/MotionEvents;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <androidx.test.espresso.action.MotionEvents: java.lang.String TAG> = $r1;

        return;
    }

    private void <init>()
    {
        androidx.test.espresso.action.MotionEvents r0;

        r0 := @this: androidx.test.espresso.action.MotionEvents;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void sendCancel(androidx.test.espresso.UiController, android.view.MotionEvent)
    {
        java.lang.Object[] r0, r20;
        float $f0, $f1;
        long $l0;
        java.lang.String $r3, $r7, r18;
        java.lang.Throwable $r4, $r5, $r12, r24;
        androidx.test.espresso.InjectEventSecurityException $r6, $r13, r21;
        androidx.test.espresso.PerformException$Builder $r8, $r9, $r10, r22;
        androidx.test.espresso.PerformException $r11;
        androidx.test.espresso.UiController r14;
        android.view.MotionEvent r15, r17, r25;
        float[] r16;
        boolean z0;
        java.util.Locale r19, r23;

        r14 := @parameter0: androidx.test.espresso.UiController;

        r15 := @parameter1: android.view.MotionEvent;

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r14);

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r15);

     label01:
        r16 = newarray (float)[2];

     label02:
        $f0 = virtualinvoke r15.<android.view.MotionEvent: float getX()>();

        r16[0] = $f0;

     label03:
        $f1 = virtualinvoke r15.<android.view.MotionEvent: float getY()>();

        r16[1] = $f1;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r17 = staticinvoke <androidx.test.espresso.action.MotionEvents: android.view.MotionEvent obtain(android.view.MotionEvent,long,int,float[])>(r15, $l0, 3, r16);

     label04:
        z0 = interfaceinvoke r14.<androidx.test.espresso.UiController: boolean injectMotionEvent(android.view.MotionEvent)>(r17);

     label05:
        if z0 != 0 goto label09;

     label06:
        r18 = <androidx.test.espresso.action.MotionEvents: java.lang.String TAG>;

        r19 = <java.util.Locale: java.util.Locale ROOT>;

        r20 = newarray (java.lang.Object)[1];

        r20[0] = r15;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r19, "Injection of cancel event failed (corresponding down event: %s)", r20);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(r18, $r3);

     label07:
        if r17 == null goto label08;

        virtualinvoke r17.<android.view.MotionEvent: void recycle()>();

        return;

     label08:
        return;

     label09:
        if r17 == null goto label10;

        virtualinvoke r17.<android.view.MotionEvent: void recycle()>();

        return;

     label10:
        return;

     label11:
        $r13 := @caughtexception;

        r21 = $r13;

        r17 = null;

     label12:
        r22 = new androidx.test.espresso.PerformException$Builder;

        specialinvoke r22.<androidx.test.espresso.PerformException$Builder: void <init>()>();

        r23 = <java.util.Locale: java.util.Locale ROOT>;

        r0 = newarray (java.lang.Object)[1];

        r0[0] = r15;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r23, "inject cancel event (corresponding down event: %s)", r0);

        $r8 = virtualinvoke r22.<androidx.test.espresso.PerformException$Builder: androidx.test.espresso.PerformException$Builder withActionDescription(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<androidx.test.espresso.PerformException$Builder: androidx.test.espresso.PerformException$Builder withViewDescription(java.lang.String)>("unknown");

        $r10 = virtualinvoke $r9.<androidx.test.espresso.PerformException$Builder: androidx.test.espresso.PerformException$Builder withCause(java.lang.Throwable)>(r21);

        $r11 = virtualinvoke $r10.<androidx.test.espresso.PerformException$Builder: androidx.test.espresso.PerformException build()>();

        throw $r11;

     label13:
        $r4 := @caughtexception;

        r24 = $r4;

        r25 = null;

     label14:
        if r25 == null goto label15;

        virtualinvoke r25.<android.view.MotionEvent: void recycle()>();

     label15:
        throw r24;

     label16:
        $r6 := @caughtexception;

        r21 = $r6;

        goto label12;

     label17:
        $r5 := @caughtexception;

        r24 = $r5;

        r25 = r17;

        goto label14;

     label18:
        $r12 := @caughtexception;

        r24 = $r12;

        r25 = r17;

        goto label14;

        catch androidx.test.espresso.InjectEventSecurityException from label01 to label02 with label11;
        catch java.lang.Throwable from label01 to label02 with label13;
        catch androidx.test.espresso.InjectEventSecurityException from label02 to label03 with label11;
        catch java.lang.Throwable from label02 to label03 with label13;
        catch androidx.test.espresso.InjectEventSecurityException from label03 to label04 with label11;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch androidx.test.espresso.InjectEventSecurityException from label04 to label05 with label16;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch androidx.test.espresso.InjectEventSecurityException from label06 to label07 with label16;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label12 to label13 with label18;
    }

    public static boolean sendMovement(androidx.test.espresso.UiController, android.view.MotionEvent, float[])
    {
        java.lang.Object[] r0, r21;
        java.lang.String $r4, $r8, r19;
        java.lang.Throwable $r5, $r6, $r13, r25;
        androidx.test.espresso.InjectEventSecurityException $r7, $r14, r22;
        androidx.test.espresso.PerformException$Builder $r9, $r10, $r11, r23;
        androidx.test.espresso.PerformException $r12;
        androidx.test.espresso.UiController r15;
        android.view.MotionEvent r16, r18, r26;
        float[] r17;
        boolean z0;
        java.util.Locale r20, r24;

        r15 := @parameter0: androidx.test.espresso.UiController;

        r16 := @parameter1: android.view.MotionEvent;

        r17 := @parameter2: float[];

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r15);

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r16);

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r17);

     label01:
        r18 = staticinvoke <androidx.test.espresso.action.MotionEvents: android.view.MotionEvent obtainMovement(android.view.MotionEvent,float[])>(r16, r17);

     label02:
        z0 = interfaceinvoke r15.<androidx.test.espresso.UiController: boolean injectMotionEvent(android.view.MotionEvent)>(r18);

     label03:
        if z0 != 0 goto label07;

     label04:
        r19 = <androidx.test.espresso.action.MotionEvents: java.lang.String TAG>;

        r20 = <java.util.Locale: java.util.Locale ROOT>;

        r21 = newarray (java.lang.Object)[1];

        r21[0] = r16;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r20, "Injection of motion event failed (corresponding down event: %s)", r21);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(r19, $r4);

     label05:
        if r18 == null goto label06;

        virtualinvoke r18.<android.view.MotionEvent: void recycle()>();

     label06:
        return 0;

     label07:
        if r18 == null goto label08;

        virtualinvoke r18.<android.view.MotionEvent: void recycle()>();

     label08:
        return 1;

     label09:
        $r14 := @caughtexception;

        r22 = $r14;

        r18 = null;

     label10:
        r23 = new androidx.test.espresso.PerformException$Builder;

        specialinvoke r23.<androidx.test.espresso.PerformException$Builder: void <init>()>();

        r24 = <java.util.Locale: java.util.Locale ROOT>;

        r0 = newarray (java.lang.Object)[1];

        r0[0] = r16;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r24, "inject motion event (corresponding down event: %s)", r0);

        $r9 = virtualinvoke r23.<androidx.test.espresso.PerformException$Builder: androidx.test.espresso.PerformException$Builder withActionDescription(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<androidx.test.espresso.PerformException$Builder: androidx.test.espresso.PerformException$Builder withViewDescription(java.lang.String)>("unknown");

        $r11 = virtualinvoke $r10.<androidx.test.espresso.PerformException$Builder: androidx.test.espresso.PerformException$Builder withCause(java.lang.Throwable)>(r22);

        $r12 = virtualinvoke $r11.<androidx.test.espresso.PerformException$Builder: androidx.test.espresso.PerformException build()>();

        throw $r12;

     label11:
        $r13 := @caughtexception;

        r25 = $r13;

        r26 = null;

     label12:
        if r26 == null goto label13;

        virtualinvoke r26.<android.view.MotionEvent: void recycle()>();

     label13:
        throw r25;

     label14:
        $r7 := @caughtexception;

        r22 = $r7;

        goto label10;

     label15:
        $r5 := @caughtexception;

        r25 = $r5;

        r26 = r18;

        goto label12;

     label16:
        $r6 := @caughtexception;

        r25 = $r6;

        r26 = r18;

        goto label12;

        catch androidx.test.espresso.InjectEventSecurityException from label01 to label02 with label09;
        catch java.lang.Throwable from label01 to label02 with label11;
        catch androidx.test.espresso.InjectEventSecurityException from label02 to label03 with label14;
        catch java.lang.Throwable from label02 to label03 with label15;
        catch androidx.test.espresso.InjectEventSecurityException from label04 to label05 with label14;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label10 to label11 with label16;
    }

    public static boolean sendUp(androidx.test.espresso.UiController, android.view.MotionEvent)
    {
        androidx.test.espresso.UiController r0;
        android.view.MotionEvent r1;
        float[] r2;
        float $f0, $f1;
        boolean $z0;

        r0 := @parameter0: androidx.test.espresso.UiController;

        r1 := @parameter1: android.view.MotionEvent;

        r2 = newarray (float)[2];

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        r2[0] = $f0;

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        r2[1] = $f1;

        $z0 = staticinvoke <androidx.test.espresso.action.MotionEvents: boolean sendUp(androidx.test.espresso.UiController,android.view.MotionEvent,float[])>(r0, r1, r2);

        return $z0;
    }

    public static boolean sendUp(androidx.test.espresso.UiController, android.view.MotionEvent, float[])
    {
        java.lang.Object[] r0, r21;
        java.lang.String $r4, $r9, r19;
        java.lang.Throwable $r5, $r6, $r7, r25;
        androidx.test.espresso.InjectEventSecurityException $r8, $r14, r22;
        androidx.test.espresso.PerformException$Builder $r10, $r11, $r12, r23;
        androidx.test.espresso.PerformException $r13;
        androidx.test.espresso.UiController r15;
        android.view.MotionEvent r16, r18, r26;
        float[] r17;
        boolean z0;
        java.util.Locale r20, r24;

        r15 := @parameter0: androidx.test.espresso.UiController;

        r16 := @parameter1: android.view.MotionEvent;

        r17 := @parameter2: float[];

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r15);

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r16);

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r17);

     label01:
        r18 = staticinvoke <androidx.test.espresso.action.MotionEvents: android.view.MotionEvent obtainUpEvent(android.view.MotionEvent,float[])>(r16, r17);

     label02:
        z0 = interfaceinvoke r15.<androidx.test.espresso.UiController: boolean injectMotionEvent(android.view.MotionEvent)>(r18);

     label03:
        if z0 != 0 goto label07;

     label04:
        r19 = <androidx.test.espresso.action.MotionEvents: java.lang.String TAG>;

        r20 = <java.util.Locale: java.util.Locale ROOT>;

        r21 = newarray (java.lang.Object)[1];

        r21[0] = r16;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r20, "Injection of up event failed (corresponding down event: %s)", r21);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(r19, $r4);

     label05:
        if r18 == null goto label06;

        virtualinvoke r18.<android.view.MotionEvent: void recycle()>();

     label06:
        return 0;

     label07:
        if r18 == null goto label08;

        virtualinvoke r18.<android.view.MotionEvent: void recycle()>();

     label08:
        return 1;

     label09:
        $r8 := @caughtexception;

        r22 = $r8;

        r18 = null;

     label10:
        r23 = new androidx.test.espresso.PerformException$Builder;

        specialinvoke r23.<androidx.test.espresso.PerformException$Builder: void <init>()>();

        r24 = <java.util.Locale: java.util.Locale ROOT>;

        r0 = newarray (java.lang.Object)[1];

        r0[0] = r16;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r24, "inject up event (corresponding down event: %s)", r0);

        $r10 = virtualinvoke r23.<androidx.test.espresso.PerformException$Builder: androidx.test.espresso.PerformException$Builder withActionDescription(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<androidx.test.espresso.PerformException$Builder: androidx.test.espresso.PerformException$Builder withViewDescription(java.lang.String)>("unknown");

        $r12 = virtualinvoke $r11.<androidx.test.espresso.PerformException$Builder: androidx.test.espresso.PerformException$Builder withCause(java.lang.Throwable)>(r22);

        $r13 = virtualinvoke $r12.<androidx.test.espresso.PerformException$Builder: androidx.test.espresso.PerformException build()>();

        throw $r13;

     label11:
        $r5 := @caughtexception;

        r25 = $r5;

        r26 = null;

     label12:
        if r26 == null goto label13;

        virtualinvoke r26.<android.view.MotionEvent: void recycle()>();

     label13:
        throw r25;

     label14:
        $r14 := @caughtexception;

        r22 = $r14;

        goto label10;

     label15:
        $r7 := @caughtexception;

        r25 = $r7;

        r26 = r18;

        goto label12;

     label16:
        $r6 := @caughtexception;

        r25 = $r6;

        r26 = r18;

        goto label12;

        catch androidx.test.espresso.InjectEventSecurityException from label01 to label02 with label09;
        catch java.lang.Throwable from label01 to label02 with label11;
        catch androidx.test.espresso.InjectEventSecurityException from label02 to label03 with label14;
        catch java.lang.Throwable from label02 to label03 with label15;
        catch androidx.test.espresso.InjectEventSecurityException from label04 to label05 with label14;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label10 to label11 with label16;
    }

    private static android.view.MotionEvent$PointerProperties[] getPointerProperties(int)
    {
        int i0;
        android.view.MotionEvent$PointerProperties[] r0;
        android.view.MotionEvent$PointerProperties r1, $r2, $r3, $r4;

        i0 := @parameter0: int;

        r0 = newarray (android.view.MotionEvent$PointerProperties)[1];

        r1 = new android.view.MotionEvent$PointerProperties;

        specialinvoke r1.<android.view.MotionEvent$PointerProperties: void <init>()>();

        r0[0] = r1;

        $r2 = r0[0];

        virtualinvoke $r2.<android.view.MotionEvent$PointerProperties: void clear()>();

        $r3 = r0[0];

        $r3.<android.view.MotionEvent$PointerProperties: int id> = 0;

        $r4 = r0[0];

        $r4.<android.view.MotionEvent$PointerProperties: int toolType> = i0;

        return r0;
    }

androidx.test.espresso.action.MotionEvents$DownResultHolder
<androidx.test.espresso.action.MotionEvents$DownResultHolder: android.view.MotionEvent down>
<androidx.test.espresso.action.MotionEvents$DownResultHolder: boolean longPress>
    void <init>(android.view.MotionEvent, boolean)
    {
        androidx.test.espresso.action.MotionEvents$DownResultHolder r0;
        android.view.MotionEvent r1;
        boolean z0;

        r0 := @this: androidx.test.espresso.action.MotionEvents$DownResultHolder;

        r1 := @parameter0: android.view.MotionEvent;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.test.espresso.action.MotionEvents$DownResultHolder: android.view.MotionEvent down> = r1;

        r0.<androidx.test.espresso.action.MotionEvents$DownResultHolder: boolean longPress> = z0;

        return;
    }

