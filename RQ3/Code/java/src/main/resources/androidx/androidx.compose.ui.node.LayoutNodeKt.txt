androidx.compose.ui.node.LayoutNodeKt
<androidx.compose.ui.node.LayoutNodeKt: boolean DebugChanges>
    public static final androidx.compose.ui.node.Owner requireOwner(androidx.compose.ui.node.LayoutNode)
    {
        androidx.compose.ui.node.LayoutNode $r0;
        androidx.compose.ui.node.Owner r1;
        java.lang.IllegalStateException $r2;
        java.lang.String $r3, $r4;

        $r0 := @parameter0: androidx.compose.ui.node.LayoutNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r1 = virtualinvoke $r0.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.Owner getOwner$ui_release()>();

        if r1 != null goto label1;

        $r4 = "LayoutNode should be attached to an owner";

        $r2 = new java.lang.IllegalStateException;

        $r3 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label1:
        return r1;
    }

    public static final void add(androidx.compose.ui.node.LayoutNode, androidx.compose.ui.node.LayoutNode)
    {
        androidx.compose.ui.node.LayoutNode $r0, r1;
        java.util.List $r2;
        int $i0;

        $r0 := @parameter0: androidx.compose.ui.node.LayoutNode;

        r1 := @parameter1: androidx.compose.ui.node.LayoutNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "child");

        $r2 = virtualinvoke $r0.<androidx.compose.ui.node.LayoutNode: java.util.List getChildren$ui_release()>();

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        virtualinvoke $r0.<androidx.compose.ui.node.LayoutNode: void insertAt$ui_release(int,androidx.compose.ui.node.LayoutNode)>($i0, r1);

        return;
    }

