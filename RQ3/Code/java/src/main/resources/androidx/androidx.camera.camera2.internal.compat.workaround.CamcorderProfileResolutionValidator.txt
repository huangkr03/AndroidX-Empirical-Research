androidx.camera.camera2.internal.compat.workaround.CamcorderProfileResolutionValidator
<androidx.camera.camera2.internal.compat.workaround.CamcorderProfileResolutionValidator: androidx.camera.camera2.internal.compat.quirk.CamcorderProfileResolutionQuirk mQuirk>
<androidx.camera.camera2.internal.compat.workaround.CamcorderProfileResolutionValidator: java.util.Set mSupportedResolutions>
    public void <init>(androidx.camera.camera2.internal.compat.quirk.CamcorderProfileResolutionQuirk)
    {
        androidx.camera.camera2.internal.compat.workaround.CamcorderProfileResolutionValidator r0;
        androidx.camera.camera2.internal.compat.quirk.CamcorderProfileResolutionQuirk r1;
        java.util.List $r2;
        java.lang.Object $r4;
        java.util.HashSet r5;
        java.util.Set r6;

        r0 := @this: androidx.camera.camera2.internal.compat.workaround.CamcorderProfileResolutionValidator;

        r1 := @parameter0: androidx.camera.camera2.internal.compat.quirk.CamcorderProfileResolutionQuirk;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.camera2.internal.compat.workaround.CamcorderProfileResolutionValidator: androidx.camera.camera2.internal.compat.quirk.CamcorderProfileResolutionQuirk mQuirk> = r1;

        if r1 == null goto label1;

        r5 = new java.util.HashSet;

        $r4 = r5;

        $r2 = virtualinvoke r1.<androidx.camera.camera2.internal.compat.quirk.CamcorderProfileResolutionQuirk: java.util.List getSupportedResolutions()>();

        specialinvoke r5.<java.util.HashSet: void <init>(java.util.Collection)>($r2);

        goto label2;

     label1:
        $r4 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

     label2:
        r6 = (java.util.Set) $r4;

        r0.<androidx.camera.camera2.internal.compat.workaround.CamcorderProfileResolutionValidator: java.util.Set mSupportedResolutions> = r6;

        return;
    }

    public boolean hasQuirk()
    {
        androidx.camera.camera2.internal.compat.workaround.CamcorderProfileResolutionValidator r0;
        androidx.camera.camera2.internal.compat.quirk.CamcorderProfileResolutionQuirk $r1;
        boolean $z0;

        r0 := @this: androidx.camera.camera2.internal.compat.workaround.CamcorderProfileResolutionValidator;

        $r1 = r0.<androidx.camera.camera2.internal.compat.workaround.CamcorderProfileResolutionValidator: androidx.camera.camera2.internal.compat.quirk.CamcorderProfileResolutionQuirk mQuirk>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasValidVideoResolution(androidx.camera.core.impl.CamcorderProfileProxy)
    {
        androidx.camera.camera2.internal.compat.workaround.CamcorderProfileResolutionValidator r0;
        androidx.camera.core.impl.CamcorderProfileProxy r1;
        android.util.Size r2, $r4;
        androidx.camera.camera2.internal.compat.quirk.CamcorderProfileResolutionQuirk $r3;
        int $i0, $i1;
        java.util.Set $r5;
        boolean $z0;

        r0 := @this: androidx.camera.camera2.internal.compat.workaround.CamcorderProfileResolutionValidator;

        r1 := @parameter0: androidx.camera.core.impl.CamcorderProfileProxy;

        if r1 != null goto label1;

        return 0;

     label1:
        $r3 = r0.<androidx.camera.camera2.internal.compat.workaround.CamcorderProfileResolutionValidator: androidx.camera.camera2.internal.compat.quirk.CamcorderProfileResolutionQuirk mQuirk>;

        if $r3 != null goto label2;

        return 1;

     label2:
        $r4 = new android.util.Size;

        $i0 = virtualinvoke r1.<androidx.camera.core.impl.CamcorderProfileProxy: int getVideoFrameWidth()>();

        $i1 = virtualinvoke r1.<androidx.camera.core.impl.CamcorderProfileProxy: int getVideoFrameHeight()>();

        specialinvoke $r4.<android.util.Size: void <init>(int,int)>($i0, $i1);

        r2 = $r4;

        $r5 = r0.<androidx.camera.camera2.internal.compat.workaround.CamcorderProfileResolutionValidator: java.util.Set mSupportedResolutions>;

        $z0 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>(r2);

        return $z0;
    }

