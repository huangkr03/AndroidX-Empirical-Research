androidx.wear.tiles.manager.TileManager
<androidx.wear.tiles.manager.TileManager: kotlinx.coroutines.CompletableJob job>
<androidx.wear.tiles.manager.TileManager: kotlinx.coroutines.CoroutineScope coroutineScope>
<androidx.wear.tiles.manager.TileManager: androidx.wear.tiles.connection.TilesConnection tilesConnection>
<androidx.wear.tiles.manager.TileManager: androidx.wear.tiles.timeline.TilesTimelineManager timelineManager>
<androidx.wear.tiles.manager.TileManager: androidx.wear.tiles.builders.ResourceBuilders$Resources tileResources>
<androidx.wear.tiles.manager.TileManager: androidx.wear.tiles.manager.UpdateScheduler updateScheduler>
<androidx.wear.tiles.manager.TileManager: androidx.wear.tiles.manager.TileManager$updateReceiver$1 updateReceiver>
<androidx.wear.tiles.manager.TileManager: boolean isRunning>
<androidx.wear.tiles.manager.TileManager: android.content.Context context>
<androidx.wear.tiles.manager.TileManager: android.view.ViewGroup parentView>
    public final void create()
    {
        androidx.wear.tiles.manager.TileManager r0;
        boolean $z0;
        androidx.wear.tiles.manager.TileManager$create$1 $r1;
        kotlinx.coroutines.CoroutineScope $r2;
        kotlin.jvm.functions.Function2 $r3;
        androidx.wear.tiles.manager.UpdateScheduler $r5, $r7;
        androidx.wear.tiles.manager.TileManager$create$2 $r6;
        androidx.wear.tiles.manager.UpdateScheduler$UpdateReceiver $r8;

        r0 := @this: androidx.wear.tiles.manager.TileManager;

        $z0 = r0.<androidx.wear.tiles.manager.TileManager: boolean isRunning>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = r0.<androidx.wear.tiles.manager.TileManager: kotlinx.coroutines.CoroutineScope coroutineScope>;

        $r1 = new androidx.wear.tiles.manager.TileManager$create$1;

        specialinvoke $r1.<androidx.wear.tiles.manager.TileManager$create$1: void <init>(androidx.wear.tiles.manager.TileManager,kotlin.coroutines.Continuation)>(r0, null);

        $r3 = (kotlin.jvm.functions.Function2) $r1;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r2, null, null, $r3, 3, null);

        $r5 = r0.<androidx.wear.tiles.manager.TileManager: androidx.wear.tiles.manager.UpdateScheduler updateScheduler>;

        virtualinvoke $r5.<androidx.wear.tiles.manager.UpdateScheduler: void enableUpdates()>();

        $r7 = r0.<androidx.wear.tiles.manager.TileManager: androidx.wear.tiles.manager.UpdateScheduler updateScheduler>;

        $r6 = new androidx.wear.tiles.manager.TileManager$create$2;

        specialinvoke $r6.<androidx.wear.tiles.manager.TileManager$create$2: void <init>(androidx.wear.tiles.manager.TileManager)>(r0);

        $r8 = (androidx.wear.tiles.manager.UpdateScheduler$UpdateReceiver) $r6;

        virtualinvoke $r7.<androidx.wear.tiles.manager.UpdateScheduler: void setUpdateReceiver(androidx.wear.tiles.manager.UpdateScheduler$UpdateReceiver)>($r8);

        specialinvoke r0.<androidx.wear.tiles.manager.TileManager: void registerBroadcastReceiver()>();

        r0.<androidx.wear.tiles.manager.TileManager: boolean isRunning> = 1;

        return;
    }

    public void close()
    {
        androidx.wear.tiles.manager.TileManager r0;
        boolean $z0;
        androidx.wear.tiles.manager.TileManager$updateReceiver$1 $r1;
        android.content.BroadcastReceiver $r2;
        android.content.Context $r3;
        kotlinx.coroutines.CompletableJob $r4;
        kotlinx.coroutines.Job $r5;
        androidx.wear.tiles.manager.UpdateScheduler $r6;
        androidx.wear.tiles.timeline.TilesTimelineManager $r7, $r8;

        r0 := @this: androidx.wear.tiles.manager.TileManager;

        $z0 = r0.<androidx.wear.tiles.manager.TileManager: boolean isRunning>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<androidx.wear.tiles.manager.TileManager: android.content.Context context>;

        $r1 = r0.<androidx.wear.tiles.manager.TileManager: androidx.wear.tiles.manager.TileManager$updateReceiver$1 updateReceiver>;

        $r2 = (android.content.BroadcastReceiver) $r1;

        virtualinvoke $r3.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r2);

        $r4 = r0.<androidx.wear.tiles.manager.TileManager: kotlinx.coroutines.CompletableJob job>;

        $r5 = (kotlinx.coroutines.Job) $r4;

        staticinvoke <kotlinx.coroutines.Job$DefaultImpls: void cancel$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object)>($r5, null, 1, null);

        $r6 = r0.<androidx.wear.tiles.manager.TileManager: androidx.wear.tiles.manager.UpdateScheduler updateScheduler>;

        virtualinvoke $r6.<androidx.wear.tiles.manager.UpdateScheduler: void disableUpdates()>();

        $r7 = r0.<androidx.wear.tiles.manager.TileManager: androidx.wear.tiles.timeline.TilesTimelineManager timelineManager>;

        if $r7 == null goto label2;

        virtualinvoke $r7.<androidx.wear.tiles.timeline.TilesTimelineManager: void deInit()>();

        goto label2;

     label2:
        $r8 = (androidx.wear.tiles.timeline.TilesTimelineManager) null;

        r0.<androidx.wear.tiles.manager.TileManager: androidx.wear.tiles.timeline.TilesTimelineManager timelineManager> = $r8;

        r0.<androidx.wear.tiles.manager.TileManager: boolean isRunning> = 0;

        return;
    }

    final java.lang.Object requestTile(androidx.wear.tiles.proto.StateProto$State, kotlin.coroutines.Continuation)
    {
        androidx.wear.tiles.manager.TileManager r0;
        androidx.wear.tiles.proto.StateProto$State r1;
        kotlin.coroutines.Continuation $r2;
        androidx.wear.tiles.manager.TileManager$requestTile$2 $r3;
        kotlin.jvm.functions.Function2 $r4;
        java.lang.Object $r5, $r6;
        kotlin.Unit $r7;

        r0 := @this: androidx.wear.tiles.manager.TileManager;

        r1 := @parameter0: androidx.wear.tiles.proto.StateProto$State;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.wear.tiles.manager.TileManager$requestTile$2;

        specialinvoke $r3.<androidx.wear.tiles.manager.TileManager$requestTile$2: void <init>(androidx.wear.tiles.manager.TileManager,androidx.wear.tiles.proto.StateProto$State,kotlin.coroutines.Continuation)>(r0, r1, null);

        $r4 = (kotlin.jvm.functions.Function2) $r3;

        $r5 = staticinvoke <kotlinx.coroutines.CoroutineScopeKt: java.lang.Object coroutineScope(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r4, $r2);

        $r6 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r5 != $r6 goto label1;

        return $r5;

     label1:
        $r7 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r7;
    }

    static java.lang.Object requestTile$default(androidx.wear.tiles.manager.TileManager, androidx.wear.tiles.proto.StateProto$State, kotlin.coroutines.Continuation, int, java.lang.Object)
    {
        androidx.wear.tiles.manager.TileManager r0;
        kotlin.coroutines.Continuation r1;
        int i0, $i1;
        java.lang.Object r2, $r3;
        androidx.wear.tiles.proto.StateProto$State r4;

        r0 := @parameter0: androidx.wear.tiles.manager.TileManager;

        r4 := @parameter1: androidx.wear.tiles.proto.StateProto$State;

        r1 := @parameter2: kotlin.coroutines.Continuation;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r4 = staticinvoke <androidx.wear.tiles.proto.StateProto$State: androidx.wear.tiles.proto.StateProto$State getDefaultInstance()>();

     label1:
        $r3 = virtualinvoke r0.<androidx.wear.tiles.manager.TileManager: java.lang.Object requestTile(androidx.wear.tiles.proto.StateProto$State,kotlin.coroutines.Continuation)>(r4, r1);

        return $r3;
    }

    private final void updateContents(androidx.wear.tiles.builders.LayoutElementBuilders$Layout)
    {
        androidx.wear.tiles.manager.TileManager r0;
        androidx.wear.tiles.builders.LayoutElementBuilders$Layout r1;
        androidx.wear.tiles.renderer.TileRenderer r2, $r5;
        android.view.View r3, $r16;
        boolean z0, z1;
        android.view.ViewGroup $r4, $r15;
        androidx.wear.tiles.builders.ResourceBuilders$Resources $r6;
        android.content.Context $r7, $r8, $r11;
        androidx.wear.tiles.renderer.ResourceAccessors$Builder $r9;
        androidx.wear.tiles.renderer.ResourceAccessors $r10;
        java.util.concurrent.Executor $r12;
        androidx.wear.tiles.manager.TileManager$updateContents$renderer$1 $r13;
        androidx.wear.tiles.renderer.TileRenderer$LoadActionListener $r14;
        android.view.ViewGroup$LayoutParams $r17;
        android.widget.FrameLayout$LayoutParams $r18;
        java.lang.NullPointerException $r19;

        r0 := @this: androidx.wear.tiles.manager.TileManager;

        r1 := @parameter0: androidx.wear.tiles.builders.LayoutElementBuilders$Layout;

        $r4 = r0.<androidx.wear.tiles.manager.TileManager: android.view.ViewGroup parentView>;

        virtualinvoke $r4.<android.view.ViewGroup: void removeAllViews()>();

        $r5 = new androidx.wear.tiles.renderer.TileRenderer;

        $r7 = r0.<androidx.wear.tiles.manager.TileManager: android.content.Context context>;

        $r8 = r0.<androidx.wear.tiles.manager.TileManager: android.content.Context context>;

        $r6 = r0.<androidx.wear.tiles.manager.TileManager: androidx.wear.tiles.builders.ResourceBuilders$Resources tileResources>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r6);

        $r9 = staticinvoke <androidx.wear.tiles.renderer.StandardResourceAccessors: androidx.wear.tiles.renderer.ResourceAccessors$Builder forLocalApp(android.content.Context,androidx.wear.tiles.builders.ResourceBuilders$Resources)>($r8, $r6);

        $r10 = virtualinvoke $r9.<androidx.wear.tiles.renderer.ResourceAccessors$Builder: androidx.wear.tiles.renderer.ResourceAccessors build()>();

        $r11 = r0.<androidx.wear.tiles.manager.TileManager: android.content.Context context>;

        $r12 = staticinvoke <androidx.core.content.ContextCompat: java.util.concurrent.Executor getMainExecutor(android.content.Context)>($r11);

        $r13 = new androidx.wear.tiles.manager.TileManager$updateContents$renderer$1;

        specialinvoke $r13.<androidx.wear.tiles.manager.TileManager$updateContents$renderer$1: void <init>(androidx.wear.tiles.manager.TileManager)>(r0);

        $r14 = (androidx.wear.tiles.renderer.TileRenderer$LoadActionListener) $r13;

        specialinvoke $r5.<androidx.wear.tiles.renderer.TileRenderer: void <init>(android.content.Context,androidx.wear.tiles.builders.LayoutElementBuilders$Layout,androidx.wear.tiles.renderer.ResourceAccessors,java.util.concurrent.Executor,androidx.wear.tiles.renderer.TileRenderer$LoadActionListener)>($r7, r1, $r10, $r12, $r14);

        r2 = $r5;

        $r15 = r0.<androidx.wear.tiles.manager.TileManager: android.view.ViewGroup parentView>;

        $r16 = virtualinvoke r2.<androidx.wear.tiles.renderer.TileRenderer: android.view.View inflate(android.view.ViewGroup)>($r15);

        if $r16 == null goto label2;

        r3 = $r16;

        z0 = 0;

        z1 = 0;

        $r17 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        if $r17 != null goto label1;

        $r19 = new java.lang.NullPointerException;

        specialinvoke $r19.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type android.widget.FrameLayout.LayoutParams");

        throw $r19;

     label1:
        $r18 = (android.widget.FrameLayout$LayoutParams) $r17;

        $r18.<android.widget.FrameLayout$LayoutParams: int gravity> = 17;

        goto label2;

     label2:
        return;
    }

    private final void registerBroadcastReceiver()
    {
        androidx.wear.tiles.manager.TileManager r0;
        android.content.IntentFilter r1, $r2;
        androidx.wear.tiles.manager.TileManager$updateReceiver$1 $r3;
        android.content.BroadcastReceiver $r4;
        android.content.Context $r5;

        r0 := @this: androidx.wear.tiles.manager.TileManager;

        $r2 = new android.content.IntentFilter;

        specialinvoke $r2.<android.content.IntentFilter: void <init>(java.lang.String)>("androidx.wear.tiles.action.REQUEST_TILE_UPDATE");

        r1 = $r2;

        $r5 = r0.<androidx.wear.tiles.manager.TileManager: android.content.Context context>;

        $r3 = r0.<androidx.wear.tiles.manager.TileManager: androidx.wear.tiles.manager.TileManager$updateReceiver$1 updateReceiver>;

        $r4 = (android.content.BroadcastReceiver) $r3;

        virtualinvoke $r5.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r4, r1);

        return;
    }

    private final androidx.wear.tiles.proto.DeviceParametersProto$DeviceParameters buildDeviceParameters()
    {
        androidx.wear.tiles.manager.TileManager r0;
        android.util.DisplayMetrics r1, $r4;
        boolean z0;
        android.content.Context $r2, $r5;
        android.content.res.Resources $r3, $r6;
        android.content.res.Configuration $r7;
        androidx.wear.tiles.proto.DeviceParametersProto$DeviceParameters$Builder $r8, $r9, $r10, $r11, $r12, $r14;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        androidx.wear.tiles.proto.DeviceParametersProto$DevicePlatform $r13;
        androidx.wear.tiles.protobuf.GeneratedMessageLite $r15;
        androidx.wear.tiles.proto.DeviceParametersProto$DeviceParameters $r16;
        androidx.wear.tiles.proto.DeviceParametersProto$ScreenShape $r17;

        r0 := @this: androidx.wear.tiles.manager.TileManager;

        $r2 = r0.<androidx.wear.tiles.manager.TileManager: android.content.Context context>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "context.resources");

        $r4 = virtualinvoke $r3.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "context.resources.displayMetrics");

        r1 = $r4;

        $r5 = r0.<androidx.wear.tiles.manager.TileManager: android.content.Context context>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "context.resources");

        $r7 = virtualinvoke $r6.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r7, "context.resources.configuration");

        z0 = virtualinvoke $r7.<android.content.res.Configuration: boolean isScreenRound()>();

        $r8 = staticinvoke <androidx.wear.tiles.proto.DeviceParametersProto$DeviceParameters: androidx.wear.tiles.proto.DeviceParametersProto$DeviceParameters$Builder newBuilder()>();

        $i0 = r1.<android.util.DisplayMetrics: int widthPixels>;

        $f1 = (float) $i0;

        $f0 = r1.<android.util.DisplayMetrics: float density>;

        $f2 = $f1 / $f0;

        $i1 = staticinvoke <java.lang.Math: int round(float)>($f2);

        $r9 = virtualinvoke $r8.<androidx.wear.tiles.proto.DeviceParametersProto$DeviceParameters$Builder: androidx.wear.tiles.proto.DeviceParametersProto$DeviceParameters$Builder setScreenWidthDp(int)>($i1);

        $i2 = r1.<android.util.DisplayMetrics: int heightPixels>;

        $f4 = (float) $i2;

        $f3 = r1.<android.util.DisplayMetrics: float density>;

        $f5 = $f4 / $f3;

        $i3 = staticinvoke <java.lang.Math: int round(float)>($f5);

        $r10 = virtualinvoke $r9.<androidx.wear.tiles.proto.DeviceParametersProto$DeviceParameters$Builder: androidx.wear.tiles.proto.DeviceParametersProto$DeviceParameters$Builder setScreenHeightDp(int)>($i3);

        $f6 = r1.<android.util.DisplayMetrics: float density>;

        $r11 = virtualinvoke $r10.<androidx.wear.tiles.proto.DeviceParametersProto$DeviceParameters$Builder: androidx.wear.tiles.proto.DeviceParametersProto$DeviceParameters$Builder setScreenDensity(float)>($f6);

        if z0 == 0 goto label1;

        $r17 = <androidx.wear.tiles.proto.DeviceParametersProto$ScreenShape: androidx.wear.tiles.proto.DeviceParametersProto$ScreenShape SCREEN_SHAPE_ROUND>;

        goto label2;

     label1:
        $r17 = <androidx.wear.tiles.proto.DeviceParametersProto$ScreenShape: androidx.wear.tiles.proto.DeviceParametersProto$ScreenShape SCREEN_SHAPE_RECT>;

     label2:
        $r12 = virtualinvoke $r11.<androidx.wear.tiles.proto.DeviceParametersProto$DeviceParameters$Builder: androidx.wear.tiles.proto.DeviceParametersProto$DeviceParameters$Builder setScreenShape(androidx.wear.tiles.proto.DeviceParametersProto$ScreenShape)>($r17);

        $r13 = <androidx.wear.tiles.proto.DeviceParametersProto$DevicePlatform: androidx.wear.tiles.proto.DeviceParametersProto$DevicePlatform DEVICE_PLATFORM_WEAR_OS>;

        $r14 = virtualinvoke $r12.<androidx.wear.tiles.proto.DeviceParametersProto$DeviceParameters$Builder: androidx.wear.tiles.proto.DeviceParametersProto$DeviceParameters$Builder setDevicePlatform(androidx.wear.tiles.proto.DeviceParametersProto$DevicePlatform)>($r13);

        $r15 = virtualinvoke $r14.<androidx.wear.tiles.proto.DeviceParametersProto$DeviceParameters$Builder: androidx.wear.tiles.protobuf.GeneratedMessageLite build()>();

        $r16 = (androidx.wear.tiles.proto.DeviceParametersProto$DeviceParameters) $r15;

        return $r16;
    }

    public void <init>(android.content.Context, android.content.ComponentName, android.view.ViewGroup)
    {
        androidx.wear.tiles.manager.TileManager r0;
        android.content.Context r1, $r12, $r18;
        android.content.ComponentName r2;
        android.view.ViewGroup r3;
        java.lang.Object r4, $r19, $r25;
        kotlinx.coroutines.CompletableJob $r5, $r7;
        kotlinx.coroutines.MainCoroutineDispatcher $r6;
        kotlin.coroutines.CoroutineContext $r8, $r9;
        kotlinx.coroutines.CoroutineScope $r10, $r13;
        java.util.concurrent.ExecutorService $r14;
        kotlinx.coroutines.ExecutorCoroutineDispatcher $r15;
        kotlinx.coroutines.CoroutineDispatcher $r16;
        androidx.wear.tiles.manager.TileManager$updateScheduler$1 $r20;
        androidx.wear.tiles.manager.UpdateScheduler$Clock $r21;
        android.app.AlarmManager $r22;
        androidx.wear.tiles.connection.TilesConnection r26;
        androidx.wear.tiles.manager.TileManager$sam$androidx_wear_tiles_manager_UpdateScheduler_Clock$0 r27;
        androidx.wear.tiles.manager.UpdateScheduler r28;
        androidx.wear.tiles.manager.TileManager$updateReceiver$1 r29;
        kotlin.jvm.functions.Function0 r30;

        r0 := @this: androidx.wear.tiles.manager.TileManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.ComponentName;

        r3 := @parameter2: android.view.ViewGroup;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "component");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "parentView");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.wear.tiles.manager.TileManager: android.content.Context context> = r1;

        r0.<androidx.wear.tiles.manager.TileManager: android.view.ViewGroup parentView> = r3;

        $r5 = staticinvoke <kotlinx.coroutines.JobKt: kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object)>(null, 1, null);

        r0.<androidx.wear.tiles.manager.TileManager: kotlinx.coroutines.CompletableJob job> = $r5;

        $r6 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        $r7 = r0.<androidx.wear.tiles.manager.TileManager: kotlinx.coroutines.CompletableJob job>;

        $r8 = (kotlin.coroutines.CoroutineContext) $r7;

        $r9 = virtualinvoke $r6.<kotlinx.coroutines.MainCoroutineDispatcher: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)>($r8);

        $r10 = staticinvoke <kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope CoroutineScope(kotlin.coroutines.CoroutineContext)>($r9);

        r0.<androidx.wear.tiles.manager.TileManager: kotlinx.coroutines.CoroutineScope coroutineScope> = $r10;

        r26 = new androidx.wear.tiles.connection.TilesConnection;

        $r12 = r0.<androidx.wear.tiles.manager.TileManager: android.content.Context context>;

        $r13 = r0.<androidx.wear.tiles.manager.TileManager: kotlinx.coroutines.CoroutineScope coroutineScope>;

        $r14 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r14, "Executors.newSingleThreadExecutor()");

        $r15 = staticinvoke <kotlinx.coroutines.ExecutorsKt: kotlinx.coroutines.ExecutorCoroutineDispatcher 'from'(java.util.concurrent.ExecutorService)>($r14);

        $r16 = (kotlinx.coroutines.CoroutineDispatcher) $r15;

        specialinvoke r26.<androidx.wear.tiles.connection.TilesConnection: void <init>(android.content.Context,android.content.ComponentName,kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.CoroutineDispatcher)>($r12, r2, $r13, $r16);

        r0.<androidx.wear.tiles.manager.TileManager: androidx.wear.tiles.connection.TilesConnection tilesConnection> = r26;

        r28 = new androidx.wear.tiles.manager.UpdateScheduler;

        $r18 = r0.<androidx.wear.tiles.manager.TileManager: android.content.Context context>;

        $r19 = virtualinvoke $r18.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/AlarmManager;");

        $r22 = (android.app.AlarmManager) $r19;

        $r20 = <androidx.wear.tiles.manager.TileManager$updateScheduler$1: androidx.wear.tiles.manager.TileManager$updateScheduler$1 INSTANCE>;

        $r25 = (kotlin.jvm.functions.Function0) $r20;

        if $r25 == null goto label1;

        r4 = $r25;

        r27 = new androidx.wear.tiles.manager.TileManager$sam$androidx_wear_tiles_manager_UpdateScheduler_Clock$0;

        $r25 = r27;

        r30 = (kotlin.jvm.functions.Function0) r4;

        specialinvoke r27.<androidx.wear.tiles.manager.TileManager$sam$androidx_wear_tiles_manager_UpdateScheduler_Clock$0: void <init>(kotlin.jvm.functions.Function0)>(r30);

     label1:
        $r21 = (androidx.wear.tiles.manager.UpdateScheduler$Clock) $r25;

        specialinvoke r28.<androidx.wear.tiles.manager.UpdateScheduler: void <init>(android.app.AlarmManager,androidx.wear.tiles.manager.UpdateScheduler$Clock)>($r22, $r21);

        r0.<androidx.wear.tiles.manager.TileManager: androidx.wear.tiles.manager.UpdateScheduler updateScheduler> = r28;

        r29 = new androidx.wear.tiles.manager.TileManager$updateReceiver$1;

        specialinvoke r29.<androidx.wear.tiles.manager.TileManager$updateReceiver$1: void <init>(androidx.wear.tiles.manager.TileManager)>(r0);

        r0.<androidx.wear.tiles.manager.TileManager: androidx.wear.tiles.manager.TileManager$updateReceiver$1 updateReceiver> = r29;

        return;
    }

    public static final kotlinx.coroutines.CoroutineScope access$getCoroutineScope$p(androidx.wear.tiles.manager.TileManager)
    {
        androidx.wear.tiles.manager.TileManager $r0;
        kotlinx.coroutines.CoroutineScope $r1;

        $r0 := @parameter0: androidx.wear.tiles.manager.TileManager;

        $r1 = $r0.<androidx.wear.tiles.manager.TileManager: kotlinx.coroutines.CoroutineScope coroutineScope>;

        return $r1;
    }

    public static final androidx.wear.tiles.proto.DeviceParametersProto$DeviceParameters access$buildDeviceParameters(androidx.wear.tiles.manager.TileManager)
    {
        androidx.wear.tiles.manager.TileManager $r0;
        androidx.wear.tiles.proto.DeviceParametersProto$DeviceParameters $r1;

        $r0 := @parameter0: androidx.wear.tiles.manager.TileManager;

        $r1 = specialinvoke $r0.<androidx.wear.tiles.manager.TileManager: androidx.wear.tiles.proto.DeviceParametersProto$DeviceParameters buildDeviceParameters()>();

        return $r1;
    }

    public static final androidx.wear.tiles.connection.TilesConnection access$getTilesConnection$p(androidx.wear.tiles.manager.TileManager)
    {
        androidx.wear.tiles.manager.TileManager $r0;
        androidx.wear.tiles.connection.TilesConnection $r1;

        $r0 := @parameter0: androidx.wear.tiles.manager.TileManager;

        $r1 = $r0.<androidx.wear.tiles.manager.TileManager: androidx.wear.tiles.connection.TilesConnection tilesConnection>;

        return $r1;
    }

    public static final androidx.wear.tiles.builders.ResourceBuilders$Resources access$getTileResources$p(androidx.wear.tiles.manager.TileManager)
    {
        androidx.wear.tiles.manager.TileManager $r0;
        androidx.wear.tiles.builders.ResourceBuilders$Resources $r1;

        $r0 := @parameter0: androidx.wear.tiles.manager.TileManager;

        $r1 = $r0.<androidx.wear.tiles.manager.TileManager: androidx.wear.tiles.builders.ResourceBuilders$Resources tileResources>;

        return $r1;
    }

    public static final void access$setTileResources$p(androidx.wear.tiles.manager.TileManager, androidx.wear.tiles.builders.ResourceBuilders$Resources)
    {
        androidx.wear.tiles.manager.TileManager $r0;
        androidx.wear.tiles.builders.ResourceBuilders$Resources r1;

        $r0 := @parameter0: androidx.wear.tiles.manager.TileManager;

        r1 := @parameter1: androidx.wear.tiles.builders.ResourceBuilders$Resources;

        $r0.<androidx.wear.tiles.manager.TileManager: androidx.wear.tiles.builders.ResourceBuilders$Resources tileResources> = r1;

        return;
    }

    public static final androidx.wear.tiles.timeline.TilesTimelineManager access$getTimelineManager$p(androidx.wear.tiles.manager.TileManager)
    {
        androidx.wear.tiles.manager.TileManager $r0;
        androidx.wear.tiles.timeline.TilesTimelineManager $r1;

        $r0 := @parameter0: androidx.wear.tiles.manager.TileManager;

        $r1 = $r0.<androidx.wear.tiles.manager.TileManager: androidx.wear.tiles.timeline.TilesTimelineManager timelineManager>;

        return $r1;
    }

    public static final void access$setTimelineManager$p(androidx.wear.tiles.manager.TileManager, androidx.wear.tiles.timeline.TilesTimelineManager)
    {
        androidx.wear.tiles.manager.TileManager $r0;
        androidx.wear.tiles.timeline.TilesTimelineManager r1;

        $r0 := @parameter0: androidx.wear.tiles.manager.TileManager;

        r1 := @parameter1: androidx.wear.tiles.timeline.TilesTimelineManager;

        $r0.<androidx.wear.tiles.manager.TileManager: androidx.wear.tiles.timeline.TilesTimelineManager timelineManager> = r1;

        return;
    }

    public static final android.content.Context access$getContext$p(androidx.wear.tiles.manager.TileManager)
    {
        androidx.wear.tiles.manager.TileManager $r0;
        android.content.Context $r1;

        $r0 := @parameter0: androidx.wear.tiles.manager.TileManager;

        $r1 = $r0.<androidx.wear.tiles.manager.TileManager: android.content.Context context>;

        return $r1;
    }

    public static final void access$updateContents(androidx.wear.tiles.manager.TileManager, androidx.wear.tiles.builders.LayoutElementBuilders$Layout)
    {
        androidx.wear.tiles.manager.TileManager $r0;
        androidx.wear.tiles.builders.LayoutElementBuilders$Layout r1;

        $r0 := @parameter0: androidx.wear.tiles.manager.TileManager;

        r1 := @parameter1: androidx.wear.tiles.builders.LayoutElementBuilders$Layout;

        specialinvoke $r0.<androidx.wear.tiles.manager.TileManager: void updateContents(androidx.wear.tiles.builders.LayoutElementBuilders$Layout)>(r1);

        return;
    }

    public static final androidx.wear.tiles.manager.UpdateScheduler access$getUpdateScheduler$p(androidx.wear.tiles.manager.TileManager)
    {
        androidx.wear.tiles.manager.TileManager $r0;
        androidx.wear.tiles.manager.UpdateScheduler $r1;

        $r0 := @parameter0: androidx.wear.tiles.manager.TileManager;

        $r1 = $r0.<androidx.wear.tiles.manager.TileManager: androidx.wear.tiles.manager.UpdateScheduler updateScheduler>;

        return $r1;
    }

androidx.wear.tiles.manager.TileManager$create$1
<androidx.wear.tiles.manager.TileManager$create$1: int label>
<androidx.wear.tiles.manager.TileManager$create$1: androidx.wear.tiles.manager.TileManager this$0>
    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.wear.tiles.manager.TileManager$create$1 r0;
        java.lang.Object $r1, r2, $r5;
        int $i0;
        kotlin.Unit $r3;
        androidx.wear.tiles.manager.TileManager $r4;
        java.lang.IllegalStateException r7;
        kotlin.coroutines.Continuation r8;

        r0 := @this: androidx.wear.tiles.manager.TileManager$create$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.wear.tiles.manager.TileManager$create$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.wear.tiles.manager.TileManager$create$1: androidx.wear.tiles.manager.TileManager this$0>;

        r0.<androidx.wear.tiles.manager.TileManager$create$1: int label> = 1;

        r8 = (kotlin.coroutines.Continuation) r0;

        $r5 = staticinvoke <androidx.wear.tiles.manager.TileManager: java.lang.Object requestTile$default(androidx.wear.tiles.manager.TileManager,androidx.wear.tiles.proto.StateProto$State,kotlin.coroutines.Continuation,int,java.lang.Object)>($r4, null, r8, 1, null);

        if $r5 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;

     label4:
        r7 = new java.lang.IllegalStateException;

        specialinvoke r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r7;
    }

    void <init>(androidx.wear.tiles.manager.TileManager, kotlin.coroutines.Continuation)
    {
        androidx.wear.tiles.manager.TileManager$create$1 r0;
        androidx.wear.tiles.manager.TileManager r1;
        kotlin.coroutines.Continuation r2;

        r0 := @this: androidx.wear.tiles.manager.TileManager$create$1;

        r1 := @parameter0: androidx.wear.tiles.manager.TileManager;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.wear.tiles.manager.TileManager$create$1: androidx.wear.tiles.manager.TileManager this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, r2);

        return;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.wear.tiles.manager.TileManager$create$1 r0, r3, r6;
        java.lang.Object r1;
        kotlin.coroutines.Continuation r2, r7;
        androidx.wear.tiles.manager.TileManager $r5;

        r0 := @this: androidx.wear.tiles.manager.TileManager$create$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "completion");

        r6 = new androidx.wear.tiles.manager.TileManager$create$1;

        $r5 = r0.<androidx.wear.tiles.manager.TileManager$create$1: androidx.wear.tiles.manager.TileManager this$0>;

        specialinvoke r6.<androidx.wear.tiles.manager.TileManager$create$1: void <init>(androidx.wear.tiles.manager.TileManager,kotlin.coroutines.Continuation)>($r5, r2);

        r3 = r6;

        r7 = (kotlin.coroutines.Continuation) r3;

        return r7;
    }

    public final java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.wear.tiles.manager.TileManager$create$1 r0, $r6;
        java.lang.Object r1, r2, $r7;
        kotlin.coroutines.Continuation $r3, $r4;
        kotlin.Unit $r5;

        r0 := @this: androidx.wear.tiles.manager.TileManager$create$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r4 = virtualinvoke r0.<androidx.wear.tiles.manager.TileManager$create$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, $r3);

        $r6 = (androidx.wear.tiles.manager.TileManager$create$1) $r4;

        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r7 = virtualinvoke $r6.<androidx.wear.tiles.manager.TileManager$create$1: java.lang.Object invokeSuspend(java.lang.Object)>($r5);

        return $r7;
    }

androidx.wear.tiles.manager.TileManager$create$2$1
<androidx.wear.tiles.manager.TileManager$create$2$1: int label>
<androidx.wear.tiles.manager.TileManager$create$2$1: androidx.wear.tiles.manager.TileManager$create$2 this$0>
    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.wear.tiles.manager.TileManager$create$2$1 r0;
        java.lang.Object $r1, r2, $r6;
        int $i0;
        kotlin.Unit $r3;
        androidx.wear.tiles.manager.TileManager$create$2 $r4;
        androidx.wear.tiles.manager.TileManager $r5;
        java.lang.IllegalStateException r8;
        kotlin.coroutines.Continuation r9;

        r0 := @this: androidx.wear.tiles.manager.TileManager$create$2$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.wear.tiles.manager.TileManager$create$2$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.wear.tiles.manager.TileManager$create$2$1: androidx.wear.tiles.manager.TileManager$create$2 this$0>;

        $r5 = $r4.<androidx.wear.tiles.manager.TileManager$create$2: androidx.wear.tiles.manager.TileManager this$0>;

        r0.<androidx.wear.tiles.manager.TileManager$create$2$1: int label> = 1;

        r9 = (kotlin.coroutines.Continuation) r0;

        $r6 = staticinvoke <androidx.wear.tiles.manager.TileManager: java.lang.Object requestTile$default(androidx.wear.tiles.manager.TileManager,androidx.wear.tiles.proto.StateProto$State,kotlin.coroutines.Continuation,int,java.lang.Object)>($r5, null, r9, 1, null);

        if $r6 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;

     label4:
        r8 = new java.lang.IllegalStateException;

        specialinvoke r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r8;
    }

    void <init>(androidx.wear.tiles.manager.TileManager$create$2, kotlin.coroutines.Continuation)
    {
        androidx.wear.tiles.manager.TileManager$create$2$1 r0;
        androidx.wear.tiles.manager.TileManager$create$2 r1;
        kotlin.coroutines.Continuation r2;

        r0 := @this: androidx.wear.tiles.manager.TileManager$create$2$1;

        r1 := @parameter0: androidx.wear.tiles.manager.TileManager$create$2;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.wear.tiles.manager.TileManager$create$2$1: androidx.wear.tiles.manager.TileManager$create$2 this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, r2);

        return;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.wear.tiles.manager.TileManager$create$2$1 r0, r3, r6;
        java.lang.Object r1;
        kotlin.coroutines.Continuation r2, r7;
        androidx.wear.tiles.manager.TileManager$create$2 $r5;

        r0 := @this: androidx.wear.tiles.manager.TileManager$create$2$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "completion");

        r6 = new androidx.wear.tiles.manager.TileManager$create$2$1;

        $r5 = r0.<androidx.wear.tiles.manager.TileManager$create$2$1: androidx.wear.tiles.manager.TileManager$create$2 this$0>;

        specialinvoke r6.<androidx.wear.tiles.manager.TileManager$create$2$1: void <init>(androidx.wear.tiles.manager.TileManager$create$2,kotlin.coroutines.Continuation)>($r5, r2);

        r3 = r6;

        r7 = (kotlin.coroutines.Continuation) r3;

        return r7;
    }

    public final java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.wear.tiles.manager.TileManager$create$2$1 r0, $r6;
        java.lang.Object r1, r2, $r7;
        kotlin.coroutines.Continuation $r3, $r4;
        kotlin.Unit $r5;

        r0 := @this: androidx.wear.tiles.manager.TileManager$create$2$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r4 = virtualinvoke r0.<androidx.wear.tiles.manager.TileManager$create$2$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, $r3);

        $r6 = (androidx.wear.tiles.manager.TileManager$create$2$1) $r4;

        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r7 = virtualinvoke $r6.<androidx.wear.tiles.manager.TileManager$create$2$1: java.lang.Object invokeSuspend(java.lang.Object)>($r5);

        return $r7;
    }

androidx.wear.tiles.manager.TileManager$create$2
<androidx.wear.tiles.manager.TileManager$create$2: androidx.wear.tiles.manager.TileManager this$0>
    public final void acceptUpdate()
    {
        androidx.wear.tiles.manager.TileManager$create$2 r0;
        androidx.wear.tiles.manager.TileManager $r1;
        kotlinx.coroutines.CoroutineScope $r2;
        androidx.wear.tiles.manager.TileManager$create$2$1 $r3;
        kotlin.jvm.functions.Function2 $r4;

        r0 := @this: androidx.wear.tiles.manager.TileManager$create$2;

        $r1 = r0.<androidx.wear.tiles.manager.TileManager$create$2: androidx.wear.tiles.manager.TileManager this$0>;

        $r2 = staticinvoke <androidx.wear.tiles.manager.TileManager: kotlinx.coroutines.CoroutineScope access$getCoroutineScope$p(androidx.wear.tiles.manager.TileManager)>($r1);

        $r3 = new androidx.wear.tiles.manager.TileManager$create$2$1;

        specialinvoke $r3.<androidx.wear.tiles.manager.TileManager$create$2$1: void <init>(androidx.wear.tiles.manager.TileManager$create$2,kotlin.coroutines.Continuation)>(r0, null);

        $r4 = (kotlin.jvm.functions.Function2) $r3;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r2, null, null, $r4, 3, null);

        return;
    }

    void <init>(androidx.wear.tiles.manager.TileManager)
    {
        androidx.wear.tiles.manager.TileManager$create$2 r0;
        androidx.wear.tiles.manager.TileManager r1;

        r0 := @this: androidx.wear.tiles.manager.TileManager$create$2;

        r1 := @parameter0: androidx.wear.tiles.manager.TileManager;

        r0.<androidx.wear.tiles.manager.TileManager$create$2: androidx.wear.tiles.manager.TileManager this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.wear.tiles.manager.TileManager$requestTile$2$1$localTimelineManager$1
<androidx.wear.tiles.manager.TileManager$requestTile$2$1$localTimelineManager$1: androidx.wear.tiles.manager.TileManager$requestTile$2$1$localTimelineManager$1 INSTANCE>
    public volatile java.lang.Object invoke()
    {
        androidx.wear.tiles.manager.TileManager$requestTile$2$1$localTimelineManager$1 r0;
        long $l0;
        java.lang.Long $r1;

        r0 := @this: androidx.wear.tiles.manager.TileManager$requestTile$2$1$localTimelineManager$1;

        $l0 = virtualinvoke r0.<androidx.wear.tiles.manager.TileManager$requestTile$2$1$localTimelineManager$1: long invoke()>();

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        return $r1;
    }

    public final long invoke()
    {
        androidx.wear.tiles.manager.TileManager$requestTile$2$1$localTimelineManager$1 r0;
        long $l0;

        r0 := @this: androidx.wear.tiles.manager.TileManager$requestTile$2$1$localTimelineManager$1;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        return $l0;
    }

    void <init>()
    {
        androidx.wear.tiles.manager.TileManager$requestTile$2$1$localTimelineManager$1 r0;

        r0 := @this: androidx.wear.tiles.manager.TileManager$requestTile$2$1$localTimelineManager$1;

        specialinvoke r0.<kotlin.jvm.internal.FunctionReferenceImpl: void <init>(int,java.lang.Class,java.lang.String,java.lang.String,int)>(0, class "Ljava/lang/System;", "currentTimeMillis", "currentTimeMillis()J", 0);

        return;
    }

    static void <clinit>()
    {
        androidx.wear.tiles.manager.TileManager$requestTile$2$1$localTimelineManager$1 $r0;

        $r0 = new androidx.wear.tiles.manager.TileManager$requestTile$2$1$localTimelineManager$1;

        specialinvoke $r0.<androidx.wear.tiles.manager.TileManager$requestTile$2$1$localTimelineManager$1: void <init>()>();

        <androidx.wear.tiles.manager.TileManager$requestTile$2$1$localTimelineManager$1: androidx.wear.tiles.manager.TileManager$requestTile$2$1$localTimelineManager$1 INSTANCE> = $r0;

        return;
    }

androidx.wear.tiles.manager.TileManager$requestTile$2$1$localTimelineManager$2
<androidx.wear.tiles.manager.TileManager$requestTile$2$1$localTimelineManager$2: androidx.wear.tiles.manager.TileManager$requestTile$2$1 this$0>
    public final void onLayoutUpdate(int, androidx.wear.tiles.builders.LayoutElementBuilders$Layout)
    {
        androidx.wear.tiles.manager.TileManager$requestTile$2$1$localTimelineManager$2 r0;
        int $i0;
        androidx.wear.tiles.builders.LayoutElementBuilders$Layout r1;
        androidx.wear.tiles.manager.TileManager$requestTile$2$1 $r2;
        androidx.wear.tiles.manager.TileManager$requestTile$2 $r3;
        androidx.wear.tiles.manager.TileManager $r4;

        r0 := @this: androidx.wear.tiles.manager.TileManager$requestTile$2$1$localTimelineManager$2;

        $i0 := @parameter0: int;

        r1 := @parameter1: androidx.wear.tiles.builders.LayoutElementBuilders$Layout;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "layout");

        $r2 = r0.<androidx.wear.tiles.manager.TileManager$requestTile$2$1$localTimelineManager$2: androidx.wear.tiles.manager.TileManager$requestTile$2$1 this$0>;

        $r3 = $r2.<androidx.wear.tiles.manager.TileManager$requestTile$2$1: androidx.wear.tiles.manager.TileManager$requestTile$2 this$0>;

        $r4 = $r3.<androidx.wear.tiles.manager.TileManager$requestTile$2: androidx.wear.tiles.manager.TileManager this$0>;

        staticinvoke <androidx.wear.tiles.manager.TileManager: void access$updateContents(androidx.wear.tiles.manager.TileManager,androidx.wear.tiles.builders.LayoutElementBuilders$Layout)>($r4, r1);

        return;
    }

    void <init>(androidx.wear.tiles.manager.TileManager$requestTile$2$1)
    {
        androidx.wear.tiles.manager.TileManager$requestTile$2$1$localTimelineManager$2 r0;
        androidx.wear.tiles.manager.TileManager$requestTile$2$1 r1;

        r0 := @this: androidx.wear.tiles.manager.TileManager$requestTile$2$1$localTimelineManager$2;

        r1 := @parameter0: androidx.wear.tiles.manager.TileManager$requestTile$2$1;

        r0.<androidx.wear.tiles.manager.TileManager$requestTile$2$1$localTimelineManager$2: androidx.wear.tiles.manager.TileManager$requestTile$2$1 this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.wear.tiles.manager.TileManager$requestTile$2$1
<androidx.wear.tiles.manager.TileManager$requestTile$2$1: java.lang.Object L$0>
<androidx.wear.tiles.manager.TileManager$requestTile$2$1: java.lang.Object L$1>
<androidx.wear.tiles.manager.TileManager$requestTile$2$1: java.lang.Object L$2>
<androidx.wear.tiles.manager.TileManager$requestTile$2$1: int label>
<androidx.wear.tiles.manager.TileManager$requestTile$2$1: androidx.wear.tiles.manager.TileManager$requestTile$2 this$0>
    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.wear.tiles.manager.TileManager$requestTile$2$1 r0;
        java.lang.Object $r1, r4, r5, $r6, $r7, $r8, $r14, $r34, $r53, $r68, $r75, $r80, r81;
        androidx.wear.tiles.proto.RequestProto$TileRequest r2;
        androidx.wear.tiles.proto.TileProto$Tile r3, $r18, $r29, $r35;
        boolean z0, $z2, z3, $z4, $z5, $z6, z7;
        int $i0, $i2;
        androidx.wear.tiles.builders.ResourceBuilders$Resources $r9, $r39;
        androidx.wear.tiles.manager.TileManager$requestTile$2 $r11, $r21, $r27, $r31, $r37, $r43, $r48, $r49, $r55, $r58, $r63, $r76;
        androidx.wear.tiles.manager.TileManager $r12, $r22, $r28, $r32, $r38, $r44, $r50, $r59, $r64, r74, $r77;
        android.content.Context $r13, $r23;
        androidx.wear.tiles.manager.TileManager$requestTile$2$1$localTimelineManager$1 $r15;
        android.app.AlarmManager $r16;
        androidx.wear.tiles.timeline.TilesTimelineManager$Clock $r17;
        androidx.wear.tiles.proto.TimelineProto$Timeline $r19;
        androidx.wear.tiles.builders.TimelineBuilders$Timeline $r20;
        java.util.concurrent.Executor $r24;
        androidx.wear.tiles.timeline.TilesTimelineManager$Listener $r26;
        byte $b1;
        kotlin.Unit $r30;
        androidx.wear.tiles.manager.UpdateScheduler $r33;
        java.lang.String $r36, $r41, $r71, $r72;
        androidx.wear.tiles.proto.RequestProto$ResourcesRequest$Builder $r40, $r42, $r46;
        androidx.wear.tiles.proto.DeviceParametersProto$DeviceParameters $r45, $r60;
        androidx.wear.tiles.protobuf.GeneratedMessageLite $r47, $r62;
        androidx.wear.tiles.connection.TilesConnection $r51, $r65;
        androidx.wear.tiles.proto.ResourceProto$Resources $r52;
        androidx.wear.tiles.proto.RequestProto$TileRequest$Builder $r54, $r57, $r61;
        androidx.wear.tiles.proto.StateProto$State $r56;
        kotlinx.coroutines.CoroutineScope $r67;
        androidx.wear.tiles.builders.TileBuilders$Tile r69;
        java.lang.CharSequence r70;
        androidx.wear.tiles.proto.RequestProto$ResourcesRequest r73;
        androidx.wear.tiles.timeline.TilesTimelineManager $r78, r79, r82, r85;
        long l3;
        androidx.wear.tiles.manager.TileManager$sam$androidx_wear_tiles_timeline_TilesTimelineManager_Clock$0 r83;
        androidx.wear.tiles.manager.TileManager$requestTile$2$1$localTimelineManager$2 r84;
        java.lang.IllegalStateException r86;
        kotlin.coroutines.Continuation r87, r88;
        kotlin.jvm.functions.Function0 r89;

        r0 := @this: androidx.wear.tiles.manager.TileManager$requestTile$2$1;

        $r1 := @parameter0: java.lang.Object;

        r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.wear.tiles.manager.TileManager$requestTile$2$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label01;
            case 1: goto label02;
            case 2: goto label08;
            default: goto label15;
        };

     label01:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r53 = r0.<androidx.wear.tiles.manager.TileManager$requestTile$2$1: java.lang.Object L$0>;

        $r67 = (kotlinx.coroutines.CoroutineScope) $r53;

        $r54 = staticinvoke <androidx.wear.tiles.proto.RequestProto$TileRequest: androidx.wear.tiles.proto.RequestProto$TileRequest$Builder newBuilder()>();

        $r55 = r0.<androidx.wear.tiles.manager.TileManager$requestTile$2$1: androidx.wear.tiles.manager.TileManager$requestTile$2 this$0>;

        $r56 = $r55.<androidx.wear.tiles.manager.TileManager$requestTile$2: androidx.wear.tiles.proto.StateProto$State $state>;

        $r57 = virtualinvoke $r54.<androidx.wear.tiles.proto.RequestProto$TileRequest$Builder: androidx.wear.tiles.proto.RequestProto$TileRequest$Builder setState(androidx.wear.tiles.proto.StateProto$State)>($r56);

        $r58 = r0.<androidx.wear.tiles.manager.TileManager$requestTile$2$1: androidx.wear.tiles.manager.TileManager$requestTile$2 this$0>;

        $r59 = $r58.<androidx.wear.tiles.manager.TileManager$requestTile$2: androidx.wear.tiles.manager.TileManager this$0>;

        $r60 = staticinvoke <androidx.wear.tiles.manager.TileManager: androidx.wear.tiles.proto.DeviceParametersProto$DeviceParameters access$buildDeviceParameters(androidx.wear.tiles.manager.TileManager)>($r59);

        $r61 = virtualinvoke $r57.<androidx.wear.tiles.proto.RequestProto$TileRequest$Builder: androidx.wear.tiles.proto.RequestProto$TileRequest$Builder setDeviceParameters(androidx.wear.tiles.proto.DeviceParametersProto$DeviceParameters)>($r60);

        $r62 = virtualinvoke $r61.<androidx.wear.tiles.proto.RequestProto$TileRequest$Builder: androidx.wear.tiles.protobuf.GeneratedMessageLite build()>();

        r2 = (androidx.wear.tiles.proto.RequestProto$TileRequest) $r62;

        $r63 = r0.<androidx.wear.tiles.manager.TileManager$requestTile$2$1: androidx.wear.tiles.manager.TileManager$requestTile$2 this$0>;

        $r64 = $r63.<androidx.wear.tiles.manager.TileManager$requestTile$2: androidx.wear.tiles.manager.TileManager this$0>;

        $r65 = staticinvoke <androidx.wear.tiles.manager.TileManager: androidx.wear.tiles.connection.TilesConnection access$getTilesConnection$p(androidx.wear.tiles.manager.TileManager)>($r64);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "tileRequest");

        r0.<androidx.wear.tiles.manager.TileManager$requestTile$2$1: java.lang.Object L$0> = $r67;

        r0.<androidx.wear.tiles.manager.TileManager$requestTile$2$1: int label> = 1;

        r87 = (kotlin.coroutines.Continuation) r0;

        $r68 = virtualinvoke $r65.<androidx.wear.tiles.connection.TilesConnection: java.lang.Object tileRequest(androidx.wear.tiles.proto.RequestProto$TileRequest,kotlin.coroutines.Continuation)>(r2, r87);

        if $r68 != r5 goto label03;

        return r5;

     label02:
        $r34 = r0.<androidx.wear.tiles.manager.TileManager$requestTile$2$1: java.lang.Object L$0>;

        $r67 = (kotlinx.coroutines.CoroutineScope) $r34;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r68 = $r1;

     label03:
        r69 = (androidx.wear.tiles.builders.TileBuilders$Tile) $r68;

        $r35 = virtualinvoke r69.<androidx.wear.tiles.builders.TileBuilders$Tile: androidx.wear.tiles.proto.TileProto$Tile toProto()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r35, "tile.toProto()");

        r3 = $r35;

        $r36 = virtualinvoke r3.<androidx.wear.tiles.proto.TileProto$Tile: java.lang.String getResourcesVersion()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r36, "tileProto.resourcesVersion");

        r70 = (java.lang.CharSequence) $r36;

        z3 = 0;

        $i2 = interfaceinvoke r70.<java.lang.CharSequence: int length()>();

        if $i2 <= 0 goto label04;

        $z4 = 1;

        goto label05;

     label04:
        $z4 = 0;

     label05:
        if $z4 == 0 goto label10;

        $r71 = virtualinvoke r3.<androidx.wear.tiles.proto.TileProto$Tile: java.lang.String getResourcesVersion()>();

        $r37 = r0.<androidx.wear.tiles.manager.TileManager$requestTile$2$1: androidx.wear.tiles.manager.TileManager$requestTile$2 this$0>;

        $r38 = $r37.<androidx.wear.tiles.manager.TileManager$requestTile$2: androidx.wear.tiles.manager.TileManager this$0>;

        $r39 = staticinvoke <androidx.wear.tiles.manager.TileManager: androidx.wear.tiles.builders.ResourceBuilders$Resources access$getTileResources$p(androidx.wear.tiles.manager.TileManager)>($r38);

        if $r39 == null goto label06;

        $r52 = virtualinvoke $r39.<androidx.wear.tiles.builders.ResourceBuilders$Resources: androidx.wear.tiles.proto.ResourceProto$Resources toProto()>();

        if $r52 == null goto label06;

        $r72 = virtualinvoke $r52.<androidx.wear.tiles.proto.ResourceProto$Resources: java.lang.String getVersion()>();

        goto label07;

     label06:
        $r72 = null;

     label07:
        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r71, $r72);

        $z6 = $z5 ^ 1;

        if $z6 == 0 goto label10;

        $r40 = staticinvoke <androidx.wear.tiles.proto.RequestProto$ResourcesRequest: androidx.wear.tiles.proto.RequestProto$ResourcesRequest$Builder newBuilder()>();

        $r41 = virtualinvoke r3.<androidx.wear.tiles.proto.TileProto$Tile: java.lang.String getResourcesVersion()>();

        $r42 = virtualinvoke $r40.<androidx.wear.tiles.proto.RequestProto$ResourcesRequest$Builder: androidx.wear.tiles.proto.RequestProto$ResourcesRequest$Builder setVersion(java.lang.String)>($r41);

        $r43 = r0.<androidx.wear.tiles.manager.TileManager$requestTile$2$1: androidx.wear.tiles.manager.TileManager$requestTile$2 this$0>;

        $r44 = $r43.<androidx.wear.tiles.manager.TileManager$requestTile$2: androidx.wear.tiles.manager.TileManager this$0>;

        $r45 = staticinvoke <androidx.wear.tiles.manager.TileManager: androidx.wear.tiles.proto.DeviceParametersProto$DeviceParameters access$buildDeviceParameters(androidx.wear.tiles.manager.TileManager)>($r44);

        $r46 = virtualinvoke $r42.<androidx.wear.tiles.proto.RequestProto$ResourcesRequest$Builder: androidx.wear.tiles.proto.RequestProto$ResourcesRequest$Builder setDeviceParameters(androidx.wear.tiles.proto.DeviceParametersProto$DeviceParameters)>($r45);

        $r47 = virtualinvoke $r46.<androidx.wear.tiles.proto.RequestProto$ResourcesRequest$Builder: androidx.wear.tiles.protobuf.GeneratedMessageLite build()>();

        r73 = (androidx.wear.tiles.proto.RequestProto$ResourcesRequest) $r47;

        $r48 = r0.<androidx.wear.tiles.manager.TileManager$requestTile$2$1: androidx.wear.tiles.manager.TileManager$requestTile$2 this$0>;

        r74 = $r48.<androidx.wear.tiles.manager.TileManager$requestTile$2: androidx.wear.tiles.manager.TileManager this$0>;

        $r49 = r0.<androidx.wear.tiles.manager.TileManager$requestTile$2$1: androidx.wear.tiles.manager.TileManager$requestTile$2 this$0>;

        $r50 = $r49.<androidx.wear.tiles.manager.TileManager$requestTile$2: androidx.wear.tiles.manager.TileManager this$0>;

        $r51 = staticinvoke <androidx.wear.tiles.manager.TileManager: androidx.wear.tiles.connection.TilesConnection access$getTilesConnection$p(androidx.wear.tiles.manager.TileManager)>($r50);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r73, "resourcesRequest");

        r0.<androidx.wear.tiles.manager.TileManager$requestTile$2$1: java.lang.Object L$0> = $r67;

        r0.<androidx.wear.tiles.manager.TileManager$requestTile$2$1: java.lang.Object L$1> = r69;

        r0.<androidx.wear.tiles.manager.TileManager$requestTile$2$1: java.lang.Object L$2> = r74;

        r0.<androidx.wear.tiles.manager.TileManager$requestTile$2$1: int label> = 2;

        r88 = (kotlin.coroutines.Continuation) r0;

        $r75 = virtualinvoke $r51.<androidx.wear.tiles.connection.TilesConnection: java.lang.Object resourcesRequest(androidx.wear.tiles.proto.RequestProto$ResourcesRequest,kotlin.coroutines.Continuation)>(r73, r88);

        if $r75 != r5 goto label09;

        return r5;

     label08:
        $r6 = r0.<androidx.wear.tiles.manager.TileManager$requestTile$2$1: java.lang.Object L$2>;

        r74 = (androidx.wear.tiles.manager.TileManager) $r6;

        $r7 = r0.<androidx.wear.tiles.manager.TileManager$requestTile$2$1: java.lang.Object L$1>;

        r69 = (androidx.wear.tiles.builders.TileBuilders$Tile) $r7;

        $r8 = r0.<androidx.wear.tiles.manager.TileManager$requestTile$2$1: java.lang.Object L$0>;

        $r67 = (kotlinx.coroutines.CoroutineScope) $r8;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r75 = $r1;

     label09:
        r4 = $r75;

        $r9 = (androidx.wear.tiles.builders.ResourceBuilders$Resources) r4;

        staticinvoke <androidx.wear.tiles.manager.TileManager: void access$setTileResources$p(androidx.wear.tiles.manager.TileManager,androidx.wear.tiles.builders.ResourceBuilders$Resources)>(r74, $r9);

     label10:
        $r76 = r0.<androidx.wear.tiles.manager.TileManager$requestTile$2$1: androidx.wear.tiles.manager.TileManager$requestTile$2 this$0>;

        $r77 = $r76.<androidx.wear.tiles.manager.TileManager$requestTile$2: androidx.wear.tiles.manager.TileManager this$0>;

        $r78 = staticinvoke <androidx.wear.tiles.manager.TileManager: androidx.wear.tiles.timeline.TilesTimelineManager access$getTimelineManager$p(androidx.wear.tiles.manager.TileManager)>($r77);

        if $r78 == null goto label11;

        r79 = $r78;

        z7 = 0;

        z0 = 0;

        virtualinvoke r79.<androidx.wear.tiles.timeline.TilesTimelineManager: void deInit()>();

        goto label11;

     label11:
        r85 = new androidx.wear.tiles.timeline.TilesTimelineManager;

        $r11 = r0.<androidx.wear.tiles.manager.TileManager$requestTile$2$1: androidx.wear.tiles.manager.TileManager$requestTile$2 this$0>;

        $r12 = $r11.<androidx.wear.tiles.manager.TileManager$requestTile$2: androidx.wear.tiles.manager.TileManager this$0>;

        $r13 = staticinvoke <androidx.wear.tiles.manager.TileManager: android.content.Context access$getContext$p(androidx.wear.tiles.manager.TileManager)>($r12);

        $r14 = virtualinvoke $r13.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/AlarmManager;");

        $r16 = (android.app.AlarmManager) $r14;

        $r15 = <androidx.wear.tiles.manager.TileManager$requestTile$2$1$localTimelineManager$1: androidx.wear.tiles.manager.TileManager$requestTile$2$1$localTimelineManager$1 INSTANCE>;

        $r80 = (kotlin.jvm.functions.Function0) $r15;

        if $r80 == null goto label12;

        r81 = $r80;

        r83 = new androidx.wear.tiles.manager.TileManager$sam$androidx_wear_tiles_timeline_TilesTimelineManager_Clock$0;

        $r80 = r83;

        r89 = (kotlin.jvm.functions.Function0) r81;

        specialinvoke r83.<androidx.wear.tiles.manager.TileManager$sam$androidx_wear_tiles_timeline_TilesTimelineManager_Clock$0: void <init>(kotlin.jvm.functions.Function0)>(r89);

     label12:
        $r17 = (androidx.wear.tiles.timeline.TilesTimelineManager$Clock) $r80;

        $r18 = virtualinvoke r69.<androidx.wear.tiles.builders.TileBuilders$Tile: androidx.wear.tiles.proto.TileProto$Tile toProto()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r18, "tile.toProto()");

        $r19 = virtualinvoke $r18.<androidx.wear.tiles.proto.TileProto$Tile: androidx.wear.tiles.proto.TimelineProto$Timeline getTimeline()>();

        $r20 = staticinvoke <androidx.wear.tiles.builders.TimelineBuilders$Timeline: androidx.wear.tiles.builders.TimelineBuilders$Timeline fromProto(androidx.wear.tiles.proto.TimelineProto$Timeline)>($r19);

        $r21 = r0.<androidx.wear.tiles.manager.TileManager$requestTile$2$1: androidx.wear.tiles.manager.TileManager$requestTile$2 this$0>;

        $r22 = $r21.<androidx.wear.tiles.manager.TileManager$requestTile$2: androidx.wear.tiles.manager.TileManager this$0>;

        $r23 = staticinvoke <androidx.wear.tiles.manager.TileManager: android.content.Context access$getContext$p(androidx.wear.tiles.manager.TileManager)>($r22);

        $r24 = staticinvoke <androidx.core.content.ContextCompat: java.util.concurrent.Executor getMainExecutor(android.content.Context)>($r23);

        r84 = new androidx.wear.tiles.manager.TileManager$requestTile$2$1$localTimelineManager$2;

        specialinvoke r84.<androidx.wear.tiles.manager.TileManager$requestTile$2$1$localTimelineManager$2: void <init>(androidx.wear.tiles.manager.TileManager$requestTile$2$1)>(r0);

        $r26 = (androidx.wear.tiles.timeline.TilesTimelineManager$Listener) r84;

        specialinvoke r85.<androidx.wear.tiles.timeline.TilesTimelineManager: void <init>(android.app.AlarmManager,androidx.wear.tiles.timeline.TilesTimelineManager$Clock,androidx.wear.tiles.builders.TimelineBuilders$Timeline,int,java.util.concurrent.Executor,androidx.wear.tiles.timeline.TilesTimelineManager$Listener)>($r16, $r17, $r20, 0, $r24, $r26);

        r82 = r85;

        $r27 = r0.<androidx.wear.tiles.manager.TileManager$requestTile$2$1: androidx.wear.tiles.manager.TileManager$requestTile$2 this$0>;

        $r28 = $r27.<androidx.wear.tiles.manager.TileManager$requestTile$2: androidx.wear.tiles.manager.TileManager this$0>;

        staticinvoke <androidx.wear.tiles.manager.TileManager: void access$setTimelineManager$p(androidx.wear.tiles.manager.TileManager,androidx.wear.tiles.timeline.TilesTimelineManager)>($r28, r82);

        $r29 = virtualinvoke r69.<androidx.wear.tiles.builders.TileBuilders$Tile: androidx.wear.tiles.proto.TileProto$Tile toProto()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r29, "tile.toProto()");

        l3 = virtualinvoke $r29.<androidx.wear.tiles.proto.TileProto$Tile: long getFreshnessIntervalMillis()>();

        $b1 = l3 cmp 0L;

        if $b1 <= 0 goto label13;

        $r31 = r0.<androidx.wear.tiles.manager.TileManager$requestTile$2$1: androidx.wear.tiles.manager.TileManager$requestTile$2 this$0>;

        $r32 = $r31.<androidx.wear.tiles.manager.TileManager$requestTile$2: androidx.wear.tiles.manager.TileManager this$0>;

        $r33 = staticinvoke <androidx.wear.tiles.manager.TileManager: androidx.wear.tiles.manager.UpdateScheduler access$getUpdateScheduler$p(androidx.wear.tiles.manager.TileManager)>($r32);

        virtualinvoke $r33.<androidx.wear.tiles.manager.UpdateScheduler: void scheduleUpdateAtTime(long)>(l3);

     label13:
        $z2 = staticinvoke <kotlinx.coroutines.CoroutineScopeKt: boolean isActive(kotlinx.coroutines.CoroutineScope)>($r67);

        if $z2 == 0 goto label14;

        virtualinvoke r82.<androidx.wear.tiles.timeline.TilesTimelineManager: void init()>();

     label14:
        $r30 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r30;

     label15:
        r86 = new java.lang.IllegalStateException;

        specialinvoke r86.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r86;
    }

    void <init>(androidx.wear.tiles.manager.TileManager$requestTile$2, kotlin.coroutines.Continuation)
    {
        androidx.wear.tiles.manager.TileManager$requestTile$2$1 r0;
        androidx.wear.tiles.manager.TileManager$requestTile$2 r1;
        kotlin.coroutines.Continuation r2;

        r0 := @this: androidx.wear.tiles.manager.TileManager$requestTile$2$1;

        r1 := @parameter0: androidx.wear.tiles.manager.TileManager$requestTile$2;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.wear.tiles.manager.TileManager$requestTile$2$1: androidx.wear.tiles.manager.TileManager$requestTile$2 this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, r2);

        return;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.wear.tiles.manager.TileManager$requestTile$2$1 r0, r3, r6;
        java.lang.Object r1;
        kotlin.coroutines.Continuation r2, r7;
        androidx.wear.tiles.manager.TileManager$requestTile$2 $r5;

        r0 := @this: androidx.wear.tiles.manager.TileManager$requestTile$2$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "completion");

        r6 = new androidx.wear.tiles.manager.TileManager$requestTile$2$1;

        $r5 = r0.<androidx.wear.tiles.manager.TileManager$requestTile$2$1: androidx.wear.tiles.manager.TileManager$requestTile$2 this$0>;

        specialinvoke r6.<androidx.wear.tiles.manager.TileManager$requestTile$2$1: void <init>(androidx.wear.tiles.manager.TileManager$requestTile$2,kotlin.coroutines.Continuation)>($r5, r2);

        r3 = r6;

        r3.<androidx.wear.tiles.manager.TileManager$requestTile$2$1: java.lang.Object L$0> = r1;

        r7 = (kotlin.coroutines.Continuation) r3;

        return r7;
    }

    public final java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.wear.tiles.manager.TileManager$requestTile$2$1 r0, $r6;
        java.lang.Object r1, r2, $r7;
        kotlin.coroutines.Continuation $r3, $r4;
        kotlin.Unit $r5;

        r0 := @this: androidx.wear.tiles.manager.TileManager$requestTile$2$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r4 = virtualinvoke r0.<androidx.wear.tiles.manager.TileManager$requestTile$2$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, $r3);

        $r6 = (androidx.wear.tiles.manager.TileManager$requestTile$2$1) $r4;

        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r7 = virtualinvoke $r6.<androidx.wear.tiles.manager.TileManager$requestTile$2$1: java.lang.Object invokeSuspend(java.lang.Object)>($r5);

        return $r7;
    }

androidx.wear.tiles.manager.TileManager$requestTile$2
<androidx.wear.tiles.manager.TileManager$requestTile$2: int label>
<androidx.wear.tiles.manager.TileManager$requestTile$2: androidx.wear.tiles.manager.TileManager this$0>
<androidx.wear.tiles.manager.TileManager$requestTile$2: androidx.wear.tiles.proto.StateProto$State $state>
    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.wear.tiles.manager.TileManager$requestTile$2 r0;
        java.lang.Object $r1, r2, $r8;
        int $i0;
        kotlin.Unit $r3;
        kotlinx.coroutines.MainCoroutineDispatcher $r4;
        kotlin.coroutines.CoroutineContext $r6;
        kotlin.jvm.functions.Function2 $r7;
        androidx.wear.tiles.manager.TileManager$requestTile$2$1 r10;
        java.lang.IllegalStateException r11;
        kotlin.coroutines.Continuation r12;

        r0 := @this: androidx.wear.tiles.manager.TileManager$requestTile$2;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.wear.tiles.manager.TileManager$requestTile$2: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        $r6 = (kotlin.coroutines.CoroutineContext) $r4;

        r10 = new androidx.wear.tiles.manager.TileManager$requestTile$2$1;

        specialinvoke r10.<androidx.wear.tiles.manager.TileManager$requestTile$2$1: void <init>(androidx.wear.tiles.manager.TileManager$requestTile$2,kotlin.coroutines.Continuation)>(r0, null);

        $r7 = (kotlin.jvm.functions.Function2) r10;

        r0.<androidx.wear.tiles.manager.TileManager$requestTile$2: int label> = 1;

        r12 = (kotlin.coroutines.Continuation) r0;

        $r8 = staticinvoke <kotlinx.coroutines.BuildersKt: java.lang.Object withContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r6, $r7, r12);

        if $r8 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;

     label4:
        r11 = new java.lang.IllegalStateException;

        specialinvoke r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r11;
    }

    void <init>(androidx.wear.tiles.manager.TileManager, androidx.wear.tiles.proto.StateProto$State, kotlin.coroutines.Continuation)
    {
        androidx.wear.tiles.manager.TileManager$requestTile$2 r0;
        androidx.wear.tiles.manager.TileManager r1;
        androidx.wear.tiles.proto.StateProto$State r2;
        kotlin.coroutines.Continuation r3;

        r0 := @this: androidx.wear.tiles.manager.TileManager$requestTile$2;

        r1 := @parameter0: androidx.wear.tiles.manager.TileManager;

        r2 := @parameter1: androidx.wear.tiles.proto.StateProto$State;

        r3 := @parameter2: kotlin.coroutines.Continuation;

        r0.<androidx.wear.tiles.manager.TileManager$requestTile$2: androidx.wear.tiles.manager.TileManager this$0> = r1;

        r0.<androidx.wear.tiles.manager.TileManager$requestTile$2: androidx.wear.tiles.proto.StateProto$State $state> = r2;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, r3);

        return;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.wear.tiles.manager.TileManager$requestTile$2 r0, r3, r7;
        java.lang.Object r1;
        kotlin.coroutines.Continuation r2, r8;
        androidx.wear.tiles.proto.StateProto$State $r5;
        androidx.wear.tiles.manager.TileManager $r6;

        r0 := @this: androidx.wear.tiles.manager.TileManager$requestTile$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "completion");

        r7 = new androidx.wear.tiles.manager.TileManager$requestTile$2;

        $r6 = r0.<androidx.wear.tiles.manager.TileManager$requestTile$2: androidx.wear.tiles.manager.TileManager this$0>;

        $r5 = r0.<androidx.wear.tiles.manager.TileManager$requestTile$2: androidx.wear.tiles.proto.StateProto$State $state>;

        specialinvoke r7.<androidx.wear.tiles.manager.TileManager$requestTile$2: void <init>(androidx.wear.tiles.manager.TileManager,androidx.wear.tiles.proto.StateProto$State,kotlin.coroutines.Continuation)>($r6, $r5, r2);

        r3 = r7;

        r8 = (kotlin.coroutines.Continuation) r3;

        return r8;
    }

    public final java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.wear.tiles.manager.TileManager$requestTile$2 r0, $r6;
        java.lang.Object r1, r2, $r7;
        kotlin.coroutines.Continuation $r3, $r4;
        kotlin.Unit $r5;

        r0 := @this: androidx.wear.tiles.manager.TileManager$requestTile$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r4 = virtualinvoke r0.<androidx.wear.tiles.manager.TileManager$requestTile$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, $r3);

        $r6 = (androidx.wear.tiles.manager.TileManager$requestTile$2) $r4;

        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r7 = virtualinvoke $r6.<androidx.wear.tiles.manager.TileManager$requestTile$2: java.lang.Object invokeSuspend(java.lang.Object)>($r5);

        return $r7;
    }

androidx.wear.tiles.manager.TileManager$sam$androidx_wear_tiles_manager_UpdateScheduler_Clock$0
<androidx.wear.tiles.manager.TileManager$sam$androidx_wear_tiles_manager_UpdateScheduler_Clock$0: kotlin.jvm.functions.Function0 function>
    void <init>(kotlin.jvm.functions.Function0)
    {
        androidx.wear.tiles.manager.TileManager$sam$androidx_wear_tiles_manager_UpdateScheduler_Clock$0 r0;
        kotlin.jvm.functions.Function0 r1;

        r0 := @this: androidx.wear.tiles.manager.TileManager$sam$androidx_wear_tiles_manager_UpdateScheduler_Clock$0;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.wear.tiles.manager.TileManager$sam$androidx_wear_tiles_manager_UpdateScheduler_Clock$0: kotlin.jvm.functions.Function0 function> = r1;

        return;
    }

    public final long getElapsedTimeMillis()
    {
        androidx.wear.tiles.manager.TileManager$sam$androidx_wear_tiles_manager_UpdateScheduler_Clock$0 r0;
        kotlin.jvm.functions.Function0 $r1;
        java.lang.Object $r2;
        java.lang.Number $r3;
        long $l0;

        r0 := @this: androidx.wear.tiles.manager.TileManager$sam$androidx_wear_tiles_manager_UpdateScheduler_Clock$0;

        $r1 = r0.<androidx.wear.tiles.manager.TileManager$sam$androidx_wear_tiles_manager_UpdateScheduler_Clock$0: kotlin.jvm.functions.Function0 function>;

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "invoke(...)");

        $r3 = (java.lang.Number) $r2;

        $l0 = virtualinvoke $r3.<java.lang.Number: long longValue()>();

        return $l0;
    }

androidx.wear.tiles.manager.TileManager$sam$androidx_wear_tiles_timeline_TilesTimelineManager_Clock$0
<androidx.wear.tiles.manager.TileManager$sam$androidx_wear_tiles_timeline_TilesTimelineManager_Clock$0: kotlin.jvm.functions.Function0 function>
    void <init>(kotlin.jvm.functions.Function0)
    {
        androidx.wear.tiles.manager.TileManager$sam$androidx_wear_tiles_timeline_TilesTimelineManager_Clock$0 r0;
        kotlin.jvm.functions.Function0 r1;

        r0 := @this: androidx.wear.tiles.manager.TileManager$sam$androidx_wear_tiles_timeline_TilesTimelineManager_Clock$0;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.wear.tiles.manager.TileManager$sam$androidx_wear_tiles_timeline_TilesTimelineManager_Clock$0: kotlin.jvm.functions.Function0 function> = r1;

        return;
    }

    public final long getCurrentTimeMillis()
    {
        androidx.wear.tiles.manager.TileManager$sam$androidx_wear_tiles_timeline_TilesTimelineManager_Clock$0 r0;
        kotlin.jvm.functions.Function0 $r1;
        java.lang.Object $r2;
        java.lang.Number $r3;
        long $l0;

        r0 := @this: androidx.wear.tiles.manager.TileManager$sam$androidx_wear_tiles_timeline_TilesTimelineManager_Clock$0;

        $r1 = r0.<androidx.wear.tiles.manager.TileManager$sam$androidx_wear_tiles_timeline_TilesTimelineManager_Clock$0: kotlin.jvm.functions.Function0 function>;

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "invoke(...)");

        $r3 = (java.lang.Number) $r2;

        $l0 = virtualinvoke $r3.<java.lang.Number: long longValue()>();

        return $l0;
    }

androidx.wear.tiles.manager.TileManager$updateContents$renderer$1$1
<androidx.wear.tiles.manager.TileManager$updateContents$renderer$1$1: int label>
<androidx.wear.tiles.manager.TileManager$updateContents$renderer$1$1: androidx.wear.tiles.manager.TileManager$updateContents$renderer$1 this$0>
<androidx.wear.tiles.manager.TileManager$updateContents$renderer$1$1: androidx.wear.tiles.proto.StateProto$State $state>
    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.wear.tiles.manager.TileManager$updateContents$renderer$1$1 r0;
        java.lang.Object $r1, r2, $r7;
        int $i0;
        kotlin.Unit $r3;
        androidx.wear.tiles.manager.TileManager$updateContents$renderer$1 $r4;
        androidx.wear.tiles.manager.TileManager $r5;
        androidx.wear.tiles.proto.StateProto$State $r6;
        java.lang.IllegalStateException r9;
        kotlin.coroutines.Continuation r10;

        r0 := @this: androidx.wear.tiles.manager.TileManager$updateContents$renderer$1$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.wear.tiles.manager.TileManager$updateContents$renderer$1$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.wear.tiles.manager.TileManager$updateContents$renderer$1$1: androidx.wear.tiles.manager.TileManager$updateContents$renderer$1 this$0>;

        $r5 = $r4.<androidx.wear.tiles.manager.TileManager$updateContents$renderer$1: androidx.wear.tiles.manager.TileManager this$0>;

        $r6 = r0.<androidx.wear.tiles.manager.TileManager$updateContents$renderer$1$1: androidx.wear.tiles.proto.StateProto$State $state>;

        r0.<androidx.wear.tiles.manager.TileManager$updateContents$renderer$1$1: int label> = 1;

        r10 = (kotlin.coroutines.Continuation) r0;

        $r7 = virtualinvoke $r5.<androidx.wear.tiles.manager.TileManager: java.lang.Object requestTile(androidx.wear.tiles.proto.StateProto$State,kotlin.coroutines.Continuation)>($r6, r10);

        if $r7 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;

     label4:
        r9 = new java.lang.IllegalStateException;

        specialinvoke r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r9;
    }

    void <init>(androidx.wear.tiles.manager.TileManager$updateContents$renderer$1, androidx.wear.tiles.proto.StateProto$State, kotlin.coroutines.Continuation)
    {
        androidx.wear.tiles.manager.TileManager$updateContents$renderer$1$1 r0;
        androidx.wear.tiles.manager.TileManager$updateContents$renderer$1 r1;
        androidx.wear.tiles.proto.StateProto$State r2;
        kotlin.coroutines.Continuation r3;

        r0 := @this: androidx.wear.tiles.manager.TileManager$updateContents$renderer$1$1;

        r1 := @parameter0: androidx.wear.tiles.manager.TileManager$updateContents$renderer$1;

        r2 := @parameter1: androidx.wear.tiles.proto.StateProto$State;

        r3 := @parameter2: kotlin.coroutines.Continuation;

        r0.<androidx.wear.tiles.manager.TileManager$updateContents$renderer$1$1: androidx.wear.tiles.manager.TileManager$updateContents$renderer$1 this$0> = r1;

        r0.<androidx.wear.tiles.manager.TileManager$updateContents$renderer$1$1: androidx.wear.tiles.proto.StateProto$State $state> = r2;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, r3);

        return;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.wear.tiles.manager.TileManager$updateContents$renderer$1$1 r0, r3, r7;
        java.lang.Object r1;
        kotlin.coroutines.Continuation r2, r8;
        androidx.wear.tiles.proto.StateProto$State $r5;
        androidx.wear.tiles.manager.TileManager$updateContents$renderer$1 $r6;

        r0 := @this: androidx.wear.tiles.manager.TileManager$updateContents$renderer$1$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "completion");

        r7 = new androidx.wear.tiles.manager.TileManager$updateContents$renderer$1$1;

        $r6 = r0.<androidx.wear.tiles.manager.TileManager$updateContents$renderer$1$1: androidx.wear.tiles.manager.TileManager$updateContents$renderer$1 this$0>;

        $r5 = r0.<androidx.wear.tiles.manager.TileManager$updateContents$renderer$1$1: androidx.wear.tiles.proto.StateProto$State $state>;

        specialinvoke r7.<androidx.wear.tiles.manager.TileManager$updateContents$renderer$1$1: void <init>(androidx.wear.tiles.manager.TileManager$updateContents$renderer$1,androidx.wear.tiles.proto.StateProto$State,kotlin.coroutines.Continuation)>($r6, $r5, r2);

        r3 = r7;

        r8 = (kotlin.coroutines.Continuation) r3;

        return r8;
    }

    public final java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.wear.tiles.manager.TileManager$updateContents$renderer$1$1 r0, $r6;
        java.lang.Object r1, r2, $r7;
        kotlin.coroutines.Continuation $r3, $r4;
        kotlin.Unit $r5;

        r0 := @this: androidx.wear.tiles.manager.TileManager$updateContents$renderer$1$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r4 = virtualinvoke r0.<androidx.wear.tiles.manager.TileManager$updateContents$renderer$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, $r3);

        $r6 = (androidx.wear.tiles.manager.TileManager$updateContents$renderer$1$1) $r4;

        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r7 = virtualinvoke $r6.<androidx.wear.tiles.manager.TileManager$updateContents$renderer$1$1: java.lang.Object invokeSuspend(java.lang.Object)>($r5);

        return $r7;
    }

androidx.wear.tiles.manager.TileManager$updateContents$renderer$1
<androidx.wear.tiles.manager.TileManager$updateContents$renderer$1: androidx.wear.tiles.manager.TileManager this$0>
    public final void onClick(androidx.wear.tiles.proto.StateProto$State)
    {
        androidx.wear.tiles.manager.TileManager$updateContents$renderer$1 r0;
        androidx.wear.tiles.proto.StateProto$State r1;
        androidx.wear.tiles.manager.TileManager $r2;
        kotlinx.coroutines.CoroutineScope $r3;
        androidx.wear.tiles.manager.TileManager$updateContents$renderer$1$1 $r4;
        kotlin.jvm.functions.Function2 $r5;

        r0 := @this: androidx.wear.tiles.manager.TileManager$updateContents$renderer$1;

        r1 := @parameter0: androidx.wear.tiles.proto.StateProto$State;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "state");

        $r2 = r0.<androidx.wear.tiles.manager.TileManager$updateContents$renderer$1: androidx.wear.tiles.manager.TileManager this$0>;

        $r3 = staticinvoke <androidx.wear.tiles.manager.TileManager: kotlinx.coroutines.CoroutineScope access$getCoroutineScope$p(androidx.wear.tiles.manager.TileManager)>($r2);

        $r4 = new androidx.wear.tiles.manager.TileManager$updateContents$renderer$1$1;

        specialinvoke $r4.<androidx.wear.tiles.manager.TileManager$updateContents$renderer$1$1: void <init>(androidx.wear.tiles.manager.TileManager$updateContents$renderer$1,androidx.wear.tiles.proto.StateProto$State,kotlin.coroutines.Continuation)>(r0, r1, null);

        $r5 = (kotlin.jvm.functions.Function2) $r4;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r3, null, null, $r5, 3, null);

        return;
    }

    void <init>(androidx.wear.tiles.manager.TileManager)
    {
        androidx.wear.tiles.manager.TileManager$updateContents$renderer$1 r0;
        androidx.wear.tiles.manager.TileManager r1;

        r0 := @this: androidx.wear.tiles.manager.TileManager$updateContents$renderer$1;

        r1 := @parameter0: androidx.wear.tiles.manager.TileManager;

        r0.<androidx.wear.tiles.manager.TileManager$updateContents$renderer$1: androidx.wear.tiles.manager.TileManager this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.wear.tiles.manager.TileManager$updateReceiver$1
<androidx.wear.tiles.manager.TileManager$updateReceiver$1: androidx.wear.tiles.manager.TileManager this$0>
    public void onReceive(android.content.Context, android.content.Intent)
    {
        androidx.wear.tiles.manager.TileManager$updateReceiver$1 r0;
        android.content.Context r1;
        android.content.Intent r2;
        androidx.wear.tiles.manager.TileManager $r3;
        androidx.wear.tiles.manager.UpdateScheduler $r4;

        r0 := @this: androidx.wear.tiles.manager.TileManager$updateReceiver$1;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        $r3 = r0.<androidx.wear.tiles.manager.TileManager$updateReceiver$1: androidx.wear.tiles.manager.TileManager this$0>;

        $r4 = staticinvoke <androidx.wear.tiles.manager.TileManager: androidx.wear.tiles.manager.UpdateScheduler access$getUpdateScheduler$p(androidx.wear.tiles.manager.TileManager)>($r3);

        virtualinvoke $r4.<androidx.wear.tiles.manager.UpdateScheduler: void updateNow(boolean)>(0);

        return;
    }

    void <init>(androidx.wear.tiles.manager.TileManager)
    {
        androidx.wear.tiles.manager.TileManager$updateReceiver$1 r0;
        androidx.wear.tiles.manager.TileManager r1;

        r0 := @this: androidx.wear.tiles.manager.TileManager$updateReceiver$1;

        r1 := @parameter0: androidx.wear.tiles.manager.TileManager;

        r0.<androidx.wear.tiles.manager.TileManager$updateReceiver$1: androidx.wear.tiles.manager.TileManager this$0> = r1;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        return;
    }

androidx.wear.tiles.manager.TileManager$updateScheduler$1
<androidx.wear.tiles.manager.TileManager$updateScheduler$1: androidx.wear.tiles.manager.TileManager$updateScheduler$1 INSTANCE>
    public volatile java.lang.Object invoke()
    {
        androidx.wear.tiles.manager.TileManager$updateScheduler$1 r0;
        long $l0;
        java.lang.Long $r1;

        r0 := @this: androidx.wear.tiles.manager.TileManager$updateScheduler$1;

        $l0 = virtualinvoke r0.<androidx.wear.tiles.manager.TileManager$updateScheduler$1: long invoke()>();

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        return $r1;
    }

    public final long invoke()
    {
        androidx.wear.tiles.manager.TileManager$updateScheduler$1 r0;
        long $l0;

        r0 := @this: androidx.wear.tiles.manager.TileManager$updateScheduler$1;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        return $l0;
    }

    void <init>()
    {
        androidx.wear.tiles.manager.TileManager$updateScheduler$1 r0;

        r0 := @this: androidx.wear.tiles.manager.TileManager$updateScheduler$1;

        specialinvoke r0.<kotlin.jvm.internal.FunctionReferenceImpl: void <init>(int,java.lang.Class,java.lang.String,java.lang.String,int)>(0, class "Landroid/os/SystemClock;", "elapsedRealtime", "elapsedRealtime()J", 0);

        return;
    }

    static void <clinit>()
    {
        androidx.wear.tiles.manager.TileManager$updateScheduler$1 $r0;

        $r0 = new androidx.wear.tiles.manager.TileManager$updateScheduler$1;

        specialinvoke $r0.<androidx.wear.tiles.manager.TileManager$updateScheduler$1: void <init>()>();

        <androidx.wear.tiles.manager.TileManager$updateScheduler$1: androidx.wear.tiles.manager.TileManager$updateScheduler$1 INSTANCE> = $r0;

        return;
    }

