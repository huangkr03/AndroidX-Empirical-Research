androidx.privacysandbox.ads.adservices.java.internal.CoroutineAdapterKt
    public static final com.google.common.util.concurrent.ListenableFuture asListenableFuture(kotlinx.coroutines.Deferred, java.lang.Object)
    {
        kotlinx.coroutines.Deferred $r0;
        java.lang.Object r1;
        androidx.concurrent.futures.CallbackToFutureAdapter$Resolver $r2;
        com.google.common.util.concurrent.ListenableFuture $r3;

        $r0 := @parameter0: kotlinx.coroutines.Deferred;

        r1 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r2 = dynamicinvoke "attachCompleter" <androidx.concurrent.futures.CallbackToFutureAdapter$Resolver (kotlinx.coroutines.Deferred,java.lang.Object)>($r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.concurrent.futures.CallbackToFutureAdapter$Completer), methodhandle: "REF_INVOKE_STATIC" <androidx.privacysandbox.ads.adservices.java.internal.CoroutineAdapterKt: java.lang.Object asListenableFuture$lambda$0(kotlinx.coroutines.Deferred,java.lang.Object,androidx.concurrent.futures.CallbackToFutureAdapter$Completer)>, methodtype: java.lang.Object __METHODTYPE__(androidx.concurrent.futures.CallbackToFutureAdapter$Completer));

        $r3 = staticinvoke <androidx.concurrent.futures.CallbackToFutureAdapter: com.google.common.util.concurrent.ListenableFuture getFuture(androidx.concurrent.futures.CallbackToFutureAdapter$Resolver)>($r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "getFuture { completer ->\u2026        }\n    }\n    tag\n}");

        return $r3;
    }

    public static com.google.common.util.concurrent.ListenableFuture asListenableFuture$default(kotlinx.coroutines.Deferred, java.lang.Object, int, java.lang.Object)
    {
        kotlinx.coroutines.Deferred r0;
        int i0, $i1;
        java.lang.Object r1, r3;
        com.google.common.util.concurrent.ListenableFuture $r2;

        r0 := @parameter0: kotlinx.coroutines.Deferred;

        r3 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r3 = "Deferred.asListenableFuture";

     label1:
        $r2 = staticinvoke <androidx.privacysandbox.ads.adservices.java.internal.CoroutineAdapterKt: com.google.common.util.concurrent.ListenableFuture asListenableFuture(kotlinx.coroutines.Deferred,java.lang.Object)>(r0, r3);

        return $r2;
    }

    private static final java.lang.Object asListenableFuture$lambda$0(kotlinx.coroutines.Deferred, java.lang.Object, androidx.concurrent.futures.CallbackToFutureAdapter$Completer)
    {
        kotlinx.coroutines.Deferred $r0;
        java.lang.Object $r1;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r2;
        androidx.privacysandbox.ads.adservices.java.internal.CoroutineAdapterKt$asListenableFuture$1$1 $r3;
        kotlin.jvm.functions.Function1 $r4;

        $r0 := @parameter0: kotlinx.coroutines.Deferred;

        $r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this_asListenableFuture");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "completer");

        $r3 = new androidx.privacysandbox.ads.adservices.java.internal.CoroutineAdapterKt$asListenableFuture$1$1;

        specialinvoke $r3.<androidx.privacysandbox.ads.adservices.java.internal.CoroutineAdapterKt$asListenableFuture$1$1: void <init>(androidx.concurrent.futures.CallbackToFutureAdapter$Completer,kotlinx.coroutines.Deferred)>(r2, $r0);

        $r4 = (kotlin.jvm.functions.Function1) $r3;

        interfaceinvoke $r0.<kotlinx.coroutines.Deferred: kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1)>($r4);

        return $r1;
    }

