androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader
    public static androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader newInstance(java.nio.ByteBuffer, boolean)
    {
        boolean z0, $z1;
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        java.nio.ByteBuffer r1;
        java.lang.IllegalArgumentException r2;

        r1 := @parameter0: java.nio.ByteBuffer;

        z0 := @parameter1: boolean;

        $z1 = virtualinvoke r1.<java.nio.ByteBuffer: boolean hasArray()>();

        if $z1 != 0 goto label1;

        r2 = new java.lang.IllegalArgumentException;

        specialinvoke r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Direct buffers not yet supported");

        throw r2;

     label1:
        r0 = new androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void <init>(java.nio.ByteBuffer,boolean)>(r1, z0);

        return r0;
    }

    private void <init>()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader r0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader-IA)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader r0;
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader-IA r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader;

        r1 := @parameter0: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader-IA;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader: void <init>()>();

        return;
    }

androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$1
<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$1: int[] $SwitchMap$com$google$protobuf$WireFormat$FieldType>
    static void <clinit>()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType[] $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        int[] $r1, $r3, $r5, $r23, $r25, $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r41, $r43, $r45, $r47, $r49, $r51;
        androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType $r2, $r4, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r38, $r40, $r42, $r44, $r46, $r48, $r50, $r52;
        java.lang.Throwable $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22;

        $r0 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType: androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$1: int[] $SwitchMap$com$google$protobuf$WireFormat$FieldType> = $r1;

     label01:
        $r3 = <androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$1: int[] $SwitchMap$com$google$protobuf$WireFormat$FieldType>;

        $r2 = <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType: androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType BOOL>;

        $i1 = virtualinvoke $r2.<androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType: int ordinal()>();

        $r3[$i1] = 1;

     label02:
        $r5 = <androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$1: int[] $SwitchMap$com$google$protobuf$WireFormat$FieldType>;

        $r4 = <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType: androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType BYTES>;

        $i2 = virtualinvoke $r4.<androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType: int ordinal()>();

        $r5[$i2] = 2;

     label03:
        $r23 = <androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$1: int[] $SwitchMap$com$google$protobuf$WireFormat$FieldType>;

        $r24 = <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType: androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType DOUBLE>;

        $i3 = virtualinvoke $r24.<androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType: int ordinal()>();

        $r23[$i3] = 3;

     label04:
        $r25 = <androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$1: int[] $SwitchMap$com$google$protobuf$WireFormat$FieldType>;

        $r26 = <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType: androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType ENUM>;

        $i4 = virtualinvoke $r26.<androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType: int ordinal()>();

        $r25[$i4] = 4;

     label05:
        $r27 = <androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$1: int[] $SwitchMap$com$google$protobuf$WireFormat$FieldType>;

        $r28 = <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType: androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType FIXED32>;

        $i5 = virtualinvoke $r28.<androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType: int ordinal()>();

        $r27[$i5] = 5;

     label06:
        $r29 = <androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$1: int[] $SwitchMap$com$google$protobuf$WireFormat$FieldType>;

        $r30 = <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType: androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType FIXED64>;

        $i6 = virtualinvoke $r30.<androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType: int ordinal()>();

        $r29[$i6] = 6;

     label07:
        $r31 = <androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$1: int[] $SwitchMap$com$google$protobuf$WireFormat$FieldType>;

        $r32 = <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType: androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType FLOAT>;

        $i7 = virtualinvoke $r32.<androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType: int ordinal()>();

        $r31[$i7] = 7;

     label08:
        $r33 = <androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$1: int[] $SwitchMap$com$google$protobuf$WireFormat$FieldType>;

        $r34 = <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType: androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType INT32>;

        $i8 = virtualinvoke $r34.<androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType: int ordinal()>();

        $r33[$i8] = 8;

     label09:
        $r35 = <androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$1: int[] $SwitchMap$com$google$protobuf$WireFormat$FieldType>;

        $r36 = <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType: androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType INT64>;

        $i9 = virtualinvoke $r36.<androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType: int ordinal()>();

        $r35[$i9] = 9;

     label10:
        $r37 = <androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$1: int[] $SwitchMap$com$google$protobuf$WireFormat$FieldType>;

        $r38 = <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType: androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType MESSAGE>;

        $i10 = virtualinvoke $r38.<androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType: int ordinal()>();

        $r37[$i10] = 10;

     label11:
        $r39 = <androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$1: int[] $SwitchMap$com$google$protobuf$WireFormat$FieldType>;

        $r40 = <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType: androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType SFIXED32>;

        $i11 = virtualinvoke $r40.<androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType: int ordinal()>();

        $r39[$i11] = 11;

     label12:
        $r41 = <androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$1: int[] $SwitchMap$com$google$protobuf$WireFormat$FieldType>;

        $r42 = <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType: androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType SFIXED64>;

        $i12 = virtualinvoke $r42.<androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType: int ordinal()>();

        $r41[$i12] = 12;

     label13:
        $r43 = <androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$1: int[] $SwitchMap$com$google$protobuf$WireFormat$FieldType>;

        $r44 = <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType: androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType SINT32>;

        $i13 = virtualinvoke $r44.<androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType: int ordinal()>();

        $r43[$i13] = 13;

     label14:
        $r45 = <androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$1: int[] $SwitchMap$com$google$protobuf$WireFormat$FieldType>;

        $r46 = <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType: androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType SINT64>;

        $i14 = virtualinvoke $r46.<androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType: int ordinal()>();

        $r45[$i14] = 14;

     label15:
        $r47 = <androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$1: int[] $SwitchMap$com$google$protobuf$WireFormat$FieldType>;

        $r48 = <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType: androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType STRING>;

        $i15 = virtualinvoke $r48.<androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType: int ordinal()>();

        $r47[$i15] = 15;

     label16:
        $r49 = <androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$1: int[] $SwitchMap$com$google$protobuf$WireFormat$FieldType>;

        $r50 = <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType: androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType UINT32>;

        $i16 = virtualinvoke $r50.<androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType: int ordinal()>();

        $r49[$i16] = 16;

     label17:
        $r51 = <androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$1: int[] $SwitchMap$com$google$protobuf$WireFormat$FieldType>;

        $r52 = <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType: androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType UINT64>;

        $i17 = virtualinvoke $r52.<androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType: int ordinal()>();

        $r51[$i17] = 17;

     label18:
        return;

     label19:
        $r14 := @caughtexception;

        goto label02;

     label20:
        $r13 := @caughtexception;

        goto label03;

     label21:
        $r9 := @caughtexception;

        goto label04;

     label22:
        $r11 := @caughtexception;

        goto label05;

     label23:
        $r21 := @caughtexception;

        goto label06;

     label24:
        $r12 := @caughtexception;

        goto label07;

     label25:
        $r22 := @caughtexception;

        goto label08;

     label26:
        $r19 := @caughtexception;

        goto label09;

     label27:
        $r20 := @caughtexception;

        goto label10;

     label28:
        $r10 := @caughtexception;

        goto label11;

     label29:
        $r15 := @caughtexception;

        goto label12;

     label30:
        $r16 := @caughtexception;

        goto label13;

     label31:
        $r8 := @caughtexception;

        goto label14;

     label32:
        $r18 := @caughtexception;

        goto label15;

     label33:
        $r7 := @caughtexception;

        goto label16;

     label34:
        $r6 := @caughtexception;

        goto label17;

     label35:
        $r17 := @caughtexception;

        return;

        catch java.lang.NoSuchFieldError from label01 to label02 with label19;
        catch java.lang.NoSuchFieldError from label02 to label03 with label20;
        catch java.lang.NoSuchFieldError from label03 to label04 with label21;
        catch java.lang.NoSuchFieldError from label04 to label05 with label22;
        catch java.lang.NoSuchFieldError from label05 to label06 with label23;
        catch java.lang.NoSuchFieldError from label06 to label07 with label24;
        catch java.lang.NoSuchFieldError from label07 to label08 with label25;
        catch java.lang.NoSuchFieldError from label08 to label09 with label26;
        catch java.lang.NoSuchFieldError from label09 to label10 with label27;
        catch java.lang.NoSuchFieldError from label10 to label11 with label28;
        catch java.lang.NoSuchFieldError from label11 to label12 with label29;
        catch java.lang.NoSuchFieldError from label12 to label13 with label30;
        catch java.lang.NoSuchFieldError from label13 to label14 with label31;
        catch java.lang.NoSuchFieldError from label14 to label15 with label32;
        catch java.lang.NoSuchFieldError from label15 to label16 with label33;
        catch java.lang.NoSuchFieldError from label16 to label17 with label34;
        catch java.lang.NoSuchFieldError from label17 to label18 with label35;
    }

androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader
<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean bufferIsImmutable>
<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: byte[] buffer>
<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>
<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int initialPos>
<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int limit>
<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>
<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int endGroupTag>
    private byte readByte() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        byte[] r1;
        int i0, $i1, $i2, $i3;
        byte $b4;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r2;
        java.lang.Throwable r3;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int limit>;

        if $i2 != $i1 goto label1;

        $r2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        r3 = (java.lang.Throwable) $r2;

        throw r3;

     label1:
        r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: byte[] buffer>;

        i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i3 = i0 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = $i3;

        $b4 = r1[i0];

        return $b4;
    }

    public double readDouble() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        long $l0;
        double $d0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(1);

        $l0 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: long readLittleEndian64()>();

        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l0);

        return $d0;
    }

    public float readFloat() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        int $i0;
        float $f0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(5);

        $i0 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readLittleEndian32()>();

        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i0);

        return $f0;
    }

    public int getFieldNumber() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        $z0 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z0 == 0 goto label1;

        return 2147483647;

     label1:
        $i0 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag> = $i0;

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int endGroupTag>;

        if $i2 != $i1 goto label2;

        return 2147483647;

     label2:
        $i3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i4 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagFieldNumber(int)>($i3);

        return $i4;
    }

    public int getTag()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        $i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        return $i0;
    }

    public int readEnum() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(0);

        $i0 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        return $i0;
    }

    public int readFixed32() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(5);

        $i0 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readLittleEndian32()>();

        return $i0;
    }

    public int readInt32() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(0);

        $i0 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        return $i0;
    }

    private int readLittleEndian32() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requireBytes(int)>(4);

        $i0 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readLittleEndian32_NoCheck()>();

        return $i0;
    }

    private int readLittleEndian32_NoCheck()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        int i0, $i1, $i3, $i6, $i8, $i11, $i12, $i13, $i16, $i17, $i18;
        byte[] r1;
        byte $b2, $b4, $b9, $b14;
        short $s5, $s7, $s10, $s15;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: byte[] buffer>;

        $i1 = i0 + 4;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = $i1;

        $b2 = r1[i0];

        $s7 = $b2 & 255;

        $i3 = i0 + 1;

        $b4 = r1[$i3];

        $s5 = $b4 & 255;

        $i6 = $s5 << 8;

        $i12 = $s7 | $i6;

        $i8 = i0 + 2;

        $b9 = r1[$i8];

        $s10 = $b9 & 255;

        $i11 = $s10 << 16;

        $i17 = $i12 | $i11;

        $i13 = i0 + 3;

        $b14 = r1[$i13];

        $s15 = $b14 & 255;

        $i16 = $s15 << 24;

        $i18 = $i17 | $i16;

        return $i18;
    }

    public int readSFixed32() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(5);

        $i0 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readLittleEndian32()>();

        return $i0;
    }

    public int readSInt32() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        int $i0, $i1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(0);

        $i0 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: int decodeZigZag32(int)>($i0);

        return $i1;
    }

    public int readUInt32() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(0);

        $i0 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        return $i0;
    }

    private int readVarint32() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        int i0, $i1, $i2, $i3, $i4, $i6, $i8, $i10, $i11, $i12, $i19, i20, i21, i23, i24, i25, i26, i27, i28, i29, i30, i31, i32, i34, i35;
        byte[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        byte $b5, $b7, $b9, $b13, $b14, $b15, $b16, $b17, b22, b33;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r11, $r12;
        long $l18;
        java.lang.Throwable r13, r14;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        i20 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int limit>;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i2 != $i1 goto label01;

        $r12 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        r13 = (java.lang.Throwable) $r12;

        throw r13;

     label01:
        i21 = i20 + 1;

        $r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: byte[] buffer>;

        b22 = $r1[i20];

        if b22 < 0 goto label02;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i21;

        return b22;

     label02:
        $i3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int limit>;

        $i4 = $i3 - i21;

        if $i4 >= 9 goto label03;

        $l18 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: long readVarint64SlowPath()>();

        $i19 = (int) $l18;

        return $i19;

     label03:
        i23 = i21 + 1;

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: byte[] buffer>;

        $b5 = $r2[i21];

        $i6 = $b5 << 7;

        i24 = b22 ^ $i6;

        if i24 >= 0 goto label05;

        i25 = i24 ^ -128;

        i26 = i23;

     label04:
        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i26;

        return i25;

     label05:
        i27 = i23 + 1;

        $r3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: byte[] buffer>;

        $b7 = $r3[i23];

        $i8 = $b7 << 14;

        i28 = i24 ^ $i8;

        if i28 < 0 goto label06;

        i29 = i28 ^ 16256;

        i26 = i27;

        i25 = i29;

        goto label04;

     label06:
        i30 = i27 + 1;

        $r4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: byte[] buffer>;

        $b9 = $r4[i27];

        $i10 = $b9 << 21;

        i31 = i28 ^ $i10;

        if i31 >= 0 goto label07;

        i25 = i31 ^ -2080896;

        i26 = i30;

        goto label04;

     label07:
        i32 = i30 + 1;

        $r5 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: byte[] buffer>;

        b33 = $r5[i30];

        $i11 = b33 << 28;

        $i12 = i31 ^ $i11;

        i0 = $i12 ^ 266354560;

        if b33 >= 0 goto label13;

        i26 = i32 + 1;

        $r6 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: byte[] buffer>;

        $b13 = $r6[i32];

        if $b13 >= 0 goto label11;

        i34 = i26 + 1;

        $r7 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: byte[] buffer>;

        $b14 = $r7[i26];

        if $b14 >= 0 goto label10;

        i26 = i34 + 1;

        $r8 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: byte[] buffer>;

        $b15 = $r8[i34];

        if $b15 >= 0 goto label09;

        i35 = i26 + 1;

        $r9 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: byte[] buffer>;

        $b16 = $r9[i26];

        if $b16 >= 0 goto label08;

        i26 = i35 + 1;

        $r10 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: byte[] buffer>;

        $b17 = $r10[i35];

        if $b17 < 0 goto label12;

        i25 = i0;

        goto label04;

     label08:
        i26 = i35;

        i25 = i0;

        goto label04;

     label09:
        i25 = i0;

        goto label04;

     label10:
        i26 = i34;

        i25 = i0;

        goto label04;

     label11:
        i25 = i0;

        goto label04;

     label12:
        $r11 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException malformedVarint()>();

        r14 = (java.lang.Throwable) $r11;

        throw r14;

     label13:
        i26 = i32;

        i25 = i0;

        goto label04;
    }

    public long readFixed64() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        long $l0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(1);

        $l0 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: long readLittleEndian64()>();

        return $l0;
    }

    public long readInt64() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        long $l0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(0);

        $l0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: long readVarint64()>();

        return $l0;
    }

    private long readLittleEndian64() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        long $l0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requireBytes(int)>(8);

        $l0 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: long readLittleEndian64_NoCheck()>();

        return $l0;
    }

    private long readLittleEndian64_NoCheck()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        int i0, $i1, $i4, $i10, $i16, $i22, $i28, $i34, $i40;
        byte[] r1;
        byte $b2, $b5, $b11, $b17, $b23, $b29, $b35, $b41;
        long $l3, $l6, $l7, $l8, $l9, $l12, $l13, $l14, $l15, $l18, $l19, $l20, $l21, $l24, $l25, $l26, $l27, $l30, $l31, $l32, $l33, $l36, $l37, $l38, $l39, $l42, $l43, $l44, $l45, $l46;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: byte[] buffer>;

        $i1 = i0 + 8;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = $i1;

        $b2 = r1[i0];

        $l3 = (long) $b2;

        $l9 = $l3 & 255L;

        $i4 = i0 + 1;

        $b5 = r1[$i4];

        $l6 = (long) $b5;

        $l7 = $l6 & 255L;

        $l8 = $l7 << 8;

        $l15 = $l9 | $l8;

        $i10 = i0 + 2;

        $b11 = r1[$i10];

        $l12 = (long) $b11;

        $l13 = $l12 & 255L;

        $l14 = $l13 << 16;

        $l21 = $l15 | $l14;

        $i16 = i0 + 3;

        $b17 = r1[$i16];

        $l18 = (long) $b17;

        $l19 = $l18 & 255L;

        $l20 = $l19 << 24;

        $l27 = $l21 | $l20;

        $i22 = i0 + 4;

        $b23 = r1[$i22];

        $l24 = (long) $b23;

        $l25 = $l24 & 255L;

        $l26 = $l25 << 32;

        $l33 = $l27 | $l26;

        $i28 = i0 + 5;

        $b29 = r1[$i28];

        $l30 = (long) $b29;

        $l31 = $l30 & 255L;

        $l32 = $l31 << 40;

        $l39 = $l33 | $l32;

        $i34 = i0 + 6;

        $b35 = r1[$i34];

        $l36 = (long) $b35;

        $l37 = $l36 & 255L;

        $l38 = $l37 << 48;

        $l45 = $l39 | $l38;

        $i40 = i0 + 7;

        $b41 = r1[$i40];

        $l42 = (long) $b41;

        $l43 = $l42 & 255L;

        $l44 = $l43 << 56;

        $l46 = $l45 | $l44;

        return $l46;
    }

    public long readSFixed64() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        long $l0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(1);

        $l0 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: long readLittleEndian64()>();

        return $l0;
    }

    public long readSInt64() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        long $l0, $l1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(0);

        $l0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: long readVarint64()>();

        $l1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: long decodeZigZag64(long)>($l0);

        return $l1;
    }

    public long readUInt64() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        long $l0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(0);

        $l0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: long readVarint64()>();

        return $l0;
    }

    public long readVarint64() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        long l0, l1, $l12, $l13, $l14, $l17, $l18, $l21, $l22, $l25, $l26, $l29, $l30, $l31, $l34, $l39, $l40, l46, l48, l51, l54, l56, l57, l58, l60, l61, l62, l63;
        int $i2, $i3, $i4, $i6, $i8, $i10, $i36, $i37, $i38, i41, i42, i44, i45, i47, i49, i50, i52, i53, i55, i59, i64;
        byte $b5, $b7, $b9, $b11, $b15, $b16, $b19, $b20, $b23, $b24, $b27, $b28, $b32, $b33, $b35, b43;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r1, $r2;
        byte[] r3;
        java.lang.Throwable r4, r5;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        i41 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int limit>;

        if $i2 != i41 goto label01;

        $r2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        r4 = (java.lang.Throwable) $r2;

        throw r4;

     label01:
        r3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: byte[] buffer>;

        i42 = i41 + 1;

        b43 = r3[i41];

        if b43 < 0 goto label02;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i42;

        $l40 = (long) b43;

        return $l40;

     label02:
        $i3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int limit>;

        $i4 = $i3 - i42;

        if $i4 >= 9 goto label03;

        $l39 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: long readVarint64SlowPath()>();

        return $l39;

     label03:
        i44 = i42 + 1;

        $b5 = r3[i42];

        $i6 = $b5 << 7;

        i45 = b43 ^ $i6;

        if i45 >= 0 goto label05;

        $i38 = i45 ^ -128;

        l46 = (long) $i38;

        i47 = i44;

        l48 = l46;

     label04:
        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i47;

        return l48;

     label05:
        i49 = i44 + 1;

        $b7 = r3[i44];

        $i8 = $b7 << 14;

        i50 = i45 ^ $i8;

        if i50 < 0 goto label06;

        $i37 = i50 ^ 16256;

        l51 = (long) $i37;

        i47 = i49;

        l48 = l51;

        goto label04;

     label06:
        i52 = i49 + 1;

        $b9 = r3[i49];

        $i10 = $b9 << 21;

        i53 = i50 ^ $i10;

        if i53 >= 0 goto label07;

        $i36 = i53 ^ -2080896;

        l54 = (long) $i36;

        i47 = i52;

        l48 = l54;

        goto label04;

     label07:
        i55 = i52 + 1;

        $l14 = (long) i53;

        $b11 = r3[i52];

        $l12 = (long) $b11;

        $l13 = $l12 << 28;

        l0 = $l14 ^ $l13;

        $b15 = l0 cmp 0L;

        if $b15 < 0 goto label08;

        l56 = l0 ^ 266354560L;

        i47 = i55;

        l48 = l56;

        goto label04;

     label08:
        i47 = i55 + 1;

        $b16 = r3[i55];

        $l17 = (long) $b16;

        $l18 = $l17 << 35;

        l57 = l0 ^ $l18;

        $b19 = l57 cmp 0L;

        if $b19 >= 0 goto label09;

        l58 = l57 ^ -34093383808L;

        l48 = l58;

        goto label04;

     label09:
        i59 = i47 + 1;

        $b20 = r3[i47];

        $l21 = (long) $b20;

        $l22 = $l21 << 42;

        l60 = l57 ^ $l22;

        $b23 = l60 cmp 0L;

        if $b23 < 0 goto label10;

        l61 = l60 ^ 4363953127296L;

        i47 = i59;

        l48 = l61;

        goto label04;

     label10:
        i47 = i59 + 1;

        $b24 = r3[i59];

        $l25 = (long) $b24;

        $l26 = $l25 << 49;

        l62 = l60 ^ $l26;

        $b27 = l62 cmp 0L;

        if $b27 >= 0 goto label11;

        l63 = l62 ^ -558586000294016L;

        l48 = l63;

        goto label04;

     label11:
        i64 = i47 + 1;

        $b28 = r3[i47];

        $l29 = (long) $b28;

        $l30 = $l29 << 56;

        $l31 = l62 ^ $l30;

        l1 = $l31 ^ 71499008037633920L;

        $b32 = l1 cmp 0L;

        if $b32 >= 0 goto label13;

        i47 = i64 + 1;

        $b33 = r3[i64];

        $l34 = (long) $b33;

        $b35 = $l34 cmp 0L;

        if $b35 < 0 goto label12;

        l48 = l1;

        goto label04;

     label12:
        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException malformedVarint()>();

        r5 = (java.lang.Throwable) $r1;

        throw r5;

     label13:
        i47 = i64;

        l48 = l1;

        goto label04;
    }

    private long readVarint64SlowPath() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        byte b0, $b2;
        long l1, $l3, $l4, l6;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r1;
        short $s5;
        int i7;
        java.lang.Throwable r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        l6 = 0L;

        i7 = 0;

     label1:
        if i7 >= 64 goto label2;

        b0 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: byte readByte()>();

        $b2 = b0 & 127;

        $l3 = (long) $b2;

        $l4 = $l3 << i7;

        l1 = l6 | $l4;

        $s5 = b0 & 128;

        if $s5 != 0 goto label3;

        return l1;

     label2:
        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException malformedVarint()>();

        r2 = (java.lang.Throwable) $r1;

        throw r2;

     label3:
        i7 = i7 + 7;

        l6 = l1;

        goto label1;
    }

    public androidx.test.espresso.remote.internal.deps.protobuf.ByteString readBytes() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        int i0, $i1, $i2, $i3, $i4;
        boolean $z0;
        byte[] $r1, $r2;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString $r3, r4;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(2);

        i0 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        if i0 != 0 goto label1;

        $r3 = <androidx.test.espresso.remote.internal.deps.protobuf.ByteString: androidx.test.espresso.remote.internal.deps.protobuf.ByteString EMPTY>;

        return $r3;

     label1:
        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requireBytes(int)>(i0);

        $z0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean bufferIsImmutable>;

        if $z0 == 0 goto label3;

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: byte[] buffer>;

        $i4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        r4 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.ByteString: androidx.test.espresso.remote.internal.deps.protobuf.ByteString wrap(byte[],int,int)>($r2, $i4, i0);

     label2:
        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i3 = $i2 + i0;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = $i3;

        return r4;

     label3:
        $r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: byte[] buffer>;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        r4 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.ByteString: androidx.test.espresso.remote.internal.deps.protobuf.ByteString copyFrom(byte[],int,int)>($r1, $i1, i0);

        goto label2;
    }

    private java.lang.Object readField(androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType, java.lang.Class, androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType r0;
        java.lang.Class r1;
        androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite r2;
        int[] $r3;
        int $i0, $i1, $i3, $i5, $i7, $i9, $i11, $i12;
        long $l2, $l4, $l6, $l8, $l10;
        java.lang.Long $r4, $r7, $r9, $r12, $r15;
        java.lang.Integer $r5, $r8, $r10, $r13, $r16, $r17;
        java.lang.String $r6;
        java.lang.Object $r11;
        float $f0;
        java.lang.Float $r14;
        double $d0;
        java.lang.Double $r18;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString $r19;
        boolean $z0;
        java.lang.Boolean $r20;
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r21;
        java.lang.RuntimeException r22, r23;
        java.lang.Throwable r24;

        r21 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        r0 := @parameter0: androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite;

        $r3 = <androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$1: int[] $SwitchMap$com$google$protobuf$WireFormat$FieldType>;

        $i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType: int ordinal()>();

        $i1 = $r3[$i0];

        tableswitch($i1)
        {
            case 1: goto label18;
            case 2: goto label17;
            case 3: goto label16;
            case 4: goto label15;
            case 5: goto label14;
            case 6: goto label13;
            case 7: goto label12;
            case 8: goto label11;
            case 9: goto label10;
            case 10: goto label09;
            case 11: goto label08;
            case 12: goto label07;
            case 13: goto label06;
            case 14: goto label05;
            case 15: goto label04;
            case 16: goto label03;
            case 17: goto label02;
            default: goto label01;
        };

     label01:
        r23 = new java.lang.RuntimeException;

        r22 = r23;

        specialinvoke r23.<java.lang.RuntimeException: void <init>(java.lang.String)>("unsupported field type.");

        r24 = (java.lang.Throwable) r22;

        throw r24;

     label02:
        $l2 = virtualinvoke r21.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: long readUInt64()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        return $r4;

     label03:
        $i3 = virtualinvoke r21.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readUInt32()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        return $r5;

     label04:
        $r6 = virtualinvoke r21.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: java.lang.String readStringRequireUtf8()>();

        return $r6;

     label05:
        $l4 = virtualinvoke r21.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: long readSInt64()>();

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        return $r7;

     label06:
        $i5 = virtualinvoke r21.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readSInt32()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        return $r8;

     label07:
        $l6 = virtualinvoke r21.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: long readSFixed64()>();

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);

        return $r9;

     label08:
        $i7 = virtualinvoke r21.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readSFixed32()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        return $r10;

     label09:
        $r11 = virtualinvoke r21.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: java.lang.Object readMessage(java.lang.Class,androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite)>(r1, r2);

        return $r11;

     label10:
        $l8 = virtualinvoke r21.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: long readInt64()>();

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l8);

        return $r12;

     label11:
        $i9 = virtualinvoke r21.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readInt32()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        return $r13;

     label12:
        $f0 = virtualinvoke r21.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: float readFloat()>();

        $r14 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r14;

     label13:
        $l10 = virtualinvoke r21.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: long readFixed64()>();

        $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l10);

        return $r15;

     label14:
        $i11 = virtualinvoke r21.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readFixed32()>();

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        return $r16;

     label15:
        $i12 = virtualinvoke r21.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readEnum()>();

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        return $r17;

     label16:
        $d0 = virtualinvoke r21.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: double readDouble()>();

        $r18 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r18;

     label17:
        $r19 = virtualinvoke r21.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: androidx.test.espresso.remote.internal.deps.protobuf.ByteString readBytes()>();

        return $r19;

     label18:
        $z0 = virtualinvoke r21.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean readBool()>();

        $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r20;
    }

    private java.lang.Object readGroup(androidx.test.espresso.remote.internal.deps.protobuf.Schema, androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        int i0, $i1, $i2, $i3, i4, i5;
        java.lang.Object r1;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r2;
        java.lang.Throwable $r3, r6, r7;
        androidx.test.espresso.remote.internal.deps.protobuf.Schema r4;
        androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite r5;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        r4 := @parameter0: androidx.test.espresso.remote.internal.deps.protobuf.Schema;

        r5 := @parameter1: androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite;

        i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int endGroupTag>;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagFieldNumber(int)>($i1);

        $i3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int makeTag(int,int)>($i2, 4);

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int endGroupTag> = $i3;

     label1:
        r1 = interfaceinvoke r4.<androidx.test.espresso.remote.internal.deps.protobuf.Schema: java.lang.Object newInstance()>();

        interfaceinvoke r4.<androidx.test.espresso.remote.internal.deps.protobuf.Schema: void mergeFrom(java.lang.Object,androidx.test.espresso.remote.internal.deps.protobuf.Reader,androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite)>(r1, r0, r5);

        interfaceinvoke r4.<androidx.test.espresso.remote.internal.deps.protobuf.Schema: void makeImmutable(java.lang.Object)>(r1);

        i4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        i5 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int endGroupTag>;

     label2:
        if i4 == i5 goto label5;

     label3:
        $r2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException parseFailure()>();

        r7 = (java.lang.Throwable) $r2;

        throw r7;

     label4:
        $r3 := @caughtexception;

        r6 = $r3;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int endGroupTag> = i0;

        throw r6;

     label5:
        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int endGroupTag> = i0;

        return r1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
    }

    public java.lang.Object readGroup(java.lang.Class, androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        java.lang.Class r1;
        androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite r2;
        androidx.test.espresso.remote.internal.deps.protobuf.Protobuf $r3;
        androidx.test.espresso.remote.internal.deps.protobuf.Schema $r4;
        java.lang.Object $r5;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(3);

        $r3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.Protobuf: androidx.test.espresso.remote.internal.deps.protobuf.Protobuf getInstance()>();

        $r4 = virtualinvoke $r3.<androidx.test.espresso.remote.internal.deps.protobuf.Protobuf: androidx.test.espresso.remote.internal.deps.protobuf.Schema schemaFor(java.lang.Class)>(r1);

        $r5 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: java.lang.Object readGroup(androidx.test.espresso.remote.internal.deps.protobuf.Schema,androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite)>($r4, r2);

        return $r5;
    }

    public java.lang.Object readGroupBySchemaWithCheck(androidx.test.espresso.remote.internal.deps.protobuf.Schema, androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        androidx.test.espresso.remote.internal.deps.protobuf.Schema r1;
        androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite r2;
        java.lang.Object $r3;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        r1 := @parameter0: androidx.test.espresso.remote.internal.deps.protobuf.Schema;

        r2 := @parameter1: androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(3);

        $r3 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: java.lang.Object readGroup(androidx.test.espresso.remote.internal.deps.protobuf.Schema,androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite)>(r1, r2);

        return $r3;
    }

    private java.lang.Object readMessage(androidx.test.espresso.remote.internal.deps.protobuf.Schema, androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite r1;
        int i0, $i1, i2, i3, i4;
        java.lang.Object r2;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r3;
        java.lang.Throwable $r4, r6, r7;
        androidx.test.espresso.remote.internal.deps.protobuf.Schema r5;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        r5 := @parameter0: androidx.test.espresso.remote.internal.deps.protobuf.Schema;

        r1 := @parameter1: androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite;

        i2 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requireBytes(int)>(i2);

        i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int limit>;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        i3 = $i1 + i2;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int limit> = i3;

     label1:
        r2 = interfaceinvoke r5.<androidx.test.espresso.remote.internal.deps.protobuf.Schema: java.lang.Object newInstance()>();

        interfaceinvoke r5.<androidx.test.espresso.remote.internal.deps.protobuf.Schema: void mergeFrom(java.lang.Object,androidx.test.espresso.remote.internal.deps.protobuf.Reader,androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite)>(r2, r0, r1);

        interfaceinvoke r5.<androidx.test.espresso.remote.internal.deps.protobuf.Schema: void makeImmutable(java.lang.Object)>(r2);

        i4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

     label2:
        if i4 == i3 goto label5;

     label3:
        $r3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException parseFailure()>();

        r7 = (java.lang.Throwable) $r3;

        throw r7;

     label4:
        $r4 := @caughtexception;

        r6 = $r4;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int limit> = i0;

        throw r6;

     label5:
        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int limit> = i0;

        return r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
    }

    public java.lang.Object readMessage(java.lang.Class, androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        java.lang.Class r1;
        androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite r2;
        androidx.test.espresso.remote.internal.deps.protobuf.Protobuf $r3;
        androidx.test.espresso.remote.internal.deps.protobuf.Schema $r4;
        java.lang.Object $r5;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(2);

        $r3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.Protobuf: androidx.test.espresso.remote.internal.deps.protobuf.Protobuf getInstance()>();

        $r4 = virtualinvoke $r3.<androidx.test.espresso.remote.internal.deps.protobuf.Protobuf: androidx.test.espresso.remote.internal.deps.protobuf.Schema schemaFor(java.lang.Class)>(r1);

        $r5 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: java.lang.Object readMessage(androidx.test.espresso.remote.internal.deps.protobuf.Schema,androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite)>($r4, r2);

        return $r5;
    }

    public java.lang.Object readMessageBySchemaWithCheck(androidx.test.espresso.remote.internal.deps.protobuf.Schema, androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        androidx.test.espresso.remote.internal.deps.protobuf.Schema r1;
        androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite r2;
        java.lang.Object $r3;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        r1 := @parameter0: androidx.test.espresso.remote.internal.deps.protobuf.Schema;

        r2 := @parameter1: androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(2);

        $r3 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: java.lang.Object readMessage(androidx.test.espresso.remote.internal.deps.protobuf.Schema,androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite)>(r1, r2);

        return $r3;
    }

    public java.lang.String readString() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        java.lang.String $r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        $r1 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: java.lang.String readStringInternal(boolean)>(0);

        return $r1;
    }

    public java.lang.String readStringInternal(boolean) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.nio.charset.Charset $r1;
        byte[] $r2, $r3;
        boolean $z0, z1;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r4;
        java.lang.String r5, r6;
        java.lang.Throwable r7;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        z1 := @parameter0: boolean;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(2);

        i0 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        if i0 != 0 goto label1;

        return "";

     label1:
        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requireBytes(int)>(i0);

        if z1 == 0 goto label2;

        $r3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: byte[] buffer>;

        $i6 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i5 = $i4 + i0;

        $z0 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.Utf8: boolean isValidUtf8(byte[],int,int)>($r3, $i6, $i5);

        if $z0 != 0 goto label2;

        $r4 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException invalidUtf8()>();

        r7 = (java.lang.Throwable) $r4;

        throw r7;

     label2:
        r6 = new java.lang.String;

        r5 = r6;

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: byte[] buffer>;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $r1 = <androidx.test.espresso.remote.internal.deps.protobuf.Internal: java.nio.charset.Charset UTF_8>;

        specialinvoke r6.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>($r2, $i1, i0, $r1);

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i3 = $i2 + i0;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = $i3;

        return r5;
    }

    public java.lang.String readStringRequireUtf8() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        java.lang.String $r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        $r1 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: java.lang.String readStringInternal(boolean)>(1);

        return $r1;
    }

    public void <init>(java.nio.ByteBuffer, boolean)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        java.nio.ByteBuffer r1;
        byte[] $r2;
        int $i0, $i1, $i2, $i3, $i4, i5;
        boolean z0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        r1 := @parameter0: java.nio.ByteBuffer;

        z0 := @parameter1: boolean;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader: void <init>(androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader-IA)>(null);

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean bufferIsImmutable> = z0;

        $r2 = virtualinvoke r1.<java.nio.ByteBuffer: byte[] array()>();

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: byte[] buffer> = $r2;

        $i0 = virtualinvoke r1.<java.nio.ByteBuffer: int arrayOffset()>();

        $i1 = virtualinvoke r1.<java.nio.ByteBuffer: int position()>();

        i5 = $i0 + $i1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i5;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int initialPos> = i5;

        $i2 = virtualinvoke r1.<java.nio.ByteBuffer: int arrayOffset()>();

        $i3 = virtualinvoke r1.<java.nio.ByteBuffer: int limit()>();

        $i4 = $i2 + $i3;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int limit> = $i4;

        return;
    }

    public void readBoolList(java.util.List) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        boolean $z0, $z2, $z4, $z5, $z6, z7, z8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16, i17, i18, i19;
        java.lang.Boolean $r1, $r2;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r3, $r4;
        java.util.List r5;
        androidx.test.espresso.remote.internal.deps.protobuf.BooleanArrayList r6;
        java.lang.Throwable r7, r8;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        r5 := @parameter0: java.util.List;

        $z0 = r5 instanceof androidx.test.espresso.remote.internal.deps.protobuf.BooleanArrayList;

        if $z0 == 0 goto label08;

        r6 = (androidx.test.espresso.remote.internal.deps.protobuf.BooleanArrayList) r5;

        $i7 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i8 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagWireType(int)>($i7);

        lookupswitch($i8)
        {
            case 0: goto label01;
            case 2: goto label03;
            default: goto label16;
        };

     label01:
        $z5 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean readBool()>();

        virtualinvoke r6.<androidx.test.espresso.remote.internal.deps.protobuf.BooleanArrayList: void addBoolean(boolean)>($z5);

        $z6 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z6 == 0 goto label02;

        return;

     label02:
        i14 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i12 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i13 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i12 == $i13 goto label01;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i14;

        return;

     label03:
        i15 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i9 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        i16 = $i9 + i15;

     label04:
        $i10 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i10 >= i16 goto label07;

        $i11 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        if $i11 == 0 goto label06;

        z7 = 1;

     label05:
        virtualinvoke r6.<androidx.test.espresso.remote.internal.deps.protobuf.BooleanArrayList: void addBoolean(boolean)>(z7);

        goto label04;

     label06:
        z7 = 0;

        goto label05;

     label07:
        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requirePosition(int)>(i16);

        return;

     label08:
        $i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagWireType(int)>($i0);

        lookupswitch($i1)
        {
            case 0: goto label09;
            case 2: goto label11;
            default: goto label15;
        };

     label09:
        $z2 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean readBool()>();

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r2);

        $z4 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z4 == 0 goto label10;

        return;

     label10:
        i17 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i5 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i6 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i5 == $i6 goto label09;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i17;

        return;

     label11:
        i18 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        i19 = $i2 + i18;

     label12:
        $i3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i3 >= i19 goto label17;

        $i4 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        if $i4 == 0 goto label14;

        z8 = 1;

     label13:
        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z8);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r1);

        goto label12;

     label14:
        z8 = 0;

        goto label13;

     label15:
        $r3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        r7 = (java.lang.Throwable) $r3;

        throw r7;

     label16:
        $r4 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        r8 = (java.lang.Throwable) $r4;

        throw r8;

     label17:
        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requirePosition(int)>(i19);

        return;
    }

    public void readBytesList(java.util.List) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        java.util.List r1;
        int i0, $i1, $i2, $i3, $i4;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r2;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString $r3;
        boolean $z1;
        java.lang.Throwable r4;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        r1 := @parameter0: java.util.List;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagWireType(int)>($i1);

        if $i2 != 2 goto label3;

     label1:
        $r3 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: androidx.test.espresso.remote.internal.deps.protobuf.ByteString readBytes()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r3);

        $z1 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z1 == 0 goto label2;

        return;

     label2:
        i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i3 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i3 == $i4 goto label1;

        goto label4;

     label3:
        $r2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        r4 = (java.lang.Throwable) $r2;

        throw r4;

     label4:
        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i0;

        return;
    }

    public void readDoubleList(java.util.List) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        boolean $z0, $z3, $z4;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, i14, i15, i16, i17, i18, i19;
        long $l4, $l11;
        double $d0, $d1, $d2, $d3;
        java.lang.Double $r1, $r2;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r3, $r4;
        java.util.List r5;
        androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList r6;
        java.lang.Throwable r7, r8;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        r5 := @parameter0: java.util.List;

        $z0 = r5 instanceof androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList;

        if $z0 == 0 goto label06;

        r6 = (androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList) r5;

        $i7 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i8 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagWireType(int)>($i7);

        tableswitch($i8)
        {
            case 1: goto label01;
            case 2: goto label03;
            default: goto label12;
        };

     label01:
        $d3 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: double readDouble()>();

        virtualinvoke r6.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: void addDouble(double)>($d3);

        $z4 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z4 == 0 goto label02;

        return;

     label02:
        i14 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i12 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i13 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i12 == $i13 goto label01;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i14;

        return;

     label03:
        i15 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void verifyPackedFixed64Length(int)>(i15);

        $i9 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        i16 = $i9 + i15;

     label04:
        $i10 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i10 >= i16 goto label05;

        $l11 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: long readLittleEndian64_NoCheck()>();

        $d2 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l11);

        virtualinvoke r6.<androidx.test.espresso.remote.internal.deps.protobuf.DoubleArrayList: void addDouble(double)>($d2);

        goto label04;

     label05:
        return;

     label06:
        $i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagWireType(int)>($i0);

        tableswitch($i1)
        {
            case 1: goto label07;
            case 2: goto label09;
            default: goto label11;
        };

     label07:
        $d1 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: double readDouble()>();

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r2);

        $z3 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z3 == 0 goto label08;

        return;

     label08:
        i17 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i5 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i6 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i5 == $i6 goto label07;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i17;

        return;

     label09:
        i18 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void verifyPackedFixed64Length(int)>(i18);

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        i19 = $i2 + i18;

     label10:
        $i3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i3 >= i19 goto label05;

        goto label13;

     label11:
        $r3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        r7 = (java.lang.Throwable) $r3;

        throw r7;

     label12:
        $r4 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        r8 = (java.lang.Throwable) $r4;

        throw r8;

     label13:
        $l4 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: long readLittleEndian64_NoCheck()>();

        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l4);

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r1);

        goto label10;
    }

    public void readEnumList(java.util.List) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        boolean $z0, $z3, $z4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18, i19, i20, i21;
        java.lang.Integer $r1, $r2;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r3, $r4;
        java.util.List r5;
        androidx.test.espresso.remote.internal.deps.protobuf.IntArrayList r6;
        java.lang.Throwable r7, r8;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        r5 := @parameter0: java.util.List;

        $z0 = r5 instanceof androidx.test.espresso.remote.internal.deps.protobuf.IntArrayList;

        if $z0 == 0 goto label06;

        r6 = (androidx.test.espresso.remote.internal.deps.protobuf.IntArrayList) r5;

        $i8 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i9 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagWireType(int)>($i8);

        lookupswitch($i9)
        {
            case 0: goto label01;
            case 2: goto label03;
            default: goto label12;
        };

     label01:
        $i13 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readEnum()>();

        virtualinvoke r6.<androidx.test.espresso.remote.internal.deps.protobuf.IntArrayList: void addInt(int)>($i13);

        $z4 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z4 == 0 goto label02;

        return;

     label02:
        i16 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i14 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i15 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i14 == $i15 goto label01;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i16;

        return;

     label03:
        i17 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i10 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        i18 = $i10 + i17;

     label04:
        $i11 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i11 >= i18 goto label05;

        $i12 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        virtualinvoke r6.<androidx.test.espresso.remote.internal.deps.protobuf.IntArrayList: void addInt(int)>($i12);

        goto label04;

     label05:
        return;

     label06:
        $i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagWireType(int)>($i0);

        lookupswitch($i1)
        {
            case 0: goto label07;
            case 2: goto label09;
            default: goto label11;
        };

     label07:
        $i5 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readEnum()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r2);

        $z3 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z3 == 0 goto label08;

        return;

     label08:
        i19 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i6 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i7 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i6 == $i7 goto label07;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i19;

        return;

     label09:
        i20 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        i21 = $i2 + i20;

     label10:
        $i3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i3 >= i21 goto label05;

        goto label13;

     label11:
        $r3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        r7 = (java.lang.Throwable) $r3;

        throw r7;

     label12:
        $r4 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        r8 = (java.lang.Throwable) $r4;

        throw r8;

     label13:
        $i4 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r1);

        goto label10;
    }

    public void readFixed32List(java.util.List) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        boolean $z0, $z2, $z4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18, i19, i20, i21;
        java.lang.Integer $r1, $r2;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r3, $r4;
        java.util.List r5;
        androidx.test.espresso.remote.internal.deps.protobuf.IntArrayList r6;
        java.lang.Throwable r7, r8;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        r5 := @parameter0: java.util.List;

        $z0 = r5 instanceof androidx.test.espresso.remote.internal.deps.protobuf.IntArrayList;

        if $z0 == 0 goto label06;

        r6 = (androidx.test.espresso.remote.internal.deps.protobuf.IntArrayList) r5;

        $i8 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i9 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagWireType(int)>($i8);

        lookupswitch($i9)
        {
            case 2: goto label03;
            case 5: goto label01;
            default: goto label12;
        };

     label01:
        $i10 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readFixed32()>();

        virtualinvoke r6.<androidx.test.espresso.remote.internal.deps.protobuf.IntArrayList: void addInt(int)>($i10);

        $z4 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z4 == 0 goto label02;

        return;

     label02:
        i16 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i11 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i12 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i11 == $i12 goto label01;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i16;

        return;

     label03:
        i17 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void verifyPackedFixed32Length(int)>(i17);

        $i13 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        i18 = $i13 + i17;

     label04:
        $i14 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i14 >= i18 goto label05;

        $i15 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readLittleEndian32_NoCheck()>();

        virtualinvoke r6.<androidx.test.espresso.remote.internal.deps.protobuf.IntArrayList: void addInt(int)>($i15);

        goto label04;

     label05:
        return;

     label06:
        $i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagWireType(int)>($i0);

        lookupswitch($i1)
        {
            case 2: goto label09;
            case 5: goto label07;
            default: goto label11;
        };

     label07:
        $i2 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readFixed32()>();

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r1);

        $z2 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z2 == 0 goto label08;

        return;

     label08:
        i19 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i3 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i3 == $i4 goto label07;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i19;

        return;

     label09:
        i20 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void verifyPackedFixed32Length(int)>(i20);

        $i5 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        i21 = $i5 + i20;

     label10:
        $i6 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i6 >= i21 goto label05;

        goto label13;

     label11:
        $r3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        r7 = (java.lang.Throwable) $r3;

        throw r7;

     label12:
        $r4 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        r8 = (java.lang.Throwable) $r4;

        throw r8;

     label13:
        $i7 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readLittleEndian32_NoCheck()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r2);

        goto label10;
    }

    public void readFixed64List(java.util.List) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        boolean $z0, $z3, $z4;
        int $i0, $i1, $i2, $i3, $i6, $i7, $i8, $i9, $i10, $i11, $i14, $i15, i16, i17, i18, i19, i20, i21;
        long $l4, $l5, $l12, $l13;
        java.lang.Long $r1, $r2;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r3, $r4;
        java.util.List r5;
        androidx.test.espresso.remote.internal.deps.protobuf.LongArrayList r6;
        java.lang.Throwable r7, r8;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        r5 := @parameter0: java.util.List;

        $z0 = r5 instanceof androidx.test.espresso.remote.internal.deps.protobuf.LongArrayList;

        if $z0 == 0 goto label06;

        r6 = (androidx.test.espresso.remote.internal.deps.protobuf.LongArrayList) r5;

        $i8 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i9 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagWireType(int)>($i8);

        tableswitch($i9)
        {
            case 1: goto label01;
            case 2: goto label03;
            default: goto label12;
        };

     label01:
        $l13 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: long readFixed64()>();

        virtualinvoke r6.<androidx.test.espresso.remote.internal.deps.protobuf.LongArrayList: void addLong(long)>($l13);

        $z4 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z4 == 0 goto label02;

        return;

     label02:
        i16 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i14 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i15 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i14 == $i15 goto label01;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i16;

        return;

     label03:
        i17 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void verifyPackedFixed64Length(int)>(i17);

        $i10 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        i18 = $i10 + i17;

     label04:
        $i11 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i11 >= i18 goto label05;

        $l12 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: long readLittleEndian64_NoCheck()>();

        virtualinvoke r6.<androidx.test.espresso.remote.internal.deps.protobuf.LongArrayList: void addLong(long)>($l12);

        goto label04;

     label05:
        return;

     label06:
        $i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagWireType(int)>($i0);

        tableswitch($i1)
        {
            case 1: goto label07;
            case 2: goto label09;
            default: goto label11;
        };

     label07:
        $l5 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: long readFixed64()>();

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r2);

        $z3 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z3 == 0 goto label08;

        return;

     label08:
        i19 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i6 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i7 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i6 == $i7 goto label07;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i19;

        return;

     label09:
        i20 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void verifyPackedFixed64Length(int)>(i20);

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        i21 = $i2 + i20;

     label10:
        $i3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i3 >= i21 goto label05;

        goto label13;

     label11:
        $r3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        r7 = (java.lang.Throwable) $r3;

        throw r7;

     label12:
        $r4 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        r8 = (java.lang.Throwable) $r4;

        throw r8;

     label13:
        $l4 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: long readLittleEndian64_NoCheck()>();

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r1);

        goto label10;
    }

    public void readFloatList(java.util.List) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        boolean $z0, $z2, $z4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16, i17, i18, i19;
        float $f0, $f1, $f2, $f3;
        java.lang.Float $r1, $r2;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r3, $r4;
        java.util.List r5;
        androidx.test.espresso.remote.internal.deps.protobuf.FloatArrayList r6;
        java.lang.Throwable r7, r8;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        r5 := @parameter0: java.util.List;

        $z0 = r5 instanceof androidx.test.espresso.remote.internal.deps.protobuf.FloatArrayList;

        if $z0 == 0 goto label06;

        r6 = (androidx.test.espresso.remote.internal.deps.protobuf.FloatArrayList) r5;

        $i7 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i8 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagWireType(int)>($i7);

        lookupswitch($i8)
        {
            case 2: goto label03;
            case 5: goto label01;
            default: goto label12;
        };

     label01:
        $f2 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: float readFloat()>();

        virtualinvoke r6.<androidx.test.espresso.remote.internal.deps.protobuf.FloatArrayList: void addFloat(float)>($f2);

        $z4 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z4 == 0 goto label02;

        return;

     label02:
        i14 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i9 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i10 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i9 == $i10 goto label01;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i14;

        return;

     label03:
        i15 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void verifyPackedFixed32Length(int)>(i15);

        $i11 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        i16 = $i11 + i15;

     label04:
        $i12 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i12 >= i16 goto label05;

        $i13 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readLittleEndian32_NoCheck()>();

        $f3 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i13);

        virtualinvoke r6.<androidx.test.espresso.remote.internal.deps.protobuf.FloatArrayList: void addFloat(float)>($f3);

        goto label04;

     label05:
        return;

     label06:
        $i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagWireType(int)>($i0);

        lookupswitch($i1)
        {
            case 2: goto label09;
            case 5: goto label07;
            default: goto label11;
        };

     label07:
        $f0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: float readFloat()>();

        $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r1);

        $z2 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z2 == 0 goto label08;

        return;

     label08:
        i17 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i2 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i2 == $i3 goto label07;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i17;

        return;

     label09:
        i18 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void verifyPackedFixed32Length(int)>(i18);

        $i4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        i19 = $i4 + i18;

     label10:
        $i5 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i5 >= i19 goto label05;

        goto label13;

     label11:
        $r3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        r7 = (java.lang.Throwable) $r3;

        throw r7;

     label12:
        $r4 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        r8 = (java.lang.Throwable) $r4;

        throw r8;

     label13:
        $i6 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readLittleEndian32_NoCheck()>();

        $f1 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i6);

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r2);

        goto label10;
    }

    public void readGroupList(java.util.List, androidx.test.espresso.remote.internal.deps.protobuf.Schema, androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        java.util.List r1;
        androidx.test.espresso.remote.internal.deps.protobuf.Schema r2;
        androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite r3;
        int i0, i1, $i2, $i3, $i4;
        java.lang.Object $r4;
        boolean $z1;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r5;
        java.lang.Throwable r6;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: androidx.test.espresso.remote.internal.deps.protobuf.Schema;

        r3 := @parameter2: androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite;

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagWireType(int)>($i2);

        if $i3 == 3 goto label1;

        $r5 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        r6 = (java.lang.Throwable) $r5;

        throw r6;

     label1:
        i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

     label2:
        $r4 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: java.lang.Object readGroup(androidx.test.espresso.remote.internal.deps.protobuf.Schema,androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite)>(r2, r3);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        $z1 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z1 == 0 goto label3;

        return;

     label3:
        i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i4 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        if $i4 == i0 goto label2;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i1;

        return;
    }

    public void readInt32List(java.util.List) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        boolean $z0, $z3, $z4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18, i19, i20, i21;
        java.lang.Integer $r1, $r2;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r3, $r4;
        java.util.List r5;
        androidx.test.espresso.remote.internal.deps.protobuf.IntArrayList r6;
        java.lang.Throwable r7, r8;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        r5 := @parameter0: java.util.List;

        $z0 = r5 instanceof androidx.test.espresso.remote.internal.deps.protobuf.IntArrayList;

        if $z0 == 0 goto label06;

        r6 = (androidx.test.espresso.remote.internal.deps.protobuf.IntArrayList) r5;

        $i8 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i9 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagWireType(int)>($i8);

        lookupswitch($i9)
        {
            case 0: goto label01;
            case 2: goto label03;
            default: goto label12;
        };

     label01:
        $i13 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readInt32()>();

        virtualinvoke r6.<androidx.test.espresso.remote.internal.deps.protobuf.IntArrayList: void addInt(int)>($i13);

        $z4 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z4 == 0 goto label02;

        return;

     label02:
        i16 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i14 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i15 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i14 == $i15 goto label01;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i16;

        return;

     label03:
        i17 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i10 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        i18 = $i10 + i17;

     label04:
        $i11 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i11 >= i18 goto label05;

        $i12 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        virtualinvoke r6.<androidx.test.espresso.remote.internal.deps.protobuf.IntArrayList: void addInt(int)>($i12);

        goto label04;

     label05:
        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requirePosition(int)>(i18);

        return;

     label06:
        $i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagWireType(int)>($i0);

        lookupswitch($i1)
        {
            case 0: goto label07;
            case 2: goto label09;
            default: goto label11;
        };

     label07:
        $i5 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readInt32()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r2);

        $z3 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z3 == 0 goto label08;

        return;

     label08:
        i19 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i6 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i7 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i6 == $i7 goto label07;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i19;

        return;

     label09:
        i20 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        i21 = $i2 + i20;

     label10:
        $i3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i3 >= i21 goto label13;

        $i4 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r1);

        goto label10;

     label11:
        $r3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        r7 = (java.lang.Throwable) $r3;

        throw r7;

     label12:
        $r4 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        r8 = (java.lang.Throwable) $r4;

        throw r8;

     label13:
        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requirePosition(int)>(i21);

        return;
    }

    public void readInt64List(java.util.List) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        boolean $z0, $z3, $z4;
        int $i0, $i1, $i2, $i3, $i6, $i7, $i8, $i9, $i10, $i11, $i14, $i15, i16, i17, i18, i19, i20, i21;
        long $l4, $l5, $l12, $l13;
        java.lang.Long $r1, $r2;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r3, $r4;
        java.util.List r5;
        androidx.test.espresso.remote.internal.deps.protobuf.LongArrayList r6;
        java.lang.Throwable r7, r8;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        r5 := @parameter0: java.util.List;

        $z0 = r5 instanceof androidx.test.espresso.remote.internal.deps.protobuf.LongArrayList;

        if $z0 == 0 goto label06;

        r6 = (androidx.test.espresso.remote.internal.deps.protobuf.LongArrayList) r5;

        $i8 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i9 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagWireType(int)>($i8);

        lookupswitch($i9)
        {
            case 0: goto label01;
            case 2: goto label03;
            default: goto label12;
        };

     label01:
        $l13 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: long readInt64()>();

        virtualinvoke r6.<androidx.test.espresso.remote.internal.deps.protobuf.LongArrayList: void addLong(long)>($l13);

        $z4 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z4 == 0 goto label02;

        return;

     label02:
        i16 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i14 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i15 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i14 == $i15 goto label01;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i16;

        return;

     label03:
        i17 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i10 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        i18 = $i10 + i17;

     label04:
        $i11 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i11 >= i18 goto label05;

        $l12 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: long readVarint64()>();

        virtualinvoke r6.<androidx.test.espresso.remote.internal.deps.protobuf.LongArrayList: void addLong(long)>($l12);

        goto label04;

     label05:
        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requirePosition(int)>(i18);

        return;

     label06:
        $i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagWireType(int)>($i0);

        lookupswitch($i1)
        {
            case 0: goto label07;
            case 2: goto label09;
            default: goto label11;
        };

     label07:
        $l5 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: long readInt64()>();

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r2);

        $z3 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z3 == 0 goto label08;

        return;

     label08:
        i19 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i6 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i7 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i6 == $i7 goto label07;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i19;

        return;

     label09:
        i20 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        i21 = $i2 + i20;

     label10:
        $i3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i3 >= i21 goto label13;

        $l4 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: long readVarint64()>();

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r1);

        goto label10;

     label11:
        $r3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        r7 = (java.lang.Throwable) $r3;

        throw r7;

     label12:
        $r4 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        r8 = (java.lang.Throwable) $r4;

        throw r8;

     label13:
        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requirePosition(int)>(i21);

        return;
    }

    public void readMap(java.util.Map, androidx.test.espresso.remote.internal.deps.protobuf.MapEntryLite$Metadata, androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        androidx.test.espresso.remote.internal.deps.protobuf.MapEntryLite$Metadata r1;
        androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite r2;
        java.lang.Object r3, $r4, r11, r12, r13, r14;
        int i0, $i1, $i2, i3, i4;
        androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType $r5, $r7;
        java.lang.Class $r6;
        java.lang.Throwable $r9, r15, r18;
        java.util.Map r10;
        boolean z0;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException r16, r17;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        r10 := @parameter0: java.util.Map;

        r1 := @parameter1: androidx.test.espresso.remote.internal.deps.protobuf.MapEntryLite$Metadata;

        r2 := @parameter2: androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(2);

        i3 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requireBytes(int)>(i3);

        i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int limit>;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i2 = $i1 + i3;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int limit> = $i2;

     label01:
        r11 = r1.<androidx.test.espresso.remote.internal.deps.protobuf.MapEntryLite$Metadata: java.lang.Object defaultKey>;

        r12 = r1.<androidx.test.espresso.remote.internal.deps.protobuf.MapEntryLite$Metadata: java.lang.Object defaultValue>;

     label02:
        i4 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int getFieldNumber()>();

     label03:
        if i4 != 2147483647 goto label06;

     label04:
        interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, r12);

     label05:
        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int limit> = i0;

        return;

     label06:
        tableswitch(i4)
        {
            case 1: goto label11;
            case 2: goto label10;
            default: goto label07;
        };

     label07:
        z0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean skipField()>();

     label08:
        if z0 == 0 goto label14;

        r13 = r12;

     label09:
        r3 = r13;

        r12 = r3;

        goto label02;

     label10:
        $r5 = r1.<androidx.test.espresso.remote.internal.deps.protobuf.MapEntryLite$Metadata: androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType valueType>;

        $r4 = r1.<androidx.test.espresso.remote.internal.deps.protobuf.MapEntryLite$Metadata: java.lang.Object defaultValue>;

        $r6 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        r13 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: java.lang.Object readField(androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType,java.lang.Class,androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite)>($r5, $r6, r2);

        goto label09;

     label11:
        $r7 = r1.<androidx.test.espresso.remote.internal.deps.protobuf.MapEntryLite$Metadata: androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType keyType>;

        r14 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: java.lang.Object readField(androidx.test.espresso.remote.internal.deps.protobuf.WireFormat$FieldType,java.lang.Class,androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite)>($r7, null, null);

     label12:
        r11 = r14;

        r13 = r12;

        goto label09;

     label13:
        $r9 := @caughtexception;

        r15 = $r9;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int limit> = i0;

        throw r15;

     label14:
        r17 = new androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException;

        r16 = r17;

        specialinvoke r17.<androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>("Unable to parse map entry.");

     label15:
        r18 = (java.lang.Throwable) r16;

        throw r18;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public void readMessageList(java.util.List, androidx.test.espresso.remote.internal.deps.protobuf.Schema, androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        java.util.List r1;
        androidx.test.espresso.remote.internal.deps.protobuf.Schema r2;
        androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite r3;
        int i0, i1, $i2, $i3, $i4;
        java.lang.Object $r4;
        boolean $z1;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r5;
        java.lang.Throwable r6;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: androidx.test.espresso.remote.internal.deps.protobuf.Schema;

        r3 := @parameter2: androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite;

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagWireType(int)>($i2);

        if $i3 == 2 goto label1;

        $r5 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        r6 = (java.lang.Throwable) $r5;

        throw r6;

     label1:
        i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

     label2:
        $r4 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: java.lang.Object readMessage(androidx.test.espresso.remote.internal.deps.protobuf.Schema,androidx.test.espresso.remote.internal.deps.protobuf.ExtensionRegistryLite)>(r2, r3);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        $z1 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z1 == 0 goto label3;

        return;

     label3:
        i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i4 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        if $i4 == i0 goto label2;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i1;

        return;
    }

    public void readSFixed32List(java.util.List) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        boolean $z0, $z2, $z4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18, i19, i20, i21;
        java.lang.Integer $r1, $r2;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r3, $r4;
        java.util.List r5;
        androidx.test.espresso.remote.internal.deps.protobuf.IntArrayList r6;
        java.lang.Throwable r7, r8;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        r5 := @parameter0: java.util.List;

        $z0 = r5 instanceof androidx.test.espresso.remote.internal.deps.protobuf.IntArrayList;

        if $z0 == 0 goto label06;

        r6 = (androidx.test.espresso.remote.internal.deps.protobuf.IntArrayList) r5;

        $i8 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i9 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagWireType(int)>($i8);

        lookupswitch($i9)
        {
            case 2: goto label03;
            case 5: goto label01;
            default: goto label12;
        };

     label01:
        $i10 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readSFixed32()>();

        virtualinvoke r6.<androidx.test.espresso.remote.internal.deps.protobuf.IntArrayList: void addInt(int)>($i10);

        $z4 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z4 == 0 goto label02;

        return;

     label02:
        i16 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i11 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i12 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i11 == $i12 goto label01;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i16;

        return;

     label03:
        i17 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void verifyPackedFixed32Length(int)>(i17);

        $i13 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        i18 = $i13 + i17;

     label04:
        $i14 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i14 >= i18 goto label05;

        $i15 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readLittleEndian32_NoCheck()>();

        virtualinvoke r6.<androidx.test.espresso.remote.internal.deps.protobuf.IntArrayList: void addInt(int)>($i15);

        goto label04;

     label05:
        return;

     label06:
        $i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagWireType(int)>($i0);

        lookupswitch($i1)
        {
            case 2: goto label09;
            case 5: goto label07;
            default: goto label11;
        };

     label07:
        $i2 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readSFixed32()>();

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r1);

        $z2 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z2 == 0 goto label08;

        return;

     label08:
        i19 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i3 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i3 == $i4 goto label07;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i19;

        return;

     label09:
        i20 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void verifyPackedFixed32Length(int)>(i20);

        $i5 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        i21 = $i5 + i20;

     label10:
        $i6 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i6 >= i21 goto label05;

        goto label13;

     label11:
        $r3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        r7 = (java.lang.Throwable) $r3;

        throw r7;

     label12:
        $r4 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        r8 = (java.lang.Throwable) $r4;

        throw r8;

     label13:
        $i7 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readLittleEndian32_NoCheck()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r2);

        goto label10;
    }

    public void readSFixed64List(java.util.List) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        boolean $z0, $z3, $z4;
        int $i0, $i1, $i2, $i3, $i6, $i7, $i8, $i9, $i10, $i11, $i14, $i15, i16, i17, i18, i19, i20, i21;
        long $l4, $l5, $l12, $l13;
        java.lang.Long $r1, $r2;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r3, $r4;
        java.util.List r5;
        androidx.test.espresso.remote.internal.deps.protobuf.LongArrayList r6;
        java.lang.Throwable r7, r8;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        r5 := @parameter0: java.util.List;

        $z0 = r5 instanceof androidx.test.espresso.remote.internal.deps.protobuf.LongArrayList;

        if $z0 == 0 goto label06;

        r6 = (androidx.test.espresso.remote.internal.deps.protobuf.LongArrayList) r5;

        $i8 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i9 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagWireType(int)>($i8);

        tableswitch($i9)
        {
            case 1: goto label01;
            case 2: goto label03;
            default: goto label12;
        };

     label01:
        $l13 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: long readSFixed64()>();

        virtualinvoke r6.<androidx.test.espresso.remote.internal.deps.protobuf.LongArrayList: void addLong(long)>($l13);

        $z4 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z4 == 0 goto label02;

        return;

     label02:
        i16 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i14 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i15 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i14 == $i15 goto label01;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i16;

        return;

     label03:
        i17 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void verifyPackedFixed64Length(int)>(i17);

        $i10 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        i18 = $i10 + i17;

     label04:
        $i11 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i11 >= i18 goto label05;

        $l12 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: long readLittleEndian64_NoCheck()>();

        virtualinvoke r6.<androidx.test.espresso.remote.internal.deps.protobuf.LongArrayList: void addLong(long)>($l12);

        goto label04;

     label05:
        return;

     label06:
        $i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagWireType(int)>($i0);

        tableswitch($i1)
        {
            case 1: goto label07;
            case 2: goto label09;
            default: goto label11;
        };

     label07:
        $l5 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: long readSFixed64()>();

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r2);

        $z3 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z3 == 0 goto label08;

        return;

     label08:
        i19 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i6 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i7 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i6 == $i7 goto label07;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i19;

        return;

     label09:
        i20 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void verifyPackedFixed64Length(int)>(i20);

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        i21 = $i2 + i20;

     label10:
        $i3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i3 >= i21 goto label05;

        goto label13;

     label11:
        $r3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        r7 = (java.lang.Throwable) $r3;

        throw r7;

     label12:
        $r4 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        r8 = (java.lang.Throwable) $r4;

        throw r8;

     label13:
        $l4 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: long readLittleEndian64_NoCheck()>();

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r1);

        goto label10;
    }

    public void readSInt32List(java.util.List) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        boolean $z0, $z3, $z4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, i20, i21, i22, i23;
        java.lang.Integer $r1, $r2;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r3, $r4;
        java.util.List r5;
        androidx.test.espresso.remote.internal.deps.protobuf.IntArrayList r6;
        java.lang.Throwable r7, r8;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        r5 := @parameter0: java.util.List;

        $z0 = r5 instanceof androidx.test.espresso.remote.internal.deps.protobuf.IntArrayList;

        if $z0 == 0 goto label06;

        r6 = (androidx.test.espresso.remote.internal.deps.protobuf.IntArrayList) r5;

        $i9 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i10 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagWireType(int)>($i9);

        lookupswitch($i10)
        {
            case 0: goto label01;
            case 2: goto label03;
            default: goto label12;
        };

     label01:
        $i15 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readSInt32()>();

        virtualinvoke r6.<androidx.test.espresso.remote.internal.deps.protobuf.IntArrayList: void addInt(int)>($i15);

        $z4 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z4 == 0 goto label02;

        return;

     label02:
        i18 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i16 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i17 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i16 == $i17 goto label01;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i18;

        return;

     label03:
        i19 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i11 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        i20 = $i11 + i19;

     label04:
        $i12 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i12 >= i20 goto label05;

        $i13 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i14 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: int decodeZigZag32(int)>($i13);

        virtualinvoke r6.<androidx.test.espresso.remote.internal.deps.protobuf.IntArrayList: void addInt(int)>($i14);

        goto label04;

     label05:
        return;

     label06:
        $i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagWireType(int)>($i0);

        lookupswitch($i1)
        {
            case 0: goto label07;
            case 2: goto label09;
            default: goto label11;
        };

     label07:
        $i6 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readSInt32()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r2);

        $z3 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z3 == 0 goto label08;

        return;

     label08:
        i21 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i7 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i8 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i7 == $i8 goto label07;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i21;

        return;

     label09:
        i22 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        i23 = $i2 + i22;

     label10:
        $i3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i3 >= i23 goto label05;

        goto label13;

     label11:
        $r3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        r7 = (java.lang.Throwable) $r3;

        throw r7;

     label12:
        $r4 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        r8 = (java.lang.Throwable) $r4;

        throw r8;

     label13:
        $i4 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i5 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: int decodeZigZag32(int)>($i4);

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r1);

        goto label10;
    }

    public void readSInt64List(java.util.List) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        boolean $z0, $z3, $z4;
        int $i0, $i1, $i2, $i3, $i7, $i8, $i9, $i10, $i11, $i12, $i16, $i17, i18, i19, i20, i21, i22, i23;
        long $l4, $l5, $l6, $l13, $l14, $l15;
        java.lang.Long $r1, $r2;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r3, $r4;
        java.util.List r5;
        androidx.test.espresso.remote.internal.deps.protobuf.LongArrayList r6;
        java.lang.Throwable r7, r8;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        r5 := @parameter0: java.util.List;

        $z0 = r5 instanceof androidx.test.espresso.remote.internal.deps.protobuf.LongArrayList;

        if $z0 == 0 goto label06;

        r6 = (androidx.test.espresso.remote.internal.deps.protobuf.LongArrayList) r5;

        $i9 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i10 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagWireType(int)>($i9);

        lookupswitch($i10)
        {
            case 0: goto label01;
            case 2: goto label03;
            default: goto label12;
        };

     label01:
        $l15 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: long readSInt64()>();

        virtualinvoke r6.<androidx.test.espresso.remote.internal.deps.protobuf.LongArrayList: void addLong(long)>($l15);

        $z4 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z4 == 0 goto label02;

        return;

     label02:
        i18 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i16 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i17 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i16 == $i17 goto label01;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i18;

        return;

     label03:
        i19 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i11 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        i20 = $i11 + i19;

     label04:
        $i12 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i12 >= i20 goto label05;

        $l13 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: long readVarint64()>();

        $l14 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: long decodeZigZag64(long)>($l13);

        virtualinvoke r6.<androidx.test.espresso.remote.internal.deps.protobuf.LongArrayList: void addLong(long)>($l14);

        goto label04;

     label05:
        return;

     label06:
        $i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagWireType(int)>($i0);

        lookupswitch($i1)
        {
            case 0: goto label07;
            case 2: goto label09;
            default: goto label11;
        };

     label07:
        $l6 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: long readSInt64()>();

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r2);

        $z3 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z3 == 0 goto label08;

        return;

     label08:
        i21 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i7 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i8 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i7 == $i8 goto label07;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i21;

        return;

     label09:
        i22 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        i23 = $i2 + i22;

     label10:
        $i3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i3 >= i23 goto label05;

        goto label13;

     label11:
        $r3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        r7 = (java.lang.Throwable) $r3;

        throw r7;

     label12:
        $r4 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        r8 = (java.lang.Throwable) $r4;

        throw r8;

     label13:
        $l4 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: long readVarint64()>();

        $l5 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: long decodeZigZag64(long)>($l4);

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r1);

        goto label10;
    }

    public void readStringList(java.util.List) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        java.util.List r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        r1 := @parameter0: java.util.List;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void readStringListInternal(java.util.List,boolean)>(r1, 0);

        return;
    }

    public void readStringListInternal(java.util.List, boolean) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        boolean $z0, $z2, z3, $z4;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString $r1;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r2;
        java.util.List r3;
        java.lang.String $r4;
        androidx.test.espresso.remote.internal.deps.protobuf.LazyStringList r5;
        java.lang.Throwable r6;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        r3 := @parameter0: java.util.List;

        z3 := @parameter1: boolean;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagWireType(int)>($i1);

        if $i2 == 2 goto label1;

        $r2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        r6 = (java.lang.Throwable) $r2;

        throw r6;

     label1:
        $z0 = r3 instanceof androidx.test.espresso.remote.internal.deps.protobuf.LazyStringList;

        if $z0 != 0 goto label4;

     label2:
        $r4 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: java.lang.String readStringInternal(boolean)>(z3);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        $z4 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z4 == 0 goto label3;

        return;

     label3:
        i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i3 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i3 == $i4 goto label2;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i0;

        return;

     label4:
        if z3 != 0 goto label2;

        r5 = (androidx.test.espresso.remote.internal.deps.protobuf.LazyStringList) r3;

     label5:
        $r1 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: androidx.test.espresso.remote.internal.deps.protobuf.ByteString readBytes()>();

        interfaceinvoke r5.<androidx.test.espresso.remote.internal.deps.protobuf.LazyStringList: void add(androidx.test.espresso.remote.internal.deps.protobuf.ByteString)>($r1);

        $z2 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z2 == 0 goto label6;

        return;

     label6:
        i7 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i5 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i6 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i5 == $i6 goto label5;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i7;

        return;
    }

    public void readStringListRequireUtf8(java.util.List) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        java.util.List r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        r1 := @parameter0: java.util.List;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void readStringListInternal(java.util.List,boolean)>(r1, 1);

        return;
    }

    public void readUInt32List(java.util.List) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        boolean $z0, $z3, $z4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18, i19, i20, i21;
        java.lang.Integer $r1, $r2;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r3, $r4;
        java.util.List r5;
        androidx.test.espresso.remote.internal.deps.protobuf.IntArrayList r6;
        java.lang.Throwable r7, r8;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        r5 := @parameter0: java.util.List;

        $z0 = r5 instanceof androidx.test.espresso.remote.internal.deps.protobuf.IntArrayList;

        if $z0 == 0 goto label06;

        r6 = (androidx.test.espresso.remote.internal.deps.protobuf.IntArrayList) r5;

        $i8 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i9 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagWireType(int)>($i8);

        lookupswitch($i9)
        {
            case 0: goto label01;
            case 2: goto label03;
            default: goto label12;
        };

     label01:
        $i13 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readUInt32()>();

        virtualinvoke r6.<androidx.test.espresso.remote.internal.deps.protobuf.IntArrayList: void addInt(int)>($i13);

        $z4 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z4 == 0 goto label02;

        return;

     label02:
        i16 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i14 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i15 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i14 == $i15 goto label01;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i16;

        return;

     label03:
        i17 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i10 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        i18 = $i10 + i17;

     label04:
        $i11 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i11 >= i18 goto label05;

        $i12 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        virtualinvoke r6.<androidx.test.espresso.remote.internal.deps.protobuf.IntArrayList: void addInt(int)>($i12);

        goto label04;

     label05:
        return;

     label06:
        $i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagWireType(int)>($i0);

        lookupswitch($i1)
        {
            case 0: goto label07;
            case 2: goto label09;
            default: goto label11;
        };

     label07:
        $i5 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readUInt32()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r2);

        $z3 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z3 == 0 goto label08;

        return;

     label08:
        i19 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i6 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i7 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i6 == $i7 goto label07;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i19;

        return;

     label09:
        i20 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        i21 = $i2 + i20;

     label10:
        $i3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i3 >= i21 goto label05;

        goto label13;

     label11:
        $r3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        r7 = (java.lang.Throwable) $r3;

        throw r7;

     label12:
        $r4 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        r8 = (java.lang.Throwable) $r4;

        throw r8;

     label13:
        $i4 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r1);

        goto label10;
    }

    public void readUInt64List(java.util.List) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        boolean $z0, $z3, $z4;
        int $i0, $i1, $i2, $i3, $i6, $i7, $i8, $i9, $i10, $i11, $i14, $i15, i16, i17, i18, i19, i20, i21;
        long $l4, $l5, $l12, $l13;
        java.lang.Long $r1, $r2;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r3, $r4;
        java.util.List r5;
        androidx.test.espresso.remote.internal.deps.protobuf.LongArrayList r6;
        java.lang.Throwable r7, r8;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        r5 := @parameter0: java.util.List;

        $z0 = r5 instanceof androidx.test.espresso.remote.internal.deps.protobuf.LongArrayList;

        if $z0 == 0 goto label06;

        r6 = (androidx.test.espresso.remote.internal.deps.protobuf.LongArrayList) r5;

        $i8 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i9 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagWireType(int)>($i8);

        lookupswitch($i9)
        {
            case 0: goto label01;
            case 2: goto label03;
            default: goto label12;
        };

     label01:
        $l13 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: long readUInt64()>();

        virtualinvoke r6.<androidx.test.espresso.remote.internal.deps.protobuf.LongArrayList: void addLong(long)>($l13);

        $z4 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z4 == 0 goto label02;

        return;

     label02:
        i16 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i14 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i15 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i14 == $i15 goto label01;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i16;

        return;

     label03:
        i17 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i10 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        i18 = $i10 + i17;

     label04:
        $i11 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i11 >= i18 goto label05;

        $l12 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: long readVarint64()>();

        virtualinvoke r6.<androidx.test.espresso.remote.internal.deps.protobuf.LongArrayList: void addLong(long)>($l12);

        goto label04;

     label05:
        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requirePosition(int)>(i18);

        return;

     label06:
        $i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagWireType(int)>($i0);

        lookupswitch($i1)
        {
            case 0: goto label07;
            case 2: goto label09;
            default: goto label11;
        };

     label07:
        $l5 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: long readUInt64()>();

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r2);

        $z3 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z3 == 0 goto label08;

        return;

     label08:
        i19 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i6 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i7 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        if $i6 == $i7 goto label07;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i19;

        return;

     label09:
        i20 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        i21 = $i2 + i20;

     label10:
        $i3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i3 >= i21 goto label13;

        $l4 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: long readVarint64()>();

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r1);

        goto label10;

     label11:
        $r3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        r7 = (java.lang.Throwable) $r3;

        throw r7;

     label12:
        $r4 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        r8 = (java.lang.Throwable) $r4;

        throw r8;

     label13:
        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requirePosition(int)>(i21);

        return;
    }

    private void requireBytes(int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        int i0, $i1, $i2, $i3;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r1;
        java.lang.Throwable r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int limit>;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i3 = $i2 - $i1;

        if i0 <= $i3 goto label2;

     label1:
        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        r2 = (java.lang.Throwable) $r1;

        throw r2;

     label2:
        return;
    }

    private void requirePosition(int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        int i0, $i1;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r1;
        java.lang.Throwable r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        if $i1 == i0 goto label1;

        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        r2 = (java.lang.Throwable) $r1;

        throw r2;

     label1:
        return;
    }

    private void requireWireType(int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        int i0, $i1, $i2;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r1;
        java.lang.Throwable r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagWireType(int)>($i1);

        if $i2 == i0 goto label1;

        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        r2 = (java.lang.Throwable) $r1;

        throw r2;

     label1:
        return;
    }

    private void skipBytes(int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        int i0, $i1, $i2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requireBytes(int)>(i0);

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i2 = $i1 + i0;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = $i2;

        return;
    }

    private void skipGroup() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r1;
        boolean $z0;
        java.lang.Throwable r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int endGroupTag>;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagFieldNumber(int)>($i1);

        $i3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int makeTag(int,int)>($i2, 4);

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int endGroupTag> = $i3;

     label1:
        $i4 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int getFieldNumber()>();

        if $i4 == 2147483647 goto label2;

        $z0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean skipField()>();

        if $z0 != 0 goto label1;

     label2:
        $i6 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i5 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int endGroupTag>;

        if $i6 == $i5 goto label3;

        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException parseFailure()>();

        r2 = (java.lang.Throwable) $r1;

        throw r2;

     label3:
        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int endGroupTag> = i0;

        return;
    }

    private void skipVarint() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        byte[] r1;
        int i0, $i1, $i2, $i3, i5, i6;
        byte $b4;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int limit>;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i3 = $i2 - $i1;

        if $i3 < 10 goto label3;

        r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: byte[] buffer>;

        i5 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        i6 = 0;

     label1:
        if i6 >= 10 goto label3;

        i0 = i5 + 1;

        $b4 = r1[i5];

        if $b4 < 0 goto label2;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos> = i0;

        return;

     label2:
        i6 = i6 + 1;

        i5 = i0;

        goto label1;

     label3:
        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void skipVarintSlowPath()>();

        return;
    }

    private void skipVarintSlowPath() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r1;
        byte $b0;
        int i1;
        java.lang.Throwable r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        i1 = 0;

     label1:
        if i1 >= 10 goto label2;

        $b0 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: byte readByte()>();

        if $b0 < 0 goto label3;

        return;

     label2:
        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException malformedVarint()>();

        r2 = (java.lang.Throwable) $r1;

        throw r2;

     label3:
        i1 = i1 + 1;

        goto label1;
    }

    private void verifyPackedFixed32Length(int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        int i0, $i1;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r1;
        java.lang.Throwable r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requireBytes(int)>(i0);

        $i1 = i0 & 3;

        if $i1 == 0 goto label1;

        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException parseFailure()>();

        r2 = (java.lang.Throwable) $r1;

        throw r2;

     label1:
        return;
    }

    private void verifyPackedFixed64Length(int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        int i0, $i1;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r1;
        java.lang.Throwable r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requireBytes(int)>(i0);

        $i1 = i0 & 7;

        if $i1 == 0 goto label1;

        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException parseFailure()>();

        r2 = (java.lang.Throwable) $r1;

        throw r2;

     label1:
        return;
    }

    private boolean isAtEnd()
    {
        int $i0, $i1;
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        boolean z0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int pos>;

        $i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int limit>;

        if $i1 != $i0 goto label2;

        z0 = 1;

     label1:
        return z0;

     label2:
        z0 = 0;

        goto label1;
    }

    public boolean readBool() throws java.io.IOException
    {
        int $i0;
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        boolean z0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void requireWireType(int)>(0);

        $i0 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        if $i0 == 0 goto label2;

        z0 = 1;

     label1:
        return z0;

     label2:
        z0 = 0;

        goto label1;
    }

    public boolean skipField() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r1;
        java.lang.Throwable r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader;

        $z0 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: boolean isAtEnd()>();

        if $z0 != 0 goto label1;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int endGroupTag>;

        if $i1 != $i0 goto label2;

     label1:
        return 0;

     label2:
        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int tag>;

        $i3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagWireType(int)>($i2);

        lookupswitch($i3)
        {
            case 0: goto label8;
            case 1: goto label7;
            case 2: goto label6;
            case 3: goto label5;
            case 5: goto label4;
            default: goto label3;
        };

     label3:
        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        r2 = (java.lang.Throwable) $r1;

        throw r2;

     label4:
        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void skipBytes(int)>(4);

        return 1;

     label5:
        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void skipGroup()>();

        return 1;

     label6:
        $i4 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: int readVarint32()>();

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void skipBytes(int)>($i4);

        return 1;

     label7:
        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void skipBytes(int)>(8);

        return 1;

     label8:
        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.BinaryReader$SafeHeapReader: void skipVarint()>();

        return 1;
    }

