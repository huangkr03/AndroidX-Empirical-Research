androidx.compose.frames.ImmutableSetImpl
<androidx.compose.frames.ImmutableSetImpl: java.util.Set set>
<androidx.compose.frames.ImmutableSetImpl: java.util.Set ImmutableSetImpl$MutableSet$delegate>
    public void <init>(java.util.Set)
    {
        androidx.compose.frames.ImmutableSetImpl r0;
        java.util.Set r1;

        r0 := @this: androidx.compose.frames.ImmutableSetImpl;

        r1 := @parameter0: java.util.Set;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "set");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.frames.ImmutableSetImpl: java.util.Set set> = r1;

        r0.<androidx.compose.frames.ImmutableSetImpl: java.util.Set ImmutableSetImpl$MutableSet$delegate> = r1;

        return;
    }

    public boolean contains(java.lang.Object)
    {
        androidx.compose.frames.ImmutableSetImpl r0;
        java.lang.Object r1;
        java.util.Set $r2;
        boolean $z0;

        r0 := @this: androidx.compose.frames.ImmutableSetImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.compose.frames.ImmutableSetImpl: java.util.Set ImmutableSetImpl$MutableSet$delegate>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean containsAll(java.util.Collection)
    {
        androidx.compose.frames.ImmutableSetImpl r0;
        java.util.Collection r1;
        java.util.Set $r2;
        boolean $z0;

        r0 := @this: androidx.compose.frames.ImmutableSetImpl;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        $r2 = r0.<androidx.compose.frames.ImmutableSetImpl: java.util.Set ImmutableSetImpl$MutableSet$delegate>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean containsAll(java.util.Collection)>(r1);

        return $z0;
    }

    public boolean isEmpty()
    {
        androidx.compose.frames.ImmutableSetImpl r0;
        java.util.Set $r1;
        boolean $z0;

        r0 := @this: androidx.compose.frames.ImmutableSetImpl;

        $r1 = r0.<androidx.compose.frames.ImmutableSetImpl: java.util.Set ImmutableSetImpl$MutableSet$delegate>;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();

        return $z0;
    }

    public int getSize()
    {
        androidx.compose.frames.ImmutableSetImpl r0;
        java.util.Set $r1;
        int $i0;

        r0 := @this: androidx.compose.frames.ImmutableSetImpl;

        $r1 = r0.<androidx.compose.frames.ImmutableSetImpl: java.util.Set ImmutableSetImpl$MutableSet$delegate>;

        $i0 = interfaceinvoke $r1.<java.util.Set: int size()>();

        return $i0;
    }

    public boolean add(java.lang.Object)
    {
        androidx.compose.frames.ImmutableSetImpl r0;
        java.lang.Object r1;

        r0 := @this: androidx.compose.frames.ImmutableSetImpl;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <androidx.compose.frames.FrameContainersKt: java.lang.Void access$error()>();

        throw null;
    }

    public boolean addAll(java.util.Collection)
    {
        androidx.compose.frames.ImmutableSetImpl r0;
        java.util.Collection r1;

        r0 := @this: androidx.compose.frames.ImmutableSetImpl;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        staticinvoke <androidx.compose.frames.FrameContainersKt: java.lang.Void access$error()>();

        throw null;
    }

    public java.lang.Void clear()
    {
        androidx.compose.frames.ImmutableSetImpl r0;

        r0 := @this: androidx.compose.frames.ImmutableSetImpl;

        staticinvoke <androidx.compose.frames.FrameContainersKt: java.lang.Void access$error()>();

        throw null;
    }

    public java.util.Iterator iterator()
    {
        androidx.compose.frames.ImmutableSetImpl r0;
        java.util.Set $r1;
        java.util.Iterator $r2, $r3;

        r0 := @this: androidx.compose.frames.ImmutableSetImpl;

        $r1 = r0.<androidx.compose.frames.ImmutableSetImpl: java.util.Set set>;

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

        $r3 = staticinvoke <androidx.compose.frames.FrameContainersKt: java.util.Iterator access$immutableIterator(java.util.Iterator)>($r2);

        return $r3;
    }

    public boolean remove(java.lang.Object)
    {
        androidx.compose.frames.ImmutableSetImpl r0;
        java.lang.Object r1;

        r0 := @this: androidx.compose.frames.ImmutableSetImpl;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <androidx.compose.frames.FrameContainersKt: java.lang.Void access$error()>();

        throw null;
    }

    public boolean removeAll(java.util.Collection)
    {
        androidx.compose.frames.ImmutableSetImpl r0;
        java.util.Collection r1;

        r0 := @this: androidx.compose.frames.ImmutableSetImpl;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        staticinvoke <androidx.compose.frames.FrameContainersKt: java.lang.Void access$error()>();

        throw null;
    }

    public boolean retainAll(java.util.Collection)
    {
        androidx.compose.frames.ImmutableSetImpl r0;
        java.util.Collection r1;

        r0 := @this: androidx.compose.frames.ImmutableSetImpl;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        staticinvoke <androidx.compose.frames.FrameContainersKt: java.lang.Void access$error()>();

        throw null;
    }

    public final volatile int size()
    {
        androidx.compose.frames.ImmutableSetImpl r0;
        int $i0;

        r0 := @this: androidx.compose.frames.ImmutableSetImpl;

        $i0 = virtualinvoke r0.<androidx.compose.frames.ImmutableSetImpl: int getSize()>();

        return $i0;
    }

    public volatile void clear()
    {
        androidx.compose.frames.ImmutableSetImpl r0;

        r0 := @this: androidx.compose.frames.ImmutableSetImpl;

        virtualinvoke r0.<androidx.compose.frames.ImmutableSetImpl: java.lang.Void clear()>();

        throw null;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        androidx.compose.frames.ImmutableSetImpl r0;
        java.lang.Object[] r1, $r3;
        java.util.Collection $r2;

        r0 := @this: androidx.compose.frames.ImmutableSetImpl;

        r1 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "array");

        $r2 = (java.util.Collection) r0;

        $r3 = staticinvoke <kotlin.jvm.internal.CollectionToArray: java.lang.Object[] toArray(java.util.Collection,java.lang.Object[])>($r2, r1);

        return $r3;
    }

    public java.lang.Object[] toArray()
    {
        androidx.compose.frames.ImmutableSetImpl r0;
        java.util.Collection $r1;
        java.lang.Object[] $r2;

        r0 := @this: androidx.compose.frames.ImmutableSetImpl;

        $r1 = (java.util.Collection) r0;

        $r2 = staticinvoke <kotlin.jvm.internal.CollectionToArray: java.lang.Object[] toArray(java.util.Collection)>($r1);

        return $r2;
    }

