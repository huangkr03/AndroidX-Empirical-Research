androidx.work.impl.constraints.controllers.ConstraintController
<androidx.work.impl.constraints.controllers.ConstraintController: androidx.work.impl.constraints.trackers.ConstraintTracker tracker>
<androidx.work.impl.constraints.controllers.ConstraintController: java.util.List matchingWorkSpecs>
<androidx.work.impl.constraints.controllers.ConstraintController: java.util.List matchingWorkSpecIds>
<androidx.work.impl.constraints.controllers.ConstraintController: java.lang.Object currentValue>
<androidx.work.impl.constraints.controllers.ConstraintController: androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback callback>
    public void <init>(androidx.work.impl.constraints.trackers.ConstraintTracker)
    {
        androidx.work.impl.constraints.controllers.ConstraintController r0;
        androidx.work.impl.constraints.trackers.ConstraintTracker r1;
        java.util.ArrayList $r2, $r4;
        java.util.List $r3, $r5;

        r0 := @this: androidx.work.impl.constraints.controllers.ConstraintController;

        r1 := @parameter0: androidx.work.impl.constraints.trackers.ConstraintTracker;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "tracker");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.work.impl.constraints.controllers.ConstraintController: androidx.work.impl.constraints.trackers.ConstraintTracker tracker> = r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = (java.util.List) $r2;

        r0.<androidx.work.impl.constraints.controllers.ConstraintController: java.util.List matchingWorkSpecs> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = (java.util.List) $r4;

        r0.<androidx.work.impl.constraints.controllers.ConstraintController: java.util.List matchingWorkSpecIds> = $r5;

        return;
    }

    public final androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback getCallback()
    {
        androidx.work.impl.constraints.controllers.ConstraintController r0;
        androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback $r1;

        r0 := @this: androidx.work.impl.constraints.controllers.ConstraintController;

        $r1 = r0.<androidx.work.impl.constraints.controllers.ConstraintController: androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback callback>;

        return $r1;
    }

    public final void setCallback(androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback)
    {
        androidx.work.impl.constraints.controllers.ConstraintController r0;
        androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback r1, $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.work.impl.constraints.controllers.ConstraintController;

        r1 := @parameter0: androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback;

        $r2 = r0.<androidx.work.impl.constraints.controllers.ConstraintController: androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback callback>;

        if $r2 == r1 goto label1;

        r0.<androidx.work.impl.constraints.controllers.ConstraintController: androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback callback> = r1;

        $r3 = r0.<androidx.work.impl.constraints.controllers.ConstraintController: java.lang.Object currentValue>;

        specialinvoke r0.<androidx.work.impl.constraints.controllers.ConstraintController: void updateCallback(androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback,java.lang.Object)>(r1, $r3);

     label1:
        return;
    }

<androidx.work.impl.constraints.controllers.ConstraintController: boolean hasConstraint(androidx.work.impl.model.WorkSpec)>
<androidx.work.impl.constraints.controllers.ConstraintController: boolean isConstrained(java.lang.Object)>
    public final void replace(java.lang.Iterable)
    {
        androidx.work.impl.constraints.controllers.ConstraintController r0;
        java.lang.Iterable r1, $r20;
        java.util.Collection r2, r16, r21;
        java.util.List $r3, $r4, $r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z3, $z6;
        androidx.work.impl.constraints.ConstraintListener $r9, $r13;
        androidx.work.impl.constraints.trackers.ConstraintTracker $r10, $r14;
        java.lang.Object $r11, r18, r23;
        androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback $r12;
        java.lang.String $r15;
        java.util.Iterator r17, r22;
        androidx.work.impl.model.WorkSpec r19, r24;

        r0 := @this: androidx.work.impl.constraints.controllers.ConstraintController;

        r1 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "workSpecs");

        $r3 = r0.<androidx.work.impl.constraints.controllers.ConstraintController: java.util.List matchingWorkSpecs>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        $r4 = r0.<androidx.work.impl.constraints.controllers.ConstraintController: java.util.List matchingWorkSpecIds>;

        interfaceinvoke $r4.<java.util.List: void clear()>();

        $r5 = r0.<androidx.work.impl.constraints.controllers.ConstraintController: java.util.List matchingWorkSpecs>;

        r16 = (java.util.Collection) $r5;

        r17 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z6 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label2;

        r18 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r19 = (androidx.work.impl.model.WorkSpec) r18;

        $z3 = virtualinvoke r0.<androidx.work.impl.constraints.controllers.ConstraintController: boolean hasConstraint(androidx.work.impl.model.WorkSpec)>(r19);

        if $z3 == 0 goto label1;

        interfaceinvoke r16.<java.util.Collection: boolean add(java.lang.Object)>(r18);

        goto label1;

     label2:
        $r6 = r0.<androidx.work.impl.constraints.controllers.ConstraintController: java.util.List matchingWorkSpecs>;

        $r20 = (java.lang.Iterable) $r6;

        $r7 = r0.<androidx.work.impl.constraints.controllers.ConstraintController: java.util.List matchingWorkSpecIds>;

        r21 = (java.util.Collection) $r7;

        r22 = interfaceinvoke $r20.<java.lang.Iterable: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        r23 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();

        r24 = (androidx.work.impl.model.WorkSpec) r23;

        r2 = r21;

        $r15 = r24.<androidx.work.impl.model.WorkSpec: java.lang.String id>;

        interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r15);

        goto label3;

     label4:
        $r8 = r0.<androidx.work.impl.constraints.controllers.ConstraintController: java.util.List matchingWorkSpecs>;

        $z1 = interfaceinvoke $r8.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label5;

        $r14 = r0.<androidx.work.impl.constraints.controllers.ConstraintController: androidx.work.impl.constraints.trackers.ConstraintTracker tracker>;

        $r13 = (androidx.work.impl.constraints.ConstraintListener) r0;

        virtualinvoke $r14.<androidx.work.impl.constraints.trackers.ConstraintTracker: void removeListener(androidx.work.impl.constraints.ConstraintListener)>($r13);

        goto label6;

     label5:
        $r10 = r0.<androidx.work.impl.constraints.controllers.ConstraintController: androidx.work.impl.constraints.trackers.ConstraintTracker tracker>;

        $r9 = (androidx.work.impl.constraints.ConstraintListener) r0;

        virtualinvoke $r10.<androidx.work.impl.constraints.trackers.ConstraintTracker: void addListener(androidx.work.impl.constraints.ConstraintListener)>($r9);

     label6:
        $r12 = r0.<androidx.work.impl.constraints.controllers.ConstraintController: androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback callback>;

        $r11 = r0.<androidx.work.impl.constraints.controllers.ConstraintController: java.lang.Object currentValue>;

        specialinvoke r0.<androidx.work.impl.constraints.controllers.ConstraintController: void updateCallback(androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback,java.lang.Object)>($r12, $r11);

        return;
    }

    public final void reset()
    {
        androidx.work.impl.constraints.controllers.ConstraintController r0;
        java.util.List $r1, $r3;
        java.util.Collection $r2;
        boolean $z0, $z1;
        androidx.work.impl.constraints.ConstraintListener $r4;
        androidx.work.impl.constraints.trackers.ConstraintTracker $r5;

        r0 := @this: androidx.work.impl.constraints.controllers.ConstraintController;

        $r1 = r0.<androidx.work.impl.constraints.controllers.ConstraintController: java.util.List matchingWorkSpecs>;

        $r2 = (java.util.Collection) $r1;

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 == 0 goto label3;

        $r3 = r0.<androidx.work.impl.constraints.controllers.ConstraintController: java.util.List matchingWorkSpecs>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        $r5 = r0.<androidx.work.impl.constraints.controllers.ConstraintController: androidx.work.impl.constraints.trackers.ConstraintTracker tracker>;

        $r4 = (androidx.work.impl.constraints.ConstraintListener) r0;

        virtualinvoke $r5.<androidx.work.impl.constraints.trackers.ConstraintTracker: void removeListener(androidx.work.impl.constraints.ConstraintListener)>($r4);

     label3:
        return;
    }

    public final boolean isWorkSpecConstrained(java.lang.String)
    {
        androidx.work.impl.constraints.controllers.ConstraintController r0;
        java.lang.String r1;
        java.lang.Object r2;
        boolean $z0, $z1, $z2;
        java.util.List $r3;

        r0 := @this: androidx.work.impl.constraints.controllers.ConstraintController;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "workSpecId");

        r2 = r0.<androidx.work.impl.constraints.controllers.ConstraintController: java.lang.Object currentValue>;

        if r2 == null goto label1;

        $z0 = virtualinvoke r0.<androidx.work.impl.constraints.controllers.ConstraintController: boolean isConstrained(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.work.impl.constraints.controllers.ConstraintController: java.util.List matchingWorkSpecIds>;

        $z1 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    private final void updateCallback(androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback, java.lang.Object)
    {
        androidx.work.impl.constraints.controllers.ConstraintController r0;
        androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback r1;
        java.lang.Object r2;
        java.util.List $r3, $r4, $r5;
        boolean $z0, $z1;

        r0 := @this: androidx.work.impl.constraints.controllers.ConstraintController;

        r1 := @parameter0: androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<androidx.work.impl.constraints.controllers.ConstraintController: java.util.List matchingWorkSpecs>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        if r1 != null goto label2;

     label1:
        return;

     label2:
        if r2 == null goto label3;

        $z1 = virtualinvoke r0.<androidx.work.impl.constraints.controllers.ConstraintController: boolean isConstrained(java.lang.Object)>(r2);

        if $z1 == 0 goto label4;

     label3:
        $r4 = r0.<androidx.work.impl.constraints.controllers.ConstraintController: java.util.List matchingWorkSpecs>;

        interfaceinvoke r1.<androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback: void onConstraintNotMet(java.util.List)>($r4);

        goto label5;

     label4:
        $r5 = r0.<androidx.work.impl.constraints.controllers.ConstraintController: java.util.List matchingWorkSpecs>;

        interfaceinvoke r1.<androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback: void onConstraintMet(java.util.List)>($r5);

     label5:
        return;
    }

    public void onConstraintChanged(java.lang.Object)
    {
        androidx.work.impl.constraints.controllers.ConstraintController r0;
        java.lang.Object r1, $r2;
        androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback $r3;

        r0 := @this: androidx.work.impl.constraints.controllers.ConstraintController;

        r1 := @parameter0: java.lang.Object;

        r0.<androidx.work.impl.constraints.controllers.ConstraintController: java.lang.Object currentValue> = r1;

        $r3 = r0.<androidx.work.impl.constraints.controllers.ConstraintController: androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback callback>;

        $r2 = r0.<androidx.work.impl.constraints.controllers.ConstraintController: java.lang.Object currentValue>;

        specialinvoke r0.<androidx.work.impl.constraints.controllers.ConstraintController: void updateCallback(androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback,java.lang.Object)>($r3, $r2);

        return;
    }

androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback
<androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback: void onConstraintMet(java.util.List)>
<androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback: void onConstraintNotMet(java.util.List)>
