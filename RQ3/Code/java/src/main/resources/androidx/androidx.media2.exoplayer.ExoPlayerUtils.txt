androidx.media2.exoplayer.ExoPlayerUtils
<androidx.media2.exoplayer.ExoPlayerUtils: androidx.media2.exoplayer.external.extractor.ExtractorsFactory sExtractorsFactory>
    public static androidx.media2.exoplayer.external.source.MediaSource createUnclippedMediaSource(androidx.media2.exoplayer.external.upstream.DataSource$Factory, androidx.media2.MediaItem)
    {
        androidx.media2.MediaItem r0;
        boolean $z0, $z1, $z2;
        java.lang.IllegalStateException $r1;
        androidx.media2.DataSourceCallback $r2;
        androidx.media2.exoplayer.external.source.ExtractorMediaSource$Factory $r3, $r5, $r6, $r9, $r11, $r12, $r16, $r18, $r19;
        androidx.media2.exoplayer.external.extractor.ExtractorsFactory $r4, $r10, $r17;
        android.net.Uri $r7, $r13, r25;
        androidx.media2.exoplayer.external.source.ExtractorMediaSource $r8, $r14, $r20;
        androidx.media2.UriMediaItem $r15;
        int $i0;
        androidx.media2.exoplayer.external.source.hls.HlsMediaSource$Factory $r21, $r22;
        androidx.media2.exoplayer.external.source.hls.HlsMediaSource $r23;
        androidx.media2.exoplayer.external.upstream.DataSource$Factory r24, r27;
        androidx.media2.CallbackMediaItem r26;

        r24 := @parameter0: androidx.media2.exoplayer.external.upstream.DataSource$Factory;

        r0 := @parameter1: androidx.media2.MediaItem;

        $z0 = r0 instanceof androidx.media2.UriMediaItem;

        if $z0 == 0 goto label2;

        $r15 = (androidx.media2.UriMediaItem) r0;

        r25 = virtualinvoke $r15.<androidx.media2.UriMediaItem: android.net.Uri getUri()>();

        $i0 = staticinvoke <androidx.media2.exoplayer.external.util.Util: int inferContentType(android.net.Uri)>(r25);

        if $i0 != 2 goto label1;

        $r21 = new androidx.media2.exoplayer.external.source.hls.HlsMediaSource$Factory;

        specialinvoke $r21.<androidx.media2.exoplayer.external.source.hls.HlsMediaSource$Factory: void <init>(androidx.media2.exoplayer.external.upstream.DataSource$Factory)>(r24);

        $r22 = virtualinvoke $r21.<androidx.media2.exoplayer.external.source.hls.HlsMediaSource$Factory: androidx.media2.exoplayer.external.source.hls.HlsMediaSource$Factory setTag(java.lang.Object)>(r0);

        $r23 = virtualinvoke $r22.<androidx.media2.exoplayer.external.source.hls.HlsMediaSource$Factory: androidx.media2.exoplayer.external.source.hls.HlsMediaSource createMediaSource(android.net.Uri)>(r25);

        return $r23;

     label1:
        $r16 = new androidx.media2.exoplayer.external.source.ExtractorMediaSource$Factory;

        specialinvoke $r16.<androidx.media2.exoplayer.external.source.ExtractorMediaSource$Factory: void <init>(androidx.media2.exoplayer.external.upstream.DataSource$Factory)>(r24);

        $r17 = <androidx.media2.exoplayer.ExoPlayerUtils: androidx.media2.exoplayer.external.extractor.ExtractorsFactory sExtractorsFactory>;

        $r18 = virtualinvoke $r16.<androidx.media2.exoplayer.external.source.ExtractorMediaSource$Factory: androidx.media2.exoplayer.external.source.ExtractorMediaSource$Factory setExtractorsFactory(androidx.media2.exoplayer.external.extractor.ExtractorsFactory)>($r17);

        $r19 = virtualinvoke $r18.<androidx.media2.exoplayer.external.source.ExtractorMediaSource$Factory: androidx.media2.exoplayer.external.source.ExtractorMediaSource$Factory setTag(java.lang.Object)>(r0);

        $r20 = virtualinvoke $r19.<androidx.media2.exoplayer.external.source.ExtractorMediaSource$Factory: androidx.media2.exoplayer.external.source.ExtractorMediaSource createMediaSource(android.net.Uri)>(r25);

        return $r20;

     label2:
        $z1 = r0 instanceof androidx.media2.FileMediaItem;

        if $z1 == 0 goto label3;

        $r9 = new androidx.media2.exoplayer.external.source.ExtractorMediaSource$Factory;

        specialinvoke $r9.<androidx.media2.exoplayer.external.source.ExtractorMediaSource$Factory: void <init>(androidx.media2.exoplayer.external.upstream.DataSource$Factory)>(r24);

        $r10 = <androidx.media2.exoplayer.ExoPlayerUtils: androidx.media2.exoplayer.external.extractor.ExtractorsFactory sExtractorsFactory>;

        $r11 = virtualinvoke $r9.<androidx.media2.exoplayer.external.source.ExtractorMediaSource$Factory: androidx.media2.exoplayer.external.source.ExtractorMediaSource$Factory setExtractorsFactory(androidx.media2.exoplayer.external.extractor.ExtractorsFactory)>($r10);

        $r12 = virtualinvoke $r11.<androidx.media2.exoplayer.external.source.ExtractorMediaSource$Factory: androidx.media2.exoplayer.external.source.ExtractorMediaSource$Factory setTag(java.lang.Object)>(r0);

        $r13 = <android.net.Uri: android.net.Uri EMPTY>;

        $r14 = virtualinvoke $r12.<androidx.media2.exoplayer.external.source.ExtractorMediaSource$Factory: androidx.media2.exoplayer.external.source.ExtractorMediaSource createMediaSource(android.net.Uri)>($r13);

        return $r14;

     label3:
        $z2 = r0 instanceof androidx.media2.CallbackMediaItem;

        if $z2 == 0 goto label4;

        r26 = (androidx.media2.CallbackMediaItem) r0;

        $r2 = virtualinvoke r26.<androidx.media2.CallbackMediaItem: androidx.media2.DataSourceCallback getDataSourceCallback()>();

        r27 = staticinvoke <androidx.media2.exoplayer.DataSourceCallbackDataSource: androidx.media2.exoplayer.external.upstream.DataSource$Factory getFactory(androidx.media2.DataSourceCallback)>($r2);

        $r3 = new androidx.media2.exoplayer.external.source.ExtractorMediaSource$Factory;

        specialinvoke $r3.<androidx.media2.exoplayer.external.source.ExtractorMediaSource$Factory: void <init>(androidx.media2.exoplayer.external.upstream.DataSource$Factory)>(r27);

        $r4 = <androidx.media2.exoplayer.ExoPlayerUtils: androidx.media2.exoplayer.external.extractor.ExtractorsFactory sExtractorsFactory>;

        $r5 = virtualinvoke $r3.<androidx.media2.exoplayer.external.source.ExtractorMediaSource$Factory: androidx.media2.exoplayer.external.source.ExtractorMediaSource$Factory setExtractorsFactory(androidx.media2.exoplayer.external.extractor.ExtractorsFactory)>($r4);

        $r6 = virtualinvoke $r5.<androidx.media2.exoplayer.external.source.ExtractorMediaSource$Factory: androidx.media2.exoplayer.external.source.ExtractorMediaSource$Factory setTag(java.lang.Object)>(r0);

        $r7 = <android.net.Uri: android.net.Uri EMPTY>;

        $r8 = virtualinvoke $r6.<androidx.media2.exoplayer.external.source.ExtractorMediaSource$Factory: androidx.media2.exoplayer.external.source.ExtractorMediaSource createMediaSource(android.net.Uri)>($r7);

        return $r8;

     label4:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();

        throw $r1;
    }

    public static androidx.media2.exoplayer.external.audio.AudioAttributes getAudioAttributes(androidx.media.AudioAttributesCompat)
    {
        androidx.media.AudioAttributesCompat r0;
        androidx.media2.exoplayer.external.audio.AudioAttributes$Builder $r1, $r2, $r3, $r4;
        int $i0, $i1, $i2;
        androidx.media2.exoplayer.external.audio.AudioAttributes $r5;

        r0 := @parameter0: androidx.media.AudioAttributesCompat;

        $r1 = new androidx.media2.exoplayer.external.audio.AudioAttributes$Builder;

        specialinvoke $r1.<androidx.media2.exoplayer.external.audio.AudioAttributes$Builder: void <init>()>();

        $i0 = virtualinvoke r0.<androidx.media.AudioAttributesCompat: int getContentType()>();

        $r2 = virtualinvoke $r1.<androidx.media2.exoplayer.external.audio.AudioAttributes$Builder: androidx.media2.exoplayer.external.audio.AudioAttributes$Builder setContentType(int)>($i0);

        $i1 = virtualinvoke r0.<androidx.media.AudioAttributesCompat: int getFlags()>();

        $r3 = virtualinvoke $r2.<androidx.media2.exoplayer.external.audio.AudioAttributes$Builder: androidx.media2.exoplayer.external.audio.AudioAttributes$Builder setFlags(int)>($i1);

        $i2 = virtualinvoke r0.<androidx.media.AudioAttributesCompat: int getUsage()>();

        $r4 = virtualinvoke $r3.<androidx.media2.exoplayer.external.audio.AudioAttributes$Builder: androidx.media2.exoplayer.external.audio.AudioAttributes$Builder setUsage(int)>($i2);

        $r5 = virtualinvoke $r4.<androidx.media2.exoplayer.external.audio.AudioAttributes$Builder: androidx.media2.exoplayer.external.audio.AudioAttributes build()>();

        return $r5;
    }

    public static androidx.media.AudioAttributesCompat getAudioAttributesCompat(androidx.media2.exoplayer.external.audio.AudioAttributes)
    {
        androidx.media2.exoplayer.external.audio.AudioAttributes r0;
        androidx.media.AudioAttributesCompat$Builder $r1, $r2, $r3, $r4;
        int $i0, $i1, $i2;
        androidx.media.AudioAttributesCompat $r5;

        r0 := @parameter0: androidx.media2.exoplayer.external.audio.AudioAttributes;

        $r1 = new androidx.media.AudioAttributesCompat$Builder;

        specialinvoke $r1.<androidx.media.AudioAttributesCompat$Builder: void <init>()>();

        $i0 = r0.<androidx.media2.exoplayer.external.audio.AudioAttributes: int contentType>;

        $r2 = virtualinvoke $r1.<androidx.media.AudioAttributesCompat$Builder: androidx.media.AudioAttributesCompat$Builder setContentType(int)>($i0);

        $i1 = r0.<androidx.media2.exoplayer.external.audio.AudioAttributes: int flags>;

        $r3 = virtualinvoke $r2.<androidx.media.AudioAttributesCompat$Builder: androidx.media.AudioAttributesCompat$Builder setFlags(int)>($i1);

        $i2 = r0.<androidx.media2.exoplayer.external.audio.AudioAttributes: int usage>;

        $r4 = virtualinvoke $r3.<androidx.media.AudioAttributesCompat$Builder: androidx.media.AudioAttributesCompat$Builder setUsage(int)>($i2);

        $r5 = virtualinvoke $r4.<androidx.media.AudioAttributesCompat$Builder: androidx.media.AudioAttributesCompat build()>();

        return $r5;
    }

    public static androidx.media2.exoplayer.external.PlaybackParameters getPlaybackParameters(androidx.media2.PlaybackParams)
    {
        androidx.media2.PlaybackParams r0;
        java.lang.Float r1, r2;
        float $f0, $f2, $f3;
        androidx.media2.exoplayer.external.PlaybackParameters $r3;

        r0 := @parameter0: androidx.media2.PlaybackParams;

        r1 = virtualinvoke r0.<androidx.media2.PlaybackParams: java.lang.Float getSpeed()>();

        r2 = virtualinvoke r0.<androidx.media2.PlaybackParams: java.lang.Float getPitch()>();

        $r3 = new androidx.media2.exoplayer.external.PlaybackParameters;

        if r1 == null goto label1;

        $f0 = virtualinvoke r1.<java.lang.Float: float floatValue()>();

        $f2 = $f0;

        goto label2;

     label1:
        $f2 = 1.0F;

     label2:
        if r2 == null goto label3;

        $f3 = virtualinvoke r2.<java.lang.Float: float floatValue()>();

        goto label4;

     label3:
        $f3 = 1.0F;

     label4:
        specialinvoke $r3.<androidx.media2.exoplayer.external.PlaybackParameters: void <init>(float,float)>($f2, $f3);

        return $r3;
    }

    public static androidx.media2.exoplayer.external.SeekParameters getSeekParameters(int)
    {
        int i0;
        androidx.media2.exoplayer.external.SeekParameters $r0, $r1, $r2, $r3;
        java.lang.IllegalArgumentException $r4;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label4;
            case 1: goto label3;
            case 2: goto label2;
            case 3: goto label1;
            default: goto label5;
        };

     label1:
        $r0 = <androidx.media2.exoplayer.external.SeekParameters: androidx.media2.exoplayer.external.SeekParameters EXACT>;

        return $r0;

     label2:
        $r1 = <androidx.media2.exoplayer.external.SeekParameters: androidx.media2.exoplayer.external.SeekParameters CLOSEST_SYNC>;

        return $r1;

     label3:
        $r2 = <androidx.media2.exoplayer.external.SeekParameters: androidx.media2.exoplayer.external.SeekParameters NEXT_SYNC>;

        return $r2;

     label4:
        $r3 = <androidx.media2.exoplayer.external.SeekParameters: androidx.media2.exoplayer.external.SeekParameters PREVIOUS_SYNC>;

        return $r3;

     label5:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;
    }

    public static int getError(androidx.media2.exoplayer.external.ExoPlaybackException)
    {
        androidx.media2.exoplayer.external.ExoPlaybackException r0;
        java.io.IOException r1;
        int $i0;
        boolean $z0, $z1, $z2;
        java.lang.Throwable $r2;

        r0 := @parameter0: androidx.media2.exoplayer.external.ExoPlaybackException;

        $i0 = r0.<androidx.media2.exoplayer.external.ExoPlaybackException: int type>;

        if $i0 != 0 goto label3;

        r1 = virtualinvoke r0.<androidx.media2.exoplayer.external.ExoPlaybackException: java.io.IOException getSourceException()>();

        $z0 = r1 instanceof androidx.media2.exoplayer.external.ParserException;

        if $z0 == 0 goto label1;

        return -1007;

     label1:
        $z1 = r1 instanceof androidx.media2.exoplayer.external.upstream.HttpDataSource$HttpDataSourceException;

        if $z1 == 0 goto label2;

        $r2 = virtualinvoke r1.<java.io.IOException: java.lang.Throwable getCause()>();

        $z2 = $r2 instanceof java.net.SocketTimeoutException;

        if $z2 == 0 goto label2;

        return -110;

     label2:
        return -1004;

     label3:
        return 1;
    }

    public static int getExoPlayerTrackType(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label5;
            case 1: goto label2;
            case 2: goto label1;
            case 3: goto label5;
            case 4: goto label3;
            case 5: goto label4;
            default: goto label5;
        };

     label1:
        return 1;

     label2:
        return 2;

     label3:
        return 3;

     label4:
        return 4;

     label5:
        return -1;
    }

    public static int getTrackType(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case -1: goto label5;
            case 0: goto label5;
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            case 6: goto label5;
            default: goto label5;
        };

     label1:
        return 2;

     label2:
        return 1;

     label3:
        return 4;

     label4:
        return 5;

     label5:
        return 0;
    }

    public static android.media.MediaFormat getMediaFormat(androidx.media2.exoplayer.external.Format)
    {
        androidx.media2.exoplayer.external.Format r0;
        android.media.MediaFormat r1, $r3;
        java.lang.String r2, $r4, $r5, $r6, $r7, $r15, $r16;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7;
        float $f0;
        androidx.media2.exoplayer.external.video.ColorInfo $r14;
        byte $b9, $b10, $b11;

        r0 := @parameter0: androidx.media2.exoplayer.external.Format;

        $r3 = new android.media.MediaFormat;

        specialinvoke $r3.<android.media.MediaFormat: void <init>()>();

        r1 = $r3;

        r2 = r0.<androidx.media2.exoplayer.external.Format: java.lang.String sampleMimeType>;

        virtualinvoke r1.<android.media.MediaFormat: void setString(java.lang.String,java.lang.String)>("mime", r2);

        i0 = staticinvoke <androidx.media2.exoplayer.external.util.MimeTypes: int getTrackType(java.lang.String)>(r2);

        if i0 != 1 goto label01;

        $i7 = r0.<androidx.media2.exoplayer.external.Format: int channelCount>;

        virtualinvoke r1.<android.media.MediaFormat: void setInteger(java.lang.String,int)>("channel-count", $i7);

        $i8 = r0.<androidx.media2.exoplayer.external.Format: int sampleRate>;

        virtualinvoke r1.<android.media.MediaFormat: void setInteger(java.lang.String,int)>("sample-rate", $i8);

        $r15 = r0.<androidx.media2.exoplayer.external.Format: java.lang.String language>;

        if $r15 == null goto label18;

        $r16 = r0.<androidx.media2.exoplayer.external.Format: java.lang.String language>;

        virtualinvoke r1.<android.media.MediaFormat: void setString(java.lang.String,java.lang.String)>("language", $r16);

        goto label18;

     label01:
        if i0 != 2 goto label02;

        $i4 = r0.<androidx.media2.exoplayer.external.Format: int width>;

        staticinvoke <androidx.media2.exoplayer.external.mediacodec.MediaFormatUtil: void maybeSetInteger(android.media.MediaFormat,java.lang.String,int)>(r1, "width", $i4);

        $i5 = r0.<androidx.media2.exoplayer.external.Format: int height>;

        staticinvoke <androidx.media2.exoplayer.external.mediacodec.MediaFormatUtil: void maybeSetInteger(android.media.MediaFormat,java.lang.String,int)>(r1, "height", $i5);

        $f0 = r0.<androidx.media2.exoplayer.external.Format: float frameRate>;

        staticinvoke <androidx.media2.exoplayer.external.mediacodec.MediaFormatUtil: void maybeSetFloat(android.media.MediaFormat,java.lang.String,float)>(r1, "frame-rate", $f0);

        $i6 = r0.<androidx.media2.exoplayer.external.Format: int rotationDegrees>;

        staticinvoke <androidx.media2.exoplayer.external.mediacodec.MediaFormatUtil: void maybeSetInteger(android.media.MediaFormat,java.lang.String,int)>(r1, "rotation-degrees", $i6);

        $r14 = r0.<androidx.media2.exoplayer.external.Format: androidx.media2.exoplayer.external.video.ColorInfo colorInfo>;

        staticinvoke <androidx.media2.exoplayer.external.mediacodec.MediaFormatUtil: void maybeSetColorInfo(android.media.MediaFormat,androidx.media2.exoplayer.external.video.ColorInfo)>(r1, $r14);

        goto label18;

     label02:
        if i0 != 3 goto label18;

        $i1 = r0.<androidx.media2.exoplayer.external.Format: int selectionFlags>;

        if $i1 != 4 goto label03;

        $z5 = 1;

        goto label04;

     label03:
        $z5 = 0;

     label04:
        z0 = $z5;

        $i2 = r0.<androidx.media2.exoplayer.external.Format: int selectionFlags>;

        if $i2 != 1 goto label05;

        $z6 = 1;

        goto label06;

     label05:
        $z6 = 0;

     label06:
        z1 = $z6;

        $i3 = r0.<androidx.media2.exoplayer.external.Format: int selectionFlags>;

        if $i3 != 2 goto label07;

        $z7 = 1;

        goto label08;

     label07:
        $z7 = 0;

     label08:
        z2 = $z7;

        if z0 == 0 goto label09;

        $b9 = 1;

        goto label10;

     label09:
        $b9 = 0;

     label10:
        virtualinvoke r1.<android.media.MediaFormat: void setInteger(java.lang.String,int)>("is-autoselect", $b9);

        if z1 == 0 goto label11;

        $b10 = 1;

        goto label12;

     label11:
        $b10 = 0;

     label12:
        virtualinvoke r1.<android.media.MediaFormat: void setInteger(java.lang.String,int)>("is-default", $b10);

        if z2 == 0 goto label13;

        $b11 = 1;

        goto label14;

     label13:
        $b11 = 0;

     label14:
        virtualinvoke r1.<android.media.MediaFormat: void setInteger(java.lang.String,int)>("is-forced-subtitle", $b11);

        $r4 = r0.<androidx.media2.exoplayer.external.Format: java.lang.String language>;

        if $r4 != null goto label15;

        virtualinvoke r1.<android.media.MediaFormat: void setString(java.lang.String,java.lang.String)>("language", "und");

        goto label16;

     label15:
        $r5 = r0.<androidx.media2.exoplayer.external.Format: java.lang.String language>;

        virtualinvoke r1.<android.media.MediaFormat: void setString(java.lang.String,java.lang.String)>("language", $r5);

     label16:
        $r6 = "application/cea-608";

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z3 == 0 goto label17;

        virtualinvoke r1.<android.media.MediaFormat: void setString(java.lang.String,java.lang.String)>("mime", "text/cea-608");

        goto label18;

     label17:
        $r7 = "application/cea-708";

        $z4 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z4 == 0 goto label18;

        virtualinvoke r1.<android.media.MediaFormat: void setString(java.lang.String,java.lang.String)>("mime", "text/cea-708");

     label18:
        return r1;
    }

    private void <init>()
    {
        androidx.media2.exoplayer.ExoPlayerUtils r0;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        androidx.media2.exoplayer.external.extractor.DefaultExtractorsFactory $r0, $r1;

        $r0 = new androidx.media2.exoplayer.external.extractor.DefaultExtractorsFactory;

        specialinvoke $r0.<androidx.media2.exoplayer.external.extractor.DefaultExtractorsFactory: void <init>()>();

        $r1 = virtualinvoke $r0.<androidx.media2.exoplayer.external.extractor.DefaultExtractorsFactory: androidx.media2.exoplayer.external.extractor.DefaultExtractorsFactory setAdtsExtractorFlags(int)>(1);

        <androidx.media2.exoplayer.ExoPlayerUtils: androidx.media2.exoplayer.external.extractor.ExtractorsFactory sExtractorsFactory> = $r1;

        return;
    }

