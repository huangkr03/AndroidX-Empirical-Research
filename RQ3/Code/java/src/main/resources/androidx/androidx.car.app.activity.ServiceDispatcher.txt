androidx.car.app.activity.ServiceDispatcher
<androidx.car.app.activity.ServiceDispatcher: androidx.car.app.activity.ErrorHandler mErrorHandler>
<androidx.car.app.activity.ServiceDispatcher: androidx.car.app.activity.ServiceDispatcher$OnBindingListener mOnBindingListener>
    public void <init>(androidx.car.app.activity.ErrorHandler, androidx.car.app.activity.ServiceDispatcher$OnBindingListener)
    {
        androidx.car.app.activity.ServiceDispatcher r0;
        androidx.car.app.activity.ErrorHandler r1;
        androidx.car.app.activity.ServiceDispatcher$OnBindingListener r2;

        r0 := @this: androidx.car.app.activity.ServiceDispatcher;

        r1 := @parameter0: androidx.car.app.activity.ErrorHandler;

        r2 := @parameter1: androidx.car.app.activity.ServiceDispatcher$OnBindingListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.car.app.activity.ServiceDispatcher: androidx.car.app.activity.ErrorHandler mErrorHandler> = r1;

        r0.<androidx.car.app.activity.ServiceDispatcher: androidx.car.app.activity.ServiceDispatcher$OnBindingListener mOnBindingListener> = r2;

        return;
    }

    public void setOnBindingListener(androidx.car.app.activity.ServiceDispatcher$OnBindingListener)
    {
        androidx.car.app.activity.ServiceDispatcher r0;
        androidx.car.app.activity.ServiceDispatcher$OnBindingListener r1;

        r0 := @this: androidx.car.app.activity.ServiceDispatcher;

        r1 := @parameter0: androidx.car.app.activity.ServiceDispatcher$OnBindingListener;

        r0.<androidx.car.app.activity.ServiceDispatcher: androidx.car.app.activity.ServiceDispatcher$OnBindingListener mOnBindingListener> = r1;

        return;
    }

    public void dispatch(java.lang.String, androidx.car.app.activity.ServiceDispatcher$OneWayCall)
    {
        androidx.car.app.activity.ServiceDispatcher r0;
        java.lang.String r1;
        androidx.car.app.activity.ServiceDispatcher$OneWayCall r2;
        androidx.car.app.activity.ServiceDispatcher$ReturnCall $r3;

        r0 := @this: androidx.car.app.activity.ServiceDispatcher;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.car.app.activity.ServiceDispatcher$OneWayCall;

        $r3 = dynamicinvoke "invoke" <androidx.car.app.activity.ServiceDispatcher$ReturnCall (androidx.car.app.activity.ServiceDispatcher$OneWayCall)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.car.app.activity.ServiceDispatcher: java.lang.Void lambda$dispatch$0(androidx.car.app.activity.ServiceDispatcher$OneWayCall)>, methodtype: java.lang.Void __METHODTYPE__());

        virtualinvoke r0.<androidx.car.app.activity.ServiceDispatcher: java.lang.Object fetch(java.lang.String,java.lang.Object,androidx.car.app.activity.ServiceDispatcher$ReturnCall)>(r1, null, $r3);

        return;
    }

    public void dispatchNoFail(java.lang.String, androidx.car.app.activity.ServiceDispatcher$OneWayCall)
    {
        androidx.car.app.activity.ServiceDispatcher r0;
        java.lang.String r1;
        androidx.car.app.activity.ServiceDispatcher$OneWayCall r2;
        androidx.car.app.activity.ServiceDispatcher$ReturnCall $r3;

        r0 := @this: androidx.car.app.activity.ServiceDispatcher;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.car.app.activity.ServiceDispatcher$OneWayCall;

        $r3 = dynamicinvoke "invoke" <androidx.car.app.activity.ServiceDispatcher$ReturnCall (androidx.car.app.activity.ServiceDispatcher$OneWayCall)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.car.app.activity.ServiceDispatcher: java.lang.Void lambda$dispatchNoFail$1(androidx.car.app.activity.ServiceDispatcher$OneWayCall)>, methodtype: java.lang.Void __METHODTYPE__());

        virtualinvoke r0.<androidx.car.app.activity.ServiceDispatcher: java.lang.Object fetchNoFail(java.lang.String,java.lang.Object,androidx.car.app.activity.ServiceDispatcher$ReturnCall)>(r1, null, $r3);

        return;
    }

    public java.lang.Object fetch(java.lang.String, java.lang.Object, androidx.car.app.activity.ServiceDispatcher$ReturnCall)
    {
        androidx.car.app.activity.ServiceDispatcher r0;
        java.lang.String r1;
        java.lang.Object r2, $r5;
        androidx.car.app.activity.ServiceDispatcher$ReturnCall r3;
        androidx.car.app.activity.ServiceDispatcher$OnBindingListener $r4;
        boolean $z0;
        java.lang.Throwable $r6, $r9, $r12, $r15, r18, r19, r20, r21;
        androidx.car.app.activity.ErrorHandler$ErrorType $r7, $r10, $r13, $r16;
        androidx.car.app.activity.ErrorHandler $r8, $r11, $r14, $r17;

        r0 := @this: androidx.car.app.activity.ServiceDispatcher;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: androidx.car.app.activity.ServiceDispatcher$ReturnCall;

        $r4 = r0.<androidx.car.app.activity.ServiceDispatcher: androidx.car.app.activity.ServiceDispatcher$OnBindingListener mOnBindingListener>;

        $z0 = interfaceinvoke $r4.<androidx.car.app.activity.ServiceDispatcher$OnBindingListener: boolean isBound()>();

        if $z0 != 0 goto label1;

        return r2;

     label1:
        $r5 = interfaceinvoke r3.<androidx.car.app.activity.ServiceDispatcher$ReturnCall: java.lang.Object invoke()>();

     label2:
        return $r5;

     label3:
        $r15 := @caughtexception;

        r18 = $r15;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CarApp.Act", "Connection lost", r18);

        $r17 = r0.<androidx.car.app.activity.ServiceDispatcher: androidx.car.app.activity.ErrorHandler mErrorHandler>;

        $r16 = <androidx.car.app.activity.ErrorHandler$ErrorType: androidx.car.app.activity.ErrorHandler$ErrorType HOST_CONNECTION_LOST>;

        interfaceinvoke $r17.<androidx.car.app.activity.ErrorHandler: void onError(androidx.car.app.activity.ErrorHandler$ErrorType)>($r16);

        goto label7;

     label4:
        $r6 := @caughtexception;

        r19 = $r6;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CarApp.Act", "Remote exception (host render service)", r19);

        $r8 = r0.<androidx.car.app.activity.ServiceDispatcher: androidx.car.app.activity.ErrorHandler mErrorHandler>;

        $r7 = <androidx.car.app.activity.ErrorHandler$ErrorType: androidx.car.app.activity.ErrorHandler$ErrorType HOST_ERROR>;

        interfaceinvoke $r8.<androidx.car.app.activity.ErrorHandler: void onError(androidx.car.app.activity.ErrorHandler$ErrorType)>($r7);

        goto label7;

     label5:
        $r9 := @caughtexception;

        r20 = $r9;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CarApp.Act", "Bundler exception (protocol)", r20);

        $r11 = r0.<androidx.car.app.activity.ServiceDispatcher: androidx.car.app.activity.ErrorHandler mErrorHandler>;

        $r10 = <androidx.car.app.activity.ErrorHandler$ErrorType: androidx.car.app.activity.ErrorHandler$ErrorType CLIENT_SIDE_ERROR>;

        interfaceinvoke $r11.<androidx.car.app.activity.ErrorHandler: void onError(androidx.car.app.activity.ErrorHandler$ErrorType)>($r10);

        goto label7;

     label6:
        $r12 := @caughtexception;

        r21 = $r12;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CarApp.Act", "Runtime exception (unknown)", r21);

        $r14 = r0.<androidx.car.app.activity.ServiceDispatcher: androidx.car.app.activity.ErrorHandler mErrorHandler>;

        $r13 = <androidx.car.app.activity.ErrorHandler$ErrorType: androidx.car.app.activity.ErrorHandler$ErrorType UNKNOWN_ERROR>;

        interfaceinvoke $r14.<androidx.car.app.activity.ErrorHandler: void onError(androidx.car.app.activity.ErrorHandler$ErrorType)>($r13);

     label7:
        return r2;

        catch android.os.DeadObjectException from label1 to label2 with label3;
        catch android.os.RemoteException from label1 to label2 with label4;
        catch androidx.car.app.serialization.BundlerException from label1 to label2 with label5;
        catch java.lang.RuntimeException from label1 to label2 with label6;
    }

    public java.lang.Object fetchNoFail(java.lang.String, java.lang.Object, androidx.car.app.activity.ServiceDispatcher$ReturnCall)
    {
        androidx.car.app.activity.ServiceDispatcher r0;
        java.lang.String r1;
        java.lang.Object r2, $r5;
        androidx.car.app.activity.ServiceDispatcher$ReturnCall r3;
        androidx.car.app.activity.ServiceDispatcher$OnBindingListener $r4;
        boolean $z0;
        java.lang.Throwable $r6, $r7, $r8, r9, r10, r11;

        r0 := @this: androidx.car.app.activity.ServiceDispatcher;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: androidx.car.app.activity.ServiceDispatcher$ReturnCall;

        $r4 = r0.<androidx.car.app.activity.ServiceDispatcher: androidx.car.app.activity.ServiceDispatcher$OnBindingListener mOnBindingListener>;

        $z0 = interfaceinvoke $r4.<androidx.car.app.activity.ServiceDispatcher$OnBindingListener: boolean isBound()>();

        if $z0 != 0 goto label1;

        return r2;

     label1:
        $r5 = interfaceinvoke r3.<androidx.car.app.activity.ServiceDispatcher$ReturnCall: java.lang.Object invoke()>();

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r9 = $r6;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CarApp.Act", "Remote exception (host render service)", r9);

        goto label6;

     label4:
        $r8 := @caughtexception;

        r10 = $r8;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CarApp.Act", "Bundler exception (protocol)", r10);

        goto label6;

     label5:
        $r7 := @caughtexception;

        r11 = $r7;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CarApp.Act", "Runtime exception (unknown)", r11);

     label6:
        return r2;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch androidx.car.app.serialization.BundlerException from label1 to label2 with label4;
        catch java.lang.RuntimeException from label1 to label2 with label5;
    }

    private static java.lang.Void lambda$dispatchNoFail$1(androidx.car.app.activity.ServiceDispatcher$OneWayCall) throws android.os.RemoteException, androidx.car.app.serialization.BundlerException
    {
        androidx.car.app.activity.ServiceDispatcher$OneWayCall r0;

        r0 := @parameter0: androidx.car.app.activity.ServiceDispatcher$OneWayCall;

        interfaceinvoke r0.<androidx.car.app.activity.ServiceDispatcher$OneWayCall: void invoke()>();

        return null;
    }

    private static java.lang.Void lambda$dispatch$0(androidx.car.app.activity.ServiceDispatcher$OneWayCall) throws android.os.RemoteException, androidx.car.app.serialization.BundlerException
    {
        androidx.car.app.activity.ServiceDispatcher$OneWayCall r0;

        r0 := @parameter0: androidx.car.app.activity.ServiceDispatcher$OneWayCall;

        interfaceinvoke r0.<androidx.car.app.activity.ServiceDispatcher$OneWayCall: void invoke()>();

        return null;
    }

androidx.car.app.activity.ServiceDispatcher$OnBindingListener
<androidx.car.app.activity.ServiceDispatcher$OnBindingListener: boolean isBound()>
androidx.car.app.activity.ServiceDispatcher$OneWayCall
<androidx.car.app.activity.ServiceDispatcher$OneWayCall: void invoke()>
androidx.car.app.activity.ServiceDispatcher$ReturnCall
<androidx.car.app.activity.ServiceDispatcher$ReturnCall: java.lang.Object invoke()>
