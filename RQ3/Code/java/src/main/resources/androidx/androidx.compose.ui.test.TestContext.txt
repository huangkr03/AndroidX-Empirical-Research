androidx.compose.ui.test.TestContext
<androidx.compose.ui.test.TestContext: androidx.compose.ui.test.TestOwner testOwner>
<androidx.compose.ui.test.TestContext: java.util.Map states>
<androidx.compose.ui.test.TestContext: int $stable>
    public void <init>(androidx.compose.ui.test.TestOwner)
    {
        androidx.compose.ui.test.TestContext r0;
        androidx.compose.ui.test.TestOwner r1;
        java.util.LinkedHashMap $r2;
        java.util.Map $r3;

        r0 := @this: androidx.compose.ui.test.TestContext;

        r1 := @parameter0: androidx.compose.ui.test.TestOwner;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "testOwner");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.test.TestContext: androidx.compose.ui.test.TestOwner testOwner> = r1;

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>();

        $r3 = (java.util.Map) $r2;

        r0.<androidx.compose.ui.test.TestContext: java.util.Map states> = $r3;

        return;
    }

    public final androidx.compose.ui.test.TestOwner getTestOwner$ui_test_release()
    {
        androidx.compose.ui.test.TestContext r0;
        androidx.compose.ui.test.TestOwner $r1;

        r0 := @this: androidx.compose.ui.test.TestContext;

        $r1 = r0.<androidx.compose.ui.test.TestContext: androidx.compose.ui.test.TestOwner testOwner>;

        return $r1;
    }

    public final java.util.Map getStates$ui_test_release()
    {
        androidx.compose.ui.test.TestContext r0;
        java.util.Map $r1;

        r0 := @this: androidx.compose.ui.test.TestContext;

        $r1 = r0.<androidx.compose.ui.test.TestContext: java.util.Map states>;

        return $r1;
    }

    public final java.lang.Iterable getAllSemanticsNodes$ui_test_release(boolean, boolean)
    {
        androidx.compose.ui.test.TestContext r0;
        boolean z0, z1, $z4, $z6, $z8, $z9, z11, $z12;
        java.util.Set r1, $r13, r14;
        java.util.Iterator r2;
        java.lang.Object r3;
        androidx.compose.ui.test.TestOwner $r4;
        java.util.ArrayList $r5;
        java.util.List $r6, $r9;
        java.lang.Iterable $r7, $r16, r19;
        androidx.compose.ui.semantics.SemanticsOwner $r8;
        java.lang.IllegalStateException $r10;
        java.lang.String $r11, $r15;
        java.util.Collection $r12, $r17;
        androidx.compose.ui.node.RootForTest r18;

        r0 := @this: androidx.compose.ui.test.TestContext;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r4 = r0.<androidx.compose.ui.test.TestContext: androidx.compose.ui.test.TestOwner testOwner>;

        $r13 = interfaceinvoke $r4.<androidx.compose.ui.test.TestOwner: java.util.Set getRoots(boolean)>(z0);

        r14 = $r13;

        if z0 == 0 goto label03;

        $r12 = (java.util.Collection) r14;

        $z6 = interfaceinvoke $r12.<java.util.Collection: boolean isEmpty()>();

        if $z6 != 0 goto label01;

        $z8 = 1;

        goto label02;

     label01:
        $z8 = 0;

     label02:
        if $z8 == 0 goto label04;

     label03:
        $z9 = 1;

        goto label05;

     label04:
        $z9 = 0;

     label05:
        if $z9 != 0 goto label06;

        $r15 = "No compose hierarchies found in the app. Possible reasons include: (1) the Activity that calls setContent did not launch; (2) setContent was not called; (3) setContent was called before the ComposeTestRule ran. If setContent is called by the Activity, make sure the Activity is launched after the ComposeTestRule runs";

        $r10 = new java.lang.IllegalStateException;

        $r11 = virtualinvoke $r15.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label06:
        r1 = $r13;

        z11 = 0;

        $r16 = (java.lang.Iterable) r1;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r17 = (java.util.Collection) $r5;

        r2 = interfaceinvoke $r16.<java.lang.Iterable: java.util.Iterator iterator()>();

     label07:
        $z4 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label10;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r18 = (androidx.compose.ui.node.RootForTest) r3;

        $r8 = interfaceinvoke r18.<androidx.compose.ui.node.RootForTest: androidx.compose.ui.semantics.SemanticsOwner getSemanticsOwner()>();

        if z1 != 0 goto label08;

        $z12 = 1;

        goto label09;

     label08:
        $z12 = 0;

     label09:
        $r9 = staticinvoke <androidx.compose.ui.semantics.SemanticsOwnerKt: java.util.List getAllSemanticsNodes(androidx.compose.ui.semantics.SemanticsOwner,boolean)>($r8, $z12);

        r19 = (java.lang.Iterable) $r9;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>($r17, r19);

        goto label07;

     label10:
        $r6 = (java.util.List) $r17;

        $r7 = (java.lang.Iterable) $r6;

        return $r7;
    }

    static void <clinit>()
    {
        <androidx.compose.ui.test.TestContext: int $stable> = 8;

        return;
    }

