org.junit.runners.model.FrameworkMethod
<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>
    public void <init>(java.lang.reflect.Method)
    {
        org.junit.runners.model.FrameworkMethod $r0;
        java.lang.reflect.Method $r1;

        $r0 := @this: org.junit.runners.model.FrameworkMethod;

        $r1 := @parameter0: java.lang.reflect.Method;

        specialinvoke $r0.<org.junit.runners.model.FrameworkMember: void <init>()>();

        $r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method> = $r1;

        return;
    }

    static java.lang.reflect.Method access$000(org.junit.runners.model.FrameworkMethod)
    {
        org.junit.runners.model.FrameworkMethod $r0;
        java.lang.reflect.Method r1;

        $r0 := @parameter0: org.junit.runners.model.FrameworkMethod;

        r1 = $r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        return r1;
    }

    private java.lang.Class[] getParameterTypes()
    {
        org.junit.runners.model.FrameworkMethod $r0;
        java.lang.Class[] $r1;
        java.lang.reflect.Method $r2;

        $r0 := @this: org.junit.runners.model.FrameworkMethod;

        $r2 = $r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        $r1 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        org.junit.runners.model.FrameworkMethod $r0, $r4;
        java.lang.reflect.Method $r1, $r5;
        java.lang.Object $r2;
        java.lang.Class $r3;
        boolean $z0;

        $r0 := @this: org.junit.runners.model.FrameworkMethod;

        $r2 := @parameter0: java.lang.Object;

        $r3 = class "Lorg/junit/runners/model/FrameworkMethod;";

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isInstance(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r4 = (org.junit.runners.model.FrameworkMethod) $r2;

        $r5 = $r4.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        $r1 = $r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        $z0 = virtualinvoke $r5.<java.lang.reflect.Method: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)
    {
        org.junit.runners.model.FrameworkMethod $r0;
        java.lang.Class $r1;
        java.lang.'annotation'.Annotation $r2;
        java.lang.reflect.Method $r3;

        $r0 := @this: org.junit.runners.model.FrameworkMethod;

        $r1 := @parameter0: java.lang.Class;

        $r3 = $r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        $r2 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>($r1);

        return $r2;
    }

    public java.lang.'annotation'.Annotation[] getAnnotations()
    {
        org.junit.runners.model.FrameworkMethod $r0;
        java.lang.'annotation'.Annotation[] $r1;
        java.lang.reflect.Method $r2;

        $r0 := @this: org.junit.runners.model.FrameworkMethod;

        $r2 = $r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        $r1 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.'annotation'.Annotation[] getAnnotations()>();

        return $r1;
    }

    public java.lang.Class getDeclaringClass()
    {
        org.junit.runners.model.FrameworkMethod $r0;
        java.lang.Class $r1;
        java.lang.reflect.Method $r2;

        $r0 := @this: org.junit.runners.model.FrameworkMethod;

        $r2 = $r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        $r1 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        return $r1;
    }

    public java.lang.reflect.Method getMethod()
    {
        org.junit.runners.model.FrameworkMethod $r0;
        java.lang.reflect.Method r1;

        $r0 := @this: org.junit.runners.model.FrameworkMethod;

        r1 = $r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        return r1;
    }

    protected int getModifiers()
    {
        org.junit.runners.model.FrameworkMethod $r0;
        int $i0;
        java.lang.reflect.Method $r1;

        $r0 := @this: org.junit.runners.model.FrameworkMethod;

        $r1 = $r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        $i0 = virtualinvoke $r1.<java.lang.reflect.Method: int getModifiers()>();

        return $i0;
    }

    public java.lang.String getName()
    {
        org.junit.runners.model.FrameworkMethod $r0;
        java.lang.String $r1;
        java.lang.reflect.Method $r2;

        $r0 := @this: org.junit.runners.model.FrameworkMethod;

        $r2 = $r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        $r1 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.String getName()>();

        return $r1;
    }

    public java.lang.Class getReturnType()
    {
        org.junit.runners.model.FrameworkMethod $r0;
        java.lang.Class $r1;
        java.lang.reflect.Method $r2;

        $r0 := @this: org.junit.runners.model.FrameworkMethod;

        $r2 = $r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        $r1 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        return $r1;
    }

    public java.lang.Class getType()
    {
        org.junit.runners.model.FrameworkMethod $r0;
        java.lang.Class $r1;

        $r0 := @this: org.junit.runners.model.FrameworkMethod;

        $r1 = virtualinvoke $r0.<org.junit.runners.model.FrameworkMethod: java.lang.Class getReturnType()>();

        return $r1;
    }

    public int hashCode()
    {
        org.junit.runners.model.FrameworkMethod $r0;
        int $i0;
        java.lang.reflect.Method $r1;

        $r0 := @this: org.junit.runners.model.FrameworkMethod;

        $r1 = $r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        $i0 = virtualinvoke $r1.<java.lang.reflect.Method: int hashCode()>();

        return $i0;
    }

    public transient java.lang.Object invokeExplosively(java.lang.Object, java.lang.Object[]) throws java.lang.Throwable
    {
        org.junit.runners.model.FrameworkMethod $r0;
        java.lang.Object $r1;
        java.lang.Object[] $r2;
        org.junit.runners.model.FrameworkMethod$1 $r3;

        $r0 := @this: org.junit.runners.model.FrameworkMethod;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object[];

        $r3 = new org.junit.runners.model.FrameworkMethod$1;

        specialinvoke $r3.<org.junit.runners.model.FrameworkMethod$1: void <init>(org.junit.runners.model.FrameworkMethod,java.lang.Object,java.lang.Object[])>($r0, $r1, $r2);

        $r1 = virtualinvoke $r3.<org.junit.runners.model.FrameworkMethod$1: java.lang.Object run()>();

        return $r1;
    }

    public volatile boolean isShadowedBy(org.junit.runners.model.FrameworkMember)
    {
        org.junit.runners.model.FrameworkMethod $r0, $r2;
        boolean $z0;
        org.junit.runners.model.FrameworkMember $r1;

        $r0 := @this: org.junit.runners.model.FrameworkMethod;

        $r1 := @parameter0: org.junit.runners.model.FrameworkMember;

        $r2 = (org.junit.runners.model.FrameworkMethod) $r1;

        $z0 = virtualinvoke $r0.<org.junit.runners.model.FrameworkMethod: boolean isShadowedBy(org.junit.runners.model.FrameworkMethod)>($r2);

        return $z0;
    }

    public boolean isShadowedBy(org.junit.runners.model.FrameworkMethod)
    {
        org.junit.runners.model.FrameworkMethod $r0, $r1;
        java.lang.String $r2, $r3;
        boolean $z0;
        java.lang.Class[] $r4;
        int $i0, $i1;
        java.lang.Class $r5, $r6;

        $r0 := @this: org.junit.runners.model.FrameworkMethod;

        $r1 := @parameter0: org.junit.runners.model.FrameworkMethod;

        $r2 = virtualinvoke $r1.<org.junit.runners.model.FrameworkMethod: java.lang.String getName()>();

        $r3 = virtualinvoke $r0.<org.junit.runners.model.FrameworkMethod: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r4 = specialinvoke $r1.<org.junit.runners.model.FrameworkMethod: java.lang.Class[] getParameterTypes()>();

        $i0 = lengthof $r4;

        $r4 = specialinvoke $r0.<org.junit.runners.model.FrameworkMethod: java.lang.Class[] getParameterTypes()>();

        $i1 = lengthof $r4;

        if $i0 != $i1 goto label4;

        $i0 = 0;

     label2:
        $r4 = specialinvoke $r1.<org.junit.runners.model.FrameworkMethod: java.lang.Class[] getParameterTypes()>();

        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label3;

        $r4 = specialinvoke $r1.<org.junit.runners.model.FrameworkMethod: java.lang.Class[] getParameterTypes()>();

        $r5 = $r4[$i0];

        $r4 = specialinvoke $r0.<org.junit.runners.model.FrameworkMethod: java.lang.Class[] getParameterTypes()>();

        $r6 = $r4[$i0];

        $z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label4;

        $i0 = $i0 + 1;

        goto label2;

     label3:
        return 1;

     label4:
        return 0;
    }

    public java.lang.String toString()
    {
        org.junit.runners.model.FrameworkMethod $r0;
        java.lang.String $r1;
        java.lang.reflect.Method $r2;

        $r0 := @this: org.junit.runners.model.FrameworkMethod;

        $r2 = $r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        $r1 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.String toString()>();

        return $r1;
    }

    public void validatePublicVoid(boolean, java.util.List)
    {
        org.junit.runners.model.FrameworkMethod $r0;
        boolean $z0, $z1;
        java.util.List $r1;
        java.lang.String $r2, $r5, $r6;
        java.lang.Exception $r3;
        java.lang.reflect.Method $r4;
        int $i0, $i1;
        java.lang.StringBuilder $r7;
        java.lang.Class $r8, $r9;

        $r0 := @this: org.junit.runners.model.FrameworkMethod;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.util.List;

        $z1 = virtualinvoke $r0.<org.junit.runners.model.FrameworkMethod: boolean isStatic()>();

        if $z1 == $z0 goto label2;

        if $z0 == 0 goto label4;

        $r2 = "should";

     label1:
        $r3 = new java.lang.Exception;

        $r4 = $r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        $r5 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.String getName()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i0 = $i0 + 20;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Method ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("() ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" be static");

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>($r2);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r3);

     label2:
        $z0 = virtualinvoke $r0.<org.junit.runners.model.FrameworkMethod: boolean isPublic()>();

        if $z0 != 0 goto label3;

        $r3 = new java.lang.Exception;

        $r4 = $r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        $r2 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.String getName()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i0 = $i0 + 26;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Method ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("() should be public");

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>($r2);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r3);

     label3:
        $r4 = $r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        $r8 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r9 = <java.lang.Void: java.lang.Class TYPE>;

        if $r8 == $r9 goto label5;

        $r3 = new java.lang.Exception;

        $r4 = $r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        $r2 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.String getName()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i0 = $i0 + 24;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Method ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("() should be void");

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>($r2);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r3);

        return;

     label4:
        $r2 = "should not";

        goto label1;

     label5:
        return;
    }

    public void validatePublicVoidNoArg(boolean, java.util.List)
    {
        org.junit.runners.model.FrameworkMethod $r0;
        boolean $z0;
        java.util.List $r1;
        java.lang.StringBuilder $r2;
        java.lang.reflect.Method $r3;
        java.lang.Class[] $r4;
        int $i0;
        java.lang.Exception $r5;
        java.lang.String $r6, $r7;

        $r0 := @this: org.junit.runners.model.FrameworkMethod;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.util.List;

        virtualinvoke $r0.<org.junit.runners.model.FrameworkMethod: void validatePublicVoid(boolean,java.util.List)>($z0, $r1);

        $r3 = $r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        $r4 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i0 = lengthof $r4;

        if $i0 == 0 goto label1;

        $r5 = new java.lang.Exception;

        $r3 = $r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        $r6 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.String getName()>();

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        $i0 = virtualinvoke $r7.<java.lang.String: int length()>();

        $i0 = $i0 + 33;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Method ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should have no parameters");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.Exception: void <init>(java.lang.String)>($r6);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r5);

     label1:
        return;
    }

org.junit.runners.model.FrameworkMethod$1
<org.junit.runners.model.FrameworkMethod$1: org.junit.runners.model.FrameworkMethod this$0>
<org.junit.runners.model.FrameworkMethod$1: java.lang.Object[] val$params>
<org.junit.runners.model.FrameworkMethod$1: java.lang.Object val$target>
    void <init>(org.junit.runners.model.FrameworkMethod, java.lang.Object, java.lang.Object[])
    {
        org.junit.runners.model.FrameworkMethod$1 $r0;
        org.junit.runners.model.FrameworkMethod $r1;
        java.lang.Object $r2;
        java.lang.Object[] $r3;

        $r0 := @this: org.junit.runners.model.FrameworkMethod$1;

        $r1 := @parameter0: org.junit.runners.model.FrameworkMethod;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: java.lang.Object[];

        $r0.<org.junit.runners.model.FrameworkMethod$1: org.junit.runners.model.FrameworkMethod this$0> = $r1;

        $r0.<org.junit.runners.model.FrameworkMethod$1: java.lang.Object val$target> = $r2;

        $r0.<org.junit.runners.model.FrameworkMethod$1: java.lang.Object[] val$params> = $r3;

        specialinvoke $r0.<org.junit.internal.runners.model.ReflectiveCallable: void <init>()>();

        return;
    }

    protected java.lang.Object runReflectiveCall() throws java.lang.Throwable
    {
        org.junit.runners.model.FrameworkMethod$1 $r0;
        java.lang.Object $r1;
        java.lang.Object[] $r2;
        org.junit.runners.model.FrameworkMethod $r3;
        java.lang.reflect.Method $r4;

        $r0 := @this: org.junit.runners.model.FrameworkMethod$1;

        $r3 = $r0.<org.junit.runners.model.FrameworkMethod$1: org.junit.runners.model.FrameworkMethod this$0>;

        $r4 = staticinvoke <org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method access$000(org.junit.runners.model.FrameworkMethod)>($r3);

        $r1 = $r0.<org.junit.runners.model.FrameworkMethod$1: java.lang.Object val$target>;

        $r2 = $r0.<org.junit.runners.model.FrameworkMethod$1: java.lang.Object[] val$params>;

        $r1 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, $r2);

        return $r1;
    }

