androidx.recyclerview.widget.DividerItemDecoration
<androidx.recyclerview.widget.DividerItemDecoration: int HORIZONTAL>
<androidx.recyclerview.widget.DividerItemDecoration: int VERTICAL>
<androidx.recyclerview.widget.DividerItemDecoration: java.lang.String TAG>
<androidx.recyclerview.widget.DividerItemDecoration: int[] ATTRS>
<androidx.recyclerview.widget.DividerItemDecoration: android.graphics.drawable.Drawable mDivider>
<androidx.recyclerview.widget.DividerItemDecoration: int mOrientation>
<androidx.recyclerview.widget.DividerItemDecoration: android.graphics.Rect mBounds>
    public void <init>(android.content.Context, int)
    {
        androidx.recyclerview.widget.DividerItemDecoration r0;
        android.content.Context r1;
        int i0;
        android.content.res.TypedArray r2;
        android.graphics.Rect $r3;
        int[] $r4;
        android.graphics.drawable.Drawable $r5, $r6;

        r0 := @this: androidx.recyclerview.widget.DividerItemDecoration;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$ItemDecoration: void <init>()>();

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<androidx.recyclerview.widget.DividerItemDecoration: android.graphics.Rect mBounds> = $r3;

        $r4 = <androidx.recyclerview.widget.DividerItemDecoration: int[] ATTRS>;

        r2 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>($r4);

        $r5 = virtualinvoke r2.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        r0.<androidx.recyclerview.widget.DividerItemDecoration: android.graphics.drawable.Drawable mDivider> = $r5;

        $r6 = r0.<androidx.recyclerview.widget.DividerItemDecoration: android.graphics.drawable.Drawable mDivider>;

        if $r6 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DividerItem", "@android:attr/listDivider was not set in the theme used for this DividerItemDecoration. Please set that attribute all call setDrawable()");

     label1:
        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        virtualinvoke r0.<androidx.recyclerview.widget.DividerItemDecoration: void setOrientation(int)>(i0);

        return;
    }

    public void setOrientation(int)
    {
        androidx.recyclerview.widget.DividerItemDecoration r0;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: androidx.recyclerview.widget.DividerItemDecoration;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        if i0 == 1 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid orientation. It should be either HORIZONTAL or VERTICAL");

        throw $r1;

     label1:
        r0.<androidx.recyclerview.widget.DividerItemDecoration: int mOrientation> = i0;

        return;
    }

    public void setDrawable(android.graphics.drawable.Drawable)
    {
        androidx.recyclerview.widget.DividerItemDecoration r0;
        android.graphics.drawable.Drawable r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: androidx.recyclerview.widget.DividerItemDecoration;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Drawable cannot be null.");

        throw $r2;

     label1:
        r0.<androidx.recyclerview.widget.DividerItemDecoration: android.graphics.drawable.Drawable mDivider> = r1;

        return;
    }

    public android.graphics.drawable.Drawable getDrawable()
    {
        androidx.recyclerview.widget.DividerItemDecoration r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: androidx.recyclerview.widget.DividerItemDecoration;

        $r1 = r0.<androidx.recyclerview.widget.DividerItemDecoration: android.graphics.drawable.Drawable mDivider>;

        return $r1;
    }

    public void onDraw(android.graphics.Canvas, androidx.recyclerview.widget.RecyclerView, androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.DividerItemDecoration r0;
        android.graphics.Canvas r1;
        androidx.recyclerview.widget.RecyclerView r2;
        androidx.recyclerview.widget.RecyclerView$State r3;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r4;
        android.graphics.drawable.Drawable $r5;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.DividerItemDecoration;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView;

        r3 := @parameter2: androidx.recyclerview.widget.RecyclerView$State;

        $r4 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()>();

        if $r4 == null goto label1;

        $r5 = r0.<androidx.recyclerview.widget.DividerItemDecoration: android.graphics.drawable.Drawable mDivider>;

        if $r5 != null goto label2;

     label1:
        return;

     label2:
        $i0 = r0.<androidx.recyclerview.widget.DividerItemDecoration: int mOrientation>;

        if $i0 != 1 goto label3;

        specialinvoke r0.<androidx.recyclerview.widget.DividerItemDecoration: void drawVertical(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView)>(r1, r2);

        goto label4;

     label3:
        specialinvoke r0.<androidx.recyclerview.widget.DividerItemDecoration: void drawHorizontal(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView)>(r1, r2);

     label4:
        return;
    }

    private void drawVertical(android.graphics.Canvas, androidx.recyclerview.widget.RecyclerView)
    {
        androidx.recyclerview.widget.DividerItemDecoration r0;
        android.graphics.Canvas r1;
        androidx.recyclerview.widget.RecyclerView r2;
        int i0, i1, i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15;
        android.view.View r3;
        boolean $z0;
        android.graphics.Rect $r4, $r5;
        float $f0;
        android.graphics.drawable.Drawable $r6, $r7, $r8;

        r0 := @this: androidx.recyclerview.widget.DividerItemDecoration;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView;

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $z0 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()>();

        if $z0 == 0 goto label1;

        i13 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView: int getPaddingLeft()>();

        $i7 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView: int getWidth()>();

        $i8 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView: int getPaddingRight()>();

        i14 = $i7 - $i8;

        $i9 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView: int getPaddingTop()>();

        $i10 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView: int getHeight()>();

        $i11 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView: int getPaddingBottom()>();

        $i12 = $i10 - $i11;

        virtualinvoke r1.<android.graphics.Canvas: boolean clipRect(int,int,int,int)>(i13, $i9, i14, $i12);

        goto label2;

     label1:
        i13 = 0;

        i14 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView: int getWidth()>();

     label2:
        i0 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView: int getChildCount()>();

        i15 = 0;

     label3:
        if i15 >= i0 goto label4;

        r3 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView: android.view.View getChildAt(int)>(i15);

        $r4 = r0.<androidx.recyclerview.widget.DividerItemDecoration: android.graphics.Rect mBounds>;

        virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView: void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect)>(r3, $r4);

        $r5 = r0.<androidx.recyclerview.widget.DividerItemDecoration: android.graphics.Rect mBounds>;

        $i4 = $r5.<android.graphics.Rect: int bottom>;

        $f0 = virtualinvoke r3.<android.view.View: float getTranslationY()>();

        $i5 = staticinvoke <java.lang.Math: int round(float)>($f0);

        i1 = $i4 + $i5;

        $r6 = r0.<androidx.recyclerview.widget.DividerItemDecoration: android.graphics.drawable.Drawable mDivider>;

        $i6 = virtualinvoke $r6.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        i2 = i1 - $i6;

        $r7 = r0.<androidx.recyclerview.widget.DividerItemDecoration: android.graphics.drawable.Drawable mDivider>;

        virtualinvoke $r7.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(i13, i2, i14, i1);

        $r8 = r0.<androidx.recyclerview.widget.DividerItemDecoration: android.graphics.drawable.Drawable mDivider>;

        virtualinvoke $r8.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        i15 = i15 + 1;

        goto label3;

     label4:
        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

        return;
    }

    private void drawHorizontal(android.graphics.Canvas, androidx.recyclerview.widget.RecyclerView)
    {
        androidx.recyclerview.widget.DividerItemDecoration r0;
        android.graphics.Canvas r1;
        androidx.recyclerview.widget.RecyclerView r2;
        int i0, i1, i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15;
        android.view.View r3;
        boolean $z0;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r4;
        android.graphics.Rect $r5, $r6;
        float $f0;
        android.graphics.drawable.Drawable $r7, $r8, $r9;

        r0 := @this: androidx.recyclerview.widget.DividerItemDecoration;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView;

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $z0 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()>();

        if $z0 == 0 goto label1;

        i13 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView: int getPaddingTop()>();

        $i7 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView: int getHeight()>();

        $i8 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView: int getPaddingBottom()>();

        i14 = $i7 - $i8;

        $i9 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView: int getPaddingLeft()>();

        $i10 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView: int getWidth()>();

        $i11 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView: int getPaddingRight()>();

        $i12 = $i10 - $i11;

        virtualinvoke r1.<android.graphics.Canvas: boolean clipRect(int,int,int,int)>($i9, i13, $i12, i14);

        goto label2;

     label1:
        i13 = 0;

        i14 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView: int getHeight()>();

     label2:
        i0 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView: int getChildCount()>();

        i15 = 0;

     label3:
        if i15 >= i0 goto label4;

        r3 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView: android.view.View getChildAt(int)>(i15);

        $r4 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()>();

        $r5 = r0.<androidx.recyclerview.widget.DividerItemDecoration: android.graphics.Rect mBounds>;

        virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect)>(r3, $r5);

        $r6 = r0.<androidx.recyclerview.widget.DividerItemDecoration: android.graphics.Rect mBounds>;

        $i4 = $r6.<android.graphics.Rect: int right>;

        $f0 = virtualinvoke r3.<android.view.View: float getTranslationX()>();

        $i5 = staticinvoke <java.lang.Math: int round(float)>($f0);

        i1 = $i4 + $i5;

        $r7 = r0.<androidx.recyclerview.widget.DividerItemDecoration: android.graphics.drawable.Drawable mDivider>;

        $i6 = virtualinvoke $r7.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        i2 = i1 - $i6;

        $r8 = r0.<androidx.recyclerview.widget.DividerItemDecoration: android.graphics.drawable.Drawable mDivider>;

        virtualinvoke $r8.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(i2, i13, i1, i14);

        $r9 = r0.<androidx.recyclerview.widget.DividerItemDecoration: android.graphics.drawable.Drawable mDivider>;

        virtualinvoke $r9.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        i15 = i15 + 1;

        goto label3;

     label4:
        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

        return;
    }

    public void getItemOffsets(android.graphics.Rect, android.view.View, androidx.recyclerview.widget.RecyclerView, androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.DividerItemDecoration r0;
        android.graphics.Rect r1;
        android.view.View r2;
        androidx.recyclerview.widget.RecyclerView r3;
        androidx.recyclerview.widget.RecyclerView$State r4;
        android.graphics.drawable.Drawable $r5, $r6, $r7;
        int $i0, $i1, $i2;

        r0 := @this: androidx.recyclerview.widget.DividerItemDecoration;

        r1 := @parameter0: android.graphics.Rect;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: androidx.recyclerview.widget.RecyclerView;

        r4 := @parameter3: androidx.recyclerview.widget.RecyclerView$State;

        $r5 = r0.<androidx.recyclerview.widget.DividerItemDecoration: android.graphics.drawable.Drawable mDivider>;

        if $r5 != null goto label1;

        virtualinvoke r1.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, 0, 0);

        return;

     label1:
        $i0 = r0.<androidx.recyclerview.widget.DividerItemDecoration: int mOrientation>;

        if $i0 != 1 goto label2;

        $r7 = r0.<androidx.recyclerview.widget.DividerItemDecoration: android.graphics.drawable.Drawable mDivider>;

        $i2 = virtualinvoke $r7.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r1.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, 0, $i2);

        goto label3;

     label2:
        $r6 = r0.<androidx.recyclerview.widget.DividerItemDecoration: android.graphics.drawable.Drawable mDivider>;

        $i1 = virtualinvoke $r6.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        virtualinvoke r1.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i1, 0);

     label3:
        return;
    }

    static void <clinit>()
    {
        int[] $r0;

        $r0 = newarray (int)[1];

        $r0[0] = 16843284;

        <androidx.recyclerview.widget.DividerItemDecoration: int[] ATTRS> = $r0;

        return;
    }

