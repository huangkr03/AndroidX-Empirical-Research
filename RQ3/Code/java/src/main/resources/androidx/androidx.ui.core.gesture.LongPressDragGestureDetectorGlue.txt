androidx.ui.core.gesture.LongPressDragGestureDetectorGlue
<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue: androidx.ui.core.gesture.LongPressDragObserver longPressDragObserver>
<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue: boolean dragStarted>
<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue: boolean dragEnabled>
<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue: androidx.ui.core.gesture.DragObserver dragObserver>
<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue: kotlin.jvm.functions.Function1 onLongPress>
    public void <init>()
    {
        androidx.ui.core.gesture.LongPressDragGestureDetectorGlue r0;
        androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$dragObserver$1 $r1;
        androidx.ui.core.gesture.DragObserver $r2;
        androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$onLongPress$1 $r3;
        kotlin.jvm.functions.Function1 $r4;

        r0 := @this: androidx.ui.core.gesture.LongPressDragGestureDetectorGlue;

        specialinvoke r0.<androidx.ui.core.pointerinput.PointerInputFilter: void <init>()>();

        $r1 = new androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$dragObserver$1;

        specialinvoke $r1.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$dragObserver$1: void <init>(androidx.ui.core.gesture.LongPressDragGestureDetectorGlue)>(r0);

        $r2 = (androidx.ui.core.gesture.DragObserver) $r1;

        r0.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue: androidx.ui.core.gesture.DragObserver dragObserver> = $r2;

        $r3 = new androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$onLongPress$1;

        specialinvoke $r3.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$onLongPress$1: void <init>(androidx.ui.core.gesture.LongPressDragGestureDetectorGlue)>(r0);

        $r4 = (kotlin.jvm.functions.Function1) $r3;

        r0.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue: kotlin.jvm.functions.Function1 onLongPress> = $r4;

        return;
    }

    public final androidx.ui.core.gesture.LongPressDragObserver getLongPressDragObserver()
    {
        androidx.ui.core.gesture.LongPressDragGestureDetectorGlue r0;
        androidx.ui.core.gesture.LongPressDragObserver r1;

        r0 := @this: androidx.ui.core.gesture.LongPressDragGestureDetectorGlue;

        r1 = r0.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue: androidx.ui.core.gesture.LongPressDragObserver longPressDragObserver>;

        if r1 == null goto label1;

        return r1;

     label1:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("longPressDragObserver");

        throw null;
    }

    public final void setLongPressDragObserver(androidx.ui.core.gesture.LongPressDragObserver)
    {
        androidx.ui.core.gesture.LongPressDragGestureDetectorGlue r0;
        androidx.ui.core.gesture.LongPressDragObserver r1;

        r0 := @this: androidx.ui.core.gesture.LongPressDragGestureDetectorGlue;

        r1 := @parameter0: androidx.ui.core.gesture.LongPressDragObserver;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue: androidx.ui.core.gesture.LongPressDragObserver longPressDragObserver> = r1;

        return;
    }

    public final boolean getDragEnabled()
    {
        androidx.ui.core.gesture.LongPressDragGestureDetectorGlue r0;
        boolean $z0;

        r0 := @this: androidx.ui.core.gesture.LongPressDragGestureDetectorGlue;

        $z0 = r0.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue: boolean dragEnabled>;

        return $z0;
    }

    public final void setDragEnabled(boolean)
    {
        androidx.ui.core.gesture.LongPressDragGestureDetectorGlue r0;
        boolean z0;

        r0 := @this: androidx.ui.core.gesture.LongPressDragGestureDetectorGlue;

        z0 := @parameter0: boolean;

        r0.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue: boolean dragEnabled> = z0;

        return;
    }

    public final androidx.ui.core.gesture.DragObserver getDragObserver()
    {
        androidx.ui.core.gesture.LongPressDragGestureDetectorGlue r0;
        androidx.ui.core.gesture.DragObserver $r1;

        r0 := @this: androidx.ui.core.gesture.LongPressDragGestureDetectorGlue;

        $r1 = r0.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue: androidx.ui.core.gesture.DragObserver dragObserver>;

        return $r1;
    }

    public java.util.List onPointerInput(java.util.List, androidx.ui.core.PointerEventPass, androidx.ui.unit.IntPxSize)
    {
        androidx.ui.core.gesture.LongPressDragGestureDetectorGlue r0;
        java.util.List r1;
        androidx.ui.core.PointerEventPass r2, $r8;
        androidx.ui.unit.IntPxSize r3;
        java.lang.Iterable $r4;
        java.util.Iterator r5;
        java.lang.Object r6;
        androidx.ui.core.PointerInputChange r7;
        boolean $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        androidx.ui.core.gesture.LongPressDragObserver $r9;
        androidx.ui.unit.PxPosition$Companion $r10;
        androidx.ui.unit.PxPosition $r11;
        java.util.Collection $r12;

        r0 := @this: androidx.ui.core.gesture.LongPressDragGestureDetectorGlue;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: androidx.ui.core.PointerEventPass;

        r3 := @parameter2: androidx.ui.unit.IntPxSize;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "changes");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "pass");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "bounds");

        $r8 = <androidx.ui.core.PointerEventPass: androidx.ui.core.PointerEventPass PostUp>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r8);

        if $z2 == 0 goto label5;

        $z3 = virtualinvoke r0.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue: boolean getDragEnabled()>();

        if $z3 == 0 goto label5;

        $z4 = r0.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue: boolean dragStarted>;

        if $z4 != 0 goto label5;

        $r4 = (java.lang.Iterable) r1;

        $z5 = $r4 instanceof java.util.Collection;

        if $z5 == 0 goto label1;

        $r12 = (java.util.Collection) $r4;

        $z7 = interfaceinvoke $r12.<java.util.Collection: boolean isEmpty()>();

        if $z7 == 0 goto label1;

        $z8 = 1;

        goto label4;

     label1:
        r5 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z9 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label3;

        r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (androidx.ui.core.PointerInputChange) r6;

        $z6 = staticinvoke <androidx.ui.core.PointerInputKt: boolean changedToUpIgnoreConsumed(androidx.ui.core.PointerInputChange)>(r7);

        if $z6 != 0 goto label2;

        $z8 = 0;

        goto label4;

     label3:
        $z8 = 1;

     label4:
        if $z8 == 0 goto label5;

        virtualinvoke r0.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue: void setDragEnabled(boolean)>(0);

        $r9 = virtualinvoke r0.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue: androidx.ui.core.gesture.LongPressDragObserver getLongPressDragObserver()>();

        $r10 = <androidx.ui.unit.PxPosition: androidx.ui.unit.PxPosition$Companion Companion>;

        $r11 = virtualinvoke $r10.<androidx.ui.unit.PxPosition$Companion: androidx.ui.unit.PxPosition getOrigin()>();

        interfaceinvoke $r9.<androidx.ui.core.gesture.LongPressDragObserver: void onStop(androidx.ui.unit.PxPosition)>($r11);

     label5:
        return r1;
    }

    public void onCancel()
    {
        androidx.ui.core.gesture.LongPressDragGestureDetectorGlue r0;
        boolean $z0, $z1;
        androidx.ui.core.gesture.LongPressDragObserver $r1;

        r0 := @this: androidx.ui.core.gesture.LongPressDragGestureDetectorGlue;

        $z0 = virtualinvoke r0.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue: boolean getDragEnabled()>();

        if $z0 == 0 goto label1;

        $z1 = r0.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue: boolean dragStarted>;

        if $z1 != 0 goto label1;

        virtualinvoke r0.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue: void setDragEnabled(boolean)>(0);

        $r1 = virtualinvoke r0.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue: androidx.ui.core.gesture.LongPressDragObserver getLongPressDragObserver()>();

        interfaceinvoke $r1.<androidx.ui.core.gesture.LongPressDragObserver: void onCancel()>();

     label1:
        return;
    }

    public final kotlin.jvm.functions.Function1 getOnLongPress()
    {
        androidx.ui.core.gesture.LongPressDragGestureDetectorGlue r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.ui.core.gesture.LongPressDragGestureDetectorGlue;

        $r1 = r0.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue: kotlin.jvm.functions.Function1 onLongPress>;

        return $r1;
    }

    public static final void access$setDragStarted$p(androidx.ui.core.gesture.LongPressDragGestureDetectorGlue, boolean)
    {
        androidx.ui.core.gesture.LongPressDragGestureDetectorGlue r0;
        boolean z0;

        r0 := @parameter0: androidx.ui.core.gesture.LongPressDragGestureDetectorGlue;

        z0 := @parameter1: boolean;

        r0.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue: boolean dragStarted> = z0;

        return;
    }

androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$dragObserver$1
<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$dragObserver$1: androidx.ui.core.gesture.LongPressDragGestureDetectorGlue $this>
    void <init>(androidx.ui.core.gesture.LongPressDragGestureDetectorGlue)
    {
        androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$dragObserver$1 r0;
        androidx.ui.core.gesture.LongPressDragGestureDetectorGlue $r1;

        r0 := @this: androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$dragObserver$1;

        $r1 := @parameter0: androidx.ui.core.gesture.LongPressDragGestureDetectorGlue;

        r0.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$dragObserver$1: androidx.ui.core.gesture.LongPressDragGestureDetectorGlue $this> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onStart(androidx.ui.unit.PxPosition)
    {
        androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$dragObserver$1 r0;
        androidx.ui.unit.PxPosition r1;
        androidx.ui.core.gesture.LongPressDragGestureDetectorGlue $r2, $r4;
        androidx.ui.core.gesture.LongPressDragObserver $r3;

        r0 := @this: androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$dragObserver$1;

        r1 := @parameter0: androidx.ui.unit.PxPosition;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "downPosition");

        $r2 = r0.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$dragObserver$1: androidx.ui.core.gesture.LongPressDragGestureDetectorGlue $this>;

        $r3 = virtualinvoke $r2.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue: androidx.ui.core.gesture.LongPressDragObserver getLongPressDragObserver()>();

        interfaceinvoke $r3.<androidx.ui.core.gesture.LongPressDragObserver: void onDragStart()>();

        $r4 = r0.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$dragObserver$1: androidx.ui.core.gesture.LongPressDragGestureDetectorGlue $this>;

        staticinvoke <androidx.ui.core.gesture.LongPressDragGestureDetectorGlue: void access$setDragStarted$p(androidx.ui.core.gesture.LongPressDragGestureDetectorGlue,boolean)>($r4, 1);

        return;
    }

    public androidx.ui.unit.PxPosition onDrag(androidx.ui.unit.PxPosition)
    {
        androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$dragObserver$1 r0;
        androidx.ui.unit.PxPosition r1, $r4;
        androidx.ui.core.gesture.LongPressDragGestureDetectorGlue $r2;
        androidx.ui.core.gesture.LongPressDragObserver $r3;

        r0 := @this: androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$dragObserver$1;

        r1 := @parameter0: androidx.ui.unit.PxPosition;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "dragDistance");

        $r2 = r0.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$dragObserver$1: androidx.ui.core.gesture.LongPressDragGestureDetectorGlue $this>;

        $r3 = virtualinvoke $r2.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue: androidx.ui.core.gesture.LongPressDragObserver getLongPressDragObserver()>();

        $r4 = interfaceinvoke $r3.<androidx.ui.core.gesture.LongPressDragObserver: androidx.ui.unit.PxPosition onDrag(androidx.ui.unit.PxPosition)>(r1);

        return $r4;
    }

    public void onStop(androidx.ui.unit.PxPosition)
    {
        androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$dragObserver$1 r0;
        androidx.ui.unit.PxPosition r1;
        androidx.ui.core.gesture.LongPressDragGestureDetectorGlue $r2, $r3, $r4;
        androidx.ui.core.gesture.LongPressDragObserver $r5;

        r0 := @this: androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$dragObserver$1;

        r1 := @parameter0: androidx.ui.unit.PxPosition;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "velocity");

        $r2 = r0.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$dragObserver$1: androidx.ui.core.gesture.LongPressDragGestureDetectorGlue $this>;

        virtualinvoke $r2.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue: void setDragEnabled(boolean)>(0);

        $r3 = r0.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$dragObserver$1: androidx.ui.core.gesture.LongPressDragGestureDetectorGlue $this>;

        staticinvoke <androidx.ui.core.gesture.LongPressDragGestureDetectorGlue: void access$setDragStarted$p(androidx.ui.core.gesture.LongPressDragGestureDetectorGlue,boolean)>($r3, 0);

        $r4 = r0.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$dragObserver$1: androidx.ui.core.gesture.LongPressDragGestureDetectorGlue $this>;

        $r5 = virtualinvoke $r4.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue: androidx.ui.core.gesture.LongPressDragObserver getLongPressDragObserver()>();

        interfaceinvoke $r5.<androidx.ui.core.gesture.LongPressDragObserver: void onStop(androidx.ui.unit.PxPosition)>(r1);

        return;
    }

    public void onCancel()
    {
        androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$dragObserver$1 r0;
        androidx.ui.core.gesture.LongPressDragGestureDetectorGlue $r1, $r2, $r3;
        androidx.ui.core.gesture.LongPressDragObserver $r4;

        r0 := @this: androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$dragObserver$1;

        $r1 = r0.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$dragObserver$1: androidx.ui.core.gesture.LongPressDragGestureDetectorGlue $this>;

        virtualinvoke $r1.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue: void setDragEnabled(boolean)>(0);

        $r2 = r0.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$dragObserver$1: androidx.ui.core.gesture.LongPressDragGestureDetectorGlue $this>;

        staticinvoke <androidx.ui.core.gesture.LongPressDragGestureDetectorGlue: void access$setDragStarted$p(androidx.ui.core.gesture.LongPressDragGestureDetectorGlue,boolean)>($r2, 0);

        $r3 = r0.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$dragObserver$1: androidx.ui.core.gesture.LongPressDragGestureDetectorGlue $this>;

        $r4 = virtualinvoke $r3.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue: androidx.ui.core.gesture.LongPressDragObserver getLongPressDragObserver()>();

        interfaceinvoke $r4.<androidx.ui.core.gesture.LongPressDragObserver: void onCancel()>();

        return;
    }

androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$onLongPress$1
<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$onLongPress$1: androidx.ui.core.gesture.LongPressDragGestureDetectorGlue $this>
    void <init>(androidx.ui.core.gesture.LongPressDragGestureDetectorGlue)
    {
        androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$onLongPress$1 r0;
        androidx.ui.core.gesture.LongPressDragGestureDetectorGlue $r1;

        r0 := @this: androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$onLongPress$1;

        $r1 := @parameter0: androidx.ui.core.gesture.LongPressDragGestureDetectorGlue;

        r0.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$onLongPress$1: androidx.ui.core.gesture.LongPressDragGestureDetectorGlue $this> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.ui.unit.PxPosition)
    {
        androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$onLongPress$1 r0;
        androidx.ui.unit.PxPosition r1;
        androidx.ui.core.gesture.LongPressDragGestureDetectorGlue $r2, $r3;
        androidx.ui.core.gesture.LongPressDragObserver $r4;

        r0 := @this: androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$onLongPress$1;

        r1 := @parameter0: androidx.ui.unit.PxPosition;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "pxPosition");

        $r2 = r0.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$onLongPress$1: androidx.ui.core.gesture.LongPressDragGestureDetectorGlue $this>;

        virtualinvoke $r2.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue: void setDragEnabled(boolean)>(1);

        $r3 = r0.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$onLongPress$1: androidx.ui.core.gesture.LongPressDragGestureDetectorGlue $this>;

        $r4 = virtualinvoke $r3.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue: androidx.ui.core.gesture.LongPressDragObserver getLongPressDragObserver()>();

        interfaceinvoke $r4.<androidx.ui.core.gesture.LongPressDragObserver: void onLongPress(androidx.ui.unit.PxPosition)>(r1);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$onLongPress$1 r0;
        java.lang.Object r1;
        androidx.ui.unit.PxPosition $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$onLongPress$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.ui.unit.PxPosition) r1;

        virtualinvoke r0.<androidx.ui.core.gesture.LongPressDragGestureDetectorGlue$onLongPress$1: void invoke(androidx.ui.unit.PxPosition)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

