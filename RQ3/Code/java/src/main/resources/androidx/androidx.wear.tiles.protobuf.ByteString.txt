androidx.wear.tiles.protobuf.ByteString
<androidx.wear.tiles.protobuf.ByteString: int CONCATENATE_BY_COPY_SIZE>
<androidx.wear.tiles.protobuf.ByteString: int MIN_READ_FROM_CHUNK_SIZE>
<androidx.wear.tiles.protobuf.ByteString: int MAX_READ_FROM_CHUNK_SIZE>
<androidx.wear.tiles.protobuf.ByteString: androidx.wear.tiles.protobuf.ByteString EMPTY>
<androidx.wear.tiles.protobuf.ByteString: androidx.wear.tiles.protobuf.ByteString$ByteArrayCopier byteArrayCopier>
<androidx.wear.tiles.protobuf.ByteString: int hash>
<androidx.wear.tiles.protobuf.ByteString: int UNSIGNED_BYTE_MASK>
<androidx.wear.tiles.protobuf.ByteString: java.util.Comparator UNSIGNED_LEXICOGRAPHICAL_COMPARATOR>
    void <init>()
    {
        androidx.wear.tiles.protobuf.ByteString r0;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.wear.tiles.protobuf.ByteString: int hash> = 0;

        return;
    }

<androidx.wear.tiles.protobuf.ByteString: byte byteAt(int)>
<androidx.wear.tiles.protobuf.ByteString: byte internalByteAt(int)>
    public androidx.wear.tiles.protobuf.ByteString$ByteIterator iterator()
    {
        androidx.wear.tiles.protobuf.ByteString r0;
        androidx.wear.tiles.protobuf.ByteString$1 $r1;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString;

        $r1 = new androidx.wear.tiles.protobuf.ByteString$1;

        specialinvoke $r1.<androidx.wear.tiles.protobuf.ByteString$1: void <init>(androidx.wear.tiles.protobuf.ByteString)>(r0);

        return $r1;
    }

<androidx.wear.tiles.protobuf.ByteString: int size()>
    public final boolean isEmpty()
    {
        androidx.wear.tiles.protobuf.ByteString r0;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString;

        $i0 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString: int size()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static int toInt(byte)
    {
        byte b0;
        short $s1;

        b0 := @parameter0: byte;

        $s1 = b0 & 255;

        return $s1;
    }

    public static java.util.Comparator unsignedLexicographicalComparator()
    {
        java.util.Comparator $r0;

        $r0 = <androidx.wear.tiles.protobuf.ByteString: java.util.Comparator UNSIGNED_LEXICOGRAPHICAL_COMPARATOR>;

        return $r0;
    }

    public final androidx.wear.tiles.protobuf.ByteString substring(int)
    {
        androidx.wear.tiles.protobuf.ByteString r0, $r1;
        int i0, $i1;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString: int size()>();

        $r1 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString: androidx.wear.tiles.protobuf.ByteString substring(int,int)>(i0, $i1);

        return $r1;
    }

<androidx.wear.tiles.protobuf.ByteString: androidx.wear.tiles.protobuf.ByteString substring(int,int)>
    public final boolean startsWith(androidx.wear.tiles.protobuf.ByteString)
    {
        androidx.wear.tiles.protobuf.ByteString r0, r1, $r2;
        int $i0, $i1, $i2;
        boolean $z0, $z1;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString;

        r1 := @parameter0: androidx.wear.tiles.protobuf.ByteString;

        $i0 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString: int size()>();

        $i1 = virtualinvoke r1.<androidx.wear.tiles.protobuf.ByteString: int size()>();

        if $i0 < $i1 goto label1;

        $i2 = virtualinvoke r1.<androidx.wear.tiles.protobuf.ByteString: int size()>();

        $r2 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString: androidx.wear.tiles.protobuf.ByteString substring(int,int)>(0, $i2);

        $z0 = virtualinvoke $r2.<androidx.wear.tiles.protobuf.ByteString: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public final boolean endsWith(androidx.wear.tiles.protobuf.ByteString)
    {
        androidx.wear.tiles.protobuf.ByteString r0, r1, $r2;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString;

        r1 := @parameter0: androidx.wear.tiles.protobuf.ByteString;

        $i0 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString: int size()>();

        $i1 = virtualinvoke r1.<androidx.wear.tiles.protobuf.ByteString: int size()>();

        if $i0 < $i1 goto label1;

        $i2 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString: int size()>();

        $i3 = virtualinvoke r1.<androidx.wear.tiles.protobuf.ByteString: int size()>();

        $i4 = $i2 - $i3;

        $r2 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString: androidx.wear.tiles.protobuf.ByteString substring(int)>($i4);

        $z0 = virtualinvoke $r2.<androidx.wear.tiles.protobuf.ByteString: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static androidx.wear.tiles.protobuf.ByteString copyFrom(byte[], int, int)
    {
        byte[] r0, $r3;
        int i0, i1, $i2, $i3;
        androidx.wear.tiles.protobuf.ByteString$LiteralByteString $r1;
        androidx.wear.tiles.protobuf.ByteString$ByteArrayCopier $r2;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i3 = i0 + i1;

        $i2 = lengthof r0;

        staticinvoke <androidx.wear.tiles.protobuf.ByteString: int checkRange(int,int,int)>(i0, $i3, $i2);

        $r1 = new androidx.wear.tiles.protobuf.ByteString$LiteralByteString;

        $r2 = <androidx.wear.tiles.protobuf.ByteString: androidx.wear.tiles.protobuf.ByteString$ByteArrayCopier byteArrayCopier>;

        $r3 = interfaceinvoke $r2.<androidx.wear.tiles.protobuf.ByteString$ByteArrayCopier: byte[] copyFrom(byte[],int,int)>(r0, i0, i1);

        specialinvoke $r1.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: void <init>(byte[])>($r3);

        return $r1;
    }

    public static androidx.wear.tiles.protobuf.ByteString copyFrom(byte[])
    {
        byte[] r0;
        int $i0;
        androidx.wear.tiles.protobuf.ByteString $r1;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        $r1 = staticinvoke <androidx.wear.tiles.protobuf.ByteString: androidx.wear.tiles.protobuf.ByteString copyFrom(byte[],int,int)>(r0, 0, $i0);

        return $r1;
    }

    static androidx.wear.tiles.protobuf.ByteString wrap(java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r0;
        int i0, $i1, $i2, $i3;
        boolean $z0;
        androidx.wear.tiles.protobuf.NioByteString $r1;
        byte[] $r2;
        androidx.wear.tiles.protobuf.ByteString $r3;

        r0 := @parameter0: java.nio.ByteBuffer;

        $z0 = virtualinvoke r0.<java.nio.ByteBuffer: boolean hasArray()>();

        if $z0 == 0 goto label1;

        i0 = virtualinvoke r0.<java.nio.ByteBuffer: int arrayOffset()>();

        $r2 = virtualinvoke r0.<java.nio.ByteBuffer: byte[] array()>();

        $i1 = virtualinvoke r0.<java.nio.ByteBuffer: int position()>();

        $i2 = i0 + $i1;

        $i3 = virtualinvoke r0.<java.nio.ByteBuffer: int remaining()>();

        $r3 = staticinvoke <androidx.wear.tiles.protobuf.ByteString: androidx.wear.tiles.protobuf.ByteString wrap(byte[],int,int)>($r2, $i2, $i3);

        return $r3;

     label1:
        $r1 = new androidx.wear.tiles.protobuf.NioByteString;

        specialinvoke $r1.<androidx.wear.tiles.protobuf.NioByteString: void <init>(java.nio.ByteBuffer)>(r0);

        return $r1;
    }

    static androidx.wear.tiles.protobuf.ByteString wrap(byte[])
    {
        byte[] r0;
        androidx.wear.tiles.protobuf.ByteString$LiteralByteString $r1;

        r0 := @parameter0: byte[];

        $r1 = new androidx.wear.tiles.protobuf.ByteString$LiteralByteString;

        specialinvoke $r1.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: void <init>(byte[])>(r0);

        return $r1;
    }

    static androidx.wear.tiles.protobuf.ByteString wrap(byte[], int, int)
    {
        byte[] r0;
        int i0, i1;
        androidx.wear.tiles.protobuf.ByteString$BoundedByteString $r1;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new androidx.wear.tiles.protobuf.ByteString$BoundedByteString;

        specialinvoke $r1.<androidx.wear.tiles.protobuf.ByteString$BoundedByteString: void <init>(byte[],int,int)>(r0, i0, i1);

        return $r1;
    }

    public static androidx.wear.tiles.protobuf.ByteString copyFrom(java.nio.ByteBuffer, int)
    {
        java.nio.ByteBuffer r0;
        int i0, $i1;
        byte[] r1;
        androidx.wear.tiles.protobuf.ByteString$LiteralByteString $r3;

        r0 := @parameter0: java.nio.ByteBuffer;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<java.nio.ByteBuffer: int remaining()>();

        staticinvoke <androidx.wear.tiles.protobuf.ByteString: int checkRange(int,int,int)>(0, i0, $i1);

        r1 = newarray (byte)[i0];

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r1);

        $r3 = new androidx.wear.tiles.protobuf.ByteString$LiteralByteString;

        specialinvoke $r3.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: void <init>(byte[])>(r1);

        return $r3;
    }

    public static androidx.wear.tiles.protobuf.ByteString copyFrom(java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r0;
        int $i0;
        androidx.wear.tiles.protobuf.ByteString $r1;

        r0 := @parameter0: java.nio.ByteBuffer;

        $i0 = virtualinvoke r0.<java.nio.ByteBuffer: int remaining()>();

        $r1 = staticinvoke <androidx.wear.tiles.protobuf.ByteString: androidx.wear.tiles.protobuf.ByteString copyFrom(java.nio.ByteBuffer,int)>(r0, $i0);

        return $r1;
    }

    public static androidx.wear.tiles.protobuf.ByteString copyFrom(java.lang.String, java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.lang.String r0, r1;
        androidx.wear.tiles.protobuf.ByteString$LiteralByteString $r2;
        byte[] $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = new androidx.wear.tiles.protobuf.ByteString$LiteralByteString;

        $r3 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>(r1);

        specialinvoke $r2.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: void <init>(byte[])>($r3);

        return $r2;
    }

    public static androidx.wear.tiles.protobuf.ByteString copyFrom(java.lang.String, java.nio.charset.Charset)
    {
        java.lang.String r0;
        java.nio.charset.Charset r1;
        androidx.wear.tiles.protobuf.ByteString$LiteralByteString $r2;
        byte[] $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.nio.charset.Charset;

        $r2 = new androidx.wear.tiles.protobuf.ByteString$LiteralByteString;

        $r3 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(r1);

        specialinvoke $r2.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: void <init>(byte[])>($r3);

        return $r2;
    }

    public static androidx.wear.tiles.protobuf.ByteString copyFromUtf8(java.lang.String)
    {
        java.lang.String r0;
        androidx.wear.tiles.protobuf.ByteString$LiteralByteString $r1;
        java.nio.charset.Charset $r2;
        byte[] $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = new androidx.wear.tiles.protobuf.ByteString$LiteralByteString;

        $r2 = <androidx.wear.tiles.protobuf.Internal: java.nio.charset.Charset UTF_8>;

        $r3 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

        specialinvoke $r1.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: void <init>(byte[])>($r3);

        return $r1;
    }

    public static androidx.wear.tiles.protobuf.ByteString readFrom(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream r0;
        androidx.wear.tiles.protobuf.ByteString $r1;

        r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <androidx.wear.tiles.protobuf.ByteString: androidx.wear.tiles.protobuf.ByteString readFrom(java.io.InputStream,int,int)>(r0, 256, 8192);

        return $r1;
    }

    public static androidx.wear.tiles.protobuf.ByteString readFrom(java.io.InputStream, int) throws java.io.IOException
    {
        java.io.InputStream r0;
        int i0;
        androidx.wear.tiles.protobuf.ByteString $r1;

        r0 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        $r1 = staticinvoke <androidx.wear.tiles.protobuf.ByteString: androidx.wear.tiles.protobuf.ByteString readFrom(java.io.InputStream,int,int)>(r0, i0, i0);

        return $r1;
    }

    public static androidx.wear.tiles.protobuf.ByteString readFrom(java.io.InputStream, int, int) throws java.io.IOException
    {
        java.io.InputStream r0;
        int i0, i1, $i2, i3;
        java.util.ArrayList r1, r5;
        androidx.wear.tiles.protobuf.ByteString r2, $r4;
        java.lang.Iterable r6;

        r0 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r5 = new java.util.ArrayList;

        specialinvoke r5.<java.util.ArrayList: void <init>()>();

        r1 = r5;

        i3 = i0;

     label1:
        r2 = staticinvoke <androidx.wear.tiles.protobuf.ByteString: androidx.wear.tiles.protobuf.ByteString readChunk(java.io.InputStream,int)>(r0, i3);

        if r2 != null goto label2;

        goto label3;

     label2:
        interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>(r2);

        $i2 = i3 * 2;

        i3 = staticinvoke <java.lang.Math: int min(int,int)>($i2, i1);

        goto label1;

     label3:
        r6 = (java.lang.Iterable) r1;

        $r4 = staticinvoke <androidx.wear.tiles.protobuf.ByteString: androidx.wear.tiles.protobuf.ByteString copyFrom(java.lang.Iterable)>(r6);

        return $r4;
    }

    private static androidx.wear.tiles.protobuf.ByteString readChunk(java.io.InputStream, int) throws java.io.IOException
    {
        java.io.InputStream r0;
        int i0, i1, $i2, i3;
        byte[] r1;
        androidx.wear.tiles.protobuf.ByteString $r2;

        r0 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        r1 = newarray (byte)[i0];

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        $i2 = i0 - i3;

        i1 = virtualinvoke r0.<java.io.InputStream: int read(byte[],int,int)>(r1, i3, $i2);

        if i1 != -1 goto label2;

        goto label3;

     label2:
        i3 = i3 + i1;

        goto label1;

     label3:
        if i3 != 0 goto label4;

        return null;

     label4:
        $r2 = staticinvoke <androidx.wear.tiles.protobuf.ByteString: androidx.wear.tiles.protobuf.ByteString copyFrom(byte[],int,int)>(r1, 0, i3);

        return $r2;
    }

    public final androidx.wear.tiles.protobuf.ByteString concat(androidx.wear.tiles.protobuf.ByteString)
    {
        androidx.wear.tiles.protobuf.ByteString r0, r1, $r2;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, r10;
        java.lang.String $r9;
        java.lang.IllegalArgumentException r11;
        java.lang.Throwable r12;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString;

        r1 := @parameter0: androidx.wear.tiles.protobuf.ByteString;

        $i0 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString: int size()>();

        $i1 = 2147483647 - $i0;

        $i2 = virtualinvoke r1.<androidx.wear.tiles.protobuf.ByteString: int size()>();

        if $i1 >= $i2 goto label1;

        r11 = new java.lang.IllegalArgumentException;

        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ByteString would be too long: ");

        $i3 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString: int size()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+");

        $i4 = virtualinvoke r1.<androidx.wear.tiles.protobuf.ByteString: int size()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        r12 = (java.lang.Throwable) r11;

        throw r12;

     label1:
        $r2 = staticinvoke <androidx.wear.tiles.protobuf.RopeByteString: androidx.wear.tiles.protobuf.ByteString concatenate(androidx.wear.tiles.protobuf.ByteString,androidx.wear.tiles.protobuf.ByteString)>(r0, r1);

        return $r2;
    }

    public static androidx.wear.tiles.protobuf.ByteString copyFrom(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        java.util.Iterator r1, $r3;
        boolean $z0, $z1;
        java.util.Collection $r2;
        androidx.wear.tiles.protobuf.ByteString $r4, $r5;
        int i0, i1;

        r0 := @parameter0: java.lang.Iterable;

        $z0 = r0 instanceof java.util.Collection;

        if $z0 != 0 goto label3;

        i0 = 0;

        r1 = interfaceinvoke r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        i0 = i0 + 1;

        goto label1;

     label2:
        i1 = i0;

        goto label4;

     label3:
        $r2 = (java.util.Collection) r0;

        i1 = interfaceinvoke $r2.<java.util.Collection: int size()>();

     label4:
        if i1 != 0 goto label5;

        $r5 = <androidx.wear.tiles.protobuf.ByteString: androidx.wear.tiles.protobuf.ByteString EMPTY>;

        return $r5;

     label5:
        $r3 = interfaceinvoke r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r4 = staticinvoke <androidx.wear.tiles.protobuf.ByteString: androidx.wear.tiles.protobuf.ByteString balancedConcat(java.util.Iterator,int)>($r3, i1);

        return $r4;
    }

    private static androidx.wear.tiles.protobuf.ByteString balancedConcat(java.util.Iterator, int)
    {
        java.util.Iterator r0;
        int i0, i1, $i2;
        androidx.wear.tiles.protobuf.ByteString r1, r2, r8;
        java.lang.Object $r3;
        java.lang.Object[] $r5;
        java.lang.Integer $r6;
        java.lang.String $r7;
        java.lang.IllegalArgumentException r9;
        java.lang.Throwable r10;

        r0 := @parameter0: java.util.Iterator;

        i0 := @parameter1: int;

        if i0 >= 1 goto label1;

        r9 = new java.lang.IllegalArgumentException;

        $r5 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5[0] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("length (%s) must be >= 1", $r5);

        specialinvoke r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        r10 = (java.lang.Throwable) r9;

        throw r10;

     label1:
        if i0 != 1 goto label2;

        $r3 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        r8 = (androidx.wear.tiles.protobuf.ByteString) $r3;

        goto label3;

     label2:
        i1 = i0 >>> 1;

        r1 = staticinvoke <androidx.wear.tiles.protobuf.ByteString: androidx.wear.tiles.protobuf.ByteString balancedConcat(java.util.Iterator,int)>(r0, i1);

        $i2 = i0 - i1;

        r2 = staticinvoke <androidx.wear.tiles.protobuf.ByteString: androidx.wear.tiles.protobuf.ByteString balancedConcat(java.util.Iterator,int)>(r0, $i2);

        r8 = virtualinvoke r1.<androidx.wear.tiles.protobuf.ByteString: androidx.wear.tiles.protobuf.ByteString concat(androidx.wear.tiles.protobuf.ByteString)>(r2);

     label3:
        return r8;
    }

    public void copyTo(byte[], int)
    {
        androidx.wear.tiles.protobuf.ByteString r0;
        byte[] r1;
        int i0, $i1;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString: int size()>();

        virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString: void copyTo(byte[],int,int,int)>(r1, 0, i0, $i1);

        return;
    }

    public final void copyTo(byte[], int, int, int)
    {
        androidx.wear.tiles.protobuf.ByteString r0;
        byte[] r1;
        int i0, i1, i2, $i3, $i4, $i6, $i7;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $i3 = i0 + i2;

        $i4 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString: int size()>();

        staticinvoke <androidx.wear.tiles.protobuf.ByteString: int checkRange(int,int,int)>(i0, $i3, $i4);

        $i7 = i1 + i2;

        $i6 = lengthof r1;

        staticinvoke <androidx.wear.tiles.protobuf.ByteString: int checkRange(int,int,int)>(i1, $i7, $i6);

        if i2 <= 0 goto label1;

        virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString: void copyToInternal(byte[],int,int,int)>(r1, i0, i1, i2);

     label1:
        return;
    }

<androidx.wear.tiles.protobuf.ByteString: void copyToInternal(byte[],int,int,int)>
<androidx.wear.tiles.protobuf.ByteString: void copyTo(java.nio.ByteBuffer)>
    public final byte[] toByteArray()
    {
        androidx.wear.tiles.protobuf.ByteString r0;
        int i0;
        byte[] r1, $r2;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString;

        i0 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString: int size()>();

        if i0 != 0 goto label1;

        $r2 = <androidx.wear.tiles.protobuf.Internal: byte[] EMPTY_BYTE_ARRAY>;

        return $r2;

     label1:
        r1 = newarray (byte)[i0];

        virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString: void copyToInternal(byte[],int,int,int)>(r1, 0, 0, i0);

        return r1;
    }

<androidx.wear.tiles.protobuf.ByteString: void writeTo(java.io.OutputStream)>
    final void writeTo(java.io.OutputStream, int, int) throws java.io.IOException
    {
        androidx.wear.tiles.protobuf.ByteString r0;
        java.io.OutputStream r1;
        int i0, i1, $i2, $i3;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString;

        r1 := @parameter0: java.io.OutputStream;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = i0 + i1;

        $i3 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString: int size()>();

        staticinvoke <androidx.wear.tiles.protobuf.ByteString: int checkRange(int,int,int)>(i0, $i2, $i3);

        if i1 <= 0 goto label1;

        virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString: void writeToInternal(java.io.OutputStream,int,int)>(r1, i0, i1);

     label1:
        return;
    }

<androidx.wear.tiles.protobuf.ByteString: void writeToInternal(java.io.OutputStream,int,int)>
<androidx.wear.tiles.protobuf.ByteString: void writeTo(androidx.wear.tiles.protobuf.ByteOutput)>
<androidx.wear.tiles.protobuf.ByteString: void writeToReverse(androidx.wear.tiles.protobuf.ByteOutput)>
<androidx.wear.tiles.protobuf.ByteString: java.nio.ByteBuffer asReadOnlyByteBuffer()>
<androidx.wear.tiles.protobuf.ByteString: java.util.List asReadOnlyByteBufferList()>
    public final java.lang.String toString(java.lang.String) throws java.io.UnsupportedEncodingException
    {
        androidx.wear.tiles.protobuf.ByteString r0;
        java.lang.String r1, $r5;
        java.lang.Throwable r2, $r6;
        java.io.UnsupportedEncodingException r3, $r7;
        java.nio.charset.Charset $r4;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString;

        r1 := @parameter0: java.lang.String;

     label1:
        $r4 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r1);

        $r5 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString: java.lang.String toString(java.nio.charset.Charset)>($r4);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        $r7 = new java.io.UnsupportedEncodingException;

        specialinvoke $r7.<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>(r1);

        r3 = $r7;

        virtualinvoke r3.<java.io.UnsupportedEncodingException: java.lang.Throwable initCause(java.lang.Throwable)>(r2);

        throw r3;

        catch java.nio.charset.UnsupportedCharsetException from label1 to label2 with label3;
    }

    public final java.lang.String toString(java.nio.charset.Charset)
    {
        androidx.wear.tiles.protobuf.ByteString r0;
        java.nio.charset.Charset r1;
        int $i0;
        java.lang.String $r2;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString;

        r1 := @parameter0: java.nio.charset.Charset;

        $i0 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString: int size()>();

        if $i0 != 0 goto label1;

        $r2 = "";

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString: java.lang.String toStringInternal(java.nio.charset.Charset)>(r1);

     label2:
        return $r2;
    }

<androidx.wear.tiles.protobuf.ByteString: java.lang.String toStringInternal(java.nio.charset.Charset)>
    public final java.lang.String toStringUtf8()
    {
        androidx.wear.tiles.protobuf.ByteString r0;
        java.nio.charset.Charset $r1;
        java.lang.String $r2;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString;

        $r1 = <androidx.wear.tiles.protobuf.Internal: java.nio.charset.Charset UTF_8>;

        $r2 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString: java.lang.String toString(java.nio.charset.Charset)>($r1);

        return $r2;
    }

<androidx.wear.tiles.protobuf.ByteString: boolean isValidUtf8()>
<androidx.wear.tiles.protobuf.ByteString: int partialIsValidUtf8(int,int,int)>
<androidx.wear.tiles.protobuf.ByteString: boolean equals(java.lang.Object)>
    public final int hashCode()
    {
        androidx.wear.tiles.protobuf.ByteString r0;
        int i0, i1;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString;

        i1 = r0.<androidx.wear.tiles.protobuf.ByteString: int hash>;

        if i1 != 0 goto label2;

        i0 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString: int size()>();

        i1 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString: int partialHash(int,int,int)>(i0, 0, i0);

        if i1 != 0 goto label1;

        i1 = 1;

     label1:
        r0.<androidx.wear.tiles.protobuf.ByteString: int hash> = i1;

     label2:
        return i1;
    }

<androidx.wear.tiles.protobuf.ByteString: java.io.InputStream newInput()>
<androidx.wear.tiles.protobuf.ByteString: androidx.wear.tiles.protobuf.CodedInputStream newCodedInput()>
    public static androidx.wear.tiles.protobuf.ByteString$Output newOutput(int)
    {
        int i0;
        androidx.wear.tiles.protobuf.ByteString$Output $r0;

        i0 := @parameter0: int;

        $r0 = new androidx.wear.tiles.protobuf.ByteString$Output;

        specialinvoke $r0.<androidx.wear.tiles.protobuf.ByteString$Output: void <init>(int)>(i0);

        return $r0;
    }

    public static androidx.wear.tiles.protobuf.ByteString$Output newOutput()
    {
        androidx.wear.tiles.protobuf.ByteString$Output $r0;

        $r0 = new androidx.wear.tiles.protobuf.ByteString$Output;

        specialinvoke $r0.<androidx.wear.tiles.protobuf.ByteString$Output: void <init>(int)>(128);

        return $r0;
    }

    static androidx.wear.tiles.protobuf.ByteString$CodedBuilder newCodedBuilder(int)
    {
        int i0;
        androidx.wear.tiles.protobuf.ByteString$CodedBuilder $r0;

        i0 := @parameter0: int;

        $r0 = new androidx.wear.tiles.protobuf.ByteString$CodedBuilder;

        specialinvoke $r0.<androidx.wear.tiles.protobuf.ByteString$CodedBuilder: void <init>(int,androidx.wear.tiles.protobuf.ByteString$1)>(i0, null);

        return $r0;
    }

<androidx.wear.tiles.protobuf.ByteString: int getTreeDepth()>
<androidx.wear.tiles.protobuf.ByteString: boolean isBalanced()>
    protected final int peekCachedHashCode()
    {
        androidx.wear.tiles.protobuf.ByteString r0;
        int $i0;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString;

        $i0 = r0.<androidx.wear.tiles.protobuf.ByteString: int hash>;

        return $i0;
    }

<androidx.wear.tiles.protobuf.ByteString: int partialHash(int,int,int)>
    static void checkIndex(int, int)
    {
        int i0, i1, $i2, $i3, $i4;
        java.lang.ArrayIndexOutOfBoundsException $r0, $r7;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r8, $r9, $r10;
        java.lang.String $r6, $r11;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i0 + 1;

        $i3 = i1 - $i2;

        $i4 = i0 | $i3;

        if $i4 >= 0 goto label2;

        if i0 >= 0 goto label1;

        $r7 = new java.lang.ArrayIndexOutOfBoundsException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index < 0: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label1:
        $r0 = new java.lang.ArrayIndexOutOfBoundsException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index > length: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>($r6);

        throw $r0;

     label2:
        return;
    }

    static int checkRange(int, int, int)
    {
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        java.lang.IndexOutOfBoundsException $r0, $r7, $r14;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r8, $r9, $r10, $r11, $r12, $r15, $r16, $r17, $r18;
        java.lang.String $r6, $r13, $r19;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 = i1 - i0;

        $i4 = i0 | i1;

        $i6 = $i4 | i3;

        $i5 = i2 - i1;

        $i7 = $i6 | $i5;

        if $i7 >= 0 goto label3;

        if i0 >= 0 goto label1;

        $r14 = new java.lang.IndexOutOfBoundsException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Beginning index: ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" < 0");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r19);

        throw $r14;

     label1:
        if i1 >= i0 goto label2;

        $r7 = new java.lang.IndexOutOfBoundsException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Beginning index larger than ending index: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r13);

        throw $r7;

     label2:
        $r0 = new java.lang.IndexOutOfBoundsException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("End index: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" >= ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r6);

        throw $r0;

     label3:
        return i3;
    }

    public final java.lang.String toString()
    {
        androidx.wear.tiles.protobuf.ByteString r0;
        java.lang.Object[] $r1;
        int $i0, $i1;
        java.lang.String $r2, $r4;
        java.lang.Integer $r3;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString;

        $r1 = newarray (java.lang.Object)[2];

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r1[0] = $r2;

        $i1 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString: int size()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[1] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("<ByteString@%s size=%d>", $r1);

        return $r4;
    }

    public volatile java.util.Iterator iterator()
    {
        androidx.wear.tiles.protobuf.ByteString r0;
        androidx.wear.tiles.protobuf.ByteString$ByteIterator $r1;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString;

        $r1 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString: androidx.wear.tiles.protobuf.ByteString$ByteIterator iterator()>();

        return $r1;
    }

    static int access$200(byte)
    {
        byte b0;
        int $i1;

        b0 := @parameter0: byte;

        $i1 = staticinvoke <androidx.wear.tiles.protobuf.ByteString: int toInt(byte)>(b0);

        return $i1;
    }

    static void <clinit>()
    {
        byte[] $r1;
        boolean $z0;
        androidx.wear.tiles.protobuf.ByteString$ByteArrayCopier $r3;
        androidx.wear.tiles.protobuf.ByteString$LiteralByteString r4;
        androidx.wear.tiles.protobuf.ByteString$SystemByteArrayCopier r5;
        androidx.wear.tiles.protobuf.ByteString$ArraysByteArrayCopier r6;
        androidx.wear.tiles.protobuf.ByteString$2 r7;

        r4 = new androidx.wear.tiles.protobuf.ByteString$LiteralByteString;

        $r1 = <androidx.wear.tiles.protobuf.Internal: byte[] EMPTY_BYTE_ARRAY>;

        specialinvoke r4.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: void <init>(byte[])>($r1);

        <androidx.wear.tiles.protobuf.ByteString: androidx.wear.tiles.protobuf.ByteString EMPTY> = r4;

        $z0 = staticinvoke <androidx.wear.tiles.protobuf.Android: boolean isOnAndroidDevice()>();

        if $z0 == 0 goto label1;

        r5 = new androidx.wear.tiles.protobuf.ByteString$SystemByteArrayCopier;

        $r3 = r5;

        specialinvoke r5.<androidx.wear.tiles.protobuf.ByteString$SystemByteArrayCopier: void <init>(androidx.wear.tiles.protobuf.ByteString$1)>(null);

        goto label2;

     label1:
        r6 = new androidx.wear.tiles.protobuf.ByteString$ArraysByteArrayCopier;

        $r3 = r6;

        specialinvoke r6.<androidx.wear.tiles.protobuf.ByteString$ArraysByteArrayCopier: void <init>(androidx.wear.tiles.protobuf.ByteString$1)>(null);

     label2:
        <androidx.wear.tiles.protobuf.ByteString: androidx.wear.tiles.protobuf.ByteString$ByteArrayCopier byteArrayCopier> = $r3;

        r7 = new androidx.wear.tiles.protobuf.ByteString$2;

        specialinvoke r7.<androidx.wear.tiles.protobuf.ByteString$2: void <init>()>();

        <androidx.wear.tiles.protobuf.ByteString: java.util.Comparator UNSIGNED_LEXICOGRAPHICAL_COMPARATOR> = r7;

        return;
    }

androidx.wear.tiles.protobuf.ByteString$1
<androidx.wear.tiles.protobuf.ByteString$1: int position>
<androidx.wear.tiles.protobuf.ByteString$1: int limit>
<androidx.wear.tiles.protobuf.ByteString$1: androidx.wear.tiles.protobuf.ByteString this$0>
    void <init>(androidx.wear.tiles.protobuf.ByteString)
    {
        androidx.wear.tiles.protobuf.ByteString$1 r0;
        androidx.wear.tiles.protobuf.ByteString r1, $r2;
        int $i0;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$1;

        r1 := @parameter0: androidx.wear.tiles.protobuf.ByteString;

        r0.<androidx.wear.tiles.protobuf.ByteString$1: androidx.wear.tiles.protobuf.ByteString this$0> = r1;

        specialinvoke r0.<androidx.wear.tiles.protobuf.ByteString$AbstractByteIterator: void <init>()>();

        r0.<androidx.wear.tiles.protobuf.ByteString$1: int position> = 0;

        $r2 = r0.<androidx.wear.tiles.protobuf.ByteString$1: androidx.wear.tiles.protobuf.ByteString this$0>;

        $i0 = virtualinvoke $r2.<androidx.wear.tiles.protobuf.ByteString: int size()>();

        r0.<androidx.wear.tiles.protobuf.ByteString$1: int limit> = $i0;

        return;
    }

    public boolean hasNext()
    {
        androidx.wear.tiles.protobuf.ByteString$1 r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$1;

        $i1 = r0.<androidx.wear.tiles.protobuf.ByteString$1: int position>;

        $i0 = r0.<androidx.wear.tiles.protobuf.ByteString$1: int limit>;

        if $i1 >= $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public byte nextByte()
    {
        androidx.wear.tiles.protobuf.ByteString$1 r0;
        int i0, $i1, $i2;
        androidx.wear.tiles.protobuf.ByteString $r1;
        byte $b3;
        java.util.NoSuchElementException $r2;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$1;

        i0 = r0.<androidx.wear.tiles.protobuf.ByteString$1: int position>;

        $i1 = r0.<androidx.wear.tiles.protobuf.ByteString$1: int limit>;

        if i0 < $i1 goto label1;

        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>()>();

        throw $r2;

     label1:
        $i2 = i0 + 1;

        r0.<androidx.wear.tiles.protobuf.ByteString$1: int position> = $i2;

        $r1 = r0.<androidx.wear.tiles.protobuf.ByteString$1: androidx.wear.tiles.protobuf.ByteString this$0>;

        $b3 = virtualinvoke $r1.<androidx.wear.tiles.protobuf.ByteString: byte internalByteAt(int)>(i0);

        return $b3;
    }

androidx.wear.tiles.protobuf.ByteString$2
    void <init>()
    {
        androidx.wear.tiles.protobuf.ByteString$2 r0;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(androidx.wear.tiles.protobuf.ByteString, androidx.wear.tiles.protobuf.ByteString)
    {
        androidx.wear.tiles.protobuf.ByteString$2 r0;
        androidx.wear.tiles.protobuf.ByteString r1, r2;
        androidx.wear.tiles.protobuf.ByteString$ByteIterator r3, r4;
        int i0, $i1, $i2, $i3, $i5, $i7;
        boolean $z0, $z1;
        byte $b4, $b6;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$2;

        r1 := @parameter0: androidx.wear.tiles.protobuf.ByteString;

        r2 := @parameter1: androidx.wear.tiles.protobuf.ByteString;

        r3 = virtualinvoke r1.<androidx.wear.tiles.protobuf.ByteString: androidx.wear.tiles.protobuf.ByteString$ByteIterator iterator()>();

        r4 = virtualinvoke r2.<androidx.wear.tiles.protobuf.ByteString: androidx.wear.tiles.protobuf.ByteString$ByteIterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<androidx.wear.tiles.protobuf.ByteString$ByteIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $z1 = interfaceinvoke r4.<androidx.wear.tiles.protobuf.ByteString$ByteIterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $b4 = interfaceinvoke r3.<androidx.wear.tiles.protobuf.ByteString$ByteIterator: byte nextByte()>();

        $i5 = staticinvoke <androidx.wear.tiles.protobuf.ByteString: int access$200(byte)>($b4);

        $b6 = interfaceinvoke r4.<androidx.wear.tiles.protobuf.ByteString$ByteIterator: byte nextByte()>();

        $i7 = staticinvoke <androidx.wear.tiles.protobuf.ByteString: int access$200(byte)>($b6);

        i0 = staticinvoke <java.lang.Integer: int compare(int,int)>($i5, $i7);

        if i0 == 0 goto label2;

        return i0;

     label2:
        goto label1;

     label3:
        $i1 = virtualinvoke r1.<androidx.wear.tiles.protobuf.ByteString: int size()>();

        $i2 = virtualinvoke r2.<androidx.wear.tiles.protobuf.ByteString: int size()>();

        $i3 = staticinvoke <java.lang.Integer: int compare(int,int)>($i1, $i2);

        return $i3;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        androidx.wear.tiles.protobuf.ByteString$2 r0;
        java.lang.Object r1, r2;
        androidx.wear.tiles.protobuf.ByteString $r3, $r4;
        int $i0;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.wear.tiles.protobuf.ByteString) r1;

        $r3 = (androidx.wear.tiles.protobuf.ByteString) r2;

        $i0 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$2: int compare(androidx.wear.tiles.protobuf.ByteString,androidx.wear.tiles.protobuf.ByteString)>($r4, $r3);

        return $i0;
    }

androidx.wear.tiles.protobuf.ByteString$AbstractByteIterator
    void <init>()
    {
        androidx.wear.tiles.protobuf.ByteString$AbstractByteIterator r0;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$AbstractByteIterator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.Byte next()
    {
        androidx.wear.tiles.protobuf.ByteString$AbstractByteIterator r0;
        byte $b0;
        java.lang.Byte $r1;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$AbstractByteIterator;

        $b0 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$AbstractByteIterator: byte nextByte()>();

        $r1 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

        return $r1;
    }

    public final void remove()
    {
        androidx.wear.tiles.protobuf.ByteString$AbstractByteIterator r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$AbstractByteIterator;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public volatile java.lang.Object next()
    {
        androidx.wear.tiles.protobuf.ByteString$AbstractByteIterator r0;
        java.lang.Byte $r1;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$AbstractByteIterator;

        $r1 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$AbstractByteIterator: java.lang.Byte next()>();

        return $r1;
    }

androidx.wear.tiles.protobuf.ByteString$ArraysByteArrayCopier
    private void <init>()
    {
        androidx.wear.tiles.protobuf.ByteString$ArraysByteArrayCopier r0;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$ArraysByteArrayCopier;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public byte[] copyFrom(byte[], int, int)
    {
        androidx.wear.tiles.protobuf.ByteString$ArraysByteArrayCopier r0;
        byte[] r1, $r2;
        int i0, i1, $i2;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$ArraysByteArrayCopier;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = i0 + i1;

        $r2 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>(r1, i0, $i2);

        return $r2;
    }

    void <init>(androidx.wear.tiles.protobuf.ByteString$1)
    {
        androidx.wear.tiles.protobuf.ByteString$ArraysByteArrayCopier r0;
        androidx.wear.tiles.protobuf.ByteString$1 r1;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$ArraysByteArrayCopier;

        r1 := @parameter0: androidx.wear.tiles.protobuf.ByteString$1;

        specialinvoke r0.<androidx.wear.tiles.protobuf.ByteString$ArraysByteArrayCopier: void <init>()>();

        return;
    }

androidx.wear.tiles.protobuf.ByteString$BoundedByteString
<androidx.wear.tiles.protobuf.ByteString$BoundedByteString: int bytesOffset>
<androidx.wear.tiles.protobuf.ByteString$BoundedByteString: int bytesLength>
<androidx.wear.tiles.protobuf.ByteString$BoundedByteString: long serialVersionUID>
    void <init>(byte[], int, int)
    {
        androidx.wear.tiles.protobuf.ByteString$BoundedByteString r0;
        byte[] r1;
        int i0, i1, $i2, $i3;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$BoundedByteString;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: void <init>(byte[])>(r1);

        $i3 = i0 + i1;

        $i2 = lengthof r1;

        staticinvoke <androidx.wear.tiles.protobuf.ByteString$BoundedByteString: int checkRange(int,int,int)>(i0, $i3, $i2);

        r0.<androidx.wear.tiles.protobuf.ByteString$BoundedByteString: int bytesOffset> = i0;

        r0.<androidx.wear.tiles.protobuf.ByteString$BoundedByteString: int bytesLength> = i1;

        return;
    }

    public byte byteAt(int)
    {
        androidx.wear.tiles.protobuf.ByteString$BoundedByteString r0;
        int i0, $i1, $i2, $i3;
        byte[] $r1;
        byte $b4;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$BoundedByteString;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$BoundedByteString: int size()>();

        staticinvoke <androidx.wear.tiles.protobuf.ByteString$BoundedByteString: void checkIndex(int,int)>(i0, $i1);

        $r1 = r0.<androidx.wear.tiles.protobuf.ByteString$BoundedByteString: byte[] bytes>;

        $i2 = r0.<androidx.wear.tiles.protobuf.ByteString$BoundedByteString: int bytesOffset>;

        $i3 = $i2 + i0;

        $b4 = $r1[$i3];

        return $b4;
    }

    byte internalByteAt(int)
    {
        androidx.wear.tiles.protobuf.ByteString$BoundedByteString r0;
        int i0, $i1, $i2;
        byte[] $r1;
        byte $b3;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$BoundedByteString;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.wear.tiles.protobuf.ByteString$BoundedByteString: byte[] bytes>;

        $i1 = r0.<androidx.wear.tiles.protobuf.ByteString$BoundedByteString: int bytesOffset>;

        $i2 = $i1 + i0;

        $b3 = $r1[$i2];

        return $b3;
    }

    public int size()
    {
        androidx.wear.tiles.protobuf.ByteString$BoundedByteString r0;
        int $i0;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$BoundedByteString;

        $i0 = r0.<androidx.wear.tiles.protobuf.ByteString$BoundedByteString: int bytesLength>;

        return $i0;
    }

    protected int getOffsetIntoBytes()
    {
        androidx.wear.tiles.protobuf.ByteString$BoundedByteString r0;
        int $i0;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$BoundedByteString;

        $i0 = r0.<androidx.wear.tiles.protobuf.ByteString$BoundedByteString: int bytesOffset>;

        return $i0;
    }

    protected void copyToInternal(byte[], int, int, int)
    {
        androidx.wear.tiles.protobuf.ByteString$BoundedByteString r0;
        byte[] r1, $r2;
        int i0, i1, i2, $i3, $i4;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$BoundedByteString;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = r0.<androidx.wear.tiles.protobuf.ByteString$BoundedByteString: byte[] bytes>;

        $i3 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$BoundedByteString: int getOffsetIntoBytes()>();

        $i4 = $i3 + i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i4, r1, i1, i2);

        return;
    }

    java.lang.Object writeReplace()
    {
        androidx.wear.tiles.protobuf.ByteString$BoundedByteString r0;
        byte[] $r1;
        androidx.wear.tiles.protobuf.ByteString $r2;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$BoundedByteString;

        $r1 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$BoundedByteString: byte[] toByteArray()>();

        $r2 = staticinvoke <androidx.wear.tiles.protobuf.ByteString: androidx.wear.tiles.protobuf.ByteString wrap(byte[])>($r1);

        return $r2;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException
    {
        androidx.wear.tiles.protobuf.ByteString$BoundedByteString r0;
        java.io.ObjectInputStream r1;
        java.io.InvalidObjectException $r2;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$BoundedByteString;

        r1 := @parameter0: java.io.ObjectInputStream;

        $r2 = new java.io.InvalidObjectException;

        specialinvoke $r2.<java.io.InvalidObjectException: void <init>(java.lang.String)>("BoundedByteStream instances are not to be serialized directly");

        throw $r2;
    }

androidx.wear.tiles.protobuf.ByteString$ByteArrayCopier
<androidx.wear.tiles.protobuf.ByteString$ByteArrayCopier: byte[] copyFrom(byte[],int,int)>
androidx.wear.tiles.protobuf.ByteString$ByteIterator
<androidx.wear.tiles.protobuf.ByteString$ByteIterator: byte nextByte()>
androidx.wear.tiles.protobuf.ByteString$CodedBuilder
<androidx.wear.tiles.protobuf.ByteString$CodedBuilder: androidx.wear.tiles.protobuf.CodedOutputStream output>
<androidx.wear.tiles.protobuf.ByteString$CodedBuilder: byte[] buffer>
    private void <init>(int)
    {
        androidx.wear.tiles.protobuf.ByteString$CodedBuilder r0;
        int i0;
        byte[] $r1, $r2;
        androidx.wear.tiles.protobuf.CodedOutputStream $r3;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$CodedBuilder;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte)[i0];

        r0.<androidx.wear.tiles.protobuf.ByteString$CodedBuilder: byte[] buffer> = $r1;

        $r2 = r0.<androidx.wear.tiles.protobuf.ByteString$CodedBuilder: byte[] buffer>;

        $r3 = staticinvoke <androidx.wear.tiles.protobuf.CodedOutputStream: androidx.wear.tiles.protobuf.CodedOutputStream newInstance(byte[])>($r2);

        r0.<androidx.wear.tiles.protobuf.ByteString$CodedBuilder: androidx.wear.tiles.protobuf.CodedOutputStream output> = $r3;

        return;
    }

    public androidx.wear.tiles.protobuf.ByteString build()
    {
        androidx.wear.tiles.protobuf.ByteString$CodedBuilder r0;
        androidx.wear.tiles.protobuf.CodedOutputStream $r1;
        androidx.wear.tiles.protobuf.ByteString$LiteralByteString $r2;
        byte[] $r3;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$CodedBuilder;

        $r1 = r0.<androidx.wear.tiles.protobuf.ByteString$CodedBuilder: androidx.wear.tiles.protobuf.CodedOutputStream output>;

        virtualinvoke $r1.<androidx.wear.tiles.protobuf.CodedOutputStream: void checkNoSpaceLeft()>();

        $r2 = new androidx.wear.tiles.protobuf.ByteString$LiteralByteString;

        $r3 = r0.<androidx.wear.tiles.protobuf.ByteString$CodedBuilder: byte[] buffer>;

        specialinvoke $r2.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: void <init>(byte[])>($r3);

        return $r2;
    }

    public androidx.wear.tiles.protobuf.CodedOutputStream getCodedOutput()
    {
        androidx.wear.tiles.protobuf.ByteString$CodedBuilder r0;
        androidx.wear.tiles.protobuf.CodedOutputStream $r1;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$CodedBuilder;

        $r1 = r0.<androidx.wear.tiles.protobuf.ByteString$CodedBuilder: androidx.wear.tiles.protobuf.CodedOutputStream output>;

        return $r1;
    }

    void <init>(int, androidx.wear.tiles.protobuf.ByteString$1)
    {
        androidx.wear.tiles.protobuf.ByteString$CodedBuilder r0;
        int i0;
        androidx.wear.tiles.protobuf.ByteString$1 r1;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$CodedBuilder;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.wear.tiles.protobuf.ByteString$1;

        specialinvoke r0.<androidx.wear.tiles.protobuf.ByteString$CodedBuilder: void <init>(int)>(i0);

        return;
    }

androidx.wear.tiles.protobuf.ByteString$LeafByteString
    void <init>()
    {
        androidx.wear.tiles.protobuf.ByteString$LeafByteString r0;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$LeafByteString;

        specialinvoke r0.<androidx.wear.tiles.protobuf.ByteString: void <init>()>();

        return;
    }

    protected final int getTreeDepth()
    {
        androidx.wear.tiles.protobuf.ByteString$LeafByteString r0;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$LeafByteString;

        return 0;
    }

    protected final boolean isBalanced()
    {
        androidx.wear.tiles.protobuf.ByteString$LeafByteString r0;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$LeafByteString;

        return 1;
    }

    void writeToReverse(androidx.wear.tiles.protobuf.ByteOutput) throws java.io.IOException
    {
        androidx.wear.tiles.protobuf.ByteString$LeafByteString r0;
        androidx.wear.tiles.protobuf.ByteOutput r1;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$LeafByteString;

        r1 := @parameter0: androidx.wear.tiles.protobuf.ByteOutput;

        virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$LeafByteString: void writeTo(androidx.wear.tiles.protobuf.ByteOutput)>(r1);

        return;
    }

<androidx.wear.tiles.protobuf.ByteString$LeafByteString: boolean equalsRange(androidx.wear.tiles.protobuf.ByteString,int,int)>
    public volatile java.util.Iterator iterator()
    {
        androidx.wear.tiles.protobuf.ByteString$LeafByteString r0;
        androidx.wear.tiles.protobuf.ByteString$ByteIterator $r1;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$LeafByteString;

        $r1 = specialinvoke r0.<androidx.wear.tiles.protobuf.ByteString: androidx.wear.tiles.protobuf.ByteString$ByteIterator iterator()>();

        return $r1;
    }

androidx.wear.tiles.protobuf.ByteString$LiteralByteString
<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: long serialVersionUID>
<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: byte[] bytes>
    void <init>(byte[])
    {
        androidx.wear.tiles.protobuf.ByteString$LiteralByteString r0;
        byte[] r1;
        java.lang.NullPointerException $r2;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$LiteralByteString;

        r1 := @parameter0: byte[];

        specialinvoke r0.<androidx.wear.tiles.protobuf.ByteString$LeafByteString: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;

     label1:
        r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: byte[] bytes> = r1;

        return;
    }

    public byte byteAt(int)
    {
        androidx.wear.tiles.protobuf.ByteString$LiteralByteString r0;
        int i0;
        byte[] $r1;
        byte $b1;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$LiteralByteString;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $b1 = $r1[i0];

        return $b1;
    }

    byte internalByteAt(int)
    {
        androidx.wear.tiles.protobuf.ByteString$LiteralByteString r0;
        int i0;
        byte[] $r1;
        byte $b1;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$LiteralByteString;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $b1 = $r1[i0];

        return $b1;
    }

    public int size()
    {
        androidx.wear.tiles.protobuf.ByteString$LiteralByteString r0;
        byte[] $r1;
        int $i0;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$LiteralByteString;

        $r1 = r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public final androidx.wear.tiles.protobuf.ByteString substring(int, int)
    {
        androidx.wear.tiles.protobuf.ByteString$LiteralByteString r0;
        int i0, i1, i2, $i3, $i4, $i5;
        androidx.wear.tiles.protobuf.ByteString$BoundedByteString $r1;
        byte[] $r2;
        androidx.wear.tiles.protobuf.ByteString $r3;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$LiteralByteString;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i3 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: int size()>();

        i2 = staticinvoke <androidx.wear.tiles.protobuf.ByteString$LiteralByteString: int checkRange(int,int,int)>(i0, i1, $i3);

        if i2 != 0 goto label1;

        $r3 = <androidx.wear.tiles.protobuf.ByteString: androidx.wear.tiles.protobuf.ByteString EMPTY>;

        return $r3;

     label1:
        $r1 = new androidx.wear.tiles.protobuf.ByteString$BoundedByteString;

        $r2 = r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i4 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i5 = $i4 + i0;

        specialinvoke $r1.<androidx.wear.tiles.protobuf.ByteString$BoundedByteString: void <init>(byte[],int,int)>($r2, $i5, i2);

        return $r1;
    }

    protected void copyToInternal(byte[], int, int, int)
    {
        androidx.wear.tiles.protobuf.ByteString$LiteralByteString r0;
        byte[] r1, $r2;
        int i0, i1, i2;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$LiteralByteString;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, i0, r1, i1, i2);

        return;
    }

    public final void copyTo(java.nio.ByteBuffer)
    {
        androidx.wear.tiles.protobuf.ByteString$LiteralByteString r0;
        java.nio.ByteBuffer r1;
        byte[] $r2;
        int $i0, $i1;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$LiteralByteString;

        r1 := @parameter0: java.nio.ByteBuffer;

        $r2 = r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i0 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i1 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: int size()>();

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>($r2, $i0, $i1);

        return;
    }

    public final java.nio.ByteBuffer asReadOnlyByteBuffer()
    {
        androidx.wear.tiles.protobuf.ByteString$LiteralByteString r0;
        byte[] $r1;
        int $i0, $i1;
        java.nio.ByteBuffer $r2, $r3;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$LiteralByteString;

        $r1 = r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i0 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i1 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: int size()>();

        $r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>($r1, $i0, $i1);

        $r3 = virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>();

        return $r3;
    }

    public final java.util.List asReadOnlyByteBufferList()
    {
        androidx.wear.tiles.protobuf.ByteString$LiteralByteString r0;
        java.nio.ByteBuffer $r1;
        java.util.List $r2;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$LiteralByteString;

        $r1 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: java.nio.ByteBuffer asReadOnlyByteBuffer()>();

        $r2 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r1);

        return $r2;
    }

    public final void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        androidx.wear.tiles.protobuf.ByteString$LiteralByteString r0;
        java.io.OutputStream r1;
        byte[] $r2;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$LiteralByteString;

        r1 := @parameter0: java.io.OutputStream;

        $r2 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: byte[] toByteArray()>();

        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>($r2);

        return;
    }

    final void writeToInternal(java.io.OutputStream, int, int) throws java.io.IOException
    {
        androidx.wear.tiles.protobuf.ByteString$LiteralByteString r0;
        java.io.OutputStream r1;
        int i0, i1, $i2, $i3;
        byte[] $r2;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$LiteralByteString;

        r1 := @parameter0: java.io.OutputStream;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i2 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i3 = $i2 + i0;

        virtualinvoke r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, $i3, i1);

        return;
    }

    final void writeTo(androidx.wear.tiles.protobuf.ByteOutput) throws java.io.IOException
    {
        androidx.wear.tiles.protobuf.ByteString$LiteralByteString r0;
        androidx.wear.tiles.protobuf.ByteOutput r1;
        byte[] $r2;
        int $i0, $i1;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$LiteralByteString;

        r1 := @parameter0: androidx.wear.tiles.protobuf.ByteOutput;

        $r2 = r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i0 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i1 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: int size()>();

        virtualinvoke r1.<androidx.wear.tiles.protobuf.ByteOutput: void writeLazy(byte[],int,int)>($r2, $i0, $i1);

        return;
    }

    protected final java.lang.String toStringInternal(java.nio.charset.Charset)
    {
        androidx.wear.tiles.protobuf.ByteString$LiteralByteString r0;
        java.nio.charset.Charset r1;
        java.lang.String $r2;
        byte[] $r3;
        int $i0, $i1;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$LiteralByteString;

        r1 := @parameter0: java.nio.charset.Charset;

        $r2 = new java.lang.String;

        $r3 = r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i0 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i1 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: int size()>();

        specialinvoke $r2.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>($r3, $i0, $i1, r1);

        return $r2;
    }

    public final boolean isValidUtf8()
    {
        androidx.wear.tiles.protobuf.ByteString$LiteralByteString r0;
        int i0, $i1, $i2;
        byte[] $r1;
        boolean $z0;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$LiteralByteString;

        i0 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $r1 = r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i1 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: int size()>();

        $i2 = i0 + $i1;

        $z0 = staticinvoke <androidx.wear.tiles.protobuf.Utf8: boolean isValidUtf8(byte[],int,int)>($r1, i0, $i2);

        return $z0;
    }

    protected final int partialIsValidUtf8(int, int, int)
    {
        androidx.wear.tiles.protobuf.ByteString$LiteralByteString r0;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        byte[] $r1;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$LiteralByteString;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i4 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        i3 = $i4 + i1;

        $r1 = r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i5 = i3 + i2;

        $i6 = staticinvoke <androidx.wear.tiles.protobuf.Utf8: int partialIsValidUtf8(int,byte[],int,int)>(i0, $r1, i3, $i5);

        return $i6;
    }

    public final boolean equals(java.lang.Object)
    {
        androidx.wear.tiles.protobuf.ByteString$LiteralByteString r0, r2, $r4;
        java.lang.Object r1;
        int i0, i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1, $z2, $z3;
        androidx.wear.tiles.protobuf.ByteString $r3;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$LiteralByteString;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.wear.tiles.protobuf.ByteString;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $i2 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: int size()>();

        $r3 = (androidx.wear.tiles.protobuf.ByteString) r1;

        $i3 = virtualinvoke $r3.<androidx.wear.tiles.protobuf.ByteString: int size()>();

        if $i2 == $i3 goto label3;

        return 0;

     label3:
        $i4 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: int size()>();

        if $i4 != 0 goto label4;

        return 1;

     label4:
        $z1 = r1 instanceof androidx.wear.tiles.protobuf.ByteString$LiteralByteString;

        if $z1 == 0 goto label6;

        r2 = (androidx.wear.tiles.protobuf.ByteString$LiteralByteString) r1;

        i0 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: int peekCachedHashCode()>();

        i1 = virtualinvoke r2.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: int peekCachedHashCode()>();

        if i0 == 0 goto label5;

        if i1 == 0 goto label5;

        if i0 == i1 goto label5;

        return 0;

     label5:
        $r4 = (androidx.wear.tiles.protobuf.ByteString$LiteralByteString) r1;

        $i5 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: int size()>();

        $z3 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: boolean equalsRange(androidx.wear.tiles.protobuf.ByteString,int,int)>($r4, 0, $i5);

        return $z3;

     label6:
        $z2 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        return $z2;
    }

    final boolean equalsRange(androidx.wear.tiles.protobuf.ByteString, int, int)
    {
        androidx.wear.tiles.protobuf.ByteString$LiteralByteString r0, r2;
        androidx.wear.tiles.protobuf.ByteString r1, $r5, $r6;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i11, $i12, i13, i14;
        byte[] r3, r4;
        boolean $z0, $z1;
        byte $b9, $b10;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r14, $r18, $r19, $r20, r22, r24;
        java.lang.String $r15, $r21;
        java.lang.IllegalArgumentException r23, r25;
        java.lang.Throwable r26, r27;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$LiteralByteString;

        r1 := @parameter0: androidx.wear.tiles.protobuf.ByteString;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i3 = virtualinvoke r1.<androidx.wear.tiles.protobuf.ByteString: int size()>();

        if i1 <= $i3 goto label1;

        r23 = new java.lang.IllegalArgumentException;

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Length too large: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $i12 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: int size()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        r26 = (java.lang.Throwable) r23;

        throw r26;

     label1:
        $i4 = i0 + i1;

        $i5 = virtualinvoke r1.<androidx.wear.tiles.protobuf.ByteString: int size()>();

        if $i4 <= $i5 goto label2;

        r25 = new java.lang.IllegalArgumentException;

        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ran off end of other: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i11 = virtualinvoke r1.<androidx.wear.tiles.protobuf.ByteString: int size()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        r27 = (java.lang.Throwable) r25;

        throw r27;

     label2:
        $z0 = r1 instanceof androidx.wear.tiles.protobuf.ByteString$LiteralByteString;

        if $z0 == 0 goto label6;

        r2 = (androidx.wear.tiles.protobuf.ByteString$LiteralByteString) r1;

        r3 = r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        r4 = r2.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i7 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        i2 = $i7 + i1;

        i13 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i8 = virtualinvoke r2.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        i14 = $i8 + i0;

     label3:
        if i13 >= i2 goto label5;

        $b10 = r3[i13];

        $b9 = r4[i14];

        if $b10 == $b9 goto label4;

        return 0;

     label4:
        i13 = i13 + 1;

        i14 = i14 + 1;

        goto label3;

     label5:
        return 1;

     label6:
        $i6 = i0 + i1;

        $r5 = virtualinvoke r1.<androidx.wear.tiles.protobuf.ByteString: androidx.wear.tiles.protobuf.ByteString substring(int,int)>(i0, $i6);

        $r6 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: androidx.wear.tiles.protobuf.ByteString substring(int,int)>(0, i1);

        $z1 = virtualinvoke $r5.<androidx.wear.tiles.protobuf.ByteString: boolean equals(java.lang.Object)>($r6);

        return $z1;
    }

    protected final int partialHash(int, int, int)
    {
        androidx.wear.tiles.protobuf.ByteString$LiteralByteString r0;
        int i0, i1, i2, $i3, $i4, $i5;
        byte[] $r1;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$LiteralByteString;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i3 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i4 = $i3 + i1;

        $i5 = staticinvoke <androidx.wear.tiles.protobuf.Internal: int partialHash(int,byte[],int,int)>(i0, $r1, $i4, i2);

        return $i5;
    }

    public final java.io.InputStream newInput()
    {
        androidx.wear.tiles.protobuf.ByteString$LiteralByteString r0;
        java.io.ByteArrayInputStream $r1;
        byte[] $r2;
        int $i0, $i1;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$LiteralByteString;

        $r1 = new java.io.ByteArrayInputStream;

        $r2 = r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i0 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i1 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: int size()>();

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>($r2, $i0, $i1);

        return $r1;
    }

    public final androidx.wear.tiles.protobuf.CodedInputStream newCodedInput()
    {
        androidx.wear.tiles.protobuf.ByteString$LiteralByteString r0;
        byte[] $r1;
        int $i0, $i1;
        androidx.wear.tiles.protobuf.CodedInputStream $r2;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$LiteralByteString;

        $r1 = r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i0 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i1 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: int size()>();

        $r2 = staticinvoke <androidx.wear.tiles.protobuf.CodedInputStream: androidx.wear.tiles.protobuf.CodedInputStream newInstance(byte[],int,int,boolean)>($r1, $i0, $i1, 1);

        return $r2;
    }

    protected int getOffsetIntoBytes()
    {
        androidx.wear.tiles.protobuf.ByteString$LiteralByteString r0;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$LiteralByteString;

        return 0;
    }

androidx.wear.tiles.protobuf.ByteString$Output
<androidx.wear.tiles.protobuf.ByteString$Output: byte[] EMPTY_BYTE_ARRAY>
<androidx.wear.tiles.protobuf.ByteString$Output: int initialCapacity>
<androidx.wear.tiles.protobuf.ByteString$Output: java.util.ArrayList flushedBuffers>
<androidx.wear.tiles.protobuf.ByteString$Output: int flushedBuffersTotalBytes>
<androidx.wear.tiles.protobuf.ByteString$Output: byte[] buffer>
<androidx.wear.tiles.protobuf.ByteString$Output: int bufferPos>
    void <init>(int)
    {
        androidx.wear.tiles.protobuf.ByteString$Output r0;
        int i0;
        byte[] $r2;
        java.lang.IllegalArgumentException r4;
        java.util.ArrayList r5;
        java.lang.Throwable r6;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$Output;

        i0 := @parameter0: int;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        if i0 >= 0 goto label1;

        r4 = new java.lang.IllegalArgumentException;

        specialinvoke r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Buffer size < 0");

        r6 = (java.lang.Throwable) r4;

        throw r6;

     label1:
        r0.<androidx.wear.tiles.protobuf.ByteString$Output: int initialCapacity> = i0;

        r5 = new java.util.ArrayList;

        specialinvoke r5.<java.util.ArrayList: void <init>()>();

        r0.<androidx.wear.tiles.protobuf.ByteString$Output: java.util.ArrayList flushedBuffers> = r5;

        $r2 = newarray (byte)[i0];

        r0.<androidx.wear.tiles.protobuf.ByteString$Output: byte[] buffer> = $r2;

        return;
    }

    public synchronized void write(int)
    {
        androidx.wear.tiles.protobuf.ByteString$Output r0;
        int i0, $i1, $i2, $i3, $i4;
        byte[] $r1, $r2;
        byte $b5;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$Output;

        i0 := @parameter0: int;

        $i2 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: int bufferPos>;

        $r1 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: byte[] buffer>;

        $i1 = lengthof $r1;

        if $i2 != $i1 goto label1;

        specialinvoke r0.<androidx.wear.tiles.protobuf.ByteString$Output: void flushFullBuffer(int)>(1);

     label1:
        $r2 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: byte[] buffer>;

        $i3 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: int bufferPos>;

        $i4 = $i3 + 1;

        r0.<androidx.wear.tiles.protobuf.ByteString$Output: int bufferPos> = $i4;

        $b5 = (byte) i0;

        $r2[$i3] = $b5;

        return;
    }

    public synchronized void write(byte[], int, int)
    {
        androidx.wear.tiles.protobuf.ByteString$Output r0;
        byte[] r1, $r2, $r3, $r4, $r5, $r6;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$Output;

        r1 := @parameter0: byte[];

        i10 := @parameter1: int;

        i11 := @parameter2: int;

        $r2 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: byte[] buffer>;

        $i2 = lengthof $r2;

        $i1 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: int bufferPos>;

        $i3 = $i2 - $i1;

        if i11 > $i3 goto label1;

        $r6 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: byte[] buffer>;

        $i7 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: int bufferPos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i10, $r6, $i7, i11);

        $i8 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: int bufferPos>;

        $i9 = $i8 + i11;

        r0.<androidx.wear.tiles.protobuf.ByteString$Output: int bufferPos> = $i9;

        goto label2;

     label1:
        $r3 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: byte[] buffer>;

        $i5 = lengthof $r3;

        $i4 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: int bufferPos>;

        i0 = $i5 - $i4;

        $r4 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: byte[] buffer>;

        $i6 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: int bufferPos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i10, $r4, $i6, i0);

        i12 = i10 + i0;

        i13 = i11 - i0;

        specialinvoke r0.<androidx.wear.tiles.protobuf.ByteString$Output: void flushFullBuffer(int)>(i13);

        $r5 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: byte[] buffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i12, $r5, 0, i13);

        r0.<androidx.wear.tiles.protobuf.ByteString$Output: int bufferPos> = i13;

     label2:
        return;
    }

    public synchronized androidx.wear.tiles.protobuf.ByteString toByteString()
    {
        androidx.wear.tiles.protobuf.ByteString$Output r0;
        java.util.ArrayList $r1;
        androidx.wear.tiles.protobuf.ByteString $r2;
        java.lang.Iterable r3;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$Output;

        specialinvoke r0.<androidx.wear.tiles.protobuf.ByteString$Output: void flushLastBuffer()>();

        $r1 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: java.util.ArrayList flushedBuffers>;

        r3 = (java.lang.Iterable) $r1;

        $r2 = staticinvoke <androidx.wear.tiles.protobuf.ByteString: androidx.wear.tiles.protobuf.ByteString copyFrom(java.lang.Iterable)>(r3);

        return $r2;
    }

    private byte[] copyArray(byte[], int)
    {
        androidx.wear.tiles.protobuf.ByteString$Output r0;
        byte[] r1, r2;
        int i0, $i1, $i2;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$Output;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r2 = newarray (byte)[i0];

        $i1 = lengthof r1;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i1, i0);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, 0, $i2);

        return r2;
    }

    public void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        androidx.wear.tiles.protobuf.ByteString$Output r0, r12;
        java.io.OutputStream r1;
        androidx.wear.tiles.protobuf.ByteString[] r2, $r8, r14;
        byte[] r3, $r10;
        int i0, $i1, i2, i3;
        androidx.wear.tiles.protobuf.ByteString r4;
        java.util.ArrayList $r6, $r7;
        java.lang.Object[] $r9;
        java.lang.Throwable $r11, r13;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$Output;

        r1 := @parameter0: java.io.OutputStream;

        r12 = r0;

        entermonitor r0;

     label1:
        $r7 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: java.util.ArrayList flushedBuffers>;

        $r6 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: java.util.ArrayList flushedBuffers>;

        $i1 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        $r8 = newarray (androidx.wear.tiles.protobuf.ByteString)[$i1];

        $r9 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        r2 = (androidx.wear.tiles.protobuf.ByteString[]) $r9;

        r3 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: byte[] buffer>;

        i0 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: int bufferPos>;

        exitmonitor r12;

     label2:
        goto label5;

     label3:
        $r11 := @caughtexception;

        r13 = $r11;

        exitmonitor r12;

     label4:
        throw r13;

     label5:
        r14 = r2;

        i2 = lengthof r14;

        i3 = 0;

     label6:
        if i3 >= i2 goto label7;

        r4 = r14[i3];

        virtualinvoke r4.<androidx.wear.tiles.protobuf.ByteString: void writeTo(java.io.OutputStream)>(r1);

        i3 = i3 + 1;

        goto label6;

     label7:
        $r10 = specialinvoke r0.<androidx.wear.tiles.protobuf.ByteString$Output: byte[] copyArray(byte[],int)>(r3, i0);

        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>($r10);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public synchronized int size()
    {
        androidx.wear.tiles.protobuf.ByteString$Output r0;
        int $i0, $i1, $i2;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$Output;

        $i1 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: int flushedBuffersTotalBytes>;

        $i0 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: int bufferPos>;

        $i2 = $i1 + $i0;

        return $i2;
    }

    public synchronized void reset()
    {
        androidx.wear.tiles.protobuf.ByteString$Output r0;
        java.util.ArrayList $r1;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$Output;

        $r1 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: java.util.ArrayList flushedBuffers>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        r0.<androidx.wear.tiles.protobuf.ByteString$Output: int flushedBuffersTotalBytes> = 0;

        r0.<androidx.wear.tiles.protobuf.ByteString$Output: int bufferPos> = 0;

        return;
    }

    public java.lang.String toString()
    {
        androidx.wear.tiles.protobuf.ByteString$Output r0;
        java.lang.Object[] $r1;
        int $i0, $i1;
        java.lang.String $r2, $r4;
        java.lang.Integer $r3;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$Output;

        $r1 = newarray (java.lang.Object)[2];

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r1[0] = $r2;

        $i1 = virtualinvoke r0.<androidx.wear.tiles.protobuf.ByteString$Output: int size()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[1] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("<ByteString.Output@%s size=%d>", $r1);

        return $r4;
    }

    private void flushFullBuffer(int)
    {
        androidx.wear.tiles.protobuf.ByteString$Output r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        androidx.wear.tiles.protobuf.ByteString$LiteralByteString $r1;
        byte[] $r2, $r4, $r5;
        java.util.ArrayList $r3;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$Output;

        i0 := @parameter0: int;

        $r3 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: java.util.ArrayList flushedBuffers>;

        $r1 = new androidx.wear.tiles.protobuf.ByteString$LiteralByteString;

        $r2 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: byte[] buffer>;

        specialinvoke $r1.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: void <init>(byte[])>($r2);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $i3 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: int flushedBuffersTotalBytes>;

        $r4 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: byte[] buffer>;

        $i2 = lengthof $r4;

        $i4 = $i3 + $i2;

        r0.<androidx.wear.tiles.protobuf.ByteString$Output: int flushedBuffersTotalBytes> = $i4;

        $i7 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: int initialCapacity>;

        $i5 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: int flushedBuffersTotalBytes>;

        $i6 = $i5 >>> 1;

        $i8 = staticinvoke <java.lang.Math: int max(int,int)>(i0, $i6);

        i1 = staticinvoke <java.lang.Math: int max(int,int)>($i7, $i8);

        $r5 = newarray (byte)[i1];

        r0.<androidx.wear.tiles.protobuf.ByteString$Output: byte[] buffer> = $r5;

        r0.<androidx.wear.tiles.protobuf.ByteString$Output: int bufferPos> = 0;

        return;
    }

    private void flushLastBuffer()
    {
        androidx.wear.tiles.protobuf.ByteString$Output r0;
        byte[] r1, $r2, $r4, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        androidx.wear.tiles.protobuf.ByteString$LiteralByteString $r3, $r8;
        java.util.ArrayList $r5, $r9;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$Output;

        $i1 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: int bufferPos>;

        $r2 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: byte[] buffer>;

        $i0 = lengthof $r2;

        if $i1 >= $i0 goto label1;

        $i2 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: int bufferPos>;

        if $i2 <= 0 goto label2;

        $r7 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: byte[] buffer>;

        $i3 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: int bufferPos>;

        r1 = specialinvoke r0.<androidx.wear.tiles.protobuf.ByteString$Output: byte[] copyArray(byte[],int)>($r7, $i3);

        $r9 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: java.util.ArrayList flushedBuffers>;

        $r8 = new androidx.wear.tiles.protobuf.ByteString$LiteralByteString;

        specialinvoke $r8.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: void <init>(byte[])>(r1);

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        goto label2;

     label1:
        $r5 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: java.util.ArrayList flushedBuffers>;

        $r3 = new androidx.wear.tiles.protobuf.ByteString$LiteralByteString;

        $r4 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: byte[] buffer>;

        specialinvoke $r3.<androidx.wear.tiles.protobuf.ByteString$LiteralByteString: void <init>(byte[])>($r4);

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $r6 = <androidx.wear.tiles.protobuf.ByteString$Output: byte[] EMPTY_BYTE_ARRAY>;

        r0.<androidx.wear.tiles.protobuf.ByteString$Output: byte[] buffer> = $r6;

     label2:
        $i4 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: int flushedBuffersTotalBytes>;

        $i5 = r0.<androidx.wear.tiles.protobuf.ByteString$Output: int bufferPos>;

        $i6 = $i4 + $i5;

        r0.<androidx.wear.tiles.protobuf.ByteString$Output: int flushedBuffersTotalBytes> = $i6;

        r0.<androidx.wear.tiles.protobuf.ByteString$Output: int bufferPos> = 0;

        return;
    }

    static void <clinit>()
    {
        byte[] $r0;

        $r0 = newarray (byte)[0];

        <androidx.wear.tiles.protobuf.ByteString$Output: byte[] EMPTY_BYTE_ARRAY> = $r0;

        return;
    }

androidx.wear.tiles.protobuf.ByteString$SystemByteArrayCopier
    private void <init>()
    {
        androidx.wear.tiles.protobuf.ByteString$SystemByteArrayCopier r0;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$SystemByteArrayCopier;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public byte[] copyFrom(byte[], int, int)
    {
        androidx.wear.tiles.protobuf.ByteString$SystemByteArrayCopier r0;
        byte[] r1, r2;
        int i0, i1;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$SystemByteArrayCopier;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = newarray (byte)[i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, r2, 0, i1);

        return r2;
    }

    void <init>(androidx.wear.tiles.protobuf.ByteString$1)
    {
        androidx.wear.tiles.protobuf.ByteString$SystemByteArrayCopier r0;
        androidx.wear.tiles.protobuf.ByteString$1 r1;

        r0 := @this: androidx.wear.tiles.protobuf.ByteString$SystemByteArrayCopier;

        r1 := @parameter0: androidx.wear.tiles.protobuf.ByteString$1;

        specialinvoke r0.<androidx.wear.tiles.protobuf.ByteString$SystemByteArrayCopier: void <init>()>();

        return;
    }

