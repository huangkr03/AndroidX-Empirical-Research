com.google.protobuf.Utf8
<com.google.protobuf.Utf8: com.google.protobuf.Utf8$Processor processor>
    static volatile int '-$$Nest$smincompleteStateFor'(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = staticinvoke <com.google.protobuf.Utf8: int incompleteStateFor(int)>($i0);

        return $i0;
    }

    static volatile int '-$$Nest$smincompleteStateFor'(int, int)
    {
        int $i0, $i1;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 = staticinvoke <com.google.protobuf.Utf8: int incompleteStateFor(int,int)>($i1, $i0);

        return $i1;
    }

    static volatile int '-$$Nest$smincompleteStateFor'(int, int, int)
    {
        int $i0, $i1, $i2;

        $i2 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = staticinvoke <com.google.protobuf.Utf8: int incompleteStateFor(int,int,int)>($i2, $i0, $i1);

        return $i2;
    }

    static volatile int '-$$Nest$smincompleteStateFor'(byte[], int, int)
    {
        int $i0, $i1;
        byte[] $r0;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i0 = staticinvoke <com.google.protobuf.Utf8: int incompleteStateFor(byte[],int,int)>($r0, $i0, $i1);

        return $i0;
    }

    static void <clinit>()
    {
        boolean $z0;
        com.google.protobuf.Utf8$Processor $r0;
        com.google.protobuf.Utf8$UnsafeProcessor r1;
        com.google.protobuf.Utf8$SafeProcessor r2;

        $z0 = staticinvoke <com.google.protobuf.Utf8$UnsafeProcessor: boolean isAvailable()>();

        if $z0 == 0 goto label1;

        $z0 = staticinvoke <com.google.protobuf.Android: boolean isOnAndroidDevice()>();

        if $z0 != 0 goto label1;

        r1 = new com.google.protobuf.Utf8$UnsafeProcessor;

        $r0 = r1;

        specialinvoke r1.<com.google.protobuf.Utf8$UnsafeProcessor: void <init>()>();

        goto label2;

     label1:
        r2 = new com.google.protobuf.Utf8$SafeProcessor;

        $r0 = r2;

        specialinvoke r2.<com.google.protobuf.Utf8$SafeProcessor: void <init>()>();

     label2:
        <com.google.protobuf.Utf8: com.google.protobuf.Utf8$Processor processor> = $r0;

        return;
    }

    static java.lang.String decodeUtf8(byte[], int, int) throws com.google.protobuf.InvalidProtocolBufferException
    {
        int $i0, $i1;
        com.google.protobuf.Utf8$Processor $r0;
        java.lang.String $r1;
        byte[] $r2;

        $r2 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r0 = <com.google.protobuf.Utf8: com.google.protobuf.Utf8$Processor processor>;

        $r1 = virtualinvoke $r0.<com.google.protobuf.Utf8$Processor: java.lang.String decodeUtf8(byte[],int,int)>($r2, $i0, $i1);

        return $r1;
    }

    static int encode(java.lang.CharSequence, byte[], int, int)
    {
        byte[] $r0;
        int $i0, $i1;
        com.google.protobuf.Utf8$Processor $r1;
        java.lang.CharSequence $r2;

        $r2 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r1 = <com.google.protobuf.Utf8: com.google.protobuf.Utf8$Processor processor>;

        $i0 = virtualinvoke $r1.<com.google.protobuf.Utf8$Processor: int encodeUtf8(java.lang.CharSequence,byte[],int,int)>($r2, $r0, $i0, $i1);

        return $i0;
    }

    static int encodedLength(java.lang.CharSequence)
    {
        java.lang.CharSequence $r0;
        int $i0, $i1, $i3, $i4;
        char $c2;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2;
        long $l5;
        java.lang.String $r3;

        $r0 := @parameter0: java.lang.CharSequence;

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i1);

        if $c2 >= 128 goto label2;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $i3 = $i0;

     label3:
        if $i1 >= $i0 goto label5;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i1);

        if $c2 >= 2048 goto label4;

        $i4 = 127 - $c2;

        $i4 = $i4 >>> 31;

        $i3 = $i3 + $i4;

        $i1 = $i1 + 1;

        goto label3;

     label4:
        $i1 = staticinvoke <com.google.protobuf.Utf8: int encodedLengthGeneral(java.lang.CharSequence,int)>($r0, $i1);

        $i3 = $i3 + $i1;

        goto label5;

     label5:
        if $i3 < $i0 goto label6;

        return $i3;

     label6:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UTF-8 length does not fit in int: ");

        $l5 = (long) $i3;

        $l5 = $l5 + 4294967296L;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        goto label7;

     label7:
        throw $r1;
    }

    private static int encodedLengthGeneral(java.lang.CharSequence, int)
    {
        java.lang.CharSequence $r0;
        int $i0, $i1, $i2, $i4;
        char $c3;
        com.google.protobuf.Utf8$UnpairedSurrogateException $r1;

        $r0 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $i2 = 0;

     label1:
        if $i0 >= $i1 goto label6;

        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        if $c3 >= 2048 goto label3;

        $i4 = 127 - $c3;

        $i4 = $i4 >>> 31;

        $i2 = $i2 + $i4;

     label2:
        goto label5;

     label3:
        $i2 = $i2 + 2;

        if $c3 < 55296 goto label2;

        if $c3 > 57343 goto label2;

        $i4 = staticinvoke <java.lang.Character: int codePointAt(java.lang.CharSequence,int)>($r0, $i0);

        if $i4 < 65536 goto label4;

        $i0 = $i0 + 1;

        goto label2;

     label4:
        $r1 = new com.google.protobuf.Utf8$UnpairedSurrogateException;

        specialinvoke $r1.<com.google.protobuf.Utf8$UnpairedSurrogateException: void <init>(int,int)>($i0, $i1);

        throw $r1;

     label5:
        $i0 = $i0 + 1;

        goto label1;

     label6:
        return $i2;
    }

    private static int incompleteStateFor(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        if $i0 <= -12 goto label1;

        return -1;

     label1:
        return $i0;
    }

    private static int incompleteStateFor(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 > -12 goto label2;

        if $i1 <= -65 goto label1;

        goto label2;

     label1:
        $i1 = $i1 << 8;

        $i0 = $i0 ^ $i1;

        return $i0;

     label2:
        return -1;
    }

    private static int incompleteStateFor(int, int, int)
    {
        int $i0, $i1, $i2;

        $i1 := @parameter0: int;

        $i2 := @parameter1: int;

        $i0 := @parameter2: int;

        if $i1 > -12 goto label2;

        if $i2 > -65 goto label2;

        if $i0 <= -65 goto label1;

        goto label2;

     label1:
        $i2 = $i2 << 8;

        $i1 = $i1 ^ $i2;

        $i2 = $i0 << 16;

        $i1 = $i1 ^ $i2;

        goto label3;

     label2:
        $i1 = -1;

     label3:
        return $i1;
    }

    private static int incompleteStateFor(byte[], int, int)
    {
        byte[] $r0;
        int $i0, $i1, $i2;
        byte $b3, $b4, $b5;
        java.lang.AssertionError $r1;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = $i0 + -1;

        $b3 = $r0[$i2];

        $i1 = $i1 - $i0;

        lookupswitch($i1)
        {
            case 0: goto label4;
            case 1: goto label3;
            case 2: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label2:
        $b4 = $r0[$i0];

        $i0 = $i0 + 1;

        $b5 = $r0[$i0];

        $i0 = staticinvoke <com.google.protobuf.Utf8: int incompleteStateFor(int,int,int)>($b3, $b4, $b5);

        return $i0;

     label3:
        $b4 = $r0[$i0];

        $i0 = staticinvoke <com.google.protobuf.Utf8: int incompleteStateFor(int,int)>($b3, $b4);

        return $i0;

     label4:
        $i0 = staticinvoke <com.google.protobuf.Utf8: int incompleteStateFor(int)>($b3);

        return $i0;
    }

    static boolean isValidUtf8(byte[])
    {
        com.google.protobuf.Utf8$Processor $r0;
        int $i0;
        boolean $z0;
        byte[] $r1;

        $r1 := @parameter0: byte[];

        $r0 = <com.google.protobuf.Utf8: com.google.protobuf.Utf8$Processor processor>;

        $i0 = lengthof $r1;

        $z0 = virtualinvoke $r0.<com.google.protobuf.Utf8$Processor: boolean isValidUtf8(byte[],int,int)>($r1, 0, $i0);

        return $z0;
    }

    static boolean isValidUtf8(byte[], int, int)
    {
        int $i0, $i1;
        com.google.protobuf.Utf8$Processor $r0;
        boolean $z0;
        byte[] $r1;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r0 = <com.google.protobuf.Utf8: com.google.protobuf.Utf8$Processor processor>;

        $z0 = virtualinvoke $r0.<com.google.protobuf.Utf8$Processor: boolean isValidUtf8(byte[],int,int)>($r1, $i0, $i1);

        return $z0;
    }

com.google.protobuf.Utf8$DecodeUtil
    static volatile void '-$$Nest$smhandleFourBytes'(byte, byte, byte, byte, char[], int)
    {
        byte $b0, $b1, $b2, $b3;
        char[] $r0;
        int $i4;

        $b0 := @parameter0: byte;

        $b1 := @parameter1: byte;

        $b2 := @parameter2: byte;

        $b3 := @parameter3: byte;

        $r0 := @parameter4: char[];

        $i4 := @parameter5: int;

        staticinvoke <com.google.protobuf.Utf8$DecodeUtil: void handleFourBytes(byte,byte,byte,byte,char[],int)>($b0, $b1, $b2, $b3, $r0, $i4);

        return;
    }

    static volatile void '-$$Nest$smhandleOneByte'(byte, char[], int)
    {
        byte $b0;
        char[] $r0;
        int $i1;

        $b0 := @parameter0: byte;

        $r0 := @parameter1: char[];

        $i1 := @parameter2: int;

        staticinvoke <com.google.protobuf.Utf8$DecodeUtil: void handleOneByte(byte,char[],int)>($b0, $r0, $i1);

        return;
    }

    static volatile void '-$$Nest$smhandleThreeBytes'(byte, byte, byte, char[], int)
    {
        byte $b0, $b1, $b2;
        char[] $r0;
        int $i3;

        $b0 := @parameter0: byte;

        $b1 := @parameter1: byte;

        $b2 := @parameter2: byte;

        $r0 := @parameter3: char[];

        $i3 := @parameter4: int;

        staticinvoke <com.google.protobuf.Utf8$DecodeUtil: void handleThreeBytes(byte,byte,byte,char[],int)>($b0, $b1, $b2, $r0, $i3);

        return;
    }

    static volatile void '-$$Nest$smhandleTwoBytes'(byte, byte, char[], int)
    {
        byte $b0, $b1;
        char[] $r0;
        int $i2;

        $b0 := @parameter0: byte;

        $b1 := @parameter1: byte;

        $r0 := @parameter2: char[];

        $i2 := @parameter3: int;

        staticinvoke <com.google.protobuf.Utf8$DecodeUtil: void handleTwoBytes(byte,byte,char[],int)>($b0, $b1, $r0, $i2);

        return;
    }

    static volatile boolean '-$$Nest$smisOneByte'(byte)
    {
        boolean $z0;
        byte $b0;

        $b0 := @parameter0: byte;

        $z0 = staticinvoke <com.google.protobuf.Utf8$DecodeUtil: boolean isOneByte(byte)>($b0);

        return $z0;
    }

    static volatile boolean '-$$Nest$smisThreeBytes'(byte)
    {
        boolean $z0;
        byte $b0;

        $b0 := @parameter0: byte;

        $z0 = staticinvoke <com.google.protobuf.Utf8$DecodeUtil: boolean isThreeBytes(byte)>($b0);

        return $z0;
    }

    static volatile boolean '-$$Nest$smisTwoBytes'(byte)
    {
        boolean $z0;
        byte $b0;

        $b0 := @parameter0: byte;

        $z0 = staticinvoke <com.google.protobuf.Utf8$DecodeUtil: boolean isTwoBytes(byte)>($b0);

        return $z0;
    }

    private static void handleFourBytes(byte, byte, byte, byte, char[], int) throws com.google.protobuf.InvalidProtocolBufferException
    {
        byte $b0, $b1, $b3, $b4;
        char[] $r0;
        int $i2, $i5, $i6;
        boolean $z0;
        char $c7;
        com.google.protobuf.InvalidProtocolBufferException $r1;
        java.lang.Throwable r2;

        $b3 := @parameter0: byte;

        $b4 := @parameter1: byte;

        $b0 := @parameter2: byte;

        $b1 := @parameter3: byte;

        $r0 := @parameter4: char[];

        $i5 := @parameter5: int;

        $z0 = staticinvoke <com.google.protobuf.Utf8$DecodeUtil: boolean isNotTrailingByte(byte)>($b4);

        if $z0 != 0 goto label1;

        $i6 = $b3 << 28;

        $i2 = $b4 + 112;

        $i2 = $i6 + $i2;

        $i2 = $i2 >> 30;

        if $i2 != 0 goto label1;

        $z0 = staticinvoke <com.google.protobuf.Utf8$DecodeUtil: boolean isNotTrailingByte(byte)>($b0);

        if $z0 != 0 goto label1;

        $z0 = staticinvoke <com.google.protobuf.Utf8$DecodeUtil: boolean isNotTrailingByte(byte)>($b1);

        if $z0 != 0 goto label1;

        $b3 = $b3 & 7;

        $i2 = $b3 << 18;

        $i6 = staticinvoke <com.google.protobuf.Utf8$DecodeUtil: int trailingByteValue(byte)>($b4);

        $i6 = $i6 << 12;

        $i2 = $i2 | $i6;

        $i6 = staticinvoke <com.google.protobuf.Utf8$DecodeUtil: int trailingByteValue(byte)>($b0);

        $i6 = $i6 << 6;

        $i2 = $i2 | $i6;

        $i6 = staticinvoke <com.google.protobuf.Utf8$DecodeUtil: int trailingByteValue(byte)>($b1);

        $i2 = $i2 | $i6;

        $c7 = staticinvoke <com.google.protobuf.Utf8$DecodeUtil: char highSurrogate(int)>($i2);

        $r0[$i5] = $c7;

        $i5 = $i5 + 1;

        $c7 = staticinvoke <com.google.protobuf.Utf8$DecodeUtil: char lowSurrogate(int)>($i2);

        $r0[$i5] = $c7;

        return;

     label1:
        $r1 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException invalidUtf8()>();

        r2 = (java.lang.Throwable) $r1;

        throw r2;
    }

    private static void handleOneByte(byte, char[], int)
    {
        char[] $r0;
        int $i0;
        byte $b1;
        char $c2;

        $b1 := @parameter0: byte;

        $r0 := @parameter1: char[];

        $i0 := @parameter2: int;

        $c2 = (char) $b1;

        $r0[$i0] = $c2;

        return;
    }

    private static void handleThreeBytes(byte, byte, byte, char[], int) throws com.google.protobuf.InvalidProtocolBufferException
    {
        byte $b0, $b2, $b3;
        char[] $r0;
        int $i1, $i4, $i5;
        boolean $z0;
        char $c6;
        com.google.protobuf.InvalidProtocolBufferException $r1;
        java.lang.Throwable r2;

        $b2 := @parameter0: byte;

        $b3 := @parameter1: byte;

        $b0 := @parameter2: byte;

        $r0 := @parameter3: char[];

        $i1 := @parameter4: int;

        $z0 = staticinvoke <com.google.protobuf.Utf8$DecodeUtil: boolean isNotTrailingByte(byte)>($b3);

        if $z0 != 0 goto label3;

        if $b2 != -32 goto label1;

        if $b3 < -96 goto label3;

     label1:
        if $b2 != -19 goto label2;

        if $b3 >= -96 goto label3;

     label2:
        $z0 = staticinvoke <com.google.protobuf.Utf8$DecodeUtil: boolean isNotTrailingByte(byte)>($b0);

        if $z0 != 0 goto label3;

        $b2 = $b2 & 15;

        $i4 = $b2 << 12;

        $i5 = staticinvoke <com.google.protobuf.Utf8$DecodeUtil: int trailingByteValue(byte)>($b3);

        $i5 = $i5 << 6;

        $i4 = $i4 | $i5;

        $i5 = staticinvoke <com.google.protobuf.Utf8$DecodeUtil: int trailingByteValue(byte)>($b0);

        $i4 = $i4 | $i5;

        $c6 = (char) $i4;

        $r0[$i1] = $c6;

        return;

     label3:
        $r1 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException invalidUtf8()>();

        r2 = (java.lang.Throwable) $r1;

        throw r2;
    }

    private static void handleTwoBytes(byte, byte, char[], int) throws com.google.protobuf.InvalidProtocolBufferException
    {
        char[] $r0;
        int $i0, $i3, $i4;
        byte $b1, $b2;
        boolean $z0;
        char $c5;
        com.google.protobuf.InvalidProtocolBufferException $r1;
        java.lang.Throwable r2;

        $b1 := @parameter0: byte;

        $b2 := @parameter1: byte;

        $r0 := @parameter2: char[];

        $i0 := @parameter3: int;

        if $b1 < -62 goto label1;

        $z0 = staticinvoke <com.google.protobuf.Utf8$DecodeUtil: boolean isNotTrailingByte(byte)>($b2);

        if $z0 != 0 goto label1;

        $b1 = $b1 & 31;

        $i3 = $b1 << 6;

        $i4 = staticinvoke <com.google.protobuf.Utf8$DecodeUtil: int trailingByteValue(byte)>($b2);

        $i3 = $i3 | $i4;

        $c5 = (char) $i3;

        $r0[$i0] = $c5;

        return;

     label1:
        $r1 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException invalidUtf8()>();

        r2 = (java.lang.Throwable) $r1;

        throw r2;
    }

    private static char highSurrogate(int)
    {
        int $i0;
        char $c1;

        $i0 := @parameter0: int;

        $i0 = $i0 >>> 10;

        $i0 = $i0 + 55232;

        $c1 = (char) $i0;

        return $c1;
    }

    private static boolean isNotTrailingByte(byte)
    {
        byte $b0;

        $b0 := @parameter0: byte;

        if $b0 <= -65 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static boolean isOneByte(byte)
    {
        byte $b0;

        $b0 := @parameter0: byte;

        if $b0 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static boolean isThreeBytes(byte)
    {
        byte $b0;

        $b0 := @parameter0: byte;

        if $b0 >= -16 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static boolean isTwoBytes(byte)
    {
        byte $b0;

        $b0 := @parameter0: byte;

        if $b0 >= -32 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static char lowSurrogate(int)
    {
        int $i0;
        char $c1;

        $i0 := @parameter0: int;

        $i0 = $i0 & 1023;

        $i0 = $i0 + 56320;

        $c1 = (char) $i0;

        return $c1;
    }

    private static int trailingByteValue(byte)
    {
        byte $b0;

        $b0 := @parameter0: byte;

        $b0 = $b0 & 63;

        return $b0;
    }

com.google.protobuf.Utf8$Processor
    void <init>()
    {
        com.google.protobuf.Utf8$Processor $r0;

        $r0 := @this: com.google.protobuf.Utf8$Processor;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

<com.google.protobuf.Utf8$Processor: java.lang.String decodeUtf8(byte[],int,int)>
<com.google.protobuf.Utf8$Processor: int encodeUtf8(java.lang.CharSequence,byte[],int,int)>
    final boolean isValidUtf8(byte[], int, int)
    {
        com.google.protobuf.Utf8$Processor $r0;
        int $i0, $i1;
        byte[] $r1;

        $r0 := @this: com.google.protobuf.Utf8$Processor;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i0 = virtualinvoke $r0.<com.google.protobuf.Utf8$Processor: int partialIsValidUtf8(int,byte[],int,int)>(0, $r1, $i0, $i1);

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

<com.google.protobuf.Utf8$Processor: int partialIsValidUtf8(int,byte[],int,int)>
com.google.protobuf.Utf8$SafeProcessor
    void <init>()
    {
        com.google.protobuf.Utf8$SafeProcessor $r0;

        $r0 := @this: com.google.protobuf.Utf8$SafeProcessor;

        specialinvoke $r0.<com.google.protobuf.Utf8$Processor: void <init>()>();

        return;
    }

    private static int partialIsValidUtf8(byte[], int, int)
    {
        int $i0, $i2;
        byte $b1;
        byte[] $r0;

        $r0 := @parameter0: byte[];

        $i2 := @parameter1: int;

        $i0 := @parameter2: int;

     label1:
        if $i2 >= $i0 goto label2;

        $b1 = $r0[$i2];

        if $b1 < 0 goto label2;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        if $i2 < $i0 goto label3;

        return 0;

     label3:
        $i2 = staticinvoke <com.google.protobuf.Utf8$SafeProcessor: int partialIsValidUtf8NonAscii(byte[],int,int)>($r0, $i2, $i0);

        return $i2;
    }

    private static int partialIsValidUtf8NonAscii(byte[], int, int)
    {
        int $i0, $i1, $i2, $i4;
        byte[] $r0;
        byte $b3, $b5;

        $r0 := @parameter0: byte[];

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

     label01:
        if $i1 < $i0 goto label02;

        return 0;

     label02:
        $i2 = $i1 + 1;

        $b3 = $r0[$i1];

        if $b3 >= 0 goto label11;

        if $b3 >= -32 goto label04;

        if $i2 < $i0 goto label03;

        return $b3;

     label03:
        if $b3 < -62 goto label12;

        $i1 = $i2 + 1;

        $b3 = $r0[$i2];

        if $b3 <= -65 goto label01;

        return -1;

     label04:
        if $b3 >= -16 goto label08;

        $i1 = $i0 + -1;

        if $i2 < $i1 goto label05;

        $i1 = staticinvoke <com.google.protobuf.Utf8: int '-$$Nest$smincompleteStateFor'(byte[],int,int)>($r0, $i2, $i0);

        return $i1;

     label05:
        $i4 = $i2 + 1;

        $b5 = $r0[$i2];

        if $b5 > -65 goto label12;

        if $b3 != -32 goto label06;

        if $b5 < -96 goto label12;

     label06:
        if $b3 != -19 goto label07;

        if $b5 >= -96 goto label12;

     label07:
        $i1 = $i4 + 1;

        $b3 = $r0[$i4];

        if $b3 <= -65 goto label01;

        return -1;

     label08:
        $i1 = $i0 + -2;

        if $i2 < $i1 goto label09;

        $i1 = staticinvoke <com.google.protobuf.Utf8: int '-$$Nest$smincompleteStateFor'(byte[],int,int)>($r0, $i2, $i0);

        return $i1;

     label09:
        $i1 = $i2 + 1;

        $b5 = $r0[$i2];

        if $b5 > -65 goto label10;

        $i2 = $b3 << 28;

        $i4 = $b5 + 112;

        $i2 = $i2 + $i4;

        $i2 = $i2 >> 30;

        if $i2 != 0 goto label10;

        $i2 = $i1 + 1;

        $b3 = $r0[$i1];

        if $b3 > -65 goto label10;

        $b3 = $r0[$i2];

        if $b3 > -65 goto label10;

        $i1 = $i2 + 1;

        goto label01;

     label10:
        return -1;

     label11:
        $i1 = $i2;

        goto label01;

     label12:
        return -1;
    }

    java.lang.String decodeUtf8(byte[], int, int) throws com.google.protobuf.InvalidProtocolBufferException
    {
        com.google.protobuf.Utf8$SafeProcessor $r0;
        int $i0, $i1, $i2, $i3, $i5, $i7;
        byte[] $r1;
        char[] $r2;
        byte $b4, $b6, $b8, $b9;
        boolean $z0;
        com.google.protobuf.InvalidProtocolBufferException $r3;
        java.lang.String $r4, r7;
        java.lang.Object[] $r5;
        java.lang.Integer $r6;
        java.lang.ArrayIndexOutOfBoundsException r8;
        java.lang.Throwable r9;

        $r0 := @this: com.google.protobuf.Utf8$SafeProcessor;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = $i0 | $i1;

        $i3 = lengthof $r1;

        $i3 = $i3 - $i0;

        $i3 = $i3 - $i1;

        $i2 = $i2 | $i3;

        if $i2 < 0 goto label13;

        $i2 = $i0 + $i1;

        $r2 = newarray (char)[$i1];

        $i1 = 0;

     label01:
        if $i0 >= $i2 goto label03;

        $b4 = $r1[$i0];

        $z0 = staticinvoke <com.google.protobuf.Utf8$DecodeUtil: boolean '-$$Nest$smisOneByte'(byte)>($b4);

        if $z0 != 0 goto label02;

        goto label03;

     label02:
        $i0 = $i0 + 1;

        staticinvoke <com.google.protobuf.Utf8$DecodeUtil: void '-$$Nest$smhandleOneByte'(byte,char[],int)>($b4, $r2, $i1);

        $i1 = $i1 + 1;

        goto label01;

     label03:
        if $i0 >= $i2 goto label12;

        $i3 = $i0 + 1;

        $b4 = $r1[$i0];

        $z0 = staticinvoke <com.google.protobuf.Utf8$DecodeUtil: boolean '-$$Nest$smisOneByte'(byte)>($b4);

        if $z0 == 0 goto label06;

        staticinvoke <com.google.protobuf.Utf8$DecodeUtil: void '-$$Nest$smhandleOneByte'(byte,char[],int)>($b4, $r2, $i1);

        $i0 = $i3;

        $i1 = $i1 + 1;

     label04:
        if $i0 >= $i2 goto label03;

        $b4 = $r1[$i0];

        $z0 = staticinvoke <com.google.protobuf.Utf8$DecodeUtil: boolean '-$$Nest$smisOneByte'(byte)>($b4);

        if $z0 != 0 goto label05;

        goto label03;

     label05:
        $i0 = $i0 + 1;

        staticinvoke <com.google.protobuf.Utf8$DecodeUtil: void '-$$Nest$smhandleOneByte'(byte,char[],int)>($b4, $r2, $i1);

        $i1 = $i1 + 1;

        goto label04;

     label06:
        $z0 = staticinvoke <com.google.protobuf.Utf8$DecodeUtil: boolean '-$$Nest$smisTwoBytes'(byte)>($b4);

        if $z0 == 0 goto label08;

        if $i3 >= $i2 goto label07;

        $b6 = $r1[$i3];

        staticinvoke <com.google.protobuf.Utf8$DecodeUtil: void '-$$Nest$smhandleTwoBytes'(byte,byte,char[],int)>($b4, $b6, $r2, $i1);

        $i0 = $i3 + 1;

        $i1 = $i1 + 1;

        goto label03;

     label07:
        $r3 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException invalidUtf8()>();

        r9 = (java.lang.Throwable) $r3;

        throw r9;

     label08:
        $z0 = staticinvoke <com.google.protobuf.Utf8$DecodeUtil: boolean '-$$Nest$smisThreeBytes'(byte)>($b4);

        if $z0 == 0 goto label10;

        $i0 = $i2 + -1;

        if $i3 >= $i0 goto label09;

        $i0 = $i3 + 1;

        $b6 = $r1[$i3];

        $b8 = $r1[$i0];

        staticinvoke <com.google.protobuf.Utf8$DecodeUtil: void '-$$Nest$smhandleThreeBytes'(byte,byte,byte,char[],int)>($b4, $b6, $b8, $r2, $i1);

        $i0 = $i0 + 1;

        $i1 = $i1 + 1;

        goto label03;

     label09:
        $r3 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException invalidUtf8()>();

        r9 = (java.lang.Throwable) $r3;

        throw r9;

     label10:
        $i0 = $i2 + -2;

        if $i3 >= $i0 goto label11;

        $i5 = $i3 + 1;

        $i7 = $i5 + 1;

        $b6 = $r1[$i3];

        $b8 = $r1[$i5];

        $b9 = $r1[$i7];

        staticinvoke <com.google.protobuf.Utf8$DecodeUtil: void '-$$Nest$smhandleFourBytes'(byte,byte,byte,byte,char[],int)>($b4, $b6, $b8, $b9, $r2, $i1);

        $i1 = $i1 + 2;

        $i0 = $i7 + 1;

        goto label03;

     label11:
        $r3 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException invalidUtf8()>();

        r9 = (java.lang.Throwable) $r3;

        throw r9;

     label12:
        r7 = new java.lang.String;

        specialinvoke r7.<java.lang.String: void <init>(char[],int,int)>($r2, 0, $i1);

        return r7;

     label13:
        r8 = new java.lang.ArrayIndexOutOfBoundsException;

        $r5 = newarray (java.lang.Object)[3];

        $i2 = lengthof $r1;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r5[0] = $r6;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[1] = $r6;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r5[2] = $r6;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("buffer length=%d, index=%d, size=%d", $r5);

        specialinvoke r8.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>($r4);

        goto label14;

     label14:
        throw r8;
    }

    int encodeUtf8(java.lang.CharSequence, byte[], int, int)
    {
        com.google.protobuf.Utf8$SafeProcessor $r0;
        java.lang.CharSequence $r1;
        byte[] $r2;
        int $i0, $i1, $i2, $i3, $i4, $i8, $i9;
        char $c5, $c7;
        byte $b6;
        boolean $z0;
        com.google.protobuf.Utf8$UnpairedSurrogateException $r3;
        java.lang.ArrayIndexOutOfBoundsException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        $r0 := @this: com.google.protobuf.Utf8$SafeProcessor;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $i1 = $i1 + $i0;

        $i3 = 0;

     label01:
        if $i3 >= $i2 goto label02;

        $i4 = $i3 + $i0;

        if $i4 >= $i1 goto label02;

        $c5 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i3);

        if $c5 >= 128 goto label02;

        $b6 = (byte) $c5;

        $r2[$i4] = $b6;

        $i3 = $i3 + 1;

        goto label01;

     label02:
        if $i3 != $i2 goto label03;

        $i0 = $i0 + $i2;

        return $i0;

     label03:
        $i0 = $i0 + $i3;

     label04:
        if $i3 >= $i2 goto label15;

        $c5 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i3);

        if $c5 >= 128 goto label05;

        if $i0 >= $i1 goto label05;

        $b6 = (byte) $c5;

        $r2[$i0] = $b6;

        $i0 = $i0 + 1;

        goto label09;

     label05:
        if $c5 >= 2048 goto label06;

        $i4 = $i1 + -2;

        if $i0 > $i4 goto label06;

        $i4 = $i0 + 1;

        $c7 = $c5 >>> 6;

        $c7 = $c7 | 960;

        $b6 = (byte) $c7;

        $r2[$i0] = $b6;

        $i0 = $i4 + 1;

        $c5 = $c5 & 63;

        $c5 = $c5 | 128;

        $b6 = (byte) $c5;

        $r2[$i4] = $b6;

        goto label09;

     label06:
        if $c5 < 55296 goto label07;

        if $c5 <= 57343 goto label08;

     label07:
        $i4 = $i1 + -3;

        if $i0 > $i4 goto label08;

        $i4 = $i0 + 1;

        $c7 = $c5 >>> 12;

        $c7 = $c7 | 480;

        $b6 = (byte) $c7;

        $r2[$i0] = $b6;

        $i0 = $i4 + 1;

        $c7 = $c5 >>> 6;

        $c7 = $c7 & 63;

        $c7 = $c7 | 128;

        $b6 = (byte) $c7;

        $r2[$i4] = $b6;

        $c5 = $c5 & 63;

        $c5 = $c5 | 128;

        $b6 = (byte) $c5;

        $r2[$i0] = $b6;

        $i0 = $i0 + 1;

        goto label09;

     label08:
        $i4 = $i1 + -4;

        if $i0 > $i4 goto label12;

        $i4 = $i3 + 1;

        $i8 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i4 == $i8 goto label11;

        $c7 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i4);

        $z0 = staticinvoke <java.lang.Character: boolean isSurrogatePair(char,char)>($c5, $c7);

        if $z0 == 0 goto label10;

        $i3 = staticinvoke <java.lang.Character: int toCodePoint(char,char)>($c5, $c7);

        $i8 = $i0 + 1;

        $i9 = $i3 >>> 18;

        $i9 = $i9 | 240;

        $b6 = (byte) $i9;

        $r2[$i0] = $b6;

        $i0 = $i8 + 1;

        $i9 = $i3 >>> 12;

        $i9 = $i9 & 63;

        $i9 = $i9 | 128;

        $b6 = (byte) $i9;

        $r2[$i8] = $b6;

        $i8 = $i0 + 1;

        $i9 = $i3 >>> 6;

        $i9 = $i9 & 63;

        $i9 = $i9 | 128;

        $b6 = (byte) $i9;

        $r2[$i0] = $b6;

        $i0 = $i8 + 1;

        $i3 = $i3 & 63;

        $i3 = $i3 | 128;

        $b6 = (byte) $i3;

        $r2[$i8] = $b6;

        $i3 = $i4;

     label09:
        $i3 = $i3 + 1;

        goto label04;

     label10:
        $i3 = $i4;

        goto label11;

     label11:
        $r3 = new com.google.protobuf.Utf8$UnpairedSurrogateException;

        $i0 = $i3 + -1;

        specialinvoke $r3.<com.google.protobuf.Utf8$UnpairedSurrogateException: void <init>(int,int)>($i0, $i2);

        throw $r3;

     label12:
        if $c5 < 55296 goto label14;

        if $c5 > 57343 goto label14;

        $i1 = $i3 + 1;

        $i4 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i1 == $i4 goto label13;

        $c7 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i1);

        $z0 = staticinvoke <java.lang.Character: boolean isSurrogatePair(char,char)>($c5, $c7);

        if $z0 != 0 goto label14;

     label13:
        $r3 = new com.google.protobuf.Utf8$UnpairedSurrogateException;

        specialinvoke $r3.<com.google.protobuf.Utf8$UnpairedSurrogateException: void <init>(int,int)>($i3, $i2);

        throw $r3;

     label14:
        $r4 = new java.lang.ArrayIndexOutOfBoundsException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed writing ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at index ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label15:
        return $i0;
    }

    int partialIsValidUtf8(int, byte[], int, int)
    {
        com.google.protobuf.Utf8$SafeProcessor $r0;
        byte[] $r1;
        int $i0, $i1, $i2, $i5;
        byte $b3, $b4, $b6;

        $r0 := @this: com.google.protobuf.Utf8$SafeProcessor;

        $i1 := @parameter0: int;

        $r1 := @parameter1: byte[];

        $i2 := @parameter2: int;

        $i0 := @parameter3: int;

        if $i1 == 0 goto label17;

        if $i2 < $i0 goto label01;

        return $i1;

     label01:
        $b3 = (byte) $i1;

        if $b3 >= -32 goto label04;

        if $b3 < -62 goto label03;

        $b3 = $r1[$i2];

        if $b3 <= -65 goto label02;

        return -1;

     label02:
        $i2 = $i2 + 1;

        goto label17;

     label03:
        return -1;

     label04:
        if $b3 >= -16 goto label10;

        $i1 = $i1 >> 8;

        $i1 = $i1 ^ -1;

        $b4 = (byte) $i1;

        if $b4 != 0 goto label06;

        $i1 = $i2 + 1;

        $b4 = $r1[$i2];

        if $i1 >= $i0 goto label05;

        $i2 = $i1;

        goto label06;

     label05:
        $i1 = staticinvoke <com.google.protobuf.Utf8: int '-$$Nest$smincompleteStateFor'(int,int)>($b3, $b4);

        return $i1;

     label06:
        if $b4 > -65 goto label09;

        if $b3 != -32 goto label07;

        if $b4 < -96 goto label09;

     label07:
        if $b3 != -19 goto label08;

        if $b4 >= -96 goto label09;

     label08:
        $b3 = $r1[$i2];

        if $b3 > -65 goto label09;

        $i2 = $i2 + 1;

        goto label17;

     label09:
        return -1;

     label10:
        $i5 = $i1 >> 8;

        $i5 = $i5 ^ -1;

        $b4 = (byte) $i5;

        if $b4 != 0 goto label12;

        $i1 = $i2 + 1;

        $b4 = $r1[$i2];

        if $i1 >= $i0 goto label11;

        $b6 = 0;

        goto label13;

     label11:
        $i1 = staticinvoke <com.google.protobuf.Utf8: int '-$$Nest$smincompleteStateFor'(int,int)>($b3, $b4);

        return $i1;

     label12:
        $i1 = $i1 >> 16;

        $b6 = (byte) $i1;

        $i1 = $i2;

     label13:
        if $b6 != 0 goto label15;

        $i2 = $i1 + 1;

        $b6 = $r1[$i1];

        if $i2 >= $i0 goto label14;

        $i1 = $i2;

        goto label15;

     label14:
        $i1 = staticinvoke <com.google.protobuf.Utf8: int '-$$Nest$smincompleteStateFor'(int,int,int)>($b3, $b4, $b6);

        return $i1;

     label15:
        if $b4 > -65 goto label16;

        $i2 = $b3 << 28;

        $i5 = $b4 + 112;

        $i2 = $i2 + $i5;

        $i2 = $i2 >> 30;

        if $i2 != 0 goto label16;

        if $b6 > -65 goto label16;

        $i2 = $i1 + 1;

        $b3 = $r1[$i1];

        if $b3 > -65 goto label16;

        goto label17;

     label16:
        return -1;

     label17:
        $i1 = staticinvoke <com.google.protobuf.Utf8$SafeProcessor: int partialIsValidUtf8(byte[],int,int)>($r1, $i2, $i0);

        return $i1;
    }

com.google.protobuf.Utf8$UnpairedSurrogateException
    void <init>(int, int)
    {
        com.google.protobuf.Utf8$UnpairedSurrogateException $r0;
        int $i0, $i1;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        $r0 := @this: com.google.protobuf.Utf8$UnpairedSurrogateException;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unpaired surrogate at index ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        return;
    }

com.google.protobuf.Utf8$UnsafeProcessor
    void <init>()
    {
        com.google.protobuf.Utf8$UnsafeProcessor $r0;

        $r0 := @this: com.google.protobuf.Utf8$UnsafeProcessor;

        specialinvoke $r0.<com.google.protobuf.Utf8$Processor: void <init>()>();

        return;
    }

    static boolean isAvailable()
    {
        boolean $z0;

        $z0 = staticinvoke <com.google.protobuf.UnsafeUtil: boolean hasUnsafeArrayOperations()>();

        if $z0 == 0 goto label1;

        $z0 = staticinvoke <com.google.protobuf.UnsafeUtil: boolean hasUnsafeByteBufferOperations()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static int partialIsValidUtf8(byte[], long, int)
    {
        byte[] $r0;
        long $l0, $l3, $l6;
        int $i1, $i2, $i7;
        byte $b4, $b5;

        $r0 := @parameter0: byte[];

        $l0 := @parameter1: long;

        $i1 := @parameter2: int;

        $i2 = staticinvoke <com.google.protobuf.Utf8$UnsafeProcessor: int unsafeEstimateConsecutiveAscii(byte[],long,int)>($r0, $l0, $i1);

        $i1 = $i1 - $i2;

        $l3 = (long) $i2;

        $l0 = $l0 + $l3;

     label01:
        $b4 = 0;

     label02:
        if $i1 <= 0 goto label04;

        $l3 = $l0 + 1L;

        $b5 = staticinvoke <com.google.protobuf.UnsafeUtil: byte getByte(byte[],long)>($r0, $l0);

        $b4 = $b5;

        if $b5 < 0 goto label03;

        $i1 = $i1 + -1;

        $l0 = $l3;

        goto label02;

     label03:
        $l0 = $l3;

        goto label04;

     label04:
        if $i1 != 0 goto label05;

        return 0;

     label05:
        $i1 = $i1 + -1;

        if $b4 >= -32 goto label09;

        if $i1 != 0 goto label06;

        return $b4;

     label06:
        $i1 = $i1 + -1;

        if $b4 < -62 goto label08;

        $l3 = 1L + $l0;

        $b4 = staticinvoke <com.google.protobuf.UnsafeUtil: byte getByte(byte[],long)>($r0, $l0);

        if $b4 > -65 goto label08;

     label07:
        $l0 = $l3;

        goto label16;

     label08:
        return -1;

     label09:
        if $b4 >= -16 goto label14;

        if $i1 >= 2 goto label10;

        $i1 = staticinvoke <com.google.protobuf.Utf8$UnsafeProcessor: int unsafeIncompleteStateFor(byte[],int,long,int)>($r0, $b4, $l0, $i1);

        return $i1;

     label10:
        $i1 = $i1 + -2;

        $l6 = $l0 + 1L;

        $b5 = staticinvoke <com.google.protobuf.UnsafeUtil: byte getByte(byte[],long)>($r0, $l0);

        if $b5 > -65 goto label13;

        if $b4 != -32 goto label11;

        if $b5 < -96 goto label13;

     label11:
        if $b4 != -19 goto label12;

        if $b5 >= -96 goto label13;

     label12:
        $l3 = 1L + $l6;

        $b4 = staticinvoke <com.google.protobuf.UnsafeUtil: byte getByte(byte[],long)>($r0, $l6);

        if $b4 > -65 goto label13;

        goto label07;

     label13:
        return -1;

     label14:
        if $i1 >= 3 goto label15;

        $i1 = staticinvoke <com.google.protobuf.Utf8$UnsafeProcessor: int unsafeIncompleteStateFor(byte[],int,long,int)>($r0, $b4, $l0, $i1);

        return $i1;

     label15:
        $i1 = $i1 + -3;

        $l3 = $l0 + 1L;

        $b5 = staticinvoke <com.google.protobuf.UnsafeUtil: byte getByte(byte[],long)>($r0, $l0);

        if $b5 > -65 goto label17;

        $i2 = $b4 << 28;

        $i7 = $b5 + 112;

        $i2 = $i2 + $i7;

        $i2 = $i2 >> 30;

        if $i2 != 0 goto label17;

        $l0 = $l3 + 1L;

        $b4 = staticinvoke <com.google.protobuf.UnsafeUtil: byte getByte(byte[],long)>($r0, $l3);

        if $b4 > -65 goto label17;

        $l3 = 1L + $l0;

        $b4 = staticinvoke <com.google.protobuf.UnsafeUtil: byte getByte(byte[],long)>($r0, $l0);

        if $b4 > -65 goto label17;

        goto label07;

     label16:
        goto label01;

     label17:
        return -1;
    }

    private static int unsafeEstimateConsecutiveAscii(byte[], long, int)
    {
        byte[] $r0;
        int $i0, $i3, $i4;
        byte $b1;
        long $l2, $l5;

        $r0 := @parameter0: byte[];

        $l2 := @parameter1: long;

        $i0 := @parameter2: int;

        $i3 = 0;

        if $i0 >= 16 goto label1;

        return 0;

     label1:
        $i4 = (int) $l2;

        $i4 = $i4 & 7;

        $i4 = 8 - $i4;

     label2:
        if $i3 >= $i4 goto label4;

        $b1 = staticinvoke <com.google.protobuf.UnsafeUtil: byte getByte(byte[],long)>($r0, $l2);

        if $b1 >= 0 goto label3;

        return $i3;

     label3:
        $i3 = $i3 + 1;

        $l2 = 1L + $l2;

        goto label2;

     label4:
        $i4 = $i3 + 8;

        if $i4 > $i0 goto label6;

        $l5 = <com.google.protobuf.UnsafeUtil: long BYTE_ARRAY_BASE_OFFSET>;

        $l5 = $l5 + $l2;

        $l5 = staticinvoke <com.google.protobuf.UnsafeUtil: long getLong(java.lang.Object,long)>($r0, $l5);

        $l5 = $l5 & -9187201950435737472L;

        $b1 = $l5 cmp 0L;

        if $b1 == 0 goto label5;

        goto label6;

     label5:
        $l2 = $l2 + 8L;

        $i3 = $i4;

        goto label4;

     label6:
        if $i3 >= $i0 goto label8;

        $b1 = staticinvoke <com.google.protobuf.UnsafeUtil: byte getByte(byte[],long)>($r0, $l2);

        if $b1 >= 0 goto label7;

        return $i3;

     label7:
        $i3 = $i3 + 1;

        $l2 = $l2 + 1L;

        goto label6;

     label8:
        return $i0;
    }

    private static int unsafeIncompleteStateFor(byte[], int, long, int)
    {
        int $i0, $i2;
        byte[] $r0;
        long $l1;
        java.lang.AssertionError $r1;
        byte $b3, $b4;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $l1 := @parameter2: long;

        $i2 := @parameter3: int;

        lookupswitch($i2)
        {
            case 0: goto label4;
            case 1: goto label3;
            case 2: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label2:
        $b3 = staticinvoke <com.google.protobuf.UnsafeUtil: byte getByte(byte[],long)>($r0, $l1);

        $l1 = $l1 + 1L;

        $b4 = staticinvoke <com.google.protobuf.UnsafeUtil: byte getByte(byte[],long)>($r0, $l1);

        $i0 = staticinvoke <com.google.protobuf.Utf8: int '-$$Nest$smincompleteStateFor'(int,int,int)>($i0, $b3, $b4);

        return $i0;

     label3:
        $b3 = staticinvoke <com.google.protobuf.UnsafeUtil: byte getByte(byte[],long)>($r0, $l1);

        $i0 = staticinvoke <com.google.protobuf.Utf8: int '-$$Nest$smincompleteStateFor'(int,int)>($i0, $b3);

        return $i0;

     label4:
        $i0 = staticinvoke <com.google.protobuf.Utf8: int '-$$Nest$smincompleteStateFor'(int)>($i0);

        return $i0;
    }

    java.lang.String decodeUtf8(byte[], int, int) throws com.google.protobuf.InvalidProtocolBufferException
    {
        com.google.protobuf.Utf8$UnsafeProcessor $r0;
        int $i0, $i1;
        java.lang.String $r1, r6;
        byte[] $r2, $r4;
        java.nio.charset.Charset $r3;
        boolean $z0;
        com.google.protobuf.InvalidProtocolBufferException $r5;
        java.lang.Throwable r7;

        $r0 := @this: com.google.protobuf.Utf8$UnsafeProcessor;

        $r2 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        r6 = new java.lang.String;

        $r1 = r6;

        $r3 = <com.google.protobuf.Internal: java.nio.charset.Charset UTF_8>;

        specialinvoke r6.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>($r2, $i0, $i1, $r3);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("\ufffd");

        if $z0 != 0 goto label1;

        return $r1;

     label1:
        $r3 = <com.google.protobuf.Internal: java.nio.charset.Charset UTF_8>;

        $r4 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r3);

        $i1 = $i1 + $i0;

        $r2 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>($r2, $i0, $i1);

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r4, $r2);

        if $z0 == 0 goto label2;

        return $r1;

     label2:
        $r5 = staticinvoke <com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException invalidUtf8()>();

        r7 = (java.lang.Throwable) $r5;

        throw r7;
    }

    int encodeUtf8(java.lang.CharSequence, byte[], int, int)
    {
        com.google.protobuf.Utf8$UnsafeProcessor $r0;
        java.lang.CharSequence $r1;
        byte[] $r2;
        int $i0, $i1, $i6, $i7;
        byte $b2;
        long $l3, $l4, $l5, $l9;
        char $c8, $c10;
        boolean $z0;
        com.google.protobuf.Utf8$UnpairedSurrogateException $r3;
        java.lang.ArrayIndexOutOfBoundsException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        $r0 := @this: com.google.protobuf.Utf8$UnsafeProcessor;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $l4 = (long) $i0;

        $l5 = (long) $i1;

        $l5 = $l5 + $l4;

        $i6 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i6 > $i1 goto label16;

        $i7 = lengthof $r2;

        $i7 = $i7 - $i1;

        if $i7 < $i0 goto label16;

        $i1 = 0;

     label01:
        $l3 = 1L;

        if $i1 >= $i6 goto label02;

        $c8 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i1);

        if $c8 >= 128 goto label02;

        $b2 = (byte) $c8;

        staticinvoke <com.google.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>($r2, $l4, $b2);

        $i1 = $i1 + 1;

        $l4 = 1L + $l4;

        goto label01;

     label02:
        if $i1 == $i6 goto label15;

     label03:
        if $i1 >= $i6 goto label14;

        $c8 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i1);

        if $c8 >= 128 goto label04;

        $b2 = $l4 cmp $l5;

        if $b2 >= 0 goto label04;

        $l9 = $l4 + $l3;

        $b2 = (byte) $c8;

        staticinvoke <com.google.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>($r2, $l4, $b2);

        $l4 = $l9;

        goto label08;

     label04:
        if $c8 >= 2048 goto label05;

        $l9 = -2L + $l5;

        $b2 = $l4 cmp $l9;

        if $b2 > 0 goto label05;

        $l9 = $l4 + $l3;

        $c10 = $c8 >>> 6;

        $c10 = $c10 | 960;

        $b2 = (byte) $c10;

        staticinvoke <com.google.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>($r2, $l4, $b2);

        $c8 = $c8 & 63;

        $c8 = $c8 | 128;

        $b2 = (byte) $c8;

        staticinvoke <com.google.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>($r2, $l9, $b2);

        $l4 = $l9 + $l3;

        goto label08;

     label05:
        if $c8 < 55296 goto label06;

        if $c8 <= 57343 goto label07;

     label06:
        $l9 = -3L + $l5;

        $b2 = $l4 cmp $l9;

        if $b2 > 0 goto label07;

        $l9 = $l4 + $l3;

        $c10 = $c8 >>> 12;

        $c10 = $c10 | 480;

        $b2 = (byte) $c10;

        staticinvoke <com.google.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>($r2, $l4, $b2);

        $l4 = $l9 + $l3;

        $c10 = $c8 >>> 6;

        $c10 = $c10 & 63;

        $c10 = $c10 | 128;

        $b2 = (byte) $c10;

        staticinvoke <com.google.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>($r2, $l9, $b2);

        $c8 = $c8 & 63;

        $c8 = $c8 | 128;

        $b2 = (byte) $c8;

        staticinvoke <com.google.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>($r2, $l4, $b2);

        $l4 = $l4 + 1L;

        $l3 = 1L;

        goto label08;

     label07:
        $l3 = -4L + $l5;

        $b2 = $l4 cmp $l3;

        if $b2 > 0 goto label11;

        $i0 = $i1 + 1;

        if $i0 == $i6 goto label10;

        $c10 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        $z0 = staticinvoke <java.lang.Character: boolean isSurrogatePair(char,char)>($c8, $c10);

        if $z0 == 0 goto label09;

        $i1 = staticinvoke <java.lang.Character: int toCodePoint(char,char)>($c8, $c10);

        $l3 = $l4 + 1L;

        $i7 = $i1 >>> 18;

        $i7 = $i7 | 240;

        $b2 = (byte) $i7;

        staticinvoke <com.google.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>($r2, $l4, $b2);

        $l4 = $l3 + 1L;

        $i7 = $i1 >>> 12;

        $i7 = $i7 & 63;

        $i7 = $i7 | 128;

        $b2 = (byte) $i7;

        staticinvoke <com.google.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>($r2, $l3, $b2);

        $l9 = $l4 + 1L;

        $i7 = $i1 >>> 6;

        $i7 = $i7 & 63;

        $i7 = $i7 | 128;

        $b2 = (byte) $i7;

        staticinvoke <com.google.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>($r2, $l4, $b2);

        $l3 = 1L;

        $l4 = $l9 + 1L;

        $i1 = $i1 & 63;

        $i1 = $i1 | 128;

        $b2 = (byte) $i1;

        staticinvoke <com.google.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>($r2, $l9, $b2);

        $i1 = $i0;

     label08:
        $i1 = $i1 + 1;

        goto label03;

     label09:
        $i1 = $i0;

        goto label10;

     label10:
        $r3 = new com.google.protobuf.Utf8$UnpairedSurrogateException;

        $i0 = $i1 + -1;

        specialinvoke $r3.<com.google.protobuf.Utf8$UnpairedSurrogateException: void <init>(int,int)>($i0, $i6);

        throw $r3;

     label11:
        if $c8 < 55296 goto label13;

        if $c8 > 57343 goto label13;

        $i0 = $i1 + 1;

        if $i0 == $i6 goto label12;

        $c10 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        $z0 = staticinvoke <java.lang.Character: boolean isSurrogatePair(char,char)>($c8, $c10);

        if $z0 != 0 goto label13;

     label12:
        $r3 = new com.google.protobuf.Utf8$UnpairedSurrogateException;

        specialinvoke $r3.<com.google.protobuf.Utf8$UnpairedSurrogateException: void <init>(int,int)>($i1, $i6);

        throw $r3;

     label13:
        $r4 = new java.lang.ArrayIndexOutOfBoundsException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed writing ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c8);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at index ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label14:
        $i0 = (int) $l4;

        return $i0;

     label15:
        $i0 = (int) $l4;

        return $i0;

     label16:
        $r4 = new java.lang.ArrayIndexOutOfBoundsException;

        $i6 = $i6 + -1;

        $c8 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i6);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed writing ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c8);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at index ");

        $i0 = $i0 + $i1;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>($r6);

        goto label17;

     label17:
        throw $r4;
    }

    int partialIsValidUtf8(int, byte[], int, int)
    {
        com.google.protobuf.Utf8$UnsafeProcessor $r0;
        int $i0, $i1, $i2, $i3, $i4;
        byte[] $r1;
        byte $b5, $b8, $b10, $b11, $b12;
        long $l6, $l7, $l9;
        java.lang.ArrayIndexOutOfBoundsException $r2;
        java.lang.Object[] $r3;
        java.lang.Integer $r4;
        java.lang.String $r5;

        $r0 := @this: com.google.protobuf.Utf8$UnsafeProcessor;

        $i1 := @parameter0: int;

        $r1 := @parameter1: byte[];

        $i2 := @parameter2: int;

        $i0 := @parameter3: int;

        $i3 = $i2 | $i0;

        $i4 = lengthof $r1;

        $i4 = $i4 - $i0;

        $i3 = $i3 | $i4;

        $b5 = 0;

        if $i3 < 0 goto label19;

        $l6 = (long) $i2;

        $l7 = (long) $i0;

        if $i1 == 0 goto label18;

        $b8 = $l6 cmp $l7;

        if $b8 < 0 goto label01;

        return $i1;

     label01:
        $b8 = (byte) $i1;

        if $b8 >= -32 goto label04;

        if $b8 < -62 goto label03;

        $b8 = staticinvoke <com.google.protobuf.UnsafeUtil: byte getByte(byte[],long)>($r1, $l6);

        if $b8 <= -65 goto label02;

        goto label03;

     label02:
        $l6 = 1L + $l6;

        goto label18;

     label03:
        return -1;

     label04:
        if $b8 >= -16 goto label10;

        $i1 = $i1 >> 8;

        $i1 = $i1 ^ -1;

        $b5 = (byte) $i1;

        if $b5 != 0 goto label06;

        $l9 = $l6 + 1L;

        $b10 = staticinvoke <com.google.protobuf.UnsafeUtil: byte getByte(byte[],long)>($r1, $l6);

        $b5 = $b10;

        $b11 = $l9 cmp $l7;

        if $b11 >= 0 goto label05;

        $l6 = $l9;

        goto label06;

     label05:
        $i1 = staticinvoke <com.google.protobuf.Utf8: int '-$$Nest$smincompleteStateFor'(int,int)>($b8, $b10);

        return $i1;

     label06:
        if $b5 > -65 goto label09;

        if $b8 != -32 goto label07;

        if $b5 < -96 goto label09;

     label07:
        if $b8 != -19 goto label08;

        if $b5 >= -96 goto label09;

     label08:
        $b8 = staticinvoke <com.google.protobuf.UnsafeUtil: byte getByte(byte[],long)>($r1, $l6);

        if $b8 > -65 goto label09;

        $l6 = $l6 + 1L;

        goto label18;

     label09:
        return -1;

     label10:
        $i2 = $i1 >> 8;

        $i2 = $i2 ^ -1;

        $b10 = (byte) $i2;

        if $b10 != 0 goto label12;

        $l9 = $l6 + 1L;

        $b11 = staticinvoke <com.google.protobuf.UnsafeUtil: byte getByte(byte[],long)>($r1, $l6);

        $b10 = $b11;

        $b12 = $l9 cmp $l7;

        if $b12 >= 0 goto label11;

        $l6 = $l9;

        goto label13;

     label11:
        $i1 = staticinvoke <com.google.protobuf.Utf8: int '-$$Nest$smincompleteStateFor'(int,int)>($b8, $b11);

        return $i1;

     label12:
        $i1 = $i1 >> 16;

        $b5 = (byte) $i1;

     label13:
        if $b5 != 0 goto label15;

        $l9 = $l6 + 1L;

        $b11 = staticinvoke <com.google.protobuf.UnsafeUtil: byte getByte(byte[],long)>($r1, $l6);

        $b5 = $b11;

        $b12 = $l9 cmp $l7;

        if $b12 >= 0 goto label14;

        $l6 = $l9;

        goto label15;

     label14:
        $i1 = staticinvoke <com.google.protobuf.Utf8: int '-$$Nest$smincompleteStateFor'(int,int,int)>($b8, $b10, $b11);

        return $i1;

     label15:
        if $b10 > -65 goto label17;

        $i1 = $b8 << 28;

        $i2 = $b10 + 112;

        $i1 = $i1 + $i2;

        $i1 = $i1 >> 30;

        if $i1 != 0 goto label17;

        if $b5 > -65 goto label17;

        $b8 = staticinvoke <com.google.protobuf.UnsafeUtil: byte getByte(byte[],long)>($r1, $l6);

        if $b8 <= -65 goto label16;

        goto label17;

     label16:
        $l6 = $l6 + 1L;

        goto label18;

     label17:
        return -1;

     label18:
        $l7 = $l7 - $l6;

        $i1 = (int) $l7;

        $i1 = staticinvoke <com.google.protobuf.Utf8$UnsafeProcessor: int partialIsValidUtf8(byte[],long,int)>($r1, $l6, $i1);

        return $i1;

     label19:
        $r2 = new java.lang.ArrayIndexOutOfBoundsException;

        $r3 = newarray (java.lang.Object)[3];

        $i1 = lengthof $r1;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3[0] = $r4;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3[1] = $r4;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3[2] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Array length=%d, index=%d, limit=%d", $r3);

        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>($r5);

        throw $r2;
    }

