io.grpc.internal.InUseStateAggregator
<io.grpc.internal.InUseStateAggregator: java.util.Set inUseObjects>
    public void <init>()
    {
        io.grpc.internal.InUseStateAggregator $r0;
        java.util.Set $r1;
        java.util.IdentityHashMap r2;
        java.util.Map r3;

        $r0 := @this: io.grpc.internal.InUseStateAggregator;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        r2 = new java.util.IdentityHashMap;

        specialinvoke r2.<java.util.IdentityHashMap: void <init>()>();

        r3 = (java.util.Map) r2;

        $r1 = staticinvoke <java.util.Collections: java.util.Set newSetFromMap(java.util.Map)>(r3);

        $r0.<io.grpc.internal.InUseStateAggregator: java.util.Set inUseObjects> = $r1;

        return;
    }

    public final transient boolean anyObjectInUse(java.lang.Object[])
    {
        io.grpc.internal.InUseStateAggregator $r0;
        int $i0, $i1;
        java.util.Set $r1;
        boolean $z0;
        java.lang.Object[] $r2;
        java.lang.Object $r3;

        $r0 := @this: io.grpc.internal.InUseStateAggregator;

        $r2 := @parameter0: java.lang.Object[];

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r3 = $r2[$i1];

        $r1 = $r0.<io.grpc.internal.InUseStateAggregator: java.util.Set inUseObjects>;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 0;
    }

<io.grpc.internal.InUseStateAggregator: void handleInUse()>
<io.grpc.internal.InUseStateAggregator: void handleNotInUse()>
    public final boolean isInUse()
    {
        io.grpc.internal.InUseStateAggregator $r0;
        boolean $z0;
        java.util.Set $r1;

        $r0 := @this: io.grpc.internal.InUseStateAggregator;

        $r1 = $r0.<io.grpc.internal.InUseStateAggregator: java.util.Set inUseObjects>;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();

        $z0 = $z0 ^ 1;

        return $z0;
    }

    public final void updateObjectInUse(java.lang.Object, boolean)
    {
        io.grpc.internal.InUseStateAggregator $r0;
        java.lang.Object $r1;
        boolean $z0;
        java.util.Set $r2;
        int $i0;

        $r0 := @this: io.grpc.internal.InUseStateAggregator;

        $r1 := @parameter0: java.lang.Object;

        $z0 := @parameter1: boolean;

        $r2 = $r0.<io.grpc.internal.InUseStateAggregator: java.util.Set inUseObjects>;

        $i0 = interfaceinvoke $r2.<java.util.Set: int size()>();

        if $z0 == 0 goto label1;

        $r2 = $r0.<io.grpc.internal.InUseStateAggregator: java.util.Set inUseObjects>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r1);

        if $i0 != 0 goto label2;

        virtualinvoke $r0.<io.grpc.internal.InUseStateAggregator: void handleInUse()>();

        return;

     label1:
        $r2 = $r0.<io.grpc.internal.InUseStateAggregator: java.util.Set inUseObjects>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        if $i0 != 1 goto label2;

        virtualinvoke $r0.<io.grpc.internal.InUseStateAggregator: void handleNotInUse()>();

     label2:
        return;
    }

