androidx.car.app.utils.ThreadUtils
<androidx.car.app.utils.ThreadUtils: android.os.Handler HANDLER>
    public static void runOnMain(java.lang.Runnable)
    {
        java.lang.Runnable r0;
        android.os.Looper $r1, $r2;
        android.os.Handler $r3;

        r0 := @parameter0: java.lang.Runnable;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $r2 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $r1 != $r2 goto label1;

        interfaceinvoke r0.<java.lang.Runnable: void run()>();

        goto label2;

     label1:
        $r3 = <androidx.car.app.utils.ThreadUtils: android.os.Handler HANDLER>;

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>(r0);

     label2:
        return;
    }

    public static void checkMainThread()
    {
        android.os.Looper $r0, $r1;
        java.lang.IllegalStateException $r2;

        $r0 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $r0 == $r1 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not running on main thread when it is required to");

        throw $r2;

     label1:
        return;
    }

    private void <init>()
    {
        androidx.car.app.utils.ThreadUtils r0;

        r0 := @this: androidx.car.app.utils.ThreadUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        android.os.Handler $r0;
        android.os.Looper $r1;

        $r0 = new android.os.Handler;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r0.<android.os.Handler: void <init>(android.os.Looper)>($r1);

        <androidx.car.app.utils.ThreadUtils: android.os.Handler HANDLER> = $r0;

        return;
    }

