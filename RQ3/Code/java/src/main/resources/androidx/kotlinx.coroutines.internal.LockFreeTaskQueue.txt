kotlinx.coroutines.internal.LockFreeTaskQueue
<kotlinx.coroutines.internal.LockFreeTaskQueue: kotlinx.atomicfu.AtomicRef _cur>
    public void <init>(boolean)
    {
        kotlinx.coroutines.internal.LockFreeTaskQueue $r0;
        kotlinx.coroutines.internal.LockFreeTaskQueueCore $r1;
        kotlinx.atomicfu.AtomicRef $r2;
        boolean $z0;

        $r0 := @this: kotlinx.coroutines.internal.LockFreeTaskQueue;

        $z0 := @parameter0: boolean;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new kotlinx.coroutines.internal.LockFreeTaskQueueCore;

        specialinvoke $r1.<kotlinx.coroutines.internal.LockFreeTaskQueueCore: void <init>(int,boolean)>(8, $z0);

        $r2 = staticinvoke <kotlinx.atomicfu.AtomicFU: kotlinx.atomicfu.AtomicRef atomic(java.lang.Object)>($r1);

        $r0.<kotlinx.coroutines.internal.LockFreeTaskQueue: kotlinx.atomicfu.AtomicRef _cur> = $r2;

        return;
    }

    public final boolean addLast(java.lang.Object)
    {
        kotlinx.coroutines.internal.LockFreeTaskQueue $r0;
        java.lang.Object $r1, $r3;
        kotlinx.atomicfu.AtomicRef $r2, $r5;
        kotlinx.coroutines.internal.LockFreeTaskQueueCore $r4, $r6;
        int $i0;

        $r0 := @this: kotlinx.coroutines.internal.LockFreeTaskQueue;

        $r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "element");

        $r2 = $r0.<kotlinx.coroutines.internal.LockFreeTaskQueue: kotlinx.atomicfu.AtomicRef _cur>;

     label1:
        $r3 = virtualinvoke $r2.<kotlinx.atomicfu.AtomicRef: java.lang.Object getValue()>();

        $r4 = (kotlinx.coroutines.internal.LockFreeTaskQueueCore) $r3;

        $i0 = virtualinvoke $r4.<kotlinx.coroutines.internal.LockFreeTaskQueueCore: int addLast(java.lang.Object)>($r1);

        lookupswitch($i0)
        {
            case 0: goto label5;
            case 1: goto label4;
            case 2: goto label3;
            default: goto label2;
        };

     label2:
        goto label1;

     label3:
        return 0;

     label4:
        $r5 = $r0.<kotlinx.coroutines.internal.LockFreeTaskQueue: kotlinx.atomicfu.AtomicRef _cur>;

        $r6 = virtualinvoke $r4.<kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore next()>();

        virtualinvoke $r5.<kotlinx.atomicfu.AtomicRef: boolean compareAndSet(java.lang.Object,java.lang.Object)>($r4, $r6);

        goto label1;

     label5:
        return 1;
    }

    public final void close()
    {
        kotlinx.coroutines.internal.LockFreeTaskQueue $r0;
        kotlinx.atomicfu.AtomicRef $r1, $r4;
        java.lang.Object $r2;
        kotlinx.coroutines.internal.LockFreeTaskQueueCore $r3, $r5;
        boolean $z0;

        $r0 := @this: kotlinx.coroutines.internal.LockFreeTaskQueue;

        $r1 = $r0.<kotlinx.coroutines.internal.LockFreeTaskQueue: kotlinx.atomicfu.AtomicRef _cur>;

     label1:
        $r2 = virtualinvoke $r1.<kotlinx.atomicfu.AtomicRef: java.lang.Object getValue()>();

        $r3 = (kotlinx.coroutines.internal.LockFreeTaskQueueCore) $r2;

        $z0 = virtualinvoke $r3.<kotlinx.coroutines.internal.LockFreeTaskQueueCore: boolean close()>();

        if $z0 == 0 goto label2;

        return;

     label2:
        $r4 = $r0.<kotlinx.coroutines.internal.LockFreeTaskQueue: kotlinx.atomicfu.AtomicRef _cur>;

        $r5 = virtualinvoke $r3.<kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore next()>();

        virtualinvoke $r4.<kotlinx.atomicfu.AtomicRef: boolean compareAndSet(java.lang.Object,java.lang.Object)>($r3, $r5);

        goto label1;
    }

    public final int getSize()
    {
        kotlinx.coroutines.internal.LockFreeTaskQueue $r0;
        kotlinx.atomicfu.AtomicRef $r1;
        java.lang.Object $r2;
        kotlinx.coroutines.internal.LockFreeTaskQueueCore $r3;
        int $i0;

        $r0 := @this: kotlinx.coroutines.internal.LockFreeTaskQueue;

        $r1 = $r0.<kotlinx.coroutines.internal.LockFreeTaskQueue: kotlinx.atomicfu.AtomicRef _cur>;

        $r2 = virtualinvoke $r1.<kotlinx.atomicfu.AtomicRef: java.lang.Object getValue()>();

        $r3 = (kotlinx.coroutines.internal.LockFreeTaskQueueCore) $r2;

        $i0 = virtualinvoke $r3.<kotlinx.coroutines.internal.LockFreeTaskQueueCore: int getSize()>();

        return $i0;
    }

    public final java.lang.Object removeFirstOrNull()
    {
        kotlinx.coroutines.internal.LockFreeTaskQueue $r0;
        kotlinx.atomicfu.AtomicRef $r1, $r5;
        java.lang.Object $r2;
        kotlinx.coroutines.internal.LockFreeTaskQueueCore $r3, $r6;
        kotlinx.coroutines.internal.Symbol $r4;

        $r0 := @this: kotlinx.coroutines.internal.LockFreeTaskQueue;

        $r1 = $r0.<kotlinx.coroutines.internal.LockFreeTaskQueue: kotlinx.atomicfu.AtomicRef _cur>;

     label1:
        $r2 = virtualinvoke $r1.<kotlinx.atomicfu.AtomicRef: java.lang.Object getValue()>();

        $r3 = (kotlinx.coroutines.internal.LockFreeTaskQueueCore) $r2;

        $r2 = virtualinvoke $r3.<kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object removeFirstOrNull()>();

        $r4 = <kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.Symbol REMOVE_FROZEN>;

        if $r2 == $r4 goto label2;

        return $r2;

     label2:
        $r5 = $r0.<kotlinx.coroutines.internal.LockFreeTaskQueue: kotlinx.atomicfu.AtomicRef _cur>;

        $r6 = virtualinvoke $r3.<kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore next()>();

        virtualinvoke $r5.<kotlinx.atomicfu.AtomicRef: boolean compareAndSet(java.lang.Object,java.lang.Object)>($r3, $r6);

        goto label1;
    }

