androidx.emoji2.text.ConcurrencyHelpers
<androidx.emoji2.text.ConcurrencyHelpers: int FONT_LOAD_TIMEOUT_SECONDS>
    private void <init>()
    {
        androidx.emoji2.text.ConcurrencyHelpers r0;

        r0 := @this: androidx.emoji2.text.ConcurrencyHelpers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.util.concurrent.ThreadPoolExecutor createBackgroundPriorityExecutor(java.lang.String)
    {
        java.lang.String r0;
        java.util.concurrent.ThreadFactory r1;
        java.util.concurrent.ThreadPoolExecutor r2, $r3;
        java.util.concurrent.LinkedBlockingDeque $r4;
        java.util.concurrent.TimeUnit $r5;

        r0 := @parameter0: java.lang.String;

        r1 = dynamicinvoke "newThread" <java.util.concurrent.ThreadFactory (java.lang.String)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Thread __METHODTYPE__(java.lang.Runnable), methodhandle: "REF_INVOKE_STATIC" <androidx.emoji2.text.ConcurrencyHelpers: java.lang.Thread lambda$createBackgroundPriorityExecutor$0(java.lang.String,java.lang.Runnable)>, methodtype: java.lang.Thread __METHODTYPE__(java.lang.Runnable));

        $r3 = new java.util.concurrent.ThreadPoolExecutor;

        $r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $r4 = new java.util.concurrent.LinkedBlockingDeque;

        specialinvoke $r4.<java.util.concurrent.LinkedBlockingDeque: void <init>()>();

        specialinvoke $r3.<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)>(0, 1, 15L, $r5, $r4, r1);

        r2 = $r3;

        virtualinvoke r2.<java.util.concurrent.ThreadPoolExecutor: void allowCoreThreadTimeOut(boolean)>(1);

        return r2;
    }

    static android.os.Handler mainHandlerAsync()
    {
        int $i0;
        android.os.Handler $r0, $r3;
        android.os.Looper $r1, $r2;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 28 goto label1;

        $r2 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $r3 = staticinvoke <androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl: android.os.Handler createAsync(android.os.Looper)>($r2);

        return $r3;

     label1:
        $r0 = new android.os.Handler;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r0.<android.os.Handler: void <init>(android.os.Looper)>($r1);

        return $r0;
    }

    static java.util.concurrent.Executor convertHandlerToExecutor(android.os.Handler)
    {
        android.os.Handler r0;
        java.util.concurrent.Executor $r2;

        r0 := @parameter0: android.os.Handler;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0);

        $r2 = dynamicinvoke "execute" <java.util.concurrent.Executor (android.os.Handler)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Runnable), methodhandle: "REF_INVOKE_VIRTUAL" <android.os.Handler: boolean post(java.lang.Runnable)>, methodtype: void __METHODTYPE__(java.lang.Runnable));

        return $r2;
    }

    private static java.lang.Thread lambda$createBackgroundPriorityExecutor$0(java.lang.String, java.lang.Runnable)
    {
        java.lang.String r0;
        java.lang.Runnable r1;
        java.lang.Thread r2, $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Runnable;

        $r3 = new java.lang.Thread;

        specialinvoke $r3.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>(r1, r0);

        r2 = $r3;

        virtualinvoke r2.<java.lang.Thread: void setPriority(int)>(10);

        return r2;
    }

androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl
    private void <init>()
    {
        androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl r0;

        r0 := @this: androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.os.Handler createAsync(android.os.Looper)
    {
        android.os.Looper r0;
        android.os.Handler $r1;

        r0 := @parameter0: android.os.Looper;

        $r1 = staticinvoke <android.os.Handler: android.os.Handler createAsync(android.os.Looper)>(r0);

        return $r1;
    }

