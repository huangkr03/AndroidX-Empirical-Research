androidx.compose.foundation.lazy.layout.MutableIntervalList
<androidx.compose.foundation.lazy.layout.MutableIntervalList: androidx.compose.runtime.collection.MutableVector intervals>
<androidx.compose.foundation.lazy.layout.MutableIntervalList: int size>
<androidx.compose.foundation.lazy.layout.MutableIntervalList: androidx.compose.foundation.lazy.layout.IntervalList$Interval lastInterval>
<androidx.compose.foundation.lazy.layout.MutableIntervalList: int $stable>
    public void <init>()
    {
        androidx.compose.foundation.lazy.layout.MutableIntervalList r0;
        byte b0;
        androidx.compose.runtime.collection.MutableVector $r1;
        androidx.compose.foundation.lazy.layout.IntervalList$Interval[] $r2;

        r0 := @this: androidx.compose.foundation.lazy.layout.MutableIntervalList;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        b0 = 16;

        $r1 = new androidx.compose.runtime.collection.MutableVector;

        $r2 = newarray (androidx.compose.foundation.lazy.layout.IntervalList$Interval)[b0];

        specialinvoke $r1.<androidx.compose.runtime.collection.MutableVector: void <init>(java.lang.Object[],int)>($r2, 0);

        r0.<androidx.compose.foundation.lazy.layout.MutableIntervalList: androidx.compose.runtime.collection.MutableVector intervals> = $r1;

        return;
    }

    public int getSize()
    {
        androidx.compose.foundation.lazy.layout.MutableIntervalList r0;
        int $i0;

        r0 := @this: androidx.compose.foundation.lazy.layout.MutableIntervalList;

        $i0 = r0.<androidx.compose.foundation.lazy.layout.MutableIntervalList: int size>;

        return $i0;
    }

    public final void addInterval(int, java.lang.Object)
    {
        androidx.compose.foundation.lazy.layout.MutableIntervalList r0;
        int i0, $i1, $i2, $i3;
        java.lang.Object r1;
        androidx.compose.foundation.lazy.layout.IntervalList$Interval r2, $r3;
        androidx.compose.runtime.collection.MutableVector $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.IllegalArgumentException $r8;
        java.lang.String $r9, $r10;
        boolean $z1;

        r0 := @this: androidx.compose.foundation.lazy.layout.MutableIntervalList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        if i0 < 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 != 0 goto label3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("size should be >=0, but was ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label3:
        if i0 != 0 goto label4;

        return;

     label4:
        $r3 = new androidx.compose.foundation.lazy.layout.IntervalList$Interval;

        $i1 = virtualinvoke r0.<androidx.compose.foundation.lazy.layout.MutableIntervalList: int getSize()>();

        specialinvoke $r3.<androidx.compose.foundation.lazy.layout.IntervalList$Interval: void <init>(int,int,java.lang.Object)>($i1, i0, r1);

        r2 = $r3;

        $i2 = virtualinvoke r0.<androidx.compose.foundation.lazy.layout.MutableIntervalList: int getSize()>();

        $i3 = $i2 + i0;

        r0.<androidx.compose.foundation.lazy.layout.MutableIntervalList: int size> = $i3;

        $r4 = r0.<androidx.compose.foundation.lazy.layout.MutableIntervalList: androidx.compose.runtime.collection.MutableVector intervals>;

        virtualinvoke $r4.<androidx.compose.runtime.collection.MutableVector: boolean add(java.lang.Object)>(r2);

        return;
    }

    public void forEach(int, int, kotlin.jvm.functions.Function1)
    {
        androidx.compose.foundation.lazy.layout.MutableIntervalList r0;
        int i0, i1, $i2, i3, $i4;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.runtime.collection.MutableVector $r2, r18, $r19;
        java.lang.Object[] $r3, $r6;
        java.lang.Object $r4, $r7;
        androidx.compose.foundation.lazy.layout.IntervalList$Interval $r5, r20;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r14;
        java.lang.IllegalArgumentException $r15;
        java.lang.String $r16, $r17;
        boolean $z1;

        r0 := @this: androidx.compose.foundation.lazy.layout.MutableIntervalList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        specialinvoke r0.<androidx.compose.foundation.lazy.layout.MutableIntervalList: void checkIndexBounds(int)>(i0);

        specialinvoke r0.<androidx.compose.foundation.lazy.layout.MutableIntervalList: void checkIndexBounds(int)>(i1);

        if i1 < i0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 != 0 goto label3;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("toIndex (");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") should be not smaller than fromIndex (");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = virtualinvoke $r17.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label3:
        $r2 = r0.<androidx.compose.foundation.lazy.layout.MutableIntervalList: androidx.compose.runtime.collection.MutableVector intervals>;

        i3 = staticinvoke <androidx.compose.foundation.lazy.layout.IntervalListKt: int access$binarySearch(androidx.compose.runtime.collection.MutableVector,int)>($r2, i0);

        r18 = r0.<androidx.compose.foundation.lazy.layout.MutableIntervalList: androidx.compose.runtime.collection.MutableVector intervals>;

        $r3 = virtualinvoke r18.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        $r4 = $r3[i3];

        $r5 = (androidx.compose.foundation.lazy.layout.IntervalList$Interval) $r4;

        $i4 = virtualinvoke $r5.<androidx.compose.foundation.lazy.layout.IntervalList$Interval: int getStartIndex()>();

     label4:
        if $i4 > i1 goto label5;

        $r19 = r0.<androidx.compose.foundation.lazy.layout.MutableIntervalList: androidx.compose.runtime.collection.MutableVector intervals>;

        $r6 = virtualinvoke $r19.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        $r7 = $r6[i3];

        r20 = (androidx.compose.foundation.lazy.layout.IntervalList$Interval) $r7;

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r20);

        $i2 = virtualinvoke r20.<androidx.compose.foundation.lazy.layout.IntervalList$Interval: int getSize()>();

        $i4 = $i4 + $i2;

        i3 = i3 + 1;

        goto label4;

     label5:
        return;
    }

    public androidx.compose.foundation.lazy.layout.IntervalList$Interval get(int)
    {
        androidx.compose.foundation.lazy.layout.MutableIntervalList r0;
        int i0;
        androidx.compose.foundation.lazy.layout.IntervalList$Interval $r1;

        r0 := @this: androidx.compose.foundation.lazy.layout.MutableIntervalList;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.compose.foundation.lazy.layout.MutableIntervalList: void checkIndexBounds(int)>(i0);

        $r1 = specialinvoke r0.<androidx.compose.foundation.lazy.layout.MutableIntervalList: androidx.compose.foundation.lazy.layout.IntervalList$Interval getIntervalForIndex(int)>(i0);

        return $r1;
    }

    private final androidx.compose.foundation.lazy.layout.IntervalList$Interval getIntervalForIndex(int)
    {
        androidx.compose.foundation.lazy.layout.MutableIntervalList r0;
        int i0, i1;
        androidx.compose.foundation.lazy.layout.IntervalList$Interval r1, $r4, r7;
        androidx.compose.runtime.collection.MutableVector $r2, r5;
        java.lang.Object[] $r3;
        boolean $z0;
        java.lang.Object r6;

        r0 := @this: androidx.compose.foundation.lazy.layout.MutableIntervalList;

        i0 := @parameter0: int;

        r1 = r0.<androidx.compose.foundation.lazy.layout.MutableIntervalList: androidx.compose.foundation.lazy.layout.IntervalList$Interval lastInterval>;

        if r1 == null goto label1;

        $z0 = specialinvoke r0.<androidx.compose.foundation.lazy.layout.MutableIntervalList: boolean contains(androidx.compose.foundation.lazy.layout.IntervalList$Interval,int)>(r1, i0);

        if $z0 == 0 goto label1;

        $r4 = r1;

        goto label2;

     label1:
        r5 = r0.<androidx.compose.foundation.lazy.layout.MutableIntervalList: androidx.compose.runtime.collection.MutableVector intervals>;

        $r2 = r0.<androidx.compose.foundation.lazy.layout.MutableIntervalList: androidx.compose.runtime.collection.MutableVector intervals>;

        i1 = staticinvoke <androidx.compose.foundation.lazy.layout.IntervalListKt: int access$binarySearch(androidx.compose.runtime.collection.MutableVector,int)>($r2, i0);

        $r3 = virtualinvoke r5.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        r6 = $r3[i1];

        r7 = (androidx.compose.foundation.lazy.layout.IntervalList$Interval) r6;

        r0.<androidx.compose.foundation.lazy.layout.MutableIntervalList: androidx.compose.foundation.lazy.layout.IntervalList$Interval lastInterval> = r7;

        $r4 = (androidx.compose.foundation.lazy.layout.IntervalList$Interval) r6;

     label2:
        return $r4;
    }

    private final void checkIndexBounds(int)
    {
        androidx.compose.foundation.lazy.layout.MutableIntervalList r0;
        int i0, $i1, $i2;
        java.lang.IndexOutOfBoundsException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;
        java.lang.String $r7;
        boolean $z0;

        r0 := @this: androidx.compose.foundation.lazy.layout.MutableIntervalList;

        i0 := @parameter0: int;

        if 0 > i0 goto label2;

        $i2 = virtualinvoke r0.<androidx.compose.foundation.lazy.layout.MutableIntervalList: int getSize()>();

        if i0 >= $i2 goto label1;

        $z0 = 1;

        goto label3;

     label1:
        $z0 = 0;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        if $z0 != 0 goto label4;

        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", size ");

        $i1 = virtualinvoke r0.<androidx.compose.foundation.lazy.layout.MutableIntervalList: int getSize()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r7);

        throw $r1;

     label4:
        return;
    }

    private final boolean contains(androidx.compose.foundation.lazy.layout.IntervalList$Interval, int)
    {
        androidx.compose.foundation.lazy.layout.MutableIntervalList r0;
        androidx.compose.foundation.lazy.layout.IntervalList$Interval $r1;
        int i0, i1, $i2, $i3, $i4;
        boolean $z0;

        r0 := @this: androidx.compose.foundation.lazy.layout.MutableIntervalList;

        $r1 := @parameter0: androidx.compose.foundation.lazy.layout.IntervalList$Interval;

        i0 := @parameter1: int;

        i1 = virtualinvoke $r1.<androidx.compose.foundation.lazy.layout.IntervalList$Interval: int getStartIndex()>();

        $i2 = virtualinvoke $r1.<androidx.compose.foundation.lazy.layout.IntervalList$Interval: int getStartIndex()>();

        $i3 = virtualinvoke $r1.<androidx.compose.foundation.lazy.layout.IntervalList$Interval: int getSize()>();

        $i4 = $i2 + $i3;

        if i0 >= $i4 goto label2;

        if i1 > i0 goto label1;

        $z0 = 1;

        goto label3;

     label1:
        $z0 = 0;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    static void <clinit>()
    {
        <androidx.compose.foundation.lazy.layout.MutableIntervalList: int $stable> = 8;

        return;
    }

