androidx.remotecallback.compiler.CallableMethod
<androidx.remotecallback.compiler.CallableMethod: java.lang.String EXTERNAL_INPUT>
<androidx.remotecallback.compiler.CallableMethod: java.lang.String BYTE>
<androidx.remotecallback.compiler.CallableMethod: java.lang.String CHAR>
<androidx.remotecallback.compiler.CallableMethod: java.lang.String SHORT>
<androidx.remotecallback.compiler.CallableMethod: java.lang.String INT>
<androidx.remotecallback.compiler.CallableMethod: java.lang.String LONG>
<androidx.remotecallback.compiler.CallableMethod: java.lang.String FLOAT>
<androidx.remotecallback.compiler.CallableMethod: java.lang.String DOUBLE>
<androidx.remotecallback.compiler.CallableMethod: java.lang.String BOOLEAN>
<androidx.remotecallback.compiler.CallableMethod: java.lang.String BYTE_ARRAY>
<androidx.remotecallback.compiler.CallableMethod: java.lang.String CHAR_ARRAY>
<androidx.remotecallback.compiler.CallableMethod: java.lang.String SHORT_ARRAY>
<androidx.remotecallback.compiler.CallableMethod: java.lang.String INT_ARRAY>
<androidx.remotecallback.compiler.CallableMethod: java.lang.String LONG_ARRAY>
<androidx.remotecallback.compiler.CallableMethod: java.lang.String FLOAT_ARRAY>
<androidx.remotecallback.compiler.CallableMethod: java.lang.String DOUBLE_ARRAY>
<androidx.remotecallback.compiler.CallableMethod: java.lang.String BOOLEAN_ARRAY>
<androidx.remotecallback.compiler.CallableMethod: java.lang.String STRING_ARRAY>
<androidx.remotecallback.compiler.CallableMethod: java.lang.String CONTEXT>
<androidx.remotecallback.compiler.CallableMethod: java.lang.String STRING>
<androidx.remotecallback.compiler.CallableMethod: java.lang.String URI>
<androidx.remotecallback.compiler.CallableMethod: java.lang.String OBJ_BYTE>
<androidx.remotecallback.compiler.CallableMethod: java.lang.String CHARACTER>
<androidx.remotecallback.compiler.CallableMethod: java.lang.String OBJ_SHORT>
<androidx.remotecallback.compiler.CallableMethod: java.lang.String INTEGER>
<androidx.remotecallback.compiler.CallableMethod: java.lang.String OBJ_LONG>
<androidx.remotecallback.compiler.CallableMethod: java.lang.String OBJ_FLOAT>
<androidx.remotecallback.compiler.CallableMethod: java.lang.String OBJ_DOUBLE>
<androidx.remotecallback.compiler.CallableMethod: java.lang.String OBJ_BOOLEAN>
<androidx.remotecallback.compiler.CallableMethod: javax.lang.model.element.Element mElement>
<androidx.remotecallback.compiler.CallableMethod: java.util.ArrayList mTypes>
<androidx.remotecallback.compiler.CallableMethod: java.util.ArrayList mNames>
<androidx.remotecallback.compiler.CallableMethod: java.util.ArrayList mExtInputKeys>
<androidx.remotecallback.compiler.CallableMethod: java.lang.String mClsName>
<androidx.remotecallback.compiler.CallableMethod: javax.'annotation'.processing.ProcessingEnvironment mEnv>
<androidx.remotecallback.compiler.CallableMethod: javax.lang.model.type.TypeMirror mReturnType>
    public void <init>(java.lang.String, javax.lang.model.element.Element, javax.'annotation'.processing.ProcessingEnvironment)
    {
        androidx.remotecallback.compiler.CallableMethod r0;
        java.lang.String r1;
        javax.lang.model.element.Element r2;
        javax.'annotation'.processing.ProcessingEnvironment r3;
        java.util.ArrayList $r4, $r5, $r6;

        r0 := @this: androidx.remotecallback.compiler.CallableMethod;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.lang.model.element.Element;

        r3 := @parameter2: javax.'annotation'.processing.ProcessingEnvironment;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<androidx.remotecallback.compiler.CallableMethod: java.util.ArrayList mTypes> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<androidx.remotecallback.compiler.CallableMethod: java.util.ArrayList mNames> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<androidx.remotecallback.compiler.CallableMethod: java.util.ArrayList mExtInputKeys> = $r6;

        r0.<androidx.remotecallback.compiler.CallableMethod: java.lang.String mClsName> = r1;

        r0.<androidx.remotecallback.compiler.CallableMethod: javax.lang.model.element.Element mElement> = r2;

        r0.<androidx.remotecallback.compiler.CallableMethod: javax.'annotation'.processing.ProcessingEnvironment mEnv> = r3;

        specialinvoke r0.<androidx.remotecallback.compiler.CallableMethod: void init()>();

        return;
    }

    public java.lang.String getName()
    {
        androidx.remotecallback.compiler.CallableMethod r0;
        javax.lang.model.element.Element $r1;
        javax.lang.model.element.Name $r2;
        java.lang.String $r3;

        r0 := @this: androidx.remotecallback.compiler.CallableMethod;

        $r1 = r0.<androidx.remotecallback.compiler.CallableMethod: javax.lang.model.element.Element mElement>;

        $r2 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        return $r3;
    }

    private void init()
    {
        androidx.remotecallback.compiler.CallableMethod r0;
        javax.lang.model.type.ExecutableType r1;
        javax.lang.model.element.ExecutableElement r2;
        java.util.List r3, r4;
        javax.lang.model.element.AnnotationMirror r5;
        javax.lang.model.element.Element $r6, $r8;
        javax.lang.model.type.TypeMirror $r7, $r9;
        int $i0, i1;
        java.util.ArrayList $r10, $r14, $r15;
        java.lang.Object $r11, $r12, $r16;
        javax.lang.model.element.VariableElement $r13, $r17;
        javax.lang.model.element.Name $r18;
        java.lang.String $r19, $r20;

        r0 := @this: androidx.remotecallback.compiler.CallableMethod;

        $r6 = r0.<androidx.remotecallback.compiler.CallableMethod: javax.lang.model.element.Element mElement>;

        $r7 = interfaceinvoke $r6.<javax.lang.model.element.Element: javax.lang.model.type.TypeMirror asType()>();

        r1 = (javax.lang.model.type.ExecutableType) $r7;

        $r8 = r0.<androidx.remotecallback.compiler.CallableMethod: javax.lang.model.element.Element mElement>;

        r2 = (javax.lang.model.element.ExecutableElement) $r8;

        r3 = interfaceinvoke r1.<javax.lang.model.type.ExecutableType: java.util.List getParameterTypes()>();

        r4 = interfaceinvoke r2.<javax.lang.model.element.ExecutableElement: java.util.List getParameters()>();

        $r9 = interfaceinvoke r2.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>();

        r0.<androidx.remotecallback.compiler.CallableMethod: javax.lang.model.type.TypeMirror mReturnType> = $r9;

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        if i1 >= $i0 goto label4;

        $r10 = r0.<androidx.remotecallback.compiler.CallableMethod: java.util.ArrayList mTypes>;

        $r11 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i1);

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

        $r12 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i1);

        $r13 = (javax.lang.model.element.VariableElement) $r12;

        r5 = specialinvoke r0.<androidx.remotecallback.compiler.CallableMethod: javax.lang.model.element.AnnotationMirror findAnnotation(javax.lang.model.element.VariableElement,java.lang.String)>($r13, "androidx.remotecallback.ExternalInput");

        $r14 = r0.<androidx.remotecallback.compiler.CallableMethod: java.util.ArrayList mExtInputKeys>;

        if r5 == null goto label2;

        $r20 = specialinvoke r0.<androidx.remotecallback.compiler.CallableMethod: java.lang.String getValue(javax.lang.model.element.AnnotationMirror,java.lang.String,java.lang.String)>(r5, "value", null);

        goto label3;

     label2:
        $r20 = null;

     label3:
        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>($r20);

        $r15 = r0.<androidx.remotecallback.compiler.CallableMethod: java.util.ArrayList mNames>;

        $r16 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i1);

        $r17 = (javax.lang.model.element.VariableElement) $r16;

        $r18 = interfaceinvoke $r17.<javax.lang.model.element.VariableElement: javax.lang.model.element.Name getSimpleName()>();

        $r19 = virtualinvoke $r18.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>($r19);

        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }

    private javax.lang.model.element.AnnotationMirror findAnnotation(javax.lang.model.element.VariableElement, java.lang.String)
    {
        androidx.remotecallback.compiler.CallableMethod r0;
        javax.lang.model.element.VariableElement r1;
        java.lang.String r2, $r8;
        java.util.Iterator r3;
        javax.lang.model.element.AnnotationMirror r4;
        java.util.List $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;
        javax.lang.model.type.DeclaredType $r7;

        r0 := @this: androidx.remotecallback.compiler.CallableMethod;

        r1 := @parameter0: javax.lang.model.element.VariableElement;

        r2 := @parameter1: java.lang.String;

        $r5 = interfaceinvoke r1.<javax.lang.model.element.VariableElement: java.util.List getAnnotationMirrors()>();

        r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (javax.lang.model.element.AnnotationMirror) $r6;

        $r7 = interfaceinvoke r4.<javax.lang.model.element.AnnotationMirror: javax.lang.model.type.DeclaredType getAnnotationType()>();

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label2;

        return r4;

     label2:
        goto label1;

     label3:
        return null;
    }

    private java.lang.String getValue(javax.lang.model.element.AnnotationMirror, java.lang.String, java.lang.String)
    {
        androidx.remotecallback.compiler.CallableMethod r0;
        javax.lang.model.element.AnnotationMirror r1;
        java.lang.String r2, r3, $r14, $r18;
        java.util.Map r4;
        java.util.Iterator r5;
        javax.lang.model.element.ExecutableElement r6;
        javax.lang.model.element.AnnotationValue r7, $r16;
        java.util.Set $r8;
        boolean $z0, $z1;
        javax.'annotation'.processing.ProcessingEnvironment $r9;
        javax.'annotation'.processing.Messager $r10;
        javax.tools.Diagnostic$Kind $r11;
        java.lang.Object $r12, $r15, $r17;
        javax.lang.model.element.Name $r13;

        r0 := @this: androidx.remotecallback.compiler.CallableMethod;

        r1 := @parameter0: javax.lang.model.element.AnnotationMirror;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 = interfaceinvoke r1.<javax.lang.model.element.AnnotationMirror: java.util.Map getElementValues()>();

        $r8 = interfaceinvoke r4.<java.util.Map: java.util.Set keySet()>();

        r5 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (javax.lang.model.element.ExecutableElement) $r12;

        $r13 = interfaceinvoke r6.<javax.lang.model.element.ExecutableElement: javax.lang.model.element.Name getSimpleName()>();

        $r14 = virtualinvoke $r13.<java.lang.Object: java.lang.String toString()>();

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r14, r2);

        if $z1 == 0 goto label4;

        $r15 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        r7 = (javax.lang.model.element.AnnotationValue) $r15;

        if r7 == null goto label2;

        $r18 = interfaceinvoke r7.<javax.lang.model.element.AnnotationValue: java.lang.String toString()>();

        goto label3;

     label2:
        $r16 = interfaceinvoke r6.<javax.lang.model.element.ExecutableElement: javax.lang.model.element.AnnotationValue getDefaultValue()>();

        $r17 = interfaceinvoke $r16.<javax.lang.model.element.AnnotationValue: java.lang.Object getValue()>();

        $r18 = virtualinvoke $r17.<java.lang.Object: java.lang.String toString()>();

     label3:
        return $r18;

     label4:
        goto label1;

     label5:
        if r3 == null goto label6;

        return r3;

     label6:
        $r9 = r0.<androidx.remotecallback.compiler.CallableMethod: javax.'annotation'.processing.ProcessingEnvironment mEnv>;

        $r10 = interfaceinvoke $r9.<javax.'annotation'.processing.ProcessingEnvironment: javax.'annotation'.processing.Messager getMessager()>();

        $r11 = <javax.tools.Diagnostic$Kind: javax.tools.Diagnostic$Kind ERROR>;

        interfaceinvoke $r10.<javax.'annotation'.processing.Messager: void printMessage(javax.tools.Diagnostic$Kind,java.lang.CharSequence)>($r11, "Can\'t find annotation value");

        return null;
    }

    public void addMethods(com.squareup.javapoet.TypeSpec$Builder, com.squareup.javapoet.MethodSpec$Builder, javax.'annotation'.processing.ProcessingEnvironment, javax.'annotation'.processing.Messager)
    {
        androidx.remotecallback.compiler.CallableMethod r0;
        com.squareup.javapoet.TypeSpec$Builder r1;
        com.squareup.javapoet.MethodSpec$Builder r2, $r49, $r50, $r54, r166;
        javax.'annotation'.processing.ProcessingEnvironment r3;
        javax.'annotation'.processing.Messager r4;
        com.squareup.javapoet.ClassName r5, r7, r8, $r51, r160, r165;
        java.lang.String r9, $r13, $r14, $r23, $r26, $r29, $r39, $r61, $r76, $r82, $r83, $r87, $r92, $r93, $r94, $r101, $r111, $r116, $r117, $r121, $r133, $r134, $r142, $r152, $r159, $r162, r163;
        java.lang.StringBuilder r10, $r31, $r73, $r74, $r75, $r108, $r109, $r110, $r118, $r119, $r120, $r138, $r139, $r140, $r141, $r153, $r155, $r158;
        boolean z0, $z1, $z2, $z3, $z4;
        java.util.ArrayList $r11, $r37, $r59, $r69, $r79, $r84, $r89, $r95, $r113, $r123, $r126, $r130, $r136, $r144, $r149, $r156;
        int $i0, $i1, $i2, i3, i4, i5;
        javax.lang.model.type.TypeMirror $r12, $r71, $r81, $r86, $r91, $r115, $r132, $r151;
        java.lang.String[] $r15, $r16, $r17, $r18, $r19, $r48;
        javax.lang.model.element.Element $r20, $r33, $r62;
        javax.lang.model.element.Name $r21, $r34, $r63;
        java.lang.Object[] $r22, $r25, $r28, $r40, $r44, $r57, $r60, $r88, $r100, $r103, $r105, $r122, $r128, $r143;
        com.squareup.javapoet.CodeBlock $r46, $r65;
        com.squareup.javapoet.AnnotationSpec$Builder $r52;
        com.squareup.javapoet.AnnotationSpec $r53;
        javax.lang.model.element.Modifier[] $r55, $r77;
        javax.lang.model.element.Modifier $r56;
        com.squareup.javapoet.MethodSpec $r67;
        java.lang.Object $r70, $r80, $r85, $r90, $r96, $r114, $r124, $r127, $r131, $r137, $r145, $r150, $r157;
        com.squareup.javapoet.TypeName $r72;
        java.lang.Integer $r97, $r106, $r129;
        javax.tools.Diagnostic$Kind $r148, $r154;
        com.squareup.javapoet.CodeBlock$Builder r161, r164;

        r0 := @this: androidx.remotecallback.compiler.CallableMethod;

        r1 := @parameter0: com.squareup.javapoet.TypeSpec$Builder;

        r2 := @parameter1: com.squareup.javapoet.MethodSpec$Builder;

        r3 := @parameter2: javax.'annotation'.processing.ProcessingEnvironment;

        r4 := @parameter3: javax.'annotation'.processing.Messager;

        i3 = 0;

     label01:
        $r11 = r0.<androidx.remotecallback.compiler.CallableMethod: java.util.ArrayList mTypes>;

        $i0 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        if i3 >= $i0 goto label03;

        $r149 = r0.<androidx.remotecallback.compiler.CallableMethod: java.util.ArrayList mTypes>;

        $r150 = virtualinvoke $r149.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r151 = (javax.lang.model.type.TypeMirror) $r150;

        $r152 = interfaceinvoke $r151.<javax.lang.model.type.TypeMirror: java.lang.String toString()>();

        $z4 = specialinvoke r0.<androidx.remotecallback.compiler.CallableMethod: boolean checkType(java.lang.String,javax.'annotation'.processing.Messager)>($r152, r4);

        if $z4 == 0 goto label02;

        $r154 = <javax.tools.Diagnostic$Kind: javax.tools.Diagnostic$Kind ERROR>;

        $r153 = new java.lang.StringBuilder;

        specialinvoke $r153.<java.lang.StringBuilder: void <init>()>();

        $r155 = virtualinvoke $r153.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid type ");

        $r156 = r0.<androidx.remotecallback.compiler.CallableMethod: java.util.ArrayList mTypes>;

        $r157 = virtualinvoke $r156.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r158 = virtualinvoke $r155.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r157);

        $r159 = virtualinvoke $r158.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<javax.'annotation'.processing.Messager: void printMessage(javax.tools.Diagnostic$Kind,java.lang.CharSequence)>($r154, $r159);

        return;

     label02:
        i3 = i3 + 1;

        goto label01;

     label03:
        $r13 = "androidx.remotecallback.RemoteCallback";

        $r12 = r0.<androidx.remotecallback.compiler.CallableMethod: javax.lang.model.type.TypeMirror mReturnType>;

        $r14 = interfaceinvoke $r12.<javax.lang.model.type.TypeMirror: java.lang.String toString()>();

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z1 != 0 goto label04;

        $r148 = <javax.tools.Diagnostic$Kind: javax.tools.Diagnostic$Kind ERROR>;

        interfaceinvoke r4.<javax.'annotation'.processing.Messager: void printMessage(javax.tools.Diagnostic$Kind,java.lang.CharSequence)>($r148, "RemoteCallable methods must return RemoteCallback.LOCAL.");

        return;

     label04:
        $r15 = newarray (java.lang.String)[0];

        r160 = staticinvoke <com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName get(java.lang.String,java.lang.String,java.lang.String[])>("androidx.remotecallback", "CallbackHandlerRegistry", $r15);

        $r16 = newarray (java.lang.String)[0];

        r5 = staticinvoke <com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName get(java.lang.String,java.lang.String,java.lang.String[])>("androidx.remotecallback", "CallbackHandlerRegistry.CallbackHandler", $r16);

        $r17 = newarray (java.lang.String)[0];

        staticinvoke <com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName get(java.lang.String,java.lang.String,java.lang.String[])>("androidx.remotecallback", "RemoteInputHolder", $r17);

        $r18 = newarray (java.lang.String)[0];

        r7 = staticinvoke <com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName get(java.lang.String,java.lang.String,java.lang.String[])>("android.os", "Bundle", $r18);

        $r19 = newarray (java.lang.String)[0];

        r8 = staticinvoke <com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName get(java.lang.String,java.lang.String,java.lang.String[])>("android.content", "Context", $r19);

        r161 = staticinvoke <com.squareup.javapoet.CodeBlock: com.squareup.javapoet.CodeBlock$Builder builder()>();

        $r20 = r0.<androidx.remotecallback.compiler.CallableMethod: javax.lang.model.element.Element mElement>;

        $r21 = interfaceinvoke $r20.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        r9 = virtualinvoke $r21.<java.lang.Object: java.lang.String toString()>();

        $r22 = newarray (java.lang.Object)[3];

        $r22[0] = r160;

        $r23 = r0.<androidx.remotecallback.compiler.CallableMethod: java.lang.String mClsName>;

        $r22[1] = $r23;

        $r22[2] = r9;

        virtualinvoke r161.<com.squareup.javapoet.CodeBlock$Builder: com.squareup.javapoet.CodeBlock$Builder add(java.lang.String,java.lang.Object[])>("$L.registerCallbackHandler($L.class, $S, ", $r22);

        $r25 = newarray (java.lang.Object)[2];

        $r25[0] = r5;

        $r26 = r0.<androidx.remotecallback.compiler.CallableMethod: java.lang.String mClsName>;

        $r25[1] = $r26;

        virtualinvoke r161.<com.squareup.javapoet.CodeBlock$Builder: com.squareup.javapoet.CodeBlock$Builder beginControlFlow(java.lang.String,java.lang.Object[])>("new $L<$L>()", $r25);

        $r28 = newarray (java.lang.Object)[3];

        $r28[0] = r8;

        $r29 = r0.<androidx.remotecallback.compiler.CallableMethod: java.lang.String mClsName>;

        $r28[1] = $r29;

        $r28[2] = r7;

        virtualinvoke r161.<com.squareup.javapoet.CodeBlock$Builder: com.squareup.javapoet.CodeBlock$Builder beginControlFlow(java.lang.String,java.lang.Object[])>("  public void executeCallback($L context, $L receiver, $L args)", $r28);

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        r10 = $r31;

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("receiver.");

        $r33 = r0.<androidx.remotecallback.compiler.CallableMethod: javax.lang.model.element.Element mElement>;

        $r34 = interfaceinvoke $r33.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r34);

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        i4 = 0;

     label05:
        $r37 = r0.<androidx.remotecallback.compiler.CallableMethod: java.util.ArrayList mNames>;

        $i1 = virtualinvoke $r37.<java.util.ArrayList: int size()>();

        if i4 >= $i1 goto label11;

        if i4 == 0 goto label06;

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label06:
        $r108 = new java.lang.StringBuilder;

        specialinvoke $r108.<java.lang.StringBuilder: void <init>()>();

        $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("p");

        $r110 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r111);

        $r113 = r0.<androidx.remotecallback.compiler.CallableMethod: java.util.ArrayList mTypes>;

        $r114 = virtualinvoke $r113.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r115 = (javax.lang.model.type.TypeMirror) $r114;

        $r116 = interfaceinvoke $r115.<javax.lang.model.type.TypeMirror: java.lang.String toString()>();

        $r117 = virtualinvoke r8.<com.squareup.javapoet.ClassName: java.lang.String toString()>();

        $z3 = virtualinvoke $r116.<java.lang.String: boolean equals(java.lang.Object)>($r117);

        if $z3 == 0 goto label07;

        $r138 = new java.lang.StringBuilder;

        specialinvoke $r138.<java.lang.StringBuilder: void <init>()>();

        $r139 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("$L p");

        $r140 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r141 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = context");

        $r142 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.String toString()>();

        $r143 = newarray (java.lang.Object)[1];

        $r144 = r0.<androidx.remotecallback.compiler.CallableMethod: java.util.ArrayList mTypes>;

        $r145 = virtualinvoke $r144.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r143[0] = $r145;

        virtualinvoke r161.<com.squareup.javapoet.CodeBlock$Builder: com.squareup.javapoet.CodeBlock$Builder addStatement(java.lang.String,java.lang.Object[])>($r142, $r143);

        goto label10;

     label07:
        $r118 = new java.lang.StringBuilder;

        specialinvoke $r118.<java.lang.StringBuilder: void <init>()>();

        $r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("$L p");

        $r120 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r121 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.String toString()>();

        $r122 = newarray (java.lang.Object)[1];

        $r123 = r0.<androidx.remotecallback.compiler.CallableMethod: java.util.ArrayList mTypes>;

        $r124 = virtualinvoke $r123.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r122[0] = $r124;

        virtualinvoke r161.<com.squareup.javapoet.CodeBlock$Builder: com.squareup.javapoet.CodeBlock$Builder addStatement(java.lang.String,java.lang.Object[])>($r121, $r122);

        $r126 = r0.<androidx.remotecallback.compiler.CallableMethod: java.util.ArrayList mExtInputKeys>;

        $r127 = virtualinvoke $r126.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        if $r127 == null goto label08;

        $r136 = r0.<androidx.remotecallback.compiler.CallableMethod: java.util.ArrayList mExtInputKeys>;

        $r137 = virtualinvoke $r136.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r162 = (java.lang.String) $r137;

        goto label09;

     label08:
        $r162 = specialinvoke r0.<androidx.remotecallback.compiler.CallableMethod: java.lang.String getBundleKey(int)>(i4);

     label09:
        r163 = $r162;

        $r128 = newarray (java.lang.Object)[2];

        $r129 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        $r128[0] = $r129;

        $r130 = r0.<androidx.remotecallback.compiler.CallableMethod: java.util.ArrayList mTypes>;

        $r131 = virtualinvoke $r130.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r132 = (javax.lang.model.type.TypeMirror) $r131;

        $r133 = interfaceinvoke $r132.<javax.lang.model.type.TypeMirror: java.lang.String toString()>();

        $r134 = specialinvoke r0.<androidx.remotecallback.compiler.CallableMethod: java.lang.String getBundleParam(java.lang.String,java.lang.String)>($r133, r163);

        $r128[1] = $r134;

        virtualinvoke r161.<com.squareup.javapoet.CodeBlock$Builder: com.squareup.javapoet.CodeBlock$Builder addStatement(java.lang.String,java.lang.Object[])>("p$L = $L", $r128);

     label10:
        i4 = i4 + 1;

        goto label05;

     label11:
        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r39 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r40 = newarray (java.lang.Object)[0];

        virtualinvoke r161.<com.squareup.javapoet.CodeBlock$Builder: com.squareup.javapoet.CodeBlock$Builder addStatement(java.lang.String,java.lang.Object[])>($r39, $r40);

        virtualinvoke r161.<com.squareup.javapoet.CodeBlock$Builder: com.squareup.javapoet.CodeBlock$Builder endControlFlow()>();

        virtualinvoke r161.<com.squareup.javapoet.CodeBlock$Builder: com.squareup.javapoet.CodeBlock$Builder endControlFlow()>();

        $r44 = newarray (java.lang.Object)[0];

        virtualinvoke r161.<com.squareup.javapoet.CodeBlock$Builder: com.squareup.javapoet.CodeBlock$Builder add(java.lang.String,java.lang.Object[])>(");\n", $r44);

        $r46 = virtualinvoke r161.<com.squareup.javapoet.CodeBlock$Builder: com.squareup.javapoet.CodeBlock build()>();

        virtualinvoke r2.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addCode(com.squareup.javapoet.CodeBlock)>($r46);

        r164 = staticinvoke <com.squareup.javapoet.CodeBlock: com.squareup.javapoet.CodeBlock$Builder builder()>();

        $r48 = newarray (java.lang.String)[0];

        r165 = staticinvoke <com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName get(java.lang.String,java.lang.String,java.lang.String[])>("androidx.remotecallback", "RemoteCallback", $r48);

        $r49 = staticinvoke <com.squareup.javapoet.MethodSpec: com.squareup.javapoet.MethodSpec$Builder methodBuilder(java.lang.String)>(r9);

        $r50 = virtualinvoke $r49.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder returns(com.squareup.javapoet.TypeName)>(r165);

        $r51 = staticinvoke <com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName bestGuess(java.lang.String)>("Override");

        $r52 = staticinvoke <com.squareup.javapoet.AnnotationSpec: com.squareup.javapoet.AnnotationSpec$Builder builder(com.squareup.javapoet.ClassName)>($r51);

        $r53 = virtualinvoke $r52.<com.squareup.javapoet.AnnotationSpec$Builder: com.squareup.javapoet.AnnotationSpec build()>();

        $r54 = virtualinvoke $r50.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addAnnotation(com.squareup.javapoet.AnnotationSpec)>($r53);

        $r55 = newarray (javax.lang.model.element.Modifier)[1];

        $r56 = <javax.lang.model.element.Modifier: javax.lang.model.element.Modifier PUBLIC>;

        $r55[0] = $r56;

        r166 = virtualinvoke $r54.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addModifiers(javax.lang.model.element.Modifier[])>($r55);

        $r57 = newarray (java.lang.Object)[2];

        $r57[0] = r7;

        $r57[1] = r7;

        virtualinvoke r164.<com.squareup.javapoet.CodeBlock$Builder: com.squareup.javapoet.CodeBlock$Builder addStatement(java.lang.String,java.lang.Object[])>("$L b = new $L()", $r57);

        i5 = 0;

     label12:
        $r59 = r0.<androidx.remotecallback.compiler.CallableMethod: java.util.ArrayList mNames>;

        $i2 = virtualinvoke $r59.<java.util.ArrayList: int size()>();

        if i5 >= $i2 goto label18;

        $r69 = r0.<androidx.remotecallback.compiler.CallableMethod: java.util.ArrayList mTypes>;

        $r70 = virtualinvoke $r69.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r71 = (javax.lang.model.type.TypeMirror) $r70;

        $r72 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($r71);

        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("p");

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        $r77 = newarray (javax.lang.model.element.Modifier)[0];

        virtualinvoke r166.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addParameter(com.squareup.javapoet.TypeName,java.lang.String,javax.lang.model.element.Modifier[])>($r72, $r76, $r77);

        $r79 = r0.<androidx.remotecallback.compiler.CallableMethod: java.util.ArrayList mTypes>;

        $r80 = virtualinvoke $r79.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r81 = (javax.lang.model.type.TypeMirror) $r80;

        $r82 = interfaceinvoke $r81.<javax.lang.model.type.TypeMirror: java.lang.String toString()>();

        $r83 = virtualinvoke r8.<com.squareup.javapoet.ClassName: java.lang.String toString()>();

        $z2 = virtualinvoke $r82.<java.lang.String: boolean equals(java.lang.Object)>($r83);

        if $z2 == 0 goto label13;

        goto label17;

     label13:
        $r84 = r0.<androidx.remotecallback.compiler.CallableMethod: java.util.ArrayList mTypes>;

        $r85 = virtualinvoke $r84.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r86 = (javax.lang.model.type.TypeMirror) $r85;

        $r87 = interfaceinvoke $r86.<javax.lang.model.type.TypeMirror: java.lang.String toString()>();

        z0 = specialinvoke r0.<androidx.remotecallback.compiler.CallableMethod: boolean isNative(java.lang.String)>($r87);

        if z0 != 0 goto label14;

        $r105 = newarray (java.lang.Object)[1];

        $r106 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        $r105[0] = $r106;

        virtualinvoke r164.<com.squareup.javapoet.CodeBlock$Builder: com.squareup.javapoet.CodeBlock$Builder beginControlFlow(java.lang.String,java.lang.Object[])>("if (p$L != null)", $r105);

     label14:
        $r88 = newarray (java.lang.Object)[4];

        $r89 = r0.<androidx.remotecallback.compiler.CallableMethod: java.util.ArrayList mTypes>;

        $r90 = virtualinvoke $r89.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r91 = (javax.lang.model.type.TypeMirror) $r90;

        $r92 = interfaceinvoke $r91.<javax.lang.model.type.TypeMirror: java.lang.String toString()>();

        $r93 = specialinvoke r0.<androidx.remotecallback.compiler.CallableMethod: java.lang.String getTypeMethod(java.lang.String)>($r92);

        $r88[0] = $r93;

        $r94 = specialinvoke r0.<androidx.remotecallback.compiler.CallableMethod: java.lang.String getBundleKey(int)>(i5);

        $r88[1] = $r94;

        $r95 = r0.<androidx.remotecallback.compiler.CallableMethod: java.util.ArrayList mTypes>;

        $r96 = virtualinvoke $r95.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r88[2] = $r96;

        $r97 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        $r88[3] = $r97;

        virtualinvoke r164.<com.squareup.javapoet.CodeBlock$Builder: com.squareup.javapoet.CodeBlock$Builder addStatement(java.lang.String,java.lang.Object[])>("b.put$L($L, ($L) p$L)", $r88);

        if z0 != 0 goto label15;

        $r103 = newarray (java.lang.Object)[0];

        virtualinvoke r164.<com.squareup.javapoet.CodeBlock$Builder: com.squareup.javapoet.CodeBlock$Builder nextControlFlow(java.lang.String,java.lang.Object[])>("else", $r103);

     label15:
        if z0 != 0 goto label16;

        $r100 = newarray (java.lang.Object)[1];

        $r101 = specialinvoke r0.<androidx.remotecallback.compiler.CallableMethod: java.lang.String getBundleKey(int)>(i5);

        $r100[0] = $r101;

        virtualinvoke r164.<com.squareup.javapoet.CodeBlock$Builder: com.squareup.javapoet.CodeBlock$Builder addStatement(java.lang.String,java.lang.Object[])>("b.putString($L, null)", $r100);

     label16:
        if z0 != 0 goto label17;

        virtualinvoke r164.<com.squareup.javapoet.CodeBlock$Builder: com.squareup.javapoet.CodeBlock$Builder endControlFlow()>();

     label17:
        i5 = i5 + 1;

        goto label12;

     label18:
        $r60 = newarray (java.lang.Object)[2];

        $r61 = r0.<androidx.remotecallback.compiler.CallableMethod: java.lang.String mClsName>;

        $r60[0] = $r61;

        $r62 = r0.<androidx.remotecallback.compiler.CallableMethod: javax.lang.model.element.Element mElement>;

        $r63 = interfaceinvoke $r62.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r60[1] = $r63;

        virtualinvoke r164.<com.squareup.javapoet.CodeBlock$Builder: com.squareup.javapoet.CodeBlock$Builder addStatement(java.lang.String,java.lang.Object[])>("return androidx.remotecallback.CallbackHandlerRegistry.stubToRemoteCallback(this, $L.class, b, $S)", $r60);

        $r65 = virtualinvoke r164.<com.squareup.javapoet.CodeBlock$Builder: com.squareup.javapoet.CodeBlock build()>();

        virtualinvoke r166.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addCode(com.squareup.javapoet.CodeBlock)>($r65);

        $r67 = virtualinvoke r166.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec build()>();

        virtualinvoke r1.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder addMethod(com.squareup.javapoet.MethodSpec)>($r67);

        return;
    }

    private int countArgs(com.squareup.javapoet.ClassName)
    {
        androidx.remotecallback.compiler.CallableMethod r0;
        com.squareup.javapoet.ClassName r1;
        java.util.ArrayList $r2, $r3;
        int $i0, i1, i2;
        java.lang.Object $r4;
        javax.lang.model.type.TypeMirror $r5;
        java.lang.String $r6, $r7;
        boolean $z0;

        r0 := @this: androidx.remotecallback.compiler.CallableMethod;

        r1 := @parameter0: com.squareup.javapoet.ClassName;

        i1 = 0;

        i2 = 0;

     label1:
        $r2 = r0.<androidx.remotecallback.compiler.CallableMethod: java.util.ArrayList mTypes>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i2 >= $i0 goto label4;

        $r3 = r0.<androidx.remotecallback.compiler.CallableMethod: java.util.ArrayList mTypes>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r5 = (javax.lang.model.type.TypeMirror) $r4;

        $r6 = interfaceinvoke $r5.<javax.lang.model.type.TypeMirror: java.lang.String toString()>();

        $r7 = virtualinvoke r1.<com.squareup.javapoet.ClassName: java.lang.String toString()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        i1 = i1 + 1;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return i1;
    }

    private java.lang.String getBundleParam(java.lang.String, int)
    {
        androidx.remotecallback.compiler.CallableMethod r0;
        java.lang.String r1, r2, $r3;
        int i0;

        r0 := @this: androidx.remotecallback.compiler.CallableMethod;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 = specialinvoke r0.<androidx.remotecallback.compiler.CallableMethod: java.lang.String getBundleKey(int)>(i0);

        $r3 = specialinvoke r0.<androidx.remotecallback.compiler.CallableMethod: java.lang.String getBundleParam(java.lang.String,java.lang.String)>(r1, r2);

        return $r3;
    }

    private boolean isNative(java.lang.String)
    {
        androidx.remotecallback.compiler.CallableMethod r0;
        java.lang.String r1, r2;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        byte b1;

        r0 := @this: androidx.remotecallback.compiler.CallableMethod;

        r1 := @parameter0: java.lang.String;

        r2 = r1;

        b1 = -1;

        $i0 = virtualinvoke r2.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1325958191: goto label07;
            case 104431: goto label04;
            case 3039496: goto label01;
            case 3052374: goto label02;
            case 3327612: goto label05;
            case 64711720: goto label08;
            case 97526364: goto label06;
            case 109413500: goto label03;
            default: goto label09;
        };

     label01:
        $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("byte");

        if $z5 == 0 goto label09;

        b1 = 0;

        goto label09;

     label02:
        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("char");

        if $z4 == 0 goto label09;

        b1 = 1;

        goto label09;

     label03:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("short");

        if $z0 == 0 goto label09;

        b1 = 2;

        goto label09;

     label04:
        $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("int");

        if $z6 == 0 goto label09;

        b1 = 3;

        goto label09;

     label05:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("long");

        if $z3 == 0 goto label09;

        b1 = 4;

        goto label09;

     label06:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("float");

        if $z1 == 0 goto label09;

        b1 = 5;

        goto label09;

     label07:
        $z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("double");

        if $z7 == 0 goto label09;

        b1 = 6;

        goto label09;

     label08:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("boolean");

        if $z2 == 0 goto label09;

        b1 = 7;

     label09:
        tableswitch(b1)
        {
            case 0: goto label10;
            case 1: goto label10;
            case 2: goto label10;
            case 3: goto label10;
            case 4: goto label10;
            case 5: goto label10;
            case 6: goto label10;
            case 7: goto label10;
            default: goto label11;
        };

     label10:
        return 1;

     label11:
        return 0;
    }

    private java.lang.String getBundleParam(java.lang.String, java.lang.String)
    {
        androidx.remotecallback.compiler.CallableMethod r0;
        java.lang.String r1, r2, r3, $r8, $r13, $r18, $r23, $r28, $r33, $r38, $r43, $r50;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r14, $r15, $r16, $r17, $r19, $r20, $r21, $r22, $r24, $r25, $r26, $r27, $r29, $r30, $r31, $r32, $r34, $r35, $r36, $r37, $r39, $r40, $r41, $r42, $r44, $r45, $r46, $r47, $r48, $r49;
        byte b1;

        r0 := @this: androidx.remotecallback.compiler.CallableMethod;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 = r1;

        b1 = -1;

        $i0 = virtualinvoke r3.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1325958191: goto label07;
            case 104431: goto label04;
            case 3039496: goto label01;
            case 3052374: goto label02;
            case 3327612: goto label05;
            case 64711720: goto label08;
            case 97526364: goto label06;
            case 109413500: goto label03;
            default: goto label09;
        };

     label01:
        $z5 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("byte");

        if $z5 == 0 goto label09;

        b1 = 0;

        goto label09;

     label02:
        $z4 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("char");

        if $z4 == 0 goto label09;

        b1 = 1;

        goto label09;

     label03:
        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("short");

        if $z0 == 0 goto label09;

        b1 = 2;

        goto label09;

     label04:
        $z6 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("int");

        if $z6 == 0 goto label09;

        b1 = 3;

        goto label09;

     label05:
        $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("long");

        if $z3 == 0 goto label09;

        b1 = 4;

        goto label09;

     label06:
        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("float");

        if $z1 == 0 goto label09;

        b1 = 5;

        goto label09;

     label07:
        $z7 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("double");

        if $z7 == 0 goto label09;

        b1 = 6;

        goto label09;

     label08:
        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("boolean");

        if $z2 == 0 goto label09;

        b1 = 7;

     label09:
        tableswitch(b1)
        {
            case 0: goto label10;
            case 1: goto label11;
            case 2: goto label12;
            case 3: goto label13;
            case 4: goto label14;
            case 5: goto label15;
            case 6: goto label16;
            case 7: goto label17;
            default: goto label18;
        };

     label10:
        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("args.getByte(");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", (byte) 0)");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r43;

     label11:
        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("args.getChar(");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", (char) 0)");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r38;

     label12:
        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("args.getShort(");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", (short) 0)");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r33;

     label13:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("args.getInt(");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", 0)");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r28;

     label14:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("args.getLong(");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", 0)");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r23;

     label15:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("args.getFloat(");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", 0f)");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r18;

     label16:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("args.getDouble(");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", 0.0)");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;

     label17:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("args.getBoolean(");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", false)");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;

     label18:
        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") args.get(");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r50;
    }

    private java.lang.String getTypeMethod(java.lang.String)
    {
        androidx.remotecallback.compiler.CallableMethod r0;
        java.lang.String r1, r2, $r7;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26;
        java.lang.RuntimeException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        byte b1;

        r0 := @this: androidx.remotecallback.compiler.CallableMethod;

        r1 := @parameter0: java.lang.String;

        r2 = r1;

        b1 = -1;

        $i0 = virtualinvoke r2.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -2056817302: goto label23;
            case -1374008726: goto label11;
            case -1361632968: goto label12;
            case -1325958191: goto label07;
            case -1097129250: goto label15;
            case -766441794: goto label16;
            case -527879800: goto label25;
            case -515992664: goto label22;
            case 104431: goto label04;
            case 3039496: goto label01;
            case 3052374: goto label02;
            case 3327612: goto label05;
            case 64711720: goto label08;
            case 97526364: goto label06;
            case 100361105: goto label14;
            case 109413500: goto label03;
            case 155276373: goto label21;
            case 344809556: goto label27;
            case 398507100: goto label20;
            case 398795216: goto label24;
            case 761287205: goto label26;
            case 1195259493: goto label09;
            case 1359468275: goto label17;
            case 1888107655: goto label19;
            case 1978937596: goto label10;
            case 2058423690: goto label18;
            case 2067161310: goto label13;
            default: goto label28;
        };

     label01:
        $z17 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("byte");

        if $z17 == 0 goto label28;

        b1 = 0;

        goto label28;

     label02:
        $z16 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("char");

        if $z16 == 0 goto label28;

        b1 = 1;

        goto label28;

     label03:
        $z11 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("short");

        if $z11 == 0 goto label28;

        b1 = 2;

        goto label28;

     label04:
        $z18 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("int");

        if $z18 == 0 goto label28;

        b1 = 3;

        goto label28;

     label05:
        $z15 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("long");

        if $z15 == 0 goto label28;

        b1 = 4;

        goto label28;

     label06:
        $z13 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("float");

        if $z13 == 0 goto label28;

        b1 = 5;

        goto label28;

     label07:
        $z23 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("double");

        if $z23 == 0 goto label28;

        b1 = 6;

        goto label28;

     label08:
        $z14 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("boolean");

        if $z14 == 0 goto label28;

        b1 = 7;

        goto label28;

     label09:
        $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.String");

        if $z5 == 0 goto label28;

        b1 = 8;

        goto label28;

     label10:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("android.net.Uri");

        if $z2 == 0 goto label28;

        b1 = 9;

        goto label28;

     label11:
        $z25 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("byte[]");

        if $z25 == 0 goto label28;

        b1 = 10;

        goto label28;

     label12:
        $z24 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("char[]");

        if $z24 == 0 goto label28;

        b1 = 11;

        goto label28;

     label13:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("short[]");

        if $z0 == 0 goto label28;

        b1 = 12;

        goto label28;

     label14:
        $z12 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("int[]");

        if $z12 == 0 goto label28;

        b1 = 13;

        goto label28;

     label15:
        $z22 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("long[]");

        if $z22 == 0 goto label28;

        b1 = 14;

        goto label28;

     label16:
        $z21 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("float[]");

        if $z21 == 0 goto label28;

        b1 = 15;

        goto label28;

     label17:
        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("double[]");

        if $z4 == 0 goto label28;

        b1 = 16;

        goto label28;

     label18:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("boolean[]");

        if $z1 == 0 goto label28;

        b1 = 17;

        goto label28;

     label19:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.String[]");

        if $z3 == 0 goto label28;

        b1 = 18;

        goto label28;

     label20:
        $z8 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Byte");

        if $z8 == 0 goto label28;

        b1 = 19;

        goto label28;

     label21:
        $z10 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Character");

        if $z10 == 0 goto label28;

        b1 = 20;

        goto label28;

     label22:
        $z19 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Short");

        if $z19 == 0 goto label28;

        b1 = 21;

        goto label28;

     label23:
        $z26 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Integer");

        if $z26 == 0 goto label28;

        b1 = 22;

        goto label28;

     label24:
        $z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Long");

        if $z7 == 0 goto label28;

        b1 = 23;

        goto label28;

     label25:
        $z20 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Float");

        if $z20 == 0 goto label28;

        b1 = 24;

        goto label28;

     label26:
        $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Double");

        if $z6 == 0 goto label28;

        b1 = 25;

        goto label28;

     label27:
        $z9 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Boolean");

        if $z9 == 0 goto label28;

        b1 = 26;

     label28:
        tableswitch(b1)
        {
            case 0: goto label29;
            case 1: goto label30;
            case 2: goto label31;
            case 3: goto label32;
            case 4: goto label33;
            case 5: goto label34;
            case 6: goto label35;
            case 7: goto label36;
            case 8: goto label37;
            case 9: goto label38;
            case 10: goto label39;
            case 11: goto label40;
            case 12: goto label41;
            case 13: goto label42;
            case 14: goto label43;
            case 15: goto label44;
            case 16: goto label45;
            case 17: goto label46;
            case 18: goto label47;
            case 19: goto label48;
            case 20: goto label49;
            case 21: goto label50;
            case 22: goto label51;
            case 23: goto label52;
            case 24: goto label53;
            case 25: goto label54;
            case 26: goto label55;
            default: goto label56;
        };

     label29:
        return "Byte";

     label30:
        return "Char";

     label31:
        return "Short";

     label32:
        return "Int";

     label33:
        return "Long";

     label34:
        return "Float";

     label35:
        return "Double";

     label36:
        return "Boolean";

     label37:
        return "String";

     label38:
        return "Parcelable";

     label39:
        return "ByteArray";

     label40:
        return "CharArray";

     label41:
        return "ShortArray";

     label42:
        return "IntArray";

     label43:
        return "LongArray";

     label44:
        return "FloatArray";

     label45:
        return "DoubleArray";

     label46:
        return "BooleanArray";

     label47:
        return "StringArray";

     label48:
        return "Byte";

     label49:
        return "Char";

     label50:
        return "Short";

     label51:
        return "Int";

     label52:
        return "Long";

     label53:
        return "Float";

     label54:
        return "Double";

     label55:
        return "Boolean";

     label56:
        $r3 = new java.lang.RuntimeException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid type ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r3;
    }

    private java.lang.String getBundleKey(int)
    {
        androidx.remotecallback.compiler.CallableMethod r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: androidx.remotecallback.compiler.CallableMethod;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"p");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    private boolean checkType(java.lang.String, javax.'annotation'.processing.Messager)
    {
        androidx.remotecallback.compiler.CallableMethod r0;
        java.lang.String r1, r3;
        javax.'annotation'.processing.Messager r2;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27;
        byte b1;

        r0 := @this: androidx.remotecallback.compiler.CallableMethod;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.'annotation'.processing.Messager;

        r3 = r1;

        b1 = -1;

        $i0 = virtualinvoke r3.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -2056817302: goto label24;
            case -1503993957: goto label10;
            case -1374008726: goto label11;
            case -1361632968: goto label12;
            case -1325958191: goto label07;
            case -1097129250: goto label15;
            case -766441794: goto label16;
            case -527879800: goto label26;
            case -515992664: goto label23;
            case 104431: goto label04;
            case 3039496: goto label01;
            case 3052374: goto label02;
            case 3327612: goto label05;
            case 64711720: goto label08;
            case 97526364: goto label06;
            case 100361105: goto label14;
            case 109413500: goto label03;
            case 155276373: goto label22;
            case 344809556: goto label28;
            case 398507100: goto label21;
            case 398795216: goto label25;
            case 761287205: goto label27;
            case 1195259493: goto label09;
            case 1359468275: goto label17;
            case 1888107655: goto label19;
            case 1978937596: goto label20;
            case 2058423690: goto label18;
            case 2067161310: goto label13;
            default: goto label29;
        };

     label01:
        $z17 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("byte");

        if $z17 == 0 goto label29;

        b1 = 0;

        goto label29;

     label02:
        $z16 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("char");

        if $z16 == 0 goto label29;

        b1 = 1;

        goto label29;

     label03:
        $z11 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("short");

        if $z11 == 0 goto label29;

        b1 = 2;

        goto label29;

     label04:
        $z18 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("int");

        if $z18 == 0 goto label29;

        b1 = 3;

        goto label29;

     label05:
        $z15 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("long");

        if $z15 == 0 goto label29;

        b1 = 4;

        goto label29;

     label06:
        $z13 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("float");

        if $z13 == 0 goto label29;

        b1 = 5;

        goto label29;

     label07:
        $z23 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("double");

        if $z23 == 0 goto label29;

        b1 = 6;

        goto label29;

     label08:
        $z14 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("boolean");

        if $z14 == 0 goto label29;

        b1 = 7;

        goto label29;

     label09:
        $z5 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.String");

        if $z5 == 0 goto label29;

        b1 = 8;

        goto label29;

     label10:
        $z26 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("android.content.Context");

        if $z26 == 0 goto label29;

        b1 = 9;

        goto label29;

     label11:
        $z25 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("byte[]");

        if $z25 == 0 goto label29;

        b1 = 10;

        goto label29;

     label12:
        $z24 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("char[]");

        if $z24 == 0 goto label29;

        b1 = 11;

        goto label29;

     label13:
        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("short[]");

        if $z0 == 0 goto label29;

        b1 = 12;

        goto label29;

     label14:
        $z12 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("int[]");

        if $z12 == 0 goto label29;

        b1 = 13;

        goto label29;

     label15:
        $z22 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("long[]");

        if $z22 == 0 goto label29;

        b1 = 14;

        goto label29;

     label16:
        $z21 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("float[]");

        if $z21 == 0 goto label29;

        b1 = 15;

        goto label29;

     label17:
        $z4 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("double[]");

        if $z4 == 0 goto label29;

        b1 = 16;

        goto label29;

     label18:
        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("boolean[]");

        if $z1 == 0 goto label29;

        b1 = 17;

        goto label29;

     label19:
        $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.String[]");

        if $z3 == 0 goto label29;

        b1 = 18;

        goto label29;

     label20:
        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("android.net.Uri");

        if $z2 == 0 goto label29;

        b1 = 19;

        goto label29;

     label21:
        $z8 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Byte");

        if $z8 == 0 goto label29;

        b1 = 20;

        goto label29;

     label22:
        $z10 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Character");

        if $z10 == 0 goto label29;

        b1 = 21;

        goto label29;

     label23:
        $z19 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Short");

        if $z19 == 0 goto label29;

        b1 = 22;

        goto label29;

     label24:
        $z27 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Integer");

        if $z27 == 0 goto label29;

        b1 = 23;

        goto label29;

     label25:
        $z7 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Long");

        if $z7 == 0 goto label29;

        b1 = 24;

        goto label29;

     label26:
        $z20 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Float");

        if $z20 == 0 goto label29;

        b1 = 25;

        goto label29;

     label27:
        $z6 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Double");

        if $z6 == 0 goto label29;

        b1 = 26;

        goto label29;

     label28:
        $z9 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Boolean");

        if $z9 == 0 goto label29;

        b1 = 27;

     label29:
        tableswitch(b1)
        {
            case 0: goto label30;
            case 1: goto label30;
            case 2: goto label30;
            case 3: goto label30;
            case 4: goto label30;
            case 5: goto label30;
            case 6: goto label30;
            case 7: goto label30;
            case 8: goto label30;
            case 9: goto label30;
            case 10: goto label30;
            case 11: goto label30;
            case 12: goto label30;
            case 13: goto label30;
            case 14: goto label30;
            case 15: goto label30;
            case 16: goto label30;
            case 17: goto label30;
            case 18: goto label30;
            case 19: goto label30;
            case 20: goto label30;
            case 21: goto label30;
            case 22: goto label30;
            case 23: goto label30;
            case 24: goto label30;
            case 25: goto label30;
            case 26: goto label30;
            case 27: goto label30;
            default: goto label31;
        };

     label30:
        return 0;

     label31:
        return 1;
    }

