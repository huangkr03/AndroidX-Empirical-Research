androidx.media2.exoplayer.FileDescriptorUtil
<androidx.media2.exoplayer.FileDescriptorUtil: int SEEK_SET>
<androidx.media2.exoplayer.FileDescriptorUtil: java.lang.Object sPosixLockV14>
<androidx.media2.exoplayer.FileDescriptorUtil: java.lang.Object sPosixObjectV14>
<androidx.media2.exoplayer.FileDescriptorUtil: java.lang.reflect.Method sLseekMethodV14>
<androidx.media2.exoplayer.FileDescriptorUtil: java.lang.reflect.Method sDupMethodV14>
<androidx.media2.exoplayer.FileDescriptorUtil: java.lang.reflect.Method sCloseMethodV14>
    public static java.io.FileDescriptor dup(java.io.FileDescriptor) throws java.io.IOException
    {
        java.io.FileDescriptor r0, $r1, $r2;
        int $i0;

        r0 := @parameter0: java.io.FileDescriptor;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $r2 = staticinvoke <androidx.media2.exoplayer.FileDescriptorUtil: java.io.FileDescriptor dupV21(java.io.FileDescriptor)>(r0);

        return $r2;

     label1:
        $r1 = staticinvoke <androidx.media2.exoplayer.FileDescriptorUtil: java.io.FileDescriptor dupV14(java.io.FileDescriptor)>(r0);

        return $r1;
    }

    public static void seek(java.io.FileDescriptor, long) throws java.io.IOException
    {
        java.io.FileDescriptor r0;
        long l0;
        int $i1;

        r0 := @parameter0: java.io.FileDescriptor;

        l0 := @parameter1: long;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 21 goto label1;

        staticinvoke <androidx.media2.exoplayer.FileDescriptorUtil: void seekV21(java.io.FileDescriptor,long)>(r0, l0);

        goto label2;

     label1:
        staticinvoke <androidx.media2.exoplayer.FileDescriptorUtil: void seekV14(java.io.FileDescriptor,long)>(r0, l0);

     label2:
        return;
    }

    public static void close(java.io.FileDescriptor) throws java.io.IOException
    {
        java.io.FileDescriptor r0;
        int $i0;

        r0 := @parameter0: java.io.FileDescriptor;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        staticinvoke <androidx.media2.exoplayer.FileDescriptorUtil: void closeV21(java.io.FileDescriptor)>(r0);

        goto label2;

     label1:
        staticinvoke <androidx.media2.exoplayer.FileDescriptorUtil: java.io.FileDescriptor closeV14(java.io.FileDescriptor)>(r0);

     label2:
        return;
    }

    private static java.io.FileDescriptor dupV21(java.io.FileDescriptor) throws java.io.IOException
    {
        java.io.FileDescriptor r0, $r2;
        java.lang.Throwable r1, $r3;
        java.io.IOException $r4;

        r0 := @parameter0: java.io.FileDescriptor;

     label1:
        $r2 = staticinvoke <android.system.Os: java.io.FileDescriptor dup(java.io.FileDescriptor)>(r0);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to dup the file descriptor", r1);

        throw $r4;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static java.io.FileDescriptor dupV14(java.io.FileDescriptor) throws java.io.IOException
    {
        java.io.FileDescriptor r0, $r7;
        java.lang.Object r1, r2, $r4, $r6;
        java.lang.Throwable r3, $r8, $r9, r12;
        java.lang.Object[] $r5;
        java.io.IOException $r10;
        java.lang.reflect.Method r11;

        r0 := @parameter0: java.io.FileDescriptor;

     label1:
        $r4 = <androidx.media2.exoplayer.FileDescriptorUtil: java.lang.Object sPosixLockV14>;

        r2 = $r4;

        entermonitor $r4;

     label2:
        staticinvoke <androidx.media2.exoplayer.FileDescriptorUtil: void ensurePosixObjectsInitialized()>();

        r1 = <androidx.media2.exoplayer.FileDescriptorUtil: java.lang.Object sPosixObjectV14>;

        r11 = <androidx.media2.exoplayer.FileDescriptorUtil: java.lang.reflect.Method sDupMethodV14>;

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r0;

        $r6 = virtualinvoke r11.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r5);

        $r7 = (java.io.FileDescriptor) $r6;

     label7:
        return $r7;

     label8:
        $r9 := @caughtexception;

        r12 = $r9;

        $r10 = new java.io.IOException;

        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to dup the file descriptor", r12);

        throw $r10;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
        catch java.lang.Exception from label1 to label7 with label8;
    }

    private static void seekV21(java.io.FileDescriptor, long) throws java.io.IOException
    {
        java.io.FileDescriptor r0;
        long l0;
        java.lang.Throwable r1, $r2;
        int $i1;
        java.io.IOException $r3;

        r0 := @parameter0: java.io.FileDescriptor;

        l0 := @parameter1: long;

     label1:
        $i1 = <android.system.OsConstants: int SEEK_SET>;

        staticinvoke <android.system.Os: long lseek(java.io.FileDescriptor,long,int)>(r0, l0, $i1);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to seek the file descriptor", r1);

        throw $r3;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static void seekV14(java.io.FileDescriptor, long) throws java.io.IOException
    {
        java.io.FileDescriptor r0;
        long l0;
        java.lang.Object r1, r2, $r4;
        java.lang.Throwable r3, $r9, $r10, r13;
        java.lang.Object[] $r5;
        java.lang.Long $r6;
        java.lang.Integer $r7;
        java.io.IOException $r11;
        java.lang.reflect.Method r12;

        r0 := @parameter0: java.io.FileDescriptor;

        l0 := @parameter1: long;

     label1:
        $r4 = <androidx.media2.exoplayer.FileDescriptorUtil: java.lang.Object sPosixLockV14>;

        r2 = $r4;

        entermonitor $r4;

     label2:
        staticinvoke <androidx.media2.exoplayer.FileDescriptorUtil: void ensurePosixObjectsInitialized()>();

        r1 = <androidx.media2.exoplayer.FileDescriptorUtil: java.lang.Object sPosixObjectV14>;

        r12 = <androidx.media2.exoplayer.FileDescriptorUtil: java.lang.reflect.Method sLseekMethodV14>;

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        $r5 = newarray (java.lang.Object)[3];

        $r5[0] = r0;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r5[1] = $r6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r5[2] = $r7;

        virtualinvoke r12.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r5);

     label7:
        goto label9;

     label8:
        $r10 := @caughtexception;

        r13 = $r10;

        $r11 = new java.io.IOException;

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to seek the file descriptor", r13);

        throw $r11;

     label9:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
        catch java.lang.Exception from label1 to label7 with label8;
    }

    private static void closeV21(java.io.FileDescriptor) throws java.io.IOException
    {
        java.io.FileDescriptor r0;
        java.lang.Throwable r1, $r2;
        java.io.IOException $r3;

        r0 := @parameter0: java.io.FileDescriptor;

     label1:
        staticinvoke <android.system.Os: void close(java.io.FileDescriptor)>(r0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to close the file descriptor", r1);

        throw $r3;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static java.io.FileDescriptor closeV14(java.io.FileDescriptor) throws java.io.IOException
    {
        java.io.FileDescriptor r0, $r7;
        java.lang.Object r1, r2, $r4, $r6;
        java.lang.Throwable r3, $r8, $r9, r12;
        java.lang.Object[] $r5;
        java.io.IOException $r10;
        java.lang.reflect.Method r11;

        r0 := @parameter0: java.io.FileDescriptor;

     label1:
        $r4 = <androidx.media2.exoplayer.FileDescriptorUtil: java.lang.Object sPosixLockV14>;

        r2 = $r4;

        entermonitor $r4;

     label2:
        staticinvoke <androidx.media2.exoplayer.FileDescriptorUtil: void ensurePosixObjectsInitialized()>();

        r1 = <androidx.media2.exoplayer.FileDescriptorUtil: java.lang.Object sPosixObjectV14>;

        r11 = <androidx.media2.exoplayer.FileDescriptorUtil: java.lang.reflect.Method sCloseMethodV14>;

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r0;

        $r6 = virtualinvoke r11.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r5);

        $r7 = (java.io.FileDescriptor) $r6;

     label7:
        return $r7;

     label8:
        $r9 := @caughtexception;

        r12 = $r9;

        $r10 = new java.io.IOException;

        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to close the file descriptor", r12);

        throw $r10;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
        catch java.lang.Exception from label1 to label7 with label8;
    }

    private static void ensurePosixObjectsInitialized() throws java.lang.Exception
    {
        java.lang.Object r0, $r4, $r5, $r16;
        java.lang.Class r1, $r8, $r9;
        java.lang.reflect.Constructor r2;
        java.lang.Throwable r3, $r17;
        java.lang.Class[] $r6, $r7, $r11, $r13;
        java.lang.reflect.Method $r10, $r12, $r14;
        java.lang.Object[] $r15;

        $r4 = <androidx.media2.exoplayer.FileDescriptorUtil: java.lang.Object sPosixLockV14>;

        r0 = $r4;

        entermonitor $r4;

     label1:
        $r5 = <androidx.media2.exoplayer.FileDescriptorUtil: java.lang.Object sPosixObjectV14>;

        if $r5 == null goto label3;

        exitmonitor r0;

     label2:
        return;

     label3:
        r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("libcore.io.Posix");

        $r6 = newarray (java.lang.Class)[0];

        r2 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r6);

        virtualinvoke r2.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

        $r7 = newarray (java.lang.Class)[3];

        $r7[0] = class "Ljava/io/FileDescriptor;";

        $r8 = <java.lang.Long: java.lang.Class TYPE>;

        $r7[1] = $r8;

        $r9 = <java.lang.Integer: java.lang.Class TYPE>;

        $r7[2] = $r9;

        $r10 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("lseek", $r7);

        <androidx.media2.exoplayer.FileDescriptorUtil: java.lang.reflect.Method sLseekMethodV14> = $r10;

        $r11 = newarray (java.lang.Class)[1];

        $r11[0] = class "Ljava/io/FileDescriptor;";

        $r12 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("dup", $r11);

        <androidx.media2.exoplayer.FileDescriptorUtil: java.lang.reflect.Method sDupMethodV14> = $r12;

        $r13 = newarray (java.lang.Class)[1];

        $r13[0] = class "Ljava/io/FileDescriptor;";

        $r14 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("close", $r13);

        <androidx.media2.exoplayer.FileDescriptorUtil: java.lang.reflect.Method sCloseMethodV14> = $r14;

        $r15 = newarray (java.lang.Object)[0];

        $r16 = virtualinvoke r2.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r15);

        <androidx.media2.exoplayer.FileDescriptorUtil: java.lang.Object sPosixObjectV14> = $r16;

        exitmonitor r0;

     label4:
        goto label7;

     label5:
        $r17 := @caughtexception;

        r3 = $r17;

        exitmonitor r0;

     label6:
        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void <init>()
    {
        androidx.media2.exoplayer.FileDescriptorUtil r0;

        r0 := @this: androidx.media2.exoplayer.FileDescriptorUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <androidx.media2.exoplayer.FileDescriptorUtil: java.lang.Object sPosixLockV14> = $r0;

        return;
    }

