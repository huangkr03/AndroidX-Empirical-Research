androidx.compose.animation.graphics.vector.PropertyValuesHolderColor
<androidx.compose.animation.graphics.vector.PropertyValuesHolderColor: java.util.List animatorKeyframes>
    public void <init>(java.lang.String, java.util.List)
    {
        androidx.compose.animation.graphics.vector.PropertyValuesHolderColor r0;
        java.lang.String r1;
        java.util.List r2;

        r0 := @this: androidx.compose.animation.graphics.vector.PropertyValuesHolderColor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "propertyName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "animatorKeyframes");

        specialinvoke r0.<androidx.compose.animation.graphics.vector.PropertyValuesHolder1D: void <init>(java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, null);

        r0.<androidx.compose.animation.graphics.vector.PropertyValuesHolderColor: java.util.List animatorKeyframes> = r2;

        return;
    }

    public java.util.List getAnimatorKeyframes()
    {
        androidx.compose.animation.graphics.vector.PropertyValuesHolderColor r0;
        java.util.List $r1;

        r0 := @this: androidx.compose.animation.graphics.vector.PropertyValuesHolderColor;

        $r1 = r0.<androidx.compose.animation.graphics.vector.PropertyValuesHolderColor: java.util.List animatorKeyframes>;

        return $r1;
    }

    public final androidx.compose.animation.core.KeyframesSpec asKeyframeSpec(int)
    {
        androidx.compose.animation.graphics.vector.PropertyValuesHolderColor r0;
        int i0;
        androidx.compose.animation.graphics.vector.PropertyValuesHolderColor$asKeyframeSpec$1 $r1;
        kotlin.jvm.functions.Function1 $r2;
        androidx.compose.animation.core.KeyframesSpec $r3;

        r0 := @this: androidx.compose.animation.graphics.vector.PropertyValuesHolderColor;

        i0 := @parameter0: int;

        $r1 = new androidx.compose.animation.graphics.vector.PropertyValuesHolderColor$asKeyframeSpec$1;

        specialinvoke $r1.<androidx.compose.animation.graphics.vector.PropertyValuesHolderColor$asKeyframeSpec$1: void <init>(int,androidx.compose.animation.graphics.vector.PropertyValuesHolderColor)>(i0, r0);

        $r2 = (kotlin.jvm.functions.Function1) $r1;

        $r3 = staticinvoke <androidx.compose.animation.core.AnimationSpecKt: androidx.compose.animation.core.KeyframesSpec keyframes(kotlin.jvm.functions.Function1)>($r2);

        return $r3;
    }

androidx.compose.animation.graphics.vector.PropertyValuesHolderColor$asKeyframeSpec$1
<androidx.compose.animation.graphics.vector.PropertyValuesHolderColor$asKeyframeSpec$1: int $duration>
<androidx.compose.animation.graphics.vector.PropertyValuesHolderColor$asKeyframeSpec$1: androidx.compose.animation.graphics.vector.PropertyValuesHolderColor this$0>
    void <init>(int, androidx.compose.animation.graphics.vector.PropertyValuesHolderColor)
    {
        androidx.compose.animation.graphics.vector.PropertyValuesHolderColor$asKeyframeSpec$1 r0;
        int $i0;
        androidx.compose.animation.graphics.vector.PropertyValuesHolderColor $r1;

        r0 := @this: androidx.compose.animation.graphics.vector.PropertyValuesHolderColor$asKeyframeSpec$1;

        $i0 := @parameter0: int;

        $r1 := @parameter1: androidx.compose.animation.graphics.vector.PropertyValuesHolderColor;

        r0.<androidx.compose.animation.graphics.vector.PropertyValuesHolderColor$asKeyframeSpec$1: int $duration> = $i0;

        r0.<androidx.compose.animation.graphics.vector.PropertyValuesHolderColor$asKeyframeSpec$1: androidx.compose.animation.graphics.vector.PropertyValuesHolderColor this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.compose.animation.core.KeyframesSpec$KeyframesSpecConfig)
    {
        androidx.compose.animation.graphics.vector.PropertyValuesHolderColor$asKeyframeSpec$1 r0;
        androidx.compose.animation.core.KeyframesSpec$KeyframesSpecConfig $r1;
        java.util.Iterator r2;
        androidx.compose.animation.graphics.vector.Keyframe r3;
        int $i0, $i1, $i2;
        androidx.compose.animation.graphics.vector.PropertyValuesHolderColor $r4;
        java.util.List $r5;
        boolean $z0;
        java.lang.Object $r6, $r7;
        float $f0, $f1, $f2;
        androidx.compose.animation.core.KeyframesSpec$KeyframeEntity $r8;
        androidx.compose.animation.core.Easing $r9;

        r0 := @this: androidx.compose.animation.graphics.vector.PropertyValuesHolderColor$asKeyframeSpec$1;

        $r1 := @parameter0: androidx.compose.animation.core.KeyframesSpec$KeyframesSpecConfig;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$keyframes");

        $i0 = r0.<androidx.compose.animation.graphics.vector.PropertyValuesHolderColor$asKeyframeSpec$1: int $duration>;

        virtualinvoke $r1.<androidx.compose.animation.core.KeyframesSpec$KeyframesSpecConfig: void setDurationMillis(int)>($i0);

        $r4 = r0.<androidx.compose.animation.graphics.vector.PropertyValuesHolderColor$asKeyframeSpec$1: androidx.compose.animation.graphics.vector.PropertyValuesHolderColor this$0>;

        $r5 = virtualinvoke $r4.<androidx.compose.animation.graphics.vector.PropertyValuesHolderColor: java.util.List getAnimatorKeyframes()>();

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.compose.animation.graphics.vector.Keyframe) $r6;

        $r7 = virtualinvoke r3.<androidx.compose.animation.graphics.vector.Keyframe: java.lang.Object getValue()>();

        $i1 = r0.<androidx.compose.animation.graphics.vector.PropertyValuesHolderColor$asKeyframeSpec$1: int $duration>;

        $f0 = (float) $i1;

        $f1 = virtualinvoke r3.<androidx.compose.animation.graphics.vector.Keyframe: float getFraction()>();

        $f2 = $f0 * $f1;

        $i2 = (int) $f2;

        $r8 = virtualinvoke $r1.<androidx.compose.animation.core.KeyframesSpec$KeyframesSpecConfig: androidx.compose.animation.core.KeyframesSpec$KeyframeEntity at(java.lang.Object,int)>($r7, $i2);

        $r9 = virtualinvoke r3.<androidx.compose.animation.graphics.vector.Keyframe: androidx.compose.animation.core.Easing getInterpolator()>();

        virtualinvoke $r1.<androidx.compose.animation.core.KeyframesSpec$KeyframesSpecConfig: void 'with'(androidx.compose.animation.core.KeyframesSpec$KeyframeEntity,androidx.compose.animation.core.Easing)>($r8, $r9);

        goto label1;

     label2:
        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.animation.graphics.vector.PropertyValuesHolderColor$asKeyframeSpec$1 r0;
        java.lang.Object r1;
        androidx.compose.animation.core.KeyframesSpec$KeyframesSpecConfig $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.compose.animation.graphics.vector.PropertyValuesHolderColor$asKeyframeSpec$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.animation.core.KeyframesSpec$KeyframesSpecConfig) r1;

        virtualinvoke r0.<androidx.compose.animation.graphics.vector.PropertyValuesHolderColor$asKeyframeSpec$1: void invoke(androidx.compose.animation.core.KeyframesSpec$KeyframesSpecConfig)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

