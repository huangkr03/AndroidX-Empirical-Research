androidx.test.internal.runner.listener.InstrumentationResultPrinter
<androidx.test.internal.runner.listener.InstrumentationResultPrinter: java.lang.String TAG>
<androidx.test.internal.runner.listener.InstrumentationResultPrinter: java.lang.String REPORT_VALUE_ID>
<androidx.test.internal.runner.listener.InstrumentationResultPrinter: java.lang.String REPORT_KEY_NUM_TOTAL>
<androidx.test.internal.runner.listener.InstrumentationResultPrinter: java.lang.String REPORT_KEY_NUM_CURRENT>
<androidx.test.internal.runner.listener.InstrumentationResultPrinter: java.lang.String REPORT_KEY_NAME_CLASS>
<androidx.test.internal.runner.listener.InstrumentationResultPrinter: java.lang.String REPORT_KEY_NAME_TEST>
<androidx.test.internal.runner.listener.InstrumentationResultPrinter: int REPORT_VALUE_RESULT_START>
<androidx.test.internal.runner.listener.InstrumentationResultPrinter: int REPORT_VALUE_RESULT_OK>
<androidx.test.internal.runner.listener.InstrumentationResultPrinter: int REPORT_VALUE_RESULT_ERROR>
<androidx.test.internal.runner.listener.InstrumentationResultPrinter: int REPORT_VALUE_RESULT_FAILURE>
<androidx.test.internal.runner.listener.InstrumentationResultPrinter: int REPORT_VALUE_RESULT_IGNORED>
<androidx.test.internal.runner.listener.InstrumentationResultPrinter: int REPORT_VALUE_RESULT_ASSUMPTION_FAILURE>
<androidx.test.internal.runner.listener.InstrumentationResultPrinter: java.lang.String REPORT_KEY_STACK>
<androidx.test.internal.runner.listener.InstrumentationResultPrinter: java.util.concurrent.atomic.AtomicInteger testNum>
<androidx.test.internal.runner.listener.InstrumentationResultPrinter: org.junit.runner.Description description>
<androidx.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle resultTemplate>
<androidx.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle testResult>
<androidx.test.internal.runner.listener.InstrumentationResultPrinter: int testResultCode>
<androidx.test.internal.runner.listener.InstrumentationResultPrinter: java.lang.String testClass>
    public void <init>()
    {
        androidx.test.internal.runner.listener.InstrumentationResultPrinter r0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        org.junit.runner.Description $r2;
        android.os.Bundle $r3, $r4, $r5;

        r0 := @this: androidx.test.internal.runner.listener.InstrumentationResultPrinter;

        specialinvoke r0.<androidx.test.internal.runner.listener.InstrumentationRunListener: void <init>()>();

        $r1 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: java.util.concurrent.atomic.AtomicInteger testNum> = $r1;

        $r2 = <org.junit.runner.Description: org.junit.runner.Description EMPTY>;

        r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: org.junit.runner.Description description> = $r2;

        r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: int testResultCode> = -999;

        r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: java.lang.String testClass> = null;

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle resultTemplate> = $r3;

        $r4 = new android.os.Bundle;

        $r5 = r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle resultTemplate>;

        specialinvoke $r4.<android.os.Bundle: void <init>(android.os.Bundle)>($r5);

        r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle testResult> = $r4;

        return;
    }

    public void instrumentationRunFinished(java.io.PrintStream, android.os.Bundle, org.junit.runner.Result)
    {
        androidx.test.internal.runner.listener.InstrumentationResultPrinter r0;
        java.io.PrintStream r1;
        android.os.Bundle r2;
        org.junit.runner.Result r3;
        org.junit.internal.TextListener $r4;

        r0 := @this: androidx.test.internal.runner.listener.InstrumentationResultPrinter;

        r1 := @parameter0: java.io.PrintStream;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: org.junit.runner.Result;

        $r4 = new org.junit.internal.TextListener;

        specialinvoke $r4.<org.junit.internal.TextListener: void <init>(java.io.PrintStream)>(r1);

        virtualinvoke $r4.<org.junit.internal.TextListener: void testRunFinished(org.junit.runner.Result)>(r3);

        return;
    }

    private void reportFailure(org.junit.runner.notification.Failure)
    {
        androidx.test.internal.runner.listener.InstrumentationResultPrinter r0;
        org.junit.runner.notification.Failure r1;
        java.lang.String r2, $r7, $r8;
        android.os.Bundle $r3, $r5;
        java.lang.Object[] $r4;
        org.junit.runner.Description $r6;

        r0 := @this: androidx.test.internal.runner.listener.InstrumentationResultPrinter;

        r1 := @parameter0: org.junit.runner.notification.Failure;

        r2 = staticinvoke <androidx.test.services.events.internal.StackTrimmer: java.lang.String getTrimmedStackTrace(org.junit.runner.notification.Failure)>(r1);

        $r3 = r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle testResult>;

        virtualinvoke $r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stack", r2);

        $r5 = r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle testResult>;

        $r4 = newarray (java.lang.Object)[2];

        $r6 = virtualinvoke r1.<org.junit.runner.notification.Failure: org.junit.runner.Description getDescription()>();

        $r7 = virtualinvoke $r6.<org.junit.runner.Description: java.lang.String getDisplayName()>();

        $r4[0] = $r7;

        $r4[1] = r2;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\nError in %s:\n%s", $r4);

        virtualinvoke $r5.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stream", $r8);

        return;
    }

    public void reportProcessCrash(java.lang.Throwable)
    {
        androidx.test.internal.runner.listener.InstrumentationResultPrinter r0;
        java.lang.Throwable r1, $r20, r32;
        java.lang.String r2, $r6, $r11, $r13, $r14, $r27, r29, $r30, r31, r33;
        org.junit.runner.notification.Failure $r3, r28;
        org.junit.runner.Description $r4, $r15, $r16, $r21, $r22;
        android.os.Bundle $r5, $r8;
        boolean $z0;
        java.lang.StringBuilder $r7, $r9, $r10, $r17, $r18, $r19, $r23, $r24, $r25, $r26;
        java.lang.Object[] $r12;

        r0 := @this: androidx.test.internal.runner.listener.InstrumentationResultPrinter;

        r1 := @parameter0: java.lang.Throwable;

     label1:
        r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: int testResultCode> = -2;

        $r3 = new org.junit.runner.notification.Failure;

        $r4 = r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: org.junit.runner.Description description>;

        specialinvoke $r3.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>($r4, r1);

        r28 = $r3;

        $r5 = r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle testResult>;

        $r6 = virtualinvoke r28.<org.junit.runner.notification.Failure: java.lang.String getTrace()>();

        virtualinvoke $r5.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stack", $r6);

        $z0 = specialinvoke r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: boolean isAnyTestStarted()>();

        if $z0 == 0 goto label2;

        $r16 = r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: org.junit.runner.Description description>;

        r29 = virtualinvoke $r16.<org.junit.runner.Description: java.lang.String getDisplayName()>();

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nProcess crashed while executing ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

        $r30 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;

     label2:
        $r30 = "\nProcess crashed before executing the test(s)";

     label3:
        r2 = $r30;

        $r8 = r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle testResult>;

        r31 = r2;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":\n%s");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = newarray (java.lang.Object)[1];

        $r13 = virtualinvoke r28.<org.junit.runner.notification.Failure: java.lang.String getTrace()>();

        $r12[0] = $r13;

        $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r11, $r12);

        virtualinvoke $r8.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stream", $r14);

        $r15 = r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: org.junit.runner.Description description>;

        virtualinvoke r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: void testFinished(org.junit.runner.Description)>($r15);

     label4:
        goto label7;

     label5:
        $r20 := @caughtexception;

        r32 = $r20;

        $r21 = r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: org.junit.runner.Description description>;

        if null != $r21 goto label6;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("InstrumentationResultPrinter", "Failed to initialize test before process crash", r32);

        goto label7;

     label6:
        $r22 = r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: org.junit.runner.Description description>;

        r33 = virtualinvoke $r22.<org.junit.runner.Description: java.lang.String getDisplayName()>();

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to mark test ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as finished after process crash");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("InstrumentationResultPrinter", $r27, r32);

     label7:
        return;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    public void testAssumptionFailure(org.junit.runner.notification.Failure)
    {
        androidx.test.internal.runner.listener.InstrumentationResultPrinter r0;
        org.junit.runner.notification.Failure r1;
        android.os.Bundle $r2;
        java.lang.String $r3;

        r0 := @this: androidx.test.internal.runner.listener.InstrumentationResultPrinter;

        r1 := @parameter0: org.junit.runner.notification.Failure;

        r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: int testResultCode> = -4;

        $r2 = r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle testResult>;

        $r3 = virtualinvoke r1.<org.junit.runner.notification.Failure: java.lang.String getTrace()>();

        virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stack", $r3);

        return;
    }

    public void testFailure(org.junit.runner.notification.Failure) throws java.lang.Exception
    {
        androidx.test.internal.runner.listener.InstrumentationResultPrinter r0;
        org.junit.runner.notification.Failure r1;
        boolean $z0, z1;
        org.junit.runner.Description $r2, $r3;

        r0 := @this: androidx.test.internal.runner.listener.InstrumentationResultPrinter;

        r1 := @parameter0: org.junit.runner.notification.Failure;

        z1 = 0;

        $z0 = specialinvoke r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: boolean isAnyTestStarted()>();

        if $z0 != 0 goto label1;

        $r3 = virtualinvoke r1.<org.junit.runner.notification.Failure: org.junit.runner.Description getDescription()>();

        virtualinvoke r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: void testStarted(org.junit.runner.Description)>($r3);

        z1 = 1;

     label1:
        r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: int testResultCode> = -2;

        specialinvoke r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: void reportFailure(org.junit.runner.notification.Failure)>(r1);

        if z1 == 0 goto label2;

        $r2 = virtualinvoke r1.<org.junit.runner.notification.Failure: org.junit.runner.Description getDescription()>();

        virtualinvoke r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: void testFinished(org.junit.runner.Description)>($r2);

     label2:
        return;
    }

    public void testFinished(org.junit.runner.Description) throws java.lang.Exception
    {
        androidx.test.internal.runner.listener.InstrumentationResultPrinter r0;
        org.junit.runner.Description r1;
        int $i0, $i1;
        android.os.Bundle $r2, $r3;

        r0 := @this: androidx.test.internal.runner.listener.InstrumentationResultPrinter;

        r1 := @parameter0: org.junit.runner.Description;

        $i0 = r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: int testResultCode>;

        if $i0 != 0 goto label1;

        $r3 = r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle testResult>;

        virtualinvoke $r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stream", ".");

     label1:
        $i1 = r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: int testResultCode>;

        $r2 = r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle testResult>;

        virtualinvoke r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: void sendStatus(int,android.os.Bundle)>($i1, $r2);

        return;
    }

    public void testIgnored(org.junit.runner.Description) throws java.lang.Exception
    {
        androidx.test.internal.runner.listener.InstrumentationResultPrinter r0;
        org.junit.runner.Description r1;

        r0 := @this: androidx.test.internal.runner.listener.InstrumentationResultPrinter;

        r1 := @parameter0: org.junit.runner.Description;

        virtualinvoke r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: void testStarted(org.junit.runner.Description)>(r1);

        r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: int testResultCode> = -3;

        virtualinvoke r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: void testFinished(org.junit.runner.Description)>(r1);

        return;
    }

    public void testRunStarted(org.junit.runner.Description) throws java.lang.Exception
    {
        androidx.test.internal.runner.listener.InstrumentationResultPrinter r0;
        org.junit.runner.Description r1;
        android.os.Bundle $r2, $r3;
        int $i0;

        r0 := @this: androidx.test.internal.runner.listener.InstrumentationResultPrinter;

        r1 := @parameter0: org.junit.runner.Description;

        $r2 = r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle resultTemplate>;

        virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("id", "AndroidJUnitRunner");

        $r3 = r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle resultTemplate>;

        $i0 = virtualinvoke r1.<org.junit.runner.Description: int testCount()>();

        virtualinvoke $r3.<android.os.Bundle: void putInt(java.lang.String,int)>("numtests", $i0);

        return;
    }

    public void testStarted(org.junit.runner.Description) throws java.lang.Exception
    {
        androidx.test.internal.runner.listener.InstrumentationResultPrinter r0;
        org.junit.runner.Description r1;
        java.lang.String r2, r3, $r12, $r15;
        java.util.concurrent.atomic.AtomicInteger $r4, $r9;
        android.os.Bundle $r5, $r6, $r7, $r8, $r10, $r11, $r14, $r16;
        int $i1;
        boolean $z0;
        java.lang.Object[] $r13;

        r0 := @this: androidx.test.internal.runner.listener.InstrumentationResultPrinter;

        r1 := @parameter0: org.junit.runner.Description;

        $r4 = r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: java.util.concurrent.atomic.AtomicInteger testNum>;

        virtualinvoke $r4.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: org.junit.runner.Description description> = r1;

        r2 = virtualinvoke r1.<org.junit.runner.Description: java.lang.String getClassName()>();

        r3 = virtualinvoke r1.<org.junit.runner.Description: java.lang.String getMethodName()>();

        $r5 = new android.os.Bundle;

        $r6 = r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle resultTemplate>;

        specialinvoke $r5.<android.os.Bundle: void <init>(android.os.Bundle)>($r6);

        r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle testResult> = $r5;

        $r7 = r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle testResult>;

        virtualinvoke $r7.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("class", r2);

        $r8 = r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle testResult>;

        virtualinvoke $r8.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("test", r3);

        $r10 = r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle testResult>;

        $r9 = r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: java.util.concurrent.atomic.AtomicInteger testNum>;

        $i1 = virtualinvoke $r9.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        virtualinvoke $r10.<android.os.Bundle: void putInt(java.lang.String,int)>("current", $i1);

        if r2 == null goto label1;

        $r12 = r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: java.lang.String testClass>;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z0 != 0 goto label1;

        $r14 = r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle testResult>;

        $r13 = newarray (java.lang.Object)[1];

        $r13[0] = r2;

        $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\n%s:", $r13);

        virtualinvoke $r14.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stream", $r15);

        r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: java.lang.String testClass> = r2;

        goto label2;

     label1:
        $r11 = r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle testResult>;

        virtualinvoke $r11.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("stream", "");

     label2:
        $r16 = r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: android.os.Bundle testResult>;

        virtualinvoke r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: void sendStatus(int,android.os.Bundle)>(1, $r16);

        r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: int testResultCode> = 0;

        return;
    }

    private boolean isAnyTestStarted()
    {
        androidx.test.internal.runner.listener.InstrumentationResultPrinter r0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.test.internal.runner.listener.InstrumentationResultPrinter;

        $r1 = r0.<androidx.test.internal.runner.listener.InstrumentationResultPrinter: java.util.concurrent.atomic.AtomicInteger testNum>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

