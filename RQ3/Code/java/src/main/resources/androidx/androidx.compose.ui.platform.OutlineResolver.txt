androidx.compose.ui.platform.OutlineResolver
<androidx.compose.ui.platform.OutlineResolver: androidx.compose.ui.unit.Density density>
<androidx.compose.ui.platform.OutlineResolver: boolean isSupportedOutline>
<androidx.compose.ui.platform.OutlineResolver: android.graphics.Outline cachedOutline>
<androidx.compose.ui.platform.OutlineResolver: long size>
<androidx.compose.ui.platform.OutlineResolver: androidx.compose.ui.graphics.Shape shape>
<androidx.compose.ui.platform.OutlineResolver: androidx.compose.ui.graphics.Path cachedRrectPath>
<androidx.compose.ui.platform.OutlineResolver: androidx.compose.ui.graphics.Path outlinePath>
<androidx.compose.ui.platform.OutlineResolver: boolean cacheIsDirty>
<androidx.compose.ui.platform.OutlineResolver: boolean usePathForClip>
<androidx.compose.ui.platform.OutlineResolver: androidx.compose.ui.graphics.Path tmpPath>
<androidx.compose.ui.platform.OutlineResolver: androidx.compose.ui.geometry.RoundRect tmpRoundRect>
<androidx.compose.ui.platform.OutlineResolver: float roundedCornerRadius>
<androidx.compose.ui.platform.OutlineResolver: long rectTopLeft>
<androidx.compose.ui.platform.OutlineResolver: long rectSize>
<androidx.compose.ui.platform.OutlineResolver: boolean outlineNeeded>
<androidx.compose.ui.platform.OutlineResolver: androidx.compose.ui.unit.LayoutDirection layoutDirection>
<androidx.compose.ui.platform.OutlineResolver: androidx.compose.ui.graphics.Path tmpTouchPointPath>
<androidx.compose.ui.platform.OutlineResolver: androidx.compose.ui.graphics.Path tmpOpPath>
<androidx.compose.ui.platform.OutlineResolver: androidx.compose.ui.graphics.Outline calculatedOutline>
    public void <init>(androidx.compose.ui.unit.Density)
    {
        androidx.compose.ui.platform.OutlineResolver r0, r3;
        androidx.compose.ui.unit.Density r1;
        android.graphics.Outline r2, $r4;
        androidx.compose.ui.geometry.Size$Companion $r5, $r8;
        long $l0, $l1, $l2;
        androidx.compose.ui.graphics.Shape $r6;
        androidx.compose.ui.geometry.Offset$Companion $r7;
        androidx.compose.ui.unit.LayoutDirection $r9;

        r0 := @this: androidx.compose.ui.platform.OutlineResolver;

        r1 := @parameter0: androidx.compose.ui.unit.Density;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "density");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.platform.OutlineResolver: androidx.compose.ui.unit.Density density> = r1;

        r0.<androidx.compose.ui.platform.OutlineResolver: boolean isSupportedOutline> = 1;

        $r4 = new android.graphics.Outline;

        specialinvoke $r4.<android.graphics.Outline: void <init>()>();

        r2 = $r4;

        r3 = r0;

        virtualinvoke r2.<android.graphics.Outline: void setAlpha(float)>(1.0F);

        r3.<androidx.compose.ui.platform.OutlineResolver: android.graphics.Outline cachedOutline> = r2;

        $r5 = <androidx.compose.ui.geometry.Size: androidx.compose.ui.geometry.Size$Companion Companion>;

        $l0 = virtualinvoke $r5.<androidx.compose.ui.geometry.Size$Companion: long getZero-NH-jbRc()>();

        r0.<androidx.compose.ui.platform.OutlineResolver: long size> = $l0;

        $r6 = staticinvoke <androidx.compose.ui.graphics.RectangleShapeKt: androidx.compose.ui.graphics.Shape getRectangleShape()>();

        r0.<androidx.compose.ui.platform.OutlineResolver: androidx.compose.ui.graphics.Shape shape> = $r6;

        $r7 = <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset$Companion Companion>;

        $l1 = virtualinvoke $r7.<androidx.compose.ui.geometry.Offset$Companion: long getZero-F1C5BW0()>();

        r0.<androidx.compose.ui.platform.OutlineResolver: long rectTopLeft> = $l1;

        $r8 = <androidx.compose.ui.geometry.Size: androidx.compose.ui.geometry.Size$Companion Companion>;

        $l2 = virtualinvoke $r8.<androidx.compose.ui.geometry.Size$Companion: long getZero-NH-jbRc()>();

        r0.<androidx.compose.ui.platform.OutlineResolver: long rectSize> = $l2;

        $r9 = <androidx.compose.ui.unit.LayoutDirection: androidx.compose.ui.unit.LayoutDirection Ltr>;

        r0.<androidx.compose.ui.platform.OutlineResolver: androidx.compose.ui.unit.LayoutDirection layoutDirection> = $r9;

        return;
    }

    public final android.graphics.Outline getOutline()
    {
        androidx.compose.ui.platform.OutlineResolver r0;
        boolean $z0, $z1;
        android.graphics.Outline $r1;

        r0 := @this: androidx.compose.ui.platform.OutlineResolver;

        specialinvoke r0.<androidx.compose.ui.platform.OutlineResolver: void updateCache()>();

        $z0 = r0.<androidx.compose.ui.platform.OutlineResolver: boolean outlineNeeded>;

        if $z0 == 0 goto label1;

        $z1 = r0.<androidx.compose.ui.platform.OutlineResolver: boolean isSupportedOutline>;

        if $z1 != 0 goto label2;

     label1:
        $r1 = null;

        goto label3;

     label2:
        $r1 = r0.<androidx.compose.ui.platform.OutlineResolver: android.graphics.Outline cachedOutline>;

     label3:
        return $r1;
    }

    public final boolean getOutlineClipSupported()
    {
        androidx.compose.ui.platform.OutlineResolver r0;
        boolean $z0, $z1;

        r0 := @this: androidx.compose.ui.platform.OutlineResolver;

        $z0 = r0.<androidx.compose.ui.platform.OutlineResolver: boolean usePathForClip>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public final androidx.compose.ui.graphics.Path getClipPath()
    {
        androidx.compose.ui.platform.OutlineResolver r0;
        androidx.compose.ui.graphics.Path $r1;

        r0 := @this: androidx.compose.ui.platform.OutlineResolver;

        specialinvoke r0.<androidx.compose.ui.platform.OutlineResolver: void updateCache()>();

        $r1 = r0.<androidx.compose.ui.platform.OutlineResolver: androidx.compose.ui.graphics.Path outlinePath>;

        return $r1;
    }

    public final boolean update(androidx.compose.ui.graphics.Shape, float, boolean, float, androidx.compose.ui.unit.LayoutDirection, androidx.compose.ui.unit.Density)
    {
        androidx.compose.ui.platform.OutlineResolver r0;
        androidx.compose.ui.graphics.Shape r1, $r5;
        float f0, f1;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7;
        androidx.compose.ui.unit.LayoutDirection r2, $r6;
        androidx.compose.ui.unit.Density r3, $r7;
        android.graphics.Outline $r4;
        byte $b0;

        r0 := @this: androidx.compose.ui.platform.OutlineResolver;

        r1 := @parameter0: androidx.compose.ui.graphics.Shape;

        f0 := @parameter1: float;

        z0 := @parameter2: boolean;

        f1 := @parameter3: float;

        r2 := @parameter4: androidx.compose.ui.unit.LayoutDirection;

        r3 := @parameter5: androidx.compose.ui.unit.Density;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "shape");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "layoutDirection");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "density");

        $r4 = r0.<androidx.compose.ui.platform.OutlineResolver: android.graphics.Outline cachedOutline>;

        virtualinvoke $r4.<android.graphics.Outline: void setAlpha(float)>(f0);

        $r5 = r0.<androidx.compose.ui.platform.OutlineResolver: androidx.compose.ui.graphics.Shape shape>;

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, r1);

        if $z3 != 0 goto label1;

        $z6 = 1;

        goto label2;

     label1:
        $z6 = 0;

     label2:
        z1 = $z6;

        if z1 == 0 goto label3;

        r0.<androidx.compose.ui.platform.OutlineResolver: androidx.compose.ui.graphics.Shape shape> = r1;

        r0.<androidx.compose.ui.platform.OutlineResolver: boolean cacheIsDirty> = 1;

     label3:
        if z0 != 0 goto label4;

        $b0 = f1 cmpl 0.0F;

        if $b0 <= 0 goto label5;

     label4:
        $z7 = 1;

        goto label6;

     label5:
        $z7 = 0;

     label6:
        z2 = $z7;

        $z4 = r0.<androidx.compose.ui.platform.OutlineResolver: boolean outlineNeeded>;

        if $z4 == z2 goto label7;

        r0.<androidx.compose.ui.platform.OutlineResolver: boolean outlineNeeded> = z2;

        r0.<androidx.compose.ui.platform.OutlineResolver: boolean cacheIsDirty> = 1;

     label7:
        $r6 = r0.<androidx.compose.ui.platform.OutlineResolver: androidx.compose.ui.unit.LayoutDirection layoutDirection>;

        if $r6 == r2 goto label8;

        r0.<androidx.compose.ui.platform.OutlineResolver: androidx.compose.ui.unit.LayoutDirection layoutDirection> = r2;

        r0.<androidx.compose.ui.platform.OutlineResolver: boolean cacheIsDirty> = 1;

     label8:
        $r7 = r0.<androidx.compose.ui.platform.OutlineResolver: androidx.compose.ui.unit.Density density>;

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, r3);

        if $z5 != 0 goto label9;

        r0.<androidx.compose.ui.platform.OutlineResolver: androidx.compose.ui.unit.Density density> = r3;

        r0.<androidx.compose.ui.platform.OutlineResolver: boolean cacheIsDirty> = 1;

     label9:
        return z1;
    }

    public final boolean isInOutline-k-4lQ0M(long)
    {
        androidx.compose.ui.platform.OutlineResolver r0;
        long l0;
        androidx.compose.ui.graphics.Outline r1, $r2;
        boolean $z0, $z1;
        float $f0, $f1;
        androidx.compose.ui.graphics.Path $r3, $r4;

        r0 := @this: androidx.compose.ui.platform.OutlineResolver;

        l0 := @parameter0: long;

        $z0 = r0.<androidx.compose.ui.platform.OutlineResolver: boolean outlineNeeded>;

        if $z0 != 0 goto label1;

        return 1;

     label1:
        $r2 = r0.<androidx.compose.ui.platform.OutlineResolver: androidx.compose.ui.graphics.Outline calculatedOutline>;

        if $r2 != null goto label2;

        return 1;

     label2:
        r1 = $r2;

        $f0 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l0);

        $f1 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l0);

        $r4 = r0.<androidx.compose.ui.platform.OutlineResolver: androidx.compose.ui.graphics.Path tmpTouchPointPath>;

        $r3 = r0.<androidx.compose.ui.platform.OutlineResolver: androidx.compose.ui.graphics.Path tmpOpPath>;

        $z1 = staticinvoke <androidx.compose.ui.platform.ShapeContainingUtilKt: boolean isInOutline(androidx.compose.ui.graphics.Outline,float,float,androidx.compose.ui.graphics.Path,androidx.compose.ui.graphics.Path)>(r1, $f0, $f1, $r4, $r3);

        return $z1;
    }

    public final void clipToOutline(androidx.compose.ui.graphics.Canvas)
    {
        androidx.compose.ui.platform.OutlineResolver r0;
        androidx.compose.ui.graphics.Canvas r1;
        androidx.compose.ui.graphics.Path r2, r3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18;
        byte $b0;
        long $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l13, $l14, $l15;
        boolean $z0;
        androidx.compose.ui.geometry.RoundRect r4, r5;

        r0 := @this: androidx.compose.ui.platform.OutlineResolver;

        r1 := @parameter0: androidx.compose.ui.graphics.Canvas;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "canvas");

        r2 = virtualinvoke r0.<androidx.compose.ui.platform.OutlineResolver: androidx.compose.ui.graphics.Path getClipPath()>();

        if r2 == null goto label1;

        staticinvoke <androidx.compose.ui.graphics.Canvas: void clipPath-mtrdD-E$default(androidx.compose.ui.graphics.Canvas,androidx.compose.ui.graphics.Path,int,int,java.lang.Object)>(r1, r2, 0, 2, null);

        goto label7;

     label1:
        $f0 = r0.<androidx.compose.ui.platform.OutlineResolver: float roundedCornerRadius>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 <= 0 goto label6;

        r3 = r0.<androidx.compose.ui.platform.OutlineResolver: androidx.compose.ui.graphics.Path tmpPath>;

        r4 = r0.<androidx.compose.ui.platform.OutlineResolver: androidx.compose.ui.geometry.RoundRect tmpRoundRect>;

        if r3 == null goto label2;

        $l15 = r0.<androidx.compose.ui.platform.OutlineResolver: long rectTopLeft>;

        $l14 = r0.<androidx.compose.ui.platform.OutlineResolver: long rectSize>;

        $f18 = r0.<androidx.compose.ui.platform.OutlineResolver: float roundedCornerRadius>;

        $z0 = specialinvoke r0.<androidx.compose.ui.platform.OutlineResolver: boolean isSameBounds-4L21HEs(androidx.compose.ui.geometry.RoundRect,long,long,float)>(r4, $l15, $l14, $f18);

        if $z0 != 0 goto label5;

     label2:
        $l7 = r0.<androidx.compose.ui.platform.OutlineResolver: long rectTopLeft>;

        $f9 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>($l7);

        $l8 = r0.<androidx.compose.ui.platform.OutlineResolver: long rectTopLeft>;

        $f10 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>($l8);

        $l9 = r0.<androidx.compose.ui.platform.OutlineResolver: long rectTopLeft>;

        $f11 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>($l9);

        $l10 = r0.<androidx.compose.ui.platform.OutlineResolver: long rectSize>;

        $f12 = staticinvoke <androidx.compose.ui.geometry.Size: float getWidth-impl(long)>($l10);

        $f13 = $f11 + $f12;

        $l11 = r0.<androidx.compose.ui.platform.OutlineResolver: long rectTopLeft>;

        $f14 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>($l11);

        $l12 = r0.<androidx.compose.ui.platform.OutlineResolver: long rectSize>;

        $f15 = staticinvoke <androidx.compose.ui.geometry.Size: float getHeight-impl(long)>($l12);

        $f17 = $f14 + $f15;

        $f16 = r0.<androidx.compose.ui.platform.OutlineResolver: float roundedCornerRadius>;

        $l13 = staticinvoke <androidx.compose.ui.geometry.CornerRadiusKt: long CornerRadius$default(float,float,int,java.lang.Object)>($f16, 0.0F, 2, null);

        r5 = staticinvoke <androidx.compose.ui.geometry.RoundRectKt: androidx.compose.ui.geometry.RoundRect RoundRect-gG7oq9Y(float,float,float,float,long)>($f9, $f10, $f13, $f17, $l13);

        if r3 != null goto label3;

        r3 = staticinvoke <androidx.compose.ui.graphics.AndroidPath_androidKt: androidx.compose.ui.graphics.Path Path()>();

        goto label4;

     label3:
        interfaceinvoke r3.<androidx.compose.ui.graphics.Path: void reset()>();

     label4:
        interfaceinvoke r3.<androidx.compose.ui.graphics.Path: void addRoundRect(androidx.compose.ui.geometry.RoundRect)>(r5);

        r0.<androidx.compose.ui.platform.OutlineResolver: androidx.compose.ui.geometry.RoundRect tmpRoundRect> = r5;

        r0.<androidx.compose.ui.platform.OutlineResolver: androidx.compose.ui.graphics.Path tmpPath> = r3;

     label5:
        staticinvoke <androidx.compose.ui.graphics.Canvas: void clipPath-mtrdD-E$default(androidx.compose.ui.graphics.Canvas,androidx.compose.ui.graphics.Path,int,int,java.lang.Object)>(r1, r3, 0, 2, null);

        goto label7;

     label6:
        $l1 = r0.<androidx.compose.ui.platform.OutlineResolver: long rectTopLeft>;

        $f1 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>($l1);

        $l2 = r0.<androidx.compose.ui.platform.OutlineResolver: long rectTopLeft>;

        $f2 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>($l2);

        $l3 = r0.<androidx.compose.ui.platform.OutlineResolver: long rectTopLeft>;

        $f3 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>($l3);

        $l4 = r0.<androidx.compose.ui.platform.OutlineResolver: long rectSize>;

        $f4 = staticinvoke <androidx.compose.ui.geometry.Size: float getWidth-impl(long)>($l4);

        $f5 = $f3 + $f4;

        $l5 = r0.<androidx.compose.ui.platform.OutlineResolver: long rectTopLeft>;

        $f6 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>($l5);

        $l6 = r0.<androidx.compose.ui.platform.OutlineResolver: long rectSize>;

        $f7 = staticinvoke <androidx.compose.ui.geometry.Size: float getHeight-impl(long)>($l6);

        $f8 = $f6 + $f7;

        staticinvoke <androidx.compose.ui.graphics.Canvas: void clipRect-N_I0leg$default(androidx.compose.ui.graphics.Canvas,float,float,float,float,int,int,java.lang.Object)>(r1, $f1, $f2, $f5, $f8, 0, 16, null);

     label7:
        return;
    }

    public final void update-uvyYCjk(long)
    {
        androidx.compose.ui.platform.OutlineResolver r0;
        long l0, $l1;
        boolean $z0;

        r0 := @this: androidx.compose.ui.platform.OutlineResolver;

        l0 := @parameter0: long;

        $l1 = r0.<androidx.compose.ui.platform.OutlineResolver: long size>;

        $z0 = staticinvoke <androidx.compose.ui.geometry.Size: boolean equals-impl0(long,long)>($l1, l0);

        if $z0 != 0 goto label1;

        r0.<androidx.compose.ui.platform.OutlineResolver: long size> = l0;

        r0.<androidx.compose.ui.platform.OutlineResolver: boolean cacheIsDirty> = 1;

     label1:
        return;
    }

    private final void updateCache()
    {
        androidx.compose.ui.platform.OutlineResolver r0;
        androidx.compose.ui.graphics.Outline r1, r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        androidx.compose.ui.geometry.Offset$Companion $r3;
        long $l0, $l1, $l2, $l4, $l6;
        float $f0, $f1;
        byte $b3, $b5;
        androidx.compose.ui.unit.Density $r4;
        androidx.compose.ui.unit.LayoutDirection $r5;
        androidx.compose.ui.graphics.Shape $r6;
        androidx.compose.ui.graphics.Outline$Generic $r7;
        androidx.compose.ui.graphics.Path $r8;
        androidx.compose.ui.graphics.Outline$Rounded $r9;
        androidx.compose.ui.geometry.RoundRect $r10;
        androidx.compose.ui.graphics.Outline$Rectangle $r11;
        androidx.compose.ui.geometry.Rect $r12;
        android.graphics.Outline $r13;

        r0 := @this: androidx.compose.ui.platform.OutlineResolver;

        $z0 = r0.<androidx.compose.ui.platform.OutlineResolver: boolean cacheIsDirty>;

        if $z0 == 0 goto label4;

        $r3 = <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset$Companion Companion>;

        $l0 = virtualinvoke $r3.<androidx.compose.ui.geometry.Offset$Companion: long getZero-F1C5BW0()>();

        r0.<androidx.compose.ui.platform.OutlineResolver: long rectTopLeft> = $l0;

        $l1 = r0.<androidx.compose.ui.platform.OutlineResolver: long size>;

        r0.<androidx.compose.ui.platform.OutlineResolver: long rectSize> = $l1;

        r0.<androidx.compose.ui.platform.OutlineResolver: float roundedCornerRadius> = 0.0F;

        r0.<androidx.compose.ui.platform.OutlineResolver: androidx.compose.ui.graphics.Path outlinePath> = null;

        r0.<androidx.compose.ui.platform.OutlineResolver: boolean cacheIsDirty> = 0;

        r0.<androidx.compose.ui.platform.OutlineResolver: boolean usePathForClip> = 0;

        $z1 = r0.<androidx.compose.ui.platform.OutlineResolver: boolean outlineNeeded>;

        if $z1 == 0 goto label3;

        $l2 = r0.<androidx.compose.ui.platform.OutlineResolver: long size>;

        $f0 = staticinvoke <androidx.compose.ui.geometry.Size: float getWidth-impl(long)>($l2);

        $b3 = $f0 cmpl 0.0F;

        if $b3 <= 0 goto label3;

        $l4 = r0.<androidx.compose.ui.platform.OutlineResolver: long size>;

        $f1 = staticinvoke <androidx.compose.ui.geometry.Size: float getHeight-impl(long)>($l4);

        $b5 = $f1 cmpl 0.0F;

        if $b5 <= 0 goto label3;

        r0.<androidx.compose.ui.platform.OutlineResolver: boolean isSupportedOutline> = 1;

        $r6 = r0.<androidx.compose.ui.platform.OutlineResolver: androidx.compose.ui.graphics.Shape shape>;

        $l6 = r0.<androidx.compose.ui.platform.OutlineResolver: long size>;

        $r5 = r0.<androidx.compose.ui.platform.OutlineResolver: androidx.compose.ui.unit.LayoutDirection layoutDirection>;

        $r4 = r0.<androidx.compose.ui.platform.OutlineResolver: androidx.compose.ui.unit.Density density>;

        r1 = interfaceinvoke $r6.<androidx.compose.ui.graphics.Shape: androidx.compose.ui.graphics.Outline createOutline-Pq9zytI(long,androidx.compose.ui.unit.LayoutDirection,androidx.compose.ui.unit.Density)>($l6, $r5, $r4);

        r0.<androidx.compose.ui.platform.OutlineResolver: androidx.compose.ui.graphics.Outline calculatedOutline> = r1;

        r2 = r1;

        $z2 = r2 instanceof androidx.compose.ui.graphics.Outline$Rectangle;

        if $z2 == 0 goto label1;

        $r11 = (androidx.compose.ui.graphics.Outline$Rectangle) r1;

        $r12 = virtualinvoke $r11.<androidx.compose.ui.graphics.Outline$Rectangle: androidx.compose.ui.geometry.Rect getRect()>();

        specialinvoke r0.<androidx.compose.ui.platform.OutlineResolver: void updateCacheWithRect(androidx.compose.ui.geometry.Rect)>($r12);

        goto label4;

     label1:
        $z3 = r2 instanceof androidx.compose.ui.graphics.Outline$Rounded;

        if $z3 == 0 goto label2;

        $r9 = (androidx.compose.ui.graphics.Outline$Rounded) r1;

        $r10 = virtualinvoke $r9.<androidx.compose.ui.graphics.Outline$Rounded: androidx.compose.ui.geometry.RoundRect getRoundRect()>();

        specialinvoke r0.<androidx.compose.ui.platform.OutlineResolver: void updateCacheWithRoundRect(androidx.compose.ui.geometry.RoundRect)>($r10);

        goto label4;

     label2:
        $z4 = r2 instanceof androidx.compose.ui.graphics.Outline$Generic;

        if $z4 == 0 goto label4;

        $r7 = (androidx.compose.ui.graphics.Outline$Generic) r1;

        $r8 = virtualinvoke $r7.<androidx.compose.ui.graphics.Outline$Generic: androidx.compose.ui.graphics.Path getPath()>();

        specialinvoke r0.<androidx.compose.ui.platform.OutlineResolver: void updateCacheWithPath(androidx.compose.ui.graphics.Path)>($r8);

        goto label4;

     label3:
        $r13 = r0.<androidx.compose.ui.platform.OutlineResolver: android.graphics.Outline cachedOutline>;

        virtualinvoke $r13.<android.graphics.Outline: void setEmpty()>();

     label4:
        return;
    }

    private final void updateCacheWithRect(androidx.compose.ui.geometry.Rect)
    {
        androidx.compose.ui.platform.OutlineResolver r0;
        androidx.compose.ui.geometry.Rect r1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        long $l0, $l1;
        android.graphics.Outline $r2;
        int $i2, $i3, $i4, $i5;

        r0 := @this: androidx.compose.ui.platform.OutlineResolver;

        r1 := @parameter0: androidx.compose.ui.geometry.Rect;

        $f0 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getLeft()>();

        $f1 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getTop()>();

        $l0 = staticinvoke <androidx.compose.ui.geometry.OffsetKt: long Offset(float,float)>($f0, $f1);

        r0.<androidx.compose.ui.platform.OutlineResolver: long rectTopLeft> = $l0;

        $f2 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getWidth()>();

        $f3 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getHeight()>();

        $l1 = staticinvoke <androidx.compose.ui.geometry.SizeKt: long Size(float,float)>($f2, $f3);

        r0.<androidx.compose.ui.platform.OutlineResolver: long rectSize> = $l1;

        $r2 = r0.<androidx.compose.ui.platform.OutlineResolver: android.graphics.Outline cachedOutline>;

        $f4 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getLeft()>();

        $i2 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f4);

        $f5 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getTop()>();

        $i3 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f5);

        $f6 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getRight()>();

        $i4 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f6);

        $f7 = virtualinvoke r1.<androidx.compose.ui.geometry.Rect: float getBottom()>();

        $i5 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f7);

        virtualinvoke $r2.<android.graphics.Outline: void setRect(int,int,int,int)>($i2, $i3, $i4, $i5);

        return;
    }

    private final void updateCacheWithRoundRect(androidx.compose.ui.geometry.RoundRect)
    {
        androidx.compose.ui.platform.OutlineResolver r0;
        androidx.compose.ui.geometry.RoundRect r1;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        androidx.compose.ui.graphics.Path r2, r3, r4, $r6;
        long $l0, $l1, $l2;
        boolean $z1;
        android.graphics.Outline $r5;
        int $i3, $i4, $i5, $i6;

        r0 := @this: androidx.compose.ui.platform.OutlineResolver;

        r1 := @parameter0: androidx.compose.ui.geometry.RoundRect;

        $l0 = virtualinvoke r1.<androidx.compose.ui.geometry.RoundRect: long getTopLeftCornerRadius-kKHJgLs()>();

        f0 = staticinvoke <androidx.compose.ui.geometry.CornerRadius: float getX-impl(long)>($l0);

        $f1 = virtualinvoke r1.<androidx.compose.ui.geometry.RoundRect: float getLeft()>();

        $f2 = virtualinvoke r1.<androidx.compose.ui.geometry.RoundRect: float getTop()>();

        $l1 = staticinvoke <androidx.compose.ui.geometry.OffsetKt: long Offset(float,float)>($f1, $f2);

        r0.<androidx.compose.ui.platform.OutlineResolver: long rectTopLeft> = $l1;

        $f3 = virtualinvoke r1.<androidx.compose.ui.geometry.RoundRect: float getWidth()>();

        $f4 = virtualinvoke r1.<androidx.compose.ui.geometry.RoundRect: float getHeight()>();

        $l2 = staticinvoke <androidx.compose.ui.geometry.SizeKt: long Size(float,float)>($f3, $f4);

        r0.<androidx.compose.ui.platform.OutlineResolver: long rectSize> = $l2;

        $z1 = staticinvoke <androidx.compose.ui.geometry.RoundRectKt: boolean isSimple(androidx.compose.ui.geometry.RoundRect)>(r1);

        if $z1 == 0 goto label1;

        $r5 = r0.<androidx.compose.ui.platform.OutlineResolver: android.graphics.Outline cachedOutline>;

        $f5 = virtualinvoke r1.<androidx.compose.ui.geometry.RoundRect: float getLeft()>();

        $i3 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f5);

        $f6 = virtualinvoke r1.<androidx.compose.ui.geometry.RoundRect: float getTop()>();

        $i4 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f6);

        $f7 = virtualinvoke r1.<androidx.compose.ui.geometry.RoundRect: float getRight()>();

        $i5 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f7);

        $f8 = virtualinvoke r1.<androidx.compose.ui.geometry.RoundRect: float getBottom()>();

        $i6 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f8);

        virtualinvoke $r5.<android.graphics.Outline: void setRoundRect(int,int,int,int,float)>($i3, $i4, $i5, $i6, f0);

        r0.<androidx.compose.ui.platform.OutlineResolver: float roundedCornerRadius> = f0;

        goto label3;

     label1:
        $r6 = r0.<androidx.compose.ui.platform.OutlineResolver: androidx.compose.ui.graphics.Path cachedRrectPath>;

        if $r6 != null goto label2;

        r3 = staticinvoke <androidx.compose.ui.graphics.AndroidPath_androidKt: androidx.compose.ui.graphics.Path Path()>();

        r4 = r3;

        r0.<androidx.compose.ui.platform.OutlineResolver: androidx.compose.ui.graphics.Path cachedRrectPath> = r4;

        $r6 = r3;

     label2:
        r2 = $r6;

        interfaceinvoke r2.<androidx.compose.ui.graphics.Path: void reset()>();

        interfaceinvoke r2.<androidx.compose.ui.graphics.Path: void addRoundRect(androidx.compose.ui.geometry.RoundRect)>(r1);

        specialinvoke r0.<androidx.compose.ui.platform.OutlineResolver: void updateCacheWithPath(androidx.compose.ui.graphics.Path)>(r2);

     label3:
        return;
    }

    private final void updateCacheWithPath(androidx.compose.ui.graphics.Path)
    {
        androidx.compose.ui.platform.OutlineResolver r0;
        androidx.compose.ui.graphics.Path r1;
        int $i0;
        boolean $z1, $z2, $z3, $z4;
        java.lang.UnsupportedOperationException $r3;
        android.graphics.Outline $r4, $r7, $r9;
        androidx.compose.ui.graphics.AndroidPath $r5;
        android.graphics.Path $r6;

        r0 := @this: androidx.compose.ui.platform.OutlineResolver;

        r1 := @parameter0: androidx.compose.ui.graphics.Path;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 > 28 goto label1;

        $z3 = interfaceinvoke r1.<androidx.compose.ui.graphics.Path: boolean isConvex()>();

        if $z3 == 0 goto label6;

     label1:
        $r4 = r0.<androidx.compose.ui.platform.OutlineResolver: android.graphics.Outline cachedOutline>;

        $z1 = r1 instanceof androidx.compose.ui.graphics.AndroidPath;

        if $z1 == 0 goto label2;

        $r5 = (androidx.compose.ui.graphics.AndroidPath) r1;

        $r6 = virtualinvoke $r5.<androidx.compose.ui.graphics.AndroidPath: android.graphics.Path getInternalPath()>();

        goto label3;

     label2:
        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Unable to obtain android.graphics.Path");

        throw $r3;

     label3:
        virtualinvoke $r4.<android.graphics.Outline: void setConvexPath(android.graphics.Path)>($r6);

        $r7 = r0.<androidx.compose.ui.platform.OutlineResolver: android.graphics.Outline cachedOutline>;

        $z2 = virtualinvoke $r7.<android.graphics.Outline: boolean canClip()>();

        if $z2 != 0 goto label4;

        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        r0.<androidx.compose.ui.platform.OutlineResolver: boolean usePathForClip> = $z4;

        goto label7;

     label6:
        r0.<androidx.compose.ui.platform.OutlineResolver: boolean isSupportedOutline> = 0;

        $r9 = r0.<androidx.compose.ui.platform.OutlineResolver: android.graphics.Outline cachedOutline>;

        virtualinvoke $r9.<android.graphics.Outline: void setEmpty()>();

        r0.<androidx.compose.ui.platform.OutlineResolver: boolean usePathForClip> = 1;

     label7:
        r0.<androidx.compose.ui.platform.OutlineResolver: androidx.compose.ui.graphics.Path outlinePath> = r1;

        return;
    }

    private final boolean isSameBounds-4L21HEs(androidx.compose.ui.geometry.RoundRect, long, long, float)
    {
        androidx.compose.ui.platform.OutlineResolver r0;
        androidx.compose.ui.geometry.RoundRect $r1;
        long l0, l1, $l6;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        byte $b2, $b3, $b4, $b5, $b7;

        r0 := @this: androidx.compose.ui.platform.OutlineResolver;

        $r1 := @parameter0: androidx.compose.ui.geometry.RoundRect;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        f0 := @parameter3: float;

        if $r1 == null goto label01;

        $z0 = staticinvoke <androidx.compose.ui.geometry.RoundRectKt: boolean isSimple(androidx.compose.ui.geometry.RoundRect)>($r1);

        if $z0 != 0 goto label02;

     label01:
        return 0;

     label02:
        $f1 = virtualinvoke $r1.<androidx.compose.ui.geometry.RoundRect: float getLeft()>();

        $f2 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l0);

        $b2 = $f1 cmpg $f2;

        if $b2 != 0 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        if $z1 == 0 goto label13;

        $f3 = virtualinvoke $r1.<androidx.compose.ui.geometry.RoundRect: float getTop()>();

        $f4 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l0);

        $b3 = $f3 cmpg $f4;

        if $b3 != 0 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        if $z2 == 0 goto label13;

        $f5 = virtualinvoke $r1.<androidx.compose.ui.geometry.RoundRect: float getRight()>();

        $f6 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l0);

        $f7 = staticinvoke <androidx.compose.ui.geometry.Size: float getWidth-impl(long)>(l1);

        $f8 = $f6 + $f7;

        $b4 = $f5 cmpg $f8;

        if $b4 != 0 goto label07;

        $z3 = 1;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        if $z3 == 0 goto label13;

        $f9 = virtualinvoke $r1.<androidx.compose.ui.geometry.RoundRect: float getBottom()>();

        $f10 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l0);

        $f11 = staticinvoke <androidx.compose.ui.geometry.Size: float getHeight-impl(long)>(l1);

        $f12 = $f10 + $f11;

        $b5 = $f9 cmpg $f12;

        if $b5 != 0 goto label09;

        $z4 = 1;

        goto label10;

     label09:
        $z4 = 0;

     label10:
        if $z4 == 0 goto label13;

        $l6 = virtualinvoke $r1.<androidx.compose.ui.geometry.RoundRect: long getTopLeftCornerRadius-kKHJgLs()>();

        $f13 = staticinvoke <androidx.compose.ui.geometry.CornerRadius: float getX-impl(long)>($l6);

        $b7 = $f13 cmpg f0;

        if $b7 != 0 goto label11;

        $z5 = 1;

        goto label12;

     label11:
        $z5 = 0;

     label12:
        if $z5 == 0 goto label13;

        $z6 = 1;

        goto label14;

     label13:
        $z6 = 0;

     label14:
        return $z6;
    }

