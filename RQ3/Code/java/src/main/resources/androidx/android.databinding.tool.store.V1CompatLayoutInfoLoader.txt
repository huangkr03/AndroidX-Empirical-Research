android.databinding.tool.store.V1CompatLayoutInfoLoader
<android.databinding.tool.store.V1CompatLayoutInfoLoader: java.util.Map INTERMEDIATE_CLASSES>
<android.databinding.tool.store.V1CompatLayoutInfoLoader: android.databinding.tool.store.V1CompatLayoutInfoLoader$Companion Companion>
    public final android.databinding.tool.store.GenClassInfoLog load(java.io.File)
    {
        android.databinding.tool.store.V1CompatLayoutInfoLoader r0;
        java.io.File r1, r46;
        org.apache.commons.io.filefilter.SuffixFileFilter r2, $r8;
        java.util.Collection r3, r6, $r33, r43, r52, r56, r68;
        java.util.Map r4, $r18, $r32, r81, r85, r89, r91;
        java.lang.Iterable r5, $r16, $r42, $r51, $r67, $r72, r80;
        kotlin.Pair r7, $r19, r78, r79;
        org.apache.commons.io.IOCase $r9;
        org.apache.commons.io.filefilter.IOFileFilter $r10, $r11;
        java.util.ArrayList $r12, $r14, $r34;
        boolean $z0, $z1, $z2, $z4;
        java.util.List $r13, $r15, $r24, r63;
        int $i0, $i1, $i2, $i3, i4;
        android.databinding.tool.store.GenClassInfoLog $r17;
        java.lang.String $r20, $r22, $r23, r55, r57, r59, r73, r74, r86, r88, r90;
        android.databinding.tool.store.GenClassInfoLog$GenClass $r21, r75;
        java.util.LinkedHashMap $r25;
        java.util.Set $r26;
        java.io.FileInputStream $r28, r49;
        android.databinding.tool.store.V1CompatLayoutInfoLoader$CompatObjectInputStream $r29;
        java.io.InputStream $r30, $r37;
        java.lang.Object $r31, r45, r54, r70, r83;
        byte[] $r35, r60, r61;
        java.io.ByteArrayInputStream $r36;
        kotlin.TypeCastException $r38, $r39;
        java.lang.Throwable $r40, $r41, r48, r64, r65, r66;
        java.util.Iterator r44, r53, r69, r82;
        java.io.Closeable $r47;
        android.databinding.tool.store.V1CompatLayoutInfoLoader$IntermediateV2Compat r50;
        java.nio.charset.Charset r58;
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r62, r71;
        android.databinding.tool.store.ResourceBundle$VariableDeclaration r84, r87;

        r0 := @this: android.databinding.tool.store.V1CompatLayoutInfoLoader;

        r1 := @parameter0: java.io.File;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r1, "folder");

        $r8 = new org.apache.commons.io.filefilter.SuffixFileFilter;

        $r9 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase INSENSITIVE>;

        specialinvoke $r8.<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>("-layoutinfo.bin", $r9);

        r2 = $r8;

        $r11 = (org.apache.commons.io.filefilter.IOFileFilter) r2;

        $r10 = <org.apache.commons.io.filefilter.TrueFileFilter: org.apache.commons.io.filefilter.IOFileFilter INSTANCE>;

        r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r1, $r11, $r10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>(r3, "files");

        $r42 = (java.lang.Iterable) r3;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r43 = (java.util.Collection) $r12;

        r44 = interfaceinvoke $r42.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        r45 = interfaceinvoke r44.<java.util.Iterator: java.lang.Object next()>();

        r46 = (java.io.File) r45;

        $r28 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>(r46);

        $r47 = (java.io.Closeable) $r28;

        r48 = (java.lang.Throwable) null;

     label02:
        r49 = (java.io.FileInputStream) $r47;

        $r29 = new android.databinding.tool.store.V1CompatLayoutInfoLoader$CompatObjectInputStream;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>(r49, "inputStream");

        $r30 = (java.io.InputStream) r49;

        specialinvoke $r29.<android.databinding.tool.store.V1CompatLayoutInfoLoader$CompatObjectInputStream: void <init>(java.io.InputStream)>($r30);

        $r31 = virtualinvoke $r29.<android.databinding.tool.store.V1CompatLayoutInfoLoader$CompatObjectInputStream: java.lang.Object readObject()>();

        if $r31 != null goto label03;

        $r39 = new kotlin.TypeCastException;

        specialinvoke $r39.<kotlin.TypeCastException: void <init>(java.lang.String)>("null cannot be cast to non-null type android.databinding.tool.store.V1CompatLayoutInfoLoader.IntermediateV2Compat");

        throw $r39;

     label03:
        r50 = (android.databinding.tool.store.V1CompatLayoutInfoLoader$IntermediateV2Compat) $r31;

        $r32 = r50.<android.databinding.tool.store.V1CompatLayoutInfoLoader$IntermediateV2Compat: java.util.Map mLayoutInfoMap>;

        $r33 = interfaceinvoke $r32.<java.util.Map: java.util.Collection values()>();

        $r51 = (java.lang.Iterable) $r33;

        $r34 = new java.util.ArrayList;

        $i3 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r51, 10);

        specialinvoke $r34.<java.util.ArrayList: void <init>(int)>($i3);

        r52 = (java.util.Collection) $r34;

        r53 = interfaceinvoke $r51.<java.lang.Iterable: java.util.Iterator iterator()>();

     label04:
        $z4 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label06;

        r54 = interfaceinvoke r53.<java.util.Iterator: java.lang.Object next()>();

        r55 = (java.lang.String) r54;

        r56 = r52;

        r57 = r55;

        r58 = <kotlin.text.Charsets: java.nio.charset.Charset UTF_8>;

        r59 = r57;

        if r59 != null goto label05;

        $r38 = new kotlin.TypeCastException;

        specialinvoke $r38.<kotlin.TypeCastException: void <init>(java.lang.String)>("null cannot be cast to non-null type java.lang.String");

        throw $r38;

     label05:
        $r35 = virtualinvoke r59.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(r58);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r35, "(this as java.lang.String).getBytes(charset)");

        r60 = $r35;

        r61 = r60;

        $r36 = new java.io.ByteArrayInputStream;

        specialinvoke $r36.<java.io.ByteArrayInputStream: void <init>(byte[])>(r61);

        $r37 = (java.io.InputStream) $r36;

        r62 = staticinvoke <android.databinding.tool.store.ResourceBundle$LayoutFileBundle: android.databinding.tool.store.ResourceBundle$LayoutFileBundle fromXML(java.io.InputStream)>($r37);

        interfaceinvoke r56.<java.util.Collection: boolean add(java.lang.Object)>(r62);

        goto label04;

     label06:
        r63 = (java.util.List) r52;

     label07:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>($r47, r48);

        goto label11;

     label08:
        $r41 := @caughtexception;

        r64 = $r41;

        r65 = r64;

        throw r64;

     label09:
        $r40 := @caughtexception;

        r66 = $r40;

     label10:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>($r47, r65);

        throw r66;

     label11:
        r5 = (java.lang.Iterable) r63;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r43, r5);

        goto label01;

     label12:
        $r13 = (java.util.List) r43;

        $r67 = (java.lang.Iterable) $r13;

        $r14 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r67, 10);

        specialinvoke $r14.<java.util.ArrayList: void <init>(int)>($i0);

        r68 = (java.util.Collection) $r14;

        r69 = interfaceinvoke $r67.<java.lang.Iterable: java.util.Iterator iterator()>();

     label13:
        $z1 = interfaceinvoke r69.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label16;

        r70 = interfaceinvoke r69.<java.util.Iterator: java.lang.Object next()>();

        r71 = (android.databinding.tool.store.ResourceBundle$LayoutFileBundle) r70;

        r6 = r68;

        $r19 = new kotlin.Pair;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>(r71, "bundle");

        $r20 = virtualinvoke r71.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String getFileName()>();

        $r21 = new android.databinding.tool.store.GenClassInfoLog$GenClass;

        $r22 = virtualinvoke r71.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String getFullBindingClass()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r22, "bundle.fullBindingClass");

        $r23 = virtualinvoke r71.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String getModulePackage()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r23, "bundle.modulePackage");

        $r24 = virtualinvoke r71.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List getVariables()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r24, "bundle.variables");

        $r72 = (java.lang.Iterable) $r24;

        r73 = $r23;

        r74 = $r22;

        r75 = $r21;

        r78 = $r19;

        r79 = $r19;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r72, 10);

        $i2 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i1);

        i4 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i2, 16);

        r80 = $r72;

        $r25 = new java.util.LinkedHashMap;

        specialinvoke $r25.<java.util.LinkedHashMap: void <init>(int)>(i4);

        r81 = (java.util.Map) $r25;

        r82 = interfaceinvoke r80.<java.lang.Iterable: java.util.Iterator iterator()>();

     label14:
        $z2 = interfaceinvoke r82.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label15;

        r83 = interfaceinvoke r82.<java.util.Iterator: java.lang.Object next()>();

        r84 = (android.databinding.tool.store.ResourceBundle$VariableDeclaration) r83;

        r85 = r81;

        r86 = r84.<android.databinding.tool.store.ResourceBundle$VariableDeclaration: java.lang.String name>;

        r87 = (android.databinding.tool.store.ResourceBundle$VariableDeclaration) r83;

        r88 = r86;

        r89 = r85;

        r90 = r87.<android.databinding.tool.store.ResourceBundle$VariableDeclaration: java.lang.String type>;

        interfaceinvoke r89.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r88, r90);

        goto label14;

     label15:
        r91 = r81;

        $r26 = staticinvoke <kotlin.collections.SetsKt: java.util.Set emptySet()>();

        specialinvoke r75.<android.databinding.tool.store.GenClassInfoLog$GenClass: void <init>(java.lang.String,java.lang.String,java.util.Map,java.util.Set)>(r74, r73, r91, $r26);

        specialinvoke r78.<kotlin.Pair: void <init>(java.lang.Object,java.lang.Object)>($r20, $r21);

        r7 = r79;

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>(r7);

        goto label13;

     label16:
        $r15 = (java.util.List) r68;

        $r16 = (java.lang.Iterable) $r15;

        r4 = staticinvoke <kotlin.collections.MapsKt: java.util.Map toMap(java.lang.Iterable)>($r16);

        $r17 = new android.databinding.tool.store.GenClassInfoLog;

        $r18 = staticinvoke <kotlin.collections.MapsKt: java.util.Map toMutableMap(java.util.Map)>(r4);

        specialinvoke $r17.<android.databinding.tool.store.GenClassInfoLog: void <init>(java.util.Map)>($r18);

        return $r17;

        catch java.lang.Throwable from label02 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void <init>()
    {
        android.databinding.tool.store.V1CompatLayoutInfoLoader r0;

        r0 := @this: android.databinding.tool.store.V1CompatLayoutInfoLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        android.databinding.tool.store.V1CompatLayoutInfoLoader$Companion $r0;
        kotlin.Pair[] $r1;
        kotlin.Pair $r2, $r3;
        java.util.Map $r4;

        $r0 = new android.databinding.tool.store.V1CompatLayoutInfoLoader$Companion;

        specialinvoke $r0.<android.databinding.tool.store.V1CompatLayoutInfoLoader$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <android.databinding.tool.store.V1CompatLayoutInfoLoader: android.databinding.tool.store.V1CompatLayoutInfoLoader$Companion Companion> = $r0;

        $r1 = newarray (kotlin.Pair)[2];

        $r2 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("android.databinding.annotationprocessor.ProcessExpressions$IntermediateV1", class "Landroid/databinding/tool/store/V1CompatLayoutInfoLoader$IntermediateV1Compat;");

        $r1[0] = $r2;

        $r3 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("android.databinding.annotationprocessor.ProcessExpressions$IntermediateV2", class "Landroid/databinding/tool/store/V1CompatLayoutInfoLoader$IntermediateV2Compat;");

        $r1[1] = $r3;

        $r4 = staticinvoke <kotlin.collections.MapsKt: java.util.Map mapOf(kotlin.Pair[])>($r1);

        <android.databinding.tool.store.V1CompatLayoutInfoLoader: java.util.Map INTERMEDIATE_CLASSES> = $r4;

        return;
    }

    public static final java.util.Map access$getINTERMEDIATE_CLASSES$cp()
    {
        java.util.Map $r0;

        $r0 = <android.databinding.tool.store.V1CompatLayoutInfoLoader: java.util.Map INTERMEDIATE_CLASSES>;

        return $r0;
    }

android.databinding.tool.store.V1CompatLayoutInfoLoader$Companion
    private final java.util.Map getINTERMEDIATE_CLASSES()
    {
        android.databinding.tool.store.V1CompatLayoutInfoLoader$Companion r0;
        java.util.Map $r1;

        r0 := @this: android.databinding.tool.store.V1CompatLayoutInfoLoader$Companion;

        $r1 = staticinvoke <android.databinding.tool.store.V1CompatLayoutInfoLoader: java.util.Map access$getINTERMEDIATE_CLASSES$cp()>();

        return $r1;
    }

    private void <init>()
    {
        android.databinding.tool.store.V1CompatLayoutInfoLoader$Companion r0;

        r0 := @this: android.databinding.tool.store.V1CompatLayoutInfoLoader$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final java.util.Map access$getINTERMEDIATE_CLASSES$p(android.databinding.tool.store.V1CompatLayoutInfoLoader$Companion)
    {
        android.databinding.tool.store.V1CompatLayoutInfoLoader$Companion $r0;
        java.util.Map $r1;

        $r0 := @parameter0: android.databinding.tool.store.V1CompatLayoutInfoLoader$Companion;

        $r1 = specialinvoke $r0.<android.databinding.tool.store.V1CompatLayoutInfoLoader$Companion: java.util.Map getINTERMEDIATE_CLASSES()>();

        return $r1;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        android.databinding.tool.store.V1CompatLayoutInfoLoader$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: android.databinding.tool.store.V1CompatLayoutInfoLoader$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<android.databinding.tool.store.V1CompatLayoutInfoLoader$Companion: void <init>()>();

        return;
    }

android.databinding.tool.store.V1CompatLayoutInfoLoader$CompatObjectInputStream
    protected java.io.ObjectStreamClass readClassDescriptor()
    {
        android.databinding.tool.store.V1CompatLayoutInfoLoader$CompatObjectInputStream r0;
        java.io.ObjectStreamClass r1, $r9;
        java.lang.Class r2, r3, $r8;
        android.databinding.tool.store.V1CompatLayoutInfoLoader$Companion $r4;
        java.util.Map $r5;
        java.lang.String $r6;
        java.lang.Object $r7;

        r0 := @this: android.databinding.tool.store.V1CompatLayoutInfoLoader$CompatObjectInputStream;

        r1 = specialinvoke r0.<java.io.ObjectInputStream: java.io.ObjectStreamClass readClassDescriptor()>();

        $r4 = <android.databinding.tool.store.V1CompatLayoutInfoLoader: android.databinding.tool.store.V1CompatLayoutInfoLoader$Companion Companion>;

        $r5 = staticinvoke <android.databinding.tool.store.V1CompatLayoutInfoLoader$Companion: java.util.Map access$getINTERMEDIATE_CLASSES$p(android.databinding.tool.store.V1CompatLayoutInfoLoader$Companion)>($r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>(r1, "original");

        $r6 = virtualinvoke r1.<java.io.ObjectStreamClass: java.lang.String getName()>();

        $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r8 = (java.lang.Class) $r7;

        if $r8 == null goto label1;

        r2 = $r8;

        r3 = r2;

        $r9 = staticinvoke <java.io.ObjectStreamClass: java.io.ObjectStreamClass lookup(java.lang.Class)>(r3);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r9, "ObjectStreamClass.lookup(it)");

        return $r9;

     label1:
        return r1;
    }

    public void <init>(java.io.InputStream)
    {
        android.databinding.tool.store.V1CompatLayoutInfoLoader$CompatObjectInputStream r0;
        java.io.InputStream r1;

        r0 := @this: android.databinding.tool.store.V1CompatLayoutInfoLoader$CompatObjectInputStream;

        r1 := @parameter0: java.io.InputStream;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r1, "in");

        specialinvoke r0.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(r1);

        return;
    }

android.databinding.tool.store.V1CompatLayoutInfoLoader$IntermediateV1Compat
<android.databinding.tool.store.V1CompatLayoutInfoLoader$IntermediateV1Compat: java.util.Map mLayoutInfoMap>
    public void <init>()
    {
        android.databinding.tool.store.V1CompatLayoutInfoLoader$IntermediateV1Compat r0;
        java.util.HashMap $r1;
        java.util.Map $r2;

        r0 := @this: android.databinding.tool.store.V1CompatLayoutInfoLoader$IntermediateV1Compat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r2 = (java.util.Map) $r1;

        r0.<android.databinding.tool.store.V1CompatLayoutInfoLoader$IntermediateV1Compat: java.util.Map mLayoutInfoMap> = $r2;

        return;
    }

android.databinding.tool.store.V1CompatLayoutInfoLoader$IntermediateV2Compat
    public void <init>()
    {
        android.databinding.tool.store.V1CompatLayoutInfoLoader$IntermediateV2Compat r0;

        r0 := @this: android.databinding.tool.store.V1CompatLayoutInfoLoader$IntermediateV2Compat;

        specialinvoke r0.<android.databinding.tool.store.V1CompatLayoutInfoLoader$IntermediateV1Compat: void <init>()>();

        return;
    }

