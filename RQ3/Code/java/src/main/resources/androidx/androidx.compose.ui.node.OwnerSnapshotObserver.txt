androidx.compose.ui.node.OwnerSnapshotObserver
<androidx.compose.ui.node.OwnerSnapshotObserver: androidx.compose.runtime.snapshots.SnapshotStateObserver observer>
<androidx.compose.ui.node.OwnerSnapshotObserver: kotlin.jvm.functions.Function1 onCommitAffectingLookaheadMeasure>
<androidx.compose.ui.node.OwnerSnapshotObserver: kotlin.jvm.functions.Function1 onCommitAffectingMeasure>
<androidx.compose.ui.node.OwnerSnapshotObserver: kotlin.jvm.functions.Function1 onCommitAffectingLayout>
<androidx.compose.ui.node.OwnerSnapshotObserver: kotlin.jvm.functions.Function1 onCommitAffectingLayoutModifier>
<androidx.compose.ui.node.OwnerSnapshotObserver: kotlin.jvm.functions.Function1 onCommitAffectingLayoutModifierInLookahead>
<androidx.compose.ui.node.OwnerSnapshotObserver: kotlin.jvm.functions.Function1 onCommitAffectingLookaheadLayout>
    public void <init>(kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.node.OwnerSnapshotObserver r0;
        kotlin.jvm.functions.Function1 r1, $r4, $r6, $r8, $r10, $r12, $r14;
        androidx.compose.runtime.snapshots.SnapshotStateObserver $r2;
        androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLookaheadMeasure$1 $r3;
        androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingMeasure$1 $r5;
        androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayout$1 $r7;
        androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayoutModifier$1 $r9;
        androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayoutModifierInLookahead$1 $r11;
        androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLookaheadLayout$1 $r13;

        r0 := @this: androidx.compose.ui.node.OwnerSnapshotObserver;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "onChangedExecutor");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new androidx.compose.runtime.snapshots.SnapshotStateObserver;

        specialinvoke $r2.<androidx.compose.runtime.snapshots.SnapshotStateObserver: void <init>(kotlin.jvm.functions.Function1)>(r1);

        r0.<androidx.compose.ui.node.OwnerSnapshotObserver: androidx.compose.runtime.snapshots.SnapshotStateObserver observer> = $r2;

        $r3 = <androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLookaheadMeasure$1: androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLookaheadMeasure$1 INSTANCE>;

        $r4 = (kotlin.jvm.functions.Function1) $r3;

        r0.<androidx.compose.ui.node.OwnerSnapshotObserver: kotlin.jvm.functions.Function1 onCommitAffectingLookaheadMeasure> = $r4;

        $r5 = <androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingMeasure$1: androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingMeasure$1 INSTANCE>;

        $r6 = (kotlin.jvm.functions.Function1) $r5;

        r0.<androidx.compose.ui.node.OwnerSnapshotObserver: kotlin.jvm.functions.Function1 onCommitAffectingMeasure> = $r6;

        $r7 = <androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayout$1: androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayout$1 INSTANCE>;

        $r8 = (kotlin.jvm.functions.Function1) $r7;

        r0.<androidx.compose.ui.node.OwnerSnapshotObserver: kotlin.jvm.functions.Function1 onCommitAffectingLayout> = $r8;

        $r9 = <androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayoutModifier$1: androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayoutModifier$1 INSTANCE>;

        $r10 = (kotlin.jvm.functions.Function1) $r9;

        r0.<androidx.compose.ui.node.OwnerSnapshotObserver: kotlin.jvm.functions.Function1 onCommitAffectingLayoutModifier> = $r10;

        $r11 = <androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayoutModifierInLookahead$1: androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayoutModifierInLookahead$1 INSTANCE>;

        $r12 = (kotlin.jvm.functions.Function1) $r11;

        r0.<androidx.compose.ui.node.OwnerSnapshotObserver: kotlin.jvm.functions.Function1 onCommitAffectingLayoutModifierInLookahead> = $r12;

        $r13 = <androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLookaheadLayout$1: androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLookaheadLayout$1 INSTANCE>;

        $r14 = (kotlin.jvm.functions.Function1) $r13;

        r0.<androidx.compose.ui.node.OwnerSnapshotObserver: kotlin.jvm.functions.Function1 onCommitAffectingLookaheadLayout> = $r14;

        return;
    }

    public final void observeLayoutSnapshotReads$ui_release(androidx.compose.ui.node.LayoutNode, boolean, kotlin.jvm.functions.Function0)
    {
        androidx.compose.ui.node.OwnerSnapshotObserver r0;
        androidx.compose.ui.node.LayoutNode r1;
        boolean z0;
        kotlin.jvm.functions.Function0 r2;
        kotlin.jvm.functions.Function1 $r3, $r6;
        androidx.compose.ui.node.OwnerScope $r4, $r7;
        androidx.compose.ui.layout.LookaheadScope $r5;

        r0 := @this: androidx.compose.ui.node.OwnerSnapshotObserver;

        r1 := @parameter0: androidx.compose.ui.node.LayoutNode;

        z0 := @parameter1: boolean;

        r2 := @parameter2: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "node");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "block");

        if z0 == 0 goto label1;

        $r5 = virtualinvoke r1.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.layout.LookaheadScope getMLookaheadScope$ui_release()>();

        if $r5 == null goto label1;

        $r7 = (androidx.compose.ui.node.OwnerScope) r1;

        $r6 = r0.<androidx.compose.ui.node.OwnerSnapshotObserver: kotlin.jvm.functions.Function1 onCommitAffectingLookaheadLayout>;

        virtualinvoke r0.<androidx.compose.ui.node.OwnerSnapshotObserver: void observeReads$ui_release(androidx.compose.ui.node.OwnerScope,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0)>($r7, $r6, r2);

        goto label2;

     label1:
        $r4 = (androidx.compose.ui.node.OwnerScope) r1;

        $r3 = r0.<androidx.compose.ui.node.OwnerSnapshotObserver: kotlin.jvm.functions.Function1 onCommitAffectingLayout>;

        virtualinvoke r0.<androidx.compose.ui.node.OwnerSnapshotObserver: void observeReads$ui_release(androidx.compose.ui.node.OwnerScope,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0)>($r4, $r3, r2);

     label2:
        return;
    }

    public static void observeLayoutSnapshotReads$ui_release$default(androidx.compose.ui.node.OwnerSnapshotObserver, androidx.compose.ui.node.LayoutNode, boolean, kotlin.jvm.functions.Function0, int, java.lang.Object)
    {
        androidx.compose.ui.node.OwnerSnapshotObserver r0;
        androidx.compose.ui.node.LayoutNode r1;
        kotlin.jvm.functions.Function0 r2;
        int i0, $i1;
        java.lang.Object r3;
        boolean z0;

        r0 := @parameter0: androidx.compose.ui.node.OwnerSnapshotObserver;

        r1 := @parameter1: androidx.compose.ui.node.LayoutNode;

        z0 := @parameter2: boolean;

        r2 := @parameter3: kotlin.jvm.functions.Function0;

        i0 := @parameter4: int;

        r3 := @parameter5: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        z0 = 1;

     label1:
        virtualinvoke r0.<androidx.compose.ui.node.OwnerSnapshotObserver: void observeLayoutSnapshotReads$ui_release(androidx.compose.ui.node.LayoutNode,boolean,kotlin.jvm.functions.Function0)>(r1, z0, r2);

        return;
    }

    public final void observeLayoutModifierSnapshotReads$ui_release(androidx.compose.ui.node.LayoutNode, boolean, kotlin.jvm.functions.Function0)
    {
        androidx.compose.ui.node.OwnerSnapshotObserver r0;
        androidx.compose.ui.node.LayoutNode r1;
        boolean z0;
        kotlin.jvm.functions.Function0 r2;
        kotlin.jvm.functions.Function1 $r3, $r6;
        androidx.compose.ui.node.OwnerScope $r4, $r7;
        androidx.compose.ui.layout.LookaheadScope $r5;

        r0 := @this: androidx.compose.ui.node.OwnerSnapshotObserver;

        r1 := @parameter0: androidx.compose.ui.node.LayoutNode;

        z0 := @parameter1: boolean;

        r2 := @parameter2: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "node");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "block");

        if z0 == 0 goto label1;

        $r5 = virtualinvoke r1.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.layout.LookaheadScope getMLookaheadScope$ui_release()>();

        if $r5 == null goto label1;

        $r7 = (androidx.compose.ui.node.OwnerScope) r1;

        $r6 = r0.<androidx.compose.ui.node.OwnerSnapshotObserver: kotlin.jvm.functions.Function1 onCommitAffectingLayoutModifierInLookahead>;

        virtualinvoke r0.<androidx.compose.ui.node.OwnerSnapshotObserver: void observeReads$ui_release(androidx.compose.ui.node.OwnerScope,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0)>($r7, $r6, r2);

        goto label2;

     label1:
        $r4 = (androidx.compose.ui.node.OwnerScope) r1;

        $r3 = r0.<androidx.compose.ui.node.OwnerSnapshotObserver: kotlin.jvm.functions.Function1 onCommitAffectingLayoutModifier>;

        virtualinvoke r0.<androidx.compose.ui.node.OwnerSnapshotObserver: void observeReads$ui_release(androidx.compose.ui.node.OwnerScope,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0)>($r4, $r3, r2);

     label2:
        return;
    }

    public static void observeLayoutModifierSnapshotReads$ui_release$default(androidx.compose.ui.node.OwnerSnapshotObserver, androidx.compose.ui.node.LayoutNode, boolean, kotlin.jvm.functions.Function0, int, java.lang.Object)
    {
        androidx.compose.ui.node.OwnerSnapshotObserver r0;
        androidx.compose.ui.node.LayoutNode r1;
        kotlin.jvm.functions.Function0 r2;
        int i0, $i1;
        java.lang.Object r3;
        boolean z0;

        r0 := @parameter0: androidx.compose.ui.node.OwnerSnapshotObserver;

        r1 := @parameter1: androidx.compose.ui.node.LayoutNode;

        z0 := @parameter2: boolean;

        r2 := @parameter3: kotlin.jvm.functions.Function0;

        i0 := @parameter4: int;

        r3 := @parameter5: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        z0 = 1;

     label1:
        virtualinvoke r0.<androidx.compose.ui.node.OwnerSnapshotObserver: void observeLayoutModifierSnapshotReads$ui_release(androidx.compose.ui.node.LayoutNode,boolean,kotlin.jvm.functions.Function0)>(r1, z0, r2);

        return;
    }

    public final void observeMeasureSnapshotReads$ui_release(androidx.compose.ui.node.LayoutNode, boolean, kotlin.jvm.functions.Function0)
    {
        androidx.compose.ui.node.OwnerSnapshotObserver r0;
        androidx.compose.ui.node.LayoutNode r1;
        boolean z0;
        kotlin.jvm.functions.Function0 r2;
        kotlin.jvm.functions.Function1 $r3, $r6;
        androidx.compose.ui.node.OwnerScope $r4, $r7;
        androidx.compose.ui.layout.LookaheadScope $r5;

        r0 := @this: androidx.compose.ui.node.OwnerSnapshotObserver;

        r1 := @parameter0: androidx.compose.ui.node.LayoutNode;

        z0 := @parameter1: boolean;

        r2 := @parameter2: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "node");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "block");

        if z0 == 0 goto label1;

        $r5 = virtualinvoke r1.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.layout.LookaheadScope getMLookaheadScope$ui_release()>();

        if $r5 == null goto label1;

        $r7 = (androidx.compose.ui.node.OwnerScope) r1;

        $r6 = r0.<androidx.compose.ui.node.OwnerSnapshotObserver: kotlin.jvm.functions.Function1 onCommitAffectingLookaheadMeasure>;

        virtualinvoke r0.<androidx.compose.ui.node.OwnerSnapshotObserver: void observeReads$ui_release(androidx.compose.ui.node.OwnerScope,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0)>($r7, $r6, r2);

        goto label2;

     label1:
        $r4 = (androidx.compose.ui.node.OwnerScope) r1;

        $r3 = r0.<androidx.compose.ui.node.OwnerSnapshotObserver: kotlin.jvm.functions.Function1 onCommitAffectingMeasure>;

        virtualinvoke r0.<androidx.compose.ui.node.OwnerSnapshotObserver: void observeReads$ui_release(androidx.compose.ui.node.OwnerScope,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0)>($r4, $r3, r2);

     label2:
        return;
    }

    public static void observeMeasureSnapshotReads$ui_release$default(androidx.compose.ui.node.OwnerSnapshotObserver, androidx.compose.ui.node.LayoutNode, boolean, kotlin.jvm.functions.Function0, int, java.lang.Object)
    {
        androidx.compose.ui.node.OwnerSnapshotObserver r0;
        androidx.compose.ui.node.LayoutNode r1;
        kotlin.jvm.functions.Function0 r2;
        int i0, $i1;
        java.lang.Object r3;
        boolean z0;

        r0 := @parameter0: androidx.compose.ui.node.OwnerSnapshotObserver;

        r1 := @parameter1: androidx.compose.ui.node.LayoutNode;

        z0 := @parameter2: boolean;

        r2 := @parameter3: kotlin.jvm.functions.Function0;

        i0 := @parameter4: int;

        r3 := @parameter5: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        z0 = 1;

     label1:
        virtualinvoke r0.<androidx.compose.ui.node.OwnerSnapshotObserver: void observeMeasureSnapshotReads$ui_release(androidx.compose.ui.node.LayoutNode,boolean,kotlin.jvm.functions.Function0)>(r1, z0, r2);

        return;
    }

    public final void observeReads$ui_release(androidx.compose.ui.node.OwnerScope, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function0)
    {
        androidx.compose.ui.node.OwnerSnapshotObserver r0;
        androidx.compose.ui.node.OwnerScope r1;
        kotlin.jvm.functions.Function1 r2;
        kotlin.jvm.functions.Function0 r3;
        androidx.compose.runtime.snapshots.SnapshotStateObserver $r4;

        r0 := @this: androidx.compose.ui.node.OwnerSnapshotObserver;

        r1 := @parameter0: androidx.compose.ui.node.OwnerScope;

        r2 := @parameter1: kotlin.jvm.functions.Function1;

        r3 := @parameter2: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "target");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "onChanged");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "block");

        $r4 = r0.<androidx.compose.ui.node.OwnerSnapshotObserver: androidx.compose.runtime.snapshots.SnapshotStateObserver observer>;

        virtualinvoke $r4.<androidx.compose.runtime.snapshots.SnapshotStateObserver: void observeReads(java.lang.Object,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0)>(r1, r2, r3);

        return;
    }

    public final void clearInvalidObservations$ui_release()
    {
        androidx.compose.ui.node.OwnerSnapshotObserver r0;
        androidx.compose.ui.node.OwnerSnapshotObserver$clearInvalidObservations$1 $r1;
        kotlin.jvm.functions.Function1 $r2;
        androidx.compose.runtime.snapshots.SnapshotStateObserver $r3;

        r0 := @this: androidx.compose.ui.node.OwnerSnapshotObserver;

        $r3 = r0.<androidx.compose.ui.node.OwnerSnapshotObserver: androidx.compose.runtime.snapshots.SnapshotStateObserver observer>;

        $r1 = <androidx.compose.ui.node.OwnerSnapshotObserver$clearInvalidObservations$1: androidx.compose.ui.node.OwnerSnapshotObserver$clearInvalidObservations$1 INSTANCE>;

        $r2 = (kotlin.jvm.functions.Function1) $r1;

        virtualinvoke $r3.<androidx.compose.runtime.snapshots.SnapshotStateObserver: void clearIf(kotlin.jvm.functions.Function1)>($r2);

        return;
    }

    public final void clear$ui_release(java.lang.Object)
    {
        androidx.compose.ui.node.OwnerSnapshotObserver r0;
        java.lang.Object r1;
        androidx.compose.runtime.snapshots.SnapshotStateObserver $r2;

        r0 := @this: androidx.compose.ui.node.OwnerSnapshotObserver;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "target");

        $r2 = r0.<androidx.compose.ui.node.OwnerSnapshotObserver: androidx.compose.runtime.snapshots.SnapshotStateObserver observer>;

        virtualinvoke $r2.<androidx.compose.runtime.snapshots.SnapshotStateObserver: void clear(java.lang.Object)>(r1);

        return;
    }

    public final void startObserving$ui_release()
    {
        androidx.compose.ui.node.OwnerSnapshotObserver r0;
        androidx.compose.runtime.snapshots.SnapshotStateObserver $r1;

        r0 := @this: androidx.compose.ui.node.OwnerSnapshotObserver;

        $r1 = r0.<androidx.compose.ui.node.OwnerSnapshotObserver: androidx.compose.runtime.snapshots.SnapshotStateObserver observer>;

        virtualinvoke $r1.<androidx.compose.runtime.snapshots.SnapshotStateObserver: void start()>();

        return;
    }

    public final void stopObserving$ui_release()
    {
        androidx.compose.ui.node.OwnerSnapshotObserver r0;
        androidx.compose.runtime.snapshots.SnapshotStateObserver $r1, $r2;

        r0 := @this: androidx.compose.ui.node.OwnerSnapshotObserver;

        $r1 = r0.<androidx.compose.ui.node.OwnerSnapshotObserver: androidx.compose.runtime.snapshots.SnapshotStateObserver observer>;

        virtualinvoke $r1.<androidx.compose.runtime.snapshots.SnapshotStateObserver: void stop()>();

        $r2 = r0.<androidx.compose.ui.node.OwnerSnapshotObserver: androidx.compose.runtime.snapshots.SnapshotStateObserver observer>;

        virtualinvoke $r2.<androidx.compose.runtime.snapshots.SnapshotStateObserver: void clear()>();

        return;
    }

androidx.compose.ui.node.OwnerSnapshotObserver$clearInvalidObservations$1
<androidx.compose.ui.node.OwnerSnapshotObserver$clearInvalidObservations$1: androidx.compose.ui.node.OwnerSnapshotObserver$clearInvalidObservations$1 INSTANCE>
    void <init>()
    {
        androidx.compose.ui.node.OwnerSnapshotObserver$clearInvalidObservations$1 r0;

        r0 := @this: androidx.compose.ui.node.OwnerSnapshotObserver$clearInvalidObservations$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Boolean invoke(java.lang.Object)
    {
        androidx.compose.ui.node.OwnerSnapshotObserver$clearInvalidObservations$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.node.OwnerScope $r2;
        boolean $z0, $z1;
        java.lang.Boolean $r3;

        r0 := @this: androidx.compose.ui.node.OwnerSnapshotObserver$clearInvalidObservations$1;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = (androidx.compose.ui.node.OwnerScope) r1;

        $z0 = interfaceinvoke $r2.<androidx.compose.ui.node.OwnerScope: boolean isValid()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        return $r3;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.ui.node.OwnerSnapshotObserver$clearInvalidObservations$1 r0;
        java.lang.Object r1;
        java.lang.Boolean $r2;

        r0 := @this: androidx.compose.ui.node.OwnerSnapshotObserver$clearInvalidObservations$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<androidx.compose.ui.node.OwnerSnapshotObserver$clearInvalidObservations$1: java.lang.Boolean invoke(java.lang.Object)>(r1);

        return $r2;
    }

    static void <clinit>()
    {
        androidx.compose.ui.node.OwnerSnapshotObserver$clearInvalidObservations$1 $r0;

        $r0 = new androidx.compose.ui.node.OwnerSnapshotObserver$clearInvalidObservations$1;

        specialinvoke $r0.<androidx.compose.ui.node.OwnerSnapshotObserver$clearInvalidObservations$1: void <init>()>();

        <androidx.compose.ui.node.OwnerSnapshotObserver$clearInvalidObservations$1: androidx.compose.ui.node.OwnerSnapshotObserver$clearInvalidObservations$1 INSTANCE> = $r0;

        return;
    }

androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayout$1
<androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayout$1: androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayout$1 INSTANCE>
    void <init>()
    {
        androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayout$1 r0;

        r0 := @this: androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayout$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.compose.ui.node.LayoutNode)
    {
        androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayout$1 r0;
        androidx.compose.ui.node.LayoutNode r1;
        boolean $z0;

        r0 := @this: androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayout$1;

        r1 := @parameter0: androidx.compose.ui.node.LayoutNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "layoutNode");

        $z0 = virtualinvoke r1.<androidx.compose.ui.node.LayoutNode: boolean isValid()>();

        if $z0 == 0 goto label1;

        staticinvoke <androidx.compose.ui.node.LayoutNode: void requestRelayout$ui_release$default(androidx.compose.ui.node.LayoutNode,boolean,int,java.lang.Object)>(r1, 0, 1, null);

     label1:
        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayout$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.node.LayoutNode $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayout$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.node.LayoutNode) r1;

        virtualinvoke r0.<androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayout$1: void invoke(androidx.compose.ui.node.LayoutNode)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

    static void <clinit>()
    {
        androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayout$1 $r0;

        $r0 = new androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayout$1;

        specialinvoke $r0.<androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayout$1: void <init>()>();

        <androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayout$1: androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayout$1 INSTANCE> = $r0;

        return;
    }

androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayoutModifier$1
<androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayoutModifier$1: androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayoutModifier$1 INSTANCE>
    void <init>()
    {
        androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayoutModifier$1 r0;

        r0 := @this: androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayoutModifier$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.compose.ui.node.LayoutNode)
    {
        androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayoutModifier$1 r0;
        androidx.compose.ui.node.LayoutNode r1;
        boolean $z0;

        r0 := @this: androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayoutModifier$1;

        r1 := @parameter0: androidx.compose.ui.node.LayoutNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "layoutNode");

        $z0 = virtualinvoke r1.<androidx.compose.ui.node.LayoutNode: boolean isValid()>();

        if $z0 == 0 goto label1;

        staticinvoke <androidx.compose.ui.node.LayoutNode: void requestRelayout$ui_release$default(androidx.compose.ui.node.LayoutNode,boolean,int,java.lang.Object)>(r1, 0, 1, null);

     label1:
        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayoutModifier$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.node.LayoutNode $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayoutModifier$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.node.LayoutNode) r1;

        virtualinvoke r0.<androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayoutModifier$1: void invoke(androidx.compose.ui.node.LayoutNode)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

    static void <clinit>()
    {
        androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayoutModifier$1 $r0;

        $r0 = new androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayoutModifier$1;

        specialinvoke $r0.<androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayoutModifier$1: void <init>()>();

        <androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayoutModifier$1: androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayoutModifier$1 INSTANCE> = $r0;

        return;
    }

androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayoutModifierInLookahead$1
<androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayoutModifierInLookahead$1: androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayoutModifierInLookahead$1 INSTANCE>
    void <init>()
    {
        androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayoutModifierInLookahead$1 r0;

        r0 := @this: androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayoutModifierInLookahead$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.compose.ui.node.LayoutNode)
    {
        androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayoutModifierInLookahead$1 r0;
        androidx.compose.ui.node.LayoutNode r1;
        boolean $z0;

        r0 := @this: androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayoutModifierInLookahead$1;

        r1 := @parameter0: androidx.compose.ui.node.LayoutNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "layoutNode");

        $z0 = virtualinvoke r1.<androidx.compose.ui.node.LayoutNode: boolean isValid()>();

        if $z0 == 0 goto label1;

        staticinvoke <androidx.compose.ui.node.LayoutNode: void requestLookaheadRelayout$ui_release$default(androidx.compose.ui.node.LayoutNode,boolean,int,java.lang.Object)>(r1, 0, 1, null);

     label1:
        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayoutModifierInLookahead$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.node.LayoutNode $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayoutModifierInLookahead$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.node.LayoutNode) r1;

        virtualinvoke r0.<androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayoutModifierInLookahead$1: void invoke(androidx.compose.ui.node.LayoutNode)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

    static void <clinit>()
    {
        androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayoutModifierInLookahead$1 $r0;

        $r0 = new androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayoutModifierInLookahead$1;

        specialinvoke $r0.<androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayoutModifierInLookahead$1: void <init>()>();

        <androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayoutModifierInLookahead$1: androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLayoutModifierInLookahead$1 INSTANCE> = $r0;

        return;
    }

androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLookaheadLayout$1
<androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLookaheadLayout$1: androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLookaheadLayout$1 INSTANCE>
    void <init>()
    {
        androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLookaheadLayout$1 r0;

        r0 := @this: androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLookaheadLayout$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.compose.ui.node.LayoutNode)
    {
        androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLookaheadLayout$1 r0;
        androidx.compose.ui.node.LayoutNode r1;
        boolean $z0;

        r0 := @this: androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLookaheadLayout$1;

        r1 := @parameter0: androidx.compose.ui.node.LayoutNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "layoutNode");

        $z0 = virtualinvoke r1.<androidx.compose.ui.node.LayoutNode: boolean isValid()>();

        if $z0 == 0 goto label1;

        staticinvoke <androidx.compose.ui.node.LayoutNode: void requestLookaheadRelayout$ui_release$default(androidx.compose.ui.node.LayoutNode,boolean,int,java.lang.Object)>(r1, 0, 1, null);

     label1:
        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLookaheadLayout$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.node.LayoutNode $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLookaheadLayout$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.node.LayoutNode) r1;

        virtualinvoke r0.<androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLookaheadLayout$1: void invoke(androidx.compose.ui.node.LayoutNode)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

    static void <clinit>()
    {
        androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLookaheadLayout$1 $r0;

        $r0 = new androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLookaheadLayout$1;

        specialinvoke $r0.<androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLookaheadLayout$1: void <init>()>();

        <androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLookaheadLayout$1: androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLookaheadLayout$1 INSTANCE> = $r0;

        return;
    }

androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLookaheadMeasure$1
<androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLookaheadMeasure$1: androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLookaheadMeasure$1 INSTANCE>
    void <init>()
    {
        androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLookaheadMeasure$1 r0;

        r0 := @this: androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLookaheadMeasure$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.compose.ui.node.LayoutNode)
    {
        androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLookaheadMeasure$1 r0;
        androidx.compose.ui.node.LayoutNode r1;
        boolean $z0;

        r0 := @this: androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLookaheadMeasure$1;

        r1 := @parameter0: androidx.compose.ui.node.LayoutNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "layoutNode");

        $z0 = virtualinvoke r1.<androidx.compose.ui.node.LayoutNode: boolean isValid()>();

        if $z0 == 0 goto label1;

        staticinvoke <androidx.compose.ui.node.LayoutNode: void requestLookaheadRemeasure$ui_release$default(androidx.compose.ui.node.LayoutNode,boolean,int,java.lang.Object)>(r1, 0, 1, null);

     label1:
        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLookaheadMeasure$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.node.LayoutNode $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLookaheadMeasure$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.node.LayoutNode) r1;

        virtualinvoke r0.<androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLookaheadMeasure$1: void invoke(androidx.compose.ui.node.LayoutNode)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

    static void <clinit>()
    {
        androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLookaheadMeasure$1 $r0;

        $r0 = new androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLookaheadMeasure$1;

        specialinvoke $r0.<androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLookaheadMeasure$1: void <init>()>();

        <androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLookaheadMeasure$1: androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingLookaheadMeasure$1 INSTANCE> = $r0;

        return;
    }

androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingMeasure$1
<androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingMeasure$1: androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingMeasure$1 INSTANCE>
    void <init>()
    {
        androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingMeasure$1 r0;

        r0 := @this: androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingMeasure$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.compose.ui.node.LayoutNode)
    {
        androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingMeasure$1 r0;
        androidx.compose.ui.node.LayoutNode r1;
        boolean $z0;

        r0 := @this: androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingMeasure$1;

        r1 := @parameter0: androidx.compose.ui.node.LayoutNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "layoutNode");

        $z0 = virtualinvoke r1.<androidx.compose.ui.node.LayoutNode: boolean isValid()>();

        if $z0 == 0 goto label1;

        staticinvoke <androidx.compose.ui.node.LayoutNode: void requestRemeasure$ui_release$default(androidx.compose.ui.node.LayoutNode,boolean,int,java.lang.Object)>(r1, 0, 1, null);

     label1:
        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingMeasure$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.node.LayoutNode $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingMeasure$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.node.LayoutNode) r1;

        virtualinvoke r0.<androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingMeasure$1: void invoke(androidx.compose.ui.node.LayoutNode)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

    static void <clinit>()
    {
        androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingMeasure$1 $r0;

        $r0 = new androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingMeasure$1;

        specialinvoke $r0.<androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingMeasure$1: void <init>()>();

        <androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingMeasure$1: androidx.compose.ui.node.OwnerSnapshotObserver$onCommitAffectingMeasure$1 INSTANCE> = $r0;

        return;
    }

