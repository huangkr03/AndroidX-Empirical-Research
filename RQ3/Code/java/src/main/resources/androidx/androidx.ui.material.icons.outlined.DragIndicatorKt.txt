androidx.ui.material.icons.outlined.DragIndicatorKt
<androidx.ui.material.icons.outlined.DragIndicatorKt: kotlin.reflect.KProperty[] $$delegatedProperties>
<androidx.ui.material.icons.outlined.DragIndicatorKt: kotlin.Lazy DragIndicator$delegate>
    public static final androidx.ui.graphics.vector.VectorAsset getDragIndicator(androidx.ui.material.icons.Icons$Outlined)
    {
        androidx.ui.material.icons.Icons$Outlined $r0;
        kotlin.Lazy r1;
        kotlin.reflect.KProperty r2;
        boolean z0;
        kotlin.reflect.KProperty[] $r3;
        java.lang.Object $r4;
        androidx.ui.graphics.vector.VectorAsset $r5;

        $r0 := @parameter0: androidx.ui.material.icons.Icons$Outlined;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r1 = <androidx.ui.material.icons.outlined.DragIndicatorKt: kotlin.Lazy DragIndicator$delegate>;

        $r3 = <androidx.ui.material.icons.outlined.DragIndicatorKt: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r3[0];

        z0 = 0;

        $r4 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r5 = (androidx.ui.graphics.vector.VectorAsset) $r4;

        return $r5;
    }

    public static final void <clinit>()
    {
        kotlin.reflect.KProperty[] r0;
        kotlin.jvm.internal.PropertyReference1Impl $r1;
        kotlin.reflect.KDeclarationContainer $r2;
        kotlin.jvm.internal.PropertyReference1 $r3;
        kotlin.reflect.KProperty1 $r4;
        kotlin.reflect.KProperty $r5;
        androidx.ui.material.icons.outlined.DragIndicatorKt$DragIndicator$2 $r6;
        kotlin.jvm.functions.Function1 $r7;
        kotlin.Lazy $r8;

        r0 = newarray (kotlin.reflect.KProperty)[1];

        $r1 = new kotlin.jvm.internal.PropertyReference1Impl;

        $r2 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class,java.lang.String)>(class "Landroidx/ui/material/icons/outlined/DragIndicatorKt;", "ui-material-icons-extended_release");

        specialinvoke $r1.<kotlin.jvm.internal.PropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r2, "DragIndicator", "getDragIndicator(Landroidx/ui/material/icons/Icons$Outlined;)Landroidx/ui/graphics/vector/VectorAsset;");

        $r3 = (kotlin.jvm.internal.PropertyReference1) $r1;

        $r4 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KProperty1 property1(kotlin.jvm.internal.PropertyReference1)>($r3);

        $r5 = (kotlin.reflect.KProperty) $r4;

        r0[0] = $r5;

        <androidx.ui.material.icons.outlined.DragIndicatorKt: kotlin.reflect.KProperty[] $$delegatedProperties> = r0;

        $r6 = new androidx.ui.material.icons.outlined.DragIndicatorKt$DragIndicator$2;

        specialinvoke $r6.<androidx.ui.material.icons.outlined.DragIndicatorKt$DragIndicator$2: void <init>()>();

        $r7 = (kotlin.jvm.functions.Function1) $r6;

        $r8 = staticinvoke <androidx.ui.material.icons.IconsKt: kotlin.Lazy lazyMaterialIcon(kotlin.jvm.functions.Function1)>($r7);

        <androidx.ui.material.icons.outlined.DragIndicatorKt: kotlin.Lazy DragIndicator$delegate> = $r8;

        return;
    }

