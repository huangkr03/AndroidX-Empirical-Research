androidx.graphics.opengl.egl.EGLSpec
<androidx.graphics.opengl.egl.EGLSpec: androidx.graphics.opengl.egl.EGLSpec$Companion Companion>
<androidx.graphics.opengl.egl.EGLSpec: androidx.graphics.opengl.egl.EGLSpec V14>
<androidx.graphics.opengl.egl.EGLSpec: java.lang.String eglQueryString(int)>
<androidx.graphics.opengl.egl.EGLSpec: android.opengl.EGLSurface eglCreatePBufferSurface(android.opengl.EGLConfig,androidx.graphics.opengl.egl.EGLConfigAttributes)>
<androidx.graphics.opengl.egl.EGLSpec: android.opengl.EGLSurface eglCreateWindowSurface(android.opengl.EGLConfig,android.view.Surface,androidx.graphics.opengl.egl.EGLConfigAttributes)>
<androidx.graphics.opengl.egl.EGLSpec: boolean eglDestroySurface(android.opengl.EGLSurface)>
<androidx.graphics.opengl.egl.EGLSpec: boolean eglMakeCurrent(android.opengl.EGLContext,android.opengl.EGLSurface,android.opengl.EGLSurface)>
<androidx.graphics.opengl.egl.EGLSpec: android.opengl.EGLSurface eglGetCurrentReadSurface()>
<androidx.graphics.opengl.egl.EGLSpec: android.opengl.EGLSurface eglGetCurrentDrawSurface()>
<androidx.graphics.opengl.egl.EGLSpec: androidx.graphics.opengl.egl.EGLVersion eglInitialize()>
<androidx.graphics.opengl.egl.EGLSpec: android.opengl.EGLConfig loadConfig(androidx.graphics.opengl.egl.EGLConfigAttributes)>
<androidx.graphics.opengl.egl.EGLSpec: android.opengl.EGLContext eglCreateContext(android.opengl.EGLConfig)>
<androidx.graphics.opengl.egl.EGLSpec: void eglDestroyContext(android.opengl.EGLContext)>
<androidx.graphics.opengl.egl.EGLSpec: boolean eglSwapBuffers(android.opengl.EGLSurface)>
<androidx.graphics.opengl.egl.EGLSpec: boolean eglQuerySurface(android.opengl.EGLSurface,int,int[],int)>
<androidx.graphics.opengl.egl.EGLSpec: int eglGetError()>
<androidx.graphics.opengl.egl.EGLSpec: java.lang.String getErrorMessage()>
<androidx.graphics.opengl.egl.EGLSpec: androidx.opengl.EGLImageKHR eglCreateImageFromHardwareBuffer(android.hardware.HardwareBuffer)>
<androidx.graphics.opengl.egl.EGLSpec: boolean eglDestroyImageKHR(androidx.opengl.EGLImageKHR)>
<androidx.graphics.opengl.egl.EGLSpec: androidx.opengl.EGLSyncKHR eglCreateSyncKHR(int,androidx.graphics.opengl.egl.EGLConfigAttributes)>
<androidx.graphics.opengl.egl.EGLSpec: boolean eglGetSyncAttribKHR(androidx.opengl.EGLSyncKHR,int,int[],int)>
<androidx.graphics.opengl.egl.EGLSpec: boolean eglDestroySyncKHR(androidx.opengl.EGLSyncKHR)>
<androidx.graphics.opengl.egl.EGLSpec: androidx.hardware.SyncFence eglDupNativeFenceFDANDROID(androidx.opengl.EGLSyncKHR)>
<androidx.graphics.opengl.egl.EGLSpec: int eglClientWaitSyncKHR(androidx.opengl.EGLSyncKHR,int,long)>
    public static java.lang.String getStatusString(int)
    {
        int i0;
        androidx.graphics.opengl.egl.EGLSpec$Companion $r0;
        java.lang.String $r1;

        i0 := @parameter0: int;

        $r0 = <androidx.graphics.opengl.egl.EGLSpec: androidx.graphics.opengl.egl.EGLSpec$Companion Companion>;

        $r1 = virtualinvoke $r0.<androidx.graphics.opengl.egl.EGLSpec$Companion: java.lang.String getStatusString(int)>(i0);

        return $r1;
    }

    static void <clinit>()
    {
        androidx.graphics.opengl.egl.EGLSpec$Companion $r0;
        androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1 $r1;
        androidx.graphics.opengl.egl.EGLSpec $r2;

        $r0 = <androidx.graphics.opengl.egl.EGLSpec$Companion: androidx.graphics.opengl.egl.EGLSpec$Companion $$INSTANCE>;

        <androidx.graphics.opengl.egl.EGLSpec: androidx.graphics.opengl.egl.EGLSpec$Companion Companion> = $r0;

        $r1 = new androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1;

        specialinvoke $r1.<androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1: void <init>()>();

        $r2 = (androidx.graphics.opengl.egl.EGLSpec) $r1;

        <androidx.graphics.opengl.egl.EGLSpec: androidx.graphics.opengl.egl.EGLSpec V14> = $r2;

        return;
    }

androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1
<androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1: int[] contextAttributes>
<androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1: androidx.graphics.opengl.egl.EGLConfigAttributes DefaultWindowSurfaceConfig>
    void <init>()
    {
        androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1 r0, r3;
        androidx.graphics.opengl.egl.EGLConfigAttributes$Builder r1, $r4;
        androidx.graphics.opengl.egl.EGLConfigAttributes $r5;
        int[] $r6;

        r0 := @this: androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = newarray (int)[3];

        $r6[0] = 12440;

        $r6[1] = 2;

        $r6[2] = 12344;

        r0.<androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1: int[] contextAttributes> = $r6;

        $r4 = new androidx.graphics.opengl.egl.EGLConfigAttributes$Builder;

        specialinvoke $r4.<androidx.graphics.opengl.egl.EGLConfigAttributes$Builder: void <init>()>();

        r1 = $r4;

        r3 = r0;

        $r5 = virtualinvoke r1.<androidx.graphics.opengl.egl.EGLConfigAttributes$Builder: androidx.graphics.opengl.egl.EGLConfigAttributes build()>();

        r3.<androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1: androidx.graphics.opengl.egl.EGLConfigAttributes DefaultWindowSurfaceConfig> = $r5;

        return;
    }

    public androidx.graphics.opengl.egl.EGLVersion eglInitialize()
    {
        androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1 r0;
        int[] r1, r5, r6, r7;
        android.opengl.EGLDisplay $r2;
        int $i0, $i1, $i2;
        boolean z0;
        androidx.graphics.opengl.egl.EGLVersion r8;
        androidx.graphics.opengl.egl.EGLException r9;
        java.lang.Throwable r10;

        r0 := @this: androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1;

        r5 = newarray (int)[1];

        r5[0] = 1;

        r1 = r5;

        r6 = newarray (int)[1];

        r6[0] = 1;

        r7 = r6;

        $r2 = specialinvoke r0.<androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1: android.opengl.EGLDisplay getDefaultDisplay()>();

        z0 = staticinvoke <android.opengl.EGL14: boolean eglInitialize(android.opengl.EGLDisplay,int[],int,int[],int)>($r2, r1, 0, r7, 0);

        if z0 == 0 goto label1;

        r8 = new androidx.graphics.opengl.egl.EGLVersion;

        $i2 = r1[0];

        $i1 = r7[0];

        specialinvoke r8.<androidx.graphics.opengl.egl.EGLVersion: void <init>(int,int)>($i2, $i1);

        return r8;

     label1:
        r9 = new androidx.graphics.opengl.egl.EGLException;

        $i0 = staticinvoke <android.opengl.EGL14: int eglGetError()>();

        specialinvoke r9.<androidx.graphics.opengl.egl.EGLException: void <init>(int,java.lang.String)>($i0, "Unable to initialize default display");

        r10 = (java.lang.Throwable) r9;

        throw r10;
    }

    public android.opengl.EGLSurface eglGetCurrentReadSurface()
    {
        androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1 r0;
        android.opengl.EGLSurface $r1;

        r0 := @this: androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1;

        $r1 = staticinvoke <android.opengl.EGL14: android.opengl.EGLSurface eglGetCurrentSurface(int)>(12378);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "eglGetCurrentSurface(EGL14.EGL_READ)");

        return $r1;
    }

    public android.opengl.EGLSurface eglGetCurrentDrawSurface()
    {
        androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1 r0;
        android.opengl.EGLSurface $r1;

        r0 := @this: androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1;

        $r1 = staticinvoke <android.opengl.EGL14: android.opengl.EGLSurface eglGetCurrentSurface(int)>(12377);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "eglGetCurrentSurface(EGL14.EGL_DRAW)");

        return $r1;
    }

    public java.lang.String eglQueryString(int)
    {
        androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1 r0;
        int i0;
        android.opengl.EGLDisplay $r1;
        java.lang.String $r2;

        r0 := @this: androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1: android.opengl.EGLDisplay getDefaultDisplay()>();

        $r2 = staticinvoke <android.opengl.EGL14: java.lang.String eglQueryString(android.opengl.EGLDisplay,int)>($r1, i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "eglQueryString(getDefaultDisplay(), nameId)");

        return $r2;
    }

    public android.opengl.EGLSurface eglCreatePBufferSurface(android.opengl.EGLConfig, androidx.graphics.opengl.egl.EGLConfigAttributes)
    {
        androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1 r0;
        android.opengl.EGLConfig r1;
        androidx.graphics.opengl.egl.EGLConfigAttributes r2;
        android.opengl.EGLDisplay $r3;
        android.opengl.EGLSurface $r4;
        int[] $r6;

        r0 := @this: androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1;

        r1 := @parameter0: android.opengl.EGLConfig;

        r2 := @parameter1: androidx.graphics.opengl.egl.EGLConfigAttributes;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "config");

        $r3 = specialinvoke r0.<androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1: android.opengl.EGLDisplay getDefaultDisplay()>();

        if r2 == null goto label1;

        $r6 = virtualinvoke r2.<androidx.graphics.opengl.egl.EGLConfigAttributes: int[] getAttrs()>();

        goto label2;

     label1:
        $r6 = null;

     label2:
        $r4 = staticinvoke <android.opengl.EGL14: android.opengl.EGLSurface eglCreatePbufferSurface(android.opengl.EGLDisplay,android.opengl.EGLConfig,int[],int)>($r3, r1, $r6, 0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "eglCreatePbufferSurface(\u2026      0\n                )");

        return $r4;
    }

    public android.opengl.EGLSurface eglCreateWindowSurface(android.opengl.EGLConfig, android.view.Surface, androidx.graphics.opengl.egl.EGLConfigAttributes)
    {
        androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1 r0;
        android.opengl.EGLConfig r1;
        android.view.Surface r2;
        androidx.graphics.opengl.egl.EGLConfigAttributes r3, $r4;
        android.opengl.EGLDisplay $r5;
        int[] $r8;
        android.opengl.EGLSurface $r9;

        r0 := @this: androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1;

        r1 := @parameter0: android.opengl.EGLConfig;

        r2 := @parameter1: android.view.Surface;

        r3 := @parameter2: androidx.graphics.opengl.egl.EGLConfigAttributes;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "config");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "surface");

        $r5 = specialinvoke r0.<androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1: android.opengl.EGLDisplay getDefaultDisplay()>();

        if r3 == null goto label1;

        $r8 = virtualinvoke r3.<androidx.graphics.opengl.egl.EGLConfigAttributes: int[] getAttrs()>();

        if $r8 != null goto label2;

     label1:
        $r4 = r0.<androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1: androidx.graphics.opengl.egl.EGLConfigAttributes DefaultWindowSurfaceConfig>;

        $r8 = virtualinvoke $r4.<androidx.graphics.opengl.egl.EGLConfigAttributes: int[] getAttrs()>();

     label2:
        $r9 = staticinvoke <android.opengl.EGL14: android.opengl.EGLSurface eglCreateWindowSurface(android.opengl.EGLDisplay,android.opengl.EGLConfig,java.lang.Object,int[],int)>($r5, r1, r2, $r8, 0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r9, "eglCreateWindowSurface(\n\u2026      0\n                )");

        return $r9;
    }

    public boolean eglSwapBuffers(android.opengl.EGLSurface)
    {
        androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1 r0;
        android.opengl.EGLSurface r1;
        android.opengl.EGLDisplay $r2;
        boolean $z0;

        r0 := @this: androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1;

        r1 := @parameter0: android.opengl.EGLSurface;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "surface");

        $r2 = specialinvoke r0.<androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1: android.opengl.EGLDisplay getDefaultDisplay()>();

        $z0 = staticinvoke <android.opengl.EGL14: boolean eglSwapBuffers(android.opengl.EGLDisplay,android.opengl.EGLSurface)>($r2, r1);

        return $z0;
    }

    public boolean eglQuerySurface(android.opengl.EGLSurface, int, int[], int)
    {
        androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1 r0;
        android.opengl.EGLSurface r1;
        int i0, i1;
        int[] r2;
        android.opengl.EGLDisplay $r3;
        boolean $z0;

        r0 := @this: androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1;

        r1 := @parameter0: android.opengl.EGLSurface;

        i0 := @parameter1: int;

        r2 := @parameter2: int[];

        i1 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "surface");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "result");

        $r3 = specialinvoke r0.<androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1: android.opengl.EGLDisplay getDefaultDisplay()>();

        $z0 = staticinvoke <android.opengl.EGL14: boolean eglQuerySurface(android.opengl.EGLDisplay,android.opengl.EGLSurface,int,int[],int)>($r3, r1, i0, r2, i1);

        return $z0;
    }

    public boolean eglDestroySurface(android.opengl.EGLSurface)
    {
        androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1 r0;
        android.opengl.EGLSurface r1;
        android.opengl.EGLDisplay $r2;
        boolean $z0;

        r0 := @this: androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1;

        r1 := @parameter0: android.opengl.EGLSurface;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "surface");

        $r2 = specialinvoke r0.<androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1: android.opengl.EGLDisplay getDefaultDisplay()>();

        $z0 = staticinvoke <android.opengl.EGL14: boolean eglDestroySurface(android.opengl.EGLDisplay,android.opengl.EGLSurface)>($r2, r1);

        return $z0;
    }

    public boolean eglMakeCurrent(android.opengl.EGLContext, android.opengl.EGLSurface, android.opengl.EGLSurface)
    {
        androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1 r0;
        android.opengl.EGLContext r1;
        android.opengl.EGLSurface r2, r3;
        android.opengl.EGLDisplay $r4;
        boolean $z0;

        r0 := @this: androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1;

        r1 := @parameter0: android.opengl.EGLContext;

        r2 := @parameter1: android.opengl.EGLSurface;

        r3 := @parameter2: android.opengl.EGLSurface;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "drawSurface");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "readSurface");

        $r4 = specialinvoke r0.<androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1: android.opengl.EGLDisplay getDefaultDisplay()>();

        $z0 = staticinvoke <android.opengl.EGL14: boolean eglMakeCurrent(android.opengl.EGLDisplay,android.opengl.EGLSurface,android.opengl.EGLSurface,android.opengl.EGLContext)>($r4, r2, r3, r1);

        return $z0;
    }

    public android.opengl.EGLConfig loadConfig(androidx.graphics.opengl.egl.EGLConfigAttributes)
    {
        androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1 r0;
        androidx.graphics.opengl.egl.EGLConfigAttributes r1;
        android.opengl.EGLConfig[] r2;
        int[] r3, $r5;
        android.opengl.EGLDisplay $r4;
        boolean $z0;
        android.opengl.EGLConfig $r6;

        r0 := @this: androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1;

        r1 := @parameter0: androidx.graphics.opengl.egl.EGLConfigAttributes;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "configAttributes");

        r2 = newarray (android.opengl.EGLConfig)[1];

        $r4 = specialinvoke r0.<androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1: android.opengl.EGLDisplay getDefaultDisplay()>();

        $r5 = virtualinvoke r1.<androidx.graphics.opengl.egl.EGLConfigAttributes: int[] getAttrs()>();

        r3 = newarray (int)[1];

        r3[0] = 1;

        $z0 = staticinvoke <android.opengl.EGL14: boolean eglChooseConfig(android.opengl.EGLDisplay,int[],int,android.opengl.EGLConfig[],int,int,int[],int)>($r4, $r5, 0, r2, 0, 1, r3, 0);

        if $z0 == 0 goto label1;

        $r6 = r2[0];

        goto label2;

     label1:
        $r6 = (android.opengl.EGLConfig) null;

     label2:
        return $r6;
    }

    public android.opengl.EGLContext eglCreateContext(android.opengl.EGLConfig)
    {
        androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1 r0;
        android.opengl.EGLConfig r1;
        android.opengl.EGLDisplay $r2;
        int[] $r3;
        android.opengl.EGLContext $r4, $r5;

        r0 := @this: androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1;

        r1 := @parameter0: android.opengl.EGLConfig;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "config");

        $r2 = specialinvoke r0.<androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1: android.opengl.EGLDisplay getDefaultDisplay()>();

        $r4 = <android.opengl.EGL14: android.opengl.EGLContext EGL_NO_CONTEXT>;

        $r3 = r0.<androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1: int[] contextAttributes>;

        $r5 = staticinvoke <android.opengl.EGL14: android.opengl.EGLContext eglCreateContext(android.opengl.EGLDisplay,android.opengl.EGLConfig,android.opengl.EGLContext,int[],int)>($r2, r1, $r4, $r3, 0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "eglCreateContext(\n      \u2026      0\n                )");

        return $r5;
    }

    public void eglDestroyContext(android.opengl.EGLContext)
    {
        androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1 r0;
        android.opengl.EGLContext r1;
        android.opengl.EGLDisplay $r2;
        boolean $z0;
        int $i0;
        androidx.graphics.opengl.egl.EGLException r4;
        java.lang.Throwable r5;

        r0 := @this: androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1;

        r1 := @parameter0: android.opengl.EGLContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "eglContext");

        $r2 = specialinvoke r0.<androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1: android.opengl.EGLDisplay getDefaultDisplay()>();

        $z0 = staticinvoke <android.opengl.EGL14: boolean eglDestroyContext(android.opengl.EGLDisplay,android.opengl.EGLContext)>($r2, r1);

        if $z0 != 0 goto label1;

        r4 = new androidx.graphics.opengl.egl.EGLException;

        $i0 = staticinvoke <android.opengl.EGL14: int eglGetError()>();

        specialinvoke r4.<androidx.graphics.opengl.egl.EGLException: void <init>(int,java.lang.String)>($i0, "Unable to destroy EGLContext");

        r5 = (java.lang.Throwable) r4;

        throw r5;

     label1:
        return;
    }

    public androidx.opengl.EGLImageKHR eglCreateImageFromHardwareBuffer(android.hardware.HardwareBuffer)
    {
        androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1 r0;
        android.hardware.HardwareBuffer r1;
        androidx.opengl.EGLExt$Companion $r2;
        android.opengl.EGLDisplay $r3;
        androidx.opengl.EGLImageKHR $r4;

        r0 := @this: androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1;

        r1 := @parameter0: android.hardware.HardwareBuffer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "hardwareBuffer");

        $r2 = <androidx.opengl.EGLExt: androidx.opengl.EGLExt$Companion Companion>;

        $r3 = specialinvoke r0.<androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1: android.opengl.EGLDisplay getDefaultDisplay()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "getDefaultDisplay()");

        $r4 = virtualinvoke $r2.<androidx.opengl.EGLExt$Companion: androidx.opengl.EGLImageKHR eglCreateImageFromHardwareBuffer(android.opengl.EGLDisplay,android.hardware.HardwareBuffer)>($r3, r1);

        return $r4;
    }

    public boolean eglDestroyImageKHR(androidx.opengl.EGLImageKHR)
    {
        androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1 r0;
        androidx.opengl.EGLImageKHR r1;
        androidx.opengl.EGLExt$Companion $r2;
        android.opengl.EGLDisplay $r3;
        boolean $z0;

        r0 := @this: androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1;

        r1 := @parameter0: androidx.opengl.EGLImageKHR;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "image");

        $r2 = <androidx.opengl.EGLExt: androidx.opengl.EGLExt$Companion Companion>;

        $r3 = specialinvoke r0.<androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1: android.opengl.EGLDisplay getDefaultDisplay()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "getDefaultDisplay()");

        $z0 = virtualinvoke $r2.<androidx.opengl.EGLExt$Companion: boolean eglDestroyImageKHR(android.opengl.EGLDisplay,androidx.opengl.EGLImageKHR)>($r3, r1);

        return $z0;
    }

    public androidx.opengl.EGLSyncKHR eglCreateSyncKHR(int, androidx.graphics.opengl.egl.EGLConfigAttributes)
    {
        androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1 r0;
        int i0;
        androidx.graphics.opengl.egl.EGLConfigAttributes r1;
        androidx.opengl.EGLExt$Companion $r2;
        android.opengl.EGLDisplay $r3;
        androidx.opengl.EGLSyncKHR $r4;

        r0 := @this: androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.graphics.opengl.egl.EGLConfigAttributes;

        $r2 = <androidx.opengl.EGLExt: androidx.opengl.EGLExt$Companion Companion>;

        $r3 = specialinvoke r0.<androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1: android.opengl.EGLDisplay getDefaultDisplay()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "getDefaultDisplay()");

        $r4 = virtualinvoke $r2.<androidx.opengl.EGLExt$Companion: androidx.opengl.EGLSyncKHR eglCreateSyncKHR(android.opengl.EGLDisplay,int,androidx.graphics.opengl.egl.EGLConfigAttributes)>($r3, i0, r1);

        return $r4;
    }

    public boolean eglGetSyncAttribKHR(androidx.opengl.EGLSyncKHR, int, int[], int)
    {
        androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1 r0;
        androidx.opengl.EGLSyncKHR r1;
        int i0, i1;
        int[] r2;
        androidx.opengl.EGLExt$Companion $r3;
        android.opengl.EGLDisplay $r4;
        boolean $z0;

        r0 := @this: androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1;

        r1 := @parameter0: androidx.opengl.EGLSyncKHR;

        i0 := @parameter1: int;

        r2 := @parameter2: int[];

        i1 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "sync");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "value");

        $r3 = <androidx.opengl.EGLExt: androidx.opengl.EGLExt$Companion Companion>;

        $r4 = specialinvoke r0.<androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1: android.opengl.EGLDisplay getDefaultDisplay()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "getDefaultDisplay()");

        $z0 = virtualinvoke $r3.<androidx.opengl.EGLExt$Companion: boolean eglGetSyncAttribKHR(android.opengl.EGLDisplay,androidx.opengl.EGLSyncKHR,int,int[],int)>($r4, r1, i0, r2, i1);

        return $z0;
    }

    public boolean eglDestroySyncKHR(androidx.opengl.EGLSyncKHR)
    {
        androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1 r0;
        androidx.opengl.EGLSyncKHR r1;
        androidx.opengl.EGLExt$Companion $r2;
        android.opengl.EGLDisplay $r3;
        boolean $z0;

        r0 := @this: androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1;

        r1 := @parameter0: androidx.opengl.EGLSyncKHR;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "sync");

        $r2 = <androidx.opengl.EGLExt: androidx.opengl.EGLExt$Companion Companion>;

        $r3 = specialinvoke r0.<androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1: android.opengl.EGLDisplay getDefaultDisplay()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "getDefaultDisplay()");

        $z0 = virtualinvoke $r2.<androidx.opengl.EGLExt$Companion: boolean eglDestroySyncKHR(android.opengl.EGLDisplay,androidx.opengl.EGLSyncKHR)>($r3, r1);

        return $z0;
    }

    public int eglGetError()
    {
        androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1 r0;
        int $i0;

        r0 := @this: androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1;

        $i0 = staticinvoke <android.opengl.EGL14: int eglGetError()>();

        return $i0;
    }

    public androidx.hardware.SyncFence eglDupNativeFenceFDANDROID(androidx.opengl.EGLSyncKHR)
    {
        androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1 r0;
        androidx.opengl.EGLSyncKHR r1;
        androidx.opengl.EGLExt$Companion $r2;
        android.opengl.EGLDisplay $r3;
        androidx.hardware.SyncFence $r4;

        r0 := @this: androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1;

        r1 := @parameter0: androidx.opengl.EGLSyncKHR;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "sync");

        $r2 = <androidx.opengl.EGLExt: androidx.opengl.EGLExt$Companion Companion>;

        $r3 = specialinvoke r0.<androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1: android.opengl.EGLDisplay getDefaultDisplay()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "getDefaultDisplay()");

        $r4 = virtualinvoke $r2.<androidx.opengl.EGLExt$Companion: androidx.hardware.SyncFence eglDupNativeFenceFDANDROID(android.opengl.EGLDisplay,androidx.opengl.EGLSyncKHR)>($r3, r1);

        return $r4;
    }

    public int eglClientWaitSyncKHR(androidx.opengl.EGLSyncKHR, int, long)
    {
        androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1 r0;
        androidx.opengl.EGLSyncKHR r1;
        int i0, $i2;
        long l1;
        androidx.opengl.EGLExt$Companion $r2;
        android.opengl.EGLDisplay $r3;

        r0 := @this: androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1;

        r1 := @parameter0: androidx.opengl.EGLSyncKHR;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "sync");

        $r2 = <androidx.opengl.EGLExt: androidx.opengl.EGLExt$Companion Companion>;

        $r3 = specialinvoke r0.<androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1: android.opengl.EGLDisplay getDefaultDisplay()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "getDefaultDisplay()");

        $i2 = virtualinvoke $r2.<androidx.opengl.EGLExt$Companion: int eglClientWaitSyncKHR(android.opengl.EGLDisplay,androidx.opengl.EGLSyncKHR,int,long)>($r3, r1, i0, l1);

        return $i2;
    }

    private final android.opengl.EGLDisplay getDefaultDisplay()
    {
        androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1 r0;
        android.opengl.EGLDisplay $r1;

        r0 := @this: androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1;

        $r1 = staticinvoke <android.opengl.EGL14: android.opengl.EGLDisplay eglGetDisplay(int)>(0);

        return $r1;
    }

    public java.lang.String getErrorMessage()
    {
        androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1 r0;
        java.lang.String $r1;

        r0 := @this: androidx.graphics.opengl.egl.EGLSpec$Companion$V14$1;

        $r1 = staticinvoke <androidx.graphics.opengl.egl.EGLSpec$DefaultImpls: java.lang.String getErrorMessage(androidx.graphics.opengl.egl.EGLSpec)>(r0);

        return $r1;
    }

androidx.graphics.opengl.egl.EGLSpec$Companion
<androidx.graphics.opengl.egl.EGLSpec$Companion: androidx.graphics.opengl.egl.EGLSpec$Companion $$INSTANCE>
    private void <init>()
    {
        androidx.graphics.opengl.egl.EGLSpec$Companion r0;

        r0 := @this: androidx.graphics.opengl.egl.EGLSpec$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.String getStatusString(int)
    {
        androidx.graphics.opengl.egl.EGLSpec$Companion r0;
        int i0;
        java.lang.String $r1, $r2;

        r0 := @this: androidx.graphics.opengl.egl.EGLSpec$Companion;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 12288: goto label01;
            case 12289: goto label02;
            case 12290: goto label03;
            case 12291: goto label04;
            case 12292: goto label05;
            case 12293: goto label06;
            case 12294: goto label07;
            case 12295: goto label08;
            case 12296: goto label09;
            case 12297: goto label10;
            case 12298: goto label11;
            case 12299: goto label12;
            case 12300: goto label13;
            case 12301: goto label14;
            case 12302: goto label15;
            default: goto label16;
        };

     label01:
        $r2 = "EGL_SUCCESS";

        goto label17;

     label02:
        $r2 = "EGL_NOT_INITIALIZED";

        goto label17;

     label03:
        $r2 = "EGL_BAD_ACCESS";

        goto label17;

     label04:
        $r2 = "EGL_BAD_ALLOC";

        goto label17;

     label05:
        $r2 = "EGL_BAD_ATTRIBUTE";

        goto label17;

     label06:
        $r2 = "EGL_BAD_CONFIG";

        goto label17;

     label07:
        $r2 = "EGL_BAD_CONTEXT";

        goto label17;

     label08:
        $r2 = "EGL_BAD_CURRENT_SURFACE";

        goto label17;

     label09:
        $r2 = "EGL_BAD_DISPLAY";

        goto label17;

     label10:
        $r2 = "EGL_BAD_MATCH";

        goto label17;

     label11:
        $r2 = "EGL_BAD_NATIVE_PIXMAP";

        goto label17;

     label12:
        $r2 = "EGL_BAD_NATIVE_WINDOW";

        goto label17;

     label13:
        $r2 = "EGL_BAD_PARAMETER";

        goto label17;

     label14:
        $r2 = "EGL_BAD_SURFACE";

        goto label17;

     label15:
        $r2 = "EGL_CONTEXT_LOST";

        goto label17;

     label16:
        $r1 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r2 = $r1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "toHexString(error)");

     label17:
        return $r2;
    }

    static void <clinit>()
    {
        androidx.graphics.opengl.egl.EGLSpec$Companion $r0;

        $r0 = new androidx.graphics.opengl.egl.EGLSpec$Companion;

        specialinvoke $r0.<androidx.graphics.opengl.egl.EGLSpec$Companion: void <init>()>();

        <androidx.graphics.opengl.egl.EGLSpec$Companion: androidx.graphics.opengl.egl.EGLSpec$Companion $$INSTANCE> = $r0;

        return;
    }

androidx.graphics.opengl.egl.EGLSpec$DefaultImpls
    public static java.lang.String getErrorMessage(androidx.graphics.opengl.egl.EGLSpec)
    {
        androidx.graphics.opengl.egl.EGLSpec $r0;
        androidx.graphics.opengl.egl.EGLSpec$Companion $r1;
        int $i0;
        java.lang.String $r2;

        $r0 := @parameter0: androidx.graphics.opengl.egl.EGLSpec;

        $r1 = <androidx.graphics.opengl.egl.EGLSpec: androidx.graphics.opengl.egl.EGLSpec$Companion Companion>;

        $i0 = interfaceinvoke $r0.<androidx.graphics.opengl.egl.EGLSpec: int eglGetError()>();

        $r2 = virtualinvoke $r1.<androidx.graphics.opengl.egl.EGLSpec$Companion: java.lang.String getStatusString(int)>($i0);

        return $r2;
    }

