androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor
<androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor: androidx.media3.extractor.PositionHolder POSITION_HOLDER>
<androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor: androidx.media3.extractor.Extractor extractor>
<androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor: androidx.media3.common.Format multivariantPlaylistFormat>
<androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor: androidx.media3.common.util.TimestampAdjuster timestampAdjuster>
    public void <init>(androidx.media3.extractor.Extractor, androidx.media3.common.Format, androidx.media3.common.util.TimestampAdjuster)
    {
        androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor r0;
        androidx.media3.extractor.Extractor r1;
        androidx.media3.common.Format r2;
        androidx.media3.common.util.TimestampAdjuster r3;

        r0 := @this: androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor;

        r1 := @parameter0: androidx.media3.extractor.Extractor;

        r2 := @parameter1: androidx.media3.common.Format;

        r3 := @parameter2: androidx.media3.common.util.TimestampAdjuster;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor: androidx.media3.extractor.Extractor extractor> = r1;

        r0.<androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor: androidx.media3.common.Format multivariantPlaylistFormat> = r2;

        r0.<androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor: androidx.media3.common.util.TimestampAdjuster timestampAdjuster> = r3;

        return;
    }

    public void init(androidx.media3.extractor.ExtractorOutput)
    {
        androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor r0;
        androidx.media3.extractor.ExtractorOutput r1;
        androidx.media3.extractor.Extractor $r2;

        r0 := @this: androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorOutput;

        $r2 = r0.<androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor: androidx.media3.extractor.Extractor extractor>;

        interfaceinvoke $r2.<androidx.media3.extractor.Extractor: void init(androidx.media3.extractor.ExtractorOutput)>(r1);

        return;
    }

    public boolean read(androidx.media3.extractor.ExtractorInput) throws java.io.IOException
    {
        androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor r0;
        androidx.media3.extractor.ExtractorInput r1;
        androidx.media3.extractor.PositionHolder $r2;
        androidx.media3.extractor.Extractor $r3;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

        $r3 = r0.<androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor: androidx.media3.extractor.Extractor extractor>;

        $r2 = <androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor: androidx.media3.extractor.PositionHolder POSITION_HOLDER>;

        $i0 = interfaceinvoke $r3.<androidx.media3.extractor.Extractor: int read(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder)>(r1, $r2);

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isPackedAudioExtractor()
    {
        androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor r0;
        androidx.media3.extractor.Extractor $r1, $r2, $r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor;

        $r1 = r0.<androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor: androidx.media3.extractor.Extractor extractor>;

        $z0 = $r1 instanceof androidx.media3.extractor.ts.AdtsExtractor;

        if $z0 != 0 goto label1;

        $r2 = r0.<androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor: androidx.media3.extractor.Extractor extractor>;

        $z1 = $r2 instanceof androidx.media3.extractor.ts.Ac3Extractor;

        if $z1 != 0 goto label1;

        $r3 = r0.<androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor: androidx.media3.extractor.Extractor extractor>;

        $z2 = $r3 instanceof androidx.media3.extractor.ts.Ac4Extractor;

        if $z2 != 0 goto label1;

        $r4 = r0.<androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor: androidx.media3.extractor.Extractor extractor>;

        $z3 = $r4 instanceof androidx.media3.extractor.mp3.Mp3Extractor;

        if $z3 == 0 goto label2;

     label1:
        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;
    }

    public boolean isReusable()
    {
        androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor r0;
        androidx.media3.extractor.Extractor $r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor;

        $r1 = r0.<androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor: androidx.media3.extractor.Extractor extractor>;

        $z0 = $r1 instanceof androidx.media3.extractor.ts.TsExtractor;

        if $z0 != 0 goto label1;

        $r2 = r0.<androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor: androidx.media3.extractor.Extractor extractor>;

        $z1 = $r2 instanceof androidx.media3.extractor.mp4.FragmentedMp4Extractor;

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public androidx.media3.exoplayer.hls.HlsMediaChunkExtractor recreate()
    {
        androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor r0, r33;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        androidx.media3.extractor.Extractor $r1, $r2, $r3, $r4, $r5, $r9, r34;
        java.lang.StringBuilder $r8, $r12, r31;
        java.lang.Class $r10;
        java.lang.String $r11, $r13, $r21;
        androidx.media3.common.Format $r19, $r24;
        androidx.media3.common.util.TimestampAdjuster $r20, $r25;
        java.lang.Object r22;
        androidx.media3.exoplayer.hls.WebvttExtractor r26;
        androidx.media3.extractor.ts.AdtsExtractor r27;
        androidx.media3.extractor.ts.Ac3Extractor r28;
        androidx.media3.extractor.ts.Ac4Extractor r29;
        androidx.media3.extractor.mp3.Mp3Extractor r30;
        java.lang.IllegalStateException r32;

        r0 := @this: androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor;

        $z0 = virtualinvoke r0.<androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor: boolean isReusable()>();

        if $z0 != 0 goto label1;

        $z6 = 1;

        goto label2;

     label1:
        $z6 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z6);

        $r1 = r0.<androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor: androidx.media3.extractor.Extractor extractor>;

        $z1 = $r1 instanceof androidx.media3.exoplayer.hls.WebvttExtractor;

        if $z1 == 0 goto label3;

        r26 = new androidx.media3.exoplayer.hls.WebvttExtractor;

        $r19 = r0.<androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor: androidx.media3.common.Format multivariantPlaylistFormat>;

        $r21 = $r19.<androidx.media3.common.Format: java.lang.String language>;

        $r20 = r0.<androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor: androidx.media3.common.util.TimestampAdjuster timestampAdjuster>;

        specialinvoke r26.<androidx.media3.exoplayer.hls.WebvttExtractor: void <init>(java.lang.String,androidx.media3.common.util.TimestampAdjuster)>($r21, $r20);

        r22 = r26;

        goto label8;

     label3:
        $r2 = r0.<androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor: androidx.media3.extractor.Extractor extractor>;

        $z2 = $r2 instanceof androidx.media3.extractor.ts.AdtsExtractor;

        if $z2 == 0 goto label4;

        r27 = new androidx.media3.extractor.ts.AdtsExtractor;

        specialinvoke r27.<androidx.media3.extractor.ts.AdtsExtractor: void <init>()>();

        r22 = r27;

        goto label8;

     label4:
        $r3 = r0.<androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor: androidx.media3.extractor.Extractor extractor>;

        $z3 = $r3 instanceof androidx.media3.extractor.ts.Ac3Extractor;

        if $z3 == 0 goto label5;

        r28 = new androidx.media3.extractor.ts.Ac3Extractor;

        specialinvoke r28.<androidx.media3.extractor.ts.Ac3Extractor: void <init>()>();

        r22 = r28;

        goto label8;

     label5:
        $r4 = r0.<androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor: androidx.media3.extractor.Extractor extractor>;

        $z4 = $r4 instanceof androidx.media3.extractor.ts.Ac4Extractor;

        if $z4 == 0 goto label6;

        r29 = new androidx.media3.extractor.ts.Ac4Extractor;

        specialinvoke r29.<androidx.media3.extractor.ts.Ac4Extractor: void <init>()>();

        r22 = r29;

        goto label8;

     label6:
        $r5 = r0.<androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor: androidx.media3.extractor.Extractor extractor>;

        $z5 = $r5 instanceof androidx.media3.extractor.mp3.Mp3Extractor;

        if $z5 == 0 goto label7;

        r30 = new androidx.media3.extractor.mp3.Mp3Extractor;

        specialinvoke r30.<androidx.media3.extractor.mp3.Mp3Extractor: void <init>()>();

        r22 = r30;

        goto label8;

     label7:
        r32 = new java.lang.IllegalStateException;

        r31 = new java.lang.StringBuilder;

        specialinvoke r31.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected extractor type for recreation: ");

        $r9 = r0.<androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor: androidx.media3.extractor.Extractor extractor>;

        $r10 = virtualinvoke $r9.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getSimpleName()>();

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r32.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw r32;

     label8:
        r33 = new androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor;

        $r24 = r0.<androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor: androidx.media3.common.Format multivariantPlaylistFormat>;

        $r25 = r0.<androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor: androidx.media3.common.util.TimestampAdjuster timestampAdjuster>;

        r34 = (androidx.media3.extractor.Extractor) r22;

        specialinvoke r33.<androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor: void <init>(androidx.media3.extractor.Extractor,androidx.media3.common.Format,androidx.media3.common.util.TimestampAdjuster)>(r34, $r24, $r25);

        return r33;
    }

    public void onTruncatedSegmentParsed()
    {
        androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor r0;
        androidx.media3.extractor.Extractor $r1;

        r0 := @this: androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor;

        $r1 = r0.<androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor: androidx.media3.extractor.Extractor extractor>;

        interfaceinvoke $r1.<androidx.media3.extractor.Extractor: void seek(long,long)>(0L, 0L);

        return;
    }

    static void <clinit>()
    {
        androidx.media3.extractor.PositionHolder $r0;

        $r0 = new androidx.media3.extractor.PositionHolder;

        specialinvoke $r0.<androidx.media3.extractor.PositionHolder: void <init>()>();

        <androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor: androidx.media3.extractor.PositionHolder POSITION_HOLDER> = $r0;

        return;
    }

