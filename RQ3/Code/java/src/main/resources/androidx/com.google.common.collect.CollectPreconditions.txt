com.google.common.collect.CollectPreconditions
    static void checkEntryNotNull(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r0, $r1;
        java.lang.NullPointerException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        if $r0 == null goto label2;

        if $r1 == null goto label1;

        return;

     label1:
        $r2 = new java.lang.NullPointerException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("null value in entry: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=null");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label2:
        $r2 = new java.lang.NullPointerException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("null key in entry: null=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>($r4);

        throw $r2;
    }

    static int checkNonnegative(int, java.lang.String)
    {
        java.lang.IllegalArgumentException $r0;
        int $i0;
        java.lang.String $r1;
        java.lang.StringBuilder $r2;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        if $i0 < 0 goto label1;

        return $i0;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be negative but was: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r0;
    }

