androidx.media3.datasource.cache.Cache
<androidx.media3.datasource.cache.Cache: long UID_UNSET>
<androidx.media3.datasource.cache.Cache: long getUid()>
<androidx.media3.datasource.cache.Cache: void release()>
<androidx.media3.datasource.cache.Cache: java.util.NavigableSet addListener(java.lang.String,androidx.media3.datasource.cache.Cache$Listener)>
<androidx.media3.datasource.cache.Cache: void removeListener(java.lang.String,androidx.media3.datasource.cache.Cache$Listener)>
<androidx.media3.datasource.cache.Cache: java.util.NavigableSet getCachedSpans(java.lang.String)>
<androidx.media3.datasource.cache.Cache: java.util.Set getKeys()>
<androidx.media3.datasource.cache.Cache: long getCacheSpace()>
<androidx.media3.datasource.cache.Cache: androidx.media3.datasource.cache.CacheSpan startReadWrite(java.lang.String,long,long)>
<androidx.media3.datasource.cache.Cache: androidx.media3.datasource.cache.CacheSpan startReadWriteNonBlocking(java.lang.String,long,long)>
<androidx.media3.datasource.cache.Cache: java.io.File startFile(java.lang.String,long,long)>
<androidx.media3.datasource.cache.Cache: void commitFile(java.io.File,long)>
<androidx.media3.datasource.cache.Cache: void releaseHoleSpan(androidx.media3.datasource.cache.CacheSpan)>
<androidx.media3.datasource.cache.Cache: void removeResource(java.lang.String)>
<androidx.media3.datasource.cache.Cache: void removeSpan(androidx.media3.datasource.cache.CacheSpan)>
<androidx.media3.datasource.cache.Cache: boolean isCached(java.lang.String,long,long)>
<androidx.media3.datasource.cache.Cache: long getCachedLength(java.lang.String,long,long)>
<androidx.media3.datasource.cache.Cache: long getCachedBytes(java.lang.String,long,long)>
<androidx.media3.datasource.cache.Cache: void applyContentMetadataMutations(java.lang.String,androidx.media3.datasource.cache.ContentMetadataMutations)>
<androidx.media3.datasource.cache.Cache: androidx.media3.datasource.cache.ContentMetadata getContentMetadata(java.lang.String)>
androidx.media3.datasource.cache.Cache$CacheException
    public void <init>(java.lang.String)
    {
        androidx.media3.datasource.cache.Cache$CacheException r0;
        java.lang.String r1;

        r0 := @this: androidx.media3.datasource.cache.Cache$CacheException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.io.IOException: void <init>(java.lang.String)>(r1);

        return;
    }

    public void <init>(java.lang.Throwable)
    {
        androidx.media3.datasource.cache.Cache$CacheException r0;
        java.lang.Throwable r1;

        r0 := @this: androidx.media3.datasource.cache.Cache$CacheException;

        r1 := @parameter0: java.lang.Throwable;

        specialinvoke r0.<java.io.IOException: void <init>(java.lang.Throwable)>(r1);

        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable)
    {
        androidx.media3.datasource.cache.Cache$CacheException r0;
        java.lang.String r1;
        java.lang.Throwable r2;

        r0 := @this: androidx.media3.datasource.cache.Cache$CacheException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>(r1, r2);

        return;
    }

androidx.media3.datasource.cache.Cache$Listener
<androidx.media3.datasource.cache.Cache$Listener: void onSpanAdded(androidx.media3.datasource.cache.Cache,androidx.media3.datasource.cache.CacheSpan)>
<androidx.media3.datasource.cache.Cache$Listener: void onSpanRemoved(androidx.media3.datasource.cache.Cache,androidx.media3.datasource.cache.CacheSpan)>
<androidx.media3.datasource.cache.Cache$Listener: void onSpanTouched(androidx.media3.datasource.cache.Cache,androidx.media3.datasource.cache.CacheSpan,androidx.media3.datasource.cache.CacheSpan)>
