androidx.security.app.authenticator.AppSignatureVerifier
<androidx.security.app.authenticator.AppSignatureVerifier: java.lang.String TAG>
<androidx.security.app.authenticator.AppSignatureVerifier: java.lang.String EXPECTED_IDENTITY_QUERY>
<androidx.security.app.authenticator.AppSignatureVerifier: int DEFAULT_CACHE_SIZE>
<androidx.security.app.authenticator.AppSignatureVerifier: android.content.pm.PackageManager mPackageManager>
<androidx.security.app.authenticator.AppSignatureVerifier: java.lang.String mDigestAlgorithm>
<androidx.security.app.authenticator.AppSignatureVerifier: androidx.security.app.authenticator.AppSignatureVerifier$Cache mCache>
<androidx.security.app.authenticator.AppSignatureVerifier: java.util.Map mPermissionAllowMap>
<androidx.security.app.authenticator.AppSignatureVerifier: java.util.Map mExpectedIdentities>
    void <init>(android.content.Context, java.util.Map, java.util.Map, java.lang.String, androidx.security.app.authenticator.AppSignatureVerifier$Cache)
    {
        androidx.security.app.authenticator.AppSignatureVerifier r0;
        android.content.Context r1;
        java.util.Map r2, r3;
        java.lang.String r4;
        androidx.security.app.authenticator.AppSignatureVerifier$Cache r5;
        android.content.pm.PackageManager $r6;

        r0 := @this: androidx.security.app.authenticator.AppSignatureVerifier;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: java.util.Map;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: androidx.security.app.authenticator.AppSignatureVerifier$Cache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r0.<androidx.security.app.authenticator.AppSignatureVerifier: android.content.pm.PackageManager mPackageManager> = $r6;

        r0.<androidx.security.app.authenticator.AppSignatureVerifier: java.util.Map mPermissionAllowMap> = r2;

        r0.<androidx.security.app.authenticator.AppSignatureVerifier: java.util.Map mExpectedIdentities> = r3;

        r0.<androidx.security.app.authenticator.AppSignatureVerifier: java.lang.String mDigestAlgorithm> = r4;

        r0.<androidx.security.app.authenticator.AppSignatureVerifier: androidx.security.app.authenticator.AppSignatureVerifier$Cache mCache> = r5;

        return;
    }

    static androidx.security.app.authenticator.AppSignatureVerifier$Builder builder(android.content.Context)
    {
        android.content.Context r0;
        androidx.security.app.authenticator.AppSignatureVerifier$Builder $r1;

        r0 := @parameter0: android.content.Context;

        $r1 = new androidx.security.app.authenticator.AppSignatureVerifier$Builder;

        specialinvoke $r1.<androidx.security.app.authenticator.AppSignatureVerifier$Builder: void <init>(android.content.Context)>(r0);

        return $r1;
    }

    boolean verifySigningIdentity(java.lang.String, java.lang.String)
    {
        androidx.security.app.authenticator.AppSignatureVerifier r0;
        java.lang.String r1, r2, $r11, $r14;
        java.util.Map r3, $r6;
        java.util.Set r4, r5;
        java.lang.Object $r7, $r8, $r9;
        boolean $z0;
        java.lang.StringBuilder $r10, $r12, $r13;

        r0 := @this: androidx.security.app.authenticator.AppSignatureVerifier;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r6 = r0.<androidx.security.app.authenticator.AppSignatureVerifier: java.util.Map mPermissionAllowMap>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (java.util.Map) $r7;

        if r3 != null goto label1;

        $r11 = <androidx.security.app.authenticator.AppSignatureVerifier: java.lang.String TAG>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No expected signing identities declared for permission ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r11, $r14);

        return 0;

     label1:
        $r8 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.Set) $r8;

        $r9 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("all-packages");

        r5 = (java.util.Set) $r9;

        if r4 != null goto label2;

        if r5 != null goto label2;

        return 0;

     label2:
        $z0 = virtualinvoke r0.<androidx.security.app.authenticator.AppSignatureVerifier: boolean verifySigningIdentityForQuery(java.lang.String,java.lang.String,java.util.Set,java.util.Set)>(r1, r2, r4, r5);

        return $z0;
    }

    boolean verifyExpectedIdentity(java.lang.String)
    {
        androidx.security.app.authenticator.AppSignatureVerifier r0;
        java.lang.String r1;
        java.util.Set r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: androidx.security.app.authenticator.AppSignatureVerifier;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<androidx.security.app.authenticator.AppSignatureVerifier: java.util.Map mExpectedIdentities>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.util.Set) $r4;

        if r2 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r0.<androidx.security.app.authenticator.AppSignatureVerifier: boolean verifySigningIdentityForQuery(java.lang.String,java.lang.String,java.util.Set,java.util.Set)>(r1, "expected-identity", r2, null);

        return $z0;
    }

    boolean verifySigningIdentityForQuery(java.lang.String, java.lang.String, java.util.Set, java.util.Set)
    {
        androidx.security.app.authenticator.AppSignatureVerifier r0;
        java.lang.String r1, r2;
        java.util.Set r3, r4;
        androidx.security.app.authenticator.AppSignatureVerifier$CacheEntry r5, $r11;
        int $i0;
        android.content.pm.PackageManager $r6, $r13;
        androidx.security.app.authenticator.AppSignatureVerifier$Cache $r7, $r10;
        java.util.List $r8, $r9, $r12;
        long $l1, $l2, $l3;
        byte $b4;
        boolean $z0, z1;
        androidx.security.app.authenticator.AppSignatureVerifier$AppSigningInfo r14;

        r0 := @this: androidx.security.app.authenticator.AppSignatureVerifier;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Set;

        r4 := @parameter3: java.util.Set;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 28 goto label1;

        $r13 = r0.<androidx.security.app.authenticator.AppSignatureVerifier: android.content.pm.PackageManager mPackageManager>;

        r14 = staticinvoke <androidx.security.app.authenticator.AppSignatureVerifier$Api28Impl: androidx.security.app.authenticator.AppSignatureVerifier$AppSigningInfo getAppSigningInfo(android.content.pm.PackageManager,java.lang.String)>($r13, r1);

        goto label2;

     label1:
        $r6 = r0.<androidx.security.app.authenticator.AppSignatureVerifier: android.content.pm.PackageManager mPackageManager>;

        r14 = staticinvoke <androidx.security.app.authenticator.AppSignatureVerifier$DefaultImpl: androidx.security.app.authenticator.AppSignatureVerifier$AppSigningInfo getAppSigningInfo(android.content.pm.PackageManager,java.lang.String)>($r6, r1);

     label2:
        goto label3;

     label3:
        $r7 = r0.<androidx.security.app.authenticator.AppSignatureVerifier: androidx.security.app.authenticator.AppSignatureVerifier$Cache mCache>;

        r5 = virtualinvoke $r7.<androidx.security.app.authenticator.AppSignatureVerifier$Cache: androidx.security.app.authenticator.AppSignatureVerifier$CacheEntry get(java.lang.String,java.lang.String)>(r1, r2);

        if r5 == null goto label4;

        $l2 = virtualinvoke r5.<androidx.security.app.authenticator.AppSignatureVerifier$CacheEntry: long getLastUpdateTime()>();

        $l3 = virtualinvoke r14.<androidx.security.app.authenticator.AppSignatureVerifier$AppSigningInfo: long getLastUpdateTime()>();

        $b4 = $l2 cmp $l3;

        if $b4 != 0 goto label4;

        $z0 = virtualinvoke r5.<androidx.security.app.authenticator.AppSignatureVerifier$CacheEntry: boolean getVerificationResult()>();

        return $z0;

     label4:
        $r8 = virtualinvoke r14.<androidx.security.app.authenticator.AppSignatureVerifier$AppSigningInfo: java.util.List getSigningLineage()>();

        if $r8 == null goto label5;

        $r12 = virtualinvoke r14.<androidx.security.app.authenticator.AppSignatureVerifier$AppSigningInfo: java.util.List getSigningLineage()>();

        z1 = specialinvoke r0.<androidx.security.app.authenticator.AppSignatureVerifier: boolean verifySigningLineage(java.util.List,java.util.Set,java.util.Set)>($r12, r3, r4);

        goto label6;

     label5:
        $r9 = virtualinvoke r14.<androidx.security.app.authenticator.AppSignatureVerifier$AppSigningInfo: java.util.List getCurrentSignatures()>();

        z1 = virtualinvoke r0.<androidx.security.app.authenticator.AppSignatureVerifier: boolean verifyCurrentSigners(java.util.List,java.util.Set,java.util.Set)>($r9, r3, r4);

     label6:
        $r10 = r0.<androidx.security.app.authenticator.AppSignatureVerifier: androidx.security.app.authenticator.AppSignatureVerifier$Cache mCache>;

        $l1 = virtualinvoke r14.<androidx.security.app.authenticator.AppSignatureVerifier$AppSigningInfo: long getLastUpdateTime()>();

        $r11 = staticinvoke <androidx.security.app.authenticator.AppSignatureVerifier$CacheEntry: androidx.security.app.authenticator.AppSignatureVerifier$CacheEntry create(boolean,long)>(z1, $l1);

        virtualinvoke $r10.<androidx.security.app.authenticator.AppSignatureVerifier$Cache: void put(java.lang.String,java.lang.String,androidx.security.app.authenticator.AppSignatureVerifier$CacheEntry)>(r1, r2, $r11);

        return z1;
    }

    private boolean verifySigningLineage(java.util.List, java.util.Set, java.util.Set)
    {
        androidx.security.app.authenticator.AppSignatureVerifier r0;
        java.util.List r1;
        java.util.Set r2, r3;
        java.util.Iterator r4;
        android.content.pm.Signature r5;
        java.lang.String r6, $r8;
        boolean $z0, $z1, $z2;
        java.lang.Object $r7;
        byte[] $r9;

        r0 := @this: androidx.security.app.authenticator.AppSignatureVerifier;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.Set;

        r3 := @parameter2: java.util.Set;

        r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.content.pm.Signature) $r7;

        $r8 = r0.<androidx.security.app.authenticator.AppSignatureVerifier: java.lang.String mDigestAlgorithm>;

        $r9 = virtualinvoke r5.<android.content.pm.Signature: byte[] toByteArray()>();

        r6 = staticinvoke <androidx.security.app.authenticator.AppAuthenticatorUtils: java.lang.String computeDigest(java.lang.String,byte[])>($r8, $r9);

        if r2 == null goto label2;

        $z2 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>(r6);

        if $z2 == 0 goto label2;

        return 1;

     label2:
        if r3 == null goto label3;

        $z1 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>(r6);

        if $z1 == 0 goto label3;

        return 1;

     label3:
        goto label1;

     label4:
        return 0;
    }

    boolean verifyCurrentSigners(java.util.List, java.util.Set, java.util.Set)
    {
        androidx.security.app.authenticator.AppSignatureVerifier r0;
        java.util.List r1;
        java.util.Set r2, r3;
        java.util.ArrayList r4, $r7;
        java.util.Iterator r5;
        android.content.pm.Signature r6;
        int $i0;
        boolean $z0, $z1, $z2, $z4;
        java.lang.Object $r8;
        java.lang.String $r9, $r11;
        byte[] $r10;

        r0 := @this: androidx.security.app.authenticator.AppSignatureVerifier;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.Set;

        r3 := @parameter2: java.util.Set;

        $r7 = new java.util.ArrayList;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>($i0);

        r4 = $r7;

        r5 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.content.pm.Signature) $r8;

        $r9 = r0.<androidx.security.app.authenticator.AppSignatureVerifier: java.lang.String mDigestAlgorithm>;

        $r10 = virtualinvoke r6.<android.content.pm.Signature: byte[] toByteArray()>();

        $r11 = staticinvoke <androidx.security.app.authenticator.AppAuthenticatorUtils: java.lang.String computeDigest(java.lang.String,byte[])>($r9, $r10);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r11);

        goto label1;

     label2:
        if r2 == null goto label3;

        $z2 = interfaceinvoke r2.<java.util.Set: boolean containsAll(java.util.Collection)>(r4);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        if r3 == null goto label4;

        $z1 = interfaceinvoke r3.<java.util.Set: boolean containsAll(java.util.Collection)>(r4);

        if $z1 == 0 goto label4;

        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        return $z4;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Landroidx/security/app/authenticator/AppSignatureVerifier;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <androidx.security.app.authenticator.AppSignatureVerifier: java.lang.String TAG> = $r1;

        return;
    }

androidx.security.app.authenticator.AppSignatureVerifier$Api28Impl
    private void <init>()
    {
        androidx.security.app.authenticator.AppSignatureVerifier$Api28Impl r0;

        r0 := @this: androidx.security.app.authenticator.AppSignatureVerifier$Api28Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static androidx.security.app.authenticator.AppSignatureVerifier$AppSigningInfo getAppSigningInfo(android.content.pm.PackageManager, java.lang.String) throws androidx.security.app.authenticator.AppSignatureVerifier$AppSignatureVerifierException
    {
        android.content.pm.PackageManager r0;
        java.lang.String r1, $r14, $r21;
        android.content.pm.PackageInfo r2;
        java.lang.Throwable r3, $r15, r26, r27;
        android.content.pm.SigningInfo $r4, $r5, $r7;
        android.content.pm.Signature[] $r6, $r8;
        long $l0;
        androidx.security.app.authenticator.AppSignatureVerifier$AppSigningInfo $r9;
        java.lang.StringBuilder $r12, $r13, $r18, $r19, $r20, r22, r24;
        androidx.security.app.authenticator.AppSignatureVerifier$AppSignatureVerifierException r23, r25;

        r0 := @parameter0: android.content.pm.PackageManager;

        r1 := @parameter1: java.lang.String;

     label1:
        r2 = virtualinvoke r0.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r1, 134217728);

     label2:
        goto label4;

     label3:
        $r15 := @caughtexception;

        r3 = $r15;

        r23 = new androidx.security.app.authenticator.AppSignatureVerifier$AppSignatureVerifierException;

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r23.<androidx.security.app.authenticator.AppSignatureVerifier$AppSignatureVerifierException: void <init>(java.lang.String,java.lang.Throwable)>($r21, r3);

        r26 = (java.lang.Throwable) r23;

        throw r26;

     label4:
        $r4 = r2.<android.content.pm.PackageInfo: android.content.pm.SigningInfo signingInfo>;

        if $r4 != null goto label5;

        r25 = new androidx.security.app.authenticator.AppSignatureVerifier$AppSignatureVerifierException;

        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No SigningInfo returned for package ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r25.<androidx.security.app.authenticator.AppSignatureVerifier$AppSignatureVerifierException: void <init>(java.lang.String)>($r14);

        r27 = (java.lang.Throwable) r25;

        throw r27;

     label5:
        $r5 = r2.<android.content.pm.PackageInfo: android.content.pm.SigningInfo signingInfo>;

        $r6 = virtualinvoke $r5.<android.content.pm.SigningInfo: android.content.pm.Signature[] getApkContentsSigners()>();

        $r7 = r2.<android.content.pm.PackageInfo: android.content.pm.SigningInfo signingInfo>;

        $r8 = virtualinvoke $r7.<android.content.pm.SigningInfo: android.content.pm.Signature[] getSigningCertificateHistory()>();

        $l0 = r2.<android.content.pm.PackageInfo: long lastUpdateTime>;

        $r9 = staticinvoke <androidx.security.app.authenticator.AppSignatureVerifier$AppSigningInfo: androidx.security.app.authenticator.AppSignatureVerifier$AppSigningInfo create(java.lang.String,android.content.pm.Signature[],android.content.pm.Signature[],long)>(r1, $r6, $r8, $l0);

        return $r9;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

androidx.security.app.authenticator.AppSignatureVerifier$AppSignatureVerifierException
    void <init>(java.lang.String)
    {
        androidx.security.app.authenticator.AppSignatureVerifier$AppSignatureVerifierException r0;
        java.lang.String r1;

        r0 := @this: androidx.security.app.authenticator.AppSignatureVerifier$AppSignatureVerifierException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);

        return;
    }

    void <init>(java.lang.String, java.lang.Throwable)
    {
        androidx.security.app.authenticator.AppSignatureVerifier$AppSignatureVerifierException r0;
        java.lang.String r1;
        java.lang.Throwable r2;

        r0 := @this: androidx.security.app.authenticator.AppSignatureVerifier$AppSignatureVerifierException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>(r1, r2);

        return;
    }

androidx.security.app.authenticator.AppSignatureVerifier$AppSigningInfo
    void <init>()
    {
        androidx.security.app.authenticator.AppSignatureVerifier$AppSigningInfo r0;

        r0 := @this: androidx.security.app.authenticator.AppSignatureVerifier$AppSigningInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<androidx.security.app.authenticator.AppSignatureVerifier$AppSigningInfo: java.lang.String getPackageName()>
<androidx.security.app.authenticator.AppSignatureVerifier$AppSigningInfo: java.util.List getCurrentSignatures()>
<androidx.security.app.authenticator.AppSignatureVerifier$AppSigningInfo: java.util.List getSigningLineage()>
<androidx.security.app.authenticator.AppSignatureVerifier$AppSigningInfo: long getLastUpdateTime()>
    static androidx.security.app.authenticator.AppSignatureVerifier$AppSigningInfo create(java.lang.String, android.content.pm.Signature[], android.content.pm.Signature[], long)
    {
        java.lang.String r0;
        android.content.pm.Signature[] r1, r2;
        long l0;
        androidx.security.app.authenticator.AutoValue_AppSignatureVerifier_AppSigningInfo $r3;
        java.util.List $r4, $r6;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.content.pm.Signature[];

        r2 := @parameter2: android.content.pm.Signature[];

        l0 := @parameter3: long;

        $r3 = new androidx.security.app.authenticator.AutoValue_AppSignatureVerifier_AppSigningInfo;

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        if r2 == null goto label1;

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r2);

        goto label2;

     label1:
        $r6 = null;

     label2:
        specialinvoke $r3.<androidx.security.app.authenticator.AutoValue_AppSignatureVerifier_AppSigningInfo: void <init>(java.lang.String,java.util.List,java.util.List,long)>(r0, $r4, $r6, l0);

        return $r3;
    }

androidx.security.app.authenticator.AppSignatureVerifier$Builder
<androidx.security.app.authenticator.AppSignatureVerifier$Builder: android.content.Context mContext>
<androidx.security.app.authenticator.AppSignatureVerifier$Builder: java.lang.String mDigestAlgorithm>
<androidx.security.app.authenticator.AppSignatureVerifier$Builder: androidx.security.app.authenticator.AppSignatureVerifier$Cache mCache>
<androidx.security.app.authenticator.AppSignatureVerifier$Builder: java.util.Map mPermissionAllowMap>
<androidx.security.app.authenticator.AppSignatureVerifier$Builder: java.util.Map mExpectedIdentities>
    void <init>(android.content.Context)
    {
        androidx.security.app.authenticator.AppSignatureVerifier$Builder r0;
        android.content.Context r1;

        r0 := @this: androidx.security.app.authenticator.AppSignatureVerifier$Builder;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.security.app.authenticator.AppSignatureVerifier$Builder: android.content.Context mContext> = r1;

        return;
    }

    androidx.security.app.authenticator.AppSignatureVerifier$Builder setDigestAlgorithm(java.lang.String)
    {
        androidx.security.app.authenticator.AppSignatureVerifier$Builder r0;
        java.lang.String r1;

        r0 := @this: androidx.security.app.authenticator.AppSignatureVerifier$Builder;

        r1 := @parameter0: java.lang.String;

        r0.<androidx.security.app.authenticator.AppSignatureVerifier$Builder: java.lang.String mDigestAlgorithm> = r1;

        return r0;
    }

    androidx.security.app.authenticator.AppSignatureVerifier$Builder setCache(androidx.security.app.authenticator.AppSignatureVerifier$Cache)
    {
        androidx.security.app.authenticator.AppSignatureVerifier$Builder r0;
        androidx.security.app.authenticator.AppSignatureVerifier$Cache r1;

        r0 := @this: androidx.security.app.authenticator.AppSignatureVerifier$Builder;

        r1 := @parameter0: androidx.security.app.authenticator.AppSignatureVerifier$Cache;

        r0.<androidx.security.app.authenticator.AppSignatureVerifier$Builder: androidx.security.app.authenticator.AppSignatureVerifier$Cache mCache> = r1;

        return r0;
    }

    androidx.security.app.authenticator.AppSignatureVerifier$Builder setPermissionAllowMap(java.util.Map)
    {
        androidx.security.app.authenticator.AppSignatureVerifier$Builder r0;
        java.util.Map r1;

        r0 := @this: androidx.security.app.authenticator.AppSignatureVerifier$Builder;

        r1 := @parameter0: java.util.Map;

        r0.<androidx.security.app.authenticator.AppSignatureVerifier$Builder: java.util.Map mPermissionAllowMap> = r1;

        return r0;
    }

    androidx.security.app.authenticator.AppSignatureVerifier$Builder setExpectedIdentities(java.util.Map)
    {
        androidx.security.app.authenticator.AppSignatureVerifier$Builder r0;
        java.util.Map r1;

        r0 := @this: androidx.security.app.authenticator.AppSignatureVerifier$Builder;

        r1 := @parameter0: java.util.Map;

        r0.<androidx.security.app.authenticator.AppSignatureVerifier$Builder: java.util.Map mExpectedIdentities> = r1;

        return r0;
    }

    androidx.security.app.authenticator.AppSignatureVerifier build()
    {
        androidx.security.app.authenticator.AppSignatureVerifier$Builder r0;
        java.util.Map $r1, $r2, $r8, $r9;
        java.lang.String $r3, $r7;
        androidx.security.app.authenticator.AppSignatureVerifier$Cache $r4, $r6, $r11;
        androidx.security.app.authenticator.AppSignatureVerifier $r5;
        android.content.Context $r10;
        androidx.collection.ArrayMap $r12, $r13;

        r0 := @this: androidx.security.app.authenticator.AppSignatureVerifier$Builder;

        $r1 = r0.<androidx.security.app.authenticator.AppSignatureVerifier$Builder: java.util.Map mPermissionAllowMap>;

        if $r1 != null goto label1;

        $r13 = new androidx.collection.ArrayMap;

        specialinvoke $r13.<androidx.collection.ArrayMap: void <init>()>();

        r0.<androidx.security.app.authenticator.AppSignatureVerifier$Builder: java.util.Map mPermissionAllowMap> = $r13;

     label1:
        $r2 = r0.<androidx.security.app.authenticator.AppSignatureVerifier$Builder: java.util.Map mExpectedIdentities>;

        if $r2 != null goto label2;

        $r12 = new androidx.collection.ArrayMap;

        specialinvoke $r12.<androidx.collection.ArrayMap: void <init>()>();

        r0.<androidx.security.app.authenticator.AppSignatureVerifier$Builder: java.util.Map mExpectedIdentities> = $r12;

     label2:
        $r3 = r0.<androidx.security.app.authenticator.AppSignatureVerifier$Builder: java.lang.String mDigestAlgorithm>;

        if $r3 != null goto label3;

        r0.<androidx.security.app.authenticator.AppSignatureVerifier$Builder: java.lang.String mDigestAlgorithm> = "SHA-256";

     label3:
        $r4 = r0.<androidx.security.app.authenticator.AppSignatureVerifier$Builder: androidx.security.app.authenticator.AppSignatureVerifier$Cache mCache>;

        if $r4 != null goto label4;

        $r11 = new androidx.security.app.authenticator.AppSignatureVerifier$Cache;

        specialinvoke $r11.<androidx.security.app.authenticator.AppSignatureVerifier$Cache: void <init>(int)>(16);

        r0.<androidx.security.app.authenticator.AppSignatureVerifier$Builder: androidx.security.app.authenticator.AppSignatureVerifier$Cache mCache> = $r11;

     label4:
        $r5 = new androidx.security.app.authenticator.AppSignatureVerifier;

        $r10 = r0.<androidx.security.app.authenticator.AppSignatureVerifier$Builder: android.content.Context mContext>;

        $r9 = r0.<androidx.security.app.authenticator.AppSignatureVerifier$Builder: java.util.Map mPermissionAllowMap>;

        $r8 = r0.<androidx.security.app.authenticator.AppSignatureVerifier$Builder: java.util.Map mExpectedIdentities>;

        $r7 = r0.<androidx.security.app.authenticator.AppSignatureVerifier$Builder: java.lang.String mDigestAlgorithm>;

        $r6 = r0.<androidx.security.app.authenticator.AppSignatureVerifier$Builder: androidx.security.app.authenticator.AppSignatureVerifier$Cache mCache>;

        specialinvoke $r5.<androidx.security.app.authenticator.AppSignatureVerifier: void <init>(android.content.Context,java.util.Map,java.util.Map,java.lang.String,androidx.security.app.authenticator.AppSignatureVerifier$Cache)>($r10, $r9, $r8, $r7, $r6);

        return $r5;
    }

androidx.security.app.authenticator.AppSignatureVerifier$Cache
    void <init>(int)
    {
        androidx.security.app.authenticator.AppSignatureVerifier$Cache r0;
        int i0;

        r0 := @this: androidx.security.app.authenticator.AppSignatureVerifier$Cache;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.collection.LruCache: void <init>(int)>(i0);

        return;
    }

    androidx.security.app.authenticator.AppSignatureVerifier$CacheEntry get(java.lang.String, java.lang.String)
    {
        androidx.security.app.authenticator.AppSignatureVerifier$Cache r0;
        java.lang.String r1, r2, $r6;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.Object $r7;
        androidx.security.app.authenticator.AppSignatureVerifier$CacheEntry $r8;

        r0 := @this: androidx.security.app.authenticator.AppSignatureVerifier$Cache;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke r0.<androidx.security.app.authenticator.AppSignatureVerifier$Cache: java.lang.Object get(java.lang.Object)>($r6);

        $r8 = (androidx.security.app.authenticator.AppSignatureVerifier$CacheEntry) $r7;

        return $r8;
    }

    void put(java.lang.String, java.lang.String, androidx.security.app.authenticator.AppSignatureVerifier$CacheEntry)
    {
        androidx.security.app.authenticator.AppSignatureVerifier$Cache r0;
        java.lang.String r1, r2, $r7;
        androidx.security.app.authenticator.AppSignatureVerifier$CacheEntry r3;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @this: androidx.security.app.authenticator.AppSignatureVerifier$Cache;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.security.app.authenticator.AppSignatureVerifier$CacheEntry;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<androidx.security.app.authenticator.AppSignatureVerifier$Cache: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, r3);

        return;
    }

androidx.security.app.authenticator.AppSignatureVerifier$CacheEntry
    void <init>()
    {
        androidx.security.app.authenticator.AppSignatureVerifier$CacheEntry r0;

        r0 := @this: androidx.security.app.authenticator.AppSignatureVerifier$CacheEntry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<androidx.security.app.authenticator.AppSignatureVerifier$CacheEntry: boolean getVerificationResult()>
<androidx.security.app.authenticator.AppSignatureVerifier$CacheEntry: long getLastUpdateTime()>
    static androidx.security.app.authenticator.AppSignatureVerifier$CacheEntry create(boolean, long)
    {
        boolean z0;
        long l0;
        androidx.security.app.authenticator.AutoValue_AppSignatureVerifier_CacheEntry $r0;

        z0 := @parameter0: boolean;

        l0 := @parameter1: long;

        $r0 = new androidx.security.app.authenticator.AutoValue_AppSignatureVerifier_CacheEntry;

        specialinvoke $r0.<androidx.security.app.authenticator.AutoValue_AppSignatureVerifier_CacheEntry: void <init>(boolean,long)>(z0, l0);

        return $r0;
    }

androidx.security.app.authenticator.AppSignatureVerifier$DefaultImpl
    private void <init>()
    {
        androidx.security.app.authenticator.AppSignatureVerifier$DefaultImpl r0;

        r0 := @this: androidx.security.app.authenticator.AppSignatureVerifier$DefaultImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static androidx.security.app.authenticator.AppSignatureVerifier$AppSigningInfo getAppSigningInfo(android.content.pm.PackageManager, java.lang.String) throws androidx.security.app.authenticator.AppSignatureVerifier$AppSignatureVerifierException
    {
        android.content.pm.PackageManager r0;
        java.lang.String r1, $r11, $r18;
        android.content.pm.PackageInfo r2;
        java.lang.Throwable r3, $r12, r23, r24;
        android.content.pm.Signature[] $r4, $r5;
        long $l0;
        androidx.security.app.authenticator.AppSignatureVerifier$AppSigningInfo $r6;
        java.lang.StringBuilder $r9, $r10, $r15, $r16, $r17, r19, r21;
        androidx.security.app.authenticator.AppSignatureVerifier$AppSignatureVerifierException r20, r22;

        r0 := @parameter0: android.content.pm.PackageManager;

        r1 := @parameter1: java.lang.String;

     label1:
        r2 = virtualinvoke r0.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r1, 64);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        r3 = $r12;

        r20 = new androidx.security.app.authenticator.AppSignatureVerifier$AppSignatureVerifierException;

        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r20.<androidx.security.app.authenticator.AppSignatureVerifier$AppSignatureVerifierException: void <init>(java.lang.String,java.lang.Throwable)>($r18, r3);

        r23 = (java.lang.Throwable) r20;

        throw r23;

     label4:
        $r4 = r2.<android.content.pm.PackageInfo: android.content.pm.Signature[] signatures>;

        if $r4 != null goto label5;

        r22 = new androidx.security.app.authenticator.AppSignatureVerifier$AppSignatureVerifierException;

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No signatures returned for package ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r22.<androidx.security.app.authenticator.AppSignatureVerifier$AppSignatureVerifierException: void <init>(java.lang.String)>($r11);

        r24 = (java.lang.Throwable) r22;

        throw r24;

     label5:
        $r5 = r2.<android.content.pm.PackageInfo: android.content.pm.Signature[] signatures>;

        $l0 = r2.<android.content.pm.PackageInfo: long lastUpdateTime>;

        $r6 = staticinvoke <androidx.security.app.authenticator.AppSignatureVerifier$AppSigningInfo: androidx.security.app.authenticator.AppSignatureVerifier$AppSigningInfo create(java.lang.String,android.content.pm.Signature[],android.content.pm.Signature[],long)>(r1, $r5, null, $l0);

        return $r6;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

