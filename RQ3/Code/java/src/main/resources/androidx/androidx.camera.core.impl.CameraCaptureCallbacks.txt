androidx.camera.core.impl.CameraCaptureCallbacks
    private void <init>()
    {
        androidx.camera.core.impl.CameraCaptureCallbacks r0;

        r0 := @this: androidx.camera.core.impl.CameraCaptureCallbacks;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static androidx.camera.core.impl.CameraCaptureCallback createNoOpCallback()
    {
        androidx.camera.core.impl.CameraCaptureCallbacks$NoOpCameraCaptureCallback $r0;

        $r0 = new androidx.camera.core.impl.CameraCaptureCallbacks$NoOpCameraCaptureCallback;

        specialinvoke $r0.<androidx.camera.core.impl.CameraCaptureCallbacks$NoOpCameraCaptureCallback: void <init>()>();

        return $r0;
    }

    static androidx.camera.core.impl.CameraCaptureCallback createComboCallback(java.util.List)
    {
        java.util.List r0;
        boolean $z0;
        int $i0;
        androidx.camera.core.impl.CameraCaptureCallbacks$ComboCameraCaptureCallback $r1;
        java.lang.Object $r2;
        androidx.camera.core.impl.CameraCaptureCallback $r3, $r4;

        r0 := @parameter0: java.util.List;

        $z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r4 = staticinvoke <androidx.camera.core.impl.CameraCaptureCallbacks: androidx.camera.core.impl.CameraCaptureCallback createNoOpCallback()>();

        return $r4;

     label1:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 != 1 goto label2;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (androidx.camera.core.impl.CameraCaptureCallback) $r2;

        return $r3;

     label2:
        $r1 = new androidx.camera.core.impl.CameraCaptureCallbacks$ComboCameraCaptureCallback;

        specialinvoke $r1.<androidx.camera.core.impl.CameraCaptureCallbacks$ComboCameraCaptureCallback: void <init>(java.util.List)>(r0);

        return $r1;
    }

    public static transient androidx.camera.core.impl.CameraCaptureCallback createComboCallback(androidx.camera.core.impl.CameraCaptureCallback[])
    {
        androidx.camera.core.impl.CameraCaptureCallback[] r0;
        java.util.List $r1;
        androidx.camera.core.impl.CameraCaptureCallback $r2;

        r0 := @parameter0: androidx.camera.core.impl.CameraCaptureCallback[];

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r0);

        $r2 = staticinvoke <androidx.camera.core.impl.CameraCaptureCallbacks: androidx.camera.core.impl.CameraCaptureCallback createComboCallback(java.util.List)>($r1);

        return $r2;
    }

androidx.camera.core.impl.CameraCaptureCallbacks$ComboCameraCaptureCallback
<androidx.camera.core.impl.CameraCaptureCallbacks$ComboCameraCaptureCallback: java.util.List mCallbacks>
    void <init>(java.util.List)
    {
        androidx.camera.core.impl.CameraCaptureCallbacks$ComboCameraCaptureCallback r0;
        java.util.List r1, $r6;
        java.util.Iterator r2;
        androidx.camera.core.impl.CameraCaptureCallback r3;
        java.util.ArrayList $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;

        r0 := @this: androidx.camera.core.impl.CameraCaptureCallbacks$ComboCameraCaptureCallback;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<androidx.camera.core.impl.CameraCaptureCallback: void <init>()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<androidx.camera.core.impl.CameraCaptureCallbacks$ComboCameraCaptureCallback: java.util.List mCallbacks> = $r4;

        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.camera.core.impl.CameraCaptureCallback) $r5;

        $z1 = r3 instanceof androidx.camera.core.impl.CameraCaptureCallbacks$NoOpCameraCaptureCallback;

        if $z1 != 0 goto label2;

        $r6 = r0.<androidx.camera.core.impl.CameraCaptureCallbacks$ComboCameraCaptureCallback: java.util.List mCallbacks>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r3);

     label2:
        goto label1;

     label3:
        return;
    }

    public void onCaptureCompleted(androidx.camera.core.impl.CameraCaptureResult)
    {
        androidx.camera.core.impl.CameraCaptureCallbacks$ComboCameraCaptureCallback r0;
        androidx.camera.core.impl.CameraCaptureResult r1;
        java.util.Iterator r2;
        androidx.camera.core.impl.CameraCaptureCallback r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: androidx.camera.core.impl.CameraCaptureCallbacks$ComboCameraCaptureCallback;

        r1 := @parameter0: androidx.camera.core.impl.CameraCaptureResult;

        $r4 = r0.<androidx.camera.core.impl.CameraCaptureCallbacks$ComboCameraCaptureCallback: java.util.List mCallbacks>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.camera.core.impl.CameraCaptureCallback) $r5;

        virtualinvoke r3.<androidx.camera.core.impl.CameraCaptureCallback: void onCaptureCompleted(androidx.camera.core.impl.CameraCaptureResult)>(r1);

        goto label1;

     label2:
        return;
    }

    public void onCaptureFailed(androidx.camera.core.impl.CameraCaptureFailure)
    {
        androidx.camera.core.impl.CameraCaptureCallbacks$ComboCameraCaptureCallback r0;
        androidx.camera.core.impl.CameraCaptureFailure r1;
        java.util.Iterator r2;
        androidx.camera.core.impl.CameraCaptureCallback r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: androidx.camera.core.impl.CameraCaptureCallbacks$ComboCameraCaptureCallback;

        r1 := @parameter0: androidx.camera.core.impl.CameraCaptureFailure;

        $r4 = r0.<androidx.camera.core.impl.CameraCaptureCallbacks$ComboCameraCaptureCallback: java.util.List mCallbacks>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.camera.core.impl.CameraCaptureCallback) $r5;

        virtualinvoke r3.<androidx.camera.core.impl.CameraCaptureCallback: void onCaptureFailed(androidx.camera.core.impl.CameraCaptureFailure)>(r1);

        goto label1;

     label2:
        return;
    }

    public void onCaptureCancelled()
    {
        androidx.camera.core.impl.CameraCaptureCallbacks$ComboCameraCaptureCallback r0;
        java.util.Iterator r1;
        androidx.camera.core.impl.CameraCaptureCallback r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: androidx.camera.core.impl.CameraCaptureCallbacks$ComboCameraCaptureCallback;

        $r3 = r0.<androidx.camera.core.impl.CameraCaptureCallbacks$ComboCameraCaptureCallback: java.util.List mCallbacks>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.camera.core.impl.CameraCaptureCallback) $r4;

        virtualinvoke r2.<androidx.camera.core.impl.CameraCaptureCallback: void onCaptureCancelled()>();

        goto label1;

     label2:
        return;
    }

    public java.util.List getCallbacks()
    {
        androidx.camera.core.impl.CameraCaptureCallbacks$ComboCameraCaptureCallback r0;
        java.util.List $r1;

        r0 := @this: androidx.camera.core.impl.CameraCaptureCallbacks$ComboCameraCaptureCallback;

        $r1 = r0.<androidx.camera.core.impl.CameraCaptureCallbacks$ComboCameraCaptureCallback: java.util.List mCallbacks>;

        return $r1;
    }

androidx.camera.core.impl.CameraCaptureCallbacks$NoOpCameraCaptureCallback
    void <init>()
    {
        androidx.camera.core.impl.CameraCaptureCallbacks$NoOpCameraCaptureCallback r0;

        r0 := @this: androidx.camera.core.impl.CameraCaptureCallbacks$NoOpCameraCaptureCallback;

        specialinvoke r0.<androidx.camera.core.impl.CameraCaptureCallback: void <init>()>();

        return;
    }

    public void onCaptureCompleted(androidx.camera.core.impl.CameraCaptureResult)
    {
        androidx.camera.core.impl.CameraCaptureCallbacks$NoOpCameraCaptureCallback r0;
        androidx.camera.core.impl.CameraCaptureResult r1;

        r0 := @this: androidx.camera.core.impl.CameraCaptureCallbacks$NoOpCameraCaptureCallback;

        r1 := @parameter0: androidx.camera.core.impl.CameraCaptureResult;

        return;
    }

    public void onCaptureFailed(androidx.camera.core.impl.CameraCaptureFailure)
    {
        androidx.camera.core.impl.CameraCaptureCallbacks$NoOpCameraCaptureCallback r0;
        androidx.camera.core.impl.CameraCaptureFailure r1;

        r0 := @this: androidx.camera.core.impl.CameraCaptureCallbacks$NoOpCameraCaptureCallback;

        r1 := @parameter0: androidx.camera.core.impl.CameraCaptureFailure;

        return;
    }

