androidx.slice.core.SliceQuery
    public static transient boolean hasAnyHints(androidx.slice.SliceItem, java.lang.String[])
    {
        androidx.slice.SliceItem r0;
        java.lang.String[] r1, r3;
        java.util.List r2;
        int i0, i1;
        java.lang.String r4;
        boolean $z0;

        r0 := @parameter0: androidx.slice.SliceItem;

        r1 := @parameter1: java.lang.String[];

        if r1 != null goto label1;

        return 0;

     label1:
        r2 = virtualinvoke r0.<androidx.slice.SliceItem: java.util.List getHints()>();

        r3 = r1;

        i0 = lengthof r3;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        r4 = r3[i1];

        $z0 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>(r4);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 0;
    }

    public static transient boolean hasHints(androidx.slice.SliceItem, java.lang.String[])
    {
        androidx.slice.SliceItem r0;
        java.lang.String[] r1, r3;
        java.util.List r2;
        int i0, i1;
        java.lang.String r4;
        boolean $z0, $z1;

        r0 := @parameter0: androidx.slice.SliceItem;

        r1 := @parameter1: java.lang.String[];

        if r1 != null goto label1;

        return 1;

     label1:
        r2 = virtualinvoke r0.<androidx.slice.SliceItem: java.util.List getHints()>();

        r3 = r1;

        i0 = lengthof r3;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        r4 = r3[i1];

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r4);

        if $z0 != 0 goto label3;

        $z1 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>(r4);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 1;
    }

    public static transient boolean hasHints(androidx.slice.Slice, java.lang.String[])
    {
        androidx.slice.Slice r0;
        java.lang.String[] r1, r3;
        java.util.List r2;
        int i0, i1;
        java.lang.String r4;
        boolean $z0, $z1;

        r0 := @parameter0: androidx.slice.Slice;

        r1 := @parameter1: java.lang.String[];

        if r1 != null goto label1;

        return 1;

     label1:
        r2 = virtualinvoke r0.<androidx.slice.Slice: java.util.List getHints()>();

        r3 = r1;

        i0 = lengthof r3;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        r4 = r3[i1];

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r4);

        if $z0 != 0 goto label3;

        $z1 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>(r4);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 1;
    }

    public static androidx.slice.SliceItem findNotContaining(androidx.slice.SliceItem, java.util.List)
    {
        androidx.slice.SliceItem r0, r2, r4;
        java.util.List r1;
        int $i0;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @parameter0: androidx.slice.SliceItem;

        r1 := @parameter1: java.util.List;

        r4 = null;

     label1:
        if r4 != null goto label3;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 == 0 goto label3;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>(0);

        r2 = (androidx.slice.SliceItem) $r3;

        $z0 = staticinvoke <androidx.slice.core.SliceQuery: boolean contains(androidx.slice.SliceItem,androidx.slice.SliceItem)>(r0, r2);

        if $z0 != 0 goto label2;

        r4 = r2;

     label2:
        goto label1;

     label3:
        return r4;
    }

    private static boolean contains(androidx.slice.SliceItem, androidx.slice.SliceItem)
    {
        androidx.slice.SliceItem r0, r1;
        java.util.Iterator $r2, $r4;
        androidx.slice.core.SliceQuery$1 $r3;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @parameter0: androidx.slice.SliceItem;

        r1 := @parameter1: androidx.slice.SliceItem;

        if r0 == null goto label1;

        if r1 != null goto label2;

     label1:
        return 0;

     label2:
        $r2 = staticinvoke <androidx.slice.core.SliceQuery: java.util.Iterator stream(androidx.slice.SliceItem)>(r0);

        $r3 = new androidx.slice.core.SliceQuery$1;

        specialinvoke $r3.<androidx.slice.core.SliceQuery$1: void <init>(androidx.slice.SliceItem)>(r1);

        $r4 = staticinvoke <androidx.slice.core.SliceQuery: java.util.Iterator filter(java.util.Iterator,androidx.slice.core.SliceQuery$Filter)>($r2, $r3);

        $r5 = staticinvoke <androidx.slice.core.SliceQuery: java.lang.Object findFirst(java.util.Iterator,java.lang.Object)>($r4, null);

        if $r5 == null goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public static java.util.List findAll(androidx.slice.SliceItem, java.lang.String)
    {
        androidx.slice.SliceItem r0;
        java.lang.String r1;
        java.lang.String[] $r2;
        java.util.List $r3;

        r0 := @parameter0: androidx.slice.SliceItem;

        r1 := @parameter1: java.lang.String;

        $r2 = (java.lang.String[]) null;

        $r3 = staticinvoke <androidx.slice.core.SliceQuery: java.util.List findAll(androidx.slice.SliceItem,java.lang.String,java.lang.String[],java.lang.String[])>(r0, r1, $r2, null);

        return $r3;
    }

    public static java.util.List findAll(androidx.slice.Slice, java.lang.String, java.lang.String, java.lang.String)
    {
        androidx.slice.Slice r0;
        java.lang.String r1, r2, r3;
        java.lang.String[] $r4, $r5;
        java.util.List $r6;

        r0 := @parameter0: androidx.slice.Slice;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = r2;

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = r3;

        $r6 = staticinvoke <androidx.slice.core.SliceQuery: java.util.List findAll(androidx.slice.Slice,java.lang.String,java.lang.String[],java.lang.String[])>(r0, r1, $r4, $r5);

        return $r6;
    }

    public static java.util.List findAll(androidx.slice.SliceItem, java.lang.String, java.lang.String, java.lang.String)
    {
        androidx.slice.SliceItem r0;
        java.lang.String r1, r2, r3;
        java.lang.String[] $r4, $r5;
        java.util.List $r6;

        r0 := @parameter0: androidx.slice.SliceItem;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = r2;

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = r3;

        $r6 = staticinvoke <androidx.slice.core.SliceQuery: java.util.List findAll(androidx.slice.SliceItem,java.lang.String,java.lang.String[],java.lang.String[])>(r0, r1, $r4, $r5);

        return $r6;
    }

    public static java.util.List findAll(androidx.slice.Slice, java.lang.String, java.lang.String[], java.lang.String[])
    {
        androidx.slice.Slice r0;
        java.lang.String r1;
        java.lang.String[] r2, r3;
        java.util.Iterator $r4, $r6;
        androidx.slice.core.SliceQuery$2 $r5;
        java.util.List $r7;

        r0 := @parameter0: androidx.slice.Slice;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: java.lang.String[];

        $r4 = staticinvoke <androidx.slice.core.SliceQuery: java.util.Iterator stream(androidx.slice.Slice)>(r0);

        $r5 = new androidx.slice.core.SliceQuery$2;

        specialinvoke $r5.<androidx.slice.core.SliceQuery$2: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>(r1, r2, r3);

        $r6 = staticinvoke <androidx.slice.core.SliceQuery: java.util.Iterator filter(java.util.Iterator,androidx.slice.core.SliceQuery$Filter)>($r4, $r5);

        $r7 = staticinvoke <androidx.slice.core.SliceQuery: java.util.List collect(java.util.Iterator)>($r6);

        return $r7;
    }

    public static java.util.List findAll(androidx.slice.SliceItem, java.lang.String, java.lang.String[], java.lang.String[])
    {
        androidx.slice.SliceItem r0;
        java.lang.String r1;
        java.lang.String[] r2, r3;
        java.util.Iterator $r4, $r6;
        androidx.slice.core.SliceQuery$3 $r5;
        java.util.List $r7;

        r0 := @parameter0: androidx.slice.SliceItem;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: java.lang.String[];

        $r4 = staticinvoke <androidx.slice.core.SliceQuery: java.util.Iterator stream(androidx.slice.SliceItem)>(r0);

        $r5 = new androidx.slice.core.SliceQuery$3;

        specialinvoke $r5.<androidx.slice.core.SliceQuery$3: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>(r1, r2, r3);

        $r6 = staticinvoke <androidx.slice.core.SliceQuery: java.util.Iterator filter(java.util.Iterator,androidx.slice.core.SliceQuery$Filter)>($r4, $r5);

        $r7 = staticinvoke <androidx.slice.core.SliceQuery: java.util.List collect(java.util.Iterator)>($r6);

        return $r7;
    }

    public static androidx.slice.SliceItem find(androidx.slice.Slice, java.lang.String, java.lang.String, java.lang.String)
    {
        androidx.slice.Slice r0;
        java.lang.String r1, r2, r3;
        java.lang.String[] $r4, $r5;
        androidx.slice.SliceItem $r6;

        r0 := @parameter0: androidx.slice.Slice;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = r2;

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = r3;

        $r6 = staticinvoke <androidx.slice.core.SliceQuery: androidx.slice.SliceItem find(androidx.slice.Slice,java.lang.String,java.lang.String[],java.lang.String[])>(r0, r1, $r4, $r5);

        return $r6;
    }

    public static androidx.slice.SliceItem find(androidx.slice.Slice, java.lang.String)
    {
        androidx.slice.Slice r0;
        java.lang.String r1;
        java.lang.String[] $r2;
        androidx.slice.SliceItem $r3;

        r0 := @parameter0: androidx.slice.Slice;

        r1 := @parameter1: java.lang.String;

        $r2 = (java.lang.String[]) null;

        $r3 = staticinvoke <androidx.slice.core.SliceQuery: androidx.slice.SliceItem find(androidx.slice.Slice,java.lang.String,java.lang.String[],java.lang.String[])>(r0, r1, $r2, null);

        return $r3;
    }

    public static androidx.slice.SliceItem find(androidx.slice.SliceItem, java.lang.String)
    {
        androidx.slice.SliceItem r0, $r3;
        java.lang.String r1;
        java.lang.String[] $r2;

        r0 := @parameter0: androidx.slice.SliceItem;

        r1 := @parameter1: java.lang.String;

        $r2 = (java.lang.String[]) null;

        $r3 = staticinvoke <androidx.slice.core.SliceQuery: androidx.slice.SliceItem find(androidx.slice.SliceItem,java.lang.String,java.lang.String[],java.lang.String[])>(r0, r1, $r2, null);

        return $r3;
    }

    public static androidx.slice.SliceItem find(androidx.slice.SliceItem, java.lang.String, java.lang.String, java.lang.String)
    {
        androidx.slice.SliceItem r0, $r6;
        java.lang.String r1, r2, r3;
        java.lang.String[] $r4, $r5;

        r0 := @parameter0: androidx.slice.SliceItem;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = r2;

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = r3;

        $r6 = staticinvoke <androidx.slice.core.SliceQuery: androidx.slice.SliceItem find(androidx.slice.SliceItem,java.lang.String,java.lang.String[],java.lang.String[])>(r0, r1, $r4, $r5);

        return $r6;
    }

    public static androidx.slice.SliceItem find(androidx.slice.Slice, java.lang.String, java.lang.String[], java.lang.String[])
    {
        androidx.slice.Slice r0;
        java.lang.String r1;
        java.lang.String[] r2, r3;
        java.util.Iterator $r4, $r6;
        androidx.slice.core.SliceQuery$4 $r5;
        java.lang.Object $r7;
        androidx.slice.SliceItem $r8;

        r0 := @parameter0: androidx.slice.Slice;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: java.lang.String[];

        $r4 = staticinvoke <androidx.slice.core.SliceQuery: java.util.Iterator stream(androidx.slice.Slice)>(r0);

        $r5 = new androidx.slice.core.SliceQuery$4;

        specialinvoke $r5.<androidx.slice.core.SliceQuery$4: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>(r1, r2, r3);

        $r6 = staticinvoke <androidx.slice.core.SliceQuery: java.util.Iterator filter(java.util.Iterator,androidx.slice.core.SliceQuery$Filter)>($r4, $r5);

        $r7 = staticinvoke <androidx.slice.core.SliceQuery: java.lang.Object findFirst(java.util.Iterator,java.lang.Object)>($r6, null);

        $r8 = (androidx.slice.SliceItem) $r7;

        return $r8;
    }

    public static androidx.slice.SliceItem findSubtype(androidx.slice.Slice, java.lang.String, java.lang.String)
    {
        androidx.slice.Slice r0;
        java.lang.String r1, r2;
        java.util.Iterator $r3, $r5;
        androidx.slice.core.SliceQuery$5 $r4;
        java.lang.Object $r6;
        androidx.slice.SliceItem $r7;

        r0 := @parameter0: androidx.slice.Slice;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = staticinvoke <androidx.slice.core.SliceQuery: java.util.Iterator stream(androidx.slice.Slice)>(r0);

        $r4 = new androidx.slice.core.SliceQuery$5;

        specialinvoke $r4.<androidx.slice.core.SliceQuery$5: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        $r5 = staticinvoke <androidx.slice.core.SliceQuery: java.util.Iterator filter(java.util.Iterator,androidx.slice.core.SliceQuery$Filter)>($r3, $r4);

        $r6 = staticinvoke <androidx.slice.core.SliceQuery: java.lang.Object findFirst(java.util.Iterator,java.lang.Object)>($r5, null);

        $r7 = (androidx.slice.SliceItem) $r6;

        return $r7;
    }

    public static androidx.slice.SliceItem findSubtype(androidx.slice.SliceItem, java.lang.String, java.lang.String)
    {
        androidx.slice.SliceItem r0, $r7;
        java.lang.String r1, r2;
        java.util.Iterator $r3, $r5;
        androidx.slice.core.SliceQuery$6 $r4;
        java.lang.Object $r6;

        r0 := @parameter0: androidx.slice.SliceItem;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = staticinvoke <androidx.slice.core.SliceQuery: java.util.Iterator stream(androidx.slice.SliceItem)>(r0);

        $r4 = new androidx.slice.core.SliceQuery$6;

        specialinvoke $r4.<androidx.slice.core.SliceQuery$6: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        $r5 = staticinvoke <androidx.slice.core.SliceQuery: java.util.Iterator filter(java.util.Iterator,androidx.slice.core.SliceQuery$Filter)>($r3, $r4);

        $r6 = staticinvoke <androidx.slice.core.SliceQuery: java.lang.Object findFirst(java.util.Iterator,java.lang.Object)>($r5, null);

        $r7 = (androidx.slice.SliceItem) $r6;

        return $r7;
    }

    public static androidx.slice.SliceItem find(androidx.slice.SliceItem, java.lang.String, java.lang.String[], java.lang.String[])
    {
        androidx.slice.SliceItem r0, $r8;
        java.lang.String r1;
        java.lang.String[] r2, r3;
        java.util.Iterator $r4, $r6;
        androidx.slice.core.SliceQuery$7 $r5;
        java.lang.Object $r7;

        r0 := @parameter0: androidx.slice.SliceItem;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: java.lang.String[];

        $r4 = staticinvoke <androidx.slice.core.SliceQuery: java.util.Iterator stream(androidx.slice.SliceItem)>(r0);

        $r5 = new androidx.slice.core.SliceQuery$7;

        specialinvoke $r5.<androidx.slice.core.SliceQuery$7: void <init>(java.lang.String,java.lang.String[],java.lang.String[])>(r1, r2, r3);

        $r6 = staticinvoke <androidx.slice.core.SliceQuery: java.util.Iterator filter(java.util.Iterator,androidx.slice.core.SliceQuery$Filter)>($r4, $r5);

        $r7 = staticinvoke <androidx.slice.core.SliceQuery: java.lang.Object findFirst(java.util.Iterator,java.lang.Object)>($r6, null);

        $r8 = (androidx.slice.SliceItem) $r7;

        return $r8;
    }

    static boolean checkFormat(androidx.slice.SliceItem, java.lang.String)
    {
        androidx.slice.SliceItem r0;
        java.lang.String r1, $r2;
        boolean $z0, $z1;

        r0 := @parameter0: androidx.slice.SliceItem;

        r1 := @parameter1: java.lang.String;

        if r1 == null goto label1;

        $r2 = virtualinvoke r0.<androidx.slice.SliceItem: java.lang.String getFormat()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    static boolean checkSubtype(androidx.slice.SliceItem, java.lang.String)
    {
        androidx.slice.SliceItem r0;
        java.lang.String r1, $r2;
        boolean $z0, $z1;

        r0 := @parameter0: androidx.slice.SliceItem;

        r1 := @parameter1: java.lang.String;

        if r1 == null goto label1;

        $r2 = virtualinvoke r0.<androidx.slice.SliceItem: java.lang.String getSubType()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public static java.util.Iterator stream(androidx.slice.SliceItem)
    {
        androidx.slice.SliceItem r0;
        java.util.ArrayList r1, $r2;
        java.util.Iterator $r3;

        r0 := @parameter0: androidx.slice.SliceItem;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

        $r3 = staticinvoke <androidx.slice.core.SliceQuery: java.util.Iterator getSliceItemStream(java.util.ArrayList)>(r1);

        return $r3;
    }

    public static java.util.Iterator stream(androidx.slice.Slice)
    {
        androidx.slice.Slice r0;
        java.util.ArrayList r1, $r2;
        java.util.Iterator $r3;
        java.util.List $r4;

        r0 := @parameter0: androidx.slice.Slice;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r1 = $r2;

        if r0 == null goto label1;

        $r4 = virtualinvoke r0.<androidx.slice.Slice: java.util.List getItems()>();

        virtualinvoke r1.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r4);

     label1:
        $r3 = staticinvoke <androidx.slice.core.SliceQuery: java.util.Iterator getSliceItemStream(java.util.ArrayList)>(r1);

        return $r3;
    }

    private static java.util.Iterator getSliceItemStream(java.util.ArrayList)
    {
        java.util.ArrayList r0;
        androidx.slice.core.SliceQuery$8 $r1;

        r0 := @parameter0: java.util.ArrayList;

        $r1 = new androidx.slice.core.SliceQuery$8;

        specialinvoke $r1.<androidx.slice.core.SliceQuery$8: void <init>(java.util.ArrayList)>(r0);

        return $r1;
    }

    public static androidx.slice.SliceItem findTopLevelItem(androidx.slice.Slice, java.lang.String, java.lang.String, java.lang.String[], java.lang.String[])
    {
        androidx.slice.Slice r0;
        java.lang.String r1, r2;
        java.lang.String[] r3, r4;
        java.util.List r5;
        androidx.slice.SliceItem r6;
        int $i0, i1;
        java.lang.Object $r7;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: androidx.slice.Slice;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String[];

        r4 := @parameter4: java.lang.String[];

        r5 = virtualinvoke r0.<androidx.slice.Slice: java.util.List getItems()>();

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r5.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r7 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i1);

        r6 = (androidx.slice.SliceItem) $r7;

        $z0 = staticinvoke <androidx.slice.core.SliceQuery: boolean checkFormat(androidx.slice.SliceItem,java.lang.String)>(r6, r1);

        if $z0 == 0 goto label2;

        $z1 = staticinvoke <androidx.slice.core.SliceQuery: boolean checkSubtype(androidx.slice.SliceItem,java.lang.String)>(r6, r2);

        if $z1 == 0 goto label2;

        $z2 = staticinvoke <androidx.slice.core.SliceQuery: boolean hasHints(androidx.slice.SliceItem,java.lang.String[])>(r6, r3);

        if $z2 == 0 goto label2;

        $z3 = staticinvoke <androidx.slice.core.SliceQuery: boolean hasAnyHints(androidx.slice.SliceItem,java.lang.String[])>(r6, r4);

        if $z3 != 0 goto label2;

        return r6;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    private static java.util.List collect(java.util.Iterator)
    {
        java.util.Iterator r0;
        java.util.ArrayList r1, $r2;
        boolean $z0;
        java.lang.Object $r3;

        r0 := @parameter0: java.util.Iterator;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r1 = $r2;

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r3);

        goto label1;

     label2:
        return r1;
    }

    private static java.util.Iterator filter(java.util.Iterator, androidx.slice.core.SliceQuery$Filter)
    {
        java.util.Iterator r0;
        androidx.slice.core.SliceQuery$Filter r1;
        androidx.slice.core.SliceQuery$9 $r2;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: androidx.slice.core.SliceQuery$Filter;

        $r2 = new androidx.slice.core.SliceQuery$9;

        specialinvoke $r2.<androidx.slice.core.SliceQuery$9: void <init>(java.util.Iterator,androidx.slice.core.SliceQuery$Filter)>(r0, r1);

        return $r2;
    }

    private static java.lang.Object findFirst(java.util.Iterator, java.lang.Object)
    {
        java.util.Iterator r0;
        java.lang.Object r1, r2;
        boolean $z0;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: java.lang.Object;

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        r2 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        if r2 == null goto label2;

        return r2;

     label2:
        goto label1;

     label3:
        return r1;
    }

    public static androidx.slice.SliceItem findItem(androidx.slice.Slice, android.net.Uri)
    {
        androidx.slice.Slice r0;
        android.net.Uri r1;
        java.util.Iterator $r2, $r4;
        androidx.slice.core.SliceQuery$10 $r3;
        java.lang.Object $r5;
        androidx.slice.SliceItem $r6;

        r0 := @parameter0: androidx.slice.Slice;

        r1 := @parameter1: android.net.Uri;

        $r2 = staticinvoke <androidx.slice.core.SliceQuery: java.util.Iterator stream(androidx.slice.Slice)>(r0);

        $r3 = new androidx.slice.core.SliceQuery$10;

        specialinvoke $r3.<androidx.slice.core.SliceQuery$10: void <init>(android.net.Uri)>(r1);

        $r4 = staticinvoke <androidx.slice.core.SliceQuery: java.util.Iterator filter(java.util.Iterator,androidx.slice.core.SliceQuery$Filter)>($r2, $r3);

        $r5 = staticinvoke <androidx.slice.core.SliceQuery: java.lang.Object findFirst(java.util.Iterator,java.lang.Object)>($r4, null);

        $r6 = (androidx.slice.SliceItem) $r5;

        return $r6;
    }

    private void <init>()
    {
        androidx.slice.core.SliceQuery r0;

        r0 := @this: androidx.slice.core.SliceQuery;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.slice.core.SliceQuery$1
<androidx.slice.core.SliceQuery$1: androidx.slice.SliceItem val$item>
    void <init>(androidx.slice.SliceItem)
    {
        androidx.slice.core.SliceQuery$1 r0;
        androidx.slice.SliceItem r1;

        r0 := @this: androidx.slice.core.SliceQuery$1;

        r1 := @parameter0: androidx.slice.SliceItem;

        r0.<androidx.slice.core.SliceQuery$1: androidx.slice.SliceItem val$item> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean filter(androidx.slice.SliceItem)
    {
        androidx.slice.core.SliceQuery$1 r0;
        androidx.slice.SliceItem r1, $r2;
        boolean $z0;

        r0 := @this: androidx.slice.core.SliceQuery$1;

        r1 := @parameter0: androidx.slice.SliceItem;

        $r2 = r0.<androidx.slice.core.SliceQuery$1: androidx.slice.SliceItem val$item>;

        if r1 != $r2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public volatile boolean filter(java.lang.Object)
    {
        androidx.slice.core.SliceQuery$1 r0;
        java.lang.Object r1;
        androidx.slice.SliceItem $r2;
        boolean $z0;

        r0 := @this: androidx.slice.core.SliceQuery$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.slice.SliceItem) r1;

        $z0 = virtualinvoke r0.<androidx.slice.core.SliceQuery$1: boolean filter(androidx.slice.SliceItem)>($r2);

        return $z0;
    }

androidx.slice.core.SliceQuery$10
<androidx.slice.core.SliceQuery$10: android.net.Uri val$uri>
    void <init>(android.net.Uri)
    {
        androidx.slice.core.SliceQuery$10 r0;
        android.net.Uri r1;

        r0 := @this: androidx.slice.core.SliceQuery$10;

        r1 := @parameter0: android.net.Uri;

        r0.<androidx.slice.core.SliceQuery$10: android.net.Uri val$uri> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean filter(androidx.slice.SliceItem)
    {
        androidx.slice.core.SliceQuery$10 r0;
        androidx.slice.SliceItem r1;
        java.lang.String $r2, $r3, $r7, $r8;
        boolean $z0, $z1, $z2;
        android.net.Uri $r4, $r6;
        androidx.slice.Slice $r5;

        r0 := @this: androidx.slice.core.SliceQuery$10;

        r1 := @parameter0: androidx.slice.SliceItem;

        $r2 = "action";

        $r3 = virtualinvoke r1.<androidx.slice.SliceItem: java.lang.String getFormat()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r7 = "slice";

        $r8 = virtualinvoke r1.<androidx.slice.SliceItem: java.lang.String getFormat()>();

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z2 == 0 goto label2;

     label1:
        $r4 = r0.<androidx.slice.core.SliceQuery$10: android.net.Uri val$uri>;

        $r5 = virtualinvoke r1.<androidx.slice.SliceItem: androidx.slice.Slice getSlice()>();

        $r6 = virtualinvoke $r5.<androidx.slice.Slice: android.net.Uri getUri()>();

        $z1 = virtualinvoke $r4.<android.net.Uri: boolean equals(java.lang.Object)>($r6);

        return $z1;

     label2:
        return 0;
    }

    public volatile boolean filter(java.lang.Object)
    {
        androidx.slice.core.SliceQuery$10 r0;
        java.lang.Object r1;
        androidx.slice.SliceItem $r2;
        boolean $z0;

        r0 := @this: androidx.slice.core.SliceQuery$10;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.slice.SliceItem) r1;

        $z0 = virtualinvoke r0.<androidx.slice.core.SliceQuery$10: boolean filter(androidx.slice.SliceItem)>($r2);

        return $z0;
    }

androidx.slice.core.SliceQuery$2
<androidx.slice.core.SliceQuery$2: java.lang.String val$format>
<androidx.slice.core.SliceQuery$2: java.lang.String[] val$hints>
<androidx.slice.core.SliceQuery$2: java.lang.String[] val$nonHints>
    void <init>(java.lang.String, java.lang.String[], java.lang.String[])
    {
        androidx.slice.core.SliceQuery$2 r0;
        java.lang.String r1;
        java.lang.String[] r2, r3;

        r0 := @this: androidx.slice.core.SliceQuery$2;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String[];

        r0.<androidx.slice.core.SliceQuery$2: java.lang.String val$format> = r1;

        r0.<androidx.slice.core.SliceQuery$2: java.lang.String[] val$hints> = r2;

        r0.<androidx.slice.core.SliceQuery$2: java.lang.String[] val$nonHints> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean filter(androidx.slice.SliceItem)
    {
        androidx.slice.core.SliceQuery$2 r0;
        androidx.slice.SliceItem r1;
        java.lang.String $r2;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String[] $r3, $r4;

        r0 := @this: androidx.slice.core.SliceQuery$2;

        r1 := @parameter0: androidx.slice.SliceItem;

        $r2 = r0.<androidx.slice.core.SliceQuery$2: java.lang.String val$format>;

        $z0 = staticinvoke <androidx.slice.core.SliceQuery: boolean checkFormat(androidx.slice.SliceItem,java.lang.String)>(r1, $r2);

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.slice.core.SliceQuery$2: java.lang.String[] val$hints>;

        $z1 = staticinvoke <androidx.slice.core.SliceQuery: boolean hasHints(androidx.slice.SliceItem,java.lang.String[])>(r1, $r3);

        if $z1 == 0 goto label1;

        $r4 = r0.<androidx.slice.core.SliceQuery$2: java.lang.String[] val$nonHints>;

        $z2 = staticinvoke <androidx.slice.core.SliceQuery: boolean hasAnyHints(androidx.slice.SliceItem,java.lang.String[])>(r1, $r4);

        if $z2 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    public volatile boolean filter(java.lang.Object)
    {
        androidx.slice.core.SliceQuery$2 r0;
        java.lang.Object r1;
        androidx.slice.SliceItem $r2;
        boolean $z0;

        r0 := @this: androidx.slice.core.SliceQuery$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.slice.SliceItem) r1;

        $z0 = virtualinvoke r0.<androidx.slice.core.SliceQuery$2: boolean filter(androidx.slice.SliceItem)>($r2);

        return $z0;
    }

androidx.slice.core.SliceQuery$3
<androidx.slice.core.SliceQuery$3: java.lang.String val$format>
<androidx.slice.core.SliceQuery$3: java.lang.String[] val$hints>
<androidx.slice.core.SliceQuery$3: java.lang.String[] val$nonHints>
    void <init>(java.lang.String, java.lang.String[], java.lang.String[])
    {
        androidx.slice.core.SliceQuery$3 r0;
        java.lang.String r1;
        java.lang.String[] r2, r3;

        r0 := @this: androidx.slice.core.SliceQuery$3;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String[];

        r0.<androidx.slice.core.SliceQuery$3: java.lang.String val$format> = r1;

        r0.<androidx.slice.core.SliceQuery$3: java.lang.String[] val$hints> = r2;

        r0.<androidx.slice.core.SliceQuery$3: java.lang.String[] val$nonHints> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean filter(androidx.slice.SliceItem)
    {
        androidx.slice.core.SliceQuery$3 r0;
        androidx.slice.SliceItem r1;
        java.lang.String $r2;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String[] $r3, $r4;

        r0 := @this: androidx.slice.core.SliceQuery$3;

        r1 := @parameter0: androidx.slice.SliceItem;

        $r2 = r0.<androidx.slice.core.SliceQuery$3: java.lang.String val$format>;

        $z0 = staticinvoke <androidx.slice.core.SliceQuery: boolean checkFormat(androidx.slice.SliceItem,java.lang.String)>(r1, $r2);

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.slice.core.SliceQuery$3: java.lang.String[] val$hints>;

        $z1 = staticinvoke <androidx.slice.core.SliceQuery: boolean hasHints(androidx.slice.SliceItem,java.lang.String[])>(r1, $r3);

        if $z1 == 0 goto label1;

        $r4 = r0.<androidx.slice.core.SliceQuery$3: java.lang.String[] val$nonHints>;

        $z2 = staticinvoke <androidx.slice.core.SliceQuery: boolean hasAnyHints(androidx.slice.SliceItem,java.lang.String[])>(r1, $r4);

        if $z2 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    public volatile boolean filter(java.lang.Object)
    {
        androidx.slice.core.SliceQuery$3 r0;
        java.lang.Object r1;
        androidx.slice.SliceItem $r2;
        boolean $z0;

        r0 := @this: androidx.slice.core.SliceQuery$3;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.slice.SliceItem) r1;

        $z0 = virtualinvoke r0.<androidx.slice.core.SliceQuery$3: boolean filter(androidx.slice.SliceItem)>($r2);

        return $z0;
    }

androidx.slice.core.SliceQuery$4
<androidx.slice.core.SliceQuery$4: java.lang.String val$format>
<androidx.slice.core.SliceQuery$4: java.lang.String[] val$hints>
<androidx.slice.core.SliceQuery$4: java.lang.String[] val$nonHints>
    void <init>(java.lang.String, java.lang.String[], java.lang.String[])
    {
        androidx.slice.core.SliceQuery$4 r0;
        java.lang.String r1;
        java.lang.String[] r2, r3;

        r0 := @this: androidx.slice.core.SliceQuery$4;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String[];

        r0.<androidx.slice.core.SliceQuery$4: java.lang.String val$format> = r1;

        r0.<androidx.slice.core.SliceQuery$4: java.lang.String[] val$hints> = r2;

        r0.<androidx.slice.core.SliceQuery$4: java.lang.String[] val$nonHints> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean filter(androidx.slice.SliceItem)
    {
        androidx.slice.core.SliceQuery$4 r0;
        androidx.slice.SliceItem r1;
        java.lang.String $r2;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String[] $r3, $r4;

        r0 := @this: androidx.slice.core.SliceQuery$4;

        r1 := @parameter0: androidx.slice.SliceItem;

        $r2 = r0.<androidx.slice.core.SliceQuery$4: java.lang.String val$format>;

        $z0 = staticinvoke <androidx.slice.core.SliceQuery: boolean checkFormat(androidx.slice.SliceItem,java.lang.String)>(r1, $r2);

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.slice.core.SliceQuery$4: java.lang.String[] val$hints>;

        $z1 = staticinvoke <androidx.slice.core.SliceQuery: boolean hasHints(androidx.slice.SliceItem,java.lang.String[])>(r1, $r3);

        if $z1 == 0 goto label1;

        $r4 = r0.<androidx.slice.core.SliceQuery$4: java.lang.String[] val$nonHints>;

        $z2 = staticinvoke <androidx.slice.core.SliceQuery: boolean hasAnyHints(androidx.slice.SliceItem,java.lang.String[])>(r1, $r4);

        if $z2 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    public volatile boolean filter(java.lang.Object)
    {
        androidx.slice.core.SliceQuery$4 r0;
        java.lang.Object r1;
        androidx.slice.SliceItem $r2;
        boolean $z0;

        r0 := @this: androidx.slice.core.SliceQuery$4;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.slice.SliceItem) r1;

        $z0 = virtualinvoke r0.<androidx.slice.core.SliceQuery$4: boolean filter(androidx.slice.SliceItem)>($r2);

        return $z0;
    }

androidx.slice.core.SliceQuery$5
<androidx.slice.core.SliceQuery$5: java.lang.String val$format>
<androidx.slice.core.SliceQuery$5: java.lang.String val$subtype>
    void <init>(java.lang.String, java.lang.String)
    {
        androidx.slice.core.SliceQuery$5 r0;
        java.lang.String r1, r2;

        r0 := @this: androidx.slice.core.SliceQuery$5;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r0.<androidx.slice.core.SliceQuery$5: java.lang.String val$format> = r1;

        r0.<androidx.slice.core.SliceQuery$5: java.lang.String val$subtype> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean filter(androidx.slice.SliceItem)
    {
        androidx.slice.core.SliceQuery$5 r0;
        androidx.slice.SliceItem r1;
        java.lang.String $r2, $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.slice.core.SliceQuery$5;

        r1 := @parameter0: androidx.slice.SliceItem;

        $r2 = r0.<androidx.slice.core.SliceQuery$5: java.lang.String val$format>;

        $z0 = staticinvoke <androidx.slice.core.SliceQuery: boolean checkFormat(androidx.slice.SliceItem,java.lang.String)>(r1, $r2);

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.slice.core.SliceQuery$5: java.lang.String val$subtype>;

        $z1 = staticinvoke <androidx.slice.core.SliceQuery: boolean checkSubtype(androidx.slice.SliceItem,java.lang.String)>(r1, $r3);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public volatile boolean filter(java.lang.Object)
    {
        androidx.slice.core.SliceQuery$5 r0;
        java.lang.Object r1;
        androidx.slice.SliceItem $r2;
        boolean $z0;

        r0 := @this: androidx.slice.core.SliceQuery$5;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.slice.SliceItem) r1;

        $z0 = virtualinvoke r0.<androidx.slice.core.SliceQuery$5: boolean filter(androidx.slice.SliceItem)>($r2);

        return $z0;
    }

androidx.slice.core.SliceQuery$6
<androidx.slice.core.SliceQuery$6: java.lang.String val$format>
<androidx.slice.core.SliceQuery$6: java.lang.String val$subtype>
    void <init>(java.lang.String, java.lang.String)
    {
        androidx.slice.core.SliceQuery$6 r0;
        java.lang.String r1, r2;

        r0 := @this: androidx.slice.core.SliceQuery$6;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r0.<androidx.slice.core.SliceQuery$6: java.lang.String val$format> = r1;

        r0.<androidx.slice.core.SliceQuery$6: java.lang.String val$subtype> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean filter(androidx.slice.SliceItem)
    {
        androidx.slice.core.SliceQuery$6 r0;
        androidx.slice.SliceItem r1;
        java.lang.String $r2, $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.slice.core.SliceQuery$6;

        r1 := @parameter0: androidx.slice.SliceItem;

        $r2 = r0.<androidx.slice.core.SliceQuery$6: java.lang.String val$format>;

        $z0 = staticinvoke <androidx.slice.core.SliceQuery: boolean checkFormat(androidx.slice.SliceItem,java.lang.String)>(r1, $r2);

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.slice.core.SliceQuery$6: java.lang.String val$subtype>;

        $z1 = staticinvoke <androidx.slice.core.SliceQuery: boolean checkSubtype(androidx.slice.SliceItem,java.lang.String)>(r1, $r3);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public volatile boolean filter(java.lang.Object)
    {
        androidx.slice.core.SliceQuery$6 r0;
        java.lang.Object r1;
        androidx.slice.SliceItem $r2;
        boolean $z0;

        r0 := @this: androidx.slice.core.SliceQuery$6;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.slice.SliceItem) r1;

        $z0 = virtualinvoke r0.<androidx.slice.core.SliceQuery$6: boolean filter(androidx.slice.SliceItem)>($r2);

        return $z0;
    }

androidx.slice.core.SliceQuery$7
<androidx.slice.core.SliceQuery$7: java.lang.String val$format>
<androidx.slice.core.SliceQuery$7: java.lang.String[] val$hints>
<androidx.slice.core.SliceQuery$7: java.lang.String[] val$nonHints>
    void <init>(java.lang.String, java.lang.String[], java.lang.String[])
    {
        androidx.slice.core.SliceQuery$7 r0;
        java.lang.String r1;
        java.lang.String[] r2, r3;

        r0 := @this: androidx.slice.core.SliceQuery$7;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String[];

        r0.<androidx.slice.core.SliceQuery$7: java.lang.String val$format> = r1;

        r0.<androidx.slice.core.SliceQuery$7: java.lang.String[] val$hints> = r2;

        r0.<androidx.slice.core.SliceQuery$7: java.lang.String[] val$nonHints> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean filter(androidx.slice.SliceItem)
    {
        androidx.slice.core.SliceQuery$7 r0;
        androidx.slice.SliceItem r1;
        java.lang.String $r2;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String[] $r3, $r4;

        r0 := @this: androidx.slice.core.SliceQuery$7;

        r1 := @parameter0: androidx.slice.SliceItem;

        $r2 = r0.<androidx.slice.core.SliceQuery$7: java.lang.String val$format>;

        $z0 = staticinvoke <androidx.slice.core.SliceQuery: boolean checkFormat(androidx.slice.SliceItem,java.lang.String)>(r1, $r2);

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.slice.core.SliceQuery$7: java.lang.String[] val$hints>;

        $z1 = staticinvoke <androidx.slice.core.SliceQuery: boolean hasHints(androidx.slice.SliceItem,java.lang.String[])>(r1, $r3);

        if $z1 == 0 goto label1;

        $r4 = r0.<androidx.slice.core.SliceQuery$7: java.lang.String[] val$nonHints>;

        $z2 = staticinvoke <androidx.slice.core.SliceQuery: boolean hasAnyHints(androidx.slice.SliceItem,java.lang.String[])>(r1, $r4);

        if $z2 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    public volatile boolean filter(java.lang.Object)
    {
        androidx.slice.core.SliceQuery$7 r0;
        java.lang.Object r1;
        androidx.slice.SliceItem $r2;
        boolean $z0;

        r0 := @this: androidx.slice.core.SliceQuery$7;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.slice.SliceItem) r1;

        $z0 = virtualinvoke r0.<androidx.slice.core.SliceQuery$7: boolean filter(androidx.slice.SliceItem)>($r2);

        return $z0;
    }

androidx.slice.core.SliceQuery$8
<androidx.slice.core.SliceQuery$8: java.util.ArrayList val$items>
    void <init>(java.util.ArrayList)
    {
        androidx.slice.core.SliceQuery$8 r0;
        java.util.ArrayList r1;

        r0 := @this: androidx.slice.core.SliceQuery$8;

        r1 := @parameter0: java.util.ArrayList;

        r0.<androidx.slice.core.SliceQuery$8: java.util.ArrayList val$items> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean hasNext()
    {
        androidx.slice.core.SliceQuery$8 r0;
        java.util.ArrayList $r1;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.slice.core.SliceQuery$8;

        $r1 = r0.<androidx.slice.core.SliceQuery$8: java.util.ArrayList val$items>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public androidx.slice.SliceItem next()
    {
        androidx.slice.core.SliceQuery$8 r0;
        androidx.slice.SliceItem r1;
        java.util.ArrayList $r2, $r6;
        java.lang.Object $r3;
        java.lang.String $r4, $r5, $r9, $r10;
        boolean $z0, $z2;
        androidx.slice.Slice $r7;
        java.util.List $r8;

        r0 := @this: androidx.slice.core.SliceQuery$8;

        $r2 = r0.<androidx.slice.core.SliceQuery$8: java.util.ArrayList val$items>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        r1 = (androidx.slice.SliceItem) $r3;

        $r4 = "slice";

        $r5 = virtualinvoke r1.<androidx.slice.SliceItem: java.lang.String getFormat()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        $r9 = "action";

        $r10 = virtualinvoke r1.<androidx.slice.SliceItem: java.lang.String getFormat()>();

        $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z2 == 0 goto label2;

     label1:
        $r6 = r0.<androidx.slice.core.SliceQuery$8: java.util.ArrayList val$items>;

        $r7 = virtualinvoke r1.<androidx.slice.SliceItem: androidx.slice.Slice getSlice()>();

        $r8 = virtualinvoke $r7.<androidx.slice.Slice: java.util.List getItems()>();

        virtualinvoke $r6.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r8);

     label2:
        return r1;
    }

    public volatile java.lang.Object next()
    {
        androidx.slice.core.SliceQuery$8 r0;
        androidx.slice.SliceItem $r1;

        r0 := @this: androidx.slice.core.SliceQuery$8;

        $r1 = virtualinvoke r0.<androidx.slice.core.SliceQuery$8: androidx.slice.SliceItem next()>();

        return $r1;
    }

androidx.slice.core.SliceQuery$9
<androidx.slice.core.SliceQuery$9: java.lang.Object mNext>
<androidx.slice.core.SliceQuery$9: java.util.Iterator val$input>
<androidx.slice.core.SliceQuery$9: androidx.slice.core.SliceQuery$Filter val$f>
    void <init>(java.util.Iterator, androidx.slice.core.SliceQuery$Filter)
    {
        androidx.slice.core.SliceQuery$9 r0;
        java.util.Iterator r1;
        androidx.slice.core.SliceQuery$Filter r2;
        java.lang.Object $r3;

        r0 := @this: androidx.slice.core.SliceQuery$9;

        r1 := @parameter0: java.util.Iterator;

        r2 := @parameter1: androidx.slice.core.SliceQuery$Filter;

        r0.<androidx.slice.core.SliceQuery$9: java.util.Iterator val$input> = r1;

        r0.<androidx.slice.core.SliceQuery$9: androidx.slice.core.SliceQuery$Filter val$f> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = specialinvoke r0.<androidx.slice.core.SliceQuery$9: java.lang.Object findNext()>();

        r0.<androidx.slice.core.SliceQuery$9: java.lang.Object mNext> = $r3;

        return;
    }

    private java.lang.Object findNext()
    {
        androidx.slice.core.SliceQuery$9 r0;
        java.lang.Object r1;
        java.util.Iterator $r2, $r3;
        boolean $z0, $z1;
        androidx.slice.core.SliceQuery$Filter $r4;

        r0 := @this: androidx.slice.core.SliceQuery$9;

     label1:
        $r2 = r0.<androidx.slice.core.SliceQuery$9: java.util.Iterator val$input>;

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = r0.<androidx.slice.core.SliceQuery$9: java.util.Iterator val$input>;

        r1 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r4 = r0.<androidx.slice.core.SliceQuery$9: androidx.slice.core.SliceQuery$Filter val$f>;

        $z1 = interfaceinvoke $r4.<androidx.slice.core.SliceQuery$Filter: boolean filter(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        return r1;

     label2:
        goto label1;

     label3:
        return null;
    }

    public boolean hasNext()
    {
        androidx.slice.core.SliceQuery$9 r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: androidx.slice.core.SliceQuery$9;

        $r1 = r0.<androidx.slice.core.SliceQuery$9: java.lang.Object mNext>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object next()
    {
        androidx.slice.core.SliceQuery$9 r0;
        java.lang.Object r1, $r2;

        r0 := @this: androidx.slice.core.SliceQuery$9;

        r1 = r0.<androidx.slice.core.SliceQuery$9: java.lang.Object mNext>;

        $r2 = specialinvoke r0.<androidx.slice.core.SliceQuery$9: java.lang.Object findNext()>();

        r0.<androidx.slice.core.SliceQuery$9: java.lang.Object mNext> = $r2;

        return r1;
    }

androidx.slice.core.SliceQuery$Filter
<androidx.slice.core.SliceQuery$Filter: boolean filter(java.lang.Object)>
