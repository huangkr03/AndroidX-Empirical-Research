androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap$Companion Companion>
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode node>
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: int size>
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap EMPTY>
    public void <init>(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode, int)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode r1;
        int i0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap;

        r1 := @parameter0: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "node");

        specialinvoke r0.<kotlin.collections.AbstractMap: void <init>()>();

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode node> = r1;

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: int size> = i0;

        return;
    }

    public final androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode getNode$runtime_release()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode $r1;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap;

        $r1 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode node>;

        return $r1;
    }

    public int getSize()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap r0;
        int $i0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap;

        $i0 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: int size>;

        return $i0;
    }

    public androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableSet getKeys()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapKeys $r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableSet $r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap;

        $r1 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapKeys;

        specialinvoke $r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapKeys: void <init>(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap)>(r0);

        $r2 = (androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableSet) $r1;

        return $r2;
    }

    public androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableCollection getValues()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapValues $r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableCollection $r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap;

        $r1 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapValues;

        specialinvoke $r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapValues: void <init>(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap)>(r0);

        $r2 = (androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableCollection) $r1;

        return $r2;
    }

    public androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableSet getEntries()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableSet $r1;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap;

        $r1 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableSet createEntries()>();

        return $r1;
    }

    private final androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableSet createEntries()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapEntries $r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableSet $r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap;

        $r1 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapEntries;

        specialinvoke $r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapEntries: void <init>(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap)>(r0);

        $r2 = (androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableSet) $r1;

        return $r2;
    }

    public final java.util.Set getEntries()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableSet $r1;
        java.util.Set $r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap;

        $r1 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableSet createEntries()>();

        $r2 = (java.util.Set) $r1;

        return $r2;
    }

    public boolean containsKey(java.lang.Object)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap r0;
        java.lang.Object r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode $r2;
        boolean $z0;
        int $i0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode node>;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        $z0 = virtualinvoke $r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode: boolean containsKey(int,java.lang.Object,int)>($i0, r1, 0);

        return $z0;
    }

    public java.lang.Object get(java.lang.Object)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap r0;
        java.lang.Object r1, $r3;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode $r2;
        int $i0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode node>;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        $r3 = virtualinvoke $r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode: java.lang.Object get(int,java.lang.Object,int)>($i0, r1, 0);

        return $r3;
    }

    public androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap put(java.lang.Object, java.lang.Object)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap r0, $r6;
        java.lang.Object r1, r2;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode$ModificationResult r3, $r5;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode $r4, $r7;
        int $i0, $i1, $i2, $i3;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode node>;

        if r1 == null goto label1;

        $i3 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        goto label2;

     label1:
        $i3 = 0;

     label2:
        $r5 = virtualinvoke $r4.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode$ModificationResult put(int,java.lang.Object,java.lang.Object,int)>($i3, r1, r2, 0);

        if $r5 != null goto label3;

        return r0;

     label3:
        r3 = $r5;

        $r6 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap;

        $r7 = virtualinvoke r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode$ModificationResult: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode getNode()>();

        $i0 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: int size()>();

        $i1 = virtualinvoke r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode$ModificationResult: int getSizeDelta()>();

        $i2 = $i0 + $i1;

        specialinvoke $r6.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: void <init>(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode,int)>($r7, $i2);

        return $r6;
    }

    public androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap remove(java.lang.Object)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap r0, $r5, $r7;
        java.lang.Object r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode r2, $r3, $r4;
        int $i0, $i1, $i2;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap$Companion $r6;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode node>;

        if r1 == null goto label1;

        $i2 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        goto label2;

     label1:
        $i2 = 0;

     label2:
        r2 = virtualinvoke $r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode remove(int,java.lang.Object,int)>($i2, r1, 0);

        $r4 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode node>;

        if $r4 != r2 goto label3;

        return r0;

     label3:
        if r2 != null goto label4;

        $r6 = <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap$Companion Companion>;

        $r7 = virtualinvoke $r6.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap$Companion: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap emptyOf$runtime_release()>();

        return $r7;

     label4:
        $r5 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap;

        $i0 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: int size()>();

        $i1 = $i0 - 1;

        specialinvoke $r5.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: void <init>(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode,int)>(r2, $i1);

        return $r5;
    }

    public androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap remove(java.lang.Object, java.lang.Object)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap r0, $r6, $r8;
        java.lang.Object r1, r2;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode r3, $r4, $r5;
        int $i0, $i1, $i2;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap$Companion $r7;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode node>;

        if r1 == null goto label1;

        $i2 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        goto label2;

     label1:
        $i2 = 0;

     label2:
        r3 = virtualinvoke $r4.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode remove(int,java.lang.Object,java.lang.Object,int)>($i2, r1, r2, 0);

        $r5 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode node>;

        if $r5 != r3 goto label3;

        return r0;

     label3:
        if r3 != null goto label4;

        $r7 = <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap$Companion Companion>;

        $r8 = virtualinvoke $r7.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap$Companion: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap emptyOf$runtime_release()>();

        return $r8;

     label4:
        $r6 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap;

        $i0 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: int size()>();

        $i1 = $i0 - 1;

        specialinvoke $r6.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: void <init>(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode,int)>(r3, $i1);

        return $r6;
    }

    public androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap putAll(java.util.Map)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap r0;
        java.util.Map r1, r4;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap $r2, $r5;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap$Builder r3;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap;

        r1 := @parameter0: java.util.Map;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "m");

        $r2 = (androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap) r0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap<K of androidx.compose.runtime.external.kotlinx.collections.immutable.ExtensionsKt.mutate, V of androidx.compose.runtime.external.kotlinx.collections.immutable.ExtensionsKt.mutate>");

        r3 = interfaceinvoke $r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap$Builder builder()>();

        r4 = (java.util.Map) r3;

        interfaceinvoke r4.<java.util.Map: void putAll(java.util.Map)>(r1);

        $r5 = interfaceinvoke r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap$Builder: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap build()>();

        return $r5;
    }

    public androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap clear()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap r0, $r2;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap$Companion $r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap $r3;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap;

        $r1 = <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap$Companion: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap emptyOf$runtime_release()>();

        $r3 = (androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap) $r2;

        return $r3;
    }

    public androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder builder()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder $r1;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap;

        $r1 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder;

        specialinvoke $r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder: void <init>(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap)>(r0);

        return $r1;
    }

    public final volatile androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableSet keySet()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableSet $r1;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap;

        $r1 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableSet getKeys()>();

        return $r1;
    }

    public volatile java.util.Set getKeys()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableSet $r1;
        java.util.Set $r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap;

        $r1 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableSet getKeys()>();

        $r2 = (java.util.Set) $r1;

        return $r2;
    }

    public final volatile androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableCollection values()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableCollection $r1;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap;

        $r1 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableCollection getValues()>();

        return $r1;
    }

    public volatile java.util.Collection getValues()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableCollection $r1;
        java.util.Collection $r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap;

        $r1 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableCollection getValues()>();

        $r2 = (java.util.Collection) $r1;

        return $r2;
    }

    public final volatile androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableSet entrySet()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableSet $r1;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap;

        $r1 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableSet getEntries()>();

        return $r1;
    }

    public volatile androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap put(java.lang.Object, java.lang.Object)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap r0, $r3;
        java.lang.Object r1, r2;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap $r4;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r4 = (androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap) $r3;

        return $r4;
    }

    public volatile androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap remove(java.lang.Object)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap r0, $r2;
        java.lang.Object r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap $r3;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap remove(java.lang.Object)>(r1);

        $r3 = (androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap) $r2;

        return $r3;
    }

    public volatile androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap remove(java.lang.Object, java.lang.Object)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap r0, $r3;
        java.lang.Object r1, r2;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap $r4;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap remove(java.lang.Object,java.lang.Object)>(r1, r2);

        $r4 = (androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap) $r3;

        return $r4;
    }

    public volatile androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap$Builder builder()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder $r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap$Builder $r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap;

        $r1 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilder builder()>();

        $r2 = (androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap$Builder) $r1;

        return $r2;
    }

    public static final androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap access$getEMPTY$cp()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap $r0;

        $r0 = <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap EMPTY>;

        return $r0;
    }

    static void <clinit>()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap$Companion $r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap $r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode$Companion $r2;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode $r3;

        $r0 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap$Companion;

        specialinvoke $r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap$Companion Companion> = $r0;

        $r1 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap;

        $r2 = <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode$Companion Companion>;

        $r3 = virtualinvoke $r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode$Companion: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode getEMPTY$runtime_release()>();

        specialinvoke $r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: void <init>(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode,int)>($r3, 0);

        <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap EMPTY> = $r1;

        return;
    }

androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap$Companion
    private void <init>()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap$Companion r0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap emptyOf$runtime_release()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap$Companion r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap $r1;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap$Companion;

        $r1 = staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap access$getEMPTY$cp()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r1, "null cannot be cast to non-null type androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap<K of androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap.Companion.emptyOf, V of androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap.Companion.emptyOf>");

        return $r1;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap$Companion: void <init>()>();

        return;
    }

