androidx.compose.animation.ExpandShrinkModifier
<androidx.compose.animation.ExpandShrinkModifier: androidx.compose.animation.core.Transition$DeferredAnimation sizeAnimation>
<androidx.compose.animation.ExpandShrinkModifier: androidx.compose.animation.core.Transition$DeferredAnimation offsetAnimation>
<androidx.compose.animation.ExpandShrinkModifier: androidx.compose.runtime.State expand>
<androidx.compose.animation.ExpandShrinkModifier: androidx.compose.runtime.State shrink>
<androidx.compose.animation.ExpandShrinkModifier: androidx.compose.runtime.State alignment>
<androidx.compose.animation.ExpandShrinkModifier: androidx.compose.ui.Alignment currentAlignment>
<androidx.compose.animation.ExpandShrinkModifier: kotlin.jvm.functions.Function1 sizeTransitionSpec>
    public void <init>(androidx.compose.animation.core.Transition$DeferredAnimation, androidx.compose.animation.core.Transition$DeferredAnimation, androidx.compose.runtime.State, androidx.compose.runtime.State, androidx.compose.runtime.State)
    {
        androidx.compose.animation.ExpandShrinkModifier r0;
        androidx.compose.animation.core.Transition$DeferredAnimation r1, r2;
        androidx.compose.runtime.State r3, r4, r5;
        androidx.compose.animation.ExpandShrinkModifier$sizeTransitionSpec$1 $r6;
        kotlin.jvm.functions.Function1 $r7;

        r0 := @this: androidx.compose.animation.ExpandShrinkModifier;

        r1 := @parameter0: androidx.compose.animation.core.Transition$DeferredAnimation;

        r2 := @parameter1: androidx.compose.animation.core.Transition$DeferredAnimation;

        r3 := @parameter2: androidx.compose.runtime.State;

        r4 := @parameter3: androidx.compose.runtime.State;

        r5 := @parameter4: androidx.compose.runtime.State;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "sizeAnimation");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "offsetAnimation");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "expand");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "shrink");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "alignment");

        specialinvoke r0.<androidx.compose.animation.LayoutModifierWithPassThroughIntrinsics: void <init>()>();

        r0.<androidx.compose.animation.ExpandShrinkModifier: androidx.compose.animation.core.Transition$DeferredAnimation sizeAnimation> = r1;

        r0.<androidx.compose.animation.ExpandShrinkModifier: androidx.compose.animation.core.Transition$DeferredAnimation offsetAnimation> = r2;

        r0.<androidx.compose.animation.ExpandShrinkModifier: androidx.compose.runtime.State expand> = r3;

        r0.<androidx.compose.animation.ExpandShrinkModifier: androidx.compose.runtime.State shrink> = r4;

        r0.<androidx.compose.animation.ExpandShrinkModifier: androidx.compose.runtime.State alignment> = r5;

        $r6 = new androidx.compose.animation.ExpandShrinkModifier$sizeTransitionSpec$1;

        specialinvoke $r6.<androidx.compose.animation.ExpandShrinkModifier$sizeTransitionSpec$1: void <init>(androidx.compose.animation.ExpandShrinkModifier)>(r0);

        $r7 = (kotlin.jvm.functions.Function1) $r6;

        r0.<androidx.compose.animation.ExpandShrinkModifier: kotlin.jvm.functions.Function1 sizeTransitionSpec> = $r7;

        return;
    }

    public final androidx.compose.animation.core.Transition$DeferredAnimation getSizeAnimation()
    {
        androidx.compose.animation.ExpandShrinkModifier r0;
        androidx.compose.animation.core.Transition$DeferredAnimation $r1;

        r0 := @this: androidx.compose.animation.ExpandShrinkModifier;

        $r1 = r0.<androidx.compose.animation.ExpandShrinkModifier: androidx.compose.animation.core.Transition$DeferredAnimation sizeAnimation>;

        return $r1;
    }

    public final androidx.compose.animation.core.Transition$DeferredAnimation getOffsetAnimation()
    {
        androidx.compose.animation.ExpandShrinkModifier r0;
        androidx.compose.animation.core.Transition$DeferredAnimation $r1;

        r0 := @this: androidx.compose.animation.ExpandShrinkModifier;

        $r1 = r0.<androidx.compose.animation.ExpandShrinkModifier: androidx.compose.animation.core.Transition$DeferredAnimation offsetAnimation>;

        return $r1;
    }

    public final androidx.compose.runtime.State getExpand()
    {
        androidx.compose.animation.ExpandShrinkModifier r0;
        androidx.compose.runtime.State $r1;

        r0 := @this: androidx.compose.animation.ExpandShrinkModifier;

        $r1 = r0.<androidx.compose.animation.ExpandShrinkModifier: androidx.compose.runtime.State expand>;

        return $r1;
    }

    public final androidx.compose.runtime.State getShrink()
    {
        androidx.compose.animation.ExpandShrinkModifier r0;
        androidx.compose.runtime.State $r1;

        r0 := @this: androidx.compose.animation.ExpandShrinkModifier;

        $r1 = r0.<androidx.compose.animation.ExpandShrinkModifier: androidx.compose.runtime.State shrink>;

        return $r1;
    }

    public final androidx.compose.runtime.State getAlignment()
    {
        androidx.compose.animation.ExpandShrinkModifier r0;
        androidx.compose.runtime.State $r1;

        r0 := @this: androidx.compose.animation.ExpandShrinkModifier;

        $r1 = r0.<androidx.compose.animation.ExpandShrinkModifier: androidx.compose.runtime.State alignment>;

        return $r1;
    }

    public final androidx.compose.ui.Alignment getCurrentAlignment()
    {
        androidx.compose.animation.ExpandShrinkModifier r0;
        androidx.compose.ui.Alignment $r1;

        r0 := @this: androidx.compose.animation.ExpandShrinkModifier;

        $r1 = r0.<androidx.compose.animation.ExpandShrinkModifier: androidx.compose.ui.Alignment currentAlignment>;

        return $r1;
    }

    public final void setCurrentAlignment(androidx.compose.ui.Alignment)
    {
        androidx.compose.animation.ExpandShrinkModifier r0;
        androidx.compose.ui.Alignment r1;

        r0 := @this: androidx.compose.animation.ExpandShrinkModifier;

        r1 := @parameter0: androidx.compose.ui.Alignment;

        r0.<androidx.compose.animation.ExpandShrinkModifier: androidx.compose.ui.Alignment currentAlignment> = r1;

        return;
    }

    public final kotlin.jvm.functions.Function1 getSizeTransitionSpec()
    {
        androidx.compose.animation.ExpandShrinkModifier r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.compose.animation.ExpandShrinkModifier;

        $r1 = r0.<androidx.compose.animation.ExpandShrinkModifier: kotlin.jvm.functions.Function1 sizeTransitionSpec>;

        return $r1;
    }

    public final long sizeByState-Uzc_VyU(androidx.compose.animation.EnterExitState, long)
    {
        androidx.compose.animation.ExpandShrinkModifier r0;
        androidx.compose.animation.EnterExitState r1;
        long l0, l1, l2, $l5, $l6, $l7;
        androidx.compose.animation.ChangeSize r2, r3, $r6, $r9;
        androidx.compose.runtime.State $r4, $r7;
        java.lang.Object $r5, $r8, $r14, $r18;
        int[] $r10;
        int $i3, $i4;
        kotlin.NoWhenBranchMatchedException $r11;
        kotlin.jvm.functions.Function1 $r12, $r16;
        androidx.compose.ui.unit.IntSize $r13, $r15, $r17, $r19;

        r0 := @this: androidx.compose.animation.ExpandShrinkModifier;

        r1 := @parameter0: androidx.compose.animation.EnterExitState;

        l0 := @parameter1: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "targetState");

        $r4 = r0.<androidx.compose.animation.ExpandShrinkModifier: androidx.compose.runtime.State expand>;

        $r5 = interfaceinvoke $r4.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r6 = (androidx.compose.animation.ChangeSize) $r5;

        if $r6 == null goto label1;

        r2 = $r6;

        $r16 = virtualinvoke r2.<androidx.compose.animation.ChangeSize: kotlin.jvm.functions.Function1 getSize()>();

        $r17 = staticinvoke <androidx.compose.ui.unit.IntSize: androidx.compose.ui.unit.IntSize box-impl(long)>(l0);

        $r18 = interfaceinvoke $r16.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r17);

        $r19 = (androidx.compose.ui.unit.IntSize) $r18;

        $l5 = virtualinvoke $r19.<androidx.compose.ui.unit.IntSize: long unbox-impl()>();

        goto label2;

     label1:
        $l5 = l0;

     label2:
        l1 = $l5;

        $r7 = r0.<androidx.compose.animation.ExpandShrinkModifier: androidx.compose.runtime.State shrink>;

        $r8 = interfaceinvoke $r7.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r9 = (androidx.compose.animation.ChangeSize) $r8;

        if $r9 == null goto label3;

        r3 = $r9;

        $r12 = virtualinvoke r3.<androidx.compose.animation.ChangeSize: kotlin.jvm.functions.Function1 getSize()>();

        $r13 = staticinvoke <androidx.compose.ui.unit.IntSize: androidx.compose.ui.unit.IntSize box-impl(long)>(l0);

        $r14 = interfaceinvoke $r12.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r13);

        $r15 = (androidx.compose.ui.unit.IntSize) $r14;

        $l6 = virtualinvoke $r15.<androidx.compose.ui.unit.IntSize: long unbox-impl()>();

        goto label4;

     label3:
        $l6 = l0;

     label4:
        l2 = $l6;

        $r10 = <androidx.compose.animation.ExpandShrinkModifier$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i3 = virtualinvoke r1.<androidx.compose.animation.EnterExitState: int ordinal()>();

        $i4 = $r10[$i3];

        tableswitch($i4)
        {
            case 1: goto label5;
            case 2: goto label6;
            case 3: goto label7;
            default: goto label8;
        };

     label5:
        $l7 = l0;

        goto label9;

     label6:
        $l7 = l1;

        goto label9;

     label7:
        $l7 = l2;

        goto label9;

     label8:
        $r11 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r11.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r11;

     label9:
        return $l7;
    }

    public final long targetOffsetByState-oFUgxo0(androidx.compose.animation.EnterExitState, long)
    {
        androidx.compose.animation.ExpandShrinkModifier r0;
        androidx.compose.animation.EnterExitState r1;
        long l0, l1, l2, l3, $l12;
        androidx.compose.animation.ChangeSize r2, $r12;
        androidx.compose.ui.Alignment $r3, $r7, $r21, $r22;
        androidx.compose.runtime.State $r4, $r6, $r10, $r18;
        java.lang.Object $r5, $r8, $r11, $r16, $r19;
        boolean $z2;
        int[] $r9;
        int $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        androidx.compose.ui.unit.IntOffset$Companion $r13, $r24, $r25, $r27, $r28, $r29;
        kotlin.jvm.functions.Function1 $r14;
        androidx.compose.ui.unit.IntSize $r15, $r17;
        androidx.compose.ui.unit.LayoutDirection $r20, $r23;
        kotlin.NoWhenBranchMatchedException $r26;

        r0 := @this: androidx.compose.animation.ExpandShrinkModifier;

        r1 := @parameter0: androidx.compose.animation.EnterExitState;

        l0 := @parameter1: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "targetState");

        $r3 = r0.<androidx.compose.animation.ExpandShrinkModifier: androidx.compose.ui.Alignment currentAlignment>;

        if $r3 != null goto label1;

        $r29 = <androidx.compose.ui.unit.IntOffset: androidx.compose.ui.unit.IntOffset$Companion Companion>;

        $l12 = virtualinvoke $r29.<androidx.compose.ui.unit.IntOffset$Companion: long getZero-nOcc-ac()>();

        goto label9;

     label1:
        $r4 = r0.<androidx.compose.animation.ExpandShrinkModifier: androidx.compose.runtime.State alignment>;

        $r5 = interfaceinvoke $r4.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        if $r5 != null goto label2;

        $r28 = <androidx.compose.ui.unit.IntOffset: androidx.compose.ui.unit.IntOffset$Companion Companion>;

        $l12 = virtualinvoke $r28.<androidx.compose.ui.unit.IntOffset$Companion: long getZero-nOcc-ac()>();

        goto label9;

     label2:
        $r7 = r0.<androidx.compose.animation.ExpandShrinkModifier: androidx.compose.ui.Alignment currentAlignment>;

        $r6 = r0.<androidx.compose.animation.ExpandShrinkModifier: androidx.compose.runtime.State alignment>;

        $r8 = interfaceinvoke $r6.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, $r8);

        if $z2 == 0 goto label3;

        $r27 = <androidx.compose.ui.unit.IntOffset: androidx.compose.ui.unit.IntOffset$Companion Companion>;

        $l12 = virtualinvoke $r27.<androidx.compose.ui.unit.IntOffset$Companion: long getZero-nOcc-ac()>();

        goto label9;

     label3:
        $r9 = <androidx.compose.animation.ExpandShrinkModifier$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i4 = virtualinvoke r1.<androidx.compose.animation.EnterExitState: int ordinal()>();

        $i5 = $r9[$i4];

        tableswitch($i5)
        {
            case 1: goto label4;
            case 2: goto label5;
            case 3: goto label6;
            default: goto label8;
        };

     label4:
        $r25 = <androidx.compose.ui.unit.IntOffset: androidx.compose.ui.unit.IntOffset$Companion Companion>;

        $l12 = virtualinvoke $r25.<androidx.compose.ui.unit.IntOffset$Companion: long getZero-nOcc-ac()>();

        goto label9;

     label5:
        $r24 = <androidx.compose.ui.unit.IntOffset: androidx.compose.ui.unit.IntOffset$Companion Companion>;

        $l12 = virtualinvoke $r24.<androidx.compose.ui.unit.IntOffset$Companion: long getZero-nOcc-ac()>();

        goto label9;

     label6:
        $r10 = r0.<androidx.compose.animation.ExpandShrinkModifier: androidx.compose.runtime.State shrink>;

        $r11 = interfaceinvoke $r10.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r12 = (androidx.compose.animation.ChangeSize) $r11;

        if $r12 == null goto label7;

        r2 = $r12;

        $r14 = virtualinvoke r2.<androidx.compose.animation.ChangeSize: kotlin.jvm.functions.Function1 getSize()>();

        $r15 = staticinvoke <androidx.compose.ui.unit.IntSize: androidx.compose.ui.unit.IntSize box-impl(long)>(l0);

        $r16 = interfaceinvoke $r14.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r15);

        $r17 = (androidx.compose.ui.unit.IntSize) $r16;

        l1 = virtualinvoke $r17.<androidx.compose.ui.unit.IntSize: long unbox-impl()>();

        $r18 = r0.<androidx.compose.animation.ExpandShrinkModifier: androidx.compose.runtime.State alignment>;

        $r19 = interfaceinvoke $r18.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r19);

        $r21 = (androidx.compose.ui.Alignment) $r19;

        $r20 = <androidx.compose.ui.unit.LayoutDirection: androidx.compose.ui.unit.LayoutDirection Ltr>;

        l2 = interfaceinvoke $r21.<androidx.compose.ui.Alignment: long align-KFBX0sM(long,long,androidx.compose.ui.unit.LayoutDirection)>(l0, l1, $r20);

        $r22 = r0.<androidx.compose.animation.ExpandShrinkModifier: androidx.compose.ui.Alignment currentAlignment>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r22);

        $r23 = <androidx.compose.ui.unit.LayoutDirection: androidx.compose.ui.unit.LayoutDirection Ltr>;

        l3 = interfaceinvoke $r22.<androidx.compose.ui.Alignment: long align-KFBX0sM(long,long,androidx.compose.ui.unit.LayoutDirection)>(l0, l1, $r23);

        $i6 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>(l2);

        $i7 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>(l3);

        $i8 = $i6 - $i7;

        $i9 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>(l2);

        $i10 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>(l3);

        $i11 = $i9 - $i10;

        $l12 = staticinvoke <androidx.compose.ui.unit.IntOffsetKt: long IntOffset(int,int)>($i8, $i11);

        goto label9;

     label7:
        $r13 = <androidx.compose.ui.unit.IntOffset: androidx.compose.ui.unit.IntOffset$Companion Companion>;

        $l12 = virtualinvoke $r13.<androidx.compose.ui.unit.IntOffset$Companion: long getZero-nOcc-ac()>();

        goto label9;

     label8:
        $r26 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r26.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r26;

     label9:
        return $l12;
    }

    public androidx.compose.ui.layout.MeasureResult measure-3p2s80s(androidx.compose.ui.layout.MeasureScope, androidx.compose.ui.layout.Measurable, long)
    {
        androidx.compose.animation.ExpandShrinkModifier r0;
        androidx.compose.ui.layout.MeasureScope $r1;
        androidx.compose.ui.layout.Measurable r2;
        long l0, l1, l2, l3, l4, $l9;
        androidx.compose.ui.layout.Placeable r3;
        int $i5, $i6, $i7, $i8;
        androidx.compose.animation.ExpandShrinkModifier$measure$currentSize$1 $r4;
        androidx.compose.animation.core.Transition$DeferredAnimation $r5, $r13;
        kotlin.jvm.functions.Function1 $r6, $r7, $r14, $r15, $r22;
        androidx.compose.runtime.State $r8, $r16;
        java.lang.Object $r9, $r17;
        androidx.compose.ui.unit.IntSize $r10;
        androidx.compose.animation.ExpandShrinkModifier$measure$offsetDelta$1 $r11;
        androidx.compose.animation.ExpandShrinkModifier$measure$offsetDelta$2 $r12;
        androidx.compose.ui.unit.IntOffset $r18;
        androidx.compose.ui.Alignment $r19;
        androidx.compose.ui.unit.IntOffset$Companion $r20;
        androidx.compose.animation.ExpandShrinkModifier$measure$1 $r21;
        androidx.compose.ui.layout.MeasureResult $r23;
        androidx.compose.ui.unit.LayoutDirection $r24;

        r0 := @this: androidx.compose.animation.ExpandShrinkModifier;

        $r1 := @parameter0: androidx.compose.ui.layout.MeasureScope;

        r2 := @parameter1: androidx.compose.ui.layout.Measurable;

        l0 := @parameter2: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$measure");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurable");

        r3 = interfaceinvoke r2.<androidx.compose.ui.layout.Measurable: androidx.compose.ui.layout.Placeable measure-BRTryo0(long)>(l0);

        $i5 = virtualinvoke r3.<androidx.compose.ui.layout.Placeable: int getWidth()>();

        $i6 = virtualinvoke r3.<androidx.compose.ui.layout.Placeable: int getHeight()>();

        l1 = staticinvoke <androidx.compose.ui.unit.IntSizeKt: long IntSize(int,int)>($i5, $i6);

        $r5 = r0.<androidx.compose.animation.ExpandShrinkModifier: androidx.compose.animation.core.Transition$DeferredAnimation sizeAnimation>;

        $r6 = r0.<androidx.compose.animation.ExpandShrinkModifier: kotlin.jvm.functions.Function1 sizeTransitionSpec>;

        $r4 = new androidx.compose.animation.ExpandShrinkModifier$measure$currentSize$1;

        specialinvoke $r4.<androidx.compose.animation.ExpandShrinkModifier$measure$currentSize$1: void <init>(androidx.compose.animation.ExpandShrinkModifier,long)>(r0, l1);

        $r7 = (kotlin.jvm.functions.Function1) $r4;

        $r8 = virtualinvoke $r5.<androidx.compose.animation.core.Transition$DeferredAnimation: androidx.compose.runtime.State animate(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)>($r6, $r7);

        $r9 = interfaceinvoke $r8.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r10 = (androidx.compose.ui.unit.IntSize) $r9;

        l2 = virtualinvoke $r10.<androidx.compose.ui.unit.IntSize: long unbox-impl()>();

        $r13 = r0.<androidx.compose.animation.ExpandShrinkModifier: androidx.compose.animation.core.Transition$DeferredAnimation offsetAnimation>;

        $r11 = <androidx.compose.animation.ExpandShrinkModifier$measure$offsetDelta$1: androidx.compose.animation.ExpandShrinkModifier$measure$offsetDelta$1 INSTANCE>;

        $r14 = (kotlin.jvm.functions.Function1) $r11;

        $r12 = new androidx.compose.animation.ExpandShrinkModifier$measure$offsetDelta$2;

        specialinvoke $r12.<androidx.compose.animation.ExpandShrinkModifier$measure$offsetDelta$2: void <init>(androidx.compose.animation.ExpandShrinkModifier,long)>(r0, l1);

        $r15 = (kotlin.jvm.functions.Function1) $r12;

        $r16 = virtualinvoke $r13.<androidx.compose.animation.core.Transition$DeferredAnimation: androidx.compose.runtime.State animate(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)>($r14, $r15);

        $r17 = interfaceinvoke $r16.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r18 = (androidx.compose.ui.unit.IntOffset) $r17;

        l3 = virtualinvoke $r18.<androidx.compose.ui.unit.IntOffset: long unbox-impl()>();

        $r19 = r0.<androidx.compose.animation.ExpandShrinkModifier: androidx.compose.ui.Alignment currentAlignment>;

        if $r19 == null goto label1;

        $r24 = <androidx.compose.ui.unit.LayoutDirection: androidx.compose.ui.unit.LayoutDirection Ltr>;

        $l9 = interfaceinvoke $r19.<androidx.compose.ui.Alignment: long align-KFBX0sM(long,long,androidx.compose.ui.unit.LayoutDirection)>(l1, l2, $r24);

        goto label2;

     label1:
        $r20 = <androidx.compose.ui.unit.IntOffset: androidx.compose.ui.unit.IntOffset$Companion Companion>;

        $l9 = virtualinvoke $r20.<androidx.compose.ui.unit.IntOffset$Companion: long getZero-nOcc-ac()>();

     label2:
        l4 = $l9;

        $i7 = staticinvoke <androidx.compose.ui.unit.IntSize: int getWidth-impl(long)>(l2);

        $i8 = staticinvoke <androidx.compose.ui.unit.IntSize: int getHeight-impl(long)>(l2);

        $r21 = new androidx.compose.animation.ExpandShrinkModifier$measure$1;

        specialinvoke $r21.<androidx.compose.animation.ExpandShrinkModifier$measure$1: void <init>(androidx.compose.ui.layout.Placeable,long,long)>(r3, l4, l3);

        $r22 = (kotlin.jvm.functions.Function1) $r21;

        $r23 = staticinvoke <androidx.compose.ui.layout.MeasureScope: androidx.compose.ui.layout.MeasureResult layout$default(androidx.compose.ui.layout.MeasureScope,int,int,java.util.Map,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r1, $i7, $i8, null, $r22, 4, null);

        return $r23;
    }

androidx.compose.animation.ExpandShrinkModifier$measure$1
<androidx.compose.animation.ExpandShrinkModifier$measure$1: androidx.compose.ui.layout.Placeable $placeable>
<androidx.compose.animation.ExpandShrinkModifier$measure$1: long $offset>
<androidx.compose.animation.ExpandShrinkModifier$measure$1: long $offsetDelta>
    void <init>(androidx.compose.ui.layout.Placeable, long, long)
    {
        androidx.compose.animation.ExpandShrinkModifier$measure$1 r0;
        androidx.compose.ui.layout.Placeable $r1;
        long $l0, $l1;

        r0 := @this: androidx.compose.animation.ExpandShrinkModifier$measure$1;

        $r1 := @parameter0: androidx.compose.ui.layout.Placeable;

        $l0 := @parameter1: long;

        $l1 := @parameter2: long;

        r0.<androidx.compose.animation.ExpandShrinkModifier$measure$1: androidx.compose.ui.layout.Placeable $placeable> = $r1;

        r0.<androidx.compose.animation.ExpandShrinkModifier$measure$1: long $offset> = $l0;

        r0.<androidx.compose.animation.ExpandShrinkModifier$measure$1: long $offsetDelta> = $l1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.compose.ui.layout.Placeable$PlacementScope)
    {
        androidx.compose.animation.ExpandShrinkModifier$measure$1 r0;
        androidx.compose.ui.layout.Placeable$PlacementScope $r1;
        long $l0, $l2, $l4, $l7;
        androidx.compose.ui.layout.Placeable $r2;
        int $i1, $i3, $i5, $i6, $i8, $i9;

        r0 := @this: androidx.compose.animation.ExpandShrinkModifier$measure$1;

        $r1 := @parameter0: androidx.compose.ui.layout.Placeable$PlacementScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$layout");

        $r2 = r0.<androidx.compose.animation.ExpandShrinkModifier$measure$1: androidx.compose.ui.layout.Placeable $placeable>;

        $l0 = r0.<androidx.compose.animation.ExpandShrinkModifier$measure$1: long $offset>;

        $i1 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>($l0);

        $l2 = r0.<androidx.compose.animation.ExpandShrinkModifier$measure$1: long $offsetDelta>;

        $i3 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>($l2);

        $i5 = $i1 + $i3;

        $l4 = r0.<androidx.compose.animation.ExpandShrinkModifier$measure$1: long $offset>;

        $i6 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>($l4);

        $l7 = r0.<androidx.compose.animation.ExpandShrinkModifier$measure$1: long $offsetDelta>;

        $i8 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>($l7);

        $i9 = $i6 + $i8;

        staticinvoke <androidx.compose.ui.layout.Placeable$PlacementScope: void place$default(androidx.compose.ui.layout.Placeable$PlacementScope,androidx.compose.ui.layout.Placeable,int,int,float,int,java.lang.Object)>($r1, $r2, $i5, $i9, 0.0F, 4, null);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.animation.ExpandShrinkModifier$measure$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.layout.Placeable$PlacementScope $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.compose.animation.ExpandShrinkModifier$measure$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.layout.Placeable$PlacementScope) r1;

        virtualinvoke r0.<androidx.compose.animation.ExpandShrinkModifier$measure$1: void invoke(androidx.compose.ui.layout.Placeable$PlacementScope)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.compose.animation.ExpandShrinkModifier$measure$currentSize$1
<androidx.compose.animation.ExpandShrinkModifier$measure$currentSize$1: androidx.compose.animation.ExpandShrinkModifier this$0>
<androidx.compose.animation.ExpandShrinkModifier$measure$currentSize$1: long $measuredSize>
    void <init>(androidx.compose.animation.ExpandShrinkModifier, long)
    {
        androidx.compose.animation.ExpandShrinkModifier$measure$currentSize$1 r0;
        androidx.compose.animation.ExpandShrinkModifier $r1;
        long $l0;

        r0 := @this: androidx.compose.animation.ExpandShrinkModifier$measure$currentSize$1;

        $r1 := @parameter0: androidx.compose.animation.ExpandShrinkModifier;

        $l0 := @parameter1: long;

        r0.<androidx.compose.animation.ExpandShrinkModifier$measure$currentSize$1: androidx.compose.animation.ExpandShrinkModifier this$0> = $r1;

        r0.<androidx.compose.animation.ExpandShrinkModifier$measure$currentSize$1: long $measuredSize> = $l0;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final long invoke-YEO4UFw(androidx.compose.animation.EnterExitState)
    {
        androidx.compose.animation.ExpandShrinkModifier$measure$currentSize$1 r0;
        androidx.compose.animation.EnterExitState r1;
        long $l0, $l1;
        androidx.compose.animation.ExpandShrinkModifier $r2;

        r0 := @this: androidx.compose.animation.ExpandShrinkModifier$measure$currentSize$1;

        r1 := @parameter0: androidx.compose.animation.EnterExitState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = r0.<androidx.compose.animation.ExpandShrinkModifier$measure$currentSize$1: androidx.compose.animation.ExpandShrinkModifier this$0>;

        $l0 = r0.<androidx.compose.animation.ExpandShrinkModifier$measure$currentSize$1: long $measuredSize>;

        $l1 = virtualinvoke $r2.<androidx.compose.animation.ExpandShrinkModifier: long sizeByState-Uzc_VyU(androidx.compose.animation.EnterExitState,long)>(r1, $l0);

        return $l1;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.animation.ExpandShrinkModifier$measure$currentSize$1 r0;
        java.lang.Object r1;
        androidx.compose.animation.EnterExitState $r2;
        long $l0;
        androidx.compose.ui.unit.IntSize $r3;

        r0 := @this: androidx.compose.animation.ExpandShrinkModifier$measure$currentSize$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.animation.EnterExitState) r1;

        $l0 = virtualinvoke r0.<androidx.compose.animation.ExpandShrinkModifier$measure$currentSize$1: long invoke-YEO4UFw(androidx.compose.animation.EnterExitState)>($r2);

        $r3 = staticinvoke <androidx.compose.ui.unit.IntSize: androidx.compose.ui.unit.IntSize box-impl(long)>($l0);

        return $r3;
    }

androidx.compose.animation.ExpandShrinkModifier$measure$offsetDelta$1
<androidx.compose.animation.ExpandShrinkModifier$measure$offsetDelta$1: androidx.compose.animation.ExpandShrinkModifier$measure$offsetDelta$1 INSTANCE>
    void <init>()
    {
        androidx.compose.animation.ExpandShrinkModifier$measure$offsetDelta$1 r0;

        r0 := @this: androidx.compose.animation.ExpandShrinkModifier$measure$offsetDelta$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final androidx.compose.animation.core.FiniteAnimationSpec invoke(androidx.compose.animation.core.Transition$Segment)
    {
        androidx.compose.animation.ExpandShrinkModifier$measure$offsetDelta$1 r0;
        androidx.compose.animation.core.Transition$Segment $r1;
        androidx.compose.animation.core.SpringSpec $r2;
        androidx.compose.animation.core.FiniteAnimationSpec $r3;

        r0 := @this: androidx.compose.animation.ExpandShrinkModifier$measure$offsetDelta$1;

        $r1 := @parameter0: androidx.compose.animation.core.Transition$Segment;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$animate");

        $r2 = staticinvoke <androidx.compose.animation.EnterExitTransitionKt: androidx.compose.animation.core.SpringSpec access$getDefaultOffsetAnimationSpec$p()>();

        $r3 = (androidx.compose.animation.core.FiniteAnimationSpec) $r2;

        return $r3;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.animation.ExpandShrinkModifier$measure$offsetDelta$1 r0;
        java.lang.Object r1;
        androidx.compose.animation.core.Transition$Segment $r2;
        androidx.compose.animation.core.FiniteAnimationSpec $r3;

        r0 := @this: androidx.compose.animation.ExpandShrinkModifier$measure$offsetDelta$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.animation.core.Transition$Segment) r1;

        $r3 = virtualinvoke r0.<androidx.compose.animation.ExpandShrinkModifier$measure$offsetDelta$1: androidx.compose.animation.core.FiniteAnimationSpec invoke(androidx.compose.animation.core.Transition$Segment)>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        androidx.compose.animation.ExpandShrinkModifier$measure$offsetDelta$1 $r0;

        $r0 = new androidx.compose.animation.ExpandShrinkModifier$measure$offsetDelta$1;

        specialinvoke $r0.<androidx.compose.animation.ExpandShrinkModifier$measure$offsetDelta$1: void <init>()>();

        <androidx.compose.animation.ExpandShrinkModifier$measure$offsetDelta$1: androidx.compose.animation.ExpandShrinkModifier$measure$offsetDelta$1 INSTANCE> = $r0;

        return;
    }

androidx.compose.animation.ExpandShrinkModifier$measure$offsetDelta$2
<androidx.compose.animation.ExpandShrinkModifier$measure$offsetDelta$2: androidx.compose.animation.ExpandShrinkModifier this$0>
<androidx.compose.animation.ExpandShrinkModifier$measure$offsetDelta$2: long $measuredSize>
    void <init>(androidx.compose.animation.ExpandShrinkModifier, long)
    {
        androidx.compose.animation.ExpandShrinkModifier$measure$offsetDelta$2 r0;
        androidx.compose.animation.ExpandShrinkModifier $r1;
        long $l0;

        r0 := @this: androidx.compose.animation.ExpandShrinkModifier$measure$offsetDelta$2;

        $r1 := @parameter0: androidx.compose.animation.ExpandShrinkModifier;

        $l0 := @parameter1: long;

        r0.<androidx.compose.animation.ExpandShrinkModifier$measure$offsetDelta$2: androidx.compose.animation.ExpandShrinkModifier this$0> = $r1;

        r0.<androidx.compose.animation.ExpandShrinkModifier$measure$offsetDelta$2: long $measuredSize> = $l0;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final long invoke-Bjo55l4(androidx.compose.animation.EnterExitState)
    {
        androidx.compose.animation.ExpandShrinkModifier$measure$offsetDelta$2 r0;
        androidx.compose.animation.EnterExitState r1;
        long $l0, $l1;
        androidx.compose.animation.ExpandShrinkModifier $r2;

        r0 := @this: androidx.compose.animation.ExpandShrinkModifier$measure$offsetDelta$2;

        r1 := @parameter0: androidx.compose.animation.EnterExitState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = r0.<androidx.compose.animation.ExpandShrinkModifier$measure$offsetDelta$2: androidx.compose.animation.ExpandShrinkModifier this$0>;

        $l0 = r0.<androidx.compose.animation.ExpandShrinkModifier$measure$offsetDelta$2: long $measuredSize>;

        $l1 = virtualinvoke $r2.<androidx.compose.animation.ExpandShrinkModifier: long targetOffsetByState-oFUgxo0(androidx.compose.animation.EnterExitState,long)>(r1, $l0);

        return $l1;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.animation.ExpandShrinkModifier$measure$offsetDelta$2 r0;
        java.lang.Object r1;
        androidx.compose.animation.EnterExitState $r2;
        long $l0;
        androidx.compose.ui.unit.IntOffset $r3;

        r0 := @this: androidx.compose.animation.ExpandShrinkModifier$measure$offsetDelta$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.animation.EnterExitState) r1;

        $l0 = virtualinvoke r0.<androidx.compose.animation.ExpandShrinkModifier$measure$offsetDelta$2: long invoke-Bjo55l4(androidx.compose.animation.EnterExitState)>($r2);

        $r3 = staticinvoke <androidx.compose.ui.unit.IntOffset: androidx.compose.ui.unit.IntOffset box-impl(long)>($l0);

        return $r3;
    }

androidx.compose.animation.ExpandShrinkModifier$sizeTransitionSpec$1
<androidx.compose.animation.ExpandShrinkModifier$sizeTransitionSpec$1: androidx.compose.animation.ExpandShrinkModifier this$0>
    void <init>(androidx.compose.animation.ExpandShrinkModifier)
    {
        androidx.compose.animation.ExpandShrinkModifier$sizeTransitionSpec$1 r0;
        androidx.compose.animation.ExpandShrinkModifier $r1;

        r0 := @this: androidx.compose.animation.ExpandShrinkModifier$sizeTransitionSpec$1;

        $r1 := @parameter0: androidx.compose.animation.ExpandShrinkModifier;

        r0.<androidx.compose.animation.ExpandShrinkModifier$sizeTransitionSpec$1: androidx.compose.animation.ExpandShrinkModifier this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final androidx.compose.animation.core.FiniteAnimationSpec invoke(androidx.compose.animation.core.Transition$Segment)
    {
        androidx.compose.animation.ExpandShrinkModifier$sizeTransitionSpec$1 r0;
        androidx.compose.animation.core.Transition$Segment $r1;
        androidx.compose.animation.EnterExitState $r2, $r3, $r4, $r5;
        boolean $z0, $z1;
        androidx.compose.animation.core.SpringSpec $r6, $r20;
        androidx.compose.animation.ExpandShrinkModifier $r7, $r12;
        androidx.compose.runtime.State $r8, $r13;
        java.lang.Object $r9, $r14;
        androidx.compose.animation.ChangeSize $r10, $r15;
        androidx.compose.animation.core.FiniteAnimationSpec $r11, $r16, $r18;

        r0 := @this: androidx.compose.animation.ExpandShrinkModifier$sizeTransitionSpec$1;

        $r1 := @parameter0: androidx.compose.animation.core.Transition$Segment;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$null");

        $r3 = <androidx.compose.animation.EnterExitState: androidx.compose.animation.EnterExitState PreEnter>;

        $r2 = <androidx.compose.animation.EnterExitState: androidx.compose.animation.EnterExitState Visible>;

        $z0 = interfaceinvoke $r1.<androidx.compose.animation.core.Transition$Segment: boolean isTransitioningTo(java.lang.Object,java.lang.Object)>($r3, $r2);

        if $z0 == 0 goto label2;

        $r12 = r0.<androidx.compose.animation.ExpandShrinkModifier$sizeTransitionSpec$1: androidx.compose.animation.ExpandShrinkModifier this$0>;

        $r13 = virtualinvoke $r12.<androidx.compose.animation.ExpandShrinkModifier: androidx.compose.runtime.State getExpand()>();

        $r14 = interfaceinvoke $r13.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r15 = (androidx.compose.animation.ChangeSize) $r14;

        if $r15 == null goto label1;

        $r16 = virtualinvoke $r15.<androidx.compose.animation.ChangeSize: androidx.compose.animation.core.FiniteAnimationSpec getAnimationSpec()>();

        $r18 = $r16;

        goto label5;

     label1:
        $r18 = null;

        goto label5;

     label2:
        $r5 = <androidx.compose.animation.EnterExitState: androidx.compose.animation.EnterExitState Visible>;

        $r4 = <androidx.compose.animation.EnterExitState: androidx.compose.animation.EnterExitState PostExit>;

        $z1 = interfaceinvoke $r1.<androidx.compose.animation.core.Transition$Segment: boolean isTransitioningTo(java.lang.Object,java.lang.Object)>($r5, $r4);

        if $z1 == 0 goto label4;

        $r7 = r0.<androidx.compose.animation.ExpandShrinkModifier$sizeTransitionSpec$1: androidx.compose.animation.ExpandShrinkModifier this$0>;

        $r8 = virtualinvoke $r7.<androidx.compose.animation.ExpandShrinkModifier: androidx.compose.runtime.State getShrink()>();

        $r9 = interfaceinvoke $r8.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r10 = (androidx.compose.animation.ChangeSize) $r9;

        if $r10 == null goto label3;

        $r11 = virtualinvoke $r10.<androidx.compose.animation.ChangeSize: androidx.compose.animation.core.FiniteAnimationSpec getAnimationSpec()>();

        $r18 = $r11;

        goto label5;

     label3:
        $r18 = null;

        goto label5;

     label4:
        $r6 = staticinvoke <androidx.compose.animation.EnterExitTransitionKt: androidx.compose.animation.core.SpringSpec access$getDefaultSizeAnimationSpec$p()>();

        $r18 = (androidx.compose.animation.core.FiniteAnimationSpec) $r6;

     label5:
        if $r18 != null goto label6;

        $r20 = staticinvoke <androidx.compose.animation.EnterExitTransitionKt: androidx.compose.animation.core.SpringSpec access$getDefaultSizeAnimationSpec$p()>();

        $r18 = (androidx.compose.animation.core.FiniteAnimationSpec) $r20;

     label6:
        return $r18;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.animation.ExpandShrinkModifier$sizeTransitionSpec$1 r0;
        java.lang.Object r1;
        androidx.compose.animation.core.Transition$Segment $r2;
        androidx.compose.animation.core.FiniteAnimationSpec $r3;

        r0 := @this: androidx.compose.animation.ExpandShrinkModifier$sizeTransitionSpec$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.animation.core.Transition$Segment) r1;

        $r3 = virtualinvoke r0.<androidx.compose.animation.ExpandShrinkModifier$sizeTransitionSpec$1: androidx.compose.animation.core.FiniteAnimationSpec invoke(androidx.compose.animation.core.Transition$Segment)>($r2);

        return $r3;
    }

androidx.compose.animation.ExpandShrinkModifier$WhenMappings
<androidx.compose.animation.ExpandShrinkModifier$WhenMappings: int[] $EnumSwitchMapping$0>
    static void <clinit>()
    {
        int[] r0;
        androidx.compose.animation.EnterExitState[] $r1;
        int $i0, $i1, $i2, $i3;
        androidx.compose.animation.EnterExitState $r2, $r3, $r4;

        $r1 = staticinvoke <androidx.compose.animation.EnterExitState: androidx.compose.animation.EnterExitState[] values()>();

        $i0 = lengthof $r1;

        r0 = newarray (int)[$i0];

        $r2 = <androidx.compose.animation.EnterExitState: androidx.compose.animation.EnterExitState Visible>;

        $i1 = virtualinvoke $r2.<androidx.compose.animation.EnterExitState: int ordinal()>();

        r0[$i1] = 1;

        $r3 = <androidx.compose.animation.EnterExitState: androidx.compose.animation.EnterExitState PreEnter>;

        $i2 = virtualinvoke $r3.<androidx.compose.animation.EnterExitState: int ordinal()>();

        r0[$i2] = 2;

        $r4 = <androidx.compose.animation.EnterExitState: androidx.compose.animation.EnterExitState PostExit>;

        $i3 = virtualinvoke $r4.<androidx.compose.animation.EnterExitState: int ordinal()>();

        r0[$i3] = 3;

        <androidx.compose.animation.ExpandShrinkModifier$WhenMappings: int[] $EnumSwitchMapping$0> = r0;

        return;
    }

