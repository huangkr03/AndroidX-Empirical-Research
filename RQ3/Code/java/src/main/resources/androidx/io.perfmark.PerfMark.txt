io.perfmark.PerfMark
<io.perfmark.PerfMark: io.perfmark.Impl impl>
    static void <clinit>()
    {
        java.lang.Class[] $r0;
        java.lang.Class $r1, $r9;
        java.lang.Throwable $r2, $r13;
        java.lang.reflect.Constructor $r3;
        java.lang.Object[] $r4;
        io.perfmark.Tag $r5;
        java.lang.Object $r6, $r12;
        io.perfmark.Impl $r7;
        boolean $z0;
        java.lang.reflect.Method $r8;
        java.lang.String $r10;
        java.lang.reflect.Field $r11;

        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("io.perfmark.impl.SecretPerfMarkImpl$PerfMarkImpl");

        $r2 = null;

        goto label01;

     label01:
        if $r1 == null goto label09;

     label02:
        $r1 = virtualinvoke $r1.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Lio/perfmark/Impl;");

     label03:
        $r0 = newarray (java.lang.Class)[1];

        $r0[0] = class "Lio/perfmark/Tag;";

     label04:
        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r0);

     label05:
        $r4 = newarray (java.lang.Object)[1];

        $r5 = <io.perfmark.Impl: io.perfmark.Tag NO_TAG>;

        $r4[0] = $r5;

     label06:
        $r6 = virtualinvoke $r3.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r4);

     label07:
        $r7 = (io.perfmark.Impl) $r6;

        goto label10;

     label08:
        $r2 := @caughtexception;

        goto label09;

     label09:
        $r7 = null;

     label10:
        if $r7 == null goto label11;

        <io.perfmark.PerfMark: io.perfmark.Impl impl> = $r7;

        goto label12;

     label11:
        $r7 = new io.perfmark.Impl;

        $r5 = <io.perfmark.Impl: io.perfmark.Tag NO_TAG>;

        specialinvoke $r7.<io.perfmark.Impl: void <init>(io.perfmark.Tag)>($r5);

        <io.perfmark.PerfMark: io.perfmark.Impl impl> = $r7;

     label12:
        if $r2 == null goto label26;

        $z0 = staticinvoke <java.lang.Boolean: boolean getBoolean(java.lang.String)>("io.perfmark.PerfMark.debug");

        if $z0 == 0 goto label26;

        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("java.util.logging.Logger");

        $r0 = newarray (java.lang.Class)[1];

        $r0[0] = class "Ljava/lang/String;";

     label13:
        $r8 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getLogger", $r0);

     label14:
        $r4 = newarray (java.lang.Object)[1];

        $r9 = class "Lio/perfmark/PerfMark;";

     label15:
        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

     label16:
        $r4[0] = $r10;

     label17:
        $r6 = virtualinvoke $r8.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r4);

     label18:
        $r9 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("java.util.logging.Level");

     label19:
        $r11 = virtualinvoke $r9.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("FINE");

        $r12 = virtualinvoke $r11.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

     label20:
        $r0 = newarray (java.lang.Class)[3];

        $r0[0] = $r9;

        $r0[1] = class "Ljava/lang/String;";

        $r0[2] = class "Ljava/lang/Throwable;";

     label21:
        $r8 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("log", $r0);

     label22:
        $r4 = newarray (java.lang.Object)[3];

        $r4[0] = $r12;

        $r4[1] = "Error during PerfMark.<clinit>";

        $r4[2] = $r2;

     label23:
        virtualinvoke $r8.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r6, $r4);

     label24:
        return;

     label25:
        $r13 := @caughtexception;

     label26:
        return;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label13 to label14 with label25;
        catch java.lang.Throwable from label15 to label16 with label25;
        catch java.lang.Throwable from label17 to label18 with label25;
        catch java.lang.Throwable from label19 to label20 with label25;
        catch java.lang.Throwable from label21 to label22 with label25;
        catch java.lang.Throwable from label23 to label24 with label25;
    }

    private void <init>()
    {
        io.perfmark.PerfMark $r0;

        $r0 := @this: io.perfmark.PerfMark;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static io.perfmark.Tag createTag(java.lang.String)
    {
        io.perfmark.Impl $r0;
        io.perfmark.Tag $r1;
        java.lang.String $r2;

        $r2 := @parameter0: java.lang.String;

        $r0 = <io.perfmark.PerfMark: io.perfmark.Impl impl>;

        $r1 = virtualinvoke $r0.<io.perfmark.Impl: io.perfmark.Tag createTag(java.lang.String,long)>($r2, -9223372036854775808L);

        return $r1;
    }

    public static io.perfmark.Tag createTag(java.lang.String, long)
    {
        long $l0;
        io.perfmark.Impl $r0;
        io.perfmark.Tag $r1;
        java.lang.String $r2;

        $r2 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $r0 = <io.perfmark.PerfMark: io.perfmark.Impl impl>;

        $r1 = virtualinvoke $r0.<io.perfmark.Impl: io.perfmark.Tag createTag(java.lang.String,long)>($r2, $l0);

        return $r1;
    }

    public static void event(java.lang.String, io.perfmark.Tag)
    {
        java.lang.String $r0;
        io.perfmark.Tag $r1;
        io.perfmark.Impl $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: io.perfmark.Tag;

        $r2 = <io.perfmark.PerfMark: io.perfmark.Impl impl>;

        virtualinvoke $r2.<io.perfmark.Impl: void event(java.lang.String,io.perfmark.Tag)>($r0, $r1);

        return;
    }

    public static void linkIn(io.perfmark.Link)
    {
        io.perfmark.Link $r0;
        io.perfmark.Impl $r1;

        $r0 := @parameter0: io.perfmark.Link;

        $r1 = <io.perfmark.PerfMark: io.perfmark.Impl impl>;

        virtualinvoke $r1.<io.perfmark.Impl: void linkIn(io.perfmark.Link)>($r0);

        return;
    }

    public static io.perfmark.Link linkOut()
    {
        io.perfmark.Link $r0;
        io.perfmark.Impl $r1;

        $r1 = <io.perfmark.PerfMark: io.perfmark.Impl impl>;

        $r0 = virtualinvoke $r1.<io.perfmark.Impl: io.perfmark.Link linkOut()>();

        return $r0;
    }

    public static void startTask(java.lang.String)
    {
        java.lang.String $r0;
        io.perfmark.Impl $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = <io.perfmark.PerfMark: io.perfmark.Impl impl>;

        virtualinvoke $r1.<io.perfmark.Impl: void startTask(java.lang.String)>($r0);

        return;
    }

    public static void startTask(java.lang.String, io.perfmark.Tag)
    {
        java.lang.String $r0;
        io.perfmark.Tag $r1;
        io.perfmark.Impl $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: io.perfmark.Tag;

        $r2 = <io.perfmark.PerfMark: io.perfmark.Impl impl>;

        virtualinvoke $r2.<io.perfmark.Impl: void startTask(java.lang.String,io.perfmark.Tag)>($r0, $r1);

        return;
    }

    public static void stopTask(java.lang.String)
    {
        java.lang.String $r0;
        io.perfmark.Impl $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = <io.perfmark.PerfMark: io.perfmark.Impl impl>;

        virtualinvoke $r1.<io.perfmark.Impl: void stopTask(java.lang.String)>($r0);

        return;
    }

    public static void stopTask(java.lang.String, io.perfmark.Tag)
    {
        java.lang.String $r0;
        io.perfmark.Tag $r1;
        io.perfmark.Impl $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: io.perfmark.Tag;

        $r2 = <io.perfmark.PerfMark: io.perfmark.Impl impl>;

        virtualinvoke $r2.<io.perfmark.Impl: void stopTask(java.lang.String,io.perfmark.Tag)>($r0, $r1);

        return;
    }

