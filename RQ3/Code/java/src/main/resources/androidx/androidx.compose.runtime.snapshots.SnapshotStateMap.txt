androidx.compose.runtime.snapshots.SnapshotStateMap
<androidx.compose.runtime.snapshots.SnapshotStateMap: androidx.compose.runtime.snapshots.StateRecord firstStateRecord>
<androidx.compose.runtime.snapshots.SnapshotStateMap: java.util.Set entries>
<androidx.compose.runtime.snapshots.SnapshotStateMap: java.util.Set keys>
<androidx.compose.runtime.snapshots.SnapshotStateMap: java.util.Collection values>
    public void <init>()
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap r0;
        androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord $r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap $r2;
        androidx.compose.runtime.snapshots.StateRecord $r3;
        androidx.compose.runtime.snapshots.SnapshotMapEntrySet $r4;
        java.util.Set $r5, $r7;
        androidx.compose.runtime.snapshots.SnapshotMapKeySet $r6;
        androidx.compose.runtime.snapshots.SnapshotMapValueSet $r8;
        java.util.Collection $r9;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord;

        $r2 = staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.ExtensionsKt: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap persistentHashMapOf()>();

        specialinvoke $r1.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: void <init>(androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap)>($r2);

        $r3 = (androidx.compose.runtime.snapshots.StateRecord) $r1;

        r0.<androidx.compose.runtime.snapshots.SnapshotStateMap: androidx.compose.runtime.snapshots.StateRecord firstStateRecord> = $r3;

        $r4 = new androidx.compose.runtime.snapshots.SnapshotMapEntrySet;

        specialinvoke $r4.<androidx.compose.runtime.snapshots.SnapshotMapEntrySet: void <init>(androidx.compose.runtime.snapshots.SnapshotStateMap)>(r0);

        $r5 = (java.util.Set) $r4;

        r0.<androidx.compose.runtime.snapshots.SnapshotStateMap: java.util.Set entries> = $r5;

        $r6 = new androidx.compose.runtime.snapshots.SnapshotMapKeySet;

        specialinvoke $r6.<androidx.compose.runtime.snapshots.SnapshotMapKeySet: void <init>(androidx.compose.runtime.snapshots.SnapshotStateMap)>(r0);

        $r7 = (java.util.Set) $r6;

        r0.<androidx.compose.runtime.snapshots.SnapshotStateMap: java.util.Set keys> = $r7;

        $r8 = new androidx.compose.runtime.snapshots.SnapshotMapValueSet;

        specialinvoke $r8.<androidx.compose.runtime.snapshots.SnapshotMapValueSet: void <init>(androidx.compose.runtime.snapshots.SnapshotStateMap)>(r0);

        $r9 = (java.util.Collection) $r8;

        r0.<androidx.compose.runtime.snapshots.SnapshotStateMap: java.util.Collection values> = $r9;

        return;
    }

    public androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap r0;
        androidx.compose.runtime.snapshots.StateRecord $r1;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateMap;

        $r1 = r0.<androidx.compose.runtime.snapshots.SnapshotStateMap: androidx.compose.runtime.snapshots.StateRecord firstStateRecord>;

        return $r1;
    }

    public void prependStateRecord(androidx.compose.runtime.snapshots.StateRecord)
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap r0;
        androidx.compose.runtime.snapshots.StateRecord r1, $r3;
        androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord $r2;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateMap;

        r1 := @parameter0: androidx.compose.runtime.snapshots.StateRecord;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) r1;

        $r3 = (androidx.compose.runtime.snapshots.StateRecord) $r2;

        r0.<androidx.compose.runtime.snapshots.SnapshotStateMap: androidx.compose.runtime.snapshots.StateRecord firstStateRecord> = $r3;

        return;
    }

    public int getSize()
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap r0;
        androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord $r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap $r2;
        int $i0;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateMap;

        $r1 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateMap: androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord getReadable$runtime_release()>();

        $r2 = virtualinvoke $r1.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap getMap$runtime_release()>();

        $i0 = interfaceinvoke $r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap: int size()>();

        return $i0;
    }

    public boolean containsKey(java.lang.Object)
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap r0;
        java.lang.Object r1;
        androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord $r2;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap $r3;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateMap: androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord getReadable$runtime_release()>();

        $r3 = virtualinvoke $r2.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap getMap$runtime_release()>();

        $z0 = interfaceinvoke $r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap r0;
        java.lang.Object r1;
        androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord $r2;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap $r3;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateMap: androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord getReadable$runtime_release()>();

        $r3 = virtualinvoke $r2.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap getMap$runtime_release()>();

        $z0 = interfaceinvoke $r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap: boolean containsValue(java.lang.Object)>(r1);

        return $z0;
    }

    public java.lang.Object get(java.lang.Object)
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap r0;
        java.lang.Object r1, $r4;
        androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord $r2;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap $r3;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateMap: androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord getReadable$runtime_release()>();

        $r3 = virtualinvoke $r2.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap getMap$runtime_release()>();

        $r4 = interfaceinvoke $r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap: java.lang.Object get(java.lang.Object)>(r1);

        return $r4;
    }

    public boolean isEmpty()
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap r0;
        androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord $r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap $r2;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateMap;

        $r1 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateMap: androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord getReadable$runtime_release()>();

        $r2 = virtualinvoke $r1.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap getMap$runtime_release()>();

        $z0 = interfaceinvoke $r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap: boolean isEmpty()>();

        return $z0;
    }

    public java.util.Set getEntries()
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap r0;
        java.util.Set $r1;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateMap;

        $r1 = r0.<androidx.compose.runtime.snapshots.SnapshotStateMap: java.util.Set entries>;

        return $r1;
    }

    public java.util.Set getKeys()
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap r0;
        java.util.Set $r1;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateMap;

        $r1 = r0.<androidx.compose.runtime.snapshots.SnapshotStateMap: java.util.Set keys>;

        return $r1;
    }

    public java.util.Collection getValues()
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap r0;
        java.util.Collection $r1;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateMap;

        $r1 = r0.<androidx.compose.runtime.snapshots.SnapshotStateMap: java.util.Collection values>;

        return $r1;
    }

    public void clear()
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap r0, r1, r2, r8;
        androidx.compose.runtime.snapshots.StateRecord $r3, $r9, $r12, $r14, $r16, $r20;
        androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord $r4, $r11, $r13, $r17;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap r5, $r15;
        java.lang.Object r6, r7, r10, r24;
        androidx.compose.runtime.snapshots.Snapshot$Companion $r18;
        androidx.compose.runtime.snapshots.StateObject $r19, $r21;
        int $i0, i1;
        java.lang.Throwable $r22, $r23, r27;
        androidx.compose.runtime.snapshots.Snapshot r25;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateMap;

        r1 = r0;

        r2 = r1;

        $r12 = virtualinvoke r2.<androidx.compose.runtime.snapshots.SnapshotStateMap: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r12, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateMap.StateMapStateRecord<K of androidx.compose.runtime.snapshots.SnapshotStateMap, V of androidx.compose.runtime.snapshots.SnapshotStateMap>");

        $r13 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r12;

        $r3 = (androidx.compose.runtime.snapshots.StateRecord) $r13;

        $r14 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord current(androidx.compose.runtime.snapshots.StateRecord)>($r3);

        $r4 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r14;

        virtualinvoke $r4.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap getMap$runtime_release()>();

        r5 = staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.ExtensionsKt: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap persistentHashMapOf()>();

        $r15 = virtualinvoke $r4.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap getMap$runtime_release()>();

        if r5 == $r15 goto label10;

        r6 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateMapKt: java.lang.Object access$getSync$p()>();

        r7 = r6;

        entermonitor r7;

     label01:
        r8 = r1;

        $r16 = virtualinvoke r8.<androidx.compose.runtime.snapshots.SnapshotStateMap: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r16, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateMap.StateMapStateRecord<K of androidx.compose.runtime.snapshots.SnapshotStateMap, V of androidx.compose.runtime.snapshots.SnapshotStateMap>");

        $r17 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r16;

        $r9 = (androidx.compose.runtime.snapshots.StateRecord) $r17;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.Snapshot getSnapshotInitializer()>();

        r24 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r10 = r24;

        entermonitor r10;

     label02:
        $r18 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        r25 = virtualinvoke $r18.<androidx.compose.runtime.snapshots.Snapshot$Companion: androidx.compose.runtime.snapshots.Snapshot getCurrent()>();

        $r19 = (androidx.compose.runtime.snapshots.StateObject) r8;

        $r20 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord writableRecord(androidx.compose.runtime.snapshots.StateRecord,androidx.compose.runtime.snapshots.StateObject,androidx.compose.runtime.snapshots.Snapshot)>($r9, $r19, r25);

        $r11 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r20;

        virtualinvoke $r11.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: void setMap$runtime_release(androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap)>(r5);

        i1 = virtualinvoke $r11.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: int getModification$runtime_release()>();

        $i0 = i1 + 1;

        virtualinvoke $r11.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: void setModification$runtime_release(int)>($i0);

     label03:
        exitmonitor r10;

        goto label06;

     label04:
        $r22 := @caughtexception;

     label05:
        exitmonitor r10;

        throw $r22;

     label06:
        $r21 = (androidx.compose.runtime.snapshots.StateObject) r8;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: void notifyWrite(androidx.compose.runtime.snapshots.Snapshot,androidx.compose.runtime.snapshots.StateObject)>(r25, $r21);

     label07:
        exitmonitor r7;

        goto label10;

     label08:
        $r23 := @caughtexception;

        r27 = $r23;

     label09:
        exitmonitor r7;

        throw r27;

     label10:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap r0, r3, r21;
        java.lang.Object r1, r2, r4, r19, r20, r28, r30, r31, r34;
        androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord $r5, $r7, $r10, r22;
        int i0, $i1, $i2, i3;
        androidx.compose.runtime.snapshots.StateRecord $r6, $r8, $r9, $r13, $r15, $r33;
        boolean $z0, $z1, z2, z4;
        androidx.compose.runtime.snapshots.Snapshot$Companion $r11;
        androidx.compose.runtime.snapshots.StateObject $r12, $r14;
        java.lang.Throwable $r16, $r17, $r18, r36, r37;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap r23, $r29;
        kotlin.Unit $r24;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap$Builder r26;
        java.util.Map r27;
        androidx.compose.runtime.snapshots.Snapshot r35;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 = r0;

     label01:
        r19 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateMapKt: java.lang.Object access$getSync$p()>();

        r20 = r19;

        entermonitor r20;

     label02:
        r21 = r3;

        $r6 = virtualinvoke r21.<androidx.compose.runtime.snapshots.SnapshotStateMap: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r6, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateMap.StateMapStateRecord<K of androidx.compose.runtime.snapshots.SnapshotStateMap, V of androidx.compose.runtime.snapshots.SnapshotStateMap>");

        $r7 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r6;

        $r15 = (androidx.compose.runtime.snapshots.StateRecord) $r7;

        $r8 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord current(androidx.compose.runtime.snapshots.StateRecord)>($r15);

        r22 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r8;

        r23 = virtualinvoke r22.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap getMap$runtime_release()>();

        i3 = virtualinvoke r22.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: int getModification$runtime_release()>();

        $r24 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label03:
        exitmonitor r20;

        goto label06;

     label04:
        $r16 := @caughtexception;

     label05:
        exitmonitor r20;

        throw $r16;

     label06:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r23);

        r26 = interfaceinvoke r23.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap$Builder builder()>();

        r27 = (java.util.Map) r26;

        r28 = interfaceinvoke r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r29 = interfaceinvoke r26.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap$Builder: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap build()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r29, r23);

        if $z0 != 0 goto label19;

        r30 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateMapKt: java.lang.Object access$getSync$p()>();

        r31 = r30;

        entermonitor r31;

     label07:
        $r9 = virtualinvoke r3.<androidx.compose.runtime.snapshots.SnapshotStateMap: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r9, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateMap.StateMapStateRecord<K of androidx.compose.runtime.snapshots.SnapshotStateMap, V of androidx.compose.runtime.snapshots.SnapshotStateMap>");

        $r10 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r9;

        $r33 = (androidx.compose.runtime.snapshots.StateRecord) $r10;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.Snapshot getSnapshotInitializer()>();

        r34 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r4 = r34;

        entermonitor r4;

     label08:
        $r11 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        r35 = virtualinvoke $r11.<androidx.compose.runtime.snapshots.Snapshot$Companion: androidx.compose.runtime.snapshots.Snapshot getCurrent()>();

        $r12 = (androidx.compose.runtime.snapshots.StateObject) r3;

        $r13 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord writableRecord(androidx.compose.runtime.snapshots.StateRecord,androidx.compose.runtime.snapshots.StateObject,androidx.compose.runtime.snapshots.Snapshot)>($r33, $r12, r35);

        $r5 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r13;

        $i1 = virtualinvoke $r5.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: int getModification$runtime_release()>();

        if $i1 != i3 goto label09;

        virtualinvoke $r5.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: void setMap$runtime_release(androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap)>($r29);

        i0 = virtualinvoke $r5.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: int getModification$runtime_release()>();

        $i2 = i0 + 1;

        virtualinvoke $r5.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: void setModification$runtime_release(int)>($i2);

        $z1 = 1;

        goto label10;

     label09:
        $z1 = 0;

     label10:
        z2 = $z1;

     label11:
        exitmonitor r4;

        goto label14;

     label12:
        $r18 := @caughtexception;

        r36 = $r18;

     label13:
        exitmonitor r4;

        throw r36;

     label14:
        $r14 = (androidx.compose.runtime.snapshots.StateObject) r3;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: void notifyWrite(androidx.compose.runtime.snapshots.Snapshot,androidx.compose.runtime.snapshots.StateObject)>(r35, $r14);

        z4 = z2;

     label15:
        exitmonitor r31;

        goto label18;

     label16:
        $r17 := @caughtexception;

        r37 = $r17;

     label17:
        exitmonitor r31;

        throw r37;

     label18:
        if z4 == 0 goto label01;

     label19:
        goto label20;

     label20:
        return r28;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label08 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch java.lang.Throwable from label07 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    public void putAll(java.util.Map)
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap r0, r2, r20;
        java.util.Map r1, r26;
        java.lang.Object r3, r18, r19, r29, r30, r33;
        androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord $r4, $r6, $r9, r21;
        int i0, $i1, $i2, i3;
        androidx.compose.runtime.snapshots.StateRecord $r5, $r7, $r8, $r12, $r14, $r32;
        boolean $z0, $z1, z2;
        androidx.compose.runtime.snapshots.Snapshot$Companion $r10;
        androidx.compose.runtime.snapshots.StateObject $r11, $r13;
        java.lang.Throwable $r15, $r16, $r17, r35;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap r22, $r28;
        kotlin.Unit $r23, r27;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap$Builder r25;
        androidx.compose.runtime.snapshots.Snapshot r34;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateMap;

        r1 := @parameter0: java.util.Map;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "from");

        r2 = r0;

     label01:
        r18 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateMapKt: java.lang.Object access$getSync$p()>();

        r19 = r18;

        entermonitor r19;

     label02:
        r20 = r2;

        $r5 = virtualinvoke r20.<androidx.compose.runtime.snapshots.SnapshotStateMap: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r5, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateMap.StateMapStateRecord<K of androidx.compose.runtime.snapshots.SnapshotStateMap, V of androidx.compose.runtime.snapshots.SnapshotStateMap>");

        $r6 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r5;

        $r14 = (androidx.compose.runtime.snapshots.StateRecord) $r6;

        $r7 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord current(androidx.compose.runtime.snapshots.StateRecord)>($r14);

        r21 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r7;

        r22 = virtualinvoke r21.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap getMap$runtime_release()>();

        i3 = virtualinvoke r21.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: int getModification$runtime_release()>();

        $r23 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label03:
        exitmonitor r19;

        goto label06;

     label04:
        $r15 := @caughtexception;

     label05:
        exitmonitor r19;

        throw $r15;

     label06:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r22);

        r25 = interfaceinvoke r22.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap$Builder builder()>();

        r26 = (java.util.Map) r25;

        interfaceinvoke r26.<java.util.Map: void putAll(java.util.Map)>(r1);

        r27 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r28 = interfaceinvoke r25.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap$Builder: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap build()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r28, r22);

        if $z0 != 0 goto label19;

        r29 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateMapKt: java.lang.Object access$getSync$p()>();

        r30 = r29;

        entermonitor r30;

     label07:
        $r8 = virtualinvoke r2.<androidx.compose.runtime.snapshots.SnapshotStateMap: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r8, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateMap.StateMapStateRecord<K of androidx.compose.runtime.snapshots.SnapshotStateMap, V of androidx.compose.runtime.snapshots.SnapshotStateMap>");

        $r9 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r8;

        $r32 = (androidx.compose.runtime.snapshots.StateRecord) $r9;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.Snapshot getSnapshotInitializer()>();

        r33 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r3 = r33;

        entermonitor r3;

     label08:
        $r10 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        r34 = virtualinvoke $r10.<androidx.compose.runtime.snapshots.Snapshot$Companion: androidx.compose.runtime.snapshots.Snapshot getCurrent()>();

        $r11 = (androidx.compose.runtime.snapshots.StateObject) r2;

        $r12 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord writableRecord(androidx.compose.runtime.snapshots.StateRecord,androidx.compose.runtime.snapshots.StateObject,androidx.compose.runtime.snapshots.Snapshot)>($r32, $r11, r34);

        $r4 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r12;

        $i1 = virtualinvoke $r4.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: int getModification$runtime_release()>();

        if $i1 != i3 goto label09;

        virtualinvoke $r4.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: void setMap$runtime_release(androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap)>($r28);

        i0 = virtualinvoke $r4.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: int getModification$runtime_release()>();

        $i2 = i0 + 1;

        virtualinvoke $r4.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: void setModification$runtime_release(int)>($i2);

        $z1 = 1;

        goto label10;

     label09:
        $z1 = 0;

     label10:
        z2 = $z1;

     label11:
        exitmonitor r3;

        goto label14;

     label12:
        $r17 := @caughtexception;

        r35 = $r17;

     label13:
        exitmonitor r3;

        throw r35;

     label14:
        $r13 = (androidx.compose.runtime.snapshots.StateObject) r2;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: void notifyWrite(androidx.compose.runtime.snapshots.Snapshot,androidx.compose.runtime.snapshots.StateObject)>(r34, $r13);

     label15:
        exitmonitor r30;

        goto label18;

     label16:
        $r16 := @caughtexception;

     label17:
        exitmonitor r30;

        throw $r16;

     label18:
        if z2 == 0 goto label01;

     label19:
        goto label20;

     label20:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label08 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch java.lang.Throwable from label07 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap r0, r2, r20;
        java.lang.Object r1, r3, r18, r19, r27, r29, r30, r33;
        androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord $r4, $r6, $r9, r21;
        int i0, $i1, $i2, i3;
        androidx.compose.runtime.snapshots.StateRecord $r5, $r7, $r8, $r12, $r14, $r32;
        boolean $z0, $z1, z2;
        androidx.compose.runtime.snapshots.Snapshot$Companion $r10;
        androidx.compose.runtime.snapshots.StateObject $r11, $r13;
        java.lang.Throwable $r15, $r16, $r17, r35;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap r22, $r28;
        kotlin.Unit $r23;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap$Builder r25;
        java.util.Map r26;
        androidx.compose.runtime.snapshots.Snapshot r34;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateMap;

        r1 := @parameter0: java.lang.Object;

        r2 = r0;

     label01:
        r18 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateMapKt: java.lang.Object access$getSync$p()>();

        r19 = r18;

        entermonitor r19;

     label02:
        r20 = r2;

        $r5 = virtualinvoke r20.<androidx.compose.runtime.snapshots.SnapshotStateMap: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r5, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateMap.StateMapStateRecord<K of androidx.compose.runtime.snapshots.SnapshotStateMap, V of androidx.compose.runtime.snapshots.SnapshotStateMap>");

        $r6 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r5;

        $r14 = (androidx.compose.runtime.snapshots.StateRecord) $r6;

        $r7 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord current(androidx.compose.runtime.snapshots.StateRecord)>($r14);

        r21 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r7;

        r22 = virtualinvoke r21.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap getMap$runtime_release()>();

        i3 = virtualinvoke r21.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: int getModification$runtime_release()>();

        $r23 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label03:
        exitmonitor r19;

        goto label06;

     label04:
        $r15 := @caughtexception;

     label05:
        exitmonitor r19;

        throw $r15;

     label06:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r22);

        r25 = interfaceinvoke r22.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap$Builder builder()>();

        r26 = (java.util.Map) r25;

        r27 = interfaceinvoke r26.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        $r28 = interfaceinvoke r25.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap$Builder: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap build()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r28, r22);

        if $z0 != 0 goto label19;

        r29 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateMapKt: java.lang.Object access$getSync$p()>();

        r30 = r29;

        entermonitor r30;

     label07:
        $r8 = virtualinvoke r2.<androidx.compose.runtime.snapshots.SnapshotStateMap: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r8, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateMap.StateMapStateRecord<K of androidx.compose.runtime.snapshots.SnapshotStateMap, V of androidx.compose.runtime.snapshots.SnapshotStateMap>");

        $r9 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r8;

        $r32 = (androidx.compose.runtime.snapshots.StateRecord) $r9;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.Snapshot getSnapshotInitializer()>();

        r33 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r3 = r33;

        entermonitor r3;

     label08:
        $r10 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        r34 = virtualinvoke $r10.<androidx.compose.runtime.snapshots.Snapshot$Companion: androidx.compose.runtime.snapshots.Snapshot getCurrent()>();

        $r11 = (androidx.compose.runtime.snapshots.StateObject) r2;

        $r12 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord writableRecord(androidx.compose.runtime.snapshots.StateRecord,androidx.compose.runtime.snapshots.StateObject,androidx.compose.runtime.snapshots.Snapshot)>($r32, $r11, r34);

        $r4 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r12;

        $i1 = virtualinvoke $r4.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: int getModification$runtime_release()>();

        if $i1 != i3 goto label09;

        virtualinvoke $r4.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: void setMap$runtime_release(androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap)>($r28);

        i0 = virtualinvoke $r4.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: int getModification$runtime_release()>();

        $i2 = i0 + 1;

        virtualinvoke $r4.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: void setModification$runtime_release(int)>($i2);

        $z1 = 1;

        goto label10;

     label09:
        $z1 = 0;

     label10:
        z2 = $z1;

     label11:
        exitmonitor r3;

        goto label14;

     label12:
        $r17 := @caughtexception;

        r35 = $r17;

     label13:
        exitmonitor r3;

        throw r35;

     label14:
        $r13 = (androidx.compose.runtime.snapshots.StateObject) r2;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: void notifyWrite(androidx.compose.runtime.snapshots.Snapshot,androidx.compose.runtime.snapshots.StateObject)>(r34, $r13);

     label15:
        exitmonitor r30;

        goto label18;

     label16:
        $r16 := @caughtexception;

     label17:
        exitmonitor r30;

        throw $r16;

     label18:
        if z2 == 0 goto label01;

     label19:
        goto label20;

     label20:
        return r27;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label08 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch java.lang.Throwable from label07 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    public final int getModification$runtime_release()
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap r0;
        androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord $r1;
        int $i0;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateMap;

        $r1 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateMap: androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord getReadable$runtime_release()>();

        $i0 = virtualinvoke $r1.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: int getModification$runtime_release()>();

        return $i0;
    }

    public final boolean removeValue$runtime_release(java.lang.Object)
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap r0;
        java.lang.Object r1, r3, $r7, $r9, $r11;
        java.lang.Iterable $r2;
        java.util.Map$Entry r4, $r6;
        java.util.Set $r5;
        boolean $z1, $z2, $z5;
        java.util.Iterator $r10;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateMap;

        r1 := @parameter0: java.lang.Object;

        $r5 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateMap: java.util.Set entrySet()>();

        $r2 = (java.lang.Iterable) $r5;

        $r10 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        r3 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) r3;

        $r9 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r9, r1);

        if $z2 == 0 goto label1;

        $r11 = r3;

        goto label3;

     label2:
        $r11 = null;

     label3:
        $r6 = (java.util.Map$Entry) $r11;

        if $r6 == null goto label5;

        $r7 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateMap: java.lang.Object remove(java.lang.Object)>($r7);

        if 1 != 1 goto label4;

        $z5 = 1;

        goto label6;

     label4:
        $z5 = 0;

        goto label6;

     label5:
        $z5 = 0;

     label6:
        return $z5;
    }

    public final androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord getReadable$runtime_release()
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap r0;
        androidx.compose.runtime.snapshots.StateRecord $r1, $r4, $r5;
        androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord $r2, $r6;
        androidx.compose.runtime.snapshots.StateObject $r3;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateMap;

        $r1 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateMap: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r1, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateMap.StateMapStateRecord<K of androidx.compose.runtime.snapshots.SnapshotStateMap, V of androidx.compose.runtime.snapshots.SnapshotStateMap>");

        $r2 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r1;

        $r4 = (androidx.compose.runtime.snapshots.StateRecord) $r2;

        $r3 = (androidx.compose.runtime.snapshots.StateObject) r0;

        $r5 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord readable(androidx.compose.runtime.snapshots.StateRecord,androidx.compose.runtime.snapshots.StateObject)>($r4, $r3);

        $r6 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r5;

        return $r6;
    }

    public static void getReadable$runtime_release$annotations()
    {
        return;
    }

    public final boolean removeIf$runtime_release(kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap r0, r2, r28;
        kotlin.jvm.functions.Function1 r1;
        java.util.Map r3;
        java.util.Iterator r4;
        java.util.Map$Entry r5;
        java.lang.Object r6, $r19, $r20, $r22, r26, r27, r36, r37, r40;
        androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord $r7, $r9, $r13, r29;
        int i0, $i1, $i2, i3;
        androidx.compose.runtime.snapshots.StateRecord $r8, $r10, $r12, $r16, $r18, $r39;
        java.util.Set $r11;
        boolean $z0, $z1, z2, $z3, $z4, z5, z7;
        androidx.compose.runtime.snapshots.Snapshot$Companion $r14;
        androidx.compose.runtime.snapshots.StateObject $r15, $r17;
        java.lang.Boolean $r21;
        java.lang.Throwable $r23, $r24, $r25, r42, r43;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap r30, $r35;
        kotlin.Unit $r31, r34;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap$Builder r33;
        androidx.compose.runtime.snapshots.Snapshot r41;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateMap;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "predicate");

        z2 = 0;

        r2 = r0;

     label01:
        r26 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateMapKt: java.lang.Object access$getSync$p()>();

        r27 = r26;

        entermonitor r27;

     label02:
        r28 = r2;

        $r8 = virtualinvoke r28.<androidx.compose.runtime.snapshots.SnapshotStateMap: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r8, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateMap.StateMapStateRecord<K of androidx.compose.runtime.snapshots.SnapshotStateMap, V of androidx.compose.runtime.snapshots.SnapshotStateMap>");

        $r9 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r8;

        $r18 = (androidx.compose.runtime.snapshots.StateRecord) $r9;

        $r10 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord current(androidx.compose.runtime.snapshots.StateRecord)>($r18);

        r29 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r10;

        r30 = virtualinvoke r29.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap getMap$runtime_release()>();

        i3 = virtualinvoke r29.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: int getModification$runtime_release()>();

        $r31 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label03:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r27;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        goto label06;

     label04:
        $r25 := @caughtexception;

     label05:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r27;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw $r25;

     label06:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r30);

        r33 = interfaceinvoke r30.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap$Builder builder()>();

        r3 = (java.util.Map) r33;

        $r11 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateMap: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label08;

        $r19 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r19;

        $r20 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r5);

        $r21 = (java.lang.Boolean) $r20;

        $z1 = virtualinvoke $r21.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label07;

        $r22 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r22);

        z2 = 1;

        goto label07;

     label08:
        r34 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r35 = interfaceinvoke r33.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap$Builder: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap build()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r35, r30);

        if $z0 != 0 goto label21;

        r36 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateMapKt: java.lang.Object access$getSync$p()>();

        r37 = r36;

        entermonitor r37;

     label09:
        $r12 = virtualinvoke r2.<androidx.compose.runtime.snapshots.SnapshotStateMap: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r12, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateMap.StateMapStateRecord<K of androidx.compose.runtime.snapshots.SnapshotStateMap, V of androidx.compose.runtime.snapshots.SnapshotStateMap>");

        $r13 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r12;

        $r39 = (androidx.compose.runtime.snapshots.StateRecord) $r13;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.Snapshot getSnapshotInitializer()>();

        r40 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r6 = r40;

        entermonitor r6;

     label10:
        $r14 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        r41 = virtualinvoke $r14.<androidx.compose.runtime.snapshots.Snapshot$Companion: androidx.compose.runtime.snapshots.Snapshot getCurrent()>();

        $r15 = (androidx.compose.runtime.snapshots.StateObject) r2;

        $r16 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord writableRecord(androidx.compose.runtime.snapshots.StateRecord,androidx.compose.runtime.snapshots.StateObject,androidx.compose.runtime.snapshots.Snapshot)>($r39, $r15, r41);

        $r7 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r16;

        $i1 = virtualinvoke $r7.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: int getModification$runtime_release()>();

        if $i1 != i3 goto label11;

        virtualinvoke $r7.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: void setMap$runtime_release(androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap)>($r35);

        i0 = virtualinvoke $r7.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: int getModification$runtime_release()>();

        $i2 = i0 + 1;

        virtualinvoke $r7.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: void setModification$runtime_release(int)>($i2);

        $z4 = 1;

        goto label12;

     label11:
        $z4 = 0;

     label12:
        z5 = $z4;

     label13:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r6;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        goto label16;

     label14:
        $r23 := @caughtexception;

        r42 = $r23;

     label15:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r6;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw r42;

     label16:
        $r17 = (androidx.compose.runtime.snapshots.StateObject) r2;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: void notifyWrite(androidx.compose.runtime.snapshots.Snapshot,androidx.compose.runtime.snapshots.StateObject)>(r41, $r17);

        z7 = z5;

     label17:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r37;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        goto label20;

     label18:
        $r24 := @caughtexception;

        r43 = $r24;

     label19:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r37;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw r43;

     label20:
        if z7 == 0 goto label01;

     label21:
        goto label22;

     label22:
        return z2;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label10 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
        catch java.lang.Throwable from label09 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
    }

    public final boolean any$runtime_release(kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap r0;
        kotlin.jvm.functions.Function1 r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord $r4;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap $r5;
        java.util.Set $r6;
        androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableSet $r7;
        boolean $z1, $z2;
        java.lang.Object $r8, $r9;
        java.lang.Boolean $r10;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateMap;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "predicate");

        $r4 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateMap: androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord getReadable$runtime_release()>();

        $r5 = virtualinvoke $r4.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap getMap$runtime_release()>();

        $r6 = interfaceinvoke $r5.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap: java.util.Set entrySet()>();

        $r7 = (androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableSet) $r6;

        r2 = interfaceinvoke $r7.<androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableSet: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r8;

        $r9 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r3);

        $r10 = (java.lang.Boolean) $r9;

        $z2 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 == 0 goto label1;

        return 1;

     label2:
        return 0;
    }

    public final boolean all$runtime_release(kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap r0;
        kotlin.jvm.functions.Function1 r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord $r4;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap $r5;
        java.util.Set $r6;
        androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableSet $r7;
        boolean $z1, $z2;
        java.lang.Object $r8, $r9;
        java.lang.Boolean $r10;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateMap;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "predicate");

        $r4 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateMap: androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord getReadable$runtime_release()>();

        $r5 = virtualinvoke $r4.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap getMap$runtime_release()>();

        $r6 = interfaceinvoke $r5.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap: java.util.Set entrySet()>();

        $r7 = (androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableSet) $r6;

        r2 = interfaceinvoke $r7.<androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableSet: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r8;

        $r9 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r3);

        $r10 = (java.lang.Boolean) $r9;

        $z2 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 != 0 goto label1;

        return 0;

     label2:
        return 1;
    }

    public final java.util.Map getDebuggerDisplayValue()
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap r0, r1;
        androidx.compose.runtime.snapshots.StateRecord $r2, $r4, $r6;
        androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord $r3, $r5;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap $r7;
        java.util.Map $r8;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateMap;

        r1 = r0;

        $r4 = virtualinvoke r1.<androidx.compose.runtime.snapshots.SnapshotStateMap: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r4, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateMap.StateMapStateRecord<K of androidx.compose.runtime.snapshots.SnapshotStateMap, V of androidx.compose.runtime.snapshots.SnapshotStateMap>");

        $r5 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r4;

        $r2 = (androidx.compose.runtime.snapshots.StateRecord) $r5;

        $r6 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord current(androidx.compose.runtime.snapshots.StateRecord)>($r2);

        $r3 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r6;

        $r7 = virtualinvoke $r3.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap getMap$runtime_release()>();

        $r8 = (java.util.Map) $r7;

        return $r8;
    }

    public static void getDebuggerDisplayValue$annotations()
    {
        return;
    }

    private final java.lang.Object withCurrent(kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap r0;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.runtime.snapshots.StateRecord $r2, $r3, $r5;
        androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateMap;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        $r3 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateMap: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r3, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateMap.StateMapStateRecord<K of androidx.compose.runtime.snapshots.SnapshotStateMap, V of androidx.compose.runtime.snapshots.SnapshotStateMap>");

        $r4 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r3;

        $r2 = (androidx.compose.runtime.snapshots.StateRecord) $r4;

        $r5 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord current(androidx.compose.runtime.snapshots.StateRecord)>($r2);

        $r6 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        return $r6;
    }

    private final java.lang.Object writable(kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap r0;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.runtime.snapshots.StateRecord $r2, $r4, $r8;
        java.lang.Object r3, r11, r13;
        androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord $r5;
        androidx.compose.runtime.snapshots.Snapshot$Companion $r6;
        androidx.compose.runtime.snapshots.StateObject $r7, $r9;
        java.lang.Throwable $r10, r14;
        androidx.compose.runtime.snapshots.Snapshot r12;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateMap;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        $r4 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateMap: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r4, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateMap.StateMapStateRecord<K of androidx.compose.runtime.snapshots.SnapshotStateMap, V of androidx.compose.runtime.snapshots.SnapshotStateMap>");

        $r5 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r4;

        $r2 = (androidx.compose.runtime.snapshots.StateRecord) $r5;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.Snapshot getSnapshotInitializer()>();

        r11 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r3 = r11;

        entermonitor r3;

     label1:
        $r6 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        r12 = virtualinvoke $r6.<androidx.compose.runtime.snapshots.Snapshot$Companion: androidx.compose.runtime.snapshots.Snapshot getCurrent()>();

        $r7 = (androidx.compose.runtime.snapshots.StateObject) r0;

        $r8 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord writableRecord(androidx.compose.runtime.snapshots.StateRecord,androidx.compose.runtime.snapshots.StateObject,androidx.compose.runtime.snapshots.Snapshot)>($r2, $r7, r12);

        r13 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r8);

     label2:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r3;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        goto label5;

     label3:
        $r10 := @caughtexception;

        r14 = $r10;

     label4:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r3;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw r14;

     label5:
        $r9 = (androidx.compose.runtime.snapshots.StateObject) r0;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: void notifyWrite(androidx.compose.runtime.snapshots.Snapshot,androidx.compose.runtime.snapshots.StateObject)>(r12, $r9);

        return r13;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private final java.lang.Object mutate(kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap r0, r19;
        kotlin.jvm.functions.Function1 r1;
        java.lang.Object r2, r17, r18, r25, r27, r28, r31;
        androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord $r3, $r5, $r8, r20;
        int i0, $i1, $i2, i3;
        androidx.compose.runtime.snapshots.StateRecord $r4, $r6, $r7, $r11, $r13, $r30;
        boolean $z0, $z1, z2, z4;
        androidx.compose.runtime.snapshots.Snapshot$Companion $r9;
        androidx.compose.runtime.snapshots.StateObject $r10, $r12;
        java.lang.Throwable $r14, $r15, $r16, r33, r34;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap r21, $r26;
        kotlin.Unit $r22;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap$Builder r24;
        androidx.compose.runtime.snapshots.Snapshot r32;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateMap;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

     label01:
        r17 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateMapKt: java.lang.Object access$getSync$p()>();

        r18 = r17;

        entermonitor r18;

     label02:
        r19 = r0;

        $r4 = virtualinvoke r19.<androidx.compose.runtime.snapshots.SnapshotStateMap: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r4, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateMap.StateMapStateRecord<K of androidx.compose.runtime.snapshots.SnapshotStateMap, V of androidx.compose.runtime.snapshots.SnapshotStateMap>");

        $r5 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r4;

        $r13 = (androidx.compose.runtime.snapshots.StateRecord) $r5;

        $r6 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord current(androidx.compose.runtime.snapshots.StateRecord)>($r13);

        r20 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r6;

        r21 = virtualinvoke r20.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap getMap$runtime_release()>();

        i3 = virtualinvoke r20.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: int getModification$runtime_release()>();

        $r22 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label03:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r18;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        goto label06;

     label04:
        $r16 := @caughtexception;

     label05:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r18;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw $r16;

     label06:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r21);

        r24 = interfaceinvoke r21.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap$Builder builder()>();

        r25 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r24);

        $r26 = interfaceinvoke r24.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap$Builder: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap build()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r26, r21);

        if $z0 != 0 goto label19;

        r27 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateMapKt: java.lang.Object access$getSync$p()>();

        r28 = r27;

        entermonitor r28;

     label07:
        $r7 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateMap: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r7, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateMap.StateMapStateRecord<K of androidx.compose.runtime.snapshots.SnapshotStateMap, V of androidx.compose.runtime.snapshots.SnapshotStateMap>");

        $r8 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r7;

        $r30 = (androidx.compose.runtime.snapshots.StateRecord) $r8;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.Snapshot getSnapshotInitializer()>();

        r31 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r2 = r31;

        entermonitor r2;

     label08:
        $r9 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        r32 = virtualinvoke $r9.<androidx.compose.runtime.snapshots.Snapshot$Companion: androidx.compose.runtime.snapshots.Snapshot getCurrent()>();

        $r10 = (androidx.compose.runtime.snapshots.StateObject) r0;

        $r11 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord writableRecord(androidx.compose.runtime.snapshots.StateRecord,androidx.compose.runtime.snapshots.StateObject,androidx.compose.runtime.snapshots.Snapshot)>($r30, $r10, r32);

        $r3 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r11;

        $i1 = virtualinvoke $r3.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: int getModification$runtime_release()>();

        if $i1 != i3 goto label09;

        virtualinvoke $r3.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: void setMap$runtime_release(androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap)>($r26);

        i0 = virtualinvoke $r3.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: int getModification$runtime_release()>();

        $i2 = i0 + 1;

        virtualinvoke $r3.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: void setModification$runtime_release(int)>($i2);

        $z1 = 1;

        goto label10;

     label09:
        $z1 = 0;

     label10:
        z2 = $z1;

     label11:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r2;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        goto label14;

     label12:
        $r15 := @caughtexception;

        r33 = $r15;

     label13:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r2;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw r33;

     label14:
        $r12 = (androidx.compose.runtime.snapshots.StateObject) r0;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: void notifyWrite(androidx.compose.runtime.snapshots.Snapshot,androidx.compose.runtime.snapshots.StateObject)>(r32, $r12);

        z4 = z2;

     label15:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r28;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        goto label18;

     label16:
        $r14 := @caughtexception;

        r34 = $r14;

     label17:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r28;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw r34;

     label18:
        if z4 == 0 goto label01;

     label19:
        goto label20;

     label20:
        return r25;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label08 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch java.lang.Throwable from label07 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    private final void update(kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap r0, r2, r8;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.runtime.snapshots.StateRecord $r3, $r9, $r12, $r14, $r18, $r22;
        androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord $r4, $r11, $r13, $r19;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap r5, $r15, $r17;
        java.lang.Object r6, r7, r10, $r16, r26;
        int i0, $i1;
        androidx.compose.runtime.snapshots.Snapshot$Companion $r20;
        androidx.compose.runtime.snapshots.StateObject $r21, $r23;
        java.lang.Throwable $r24, $r25, r28, r29;
        androidx.compose.runtime.snapshots.Snapshot r27;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateMap;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        r2 = r0;

        $r12 = virtualinvoke r2.<androidx.compose.runtime.snapshots.SnapshotStateMap: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r12, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateMap.StateMapStateRecord<K of androidx.compose.runtime.snapshots.SnapshotStateMap, V of androidx.compose.runtime.snapshots.SnapshotStateMap>");

        $r13 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r12;

        $r3 = (androidx.compose.runtime.snapshots.StateRecord) $r13;

        $r14 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord current(androidx.compose.runtime.snapshots.StateRecord)>($r3);

        $r4 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r14;

        $r15 = virtualinvoke $r4.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap getMap$runtime_release()>();

        $r16 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r15);

        r5 = (androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap) $r16;

        $r17 = virtualinvoke $r4.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap getMap$runtime_release()>();

        if r5 == $r17 goto label10;

        r6 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateMapKt: java.lang.Object access$getSync$p()>();

        r7 = r6;

        entermonitor r7;

     label01:
        r8 = r0;

        $r18 = virtualinvoke r8.<androidx.compose.runtime.snapshots.SnapshotStateMap: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r18, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateMap.StateMapStateRecord<K of androidx.compose.runtime.snapshots.SnapshotStateMap, V of androidx.compose.runtime.snapshots.SnapshotStateMap>");

        $r19 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r18;

        $r9 = (androidx.compose.runtime.snapshots.StateRecord) $r19;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.Snapshot getSnapshotInitializer()>();

        r26 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r10 = r26;

        entermonitor r10;

     label02:
        $r20 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        r27 = virtualinvoke $r20.<androidx.compose.runtime.snapshots.Snapshot$Companion: androidx.compose.runtime.snapshots.Snapshot getCurrent()>();

        $r21 = (androidx.compose.runtime.snapshots.StateObject) r8;

        $r22 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord writableRecord(androidx.compose.runtime.snapshots.StateRecord,androidx.compose.runtime.snapshots.StateObject,androidx.compose.runtime.snapshots.Snapshot)>($r9, $r21, r27);

        $r11 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r22;

        virtualinvoke $r11.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: void setMap$runtime_release(androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap)>(r5);

        i0 = virtualinvoke $r11.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: int getModification$runtime_release()>();

        $i1 = i0 + 1;

        virtualinvoke $r11.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: void setModification$runtime_release(int)>($i1);

     label03:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r10;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        goto label06;

     label04:
        $r24 := @caughtexception;

        r28 = $r24;

     label05:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r10;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw r28;

     label06:
        $r23 = (androidx.compose.runtime.snapshots.StateObject) r8;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: void notifyWrite(androidx.compose.runtime.snapshots.Snapshot,androidx.compose.runtime.snapshots.StateObject)>(r27, $r23);

     label07:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r7;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        goto label10;

     label08:
        $r25 := @caughtexception;

        r29 = $r25;

     label09:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r7;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw r29;

     label10:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public final volatile int size()
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap r0;
        int $i0;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateMap;

        $i0 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateMap: int getSize()>();

        return $i0;
    }

    public final volatile java.util.Set entrySet()
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap r0;
        java.util.Set $r1;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateMap;

        $r1 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateMap: java.util.Set getEntries()>();

        return $r1;
    }

    public final volatile java.util.Set keySet()
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap r0;
        java.util.Set $r1;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateMap;

        $r1 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateMap: java.util.Set getKeys()>();

        return $r1;
    }

    public final volatile java.util.Collection values()
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap r0;
        java.util.Collection $r1;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateMap;

        $r1 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotStateMap: java.util.Collection getValues()>();

        return $r1;
    }

androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord
<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap map>
<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: int modification>
    public void <init>(androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap)
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap r1;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord;

        r1 := @parameter0: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "map");

        specialinvoke r0.<androidx.compose.runtime.snapshots.StateRecord: void <init>()>();

        r0.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap map> = r1;

        return;
    }

    public final androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap getMap$runtime_release()
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap $r1;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord;

        $r1 = r0.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap map>;

        return $r1;
    }

    public final void setMap$runtime_release(androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap)
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap r1;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord;

        r1 := @parameter0: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap map> = r1;

        return;
    }

    public final int getModification$runtime_release()
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord r0;
        int $i0;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord;

        $i0 = r0.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: int modification>;

        return $i0;
    }

    public final void setModification$runtime_release(int)
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord r0;
        int i0;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord;

        i0 := @parameter0: int;

        r0.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: int modification> = i0;

        return;
    }

    public void assign(androidx.compose.runtime.snapshots.StateRecord)
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord r0, r2;
        androidx.compose.runtime.snapshots.StateRecord r1;
        java.lang.Object r3, r4;
        kotlin.Unit r5;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap $r6;
        int $i0;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord;

        r1 := @parameter0: androidx.compose.runtime.snapshots.StateRecord;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        r2 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) r1;

        r3 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateMapKt: java.lang.Object access$getSync$p()>();

        r4 = r3;

        entermonitor r4;

        $r6 = r2.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap map>;

        r0.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap map> = $r6;

        $i0 = r2.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: int modification>;

        r0.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: int modification> = $i0;

        r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        exitmonitor r4;

        goto label1;

     label1:
        return;
    }

    public androidx.compose.runtime.snapshots.StateRecord create()
    {
        androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord r0, $r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap $r2;
        androidx.compose.runtime.snapshots.StateRecord $r3;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord;

        $r1 = new androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord;

        $r2 = r0.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap map>;

        specialinvoke $r1.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: void <init>(androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap)>($r2);

        $r3 = (androidx.compose.runtime.snapshots.StateRecord) $r1;

        return $r3;
    }

