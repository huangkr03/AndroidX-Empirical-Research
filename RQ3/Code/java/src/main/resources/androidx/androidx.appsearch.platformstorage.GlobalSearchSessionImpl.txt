androidx.appsearch.platformstorage.GlobalSearchSessionImpl
<androidx.appsearch.platformstorage.GlobalSearchSessionImpl: android.app.appsearch.GlobalSearchSession mPlatformSession>
<androidx.appsearch.platformstorage.GlobalSearchSessionImpl: java.util.concurrent.Executor mExecutor>
<androidx.appsearch.platformstorage.GlobalSearchSessionImpl: androidx.appsearch.app.Features mFeatures>
<androidx.appsearch.platformstorage.GlobalSearchSessionImpl: java.util.Map mObserverCallbacksLocked>
    void <init>(android.app.appsearch.GlobalSearchSession, java.util.concurrent.Executor, androidx.appsearch.app.Features)
    {
        androidx.appsearch.platformstorage.GlobalSearchSessionImpl r0;
        android.app.appsearch.GlobalSearchSession r1, $r6;
        java.util.concurrent.Executor r2, $r8;
        androidx.appsearch.app.Features r3, $r10;
        androidx.collection.ArrayMap $r4;
        java.lang.Object $r5, $r7, $r9;

        r0 := @this: androidx.appsearch.platformstorage.GlobalSearchSessionImpl;

        r1 := @parameter0: android.app.appsearch.GlobalSearchSession;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: androidx.appsearch.app.Features;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new androidx.collection.ArrayMap;

        specialinvoke $r4.<androidx.collection.ArrayMap: void <init>()>();

        r0.<androidx.appsearch.platformstorage.GlobalSearchSessionImpl: java.util.Map mObserverCallbacksLocked> = $r4;

        $r5 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r6 = (android.app.appsearch.GlobalSearchSession) $r5;

        r0.<androidx.appsearch.platformstorage.GlobalSearchSessionImpl: android.app.appsearch.GlobalSearchSession mPlatformSession> = $r6;

        $r7 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r8 = (java.util.concurrent.Executor) $r7;

        r0.<androidx.appsearch.platformstorage.GlobalSearchSessionImpl: java.util.concurrent.Executor mExecutor> = $r8;

        $r9 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r10 = (androidx.appsearch.app.Features) $r9;

        r0.<androidx.appsearch.platformstorage.GlobalSearchSessionImpl: androidx.appsearch.app.Features mFeatures> = $r10;

        return;
    }

    public com.google.common.util.concurrent.ListenableFuture getByDocumentIdAsync(java.lang.String, java.lang.String, androidx.appsearch.app.GetByDocumentIdRequest)
    {
        androidx.appsearch.platformstorage.GlobalSearchSessionImpl r0;
        java.lang.String r1, r2;
        androidx.appsearch.app.GetByDocumentIdRequest r3;
        androidx.concurrent.futures.ResolvableFuture r4;
        boolean $z0;
        android.app.appsearch.GlobalSearchSession $r8;
        android.app.appsearch.GetByDocumentIdRequest $r9;
        androidx.appsearch.platformstorage.util.BatchResultCallbackAdapter $r10;
        java.util.concurrent.Executor $r11;
        java.util.function.Function $r12;
        java.lang.UnsupportedOperationException $r13;

        r0 := @this: androidx.appsearch.platformstorage.GlobalSearchSessionImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.appsearch.app.GetByDocumentIdRequest;

        $z0 = staticinvoke <androidx.core.os.BuildCompat: boolean isAtLeastT()>();

        if $z0 != 0 goto label1;

        $r13 = new java.lang.UnsupportedOperationException;

        specialinvoke $r13.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("GLOBAL_SEARCH_SESSION_GET_BY_ID is not supported on this AppSearch implementation.");

        throw $r13;

     label1:
        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        r4 = staticinvoke <androidx.concurrent.futures.ResolvableFuture: androidx.concurrent.futures.ResolvableFuture create()>();

        $r8 = r0.<androidx.appsearch.platformstorage.GlobalSearchSessionImpl: android.app.appsearch.GlobalSearchSession mPlatformSession>;

        $r9 = staticinvoke <androidx.appsearch.platformstorage.converter.RequestToPlatformConverter: android.app.appsearch.GetByDocumentIdRequest toPlatformGetByDocumentIdRequest(androidx.appsearch.app.GetByDocumentIdRequest)>(r3);

        $r11 = r0.<androidx.appsearch.platformstorage.GlobalSearchSessionImpl: java.util.concurrent.Executor mExecutor>;

        $r10 = new androidx.appsearch.platformstorage.util.BatchResultCallbackAdapter;

        $r12 = dynamicinvoke "apply" <java.util.function.Function ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.appsearch.platformstorage.converter.GenericDocumentToPlatformConverter: androidx.appsearch.app.GenericDocument toJetpackGenericDocument(android.app.appsearch.GenericDocument)>, methodtype: androidx.appsearch.app.GenericDocument __METHODTYPE__(android.app.appsearch.GenericDocument));

        specialinvoke $r10.<androidx.appsearch.platformstorage.util.BatchResultCallbackAdapter: void <init>(androidx.concurrent.futures.ResolvableFuture,java.util.function.Function)>(r4, $r12);

        virtualinvoke $r8.<android.app.appsearch.GlobalSearchSession: void getByDocumentId(java.lang.String,java.lang.String,android.app.appsearch.GetByDocumentIdRequest,java.util.concurrent.Executor,android.app.appsearch.BatchResultCallback)>(r1, r2, $r9, $r11, $r10);

        return r4;
    }

    public androidx.appsearch.app.SearchResults search(java.lang.String, androidx.appsearch.app.SearchSpec)
    {
        androidx.appsearch.platformstorage.GlobalSearchSessionImpl r0;
        java.lang.String r1;
        androidx.appsearch.app.SearchSpec r2;
        android.app.appsearch.SearchResults r3;
        android.app.appsearch.GlobalSearchSession $r6;
        android.app.appsearch.SearchSpec $r7;
        androidx.appsearch.platformstorage.SearchResultsImpl $r8;
        java.util.concurrent.Executor $r9;

        r0 := @this: androidx.appsearch.platformstorage.GlobalSearchSessionImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.appsearch.app.SearchSpec;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r6 = r0.<androidx.appsearch.platformstorage.GlobalSearchSessionImpl: android.app.appsearch.GlobalSearchSession mPlatformSession>;

        $r7 = staticinvoke <androidx.appsearch.platformstorage.converter.SearchSpecToPlatformConverter: android.app.appsearch.SearchSpec toPlatformSearchSpec(androidx.appsearch.app.SearchSpec)>(r2);

        r3 = virtualinvoke $r6.<android.app.appsearch.GlobalSearchSession: android.app.appsearch.SearchResults search(java.lang.String,android.app.appsearch.SearchSpec)>(r1, $r7);

        $r8 = new androidx.appsearch.platformstorage.SearchResultsImpl;

        $r9 = r0.<androidx.appsearch.platformstorage.GlobalSearchSessionImpl: java.util.concurrent.Executor mExecutor>;

        specialinvoke $r8.<androidx.appsearch.platformstorage.SearchResultsImpl: void <init>(android.app.appsearch.SearchResults,androidx.appsearch.app.SearchSpec,java.util.concurrent.Executor)>(r3, r2, $r9);

        return $r8;
    }

    public com.google.common.util.concurrent.ListenableFuture reportSystemUsageAsync(androidx.appsearch.app.ReportSystemUsageRequest)
    {
        androidx.appsearch.platformstorage.GlobalSearchSessionImpl r0;
        androidx.appsearch.app.ReportSystemUsageRequest r1;
        androidx.concurrent.futures.ResolvableFuture r2;
        android.app.appsearch.GlobalSearchSession $r4;
        android.app.appsearch.ReportSystemUsageRequest $r5;
        java.util.concurrent.Executor $r6;
        java.util.function.Consumer $r7;

        r0 := @this: androidx.appsearch.platformstorage.GlobalSearchSessionImpl;

        r1 := @parameter0: androidx.appsearch.app.ReportSystemUsageRequest;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r2 = staticinvoke <androidx.concurrent.futures.ResolvableFuture: androidx.concurrent.futures.ResolvableFuture create()>();

        $r4 = r0.<androidx.appsearch.platformstorage.GlobalSearchSessionImpl: android.app.appsearch.GlobalSearchSession mPlatformSession>;

        $r5 = staticinvoke <androidx.appsearch.platformstorage.converter.RequestToPlatformConverter: android.app.appsearch.ReportSystemUsageRequest toPlatformReportSystemUsageRequest(androidx.appsearch.app.ReportSystemUsageRequest)>(r1);

        $r6 = r0.<androidx.appsearch.platformstorage.GlobalSearchSessionImpl: java.util.concurrent.Executor mExecutor>;

        $r7 = dynamicinvoke "accept" <java.util.function.Consumer (androidx.concurrent.futures.ResolvableFuture)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.appsearch.platformstorage.GlobalSearchSessionImpl: void lambda$reportSystemUsageAsync$0(androidx.concurrent.futures.ResolvableFuture,android.app.appsearch.AppSearchResult)>, methodtype: void __METHODTYPE__(android.app.appsearch.AppSearchResult));

        virtualinvoke $r4.<android.app.appsearch.GlobalSearchSession: void reportSystemUsage(android.app.appsearch.ReportSystemUsageRequest,java.util.concurrent.Executor,java.util.function.Consumer)>($r5, $r6, $r7);

        return r2;
    }

    public com.google.common.util.concurrent.ListenableFuture getSchemaAsync(java.lang.String, java.lang.String)
    {
        androidx.appsearch.platformstorage.GlobalSearchSessionImpl r0;
        java.lang.String r1, r2;
        androidx.concurrent.futures.ResolvableFuture r3;
        boolean $z0;
        android.app.appsearch.GlobalSearchSession $r4;
        java.util.concurrent.Executor $r5;
        java.util.function.Consumer $r6;
        java.lang.UnsupportedOperationException $r7;

        r0 := @this: androidx.appsearch.platformstorage.GlobalSearchSessionImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = staticinvoke <androidx.core.os.BuildCompat: boolean isAtLeastT()>();

        if $z0 != 0 goto label1;

        $r7 = new java.lang.UnsupportedOperationException;

        specialinvoke $r7.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("GLOBAL_SEARCH_SESSION_GET_SCHEMA is not supported on this AppSearch implementation.");

        throw $r7;

     label1:
        r3 = staticinvoke <androidx.concurrent.futures.ResolvableFuture: androidx.concurrent.futures.ResolvableFuture create()>();

        $r4 = r0.<androidx.appsearch.platformstorage.GlobalSearchSessionImpl: android.app.appsearch.GlobalSearchSession mPlatformSession>;

        $r5 = r0.<androidx.appsearch.platformstorage.GlobalSearchSessionImpl: java.util.concurrent.Executor mExecutor>;

        $r6 = dynamicinvoke "accept" <java.util.function.Consumer (androidx.concurrent.futures.ResolvableFuture)>(r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.appsearch.platformstorage.GlobalSearchSessionImpl: void lambda$getSchemaAsync$1(androidx.concurrent.futures.ResolvableFuture,android.app.appsearch.AppSearchResult)>, methodtype: void __METHODTYPE__(android.app.appsearch.AppSearchResult));

        virtualinvoke $r4.<android.app.appsearch.GlobalSearchSession: void getSchema(java.lang.String,java.lang.String,java.util.concurrent.Executor,java.util.function.Consumer)>(r1, r2, $r5, $r6);

        return r3;
    }

    public androidx.appsearch.app.Features getFeatures()
    {
        androidx.appsearch.platformstorage.GlobalSearchSessionImpl r0;
        androidx.appsearch.app.Features $r1;

        r0 := @this: androidx.appsearch.platformstorage.GlobalSearchSessionImpl;

        $r1 = r0.<androidx.appsearch.platformstorage.GlobalSearchSessionImpl: androidx.appsearch.app.Features mFeatures>;

        return $r1;
    }

    public void registerObserverCallback(java.lang.String, androidx.appsearch.observer.ObserverSpec, java.util.concurrent.Executor, androidx.appsearch.observer.ObserverCallback) throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.platformstorage.GlobalSearchSessionImpl r0;
        java.lang.String r1, $r23;
        androidx.appsearch.observer.ObserverSpec r2;
        java.util.concurrent.Executor r3;
        androidx.appsearch.observer.ObserverCallback r4;
        java.util.Map r5, $r12, $r13, $r17;
        java.lang.Throwable r6, r7, $r21, $r24, $r25;
        boolean $z0;
        java.lang.Object $r14, r26;
        android.app.appsearch.GlobalSearchSession $r15;
        android.app.appsearch.observer.ObserverSpec $r16;
        int $i0;
        java.lang.UnsupportedOperationException r27;
        androidx.appsearch.platformstorage.GlobalSearchSessionImpl$1 r28;
        androidx.appsearch.exceptions.AppSearchException r29;
        android.app.appsearch.observer.ObserverCallback r30;

        r0 := @this: androidx.appsearch.platformstorage.GlobalSearchSessionImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.appsearch.observer.ObserverSpec;

        r3 := @parameter2: java.util.concurrent.Executor;

        r4 := @parameter3: androidx.appsearch.observer.ObserverCallback;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r4);

        $z0 = staticinvoke <androidx.core.os.BuildCompat: boolean isAtLeastT()>();

        if $z0 != 0 goto label01;

        r27 = new java.lang.UnsupportedOperationException;

        specialinvoke r27.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("GLOBAL_SEARCH_SESSION_REGISTER_OBSERVER_CALLBACK is not supported on this AppSearch implementation");

        throw r27;

     label01:
        $r12 = r0.<androidx.appsearch.platformstorage.GlobalSearchSessionImpl: java.util.Map mObserverCallbacksLocked>;

        r5 = $r12;

        entermonitor $r12;

     label02:
        $r13 = r0.<androidx.appsearch.platformstorage.GlobalSearchSessionImpl: java.util.Map mObserverCallbacksLocked>;

        $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        r26 = (android.app.appsearch.observer.ObserverCallback) $r14;

        if r26 != null goto label03;

        r28 = new androidx.appsearch.platformstorage.GlobalSearchSessionImpl$1;

        specialinvoke r28.<androidx.appsearch.platformstorage.GlobalSearchSessionImpl$1: void <init>(androidx.appsearch.platformstorage.GlobalSearchSessionImpl,androidx.appsearch.observer.ObserverCallback)>(r0, r4);

        r26 = r28;

     label03:
        $r15 = r0.<androidx.appsearch.platformstorage.GlobalSearchSessionImpl: android.app.appsearch.GlobalSearchSession mPlatformSession>;

        $r16 = staticinvoke <androidx.appsearch.platformstorage.converter.ObserverSpecToPlatformConverter: android.app.appsearch.observer.ObserverSpec toPlatformObserverSpec(androidx.appsearch.observer.ObserverSpec)>(r2);

        r30 = (android.app.appsearch.observer.ObserverCallback) r26;

        virtualinvoke $r15.<android.app.appsearch.GlobalSearchSession: void registerObserverCallback(java.lang.String,android.app.appsearch.observer.ObserverSpec,java.util.concurrent.Executor,android.app.appsearch.observer.ObserverCallback)>(r1, $r16, r3, r30);

     label04:
        goto label06;

     label05:
        $r21 := @caughtexception;

        r6 = $r21;

        r29 = new androidx.appsearch.exceptions.AppSearchException;

        $i0 = virtualinvoke r6.<android.app.appsearch.exceptions.AppSearchException: int getResultCode()>();

        $r23 = virtualinvoke r6.<android.app.appsearch.exceptions.AppSearchException: java.lang.String getMessage()>();

        $r24 = virtualinvoke r6.<android.app.appsearch.exceptions.AppSearchException: java.lang.Throwable getCause()>();

        specialinvoke r29.<androidx.appsearch.exceptions.AppSearchException: void <init>(int,java.lang.String,java.lang.Throwable)>($i0, $r23, $r24);

        throw r29;

     label06:
        $r17 = r0.<androidx.appsearch.platformstorage.GlobalSearchSessionImpl: java.util.Map mObserverCallbacksLocked>;

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r26);

        exitmonitor r5;

     label07:
        goto label10;

     label08:
        $r25 := @caughtexception;

        r7 = $r25;

        exitmonitor r5;

     label09:
        throw r7;

     label10:
        return;

        catch android.app.appsearch.exceptions.AppSearchException from label03 to label04 with label05;
        catch java.lang.Throwable from label02 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void unregisterObserverCallback(java.lang.String, androidx.appsearch.observer.ObserverCallback) throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.platformstorage.GlobalSearchSessionImpl r0;
        java.lang.String r1, $r19;
        androidx.appsearch.observer.ObserverCallback r2;
        android.app.appsearch.observer.ObserverCallback r3;
        java.util.Map r4, $r9, $r10, $r13;
        java.lang.Throwable r5, r6, $r16, $r17, $r20;
        boolean $z0;
        java.lang.Object $r11;
        android.app.appsearch.GlobalSearchSession $r12;
        java.lang.UnsupportedOperationException $r15;
        androidx.appsearch.exceptions.AppSearchException $r18;
        int $i0;

        r0 := @this: androidx.appsearch.platformstorage.GlobalSearchSessionImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.appsearch.observer.ObserverCallback;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $z0 = staticinvoke <androidx.core.os.BuildCompat: boolean isAtLeastT()>();

        if $z0 != 0 goto label01;

        $r15 = new java.lang.UnsupportedOperationException;

        specialinvoke $r15.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("GLOBAL_SEARCH_SESSION_REGISTER_OBSERVER_CALLBACK is not supported on this AppSearch implementation");

        throw $r15;

     label01:
        $r9 = r0.<androidx.appsearch.platformstorage.GlobalSearchSessionImpl: java.util.Map mObserverCallbacksLocked>;

        r4 = $r9;

        entermonitor $r9;

     label02:
        $r10 = r0.<androidx.appsearch.platformstorage.GlobalSearchSessionImpl: java.util.Map mObserverCallbacksLocked>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (android.app.appsearch.observer.ObserverCallback) $r11;

        if r3 != null goto label04;

        exitmonitor r4;

     label03:
        return;

     label04:
        $r12 = r0.<androidx.appsearch.platformstorage.GlobalSearchSessionImpl: android.app.appsearch.GlobalSearchSession mPlatformSession>;

        virtualinvoke $r12.<android.app.appsearch.GlobalSearchSession: void unregisterObserverCallback(java.lang.String,android.app.appsearch.observer.ObserverCallback)>(r1, r3);

     label05:
        goto label07;

     label06:
        $r17 := @caughtexception;

        r5 = $r17;

        $r18 = new androidx.appsearch.exceptions.AppSearchException;

        $i0 = virtualinvoke r5.<android.app.appsearch.exceptions.AppSearchException: int getResultCode()>();

        $r19 = virtualinvoke r5.<android.app.appsearch.exceptions.AppSearchException: java.lang.String getMessage()>();

        $r20 = virtualinvoke r5.<android.app.appsearch.exceptions.AppSearchException: java.lang.Throwable getCause()>();

        specialinvoke $r18.<androidx.appsearch.exceptions.AppSearchException: void <init>(int,java.lang.String,java.lang.Throwable)>($i0, $r19, $r20);

        throw $r18;

     label07:
        $r13 = r0.<androidx.appsearch.platformstorage.GlobalSearchSessionImpl: java.util.Map mObserverCallbacksLocked>;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2);

        exitmonitor r4;

     label08:
        goto label11;

     label09:
        $r16 := @caughtexception;

        r6 = $r16;

        exitmonitor r4;

     label10:
        throw r6;

     label11:
        return;

        catch android.app.appsearch.exceptions.AppSearchException from label04 to label05 with label06;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void close()
    {
        androidx.appsearch.platformstorage.GlobalSearchSessionImpl r0;
        android.app.appsearch.GlobalSearchSession $r1;

        r0 := @this: androidx.appsearch.platformstorage.GlobalSearchSessionImpl;

        $r1 = r0.<androidx.appsearch.platformstorage.GlobalSearchSessionImpl: android.app.appsearch.GlobalSearchSession mPlatformSession>;

        virtualinvoke $r1.<android.app.appsearch.GlobalSearchSession: void close()>();

        return;
    }

    private static void lambda$getSchemaAsync$1(androidx.concurrent.futures.ResolvableFuture, android.app.appsearch.AppSearchResult)
    {
        androidx.concurrent.futures.ResolvableFuture r0;
        android.app.appsearch.AppSearchResult r1;
        java.util.function.Function $r2;

        r0 := @parameter0: androidx.concurrent.futures.ResolvableFuture;

        r1 := @parameter1: android.app.appsearch.AppSearchResult;

        $r2 = dynamicinvoke "apply" <java.util.function.Function ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.appsearch.platformstorage.converter.GetSchemaResponseToPlatformConverter: androidx.appsearch.app.GetSchemaResponse toJetpackGetSchemaResponse(android.app.appsearch.GetSchemaResponse)>, methodtype: androidx.appsearch.app.GetSchemaResponse __METHODTYPE__(android.app.appsearch.GetSchemaResponse));

        staticinvoke <androidx.appsearch.platformstorage.converter.AppSearchResultToPlatformConverter: void platformAppSearchResultToFuture(android.app.appsearch.AppSearchResult,androidx.concurrent.futures.ResolvableFuture,java.util.function.Function)>(r1, r0, $r2);

        return;
    }

    private static void lambda$reportSystemUsageAsync$0(androidx.concurrent.futures.ResolvableFuture, android.app.appsearch.AppSearchResult)
    {
        androidx.concurrent.futures.ResolvableFuture r0;
        android.app.appsearch.AppSearchResult r1;

        r0 := @parameter0: androidx.concurrent.futures.ResolvableFuture;

        r1 := @parameter1: android.app.appsearch.AppSearchResult;

        staticinvoke <androidx.appsearch.platformstorage.converter.AppSearchResultToPlatformConverter: void platformAppSearchResultToFuture(android.app.appsearch.AppSearchResult,androidx.concurrent.futures.ResolvableFuture)>(r1, r0);

        return;
    }

androidx.appsearch.platformstorage.GlobalSearchSessionImpl$1
<androidx.appsearch.platformstorage.GlobalSearchSessionImpl$1: androidx.appsearch.observer.ObserverCallback val$observer>
<androidx.appsearch.platformstorage.GlobalSearchSessionImpl$1: androidx.appsearch.platformstorage.GlobalSearchSessionImpl this$0>
    void <init>(androidx.appsearch.platformstorage.GlobalSearchSessionImpl, androidx.appsearch.observer.ObserverCallback)
    {
        androidx.appsearch.platformstorage.GlobalSearchSessionImpl$1 r0;
        androidx.appsearch.platformstorage.GlobalSearchSessionImpl r1;
        androidx.appsearch.observer.ObserverCallback r2;

        r0 := @this: androidx.appsearch.platformstorage.GlobalSearchSessionImpl$1;

        r1 := @parameter0: androidx.appsearch.platformstorage.GlobalSearchSessionImpl;

        r2 := @parameter1: androidx.appsearch.observer.ObserverCallback;

        r0.<androidx.appsearch.platformstorage.GlobalSearchSessionImpl$1: androidx.appsearch.platformstorage.GlobalSearchSessionImpl this$0> = r1;

        r0.<androidx.appsearch.platformstorage.GlobalSearchSessionImpl$1: androidx.appsearch.observer.ObserverCallback val$observer> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onSchemaChanged(android.app.appsearch.observer.SchemaChangeInfo)
    {
        androidx.appsearch.platformstorage.GlobalSearchSessionImpl$1 r0;
        android.app.appsearch.observer.SchemaChangeInfo r1;
        androidx.appsearch.observer.SchemaChangeInfo r2;
        androidx.appsearch.observer.ObserverCallback $r3;

        r0 := @this: androidx.appsearch.platformstorage.GlobalSearchSessionImpl$1;

        r1 := @parameter0: android.app.appsearch.observer.SchemaChangeInfo;

        r2 = staticinvoke <androidx.appsearch.platformstorage.converter.ObserverSpecToPlatformConverter: androidx.appsearch.observer.SchemaChangeInfo toJetpackSchemaChangeInfo(android.app.appsearch.observer.SchemaChangeInfo)>(r1);

        $r3 = r0.<androidx.appsearch.platformstorage.GlobalSearchSessionImpl$1: androidx.appsearch.observer.ObserverCallback val$observer>;

        interfaceinvoke $r3.<androidx.appsearch.observer.ObserverCallback: void onSchemaChanged(androidx.appsearch.observer.SchemaChangeInfo)>(r2);

        return;
    }

    public void onDocumentChanged(android.app.appsearch.observer.DocumentChangeInfo)
    {
        androidx.appsearch.platformstorage.GlobalSearchSessionImpl$1 r0;
        android.app.appsearch.observer.DocumentChangeInfo r1;
        androidx.appsearch.observer.DocumentChangeInfo r2;
        androidx.appsearch.observer.ObserverCallback $r3;

        r0 := @this: androidx.appsearch.platformstorage.GlobalSearchSessionImpl$1;

        r1 := @parameter0: android.app.appsearch.observer.DocumentChangeInfo;

        r2 = staticinvoke <androidx.appsearch.platformstorage.converter.ObserverSpecToPlatformConverter: androidx.appsearch.observer.DocumentChangeInfo toJetpackDocumentChangeInfo(android.app.appsearch.observer.DocumentChangeInfo)>(r1);

        $r3 = r0.<androidx.appsearch.platformstorage.GlobalSearchSessionImpl$1: androidx.appsearch.observer.ObserverCallback val$observer>;

        interfaceinvoke $r3.<androidx.appsearch.observer.ObserverCallback: void onDocumentChanged(androidx.appsearch.observer.DocumentChangeInfo)>(r2);

        return;
    }

