androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite
<androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite: androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite EMPTY_MAP_FIELD>
<androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite: boolean isMutable>
    static int calculateHashCodeForMap(java.util.Map)
    {
        java.util.Iterator r0;
        java.util.Map$Entry r1;
        java.util.Set $r2;
        boolean $z0;
        java.lang.Object $r3, $r4, $r5;
        int $i0, $i1, $i2, i3;
        java.util.Map r6;

        r6 := @parameter0: java.util.Map;

        $r2 = interfaceinvoke r6.<java.util.Map: java.util.Set entrySet()>();

        r0 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        i3 = 0;

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        r1 = (java.util.Map$Entry) $r3;

        $r4 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $i0 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite: int calculateHashCodeForObject(java.lang.Object)>($r4);

        $r5 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite: int calculateHashCodeForObject(java.lang.Object)>($r5);

        $i2 = $i0 ^ $i1;

        i3 = i3 + $i2;

        goto label1;

     label2:
        return i3;
    }

    private static int calculateHashCodeForObject(java.lang.Object)
    {
        boolean $z0, $z1;
        int $i0, $i1;
        byte[] $r0;
        java.lang.Object r1;
        java.lang.UnsupportedOperationException r2;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof byte[];

        if $z0 == 0 goto label1;

        $r0 = (byte[]) r1;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.Internal: int hashCode(byte[])>($r0);

        return $i1;

     label1:
        $z1 = r1 instanceof androidx.test.espresso.remote.internal.deps.protobuf.Internal$EnumLite;

        if $z1 == 0 goto label2;

        r2 = new java.lang.UnsupportedOperationException;

        specialinvoke r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw r2;

     label2:
        $i0 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public int hashCode()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite r0;
        int $i0;
        java.util.Map r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite;

        r1 = (java.util.Map) r0;

        $i0 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite: int calculateHashCodeForMap(java.util.Map)>(r1);

        return $i0;
    }

    public static androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite emptyMapField()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite $r0;

        $r0 = <androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite: androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite EMPTY_MAP_FIELD>;

        return $r0;
    }

    public androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite mutableCopy()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite r0, r1, r2, r3, r4;
        boolean $z0;
        java.util.Map r5;

        r1 := @this: androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite;

        $z0 = virtualinvoke r1.<androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        r3 = new androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite;

        r2 = r3;

        specialinvoke r3.<androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite: void <init>()>();

     label1:
        return r2;

     label2:
        r4 = new androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite;

        r0 = r4;

        r5 = (java.util.Map) r1;

        specialinvoke r4.<androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite: void <init>(java.util.Map)>(r5);

        r2 = r0;

        goto label1;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite r0;
        java.lang.Object r1, r2, $r5;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite: void ensureMutable()>();

        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.Internal: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.Internal: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r5 = specialinvoke r0.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return $r5;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite r0;
        java.lang.Object r1, $r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite: void ensureMutable()>();

        $r2 = specialinvoke r0.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>(r1);

        return $r2;
    }

    public java.util.Set entrySet()
    {
        boolean $z0;
        androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite r0;
        java.util.Set r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite;

        $z0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        r1 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

     label1:
        return r1;

     label2:
        r1 = specialinvoke r0.<java.util.LinkedHashMap: java.util.Set entrySet()>();

        goto label1;
    }

    static void <clinit>()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite r0, $r1;

        r0 = new androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite: void <init>()>();

        <androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite: androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite EMPTY_MAP_FIELD> = r0;

        $r1 = <androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite: androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite EMPTY_MAP_FIELD>;

        virtualinvoke $r1.<androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite: void makeImmutable()>();

        return;
    }

    private void <init>()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite r0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite;

        specialinvoke r0.<java.util.LinkedHashMap: void <init>()>();

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite: boolean isMutable> = 1;

        return;
    }

    private void <init>(java.util.Map)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite r0;
        java.util.Map r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<java.util.LinkedHashMap: void <init>(java.util.Map)>(r1);

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite: boolean isMutable> = 1;

        return;
    }

    private static void checkForNullKeysAndValues(java.util.Map)
    {
        java.util.Map r0;
        java.util.Iterator r1;
        java.lang.Object r2, $r5;
        java.util.Set $r3;
        boolean $z0;

        r0 := @parameter0: java.util.Map;

        $r3 = interfaceinvoke r0.<java.util.Map: java.util.Set keySet()>();

        r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.Internal: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r5 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.Internal: java.lang.Object checkNotNull(java.lang.Object)>($r5);

        goto label1;

     label2:
        return;
    }

    public void clear()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite r0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite: void ensureMutable()>();

        specialinvoke r0.<java.util.LinkedHashMap: void clear()>();

        return;
    }

    private void ensureMutable()
    {
        boolean $z0;
        androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite r0;
        java.lang.UnsupportedOperationException r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite;

        $z0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite: boolean isMutable()>();

        if $z0 != 0 goto label1;

        r1 = new java.lang.UnsupportedOperationException;

        specialinvoke r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw r1;

     label1:
        return;
    }

    public void makeImmutable()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite r0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite: boolean isMutable> = 0;

        return;
    }

    public void mergeFrom(androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite r0, r1;
        boolean $z0;
        java.util.Map r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite;

        r1 := @parameter0: androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite: void ensureMutable()>();

        $z0 = virtualinvoke r1.<androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        r2 = (java.util.Map) r1;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite: void putAll(java.util.Map)>(r2);

        return;

     label1:
        return;
    }

    public void putAll(java.util.Map)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite r0;
        java.util.Map r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite: void ensureMutable()>();

        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite: void checkForNullKeysAndValues(java.util.Map)>(r1);

        specialinvoke r0.<java.util.LinkedHashMap: void putAll(java.util.Map)>(r1);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0;
        boolean $z0, $z1, z2;
        java.util.Map $r1, r3;
        androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite r2;

        r2 := @this: androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.util.Map;

        if $z0 == 0 goto label2;

        $r1 = (java.util.Map) r0;

        r3 = (java.util.Map) r2;

        $z1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite: boolean equals(java.util.Map,java.util.Map)>(r3, $r1);

        if $z1 == 0 goto label2;

        z2 = 1;

     label1:
        return z2;

     label2:
        z2 = 0;

        goto label1;
    }

    private static boolean equals(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        boolean $z0, $z1, $z2, $z3;
        byte[] $r2, $r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof byte[];

        if $z0 == 0 goto label1;

        $z2 = r1 instanceof byte[];

        if $z2 == 0 goto label1;

        $r3 = (byte[]) r0;

        $r2 = (byte[]) r1;

        $z3 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r3, $r2);

        return $z3;

     label1:
        $z1 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z1;
    }

    static boolean equals(java.util.Map, java.util.Map)
    {
        java.util.Map r0, r8;
        java.util.Map$Entry r1;
        int $i0, $i1;
        java.util.Set $r2;
        boolean $z0, $z1, $z2;
        java.lang.Object $r3, $r4, $r5, $r6, $r7;
        java.util.Iterator r9;

        r8 := @parameter0: java.util.Map;

        r0 := @parameter1: java.util.Map;

        if r8 != r0 goto label1;

        return 1;

     label1:
        $i0 = interfaceinvoke r8.<java.util.Map: int size()>();

        $i1 = interfaceinvoke r0.<java.util.Map: int size()>();

        if $i0 == $i1 goto label2;

        return 0;

     label2:
        $r2 = interfaceinvoke r8.<java.util.Map: java.util.Set entrySet()>();

        r9 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r3 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        r1 = (java.util.Map$Entry) $r3;

        $r4 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z1 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r4);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        $r5 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $z2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite: boolean equals(java.lang.Object,java.lang.Object)>($r5, $r7);

        if $z2 != 0 goto label3;

        return 0;

     label5:
        return 1;
    }

    public boolean isMutable()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite r0;
        boolean $z0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite;

        $z0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.MapFieldLite: boolean isMutable>;

        return $z0;
    }

