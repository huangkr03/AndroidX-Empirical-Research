androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion Companion>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition scrollPosition>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.runtime.MutableState layoutInfoState>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans spans>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: boolean canScrollForward>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: boolean canScrollBackward>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridAnimateScrollScope animateScrollScope>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.ui.layout.Remeasurement remeasurement>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.ui.layout.RemeasurementModifier remeasurementModifier>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState prefetchState>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.gestures.ScrollableState scrollableState>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: float scrollToBeConsumed>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: int measurePassCount>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: boolean isVertical>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: int[] laneWidthsPrefixSum>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: int prefetchBaseIndex>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: java.util.Map currentItemPrefetchHandles>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.ui.unit.Density density>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.interaction.MutableInteractionSource mutableInteractionSource>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: int $stable>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.runtime.saveable.Saver Saver>
    private void <init>(int[], int[])
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        int[] r1, r2, $r16;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition $r3;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollPosition$1 $r4;
        kotlin.jvm.functions.Function2 $r5;
        androidx.compose.foundation.lazy.staggeredgrid.EmptyLazyStaggeredGridLayoutInfo $r6;
        androidx.compose.runtime.MutableState $r7;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans $r8;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridAnimateScrollScope $r9;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$remeasurementModifier$1 $r10;
        androidx.compose.ui.layout.RemeasurementModifier $r11;
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState $r12;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollableState$1 $r13;
        kotlin.jvm.functions.Function1 $r14;
        androidx.compose.foundation.gestures.ScrollableState $r15;
        java.util.LinkedHashMap $r17;
        java.util.Map $r18;
        androidx.compose.ui.unit.Density $r19;
        androidx.compose.foundation.interaction.MutableInteractionSource $r20;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition;

        $r4 = new androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollPosition$1;

        specialinvoke $r4.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollPosition$1: void <init>(java.lang.Object)>(r0);

        $r5 = (kotlin.jvm.functions.Function2) $r4;

        specialinvoke $r3.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: void <init>(int[],int[],kotlin.jvm.functions.Function2)>(r1, r2, $r5);

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition scrollPosition> = $r3;

        $r6 = <androidx.compose.foundation.lazy.staggeredgrid.EmptyLazyStaggeredGridLayoutInfo: androidx.compose.foundation.lazy.staggeredgrid.EmptyLazyStaggeredGridLayoutInfo INSTANCE>;

        $r7 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r6, null, 2, null);

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.runtime.MutableState layoutInfoState> = $r7;

        $r8 = new androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans;

        specialinvoke $r8.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: void <init>()>();

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans spans> = $r8;

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: boolean canScrollForward> = 1;

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: boolean canScrollBackward> = 1;

        $r9 = new androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridAnimateScrollScope;

        specialinvoke $r9.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridAnimateScrollScope: void <init>(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState)>(r0);

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridAnimateScrollScope animateScrollScope> = $r9;

        $r10 = new androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$remeasurementModifier$1;

        specialinvoke $r10.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$remeasurementModifier$1: void <init>(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState)>(r0);

        $r11 = (androidx.compose.ui.layout.RemeasurementModifier) $r10;

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.ui.layout.RemeasurementModifier remeasurementModifier> = $r11;

        $r12 = new androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState;

        specialinvoke $r12.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState: void <init>()>();

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState prefetchState> = $r12;

        $r13 = new androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollableState$1;

        specialinvoke $r13.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollableState$1: void <init>(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState)>(r0);

        $r14 = (kotlin.jvm.functions.Function1) $r13;

        $r15 = staticinvoke <androidx.compose.foundation.gestures.ScrollableStateKt: androidx.compose.foundation.gestures.ScrollableState ScrollableState(kotlin.jvm.functions.Function1)>($r14);

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.gestures.ScrollableState scrollableState> = $r15;

        $r16 = newarray (int)[0];

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: int[] laneWidthsPrefixSum> = $r16;

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: int prefetchBaseIndex> = -1;

        $r17 = new java.util.LinkedHashMap;

        specialinvoke $r17.<java.util.LinkedHashMap: void <init>()>();

        $r18 = (java.util.Map) $r17;

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: java.util.Map currentItemPrefetchHandles> = $r18;

        $r19 = staticinvoke <androidx.compose.ui.unit.DensityKt: androidx.compose.ui.unit.Density Density(float,float)>(1.0F, 1.0F);

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.ui.unit.Density density> = $r19;

        $r20 = staticinvoke <androidx.compose.foundation.interaction.InteractionSourceKt: androidx.compose.foundation.interaction.MutableInteractionSource MutableInteractionSource()>();

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.interaction.MutableInteractionSource mutableInteractionSource> = $r20;

        return;
    }

    public void <init>(int, int)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        int i0, i1;
        int[] r1, r2;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = newarray (int)[1];

        r1[0] = i0;

        r2 = newarray (int)[1];

        r2[0] = i1;

        specialinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: void <init>(int[],int[])>(r1, r2);

        return;
    }

    public void <init>(int, int, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        int i0, $i1, $i2, i3, i4;
        kotlin.jvm.internal.DefaultConstructorMarker r1;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        i3 := @parameter0: int;

        i4 := @parameter1: int;

        i0 := @parameter2: int;

        r1 := @parameter3: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        i3 = 0;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        i4 = 0;

     label2:
        specialinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: void <init>(int,int)>(i3, i4);

        return;
    }

    public final int getFirstVisibleItemIndex()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition $r1;
        int[] $r2;
        java.lang.Integer $r3;
        int $i0;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        $r1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition scrollPosition>;

        $r2 = virtualinvoke $r1.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: int[] getIndices()>();

        $r3 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Integer minOrNull(int[])>($r2);

        if $r3 == null goto label1;

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public final int getFirstVisibleItemScrollOffset()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        int[] $r1, $r4;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition $r2, $r3;
        int $i0, $i1, $i2;
        boolean $z1;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        $r2 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition scrollPosition>;

        $r1 = virtualinvoke $r2.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: int[] getOffsets()>();

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 == 0 goto label3;

        $i2 = 0;

        goto label4;

     label3:
        $r3 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition scrollPosition>;

        $r4 = virtualinvoke $r3.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: int[] getIndices()>();

        $i1 = staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt: int indexOfMinValue(int[])>($r4);

        $i2 = $r1[$i1];

     label4:
        return $i2;
    }

    public final androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition getScrollPosition$foundation_release()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition $r1;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        $r1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition scrollPosition>;

        return $r1;
    }

    public final androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridLayoutInfo getLayoutInfo()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        androidx.compose.runtime.MutableState $r1;
        java.lang.Object $r2;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridLayoutInfo $r3;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        $r1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.runtime.MutableState layoutInfoState>;

        $r2 = interfaceinvoke $r1.<androidx.compose.runtime.MutableState: java.lang.Object getValue()>();

        $r3 = (androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridLayoutInfo) $r2;

        return $r3;
    }

    public final androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans getSpans$foundation_release()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans $r1;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        $r1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans spans>;

        return $r1;
    }

    public final boolean getCanScrollForward$foundation_release()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        boolean $z0;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        $z0 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: boolean canScrollForward>;

        return $z0;
    }

    public final void setCanScrollForward$foundation_release(boolean)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        boolean z0;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        z0 := @parameter0: boolean;

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: boolean canScrollForward> = z0;

        return;
    }

    public final androidx.compose.ui.layout.RemeasurementModifier getRemeasurementModifier$foundation_release()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        androidx.compose.ui.layout.RemeasurementModifier $r1;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        $r1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.ui.layout.RemeasurementModifier remeasurementModifier>;

        return $r1;
    }

    public final androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState getPrefetchState$foundation_release()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState $r1;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        $r1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState prefetchState>;

        return $r1;
    }

    public final float getScrollToBeConsumed$foundation_release()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        float $f0;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        $f0 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: float scrollToBeConsumed>;

        return $f0;
    }

    public final int getMeasurePassCount$foundation_release()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        int $i0;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        $i0 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: int measurePassCount>;

        return $i0;
    }

    public final void setMeasurePassCount$foundation_release(int)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        int i0;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        i0 := @parameter0: int;

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: int measurePassCount> = i0;

        return;
    }

    public final boolean isVertical$foundation_release()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        boolean $z0;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        $z0 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: boolean isVertical>;

        return $z0;
    }

    public final void setVertical$foundation_release(boolean)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        boolean z0;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        z0 := @parameter0: boolean;

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: boolean isVertical> = z0;

        return;
    }

    public final int[] getLaneWidthsPrefixSum$foundation_release()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        int[] $r1;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        $r1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: int[] laneWidthsPrefixSum>;

        return $r1;
    }

    public final void setLaneWidthsPrefixSum$foundation_release(int[])
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        int[] r1;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        r1 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: int[] laneWidthsPrefixSum> = r1;

        return;
    }

    public final androidx.compose.ui.unit.Density getDensity$foundation_release()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        androidx.compose.ui.unit.Density $r1;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        $r1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.ui.unit.Density density>;

        return $r1;
    }

    public final void setDensity$foundation_release(androidx.compose.ui.unit.Density)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        androidx.compose.ui.unit.Density r1;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        r1 := @parameter0: androidx.compose.ui.unit.Density;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.ui.unit.Density density> = r1;

        return;
    }

    public final int getLaneCount$foundation_release()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        int[] $r1;
        int $i0;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        $r1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: int[] laneWidthsPrefixSum>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public final androidx.compose.foundation.interaction.InteractionSource getInteractionSource()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        androidx.compose.foundation.interaction.MutableInteractionSource $r1;
        androidx.compose.foundation.interaction.InteractionSource $r2;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        $r1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.interaction.MutableInteractionSource mutableInteractionSource>;

        $r2 = (androidx.compose.foundation.interaction.InteractionSource) $r1;

        return $r2;
    }

    public final androidx.compose.foundation.interaction.MutableInteractionSource getMutableInteractionSource$foundation_release()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        androidx.compose.foundation.interaction.MutableInteractionSource $r1;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        $r1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.interaction.MutableInteractionSource mutableInteractionSource>;

        return $r1;
    }

    public java.lang.Object scroll(androidx.compose.foundation.MutatePriority, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        androidx.compose.foundation.MutatePriority r1;
        kotlin.jvm.functions.Function2 r2;
        kotlin.coroutines.Continuation $r3;
        androidx.compose.foundation.gestures.ScrollableState $r4;
        java.lang.Object $r5, $r6;
        kotlin.Unit $r7;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        r1 := @parameter0: androidx.compose.foundation.MutatePriority;

        r2 := @parameter1: kotlin.jvm.functions.Function2;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        $r4 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.gestures.ScrollableState scrollableState>;

        $r5 = interfaceinvoke $r4.<androidx.compose.foundation.gestures.ScrollableState: java.lang.Object scroll(androidx.compose.foundation.MutatePriority,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>(r1, r2, $r3);

        $r6 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r5 != $r6 goto label1;

        return $r5;

     label1:
        $r7 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r7;
    }

    public boolean isScrollInProgress()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        androidx.compose.foundation.gestures.ScrollableState $r1;
        boolean $z0;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        $r1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.gestures.ScrollableState scrollableState>;

        $z0 = interfaceinvoke $r1.<androidx.compose.foundation.gestures.ScrollableState: boolean isScrollInProgress()>();

        return $z0;
    }

    private final float onScroll(float)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, f11, $f12, $f13, f14;
        byte $b0, $b1, $b2, $b3, $b4;
        androidx.compose.ui.layout.Remeasurement $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.IllegalStateException $r5;
        java.lang.String $r6, $r7;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        f0 := @parameter0: float;

        $b0 = f0 cmpg 0.0F;

        if $b0 >= 0 goto label1;

        $z1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: boolean canScrollForward>;

        if $z1 == 0 goto label2;

     label1:
        $b1 = f0 cmpl 0.0F;

        if $b1 <= 0 goto label3;

        $z0 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: boolean canScrollBackward>;

        if $z0 != 0 goto label3;

     label2:
        return 0.0F;

     label3:
        $f1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: float scrollToBeConsumed>;

        $f2 = staticinvoke <java.lang.Math: float abs(float)>($f1);

        $b2 = $f2 cmpg 0.5F;

        if $b2 > 0 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        if $z2 != 0 goto label6;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("entered drag with non-zero pending scroll: ");

        $f10 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: float scrollToBeConsumed>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f10);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label6:
        $f3 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: float scrollToBeConsumed>;

        $f4 = $f3 + f0;

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: float scrollToBeConsumed> = $f4;

        $f5 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: float scrollToBeConsumed>;

        $f6 = staticinvoke <java.lang.Math: float abs(float)>($f5);

        $b3 = $f6 cmpl 0.5F;

        if $b3 <= 0 goto label8;

        f11 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: float scrollToBeConsumed>;

        $r1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.ui.layout.Remeasurement remeasurement>;

        if $r1 == null goto label7;

        interfaceinvoke $r1.<androidx.compose.ui.layout.Remeasurement: void forceRemeasure()>();

        goto label7;

     label7:
        $f8 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: float scrollToBeConsumed>;

        $f9 = f11 - $f8;

        specialinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: void notifyPrefetch(float)>($f9);

     label8:
        $f12 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: float scrollToBeConsumed>;

        $f13 = staticinvoke <java.lang.Math: float abs(float)>($f12);

        $b4 = $f13 cmpg 0.5F;

        if $b4 > 0 goto label9;

        return f0;

     label9:
        $f7 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: float scrollToBeConsumed>;

        f14 = f0 - $f7;

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: float scrollToBeConsumed> = 0.0F;

        return f14;
    }

    public final java.lang.Object scrollToItem(int, int, kotlin.coroutines.Continuation)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        int i0, i1;
        kotlin.coroutines.Continuation $r1;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollToItem$2 $r2;
        androidx.compose.foundation.gestures.ScrollableState $r3;
        kotlin.jvm.functions.Function2 $r4;
        java.lang.Object $r5, $r6;
        kotlin.Unit $r7;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = (androidx.compose.foundation.gestures.ScrollableState) r0;

        $r2 = new androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollToItem$2;

        specialinvoke $r2.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollToItem$2: void <init>(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState,int,int,kotlin.coroutines.Continuation)>(r0, i0, i1, null);

        $r4 = (kotlin.jvm.functions.Function2) $r2;

        $r5 = staticinvoke <androidx.compose.foundation.gestures.ScrollableState: java.lang.Object scroll$default(androidx.compose.foundation.gestures.ScrollableState,androidx.compose.foundation.MutatePriority,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation,int,java.lang.Object)>($r3, null, $r4, $r1, 1, null);

        $r6 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r5 != $r6 goto label1;

        return $r5;

     label1:
        $r7 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r7;
    }

    public static java.lang.Object scrollToItem$default(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState, int, int, kotlin.coroutines.Continuation, int, java.lang.Object)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        int i0, i1, $i2, i3;
        kotlin.coroutines.Continuation r1;
        java.lang.Object r2, $r3;

        r0 := @parameter0: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        i0 := @parameter1: int;

        i3 := @parameter2: int;

        r1 := @parameter3: kotlin.coroutines.Continuation;

        i1 := @parameter4: int;

        r2 := @parameter5: java.lang.Object;

        $i2 = i1 & 2;

        if $i2 == 0 goto label1;

        i3 = 0;

     label1:
        $r3 = virtualinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: java.lang.Object scrollToItem(int,int,kotlin.coroutines.Continuation)>(i0, i3, r1);

        return $r3;
    }

    public final java.lang.Object animateScrollToItem(int, int, kotlin.coroutines.Continuation)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        int i0, i1;
        kotlin.coroutines.Continuation $r1;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridAnimateScrollScope $r2;
        androidx.compose.foundation.lazy.layout.LazyAnimateScrollScope $r3;
        java.lang.Object $r4, $r5;
        kotlin.Unit $r6;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 := @parameter2: kotlin.coroutines.Continuation;

        $r2 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridAnimateScrollScope animateScrollScope>;

        $r3 = (androidx.compose.foundation.lazy.layout.LazyAnimateScrollScope) $r2;

        $r4 = staticinvoke <androidx.compose.foundation.lazy.layout.LazyAnimateScrollKt: java.lang.Object animateScrollToItem(androidx.compose.foundation.lazy.layout.LazyAnimateScrollScope,int,int,kotlin.coroutines.Continuation)>($r3, i0, i1, $r1);

        $r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r4 != $r5 goto label1;

        return $r4;

     label1:
        $r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r6;
    }

    public static java.lang.Object animateScrollToItem$default(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState, int, int, kotlin.coroutines.Continuation, int, java.lang.Object)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        int i0, i1, $i2, i3;
        kotlin.coroutines.Continuation r1;
        java.lang.Object r2, $r3;

        r0 := @parameter0: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        i0 := @parameter1: int;

        i3 := @parameter2: int;

        r1 := @parameter3: kotlin.coroutines.Continuation;

        i1 := @parameter4: int;

        r2 := @parameter5: java.lang.Object;

        $i2 = i1 & 2;

        if $i2 == 0 goto label1;

        i3 = 0;

     label1:
        $r3 = virtualinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: java.lang.Object animateScrollToItem(int,int,kotlin.coroutines.Continuation)>(i0, i3, r1);

        return $r3;
    }

    public final void snapToItemInternal$foundation_release(androidx.compose.foundation.gestures.ScrollScope, int, int)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        androidx.compose.foundation.gestures.ScrollScope $r1;
        int i0, i1, i2, i3, $i6;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridItemInfo r2;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridLayoutInfo $r3;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition $r4;
        androidx.compose.ui.layout.Remeasurement $r5;
        boolean $z0;
        long $l4, $l5;
        float $f0;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        $r1 := @parameter0: androidx.compose.foundation.gestures.ScrollScope;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r3 = virtualinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridLayoutInfo getLayoutInfo()>();

        r2 = staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureResultKt: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridItemInfo findVisibleItem(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridLayoutInfo,int)>($r3, i0);

        if r2 == null goto label3;

        $z0 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: boolean isVertical>;

        if $z0 == 0 goto label1;

        $l5 = interfaceinvoke r2.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridItemInfo: long getOffset-nOcc-ac()>();

        $i6 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>($l5);

        goto label2;

     label1:
        $l4 = interfaceinvoke r2.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridItemInfo: long getOffset-nOcc-ac()>();

        $i6 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>($l4);

     label2:
        i2 = $i6;

        i3 = i2 + i1;

        $f0 = (float) i3;

        interfaceinvoke $r1.<androidx.compose.foundation.gestures.ScrollScope: float scrollBy(float)>($f0);

        goto label4;

     label3:
        $r4 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition scrollPosition>;

        virtualinvoke $r4.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: void requestPosition(int,int)>(i0, i1);

        $r5 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.ui.layout.Remeasurement remeasurement>;

        if $r5 == null goto label4;

        interfaceinvoke $r5.<androidx.compose.ui.layout.Remeasurement: void forceRemeasure()>();

        goto label4;

     label4:
        return;
    }

    public final void updateScrollPositionIfTheFirstItemWasMoved$foundation_release(androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider r1;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition $r2;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        r1 := @parameter0: androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "itemProvider");

        $r2 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition scrollPosition>;

        virtualinvoke $r2.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: void updateScrollPositionIfTheFirstItemWasMoved(androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider)>(r1);

        return;
    }

    public float dispatchRawDelta(float)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        float f0, $f1;
        androidx.compose.foundation.gestures.ScrollableState $r1;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.gestures.ScrollableState scrollableState>;

        $f1 = interfaceinvoke $r1.<androidx.compose.foundation.gestures.ScrollableState: float dispatchRawDelta(float)>(f0);

        return $f1;
    }

    private final void notifyPrefetch(float)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        float f0;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridLayoutInfo r1;
        boolean z0, $z1, $z3, $z4, $z5, $z6, $z7;
        int i0, i1, i2, i3, $i5, $i6, $i7, $i8, $i9, i10, i11, $i12, $i13;
        java.util.Set r2;
        java.lang.Integer r3, r28, r29;
        androidx.compose.runtime.MutableState $r4;
        java.lang.Object $r5, $r9, $r26;
        java.util.List $r6, $r8, $r25;
        java.util.Collection $r7, $r14;
        byte $b4;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridItemInfo $r10, $r27;
        java.util.LinkedHashSet $r11;
        int[] $r12, $r16, $r17;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans $r13, $r24;
        java.util.Map $r15, $r20;
        androidx.compose.ui.unit.Constraints$Companion $r18, $r23;
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState $r19;
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState$PrefetchHandle $r21;
        long $l14, l15;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        f0 := @parameter0: float;

        $r4 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.runtime.MutableState layoutInfoState>;

        $r5 = interfaceinvoke $r4.<androidx.compose.runtime.MutableState: java.lang.Object getValue()>();

        r1 = (androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridLayoutInfo) $r5;

        $r6 = interfaceinvoke r1.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridLayoutInfo: java.util.List getVisibleItemsInfo()>();

        $r7 = (java.util.Collection) $r6;

        $z1 = interfaceinvoke $r7.<java.util.Collection: boolean isEmpty()>();

        if $z1 != 0 goto label01;

        $z5 = 1;

        goto label02;

     label01:
        $z5 = 0;

     label02:
        if $z5 == 0 goto label23;

        $b4 = f0 cmpg 0.0F;

        if $b4 >= 0 goto label03;

        $z6 = 1;

        goto label04;

     label03:
        $z6 = 0;

     label04:
        z0 = $z6;

        if z0 == 0 goto label05;

        $r25 = interfaceinvoke r1.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridLayoutInfo: java.util.List getVisibleItemsInfo()>();

        $r26 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object last(java.util.List)>($r25);

        $r27 = (androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridItemInfo) $r26;

        $i9 = interfaceinvoke $r27.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridItemInfo: int getIndex()>();

        goto label06;

     label05:
        $r8 = interfaceinvoke r1.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridLayoutInfo: java.util.List getVisibleItemsInfo()>();

        $r9 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object first(java.util.List)>($r8);

        $r10 = (androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridItemInfo) $r9;

        $i9 = interfaceinvoke $r10.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridItemInfo: int getIndex()>();

     label06:
        i0 = $i9;

        $i5 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: int prefetchBaseIndex>;

        if i0 != $i5 goto label07;

        return;

     label07:
        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: int prefetchBaseIndex> = i0;

        $r11 = new java.util.LinkedHashSet;

        specialinvoke $r11.<java.util.LinkedHashSet: void <init>()>();

        r2 = (java.util.Set) $r11;

        i10 = i0;

        i11 = 0;

        $r12 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: int[] laneWidthsPrefixSum>;

        i1 = lengthof $r12;

     label08:
        if i11 >= i1 goto label22;

        i2 = i10;

        if z0 == 0 goto label09;

        $r24 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans spans>;

        $i12 = virtualinvoke $r24.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int findNextItemIndex(int,int)>(i2, i11);

        goto label10;

     label09:
        $r13 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans spans>;

        $i12 = virtualinvoke $r13.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int findPreviousItemIndex(int,int)>(i2, i11);

     label10:
        i10 = $i12;

        if 0 > i10 goto label12;

        $i8 = interfaceinvoke r1.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridLayoutInfo: int getTotalItemsCount()>();

        if i10 >= $i8 goto label11;

        $z7 = 1;

        goto label13;

     label11:
        $z7 = 0;

        goto label13;

     label12:
        $z7 = 0;

     label13:
        if $z7 == 0 goto label14;

        if i2 != i10 goto label15;

     label14:
        return;

     label15:
        r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i10);

        $r14 = (java.util.Collection) r2;

        interfaceinvoke $r14.<java.util.Collection: boolean add(java.lang.Object)>(r28);

        r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i10);

        $r15 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: java.util.Map currentItemPrefetchHandles>;

        $z3 = interfaceinvoke $r15.<java.util.Map: boolean containsKey(java.lang.Object)>(r29);

        if $z3 == 0 goto label16;

        goto label21;

     label16:
        $r16 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: int[] laneWidthsPrefixSum>;

        $i7 = $r16[i11];

        if i11 != 0 goto label17;

        $i13 = 0;

        goto label18;

     label17:
        $r17 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: int[] laneWidthsPrefixSum>;

        $i6 = i11 - 1;

        $i13 = $r17[$i6];

     label18:
        i3 = $i7 - $i13;

        $z4 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: boolean isVertical>;

        if $z4 == 0 goto label19;

        $r23 = <androidx.compose.ui.unit.Constraints: androidx.compose.ui.unit.Constraints$Companion Companion>;

        $l14 = virtualinvoke $r23.<androidx.compose.ui.unit.Constraints$Companion: long fixedWidth-OenEA2s(int)>(i3);

        goto label20;

     label19:
        $r18 = <androidx.compose.ui.unit.Constraints: androidx.compose.ui.unit.Constraints$Companion Companion>;

        $l14 = virtualinvoke $r18.<androidx.compose.ui.unit.Constraints$Companion: long fixedHeight-OenEA2s(int)>(i3);

     label20:
        l15 = $l14;

        r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i10);

        $r20 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: java.util.Map currentItemPrefetchHandles>;

        $r19 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState prefetchState>;

        $r21 = virtualinvoke $r19.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState: androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState$PrefetchHandle schedulePrefetch-0kLqBqw(int,long)>(i10, l15);

        interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r21);

     label21:
        i11 = i11 + 1;

        goto label08;

     label22:
        specialinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: void clearLeftoverPrefetchHandles(java.util.Set)>(r2);

     label23:
        return;
    }

    private final void clearLeftoverPrefetchHandles(java.util.Set)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        java.util.Set r1, $r5;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.util.Map $r4;
        java.lang.Object $r6, $r7, $r8;
        boolean $z0, $z1;
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState$PrefetchHandle $r9;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        r1 := @parameter0: java.util.Set;

        $r4 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: java.util.Map currentItemPrefetchHandles>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r6;

        $r7 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z0 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>($r7);

        if $z0 != 0 goto label1;

        $r8 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState$PrefetchHandle) $r8;

        interfaceinvoke $r9.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState$PrefetchHandle: void cancel()>();

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

        goto label1;

     label2:
        return;
    }

    private final void cancelPrefetchIfVisibleItemsChanged(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridLayoutInfo)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridLayoutInfo r1;
        java.util.List r2;
        java.lang.Object r3, $r6, $r8;
        androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState$PrefetchHandle r4;
        int $i0, $i1, $i2, i3;
        java.util.Collection $r5, $r11;
        boolean $z1, $z2, $z3, $z4;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridItemInfo $r7, $r9;
        java.util.Map $r10, $r12;
        java.lang.Iterable $r13;
        java.util.Iterator r14;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        r1 := @parameter0: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridLayoutInfo;

        r2 = interfaceinvoke r1.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridLayoutInfo: java.util.List getVisibleItemsInfo()>();

        $i0 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: int prefetchBaseIndex>;

        if $i0 == -1 goto label8;

        $r5 = (java.util.Collection) r2;

        $z1 = interfaceinvoke $r5.<java.util.Collection: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        if $z3 == 0 goto label8;

        $r6 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object first(java.util.List)>(r2);

        $r7 = (androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridItemInfo) $r6;

        $i1 = interfaceinvoke $r7.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridItemInfo: int getIndex()>();

        $r8 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object last(java.util.List)>(r2);

        $r9 = (androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridItemInfo) $r8;

        $i2 = interfaceinvoke $r9.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridItemInfo: int getIndex()>();

        i3 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: int prefetchBaseIndex>;

        if $i1 > i3 goto label4;

        if i3 > $i2 goto label3;

        $z4 = 1;

        goto label5;

     label3:
        $z4 = 0;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        if $z4 != 0 goto label8;

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: int prefetchBaseIndex> = -1;

        $r10 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: java.util.Map currentItemPrefetchHandles>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Collection values()>();

        $r13 = (java.lang.Iterable) $r11;

        r14 = interfaceinvoke $r13.<java.lang.Iterable: java.util.Iterator iterator()>();

     label6:
        $z2 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        r3 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState$PrefetchHandle) r3;

        interfaceinvoke r4.<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState$PrefetchHandle: void cancel()>();

        goto label6;

     label7:
        $r12 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: java.util.Map currentItemPrefetchHandles>;

        interfaceinvoke $r12.<java.util.Map: void clear()>();

     label8:
        return;
    }

    public final void applyMeasureResult$foundation_release(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureResult)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureResult r1;
        int i0, $i1;
        float $f0, $f1, $f2;
        boolean $z0, $z1;
        androidx.compose.runtime.MutableState $r2;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridLayoutInfo $r3;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition $r4;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        r1 := @parameter0: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureResult;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "result");

        $f0 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: float scrollToBeConsumed>;

        $f1 = virtualinvoke r1.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureResult: float getConsumedScroll()>();

        $f2 = $f0 - $f1;

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: float scrollToBeConsumed> = $f2;

        $z0 = virtualinvoke r1.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureResult: boolean getCanScrollBackward()>();

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: boolean canScrollBackward> = $z0;

        $z1 = virtualinvoke r1.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureResult: boolean getCanScrollForward()>();

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: boolean canScrollForward> = $z1;

        $r2 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.runtime.MutableState layoutInfoState>;

        interfaceinvoke $r2.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r1);

        $r3 = (androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridLayoutInfo) r1;

        specialinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: void cancelPrefetchIfVisibleItemsChanged(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridLayoutInfo)>($r3);

        $r4 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition scrollPosition>;

        virtualinvoke $r4.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: void updateFromMeasureResult(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureResult)>(r1);

        i0 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: int measurePassCount>;

        $i1 = i0 + 1;

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: int measurePassCount> = $i1;

        return;
    }

    private final int[] fillNearestIndices(int, int)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12;
        int[] r1;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans $r2, $r3, $r4, $r5;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans spans>;

        $i4 = i0 + i1;

        virtualinvoke $r2.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: void ensureValidIndex(int)>($i4);

        $r3 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans spans>;

        i2 = virtualinvoke $r3.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int getSpan(int)>(i0);

        if i2 != -1 goto label1;

        $i8 = 0;

        goto label2;

     label1:
        $i8 = staticinvoke <java.lang.Math: int min(int,int)>(i2, i1);

     label2:
        i3 = $i8;

        r1 = newarray (int)[i1];

        i9 = i0;

        i10 = i3 - 1;

     label3:
        if -1 >= i10 goto label5;

        $r5 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans spans>;

        $i6 = virtualinvoke $r5.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int findPreviousItemIndex(int,int)>(i9, i10);

        r1[i10] = $i6;

        $i7 = r1[i10];

        if $i7 != -1 goto label4;

        staticinvoke <kotlin.collections.ArraysKt: void fill$default(int[],int,int,int,int,java.lang.Object)>(r1, -1, 0, i10, 2, null);

        goto label5;

     label4:
        i9 = r1[i10];

        i10 = i10 + -1;

        goto label3;

     label5:
        r1[i3] = i0;

        i11 = i0;

        i12 = i3 + 1;

     label6:
        if i12 >= i1 goto label7;

        $r4 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans spans>;

        $i5 = virtualinvoke $r4.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int findNextItemIndex(int,int)>(i11, i12);

        r1[i12] = $i5;

        i11 = r1[i12];

        i12 = i12 + 1;

        goto label6;

     label7:
        return r1;
    }

    public static final androidx.compose.runtime.saveable.Saver access$getSaver$cp()
    {
        androidx.compose.runtime.saveable.Saver $r0;

        $r0 = <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.runtime.saveable.Saver Saver>;

        return $r0;
    }

    public static final int[] access$fillNearestIndices(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState, int, int)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState $r0;
        int i0, i1;
        int[] $r1;

        $r0 := @parameter0: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = specialinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: int[] fillNearestIndices(int,int)>(i0, i1);

        return $r1;
    }

    public static final void access$setRemeasurement$p(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState, androidx.compose.ui.layout.Remeasurement)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState $r0;
        androidx.compose.ui.layout.Remeasurement r1;

        $r0 := @parameter0: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        r1 := @parameter1: androidx.compose.ui.layout.Remeasurement;

        $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.ui.layout.Remeasurement remeasurement> = r1;

        return;
    }

    public static final float access$onScroll(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState, float)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState $r0;
        float f0, $f1;

        $r0 := @parameter0: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        f0 := @parameter1: float;

        $f1 = specialinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: float onScroll(float)>(f0);

        return $f1;
    }

    public void <init>(int[], int[], kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r0;
        int[] r1, r2;
        kotlin.jvm.internal.DefaultConstructorMarker $r3;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        $r3 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: void <init>(int[],int[])>(r1, r2);

        return;
    }

    static void <clinit>()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion $r0;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion$Saver$1 $r1;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion$Saver$2 $r2;
        kotlin.jvm.functions.Function1 $r3;
        kotlin.jvm.functions.Function2 $r4;
        androidx.compose.runtime.saveable.Saver $r5;

        $r0 = new androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion;

        specialinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion Companion> = $r0;

        <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: int $stable> = 8;

        $r1 = <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion$Saver$1: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion$Saver$1 INSTANCE>;

        $r4 = (kotlin.jvm.functions.Function2) $r1;

        $r2 = <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion$Saver$2: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion$Saver$2 INSTANCE>;

        $r3 = (kotlin.jvm.functions.Function1) $r2;

        $r5 = staticinvoke <androidx.compose.runtime.saveable.ListSaverKt: androidx.compose.runtime.saveable.Saver listSaver(kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1)>($r4, $r3);

        <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.runtime.saveable.Saver Saver> = $r5;

        return;
    }

androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion$Saver$1
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion$Saver$1: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion$Saver$1 INSTANCE>
    void <init>()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion$Saver$1 r0;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion$Saver$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public final java.util.List invoke(androidx.compose.runtime.saveable.SaverScope, androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion$Saver$1 r0;
        androidx.compose.runtime.saveable.SaverScope $r1;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r2;
        int[][] r3;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition $r4, $r6;
        int[] $r5, $r7;
        java.lang.Object[] $r8;
        java.util.List $r9;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion$Saver$1;

        $r1 := @parameter0: androidx.compose.runtime.saveable.SaverScope;

        r2 := @parameter1: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$listSaver");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "state");

        r3 = newarray (int[])[2];

        $r4 = virtualinvoke r2.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition getScrollPosition$foundation_release()>();

        $r5 = virtualinvoke $r4.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: int[] getIndices()>();

        r3[0] = $r5;

        $r6 = virtualinvoke r2.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition getScrollPosition$foundation_release()>();

        $r7 = virtualinvoke $r6.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: int[] getOffsets()>();

        r3[1] = $r7;

        $r8 = (java.lang.Object[]) r3;

        $r9 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object[])>($r8);

        return $r9;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion$Saver$1 r0;
        java.lang.Object r1, r2;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState $r3;
        androidx.compose.runtime.saveable.SaverScope $r4;
        java.util.List $r5;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion$Saver$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.compose.runtime.saveable.SaverScope) r1;

        $r3 = (androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState) r2;

        $r5 = virtualinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion$Saver$1: java.util.List invoke(androidx.compose.runtime.saveable.SaverScope,androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState)>($r4, $r3);

        return $r5;
    }

    static void <clinit>()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion$Saver$1 $r0;

        $r0 = new androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion$Saver$1;

        specialinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion$Saver$1: void <init>()>();

        <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion$Saver$1: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion$Saver$1 INSTANCE> = $r0;

        return;
    }

androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion$Saver$2
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion$Saver$2: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion$Saver$2 INSTANCE>
    void <init>()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion$Saver$2 r0;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion$Saver$2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState invoke(java.util.List)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion$Saver$2 r0;
        java.util.List r1;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState $r2;
        java.lang.Object $r3, $r5;
        int[] $r4, $r6;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion$Saver$2;

        r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = new androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (int[]) $r3;

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(1);

        $r6 = (int[]) $r5;

        specialinvoke $r2.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: void <init>(int[],int[],kotlin.jvm.internal.DefaultConstructorMarker)>($r4, $r6, null);

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion$Saver$2 r0;
        java.lang.Object r1;
        java.util.List $r2;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState $r3;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion$Saver$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.List) r1;

        $r3 = virtualinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion$Saver$2: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState invoke(java.util.List)>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion$Saver$2 $r0;

        $r0 = new androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion$Saver$2;

        specialinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion$Saver$2: void <init>()>();

        <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion$Saver$2: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion$Saver$2 INSTANCE> = $r0;

        return;
    }

androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion
    private void <init>()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion r0;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.compose.runtime.saveable.Saver getSaver()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion r0;
        androidx.compose.runtime.saveable.Saver $r1;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion;

        $r1 = staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.runtime.saveable.Saver access$getSaver$cp()>();

        return $r1;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$Companion: void <init>()>();

        return;
    }

androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$remeasurementModifier$1
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$remeasurementModifier$1: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState this$0>
    void <init>(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$remeasurementModifier$1 r0;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState $r1;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$remeasurementModifier$1;

        $r1 := @parameter0: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$remeasurementModifier$1: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onRemeasurementAvailable(androidx.compose.ui.layout.Remeasurement)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$remeasurementModifier$1 r0;
        androidx.compose.ui.layout.Remeasurement r1;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState $r2;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$remeasurementModifier$1;

        r1 := @parameter0: androidx.compose.ui.layout.Remeasurement;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "remeasurement");

        $r2 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$remeasurementModifier$1: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState this$0>;

        staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: void access$setRemeasurement$p(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState,androidx.compose.ui.layout.Remeasurement)>($r2, r1);

        return;
    }

androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollableState$1
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollableState$1: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState this$0>
    void <init>(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollableState$1 r0;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState $r1;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollableState$1;

        $r1 := @parameter0: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollableState$1: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Float invoke(float)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollableState$1 r0;
        float f0, $f1, $f2, $f3;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState $r1;
        java.lang.Float $r2;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollableState$1;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollableState$1: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState this$0>;

        $f1 = neg f0;

        $f2 = staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: float access$onScroll(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState,float)>($r1, $f1);

        $f3 = neg $f2;

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f3);

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollableState$1 r0;
        java.lang.Object r1;
        java.lang.Number $r2;
        float $f0;
        java.lang.Float $r3;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollableState$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Number) r1;

        $f0 = virtualinvoke $r2.<java.lang.Number: float floatValue()>();

        $r3 = virtualinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollableState$1: java.lang.Float invoke(float)>($f0);

        return $r3;
    }

androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollPosition$1
    void <init>(java.lang.Object)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollPosition$1 r0;
        java.lang.Object r1;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollPosition$1;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<kotlin.jvm.internal.FunctionReferenceImpl: void <init>(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)>(2, r1, class "Landroidx/compose/foundation/lazy/staggeredgrid/LazyStaggeredGridState;", "fillNearestIndices", "fillNearestIndices(II)[I", 0);

        return;
    }

    public final int[] invoke(int, int)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollPosition$1 r0;
        int i0, i1;
        java.lang.Object $r1;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState $r2;
        int[] $r3;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollPosition$1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollPosition$1: java.lang.Object receiver>;

        $r2 = (androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState) $r1;

        $r3 = staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: int[] access$fillNearestIndices(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState,int,int)>($r2, i0, i1);

        return $r3;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollPosition$1 r0;
        java.lang.Object r1, r2;
        java.lang.Number $r3, $r4;
        int $i0, $i1;
        int[] $r5;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollPosition$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Number) r1;

        $i0 = virtualinvoke $r3.<java.lang.Number: int intValue()>();

        $r4 = (java.lang.Number) r2;

        $i1 = virtualinvoke $r4.<java.lang.Number: int intValue()>();

        $r5 = virtualinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollPosition$1: int[] invoke(int,int)>($i0, $i1);

        return $r5;
    }

androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollToItem$2
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollToItem$2: int label>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollToItem$2: java.lang.Object L$0>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollToItem$2: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState this$0>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollToItem$2: int $index>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollToItem$2: int $scrollOffset>
    void <init>(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState, int, int, kotlin.coroutines.Continuation)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollToItem$2 r0;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState $r1;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollToItem$2;

        $r1 := @parameter0: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: kotlin.coroutines.Continuation;

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollToItem$2: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState this$0> = $r1;

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollToItem$2: int $index> = $i0;

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollToItem$2: int $scrollOffset> = $i1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollToItem$2 r0;
        java.lang.Object $r1, $r4;
        androidx.compose.foundation.gestures.ScrollScope $r2;
        int $i0, $i1, $i2;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState $r5;
        kotlin.Unit $r6;
        java.lang.IllegalStateException $r7;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollToItem$2;

        $r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollToItem$2: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            default: goto label2;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollToItem$2: java.lang.Object L$0>;

        $r2 = (androidx.compose.foundation.gestures.ScrollScope) $r4;

        $r5 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollToItem$2: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState this$0>;

        $i2 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollToItem$2: int $index>;

        $i1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollToItem$2: int $scrollOffset>;

        virtualinvoke $r5.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: void snapToItemInternal$foundation_release(androidx.compose.foundation.gestures.ScrollScope,int,int)>($r2, $i2, $i1);

        $r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r6;

     label2:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r7;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollToItem$2 r0, r3, $r4;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r6;
        int $i0, $i1;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState $r5;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollToItem$2;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = new androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollToItem$2;

        $r5 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollToItem$2: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState this$0>;

        $i1 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollToItem$2: int $index>;

        $i0 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollToItem$2: int $scrollOffset>;

        specialinvoke $r4.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollToItem$2: void <init>(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState,int,int,kotlin.coroutines.Continuation)>($r5, $i1, $i0, $r2);

        r3 = $r4;

        r3.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollToItem$2: java.lang.Object L$0> = r1;

        $r6 = (kotlin.coroutines.Continuation) r3;

        return $r6;
    }

    public final java.lang.Object invoke(androidx.compose.foundation.gestures.ScrollScope, kotlin.coroutines.Continuation)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollToItem$2 r0, $r5;
        androidx.compose.foundation.gestures.ScrollScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollToItem$2;

        r1 := @parameter0: androidx.compose.foundation.gestures.ScrollScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollToItem$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollToItem$2) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollToItem$2: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollToItem$2 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        androidx.compose.foundation.gestures.ScrollScope $r4;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollToItem$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.compose.foundation.gestures.ScrollScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState$scrollToItem$2: java.lang.Object invoke(androidx.compose.foundation.gestures.ScrollScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

