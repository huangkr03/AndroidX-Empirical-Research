androidx.work.impl.model.WorkTagDao
<androidx.work.impl.model.WorkTagDao: void insert(androidx.work.impl.model.WorkTag)>
<androidx.work.impl.model.WorkTagDao: void deleteByWorkSpecId(java.lang.String)>
<androidx.work.impl.model.WorkTagDao: java.util.List getWorkSpecIdsWithTag(java.lang.String)>
<androidx.work.impl.model.WorkTagDao: java.util.List getTagsForWorkSpecId(java.lang.String)>
<androidx.work.impl.model.WorkTagDao: void insertTags(java.lang.String,java.util.Set)>
androidx.work.impl.model.WorkTagDao$DefaultImpls
    public static void insertTags(androidx.work.impl.model.WorkTagDao, java.lang.String, java.util.Set)
    {
        androidx.work.impl.model.WorkTagDao $r0;
        java.lang.String r1, r6;
        java.util.Set r2;
        java.lang.Iterable $r3;
        java.util.Iterator r4;
        java.lang.Object r5;
        boolean $z2;
        androidx.work.impl.model.WorkTag $r7;

        $r0 := @parameter0: androidx.work.impl.model.WorkTagDao;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.Set;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "id");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "tags");

        $r3 = (java.lang.Iterable) r2;

        r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) r5;

        $r7 = new androidx.work.impl.model.WorkTag;

        specialinvoke $r7.<androidx.work.impl.model.WorkTag: void <init>(java.lang.String,java.lang.String)>(r6, r1);

        interfaceinvoke $r0.<androidx.work.impl.model.WorkTagDao: void insert(androidx.work.impl.model.WorkTag)>($r7);

        goto label1;

     label2:
        return;
    }

