androidx.tracing.TraceKt
    public static final java.lang.Object trace(java.lang.String, kotlin.jvm.functions.Function0)
    {
        java.lang.String r0;
        kotlin.jvm.functions.Function0 r1;
        java.lang.Throwable $r2, r4;
        java.lang.Object r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "label");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

     label1:
        staticinvoke <androidx.tracing.Trace: void beginSection(java.lang.String)>(r0);

        r3 = interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

     label2:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        staticinvoke <androidx.tracing.Trace: void endSection()>();

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        return r3;

     label3:
        $r2 := @caughtexception;

        r4 = $r2;

     label4:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        staticinvoke <androidx.tracing.Trace: void endSection()>();

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static final java.lang.Object traceAsync(java.lang.String, int, kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation)
    {
        kotlin.jvm.functions.Function1 r0;
        kotlin.coroutines.Continuation r1;
        java.lang.Object $r2, r3, $r5, $r10, r11;
        boolean $z0;
        androidx.tracing.TraceKt$traceAsync$1 $r4, $r9;
        java.lang.IllegalStateException $r6;
        int $i0, $i1, $i2, $i3, i4, $i5;
        java.lang.Throwable $r7, r12;
        java.lang.String r8;

        r8 := @parameter0: java.lang.String;

        i4 := @parameter1: int;

        r0 := @parameter2: kotlin.jvm.functions.Function1;

        r1 := @parameter3: kotlin.coroutines.Continuation;

        $z0 = r1 instanceof androidx.tracing.TraceKt$traceAsync$1;

        if $z0 == 0 goto label01;

        $r9 = (androidx.tracing.TraceKt$traceAsync$1) r1;

        $i0 = $r9.<androidx.tracing.TraceKt$traceAsync$1: int label>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label01;

        $i2 = $r9.<androidx.tracing.TraceKt$traceAsync$1: int label>;

        $i3 = $i2 - -2147483648;

        $r9.<androidx.tracing.TraceKt$traceAsync$1: int label> = $i3;

        goto label02;

     label01:
        $r4 = new androidx.tracing.TraceKt$traceAsync$1;

        specialinvoke $r4.<androidx.tracing.TraceKt$traceAsync$1: void <init>(kotlin.coroutines.Continuation)>(r1);

        $r9 = $r4;

     label02:
        $r2 = $r9.<androidx.tracing.TraceKt$traceAsync$1: java.lang.Object result>;

        r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i5 = $r9.<androidx.tracing.TraceKt$traceAsync$1: int label>;

        tableswitch($i5)
        {
            case 0: goto label03;
            case 1: goto label06;
            default: goto label12;
        };

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

     label04:
        staticinvoke <androidx.tracing.Trace: void beginAsyncSection(java.lang.String,int)>(r8, i4);

        $r9.<androidx.tracing.TraceKt$traceAsync$1: java.lang.Object L$0> = r8;

        $r9.<androidx.tracing.TraceKt$traceAsync$1: int I$0> = i4;

        $r9.<androidx.tracing.TraceKt$traceAsync$1: int label> = 1;

        $r10 = interfaceinvoke r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r9);

     label05:
        if $r10 != r3 goto label08;

        return r3;

     label06:
        i4 = $r9.<androidx.tracing.TraceKt$traceAsync$1: int I$0>;

        $r5 = $r9.<androidx.tracing.TraceKt$traceAsync$1: java.lang.Object L$0>;

        r8 = (java.lang.String) $r5;

     label07:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        $r10 = $r2;

     label08:
        r11 = $r10;

     label09:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        staticinvoke <androidx.tracing.Trace: void endAsyncSection(java.lang.String,int)>(r8, i4);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        return r11;

     label10:
        $r7 := @caughtexception;

        r12 = $r7;

     label11:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        staticinvoke <androidx.tracing.Trace: void endAsyncSection(java.lang.String,int)>(r8, i4);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw r12;

     label12:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r6;

        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label07 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private static final java.lang.Object traceAsync$$forInline(java.lang.String, int, kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation)
    {
        java.lang.String r0;
        int i0;
        kotlin.jvm.functions.Function1 r1;
        kotlin.coroutines.Continuation $r2;
        java.lang.Throwable $r3, r5;
        java.lang.Object r4;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: kotlin.jvm.functions.Function1;

        $r2 := @parameter3: kotlin.coroutines.Continuation;

     label1:
        staticinvoke <androidx.tracing.Trace: void beginAsyncSection(java.lang.String,int)>(r0, i0);

        r4 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

     label2:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        staticinvoke <androidx.tracing.Trace: void endAsyncSection(java.lang.String,int)>(r0, i0);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        return r4;

     label3:
        $r3 := @caughtexception;

        r5 = $r3;

     label4:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        staticinvoke <androidx.tracing.Trace: void endAsyncSection(java.lang.String,int)>(r0, i0);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

