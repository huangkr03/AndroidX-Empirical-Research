com.google.protobuf.CodedOutputStream
<com.google.protobuf.CodedOutputStream: boolean HAS_UNSAFE_ARRAY_OPERATIONS>
<com.google.protobuf.CodedOutputStream: java.util.logging.Logger logger>
<com.google.protobuf.CodedOutputStream: boolean serializationDeterministic>
<com.google.protobuf.CodedOutputStream: com.google.protobuf.CodedOutputStreamWriter wrapper>
    static volatile boolean '-$$Nest$sfgetHAS_UNSAFE_ARRAY_OPERATIONS'()
    {
        boolean z0;

        z0 = <com.google.protobuf.CodedOutputStream: boolean HAS_UNSAFE_ARRAY_OPERATIONS>;

        return z0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;
        boolean $z0;

        $r0 = class "Lcom/google/protobuf/CodedOutputStream;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.google.protobuf.CodedOutputStream: java.util.logging.Logger logger> = $r2;

        $z0 = staticinvoke <com.google.protobuf.UnsafeUtil: boolean hasUnsafeArrayOperations()>();

        <com.google.protobuf.CodedOutputStream: boolean HAS_UNSAFE_ARRAY_OPERATIONS> = $z0;

        return;
    }

    private void <init>()
    {
        com.google.protobuf.CodedOutputStream $r0;

        $r0 := @this: com.google.protobuf.CodedOutputStream;

        specialinvoke $r0.<com.google.protobuf.ByteOutput: void <init>()>();

        return;
    }

    void <init>(com.google.protobuf.CodedOutputStream-IA)
    {
        com.google.protobuf.CodedOutputStream $r0;
        com.google.protobuf.CodedOutputStream-IA $r1;

        $r0 := @this: com.google.protobuf.CodedOutputStream;

        $r1 := @parameter0: com.google.protobuf.CodedOutputStream-IA;

        specialinvoke $r0.<com.google.protobuf.CodedOutputStream: void <init>()>();

        return;
    }

    public static int computeBoolSize(int, boolean)
    {
        int $i0, $i1;
        boolean $z0;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeBoolSizeNoTag(boolean)>($z0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeBoolSizeNoTag(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        return 1;
    }

    public static int computeByteArraySizeNoTag(byte[])
    {
        int $i0;
        byte[] $r0;

        $r0 := @parameter0: byte[];

        $i0 = lengthof $r0;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeLengthDelimitedFieldSize(int)>($i0);

        return $i0;
    }

    public static int computeBytesSize(int, com.google.protobuf.ByteString)
    {
        int $i0, $i1;
        com.google.protobuf.ByteString $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: com.google.protobuf.ByteString;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeBytesSizeNoTag(com.google.protobuf.ByteString)>($r0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeBytesSizeNoTag(com.google.protobuf.ByteString)
    {
        com.google.protobuf.ByteString $r0;
        int $i0;

        $r0 := @parameter0: com.google.protobuf.ByteString;

        $i0 = virtualinvoke $r0.<com.google.protobuf.ByteString: int size()>();

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeLengthDelimitedFieldSize(int)>($i0);

        return $i0;
    }

    public static int computeDoubleSize(int, double)
    {
        int $i0, $i1;
        double $d0;

        $i0 := @parameter0: int;

        $d0 := @parameter1: double;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeDoubleSizeNoTag(double)>($d0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeDoubleSizeNoTag(double)
    {
        double $d0;

        $d0 := @parameter0: double;

        return 8;
    }

    public static int computeEnumSize(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeEnumSizeNoTag(int)>($i1);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeEnumSizeNoTag(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeInt32SizeNoTag(int)>($i0);

        return $i0;
    }

    public static int computeFixed32Size(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeFixed32SizeNoTag(int)>($i1);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeFixed32SizeNoTag(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        return 4;
    }

    public static int computeFixed64Size(int, long)
    {
        int $i0, $i2;
        long $l1;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i2 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeFixed64SizeNoTag(long)>($l1);

        $i0 = $i0 + $i2;

        return $i0;
    }

    public static int computeFixed64SizeNoTag(long)
    {
        long $l0;

        $l0 := @parameter0: long;

        return 8;
    }

    public static int computeFloatSize(int, float)
    {
        int $i0, $i1;
        float $f0;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeFloatSizeNoTag(float)>($f0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeFloatSizeNoTag(float)
    {
        float $f0;

        $f0 := @parameter0: float;

        return 4;
    }

    static int computeGroupSize(int, com.google.protobuf.MessageLite, com.google.protobuf.Schema)
    {
        com.google.protobuf.Schema $r0;
        int $i0, $i1;
        com.google.protobuf.MessageLite $r1;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.protobuf.MessageLite;

        $r0 := @parameter2: com.google.protobuf.Schema;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i0 = $i0 + $i0;

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeGroupSizeNoTag(com.google.protobuf.MessageLite,com.google.protobuf.Schema)>($r1, $r0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeGroupSizeNoTag(com.google.protobuf.MessageLite)
    {
        int $i0;
        com.google.protobuf.MessageLite $r0;

        $r0 := @parameter0: com.google.protobuf.MessageLite;

        $i0 = interfaceinvoke $r0.<com.google.protobuf.MessageLite: int getSerializedSize()>();

        return $i0;
    }

    static int computeGroupSizeNoTag(com.google.protobuf.MessageLite, com.google.protobuf.Schema)
    {
        com.google.protobuf.Schema $r0;
        int $i0;
        com.google.protobuf.MessageLite $r1;
        com.google.protobuf.AbstractMessageLite $r2;

        $r1 := @parameter0: com.google.protobuf.MessageLite;

        $r0 := @parameter1: com.google.protobuf.Schema;

        $r2 = (com.google.protobuf.AbstractMessageLite) $r1;

        $i0 = virtualinvoke $r2.<com.google.protobuf.AbstractMessageLite: int getSerializedSize(com.google.protobuf.Schema)>($r0);

        return $i0;
    }

    public static int computeInt32Size(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeInt32SizeNoTag(int)>($i1);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeInt32SizeNoTag(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeUInt32SizeNoTag(int)>($i0);

        return $i0;

     label1:
        return 10;
    }

    public static int computeInt64Size(int, long)
    {
        int $i0, $i2;
        long $l1;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i2 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeInt64SizeNoTag(long)>($l1);

        $i0 = $i0 + $i2;

        return $i0;
    }

    public static int computeInt64SizeNoTag(long)
    {
        int $i0;
        long $l1;

        $l1 := @parameter0: long;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeUInt64SizeNoTag(long)>($l1);

        return $i0;
    }

    public static int computeLazyFieldMessageSetExtensionSize(int, com.google.protobuf.LazyFieldLite)
    {
        com.google.protobuf.LazyFieldLite $r0;
        int $i0, $i1;

        $i0 := @parameter0: int;

        $r0 := @parameter1: com.google.protobuf.LazyFieldLite;

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>(1);

        $i1 = $i1 + $i1;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeUInt32Size(int,int)>(2, $i0);

        $i0 = $i1 + $i0;

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeLazyFieldSize(int,com.google.protobuf.LazyFieldLite)>(3, $r0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeLazyFieldSize(int, com.google.protobuf.LazyFieldLite)
    {
        int $i0, $i1;
        com.google.protobuf.LazyFieldLite $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: com.google.protobuf.LazyFieldLite;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeLazyFieldSizeNoTag(com.google.protobuf.LazyFieldLite)>($r0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeLazyFieldSizeNoTag(com.google.protobuf.LazyFieldLite)
    {
        com.google.protobuf.LazyFieldLite $r0;
        int $i0;

        $r0 := @parameter0: com.google.protobuf.LazyFieldLite;

        $i0 = virtualinvoke $r0.<com.google.protobuf.LazyFieldLite: int getSerializedSize()>();

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeLengthDelimitedFieldSize(int)>($i0);

        return $i0;
    }

    static int computeLengthDelimitedFieldSize(int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeUInt32SizeNoTag(int)>($i0);

        $i0 = $i1 + $i0;

        return $i0;
    }

    public static int computeMessageSetExtensionSize(int, com.google.protobuf.MessageLite)
    {
        com.google.protobuf.MessageLite $r0;
        int $i0, $i1;

        $i0 := @parameter0: int;

        $r0 := @parameter1: com.google.protobuf.MessageLite;

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>(1);

        $i1 = $i1 + $i1;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeUInt32Size(int,int)>(2, $i0);

        $i0 = $i1 + $i0;

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeMessageSize(int,com.google.protobuf.MessageLite)>(3, $r0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeMessageSize(int, com.google.protobuf.MessageLite)
    {
        int $i0, $i1;
        com.google.protobuf.MessageLite $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: com.google.protobuf.MessageLite;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeMessageSizeNoTag(com.google.protobuf.MessageLite)>($r0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    static int computeMessageSize(int, com.google.protobuf.MessageLite, com.google.protobuf.Schema)
    {
        com.google.protobuf.Schema $r0;
        int $i0, $i1;
        com.google.protobuf.MessageLite $r1;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.protobuf.MessageLite;

        $r0 := @parameter2: com.google.protobuf.Schema;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeMessageSizeNoTag(com.google.protobuf.MessageLite,com.google.protobuf.Schema)>($r1, $r0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeMessageSizeNoTag(com.google.protobuf.MessageLite)
    {
        com.google.protobuf.MessageLite $r0;
        int $i0;

        $r0 := @parameter0: com.google.protobuf.MessageLite;

        $i0 = interfaceinvoke $r0.<com.google.protobuf.MessageLite: int getSerializedSize()>();

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeLengthDelimitedFieldSize(int)>($i0);

        return $i0;
    }

    static int computeMessageSizeNoTag(com.google.protobuf.MessageLite, com.google.protobuf.Schema)
    {
        com.google.protobuf.Schema $r0;
        com.google.protobuf.MessageLite $r1;
        com.google.protobuf.AbstractMessageLite $r2;
        int $i0;

        $r1 := @parameter0: com.google.protobuf.MessageLite;

        $r0 := @parameter1: com.google.protobuf.Schema;

        $r2 = (com.google.protobuf.AbstractMessageLite) $r1;

        $i0 = virtualinvoke $r2.<com.google.protobuf.AbstractMessageLite: int getSerializedSize(com.google.protobuf.Schema)>($r0);

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeLengthDelimitedFieldSize(int)>($i0);

        return $i0;
    }

    static int computePreferredBufferSize(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        if $i0 <= 4096 goto label1;

        return 4096;

     label1:
        return $i0;
    }

    public static int computeRawMessageSetExtensionSize(int, com.google.protobuf.ByteString)
    {
        com.google.protobuf.ByteString $r0;
        int $i0, $i1;

        $i0 := @parameter0: int;

        $r0 := @parameter1: com.google.protobuf.ByteString;

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>(1);

        $i1 = $i1 + $i1;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeUInt32Size(int,int)>(2, $i0);

        $i0 = $i1 + $i0;

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeBytesSize(int,com.google.protobuf.ByteString)>(3, $r0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeSFixed32Size(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeSFixed32SizeNoTag(int)>($i1);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeSFixed32SizeNoTag(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        return 4;
    }

    public static int computeSFixed64Size(int, long)
    {
        int $i0, $i2;
        long $l1;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i2 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeSFixed64SizeNoTag(long)>($l1);

        $i0 = $i0 + $i2;

        return $i0;
    }

    public static int computeSFixed64SizeNoTag(long)
    {
        long $l0;

        $l0 := @parameter0: long;

        return 8;
    }

    public static int computeSInt32Size(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeSInt32SizeNoTag(int)>($i1);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeSInt32SizeNoTag(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int encodeZigZag32(int)>($i0);

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeUInt32SizeNoTag(int)>($i0);

        return $i0;
    }

    public static int computeSInt64Size(int, long)
    {
        int $i0, $i2;
        long $l1;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i2 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeSInt64SizeNoTag(long)>($l1);

        $i0 = $i0 + $i2;

        return $i0;
    }

    public static int computeSInt64SizeNoTag(long)
    {
        long $l0;
        int $i1;

        $l0 := @parameter0: long;

        $l0 = staticinvoke <com.google.protobuf.CodedOutputStream: long encodeZigZag64(long)>($l0);

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeUInt64SizeNoTag(long)>($l0);

        return $i1;
    }

    public static int computeStringSize(int, java.lang.String)
    {
        int $i0, $i1;
        java.lang.String $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.lang.String;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeStringSizeNoTag(java.lang.String)>($r0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeStringSizeNoTag(java.lang.String)
    {
        java.lang.String $r0;
        int $i0;
        com.google.protobuf.Utf8$UnpairedSurrogateException $r1;
        java.nio.charset.Charset $r2;
        byte[] $r3;

        $r0 := @parameter0: java.lang.String;

     label1:
        $i0 = staticinvoke <com.google.protobuf.Utf8: int encodedLength(java.lang.CharSequence)>($r0);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = <com.google.protobuf.Internal: java.nio.charset.Charset UTF_8>;

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

        $i0 = lengthof $r3;

        goto label2;

     label4:
        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeLengthDelimitedFieldSize(int)>($i0);

        return $i0;

        catch com.google.protobuf.Utf8$UnpairedSurrogateException from label1 to label2 with label3;
    }

    public static int computeTagSize(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = staticinvoke <com.google.protobuf.WireFormat: int makeTag(int,int)>($i0, 0);

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeUInt32SizeNoTag(int)>($i0);

        return $i0;
    }

    public static int computeUInt32Size(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeUInt32SizeNoTag(int)>($i1);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int computeUInt32SizeNoTag(int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 = $i0 & -128;

        if $i1 != 0 goto label1;

        return 1;

     label1:
        $i1 = $i0 & -16384;

        if $i1 != 0 goto label2;

        return 2;

     label2:
        $i1 = -2097152 & $i0;

        if $i1 != 0 goto label3;

        return 3;

     label3:
        $i0 = $i0 & -268435456;

        if $i0 != 0 goto label4;

        return 4;

     label4:
        return 5;
    }

    public static int computeUInt64Size(int, long)
    {
        int $i0, $i2;
        long $l1;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeTagSize(int)>($i0);

        $i2 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeUInt64SizeNoTag(long)>($l1);

        $i0 = $i0 + $i2;

        return $i0;
    }

    public static int computeUInt64SizeNoTag(long)
    {
        long $l0, $l1;
        byte $b2;
        int $i3;

        $l0 := @parameter0: long;

        $l1 = -128L & $l0;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        return 1;

     label1:
        $b2 = $l0 cmp 0L;

        if $b2 >= 0 goto label2;

        return 10;

     label2:
        $l1 = -34359738368L & $l0;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label3;

        $l0 = $l0 >>> 28;

        $i3 = 6;

        goto label4;

     label3:
        $i3 = 2;

     label4:
        $l1 = -2097152L & $l0;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label5;

        $i3 = $i3 + 2;

        $l0 = $l0 >>> 14;

     label5:
        $l0 = $l0 & -16384L;

        $b2 = $l0 cmp 0L;

        if $b2 == 0 goto label6;

        $i3 = $i3 + 1;

     label6:
        return $i3;
    }

    public static int encodeZigZag32(int)
    {
        int $i0, $i1;

        $i1 := @parameter0: int;

        $i0 = $i1 + $i1;

        $i1 = $i1 >> 31;

        $i1 = $i1 ^ $i0;

        return $i1;
    }

    public static long encodeZigZag64(long)
    {
        long $l0, $l1;

        $l1 := @parameter0: long;

        $l0 = $l1 + $l1;

        $l1 = $l1 >> 63;

        $l1 = $l1 ^ $l0;

        return $l1;
    }

    public static com.google.protobuf.CodedOutputStream newInstance(java.io.OutputStream, int)
    {
        java.io.OutputStream $r0;
        int $i0;
        com.google.protobuf.CodedOutputStream$OutputStreamEncoder $r1;

        $r0 := @parameter0: java.io.OutputStream;

        $i0 := @parameter1: int;

        $r1 = new com.google.protobuf.CodedOutputStream$OutputStreamEncoder;

        specialinvoke $r1.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void <init>(java.io.OutputStream,int)>($r0, $i0);

        return $r1;
    }

    public static com.google.protobuf.CodedOutputStream newInstance(byte[])
    {
        int $i0;
        com.google.protobuf.CodedOutputStream $r0;
        byte[] $r1;

        $r1 := @parameter0: byte[];

        $i0 = lengthof $r1;

        $r0 = staticinvoke <com.google.protobuf.CodedOutputStream: com.google.protobuf.CodedOutputStream newInstance(byte[],int,int)>($r1, 0, $i0);

        return $r0;
    }

    public static com.google.protobuf.CodedOutputStream newInstance(byte[], int, int)
    {
        byte[] $r0;
        int $i0, $i1;
        com.google.protobuf.CodedOutputStream$ArrayEncoder $r1;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 = new com.google.protobuf.CodedOutputStream$ArrayEncoder;

        specialinvoke $r1.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void <init>(byte[],int,int)>($r0, $i0, $i1);

        return $r1;
    }

    public final void checkNoSpaceLeft()
    {
        com.google.protobuf.CodedOutputStream $r0;
        int $i0;
        java.lang.IllegalStateException $r1;

        $r0 := @this: com.google.protobuf.CodedOutputStream;

        $i0 = virtualinvoke $r0.<com.google.protobuf.CodedOutputStream: int spaceLeft()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Did not write as much data as expected.");

        throw $r1;
    }

<com.google.protobuf.CodedOutputStream: void flush()>
    final void inefficientWriteStringNoTag(java.lang.String, com.google.protobuf.Utf8$UnpairedSurrogateException) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream $r0;
        java.util.logging.Level $r1;
        byte[] $r2;
        java.lang.String $r3;
        com.google.protobuf.Utf8$UnpairedSurrogateException $r4;
        java.util.logging.Logger $r5;
        java.nio.charset.Charset $r6;
        int $i0;
        java.lang.Throwable $r7;
        com.google.protobuf.CodedOutputStream$OutOfSpaceException $r8;

        $r0 := @this: com.google.protobuf.CodedOutputStream;

        $r3 := @parameter0: java.lang.String;

        $r4 := @parameter1: com.google.protobuf.Utf8$UnpairedSurrogateException;

        $r5 = <com.google.protobuf.CodedOutputStream: java.util.logging.Logger logger>;

        $r1 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        virtualinvoke $r5.<java.util.logging.Logger: void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>($r1, "com.google.protobuf.CodedOutputStream", "inefficientWriteStringNoTag", "Converting ill-formed UTF-16. Your Protocol Buffer will not round trip correctly!", $r4);

        $r6 = <com.google.protobuf.Internal: java.nio.charset.Charset UTF_8>;

        $r2 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r6);

        $i0 = lengthof $r2;

     label1:
        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>($i0);

     label2:
        $i0 = lengthof $r2;

     label3:
        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream: void writeLazy(byte[],int,int)>($r2, 0, $i0);

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        $r8 = new com.google.protobuf.CodedOutputStream$OutOfSpaceException;

        specialinvoke $r8.<com.google.protobuf.CodedOutputStream$OutOfSpaceException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label5;
        catch java.lang.IndexOutOfBoundsException from label3 to label4 with label5;
    }

    boolean isSerializationDeterministic()
    {
        com.google.protobuf.CodedOutputStream $r0;
        boolean z0;

        $r0 := @this: com.google.protobuf.CodedOutputStream;

        z0 = $r0.<com.google.protobuf.CodedOutputStream: boolean serializationDeterministic>;

        return z0;
    }

<com.google.protobuf.CodedOutputStream: int spaceLeft()>
<com.google.protobuf.CodedOutputStream: void write(byte)>
<com.google.protobuf.CodedOutputStream: void writeBool(int,boolean)>
    public final void writeBoolNoTag(boolean) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream $r0;
        boolean $z0;
        byte $b0;

        $r0 := @this: com.google.protobuf.CodedOutputStream;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream: void write(byte)>($b0);

        return;
    }

    public final void writeByteArrayNoTag(byte[]) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream $r0;
        byte[] $r1;
        int $i0;

        $r0 := @this: com.google.protobuf.CodedOutputStream;

        $r1 := @parameter0: byte[];

        $i0 = lengthof $r1;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream: void writeByteArrayNoTag(byte[],int,int)>($r1, 0, $i0);

        return;
    }

<com.google.protobuf.CodedOutputStream: void writeByteArrayNoTag(byte[],int,int)>
<com.google.protobuf.CodedOutputStream: void writeBytes(int,com.google.protobuf.ByteString)>
<com.google.protobuf.CodedOutputStream: void writeBytesNoTag(com.google.protobuf.ByteString)>
    public final void writeDouble(int, double) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream $r0;
        int $i0;
        long $l1;
        double $d0;

        $r0 := @this: com.google.protobuf.CodedOutputStream;

        $i0 := @parameter0: int;

        $d0 := @parameter1: double;

        $l1 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>($d0);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream: void writeFixed64(int,long)>($i0, $l1);

        return;
    }

    public final void writeDoubleNoTag(double) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream $r0;
        long $l0;
        double $d0;

        $r0 := @this: com.google.protobuf.CodedOutputStream;

        $d0 := @parameter0: double;

        $l0 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>($d0);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream: void writeFixed64NoTag(long)>($l0);

        return;
    }

    public final void writeEnum(int, int) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream $r0;
        int $i0, $i1;

        $r0 := @this: com.google.protobuf.CodedOutputStream;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream: void writeInt32(int,int)>($i0, $i1);

        return;
    }

    public final void writeEnumNoTag(int) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream $r0;
        int $i0;

        $r0 := @this: com.google.protobuf.CodedOutputStream;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream: void writeInt32NoTag(int)>($i0);

        return;
    }

<com.google.protobuf.CodedOutputStream: void writeFixed32(int,int)>
<com.google.protobuf.CodedOutputStream: void writeFixed32NoTag(int)>
<com.google.protobuf.CodedOutputStream: void writeFixed64(int,long)>
<com.google.protobuf.CodedOutputStream: void writeFixed64NoTag(long)>
    public final void writeFloat(int, float) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream $r0;
        int $i0, $i1;
        float $f0;

        $r0 := @this: com.google.protobuf.CodedOutputStream;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $i1 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>($f0);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream: void writeFixed32(int,int)>($i0, $i1);

        return;
    }

    public final void writeFloatNoTag(float) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream $r0;
        int $i0;
        float $f0;

        $r0 := @this: com.google.protobuf.CodedOutputStream;

        $f0 := @parameter0: float;

        $i0 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>($f0);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream: void writeFixed32NoTag(int)>($i0);

        return;
    }

    public final void writeGroup(int, com.google.protobuf.MessageLite) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream $r0;
        int $i0;
        com.google.protobuf.MessageLite $r1;

        $r0 := @this: com.google.protobuf.CodedOutputStream;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.protobuf.MessageLite;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>($i0, 3);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream: void writeGroupNoTag(com.google.protobuf.MessageLite)>($r1);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>($i0, 4);

        return;
    }

    final void writeGroup(int, com.google.protobuf.MessageLite, com.google.protobuf.Schema) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream $r0;
        int $i0;
        com.google.protobuf.Schema $r1;
        com.google.protobuf.MessageLite $r2;

        $r0 := @this: com.google.protobuf.CodedOutputStream;

        $i0 := @parameter0: int;

        $r2 := @parameter1: com.google.protobuf.MessageLite;

        $r1 := @parameter2: com.google.protobuf.Schema;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>($i0, 3);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream: void writeGroupNoTag(com.google.protobuf.MessageLite,com.google.protobuf.Schema)>($r2, $r1);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>($i0, 4);

        return;
    }

    public final void writeGroupNoTag(com.google.protobuf.MessageLite) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream $r0;
        com.google.protobuf.MessageLite $r1;

        $r0 := @this: com.google.protobuf.CodedOutputStream;

        $r1 := @parameter0: com.google.protobuf.MessageLite;

        interfaceinvoke $r1.<com.google.protobuf.MessageLite: void writeTo(com.google.protobuf.CodedOutputStream)>($r0);

        return;
    }

    final void writeGroupNoTag(com.google.protobuf.MessageLite, com.google.protobuf.Schema) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream $r0;
        com.google.protobuf.MessageLite $r1;
        com.google.protobuf.Schema $r2;
        com.google.protobuf.CodedOutputStreamWriter $r3;

        $r0 := @this: com.google.protobuf.CodedOutputStream;

        $r1 := @parameter0: com.google.protobuf.MessageLite;

        $r2 := @parameter1: com.google.protobuf.Schema;

        $r3 = $r0.<com.google.protobuf.CodedOutputStream: com.google.protobuf.CodedOutputStreamWriter wrapper>;

        interfaceinvoke $r2.<com.google.protobuf.Schema: void writeTo(java.lang.Object,com.google.protobuf.Writer)>($r1, $r3);

        return;
    }

<com.google.protobuf.CodedOutputStream: void writeInt32(int,int)>
<com.google.protobuf.CodedOutputStream: void writeInt32NoTag(int)>
    public final void writeInt64(int, long) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream $r0;
        int $i0;
        long $l1;

        $r0 := @this: com.google.protobuf.CodedOutputStream;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream: void writeUInt64(int,long)>($i0, $l1);

        return;
    }

    public final void writeInt64NoTag(long) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream $r0;
        long $l0;

        $r0 := @this: com.google.protobuf.CodedOutputStream;

        $l0 := @parameter0: long;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream: void writeUInt64NoTag(long)>($l0);

        return;
    }

<com.google.protobuf.CodedOutputStream: void writeLazy(byte[],int,int)>
<com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite,com.google.protobuf.Schema)>
<com.google.protobuf.CodedOutputStream: void writeMessageNoTag(com.google.protobuf.MessageLite)>
<com.google.protobuf.CodedOutputStream: void writeMessageSetExtension(int,com.google.protobuf.MessageLite)>
<com.google.protobuf.CodedOutputStream: void writeRawMessageSetExtension(int,com.google.protobuf.ByteString)>
    public final void writeSFixed32(int, int) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream $r0;
        int $i0, $i1;

        $r0 := @this: com.google.protobuf.CodedOutputStream;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream: void writeFixed32(int,int)>($i0, $i1);

        return;
    }

    public final void writeSFixed32NoTag(int) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream $r0;
        int $i0;

        $r0 := @this: com.google.protobuf.CodedOutputStream;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream: void writeFixed32NoTag(int)>($i0);

        return;
    }

    public final void writeSFixed64(int, long) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream $r0;
        int $i0;
        long $l1;

        $r0 := @this: com.google.protobuf.CodedOutputStream;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream: void writeFixed64(int,long)>($i0, $l1);

        return;
    }

    public final void writeSFixed64NoTag(long) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream $r0;
        long $l0;

        $r0 := @this: com.google.protobuf.CodedOutputStream;

        $l0 := @parameter0: long;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream: void writeFixed64NoTag(long)>($l0);

        return;
    }

    public final void writeSInt32(int, int) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream $r0;
        int $i0, $i1;

        $r0 := @this: com.google.protobuf.CodedOutputStream;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int encodeZigZag32(int)>($i1);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream: void writeUInt32(int,int)>($i0, $i1);

        return;
    }

    public final void writeSInt32NoTag(int) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream $r0;
        int $i0;

        $r0 := @this: com.google.protobuf.CodedOutputStream;

        $i0 := @parameter0: int;

        $i0 = staticinvoke <com.google.protobuf.CodedOutputStream: int encodeZigZag32(int)>($i0);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>($i0);

        return;
    }

    public final void writeSInt64(int, long) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream $r0;
        int $i0;
        long $l1;

        $r0 := @this: com.google.protobuf.CodedOutputStream;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $l1 = staticinvoke <com.google.protobuf.CodedOutputStream: long encodeZigZag64(long)>($l1);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream: void writeUInt64(int,long)>($i0, $l1);

        return;
    }

    public final void writeSInt64NoTag(long) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream $r0;
        long $l0;

        $r0 := @this: com.google.protobuf.CodedOutputStream;

        $l0 := @parameter0: long;

        $l0 = staticinvoke <com.google.protobuf.CodedOutputStream: long encodeZigZag64(long)>($l0);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream: void writeUInt64NoTag(long)>($l0);

        return;
    }

<com.google.protobuf.CodedOutputStream: void writeString(int,java.lang.String)>
<com.google.protobuf.CodedOutputStream: void writeStringNoTag(java.lang.String)>
<com.google.protobuf.CodedOutputStream: void writeTag(int,int)>
<com.google.protobuf.CodedOutputStream: void writeUInt32(int,int)>
<com.google.protobuf.CodedOutputStream: void writeUInt32NoTag(int)>
<com.google.protobuf.CodedOutputStream: void writeUInt64(int,long)>
<com.google.protobuf.CodedOutputStream: void writeUInt64NoTag(long)>
com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder
<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>
<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int limit>
<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>
<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten>
    void <init>(int)
    {
        com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder $r0;
        int $i0;
        byte[] $r1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @this: com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder;

        $i0 := @parameter0: int;

        specialinvoke $r0.<com.google.protobuf.CodedOutputStream: void <init>(com.google.protobuf.CodedOutputStream-IA)>(null);

        if $i0 < 0 goto label1;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, 20);

        $r1 = newarray (byte)[$i0];

        $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer> = $r1;

        $i0 = lengthof $r1;

        $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int limit> = $i0;

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bufferSize must be >= 0");

        throw $r2;
    }

    final void buffer(byte)
    {
        com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder $r0;
        byte[] $r1;
        int $i0, $i1;
        byte $b2;

        $r0 := @this: com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder;

        $b2 := @parameter0: byte;

        $r1 = $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        $i0 = $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i1 = $i0 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i1;

        $r1[$i0] = $b2;

        $i0 = $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten>;

        $i0 = $i0 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten> = $i0;

        return;
    }

    final void bufferFixed32NoTag(int)
    {
        com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder $r0;
        byte[] $r1;
        int $i0, $i1, $i2, $i3;
        byte $b4;

        $r0 := @this: com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        $i1 = $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i2 = $i1 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i2;

        $i3 = $i0 & 255;

        $b4 = (byte) $i3;

        $r1[$i1] = $b4;

        $i1 = $i2 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i1;

        $i3 = $i0 >> 8;

        $i3 = $i3 & 255;

        $b4 = (byte) $i3;

        $r1[$i2] = $b4;

        $i2 = $i1 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i2;

        $i3 = $i0 >> 16;

        $i3 = $i3 & 255;

        $b4 = (byte) $i3;

        $r1[$i1] = $b4;

        $i1 = $i2 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i1;

        $i0 = $i0 >> 24;

        $i0 = $i0 & 255;

        $b4 = (byte) $i0;

        $r1[$i2] = $b4;

        $i0 = $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten>;

        $i0 = $i0 + 4;

        $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten> = $i0;

        return;
    }

    final void bufferFixed64NoTag(long)
    {
        com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder $r0;
        int $i0, $i2, $i4;
        byte[] $r1;
        long $l1, $l3;
        byte $b5;

        $r0 := @this: com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder;

        $l1 := @parameter0: long;

        $r1 = $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        $i0 = $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i2 = $i0 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i2;

        $l3 = $l1 & 255L;

        $i4 = (int) $l3;

        $b5 = (byte) $i4;

        $r1[$i0] = $b5;

        $i0 = $i2 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i0;

        $l3 = $l1 >> 8;

        $l3 = $l3 & 255L;

        $i4 = (int) $l3;

        $b5 = (byte) $i4;

        $r1[$i2] = $b5;

        $i2 = $i0 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i2;

        $l3 = $l1 >> 16;

        $l3 = $l3 & 255L;

        $i4 = (int) $l3;

        $b5 = (byte) $i4;

        $r1[$i0] = $b5;

        $i0 = $i2 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i0;

        $l3 = $l1 >> 24;

        $l3 = 255L & $l3;

        $i4 = (int) $l3;

        $b5 = (byte) $i4;

        $r1[$i2] = $b5;

        $i2 = $i0 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i2;

        $l3 = $l1 >> 32;

        $i4 = (int) $l3;

        $i4 = $i4 & 255;

        $b5 = (byte) $i4;

        $r1[$i0] = $b5;

        $i0 = $i2 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i0;

        $l3 = $l1 >> 40;

        $i4 = (int) $l3;

        $i4 = $i4 & 255;

        $b5 = (byte) $i4;

        $r1[$i2] = $b5;

        $i2 = $i0 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i2;

        $l3 = $l1 >> 48;

        $i4 = (int) $l3;

        $i4 = $i4 & 255;

        $b5 = (byte) $i4;

        $r1[$i0] = $b5;

        $i0 = $i2 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i0;

        $l1 = $l1 >> 56;

        $i0 = (int) $l1;

        $i0 = $i0 & 255;

        $b5 = (byte) $i0;

        $r1[$i2] = $b5;

        $i2 = $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten>;

        $i2 = $i2 + 8;

        $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten> = $i2;

        return;
    }

    final void bufferInt32NoTag(int)
    {
        com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder $r0;
        int $i0;
        long $l1;

        $r0 := @this: com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: void bufferUInt32NoTag(int)>($i0);

        return;

     label1:
        $l1 = (long) $i0;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: void bufferUInt64NoTag(long)>($l1);

        return;
    }

    final void bufferTag(int, int)
    {
        com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder $r0;
        int $i0, $i1;

        $r0 := @this: com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 = staticinvoke <com.google.protobuf.WireFormat: int makeTag(int,int)>($i1, $i0);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: void bufferUInt32NoTag(int)>($i1);

        return;
    }

    final void bufferUInt32NoTag(int)
    {
        com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder $r0;
        boolean $z0;
        int $i0, $i1, $i3;
        long $l2, $l4;
        byte[] $r1;
        byte $b5;

        $r0 := @this: com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder;

        $i0 := @parameter0: int;

        $z0 = staticinvoke <com.google.protobuf.CodedOutputStream: boolean '-$$Nest$sfgetHAS_UNSAFE_ARRAY_OPERATIONS'()>();

        if $z0 == 0 goto label3;

        $i1 = $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $l2 = (long) $i1;

     label1:
        $i1 = $i0 & -128;

        if $i1 != 0 goto label2;

        $r1 = $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        $i1 = $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i3 = $i1 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i3;

        $l4 = (long) $i1;

        $b5 = (byte) $i0;

        staticinvoke <com.google.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>($r1, $l4, $b5);

        $i1 = $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i0 = $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten>;

        $l4 = (long) $i1;

        $l2 = $l4 - $l2;

        $i1 = (int) $l2;

        $i0 = $i0 + $i1;

        $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten> = $i0;

        return;

     label2:
        $r1 = $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        $i1 = $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i3 = $i1 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i3;

        $l4 = (long) $i1;

        $i1 = $i0 & 127;

        $i1 = $i1 | 128;

        $b5 = (byte) $i1;

        staticinvoke <com.google.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>($r1, $l4, $b5);

        $i0 = $i0 >>> 7;

        goto label1;

     label3:
        $i1 = $i0 & -128;

        if $i1 != 0 goto label4;

        $r1 = $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        $i1 = $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i3 = $i1 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i3;

        $b5 = (byte) $i0;

        $r1[$i1] = $b5;

        $i0 = $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten>;

        $i0 = $i0 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten> = $i0;

        return;

     label4:
        $r1 = $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        $i1 = $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i3 = $i1 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i3;

        $i3 = $i0 & 127;

        $i3 = $i3 | 128;

        $b5 = (byte) $i3;

        $r1[$i1] = $b5;

        $i1 = $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten>;

        $i1 = $i1 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten> = $i1;

        $i0 = $i0 >>> 7;

        goto label3;
    }

    final void bufferUInt64NoTag(long)
    {
        com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder $r0;
        int $i0, $i5;
        boolean $z0;
        long $l1, $l2, $l3;
        byte $b4;
        byte[] $r1;

        $r0 := @this: com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder;

        $l1 := @parameter0: long;

        $z0 = staticinvoke <com.google.protobuf.CodedOutputStream: boolean '-$$Nest$sfgetHAS_UNSAFE_ARRAY_OPERATIONS'()>();

        if $z0 == 0 goto label3;

        $i0 = $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $l2 = (long) $i0;

     label1:
        $l3 = $l1 & -128L;

        $b4 = $l3 cmp 0L;

        if $b4 != 0 goto label2;

        $r1 = $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        $i0 = $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i5 = $i0 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i5;

        $l3 = (long) $i0;

        $i0 = (int) $l1;

        $b4 = (byte) $i0;

        staticinvoke <com.google.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>($r1, $l3, $b4);

        $i5 = $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i0 = $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten>;

        $l1 = (long) $i5;

        $l1 = $l1 - $l2;

        $i5 = (int) $l1;

        $i0 = $i0 + $i5;

        $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten> = $i0;

        return;

     label2:
        $r1 = $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        $i5 = $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i0 = $i5 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i0;

        $l3 = (long) $i5;

        $i0 = (int) $l1;

        $i0 = $i0 & 127;

        $i0 = $i0 | 128;

        $b4 = (byte) $i0;

        staticinvoke <com.google.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>($r1, $l3, $b4);

        $l1 = $l1 >>> 7;

        goto label1;

     label3:
        $l2 = $l1 & -128L;

        $b4 = $l2 cmp 0L;

        if $b4 != 0 goto label4;

        $r1 = $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        $i0 = $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i5 = $i0 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i5;

        $i5 = (int) $l1;

        $b4 = (byte) $i5;

        $r1[$i0] = $b4;

        $i0 = $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten>;

        $i0 = $i0 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten> = $i0;

        return;

     label4:
        $r1 = $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: byte[] buffer>;

        $i0 = $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position>;

        $i5 = $i0 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int position> = $i5;

        $i5 = (int) $l1;

        $i5 = $i5 & 127;

        $i5 = $i5 | 128;

        $b4 = (byte) $i5;

        $r1[$i0] = $b4;

        $i0 = $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten>;

        $i0 = $i0 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: int totalBytesWritten> = $i0;

        $l1 = $l1 >>> 7;

        goto label3;
    }

    public final int spaceLeft()
    {
        com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder $r0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("spaceLeft() can only be called on CodedOutputStreams that are writing to a flat array or ByteBuffer.");

        throw $r1;
    }

com.google.protobuf.CodedOutputStream$ArrayEncoder
<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>
<com.google.protobuf.CodedOutputStream$ArrayEncoder: int limit>
<com.google.protobuf.CodedOutputStream$ArrayEncoder: int offset>
<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>
    void <init>(byte[], int, int)
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder $r0;
        int $i0, $i1, $i2, $i3, $i4;
        byte[] $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.Object[] $r3;
        java.lang.Integer $r4;
        java.lang.String $r5;
        java.lang.NullPointerException $r6;

        $r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $r1 := @parameter0: byte[];

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        specialinvoke $r0.<com.google.protobuf.CodedOutputStream: void <init>(com.google.protobuf.CodedOutputStream-IA)>(null);

        if $r1 == null goto label2;

        $i2 = $i1 | $i0;

        $i3 = lengthof $r1;

        $i4 = $i1 + $i0;

        $i3 = $i3 - $i4;

        $i2 = $i2 | $i3;

        if $i2 < 0 goto label1;

        $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer> = $r1;

        $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int offset> = $i1;

        $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i1;

        $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int limit> = $i4;

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = newarray (java.lang.Object)[3];

        $i4 = lengthof $r1;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r3[0] = $r4;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3[1] = $r4;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3[2] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Array range is invalid. Buffer.length=%d, offset=%d, length=%d", $r3);

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r2;

     label2:
        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("buffer");

        throw $r6;
    }

    public void flush()
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder $r0;

        $r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        return;
    }

    public final int spaceLeft()
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder $r0;
        int $i0, $i1;

        $r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i1 = $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int limit>;

        $i0 = $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i0 = $i1 - $i0;

        return $i0;
    }

    public final void write(byte) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder $r0;
        byte $b0;
        byte[] $r1;
        int $i1, $i2;

        $r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $b0 := @parameter0: byte;

        $r1 = $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i2 = $i1 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        $r1[$i1] = $b0;

        return;
    }

    public final void write(byte[], int, int) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder $r0;
        byte[] $r1, $r2;
        int $i0, $i1, $i2;

        $r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i2 = $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r2, $i2, $i1);

        $i0 = $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i0 = $i0 + $i1;

        $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i0;

        return;
    }

    public final void writeBool(int, boolean) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder $r0;
        int $i0;
        boolean $z0;
        byte $b1;

        $r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $b1 = 0;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>($i0, 0);

        if $z0 == 0 goto label1;

        $b1 = 1;

        goto label1;

     label1:
        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void write(byte)>($b1);

        return;
    }

    public final void writeByteArrayNoTag(byte[], int, int) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder $r0;
        byte[] $r1;
        int $i0, $i1;

        $r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>($i1);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void write(byte[],int,int)>($r1, $i0, $i1);

        return;
    }

    public final void writeBytes(int, com.google.protobuf.ByteString) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder $r0;
        int $i0;
        com.google.protobuf.ByteString $r1;

        $r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.protobuf.ByteString;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>($i0, 2);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeBytesNoTag(com.google.protobuf.ByteString)>($r1);

        return;
    }

    public final void writeBytesNoTag(com.google.protobuf.ByteString) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder $r0;
        com.google.protobuf.ByteString $r1;
        int $i0;

        $r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $r1 := @parameter0: com.google.protobuf.ByteString;

        $i0 = virtualinvoke $r1.<com.google.protobuf.ByteString: int size()>();

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>($i0);

        virtualinvoke $r1.<com.google.protobuf.ByteString: void writeTo(com.google.protobuf.ByteOutput)>($r0);

        return;
    }

    public final void writeFixed32(int, int) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder $r0;
        int $i0, $i1;

        $r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>($i0, 5);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeFixed32NoTag(int)>($i1);

        return;
    }

    public final void writeFixed32NoTag(int) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder $r0;
        int $i0, $i1, $i2, $i3;
        byte[] $r1;
        byte $b4;

        $r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i2 = $i1 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        $i3 = $i0 & 255;

        $b4 = (byte) $i3;

        $r1[$i1] = $b4;

        $i1 = $i2 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i1;

        $i3 = $i0 >> 8;

        $i3 = $i3 & 255;

        $b4 = (byte) $i3;

        $r1[$i2] = $b4;

        $i2 = $i1 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        $i3 = $i0 >> 16;

        $i3 = $i3 & 255;

        $b4 = (byte) $i3;

        $r1[$i1] = $b4;

        $i1 = $i2 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i1;

        $i0 = $i0 >> 24;

        $i0 = $i0 & 255;

        $b4 = (byte) $i0;

        $r1[$i2] = $b4;

        return;
    }

    public final void writeFixed64(int, long) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder $r0;
        int $i0;
        long $l1;

        $r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>($i0, 1);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeFixed64NoTag(long)>($l1);

        return;
    }

    public final void writeFixed64NoTag(long) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder $r0;
        long $l0, $l5;
        byte[] $r1;
        int $i1, $i2, $i3;
        byte $b4;

        $r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $l0 := @parameter0: long;

        $r1 = $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i2 = $i1 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        $i3 = (int) $l0;

        $i3 = $i3 & 255;

        $b4 = (byte) $i3;

        $r1[$i1] = $b4;

        $i1 = $i2 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i1;

        $l5 = $l0 >> 8;

        $i3 = (int) $l5;

        $i3 = $i3 & 255;

        $b4 = (byte) $i3;

        $r1[$i2] = $b4;

        $i2 = $i1 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        $l5 = $l0 >> 16;

        $i3 = (int) $l5;

        $i3 = $i3 & 255;

        $b4 = (byte) $i3;

        $r1[$i1] = $b4;

        $i1 = $i2 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i1;

        $l5 = $l0 >> 24;

        $i3 = (int) $l5;

        $i3 = $i3 & 255;

        $b4 = (byte) $i3;

        $r1[$i2] = $b4;

        $i2 = $i1 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        $l5 = $l0 >> 32;

        $i3 = (int) $l5;

        $i3 = $i3 & 255;

        $b4 = (byte) $i3;

        $r1[$i1] = $b4;

        $i1 = $i2 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i1;

        $l5 = $l0 >> 40;

        $i3 = (int) $l5;

        $i3 = $i3 & 255;

        $b4 = (byte) $i3;

        $r1[$i2] = $b4;

        $i2 = $i1 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        $l5 = $l0 >> 48;

        $i3 = (int) $l5;

        $i3 = $i3 & 255;

        $b4 = (byte) $i3;

        $r1[$i1] = $b4;

        $i1 = $i2 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i1;

        $l0 = $l0 >> 56;

        $i1 = (int) $l0;

        $i1 = $i1 & 255;

        $b4 = (byte) $i1;

        $r1[$i2] = $b4;

        return;
    }

    public final void writeInt32(int, int) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder $r0;
        int $i0, $i1;

        $r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>($i0, 0);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeInt32NoTag(int)>($i1);

        return;
    }

    public final void writeInt32NoTag(int) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder $r0;
        int $i0;
        long $l1;

        $r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>($i0);

        return;

     label1:
        $l1 = (long) $i0;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt64NoTag(long)>($l1);

        return;
    }

    public final void writeLazy(byte[], int, int) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder $r0;
        byte[] $r1;
        int $i0, $i1;

        $r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void write(byte[],int,int)>($r1, $i0, $i1);

        return;
    }

    public final void writeMessage(int, com.google.protobuf.MessageLite) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder $r0;
        int $i0;
        com.google.protobuf.MessageLite $r1;

        $r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.protobuf.MessageLite;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>($i0, 2);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeMessageNoTag(com.google.protobuf.MessageLite)>($r1);

        return;
    }

    final void writeMessage(int, com.google.protobuf.MessageLite, com.google.protobuf.Schema) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder $r0;
        com.google.protobuf.MessageLite $r1;
        com.google.protobuf.Schema $r2;
        int $i0;
        com.google.protobuf.AbstractMessageLite $r3;
        com.google.protobuf.CodedOutputStreamWriter $r4;

        $r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.protobuf.MessageLite;

        $r2 := @parameter2: com.google.protobuf.Schema;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>($i0, 2);

        $r3 = (com.google.protobuf.AbstractMessageLite) $r1;

        $i0 = virtualinvoke $r3.<com.google.protobuf.AbstractMessageLite: int getSerializedSize(com.google.protobuf.Schema)>($r2);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>($i0);

        $r4 = $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: com.google.protobuf.CodedOutputStreamWriter wrapper>;

        interfaceinvoke $r2.<com.google.protobuf.Schema: void writeTo(java.lang.Object,com.google.protobuf.Writer)>($r1, $r4);

        return;
    }

    public final void writeMessageNoTag(com.google.protobuf.MessageLite) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder $r0;
        com.google.protobuf.MessageLite $r1;
        int $i0;

        $r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $r1 := @parameter0: com.google.protobuf.MessageLite;

        $i0 = interfaceinvoke $r1.<com.google.protobuf.MessageLite: int getSerializedSize()>();

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>($i0);

        interfaceinvoke $r1.<com.google.protobuf.MessageLite: void writeTo(com.google.protobuf.CodedOutputStream)>($r0);

        return;
    }

    public final void writeMessageSetExtension(int, com.google.protobuf.MessageLite) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder $r0;
        com.google.protobuf.MessageLite $r1;
        int $i0;

        $r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.protobuf.MessageLite;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>(1, 3);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32(int,int)>(2, $i0);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeMessage(int,com.google.protobuf.MessageLite)>(3, $r1);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>(1, 4);

        return;
    }

    public final void writeRawMessageSetExtension(int, com.google.protobuf.ByteString) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder $r0;
        com.google.protobuf.ByteString $r1;
        int $i0;

        $r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.protobuf.ByteString;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>(1, 3);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32(int,int)>(2, $i0);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeBytes(int,com.google.protobuf.ByteString)>(3, $r1);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>(1, 4);

        return;
    }

    public final void writeString(int, java.lang.String) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder $r0;
        int $i0;
        java.lang.String $r1;

        $r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>($i0, 2);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeStringNoTag(java.lang.String)>($r1);

        return;
    }

    public final void writeStringNoTag(java.lang.String) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder $r0;
        java.lang.String $r1;
        int $i0, $i1, $i2, $i3;
        byte[] $r2;
        java.lang.Throwable $r3;
        com.google.protobuf.CodedOutputStream$OutOfSpaceException $r4;
        com.google.protobuf.Utf8$UnpairedSurrogateException $r5;

        $r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $r1 := @parameter0: java.lang.String;

        $i0 = $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

     label01:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

     label02:
        $i1 = $i1 * 3;

     label03:
        $i2 = staticinvoke <com.google.protobuf.CodedOutputStream$ArrayEncoder: int computeUInt32SizeNoTag(int)>($i1);

     label04:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

     label05:
        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream$ArrayEncoder: int computeUInt32SizeNoTag(int)>($i1);

     label06:
        if $i1 != $i2 goto label12;

        $i2 = $i0 + $i1;

        $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        $r2 = $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

     label07:
        $i3 = virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int spaceLeft()>();

     label08:
        $i2 = staticinvoke <com.google.protobuf.Utf8: int encode(java.lang.CharSequence,byte[],int,int)>($r1, $r2, $i2, $i3);

     label09:
        $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i0;

        $i3 = $i2 - $i0;

        $i1 = $i3 - $i1;

     label10:
        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>($i1);

     label11:
        $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        return;

     label12:
        $i1 = staticinvoke <com.google.protobuf.Utf8: int encodedLength(java.lang.CharSequence)>($r1);

     label13:
        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>($i1);

     label14:
        $r2 = $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

     label15:
        $i2 = virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int spaceLeft()>();

     label16:
        $i1 = staticinvoke <com.google.protobuf.Utf8: int encode(java.lang.CharSequence,byte[],int,int)>($r1, $r2, $i1, $i2);

     label17:
        $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i1;

        return;

     label18:
        $r3 := @caughtexception;

        $r4 = new com.google.protobuf.CodedOutputStream$OutOfSpaceException;

        specialinvoke $r4.<com.google.protobuf.CodedOutputStream$OutOfSpaceException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

     label19:
        $r5 := @caughtexception;

        $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i0;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void inefficientWriteStringNoTag(java.lang.String,com.google.protobuf.Utf8$UnpairedSurrogateException)>($r1, $r5);

        return;

        catch com.google.protobuf.Utf8$UnpairedSurrogateException from label01 to label02 with label19;
        catch com.google.protobuf.Utf8$UnpairedSurrogateException from label03 to label06 with label19;
        catch com.google.protobuf.Utf8$UnpairedSurrogateException from label07 to label09 with label19;
        catch com.google.protobuf.Utf8$UnpairedSurrogateException from label10 to label11 with label19;
        catch com.google.protobuf.Utf8$UnpairedSurrogateException from label12 to label14 with label19;
        catch com.google.protobuf.Utf8$UnpairedSurrogateException from label15 to label17 with label19;
        catch java.lang.IndexOutOfBoundsException from label01 to label02 with label18;
        catch java.lang.IndexOutOfBoundsException from label04 to label05 with label18;
        catch java.lang.IndexOutOfBoundsException from label07 to label08 with label18;
        catch java.lang.IndexOutOfBoundsException from label10 to label11 with label18;
        catch java.lang.IndexOutOfBoundsException from label13 to label14 with label18;
        catch java.lang.IndexOutOfBoundsException from label15 to label16 with label18;
    }

    public final void writeTag(int, int) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder $r0;
        int $i0, $i1;

        $r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 = staticinvoke <com.google.protobuf.WireFormat: int makeTag(int,int)>($i1, $i0);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>($i1);

        return;
    }

    public final void writeUInt32(int, int) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder $r0;
        int $i0, $i1;

        $r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>($i0, 0);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt32NoTag(int)>($i1);

        return;
    }

    public final void writeUInt32NoTag(int) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder $r0;
        int $i0, $i1, $i2;
        byte[] $r1;
        byte $b3;

        $r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i0 := @parameter0: int;

     label1:
        $i1 = $i0 & -128;

        if $i1 != 0 goto label2;

        $r1 = $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i2 = $i1 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        $b3 = (byte) $i0;

        $r1[$i1] = $b3;

        return;

     label2:
        $r1 = $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i2 = $i1 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i2;

        $i2 = $i0 & 127;

        $i2 = $i2 | 128;

        $b3 = (byte) $i2;

        $r1[$i1] = $b3;

        $i0 = $i0 >>> 7;

        goto label1;
    }

    public final void writeUInt64(int, long) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder $r0;
        int $i0;
        long $l1;

        $r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeTag(int,int)>($i0, 0);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeUInt64NoTag(long)>($l1);

        return;
    }

    public final void writeUInt64NoTag(long) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$ArrayEncoder $r0;
        long $l0, $l2;
        boolean $z0;
        int $i1, $i4;
        byte $b3;
        byte[] $r1;

        $r0 := @this: com.google.protobuf.CodedOutputStream$ArrayEncoder;

        $l0 := @parameter0: long;

        $z0 = staticinvoke <com.google.protobuf.CodedOutputStream: boolean '-$$Nest$sfgetHAS_UNSAFE_ARRAY_OPERATIONS'()>();

        if $z0 == 0 goto label3;

        $i1 = virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int spaceLeft()>();

        if $i1 < 10 goto label3;

     label1:
        $l2 = $l0 & -128L;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label2;

        $r1 = $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i4 = $i1 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i4;

        $l2 = (long) $i1;

        $i1 = (int) $l0;

        $b3 = (byte) $i1;

        staticinvoke <com.google.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>($r1, $l2, $b3);

        return;

     label2:
        $r1 = $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i4 = $i1 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i4;

        $l2 = (long) $i1;

        $i1 = (int) $l0;

        $i1 = $i1 & 127;

        $i1 = $i1 | 128;

        $b3 = (byte) $i1;

        staticinvoke <com.google.protobuf.UnsafeUtil: void putByte(byte[],long,byte)>($r1, $l2, $b3);

        $l0 = $l0 >>> 7;

        goto label1;

     label3:
        $l2 = $l0 & -128L;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label4;

        $r1 = $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i4 = $i1 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i4;

        $i4 = (int) $l0;

        $b3 = (byte) $i4;

        $r1[$i1] = $b3;

        return;

     label4:
        $r1 = $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: byte[] buffer>;

        $i1 = $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position>;

        $i4 = $i1 + 1;

        $r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: int position> = $i4;

        $i4 = (int) $l0;

        $i4 = $i4 & 127;

        $i4 = $i4 | 128;

        $b3 = (byte) $i4;

        $r1[$i1] = $b3;

        $l0 = $l0 >>> 7;

        goto label3;
    }

com.google.protobuf.CodedOutputStream$OutOfSpaceException
<com.google.protobuf.CodedOutputStream$OutOfSpaceException: long serialVersionUID>
    void <init>()
    {
        com.google.protobuf.CodedOutputStream$OutOfSpaceException $r0;

        $r0 := @this: com.google.protobuf.CodedOutputStream$OutOfSpaceException;

        specialinvoke $r0.<java.io.IOException: void <init>(java.lang.String)>("CodedOutputStream was writing to a flat byte array and ran out of space.");

        return;
    }

    void <init>(java.lang.String, java.lang.Throwable)
    {
        com.google.protobuf.CodedOutputStream$OutOfSpaceException $r0;
        java.lang.Throwable $r1;
        java.lang.String $r2;
        java.lang.StringBuilder $r3;

        $r0 := @this: com.google.protobuf.CodedOutputStream$OutOfSpaceException;

        $r2 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Throwable;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CodedOutputStream was writing to a flat byte array and ran out of space.: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>($r2, $r1);

        return;
    }

    void <init>(java.lang.Throwable)
    {
        com.google.protobuf.CodedOutputStream$OutOfSpaceException $r0;
        java.lang.Throwable $r1;

        $r0 := @this: com.google.protobuf.CodedOutputStream$OutOfSpaceException;

        $r1 := @parameter0: java.lang.Throwable;

        specialinvoke $r0.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("CodedOutputStream was writing to a flat byte array and ran out of space.", $r1);

        return;
    }

com.google.protobuf.CodedOutputStream$OutputStreamEncoder
<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: java.io.OutputStream out>
    void <init>(java.io.OutputStream, int)
    {
        com.google.protobuf.CodedOutputStream$OutputStreamEncoder $r0;
        java.io.OutputStream $r1;
        int $i0;
        java.lang.NullPointerException $r2;

        $r0 := @this: com.google.protobuf.CodedOutputStream$OutputStreamEncoder;

        $r1 := @parameter0: java.io.OutputStream;

        $i0 := @parameter1: int;

        specialinvoke $r0.<com.google.protobuf.CodedOutputStream$AbstractBufferedEncoder: void <init>(int)>($i0);

        if $r1 == null goto label1;

        $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: java.io.OutputStream out> = $r1;

        return;

     label1:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("out");

        throw $r2;
    }

    private void doFlush() throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$OutputStreamEncoder $r0;
        java.io.OutputStream $r1;
        byte[] $r2;
        int $i0;

        $r0 := @this: com.google.protobuf.CodedOutputStream$OutputStreamEncoder;

        $r1 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: java.io.OutputStream out>;

        $r2 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: byte[] buffer>;

        $i0 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0);

        $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int position> = 0;

        return;
    }

    private void flushIfNotAvailable(int) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$OutputStreamEncoder $r0;
        int $i0, $i1, $i2;

        $r0 := @this: com.google.protobuf.CodedOutputStream$OutputStreamEncoder;

        $i0 := @parameter0: int;

        $i2 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        $i1 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        $i1 = $i2 - $i1;

        if $i1 >= $i0 goto label1;

        specialinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void doFlush()>();

     label1:
        return;
    }

    public void flush() throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$OutputStreamEncoder $r0;
        int $i0;

        $r0 := @this: com.google.protobuf.CodedOutputStream$OutputStreamEncoder;

        $i0 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        if $i0 <= 0 goto label1;

        specialinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void doFlush()>();

     label1:
        return;
    }

    public void write(byte) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$OutputStreamEncoder $r0;
        byte $b0;
        int $i1, $i2;

        $r0 := @this: com.google.protobuf.CodedOutputStream$OutputStreamEncoder;

        $b0 := @parameter0: byte;

        $i1 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        $i2 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        if $i1 != $i2 goto label1;

        specialinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void doFlush()>();

     label1:
        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void buffer(byte)>($b0);

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$OutputStreamEncoder $r0;
        int $i0, $i1, $i2, $i3;
        byte[] $r1, $r2;
        java.io.OutputStream $r3;

        $r0 := @this: com.google.protobuf.CodedOutputStream$OutputStreamEncoder;

        $r1 := @parameter0: byte[];

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        $i0 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        $i3 = $i3 - $i0;

        if $i3 < $i2 goto label1;

        $r2 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: byte[] buffer>;

        $i3 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i1, $r2, $i3, $i2);

        $i1 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        $i1 = $i1 + $i2;

        $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int position> = $i1;

        $i1 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten>;

        $i1 = $i1 + $i2;

        $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten> = $i1;

        return;

     label1:
        $i3 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        $i0 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        $i3 = $i3 - $i0;

        $r2 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: byte[] buffer>;

        $i0 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i1, $r2, $i0, $i3);

        $i1 = $i1 + $i3;

        $i2 = $i2 - $i3;

        $i0 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int position> = $i0;

        $i0 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten>;

        $i3 = $i0 + $i3;

        $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten> = $i3;

        specialinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void doFlush()>();

        $i3 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        if $i2 > $i3 goto label2;

        $r2 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: byte[] buffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i1, $r2, 0, $i2);

        $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int position> = $i2;

        goto label3;

     label2:
        $r3 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: java.io.OutputStream out>;

        virtualinvoke $r3.<java.io.OutputStream: void write(byte[],int,int)>($r1, $i1, $i2);

     label3:
        $i1 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten>;

        $i1 = $i1 + $i2;

        $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten> = $i1;

        return;
    }

    public void writeBool(int, boolean) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$OutputStreamEncoder $r0;
        int $i0;
        boolean $z0;
        byte $b1;

        $r0 := @this: com.google.protobuf.CodedOutputStream$OutputStreamEncoder;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        specialinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void flushIfNotAvailable(int)>(11);

        $b1 = 0;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferTag(int,int)>($i0, 0);

        if $z0 == 0 goto label1;

        $b1 = 1;

        goto label1;

     label1:
        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void buffer(byte)>($b1);

        return;
    }

    public void writeByteArrayNoTag(byte[], int, int) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$OutputStreamEncoder $r0;
        byte[] $r1;
        int $i0, $i1;

        $r0 := @this: com.google.protobuf.CodedOutputStream$OutputStreamEncoder;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeUInt32NoTag(int)>($i1);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void write(byte[],int,int)>($r1, $i0, $i1);

        return;
    }

    public void writeBytes(int, com.google.protobuf.ByteString) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$OutputStreamEncoder $r0;
        int $i0;
        com.google.protobuf.ByteString $r1;

        $r0 := @this: com.google.protobuf.CodedOutputStream$OutputStreamEncoder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.protobuf.ByteString;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeTag(int,int)>($i0, 2);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeBytesNoTag(com.google.protobuf.ByteString)>($r1);

        return;
    }

    public void writeBytesNoTag(com.google.protobuf.ByteString) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$OutputStreamEncoder $r0;
        com.google.protobuf.ByteString $r1;
        int $i0;

        $r0 := @this: com.google.protobuf.CodedOutputStream$OutputStreamEncoder;

        $r1 := @parameter0: com.google.protobuf.ByteString;

        $i0 = virtualinvoke $r1.<com.google.protobuf.ByteString: int size()>();

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeUInt32NoTag(int)>($i0);

        virtualinvoke $r1.<com.google.protobuf.ByteString: void writeTo(com.google.protobuf.ByteOutput)>($r0);

        return;
    }

    public void writeFixed32(int, int) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$OutputStreamEncoder $r0;
        int $i0, $i1;

        $r0 := @this: com.google.protobuf.CodedOutputStream$OutputStreamEncoder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void flushIfNotAvailable(int)>(14);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferTag(int,int)>($i0, 5);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferFixed32NoTag(int)>($i1);

        return;
    }

    public void writeFixed32NoTag(int) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$OutputStreamEncoder $r0;
        int $i0;

        $r0 := @this: com.google.protobuf.CodedOutputStream$OutputStreamEncoder;

        $i0 := @parameter0: int;

        specialinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void flushIfNotAvailable(int)>(4);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferFixed32NoTag(int)>($i0);

        return;
    }

    public void writeFixed64(int, long) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$OutputStreamEncoder $r0;
        int $i0;
        long $l1;

        $r0 := @this: com.google.protobuf.CodedOutputStream$OutputStreamEncoder;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        specialinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void flushIfNotAvailable(int)>(18);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferTag(int,int)>($i0, 1);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferFixed64NoTag(long)>($l1);

        return;
    }

    public void writeFixed64NoTag(long) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$OutputStreamEncoder $r0;
        long $l0;

        $r0 := @this: com.google.protobuf.CodedOutputStream$OutputStreamEncoder;

        $l0 := @parameter0: long;

        specialinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void flushIfNotAvailable(int)>(8);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferFixed64NoTag(long)>($l0);

        return;
    }

    public void writeInt32(int, int) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$OutputStreamEncoder $r0;
        int $i0, $i1;

        $r0 := @this: com.google.protobuf.CodedOutputStream$OutputStreamEncoder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void flushIfNotAvailable(int)>(20);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferTag(int,int)>($i0, 0);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferInt32NoTag(int)>($i1);

        return;
    }

    public void writeInt32NoTag(int) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$OutputStreamEncoder $r0;
        int $i0;
        long $l1;

        $r0 := @this: com.google.protobuf.CodedOutputStream$OutputStreamEncoder;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeUInt32NoTag(int)>($i0);

        return;

     label1:
        $l1 = (long) $i0;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeUInt64NoTag(long)>($l1);

        return;
    }

    public void writeLazy(byte[], int, int) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$OutputStreamEncoder $r0;
        byte[] $r1;
        int $i0, $i1;

        $r0 := @this: com.google.protobuf.CodedOutputStream$OutputStreamEncoder;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void write(byte[],int,int)>($r1, $i0, $i1);

        return;
    }

    public void writeMessage(int, com.google.protobuf.MessageLite) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$OutputStreamEncoder $r0;
        int $i0;
        com.google.protobuf.MessageLite $r1;

        $r0 := @this: com.google.protobuf.CodedOutputStream$OutputStreamEncoder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.protobuf.MessageLite;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeTag(int,int)>($i0, 2);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessageNoTag(com.google.protobuf.MessageLite)>($r1);

        return;
    }

    void writeMessage(int, com.google.protobuf.MessageLite, com.google.protobuf.Schema) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$OutputStreamEncoder $r0;
        int $i0;
        com.google.protobuf.MessageLite $r1;
        com.google.protobuf.Schema $r2;

        $r0 := @this: com.google.protobuf.CodedOutputStream$OutputStreamEncoder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.protobuf.MessageLite;

        $r2 := @parameter2: com.google.protobuf.Schema;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeTag(int,int)>($i0, 2);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessageNoTag(com.google.protobuf.MessageLite,com.google.protobuf.Schema)>($r1, $r2);

        return;
    }

    public void writeMessageNoTag(com.google.protobuf.MessageLite) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$OutputStreamEncoder $r0;
        com.google.protobuf.MessageLite $r1;
        int $i0;

        $r0 := @this: com.google.protobuf.CodedOutputStream$OutputStreamEncoder;

        $r1 := @parameter0: com.google.protobuf.MessageLite;

        $i0 = interfaceinvoke $r1.<com.google.protobuf.MessageLite: int getSerializedSize()>();

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeUInt32NoTag(int)>($i0);

        interfaceinvoke $r1.<com.google.protobuf.MessageLite: void writeTo(com.google.protobuf.CodedOutputStream)>($r0);

        return;
    }

    void writeMessageNoTag(com.google.protobuf.MessageLite, com.google.protobuf.Schema) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$OutputStreamEncoder $r0;
        com.google.protobuf.MessageLite $r1;
        com.google.protobuf.Schema $r2;
        int $i0;
        com.google.protobuf.AbstractMessageLite $r3;
        com.google.protobuf.CodedOutputStreamWriter $r4;

        $r0 := @this: com.google.protobuf.CodedOutputStream$OutputStreamEncoder;

        $r1 := @parameter0: com.google.protobuf.MessageLite;

        $r2 := @parameter1: com.google.protobuf.Schema;

        $r3 = (com.google.protobuf.AbstractMessageLite) $r1;

        $i0 = virtualinvoke $r3.<com.google.protobuf.AbstractMessageLite: int getSerializedSize(com.google.protobuf.Schema)>($r2);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeUInt32NoTag(int)>($i0);

        $r4 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: com.google.protobuf.CodedOutputStreamWriter wrapper>;

        interfaceinvoke $r2.<com.google.protobuf.Schema: void writeTo(java.lang.Object,com.google.protobuf.Writer)>($r1, $r4);

        return;
    }

    public void writeMessageSetExtension(int, com.google.protobuf.MessageLite) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$OutputStreamEncoder $r0;
        com.google.protobuf.MessageLite $r1;
        int $i0;

        $r0 := @this: com.google.protobuf.CodedOutputStream$OutputStreamEncoder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.protobuf.MessageLite;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeTag(int,int)>(1, 3);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeUInt32(int,int)>(2, $i0);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessage(int,com.google.protobuf.MessageLite)>(3, $r1);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeTag(int,int)>(1, 4);

        return;
    }

    public void writeRawMessageSetExtension(int, com.google.protobuf.ByteString) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$OutputStreamEncoder $r0;
        com.google.protobuf.ByteString $r1;
        int $i0;

        $r0 := @this: com.google.protobuf.CodedOutputStream$OutputStreamEncoder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.protobuf.ByteString;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeTag(int,int)>(1, 3);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeUInt32(int,int)>(2, $i0);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeBytes(int,com.google.protobuf.ByteString)>(3, $r1);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeTag(int,int)>(1, 4);

        return;
    }

    public void writeString(int, java.lang.String) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$OutputStreamEncoder $r0;
        int $i0;
        java.lang.String $r1;

        $r0 := @this: com.google.protobuf.CodedOutputStream$OutputStreamEncoder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeTag(int,int)>($i0, 2);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeStringNoTag(java.lang.String)>($r1);

        return;
    }

    public void writeStringNoTag(java.lang.String) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$OutputStreamEncoder $r0;
        java.lang.String $r1;
        int $i0, $i1, $i2, $i3, $i4;
        byte[] $r2;
        java.lang.Throwable $r3;
        com.google.protobuf.CodedOutputStream$OutOfSpaceException $r4;
        com.google.protobuf.Utf8$UnpairedSurrogateException $r5, $r6;

        $r0 := @this: com.google.protobuf.CodedOutputStream$OutputStreamEncoder;

        $r1 := @parameter0: java.lang.String;

     label01:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

     label02:
        $i2 = $i1 * 3;

     label03:
        $i3 = staticinvoke <com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int computeUInt32SizeNoTag(int)>($i2);

     label04:
        $i1 = $i3 + $i2;

        $i0 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        if $i1 <= $i0 goto label07;

        $r2 = newarray (byte)[$i2];

     label05:
        $i1 = staticinvoke <com.google.protobuf.Utf8: int encode(java.lang.CharSequence,byte[],int,int)>($r1, $r2, 0, $i2);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeUInt32NoTag(int)>($i1);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeLazy(byte[],int,int)>($r2, 0, $i1);

     label06:
        return;

     label07:
        $i2 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        $i0 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        $i2 = $i2 - $i0;

        if $i1 <= $i2 goto label09;

     label08:
        specialinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void doFlush()>();

     label09:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i2 = staticinvoke <com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int computeUInt32SizeNoTag(int)>($i1);

     label10:
        $i1 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        if $i2 != $i3 goto label15;

        $i3 = $i1 + $i2;

        $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int position> = $i3;

        $r2 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: byte[] buffer>;

        $i3 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        $i4 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int limit>;

        $i0 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        $i0 = $i4 - $i0;

     label11:
        $i0 = staticinvoke <com.google.protobuf.Utf8: int encode(java.lang.CharSequence,byte[],int,int)>($r1, $r2, $i3, $i0);

     label12:
        $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int position> = $i1;

        $i3 = $i0 - $i1;

        $i3 = $i3 - $i2;

     label13:
        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferUInt32NoTag(int)>($i3);

     label14:
        $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int position> = $i0;

        goto label21;

     label15:
        $i2 = staticinvoke <com.google.protobuf.Utf8: int encodedLength(java.lang.CharSequence)>($r1);

     label16:
        $i3 = $i2;

     label17:
        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferUInt32NoTag(int)>($i2);

     label18:
        $r2 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: byte[] buffer>;

        $i0 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

     label19:
        $i2 = staticinvoke <com.google.protobuf.Utf8: int encode(java.lang.CharSequence,byte[],int,int)>($r1, $r2, $i0, $i2);

     label20:
        $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int position> = $i2;

     label21:
        $i2 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten>;

        $i3 = $i2 + $i3;

        $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten> = $i3;

        return;

     label22:
        $r3 := @caughtexception;

     label23:
        $r4 = new com.google.protobuf.CodedOutputStream$OutOfSpaceException;

        specialinvoke $r4.<com.google.protobuf.CodedOutputStream$OutOfSpaceException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

     label24:
        $r5 := @caughtexception;

        $i3 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten>;

        $i2 = $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int position>;

        $i2 = $i2 - $i1;

        $i3 = $i3 - $i2;

        $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int totalBytesWritten> = $i3;

        $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: int position> = $i1;

     label25:
        throw $r5;

     label26:
        $r6 := @caughtexception;

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void inefficientWriteStringNoTag(java.lang.String,com.google.protobuf.Utf8$UnpairedSurrogateException)>($r1, $r6);

        return;

        catch com.google.protobuf.Utf8$UnpairedSurrogateException from label01 to label02 with label26;
        catch com.google.protobuf.Utf8$UnpairedSurrogateException from label03 to label04 with label26;
        catch com.google.protobuf.Utf8$UnpairedSurrogateException from label05 to label06 with label26;
        catch com.google.protobuf.Utf8$UnpairedSurrogateException from label08 to label10 with label26;
        catch com.google.protobuf.Utf8$UnpairedSurrogateException from label11 to label12 with label24;
        catch com.google.protobuf.Utf8$UnpairedSurrogateException from label13 to label14 with label24;
        catch com.google.protobuf.Utf8$UnpairedSurrogateException from label15 to label16 with label24;
        catch com.google.protobuf.Utf8$UnpairedSurrogateException from label17 to label18 with label24;
        catch com.google.protobuf.Utf8$UnpairedSurrogateException from label19 to label20 with label24;
        catch java.lang.ArrayIndexOutOfBoundsException from label13 to label14 with label22;
        catch java.lang.ArrayIndexOutOfBoundsException from label17 to label18 with label22;
        catch com.google.protobuf.Utf8$UnpairedSurrogateException from label23 to label24 with label26;
        catch com.google.protobuf.Utf8$UnpairedSurrogateException from label25 to label26 with label26;
    }

    public void writeTag(int, int) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$OutputStreamEncoder $r0;
        int $i0, $i1;

        $r0 := @this: com.google.protobuf.CodedOutputStream$OutputStreamEncoder;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 = staticinvoke <com.google.protobuf.WireFormat: int makeTag(int,int)>($i1, $i0);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeUInt32NoTag(int)>($i1);

        return;
    }

    public void writeUInt32(int, int) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$OutputStreamEncoder $r0;
        int $i0, $i1;

        $r0 := @this: com.google.protobuf.CodedOutputStream$OutputStreamEncoder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void flushIfNotAvailable(int)>(20);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferTag(int,int)>($i0, 0);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferUInt32NoTag(int)>($i1);

        return;
    }

    public void writeUInt32NoTag(int) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$OutputStreamEncoder $r0;
        int $i0;

        $r0 := @this: com.google.protobuf.CodedOutputStream$OutputStreamEncoder;

        $i0 := @parameter0: int;

        specialinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void flushIfNotAvailable(int)>(5);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferUInt32NoTag(int)>($i0);

        return;
    }

    public void writeUInt64(int, long) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$OutputStreamEncoder $r0;
        int $i0;
        long $l1;

        $r0 := @this: com.google.protobuf.CodedOutputStream$OutputStreamEncoder;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        specialinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void flushIfNotAvailable(int)>(20);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferTag(int,int)>($i0, 0);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferUInt64NoTag(long)>($l1);

        return;
    }

    public void writeUInt64NoTag(long) throws java.io.IOException
    {
        com.google.protobuf.CodedOutputStream$OutputStreamEncoder $r0;
        long $l0;

        $r0 := @this: com.google.protobuf.CodedOutputStream$OutputStreamEncoder;

        $l0 := @parameter0: long;

        specialinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void flushIfNotAvailable(int)>(10);

        virtualinvoke $r0.<com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void bufferUInt64NoTag(long)>($l0);

        return;
    }

