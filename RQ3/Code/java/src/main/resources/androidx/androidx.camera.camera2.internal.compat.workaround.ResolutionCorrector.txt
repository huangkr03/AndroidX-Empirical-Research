androidx.camera.camera2.internal.compat.workaround.ResolutionCorrector
<androidx.camera.camera2.internal.compat.workaround.ResolutionCorrector: androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk mExtraCroppingQuirk>
    public void <init>()
    {
        androidx.camera.camera2.internal.compat.workaround.ResolutionCorrector r0;
        androidx.camera.core.impl.Quirk $r1;
        androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk $r2;

        r0 := @this: androidx.camera.camera2.internal.compat.workaround.ResolutionCorrector;

        $r1 = staticinvoke <androidx.camera.camera2.internal.compat.quirk.DeviceQuirks: androidx.camera.core.impl.Quirk get(java.lang.Class)>(class "Landroidx/camera/camera2/internal/compat/quirk/ExtraCroppingQuirk;");

        $r2 = (androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk) $r1;

        specialinvoke r0.<androidx.camera.camera2.internal.compat.workaround.ResolutionCorrector: void <init>(androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk)>($r2);

        return;
    }

    void <init>(androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk)
    {
        androidx.camera.camera2.internal.compat.workaround.ResolutionCorrector r0;
        androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk r1;

        r0 := @this: androidx.camera.camera2.internal.compat.workaround.ResolutionCorrector;

        r1 := @parameter0: androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.camera2.internal.compat.workaround.ResolutionCorrector: androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk mExtraCroppingQuirk> = r1;

        return;
    }

    public java.util.List insertOrPrioritize(androidx.camera.core.impl.SurfaceConfig$ConfigType, java.util.List)
    {
        androidx.camera.camera2.internal.compat.workaround.ResolutionCorrector r0;
        androidx.camera.core.impl.SurfaceConfig$ConfigType r1;
        java.util.List r2;
        android.util.Size r3, r6;
        java.util.ArrayList r4, $r9;
        java.util.Iterator r5;
        androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk $r7, $r8;
        boolean $z1, $z2;
        java.lang.Object $r10;

        r0 := @this: androidx.camera.camera2.internal.compat.workaround.ResolutionCorrector;

        r1 := @parameter0: androidx.camera.core.impl.SurfaceConfig$ConfigType;

        r2 := @parameter1: java.util.List;

        $r7 = r0.<androidx.camera.camera2.internal.compat.workaround.ResolutionCorrector: androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk mExtraCroppingQuirk>;

        if $r7 != null goto label1;

        return r2;

     label1:
        $r8 = r0.<androidx.camera.camera2.internal.compat.workaround.ResolutionCorrector: androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk mExtraCroppingQuirk>;

        r3 = virtualinvoke $r8.<androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk: android.util.Size getVerifiedResolution(androidx.camera.core.impl.SurfaceConfig$ConfigType)>(r1);

        if r3 != null goto label2;

        return r2;

     label2:
        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r4 = $r9;

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r3);

        r5 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r10 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.util.Size) $r10;

        $z2 = virtualinvoke r6.<android.util.Size: boolean equals(java.lang.Object)>(r3);

        if $z2 != 0 goto label4;

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r6);

     label4:
        goto label3;

     label5:
        return r4;
    }

