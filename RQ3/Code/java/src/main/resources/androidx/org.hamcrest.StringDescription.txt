org.hamcrest.StringDescription
<org.hamcrest.StringDescription: java.lang.Appendable out>
    public void <init>()
    {
        org.hamcrest.StringDescription $r0;
        java.lang.StringBuilder $r1;

        $r0 := @this: org.hamcrest.StringDescription;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        specialinvoke $r0.<org.hamcrest.StringDescription: void <init>(java.lang.Appendable)>($r1);

        return;
    }

    public void <init>(java.lang.Appendable)
    {
        org.hamcrest.StringDescription $r0;
        java.lang.Appendable $r1;

        $r0 := @this: org.hamcrest.StringDescription;

        $r1 := @parameter0: java.lang.Appendable;

        specialinvoke $r0.<org.hamcrest.BaseDescription: void <init>()>();

        $r0.<org.hamcrest.StringDescription: java.lang.Appendable out> = $r1;

        return;
    }

    public static java.lang.String asString(org.hamcrest.SelfDescribing)
    {
        org.hamcrest.SelfDescribing $r0;
        java.lang.String $r1;

        $r0 := @parameter0: org.hamcrest.SelfDescribing;

        $r1 = staticinvoke <org.hamcrest.StringDescription: java.lang.String toString(org.hamcrest.SelfDescribing)>($r0);

        return $r1;
    }

    public static java.lang.String toString(org.hamcrest.SelfDescribing)
    {
        org.hamcrest.SelfDescribing $r0;
        org.hamcrest.StringDescription $r1;
        org.hamcrest.Description $r2;
        java.lang.String $r3;

        $r0 := @parameter0: org.hamcrest.SelfDescribing;

        $r1 = new org.hamcrest.StringDescription;

        specialinvoke $r1.<org.hamcrest.StringDescription: void <init>()>();

        $r2 = virtualinvoke $r1.<org.hamcrest.StringDescription: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>($r0);

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        return $r3;
    }

    protected void append(char)
    {
        org.hamcrest.StringDescription $r0;
        char $c0;
        java.lang.Appendable $r1;
        java.lang.Throwable $r2;
        java.lang.RuntimeException r3;

        $r0 := @this: org.hamcrest.StringDescription;

        $c0 := @parameter0: char;

        $r1 = $r0.<org.hamcrest.StringDescription: java.lang.Appendable out>;

     label1:
        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(char)>($c0);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        r3 = new java.lang.RuntimeException;

        specialinvoke r3.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Could not write description", $r2);

        $r2 = (java.lang.Throwable) r3;

        throw $r2;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected void append(java.lang.String)
    {
        org.hamcrest.StringDescription $r0;
        java.lang.String $r1;
        java.lang.Appendable $r2;
        java.lang.Throwable $r3;
        java.lang.RuntimeException r4;

        $r0 := @this: org.hamcrest.StringDescription;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<org.hamcrest.StringDescription: java.lang.Appendable out>;

     label1:
        interfaceinvoke $r2.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r1);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r4 = new java.lang.RuntimeException;

        specialinvoke r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Could not write description", $r3);

        $r3 = (java.lang.Throwable) r4;

        throw $r3;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.lang.String toString()
    {
        org.hamcrest.StringDescription $r0;
        java.lang.String $r1;
        java.lang.Appendable $r2;

        $r0 := @this: org.hamcrest.StringDescription;

        $r2 = $r0.<org.hamcrest.StringDescription: java.lang.Appendable out>;

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

