androidx.media3.exoplayer.BaseRenderer
<androidx.media3.exoplayer.BaseRenderer: int trackType>
<androidx.media3.exoplayer.BaseRenderer: androidx.media3.exoplayer.FormatHolder formatHolder>
<androidx.media3.exoplayer.BaseRenderer: androidx.media3.exoplayer.RendererConfiguration configuration>
<androidx.media3.exoplayer.BaseRenderer: int index>
<androidx.media3.exoplayer.BaseRenderer: androidx.media3.exoplayer.analytics.PlayerId playerId>
<androidx.media3.exoplayer.BaseRenderer: int state>
<androidx.media3.exoplayer.BaseRenderer: androidx.media3.exoplayer.source.SampleStream stream>
<androidx.media3.exoplayer.BaseRenderer: androidx.media3.common.Format[] streamFormats>
<androidx.media3.exoplayer.BaseRenderer: long streamOffsetUs>
<androidx.media3.exoplayer.BaseRenderer: long lastResetPositionUs>
<androidx.media3.exoplayer.BaseRenderer: long readingPositionUs>
<androidx.media3.exoplayer.BaseRenderer: boolean streamIsFinal>
<androidx.media3.exoplayer.BaseRenderer: boolean throwRendererExceptionIsExecuting>
    public void <init>(int)
    {
        androidx.media3.exoplayer.BaseRenderer r0;
        int i0;
        androidx.media3.exoplayer.FormatHolder $r1;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.BaseRenderer: int trackType> = i0;

        $r1 = new androidx.media3.exoplayer.FormatHolder;

        specialinvoke $r1.<androidx.media3.exoplayer.FormatHolder: void <init>()>();

        r0.<androidx.media3.exoplayer.BaseRenderer: androidx.media3.exoplayer.FormatHolder formatHolder> = $r1;

        r0.<androidx.media3.exoplayer.BaseRenderer: long readingPositionUs> = -9223372036854775808L;

        return;
    }

    public final int getTrackType()
    {
        androidx.media3.exoplayer.BaseRenderer r0;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        $i0 = r0.<androidx.media3.exoplayer.BaseRenderer: int trackType>;

        return $i0;
    }

    public final androidx.media3.exoplayer.RendererCapabilities getCapabilities()
    {
        androidx.media3.exoplayer.BaseRenderer r0;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        return r0;
    }

    public final void init(int, androidx.media3.exoplayer.analytics.PlayerId)
    {
        androidx.media3.exoplayer.BaseRenderer r0;
        int i0;
        androidx.media3.exoplayer.analytics.PlayerId r1;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.exoplayer.analytics.PlayerId;

        r0.<androidx.media3.exoplayer.BaseRenderer: int index> = i0;

        r0.<androidx.media3.exoplayer.BaseRenderer: androidx.media3.exoplayer.analytics.PlayerId playerId> = r1;

        return;
    }

    public androidx.media3.exoplayer.MediaClock getMediaClock()
    {
        androidx.media3.exoplayer.BaseRenderer r0;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        return null;
    }

    public final int getState()
    {
        androidx.media3.exoplayer.BaseRenderer r0;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        $i0 = r0.<androidx.media3.exoplayer.BaseRenderer: int state>;

        return $i0;
    }

    public final void enable(androidx.media3.exoplayer.RendererConfiguration, androidx.media3.common.Format[], androidx.media3.exoplayer.source.SampleStream, long, boolean, boolean, long, long) throws androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.exoplayer.BaseRenderer r0;
        androidx.media3.exoplayer.RendererConfiguration r1;
        androidx.media3.common.Format[] r2;
        androidx.media3.exoplayer.source.SampleStream r3;
        long l0, l1, l2;
        boolean z0, z1, $z2;
        int $i3;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        r1 := @parameter0: androidx.media3.exoplayer.RendererConfiguration;

        r2 := @parameter1: androidx.media3.common.Format[];

        r3 := @parameter2: androidx.media3.exoplayer.source.SampleStream;

        l0 := @parameter3: long;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        l1 := @parameter6: long;

        l2 := @parameter7: long;

        $i3 = r0.<androidx.media3.exoplayer.BaseRenderer: int state>;

        if $i3 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z2);

        r0.<androidx.media3.exoplayer.BaseRenderer: androidx.media3.exoplayer.RendererConfiguration configuration> = r1;

        r0.<androidx.media3.exoplayer.BaseRenderer: int state> = 1;

        virtualinvoke r0.<androidx.media3.exoplayer.BaseRenderer: void onEnabled(boolean,boolean)>(z0, z1);

        virtualinvoke r0.<androidx.media3.exoplayer.BaseRenderer: void replaceStream(androidx.media3.common.Format[],androidx.media3.exoplayer.source.SampleStream,long,long)>(r2, r3, l1, l2);

        specialinvoke r0.<androidx.media3.exoplayer.BaseRenderer: void resetPosition(long,boolean)>(l0, z0);

        return;
    }

    public final void start() throws androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.exoplayer.BaseRenderer r0;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        $i0 = r0.<androidx.media3.exoplayer.BaseRenderer: int state>;

        if $i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z0);

        r0.<androidx.media3.exoplayer.BaseRenderer: int state> = 2;

        virtualinvoke r0.<androidx.media3.exoplayer.BaseRenderer: void onStarted()>();

        return;
    }

    public final void replaceStream(androidx.media3.common.Format[], androidx.media3.exoplayer.source.SampleStream, long, long) throws androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.exoplayer.BaseRenderer r0;
        androidx.media3.common.Format[] r1;
        androidx.media3.exoplayer.source.SampleStream r2;
        long l0, l1, $l2;
        boolean $z0, $z1;
        byte $b3;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        r1 := @parameter0: androidx.media3.common.Format[];

        r2 := @parameter1: androidx.media3.exoplayer.source.SampleStream;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        $z0 = r0.<androidx.media3.exoplayer.BaseRenderer: boolean streamIsFinal>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z1);

        r0.<androidx.media3.exoplayer.BaseRenderer: androidx.media3.exoplayer.source.SampleStream stream> = r2;

        $l2 = r0.<androidx.media3.exoplayer.BaseRenderer: long readingPositionUs>;

        $b3 = $l2 cmp -9223372036854775808L;

        if $b3 != 0 goto label3;

        r0.<androidx.media3.exoplayer.BaseRenderer: long readingPositionUs> = l0;

     label3:
        r0.<androidx.media3.exoplayer.BaseRenderer: androidx.media3.common.Format[] streamFormats> = r1;

        r0.<androidx.media3.exoplayer.BaseRenderer: long streamOffsetUs> = l1;

        virtualinvoke r0.<androidx.media3.exoplayer.BaseRenderer: void onStreamChanged(androidx.media3.common.Format[],long,long)>(r1, l0, l1);

        return;
    }

    public final androidx.media3.exoplayer.source.SampleStream getStream()
    {
        androidx.media3.exoplayer.BaseRenderer r0;
        androidx.media3.exoplayer.source.SampleStream $r1;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        $r1 = r0.<androidx.media3.exoplayer.BaseRenderer: androidx.media3.exoplayer.source.SampleStream stream>;

        return $r1;
    }

    public final boolean hasReadStreamToEnd()
    {
        androidx.media3.exoplayer.BaseRenderer r0;
        long $l0;
        byte $b1;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        $l0 = r0.<androidx.media3.exoplayer.BaseRenderer: long readingPositionUs>;

        $b1 = $l0 cmp -9223372036854775808L;

        if $b1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final long getReadingPositionUs()
    {
        androidx.media3.exoplayer.BaseRenderer r0;
        long $l0;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        $l0 = r0.<androidx.media3.exoplayer.BaseRenderer: long readingPositionUs>;

        return $l0;
    }

    public final void setCurrentStreamFinal()
    {
        androidx.media3.exoplayer.BaseRenderer r0;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        r0.<androidx.media3.exoplayer.BaseRenderer: boolean streamIsFinal> = 1;

        return;
    }

    public final boolean isCurrentStreamFinal()
    {
        androidx.media3.exoplayer.BaseRenderer r0;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        $z0 = r0.<androidx.media3.exoplayer.BaseRenderer: boolean streamIsFinal>;

        return $z0;
    }

    public final void maybeThrowStreamError() throws java.io.IOException
    {
        androidx.media3.exoplayer.BaseRenderer r0;
        androidx.media3.exoplayer.source.SampleStream $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        $r1 = r0.<androidx.media3.exoplayer.BaseRenderer: androidx.media3.exoplayer.source.SampleStream stream>;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r3 = (androidx.media3.exoplayer.source.SampleStream) $r2;

        interfaceinvoke $r3.<androidx.media3.exoplayer.source.SampleStream: void maybeThrowError()>();

        return;
    }

    public final void resetPosition(long) throws androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.exoplayer.BaseRenderer r0;
        long l0;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        l0 := @parameter0: long;

        specialinvoke r0.<androidx.media3.exoplayer.BaseRenderer: void resetPosition(long,boolean)>(l0, 0);

        return;
    }

    private void resetPosition(long, boolean) throws androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.exoplayer.BaseRenderer r0;
        long l0;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        r0.<androidx.media3.exoplayer.BaseRenderer: boolean streamIsFinal> = 0;

        r0.<androidx.media3.exoplayer.BaseRenderer: long lastResetPositionUs> = l0;

        r0.<androidx.media3.exoplayer.BaseRenderer: long readingPositionUs> = l0;

        virtualinvoke r0.<androidx.media3.exoplayer.BaseRenderer: void onPositionReset(long,boolean)>(l0, z0);

        return;
    }

    public final void stop()
    {
        androidx.media3.exoplayer.BaseRenderer r0;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        $i0 = r0.<androidx.media3.exoplayer.BaseRenderer: int state>;

        if $i0 != 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z0);

        r0.<androidx.media3.exoplayer.BaseRenderer: int state> = 1;

        virtualinvoke r0.<androidx.media3.exoplayer.BaseRenderer: void onStopped()>();

        return;
    }

    public final void disable()
    {
        androidx.media3.exoplayer.BaseRenderer r0;
        int $i0;
        androidx.media3.exoplayer.FormatHolder $r1;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        $i0 = r0.<androidx.media3.exoplayer.BaseRenderer: int state>;

        if $i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z0);

        $r1 = r0.<androidx.media3.exoplayer.BaseRenderer: androidx.media3.exoplayer.FormatHolder formatHolder>;

        virtualinvoke $r1.<androidx.media3.exoplayer.FormatHolder: void clear()>();

        r0.<androidx.media3.exoplayer.BaseRenderer: int state> = 0;

        r0.<androidx.media3.exoplayer.BaseRenderer: androidx.media3.exoplayer.source.SampleStream stream> = null;

        r0.<androidx.media3.exoplayer.BaseRenderer: androidx.media3.common.Format[] streamFormats> = null;

        r0.<androidx.media3.exoplayer.BaseRenderer: boolean streamIsFinal> = 0;

        virtualinvoke r0.<androidx.media3.exoplayer.BaseRenderer: void onDisabled()>();

        return;
    }

    public final void reset()
    {
        androidx.media3.exoplayer.BaseRenderer r0;
        int $i0;
        androidx.media3.exoplayer.FormatHolder $r1;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        $i0 = r0.<androidx.media3.exoplayer.BaseRenderer: int state>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z0);

        $r1 = r0.<androidx.media3.exoplayer.BaseRenderer: androidx.media3.exoplayer.FormatHolder formatHolder>;

        virtualinvoke $r1.<androidx.media3.exoplayer.FormatHolder: void clear()>();

        virtualinvoke r0.<androidx.media3.exoplayer.BaseRenderer: void onReset()>();

        return;
    }

    public int supportsMixedMimeTypeAdaptation() throws androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.exoplayer.BaseRenderer r0;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        return 0;
    }

    public void handleMessage(int, java.lang.Object) throws androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.exoplayer.BaseRenderer r0;
        int i0;
        java.lang.Object r1;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        return;
    }

    protected void onEnabled(boolean, boolean) throws androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.exoplayer.BaseRenderer r0;
        boolean z0, z1;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        return;
    }

    protected void onStreamChanged(androidx.media3.common.Format[], long, long) throws androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.exoplayer.BaseRenderer r0;
        androidx.media3.common.Format[] r1;
        long l0, l1;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        r1 := @parameter0: androidx.media3.common.Format[];

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        return;
    }

    protected void onPositionReset(long, boolean) throws androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.exoplayer.BaseRenderer r0;
        long l0;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        return;
    }

    protected void onStarted() throws androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.exoplayer.BaseRenderer r0;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        return;
    }

    protected void onStopped()
    {
        androidx.media3.exoplayer.BaseRenderer r0;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        return;
    }

    protected void onDisabled()
    {
        androidx.media3.exoplayer.BaseRenderer r0;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        return;
    }

    protected void onReset()
    {
        androidx.media3.exoplayer.BaseRenderer r0;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        return;
    }

    protected final long getLastResetPositionUs()
    {
        androidx.media3.exoplayer.BaseRenderer r0;
        long $l0;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        $l0 = r0.<androidx.media3.exoplayer.BaseRenderer: long lastResetPositionUs>;

        return $l0;
    }

    protected final androidx.media3.exoplayer.FormatHolder getFormatHolder()
    {
        androidx.media3.exoplayer.BaseRenderer r0;
        androidx.media3.exoplayer.FormatHolder $r1, $r2;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        $r1 = r0.<androidx.media3.exoplayer.BaseRenderer: androidx.media3.exoplayer.FormatHolder formatHolder>;

        virtualinvoke $r1.<androidx.media3.exoplayer.FormatHolder: void clear()>();

        $r2 = r0.<androidx.media3.exoplayer.BaseRenderer: androidx.media3.exoplayer.FormatHolder formatHolder>;

        return $r2;
    }

    protected final androidx.media3.common.Format[] getStreamFormats()
    {
        androidx.media3.exoplayer.BaseRenderer r0;
        androidx.media3.common.Format[] $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        $r1 = r0.<androidx.media3.exoplayer.BaseRenderer: androidx.media3.common.Format[] streamFormats>;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r3 = (androidx.media3.common.Format[]) $r2;

        return $r3;
    }

    protected final androidx.media3.exoplayer.RendererConfiguration getConfiguration()
    {
        androidx.media3.exoplayer.BaseRenderer r0;
        androidx.media3.exoplayer.RendererConfiguration $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        $r1 = r0.<androidx.media3.exoplayer.BaseRenderer: androidx.media3.exoplayer.RendererConfiguration configuration>;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r3 = (androidx.media3.exoplayer.RendererConfiguration) $r2;

        return $r3;
    }

    protected final int getIndex()
    {
        androidx.media3.exoplayer.BaseRenderer r0;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        $i0 = r0.<androidx.media3.exoplayer.BaseRenderer: int index>;

        return $i0;
    }

    protected final androidx.media3.exoplayer.analytics.PlayerId getPlayerId()
    {
        androidx.media3.exoplayer.BaseRenderer r0;
        androidx.media3.exoplayer.analytics.PlayerId $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        $r1 = r0.<androidx.media3.exoplayer.BaseRenderer: androidx.media3.exoplayer.analytics.PlayerId playerId>;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r3 = (androidx.media3.exoplayer.analytics.PlayerId) $r2;

        return $r3;
    }

    protected final androidx.media3.exoplayer.ExoPlaybackException createRendererException(java.lang.Throwable, androidx.media3.common.Format, int)
    {
        androidx.media3.exoplayer.BaseRenderer r0;
        java.lang.Throwable r1;
        androidx.media3.common.Format r2;
        int i0;
        androidx.media3.exoplayer.ExoPlaybackException $r3;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        r1 := @parameter0: java.lang.Throwable;

        r2 := @parameter1: androidx.media3.common.Format;

        i0 := @parameter2: int;

        $r3 = virtualinvoke r0.<androidx.media3.exoplayer.BaseRenderer: androidx.media3.exoplayer.ExoPlaybackException createRendererException(java.lang.Throwable,androidx.media3.common.Format,boolean,int)>(r1, r2, 0, i0);

        return $r3;
    }

    protected final androidx.media3.exoplayer.ExoPlaybackException createRendererException(java.lang.Throwable, androidx.media3.common.Format, boolean, int)
    {
        androidx.media3.exoplayer.BaseRenderer r0;
        java.lang.Throwable r1, r3, $r4;
        androidx.media3.common.Format r2;
        boolean z0, $z1;
        int i0, $i1, i2, $i3;
        java.lang.String $r5;
        androidx.media3.exoplayer.ExoPlaybackException $r6;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        r1 := @parameter0: java.lang.Throwable;

        r2 := @parameter1: androidx.media3.common.Format;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        i2 = 4;

        if r2 == null goto label5;

        $z1 = r0.<androidx.media3.exoplayer.BaseRenderer: boolean throwRendererExceptionIsExecuting>;

        if $z1 != 0 goto label5;

        r0.<androidx.media3.exoplayer.BaseRenderer: boolean throwRendererExceptionIsExecuting> = 1;

     label1:
        $i1 = virtualinvoke r0.<androidx.media3.exoplayer.BaseRenderer: int supportsFormat(androidx.media3.common.Format)>(r2);

        i2 = staticinvoke <androidx.media3.exoplayer.RendererCapabilities: int getFormatSupport(int)>($i1);

     label2:
        r0.<androidx.media3.exoplayer.BaseRenderer: boolean throwRendererExceptionIsExecuting> = 0;

        goto label5;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

     label4:
        r0.<androidx.media3.exoplayer.BaseRenderer: boolean throwRendererExceptionIsExecuting> = 0;

        throw r3;

     label5:
        $r5 = virtualinvoke r0.<androidx.media3.exoplayer.BaseRenderer: java.lang.String getName()>();

        $i3 = virtualinvoke r0.<androidx.media3.exoplayer.BaseRenderer: int getIndex()>();

        $r6 = staticinvoke <androidx.media3.exoplayer.ExoPlaybackException: androidx.media3.exoplayer.ExoPlaybackException createForRenderer(java.lang.Throwable,java.lang.String,int,androidx.media3.common.Format,int,boolean,int)>(r1, $r5, $i3, r2, i2, z0, i0);

        return $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    protected final int readSource(androidx.media3.exoplayer.FormatHolder, androidx.media3.decoder.DecoderInputBuffer, int)
    {
        androidx.media3.exoplayer.BaseRenderer r0;
        androidx.media3.exoplayer.FormatHolder r1;
        androidx.media3.decoder.DecoderInputBuffer r2;
        int i0, i1;
        androidx.media3.exoplayer.source.SampleStream $r3, $r5;
        java.lang.Object $r4, $r7;
        androidx.media3.common.Format $r6, r10, r11;
        long $l2, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12;
        byte $b3, $b13;
        androidx.media3.common.Format$Builder $r8, $r9;
        boolean $z0, $z1;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        r1 := @parameter0: androidx.media3.exoplayer.FormatHolder;

        r2 := @parameter1: androidx.media3.decoder.DecoderInputBuffer;

        i0 := @parameter2: int;

        $r3 = r0.<androidx.media3.exoplayer.BaseRenderer: androidx.media3.exoplayer.source.SampleStream stream>;

        $r4 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        $r5 = (androidx.media3.exoplayer.source.SampleStream) $r4;

        i1 = interfaceinvoke $r5.<androidx.media3.exoplayer.source.SampleStream: int readData(androidx.media3.exoplayer.FormatHolder,androidx.media3.decoder.DecoderInputBuffer,int)>(r1, r2, i0);

        if i1 != -4 goto label4;

        $z0 = virtualinvoke r2.<androidx.media3.decoder.DecoderInputBuffer: boolean isEndOfStream()>();

        if $z0 == 0 goto label3;

        r0.<androidx.media3.exoplayer.BaseRenderer: long readingPositionUs> = -9223372036854775808L;

        $z1 = r0.<androidx.media3.exoplayer.BaseRenderer: boolean streamIsFinal>;

        if $z1 == 0 goto label1;

        $b13 = -4;

        goto label2;

     label1:
        $b13 = -3;

     label2:
        return $b13;

     label3:
        $l8 = r2.<androidx.media3.decoder.DecoderInputBuffer: long timeUs>;

        $l7 = r0.<androidx.media3.exoplayer.BaseRenderer: long streamOffsetUs>;

        $l9 = $l8 + $l7;

        r2.<androidx.media3.decoder.DecoderInputBuffer: long timeUs> = $l9;

        $l11 = r0.<androidx.media3.exoplayer.BaseRenderer: long readingPositionUs>;

        $l10 = r2.<androidx.media3.decoder.DecoderInputBuffer: long timeUs>;

        $l12 = staticinvoke <java.lang.Math: long max(long,long)>($l11, $l10);

        r0.<androidx.media3.exoplayer.BaseRenderer: long readingPositionUs> = $l12;

        goto label5;

     label4:
        if i1 != -5 goto label5;

        $r6 = r1.<androidx.media3.exoplayer.FormatHolder: androidx.media3.common.Format format>;

        $r7 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r6);

        r10 = (androidx.media3.common.Format) $r7;

        $l2 = r10.<androidx.media3.common.Format: long subsampleOffsetUs>;

        $b3 = $l2 cmp 9223372036854775807L;

        if $b3 == 0 goto label5;

        $r8 = virtualinvoke r10.<androidx.media3.common.Format: androidx.media3.common.Format$Builder buildUpon()>();

        $l5 = r10.<androidx.media3.common.Format: long subsampleOffsetUs>;

        $l4 = r0.<androidx.media3.exoplayer.BaseRenderer: long streamOffsetUs>;

        $l6 = $l5 + $l4;

        $r9 = virtualinvoke $r8.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSubsampleOffsetUs(long)>($l6);

        r11 = virtualinvoke $r9.<androidx.media3.common.Format$Builder: androidx.media3.common.Format build()>();

        r1.<androidx.media3.exoplayer.FormatHolder: androidx.media3.common.Format format> = r11;

     label5:
        return i1;
    }

    protected int skipSource(long)
    {
        androidx.media3.exoplayer.BaseRenderer r0;
        long l0, $l1, $l2;
        androidx.media3.exoplayer.source.SampleStream $r1, $r3;
        java.lang.Object $r2;
        int $i3;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.media3.exoplayer.BaseRenderer: androidx.media3.exoplayer.source.SampleStream stream>;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r3 = (androidx.media3.exoplayer.source.SampleStream) $r2;

        $l1 = r0.<androidx.media3.exoplayer.BaseRenderer: long streamOffsetUs>;

        $l2 = l0 - $l1;

        $i3 = interfaceinvoke $r3.<androidx.media3.exoplayer.source.SampleStream: int skipData(long)>($l2);

        return $i3;
    }

    protected final boolean isSourceReady()
    {
        androidx.media3.exoplayer.BaseRenderer r0;
        boolean $z0, $z1;
        androidx.media3.exoplayer.source.SampleStream $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.exoplayer.BaseRenderer;

        $z0 = virtualinvoke r0.<androidx.media3.exoplayer.BaseRenderer: boolean hasReadStreamToEnd()>();

        if $z0 == 0 goto label1;

        $z1 = r0.<androidx.media3.exoplayer.BaseRenderer: boolean streamIsFinal>;

        goto label2;

     label1:
        $r1 = r0.<androidx.media3.exoplayer.BaseRenderer: androidx.media3.exoplayer.source.SampleStream stream>;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r3 = (androidx.media3.exoplayer.source.SampleStream) $r2;

        $z1 = interfaceinvoke $r3.<androidx.media3.exoplayer.source.SampleStream: boolean isReady()>();

     label2:
        return $z1;
    }

