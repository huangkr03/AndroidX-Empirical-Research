androidx.room.compiler.codegen.java.JavaFunSpec
<androidx.room.compiler.codegen.java.JavaFunSpec: com.squareup.javapoet.MethodSpec actual>
    public void <init>(com.squareup.javapoet.MethodSpec)
    {
        androidx.room.compiler.codegen.java.JavaFunSpec r0;
        com.squareup.javapoet.MethodSpec r1;

        r0 := @this: androidx.room.compiler.codegen.java.JavaFunSpec;

        r1 := @parameter0: com.squareup.javapoet.MethodSpec;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "actual");

        specialinvoke r0.<androidx.room.compiler.codegen.java.JavaLang: void <init>()>();

        r0.<androidx.room.compiler.codegen.java.JavaFunSpec: com.squareup.javapoet.MethodSpec actual> = r1;

        return;
    }

    public final com.squareup.javapoet.MethodSpec getActual$room_compiler_processing()
    {
        androidx.room.compiler.codegen.java.JavaFunSpec r0;
        com.squareup.javapoet.MethodSpec $r1;

        r0 := @this: androidx.room.compiler.codegen.java.JavaFunSpec;

        $r1 = r0.<androidx.room.compiler.codegen.java.JavaFunSpec: com.squareup.javapoet.MethodSpec actual>;

        return $r1;
    }

androidx.room.compiler.codegen.java.JavaFunSpec$Builder
<androidx.room.compiler.codegen.java.JavaFunSpec$Builder: com.squareup.javapoet.MethodSpec$Builder actual>
    public void <init>(com.squareup.javapoet.MethodSpec$Builder)
    {
        androidx.room.compiler.codegen.java.JavaFunSpec$Builder r0;
        com.squareup.javapoet.MethodSpec$Builder r1;

        r0 := @this: androidx.room.compiler.codegen.java.JavaFunSpec$Builder;

        r1 := @parameter0: com.squareup.javapoet.MethodSpec$Builder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "actual");

        specialinvoke r0.<androidx.room.compiler.codegen.java.JavaLang: void <init>()>();

        r0.<androidx.room.compiler.codegen.java.JavaFunSpec$Builder: com.squareup.javapoet.MethodSpec$Builder actual> = r1;

        return;
    }

    public final com.squareup.javapoet.MethodSpec$Builder getActual$room_compiler_processing()
    {
        androidx.room.compiler.codegen.java.JavaFunSpec$Builder r0;
        com.squareup.javapoet.MethodSpec$Builder $r1;

        r0 := @this: androidx.room.compiler.codegen.java.JavaFunSpec$Builder;

        $r1 = r0.<androidx.room.compiler.codegen.java.JavaFunSpec$Builder: com.squareup.javapoet.MethodSpec$Builder actual>;

        return $r1;
    }

    public androidx.room.compiler.codegen.java.JavaFunSpec$Builder addCode(androidx.room.compiler.codegen.XCodeBlock)
    {
        androidx.room.compiler.codegen.java.JavaFunSpec$Builder r0, r2, $r3, $r9;
        androidx.room.compiler.codegen.XCodeBlock r1;
        java.lang.String r4, $r11;
        boolean $z1;
        androidx.room.compiler.codegen.java.JavaCodeBlock $r5;
        com.squareup.javapoet.MethodSpec$Builder $r6;
        com.squareup.javapoet.CodeBlock $r7;
        java.lang.IllegalArgumentException $r10;

        r0 := @this: androidx.room.compiler.codegen.java.JavaFunSpec$Builder;

        r1 := @parameter0: androidx.room.compiler.codegen.XCodeBlock;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "code");

        r2 = r0;

        $r3 = (androidx.room.compiler.codegen.java.JavaFunSpec$Builder) r2;

        $z1 = r1 instanceof androidx.room.compiler.codegen.java.JavaCodeBlock;

        if $z1 != 0 goto label1;

        r4 = "Failed requirement.";

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label1:
        $r6 = $r3.<androidx.room.compiler.codegen.java.JavaFunSpec$Builder: com.squareup.javapoet.MethodSpec$Builder actual>;

        $r5 = (androidx.room.compiler.codegen.java.JavaCodeBlock) r1;

        $r7 = virtualinvoke $r5.<androidx.room.compiler.codegen.java.JavaCodeBlock: com.squareup.javapoet.CodeBlock getActual$room_compiler_processing()>();

        virtualinvoke $r6.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addCode(com.squareup.javapoet.CodeBlock)>($r7);

        $r9 = (androidx.room.compiler.codegen.java.JavaFunSpec$Builder) r2;

        return $r9;
    }

    public androidx.room.compiler.codegen.java.JavaFunSpec$Builder addParameter(androidx.room.compiler.codegen.XTypeName, java.lang.String, java.util.List)
    {
        androidx.room.compiler.codegen.java.JavaFunSpec$Builder r0, r4, $r5, $r23;
        androidx.room.compiler.codegen.XTypeName r1;
        java.lang.String r2;
        java.util.List r3;
        com.squareup.javapoet.MethodSpec$Builder r7, $r8;
        com.squareup.javapoet.TypeName $r9;
        javax.lang.model.element.Modifier $r10;
        androidx.room.compiler.processing.XNullability $r11, $r12, $r13, $r14;
        com.squareup.javapoet.ClassName $r16, $r18;
        javax.lang.model.element.Modifier[] r20;
        com.squareup.javapoet.ParameterSpec$Builder r21;
        com.squareup.javapoet.ParameterSpec $r22;

        r0 := @this: androidx.room.compiler.codegen.java.JavaFunSpec$Builder;

        r1 := @parameter0: androidx.room.compiler.codegen.XTypeName;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "typeName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "name");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "annotations");

        r4 = r0;

        $r5 = (androidx.room.compiler.codegen.java.JavaFunSpec$Builder) r4;

        $r8 = $r5.<androidx.room.compiler.codegen.java.JavaFunSpec$Builder: com.squareup.javapoet.MethodSpec$Builder actual>;

        $r9 = virtualinvoke r1.<androidx.room.compiler.codegen.XTypeName: com.squareup.javapoet.TypeName getJava$room_compiler_processing()>();

        r20 = newarray (javax.lang.model.element.Modifier)[1];

        $r10 = <javax.lang.model.element.Modifier: javax.lang.model.element.Modifier FINAL>;

        r20[0] = $r10;

        r21 = staticinvoke <com.squareup.javapoet.ParameterSpec: com.squareup.javapoet.ParameterSpec$Builder builder(com.squareup.javapoet.TypeName,java.lang.String,javax.lang.model.element.Modifier[])>($r9, r2, r20);

        r7 = $r8;

        $r11 = virtualinvoke r1.<androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.processing.XNullability getNullability$room_compiler_processing()>();

        $r12 = <androidx.room.compiler.processing.XNullability: androidx.room.compiler.processing.XNullability NULLABLE>;

        if $r11 != $r12 goto label1;

        $r18 = staticinvoke <androidx.room.compiler.codegen.java.ClassNamesKt: com.squareup.javapoet.ClassName getNULLABLE_ANNOTATION()>();

        virtualinvoke r21.<com.squareup.javapoet.ParameterSpec$Builder: com.squareup.javapoet.ParameterSpec$Builder addAnnotation(com.squareup.javapoet.ClassName)>($r18);

        goto label2;

     label1:
        $r13 = virtualinvoke r1.<androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.processing.XNullability getNullability$room_compiler_processing()>();

        $r14 = <androidx.room.compiler.processing.XNullability: androidx.room.compiler.processing.XNullability NONNULL>;

        if $r13 != $r14 goto label2;

        $r16 = staticinvoke <androidx.room.compiler.codegen.java.ClassNamesKt: com.squareup.javapoet.ClassName getNONNULL_ANNOTATION()>();

        virtualinvoke r21.<com.squareup.javapoet.ParameterSpec$Builder: com.squareup.javapoet.ParameterSpec$Builder addAnnotation(com.squareup.javapoet.ClassName)>($r16);

     label2:
        $r22 = virtualinvoke r21.<com.squareup.javapoet.ParameterSpec$Builder: com.squareup.javapoet.ParameterSpec build()>();

        virtualinvoke r7.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addParameter(com.squareup.javapoet.ParameterSpec)>($r22);

        $r23 = (androidx.room.compiler.codegen.java.JavaFunSpec$Builder) r4;

        return $r23;
    }

    public transient androidx.room.compiler.codegen.java.JavaFunSpec$Builder callSuperConstructor(androidx.room.compiler.codegen.XCodeBlock[])
    {
        androidx.room.compiler.codegen.java.JavaFunSpec$Builder r0, r2, $r3, $r24;
        androidx.room.compiler.codegen.XCodeBlock[] r1;
        java.lang.Object[] r4, r6;
        byte b0;
        java.lang.String r7, r13, $r17, $r28;
        com.squareup.javapoet.MethodSpec$Builder r8, $r15;
        java.util.Collection r10, r29;
        int i1, $i2, i3;
        androidx.room.compiler.codegen.XCodeBlock r11, r12;
        java.lang.StringBuilder $r14, $r16, $r18, $r19;
        java.util.ArrayList $r20;
        java.lang.Iterable $r21;
        com.squareup.javapoet.CodeBlock $r22, $r26;
        boolean $z4;
        androidx.room.compiler.codegen.java.JavaCodeBlock $r25;
        java.lang.IllegalStateException $r27;
        java.util.List r30;

        r0 := @this: androidx.room.compiler.codegen.java.JavaFunSpec$Builder;

        r1 := @parameter0: androidx.room.compiler.codegen.XCodeBlock[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "args");

        r2 = r0;

        $r3 = (androidx.room.compiler.codegen.java.JavaFunSpec$Builder) r2;

        $r15 = $r3.<androidx.room.compiler.codegen.java.JavaFunSpec$Builder: com.squareup.javapoet.MethodSpec$Builder actual>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("super(");

        $r17 = staticinvoke <androidx.room.compiler.codegen.PoetExtKt: java.lang.String getL()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        r4 = newarray (java.lang.Object)[1];

        b0 = 0;

        r6 = r4;

        r7 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        r8 = $r15;

        $r20 = new java.util.ArrayList;

        $i2 = lengthof r1;

        specialinvoke $r20.<java.util.ArrayList: void <init>(int)>($i2);

        r10 = (java.util.Collection) $r20;

        i3 = 0;

        i1 = lengthof r1;

     label1:
        if i3 >= i1 goto label3;

        r11 = r1[i3];

        r12 = r11;

        r29 = r10;

        $z4 = r12 instanceof androidx.room.compiler.codegen.java.JavaCodeBlock;

        if $z4 != 0 goto label2;

        r13 = "Check failed.";

        $r27 = new java.lang.IllegalStateException;

        $r28 = virtualinvoke r13.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r27.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r28);

        throw $r27;

     label2:
        $r25 = (androidx.room.compiler.codegen.java.JavaCodeBlock) r12;

        $r26 = virtualinvoke $r25.<androidx.room.compiler.codegen.java.JavaCodeBlock: com.squareup.javapoet.CodeBlock getActual$room_compiler_processing()>();

        interfaceinvoke r29.<java.util.Collection: boolean add(java.lang.Object)>($r26);

        i3 = i3 + 1;

        goto label1;

     label3:
        r30 = (java.util.List) r10;

        $r21 = (java.lang.Iterable) r30;

        $r22 = staticinvoke <com.squareup.javapoet.CodeBlock: com.squareup.javapoet.CodeBlock join(java.lang.Iterable,java.lang.String)>($r21, ", ");

        r6[b0] = $r22;

        virtualinvoke r8.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addStatement(java.lang.String,java.lang.Object[])>(r7, r4);

        $r24 = (androidx.room.compiler.codegen.java.JavaFunSpec$Builder) r2;

        return $r24;
    }

    public androidx.room.compiler.codegen.java.JavaFunSpec$Builder returns(androidx.room.compiler.codegen.XTypeName)
    {
        androidx.room.compiler.codegen.java.JavaFunSpec$Builder r0, r2, $r3, $r25;
        androidx.room.compiler.codegen.XTypeName r1;
        com.squareup.javapoet.TypeName $r4, $r5, $r6, $r24;
        boolean $z1, $z2, $z3;
        androidx.room.compiler.processing.KnownTypeNames $r7;
        com.squareup.javapoet.ClassName $r8, $r18, $r21;
        com.squareup.javapoet.MethodSpec$Builder $r9, $r17, $r20, $r23;
        javax.lang.model.element.Modifier $r10;
        java.util.List $r11;
        androidx.room.compiler.processing.XNullability $r13, $r14, $r15, $r16;

        r0 := @this: androidx.room.compiler.codegen.java.JavaFunSpec$Builder;

        r1 := @parameter0: androidx.room.compiler.codegen.XTypeName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "typeName");

        r2 = r0;

        $r3 = (androidx.room.compiler.codegen.java.JavaFunSpec$Builder) r2;

        $r4 = virtualinvoke r1.<androidx.room.compiler.codegen.XTypeName: com.squareup.javapoet.TypeName getJava$room_compiler_processing()>();

        $r5 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName VOID>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $z1 != 0 goto label1;

        $r6 = virtualinvoke r1.<androidx.room.compiler.codegen.XTypeName: com.squareup.javapoet.TypeName getJava$room_compiler_processing()>();

        $r7 = <androidx.room.compiler.processing.KnownTypeNames: androidx.room.compiler.processing.KnownTypeNames INSTANCE>;

        $r8 = virtualinvoke $r7.<androidx.room.compiler.processing.KnownTypeNames: com.squareup.javapoet.ClassName getKOTLIN_UNIT()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r6, $r8);

        if $z2 == 0 goto label2;

     label1:
        goto label5;

     label2:
        $r9 = $r3.<androidx.room.compiler.codegen.java.JavaFunSpec$Builder: com.squareup.javapoet.MethodSpec$Builder actual>;

        $r11 = $r9.<com.squareup.javapoet.MethodSpec$Builder: java.util.List modifiers>;

        $r10 = <javax.lang.model.element.Modifier: javax.lang.model.element.Modifier PRIVATE>;

        $z3 = interfaceinvoke $r11.<java.util.List: boolean contains(java.lang.Object)>($r10);

        if $z3 != 0 goto label4;

        $r13 = virtualinvoke r1.<androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.processing.XNullability getNullability$room_compiler_processing()>();

        $r14 = <androidx.room.compiler.processing.XNullability: androidx.room.compiler.processing.XNullability NULLABLE>;

        if $r13 != $r14 goto label3;

        $r20 = $r3.<androidx.room.compiler.codegen.java.JavaFunSpec$Builder: com.squareup.javapoet.MethodSpec$Builder actual>;

        $r21 = staticinvoke <androidx.room.compiler.codegen.java.ClassNamesKt: com.squareup.javapoet.ClassName getNULLABLE_ANNOTATION()>();

        virtualinvoke $r20.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addAnnotation(com.squareup.javapoet.ClassName)>($r21);

        goto label4;

     label3:
        $r15 = virtualinvoke r1.<androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.processing.XNullability getNullability$room_compiler_processing()>();

        $r16 = <androidx.room.compiler.processing.XNullability: androidx.room.compiler.processing.XNullability NONNULL>;

        if $r15 != $r16 goto label4;

        $r17 = $r3.<androidx.room.compiler.codegen.java.JavaFunSpec$Builder: com.squareup.javapoet.MethodSpec$Builder actual>;

        $r18 = staticinvoke <androidx.room.compiler.codegen.java.ClassNamesKt: com.squareup.javapoet.ClassName getNONNULL_ANNOTATION()>();

        virtualinvoke $r17.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addAnnotation(com.squareup.javapoet.ClassName)>($r18);

     label4:
        $r23 = $r3.<androidx.room.compiler.codegen.java.JavaFunSpec$Builder: com.squareup.javapoet.MethodSpec$Builder actual>;

        $r24 = virtualinvoke r1.<androidx.room.compiler.codegen.XTypeName: com.squareup.javapoet.TypeName getJava$room_compiler_processing()>();

        virtualinvoke $r23.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder returns(com.squareup.javapoet.TypeName)>($r24);

     label5:
        $r25 = (androidx.room.compiler.codegen.java.JavaFunSpec$Builder) r2;

        return $r25;
    }

    public androidx.room.compiler.codegen.java.JavaFunSpec build()
    {
        androidx.room.compiler.codegen.java.JavaFunSpec$Builder r0;
        androidx.room.compiler.codegen.java.JavaFunSpec $r1;
        com.squareup.javapoet.MethodSpec$Builder $r2;
        com.squareup.javapoet.MethodSpec $r3;

        r0 := @this: androidx.room.compiler.codegen.java.JavaFunSpec$Builder;

        $r1 = new androidx.room.compiler.codegen.java.JavaFunSpec;

        $r2 = r0.<androidx.room.compiler.codegen.java.JavaFunSpec$Builder: com.squareup.javapoet.MethodSpec$Builder actual>;

        $r3 = virtualinvoke $r2.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec build()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "actual.build()");

        specialinvoke $r1.<androidx.room.compiler.codegen.java.JavaFunSpec: void <init>(com.squareup.javapoet.MethodSpec)>($r3);

        return $r1;
    }

    public volatile androidx.room.compiler.codegen.XFunSpec$Builder addCode(androidx.room.compiler.codegen.XCodeBlock)
    {
        androidx.room.compiler.codegen.java.JavaFunSpec$Builder r0, $r2;
        androidx.room.compiler.codegen.XCodeBlock r1;
        androidx.room.compiler.codegen.XFunSpec$Builder $r3;

        r0 := @this: androidx.room.compiler.codegen.java.JavaFunSpec$Builder;

        r1 := @parameter0: androidx.room.compiler.codegen.XCodeBlock;

        $r2 = virtualinvoke r0.<androidx.room.compiler.codegen.java.JavaFunSpec$Builder: androidx.room.compiler.codegen.java.JavaFunSpec$Builder addCode(androidx.room.compiler.codegen.XCodeBlock)>(r1);

        $r3 = (androidx.room.compiler.codegen.XFunSpec$Builder) $r2;

        return $r3;
    }

    public volatile androidx.room.compiler.codegen.XFunSpec$Builder addParameter(androidx.room.compiler.codegen.XTypeName, java.lang.String, java.util.List)
    {
        androidx.room.compiler.codegen.java.JavaFunSpec$Builder r0, $r4;
        androidx.room.compiler.codegen.XTypeName r1;
        java.lang.String r2;
        java.util.List r3;
        androidx.room.compiler.codegen.XFunSpec$Builder $r5;

        r0 := @this: androidx.room.compiler.codegen.java.JavaFunSpec$Builder;

        r1 := @parameter0: androidx.room.compiler.codegen.XTypeName;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.List;

        $r4 = virtualinvoke r0.<androidx.room.compiler.codegen.java.JavaFunSpec$Builder: androidx.room.compiler.codegen.java.JavaFunSpec$Builder addParameter(androidx.room.compiler.codegen.XTypeName,java.lang.String,java.util.List)>(r1, r2, r3);

        $r5 = (androidx.room.compiler.codegen.XFunSpec$Builder) $r4;

        return $r5;
    }

    public volatile androidx.room.compiler.codegen.XFunSpec$Builder callSuperConstructor(androidx.room.compiler.codegen.XCodeBlock[])
    {
        androidx.room.compiler.codegen.java.JavaFunSpec$Builder r0, $r2;
        androidx.room.compiler.codegen.XCodeBlock[] r1;
        androidx.room.compiler.codegen.XFunSpec$Builder $r3;

        r0 := @this: androidx.room.compiler.codegen.java.JavaFunSpec$Builder;

        r1 := @parameter0: androidx.room.compiler.codegen.XCodeBlock[];

        $r2 = virtualinvoke r0.<androidx.room.compiler.codegen.java.JavaFunSpec$Builder: androidx.room.compiler.codegen.java.JavaFunSpec$Builder callSuperConstructor(androidx.room.compiler.codegen.XCodeBlock[])>(r1);

        $r3 = (androidx.room.compiler.codegen.XFunSpec$Builder) $r2;

        return $r3;
    }

    public volatile androidx.room.compiler.codegen.XFunSpec$Builder returns(androidx.room.compiler.codegen.XTypeName)
    {
        androidx.room.compiler.codegen.java.JavaFunSpec$Builder r0, $r2;
        androidx.room.compiler.codegen.XTypeName r1;
        androidx.room.compiler.codegen.XFunSpec$Builder $r3;

        r0 := @this: androidx.room.compiler.codegen.java.JavaFunSpec$Builder;

        r1 := @parameter0: androidx.room.compiler.codegen.XTypeName;

        $r2 = virtualinvoke r0.<androidx.room.compiler.codegen.java.JavaFunSpec$Builder: androidx.room.compiler.codegen.java.JavaFunSpec$Builder returns(androidx.room.compiler.codegen.XTypeName)>(r1);

        $r3 = (androidx.room.compiler.codegen.XFunSpec$Builder) $r2;

        return $r3;
    }

    public volatile androidx.room.compiler.codegen.XFunSpec build()
    {
        androidx.room.compiler.codegen.java.JavaFunSpec$Builder r0;
        androidx.room.compiler.codegen.java.JavaFunSpec $r1;
        androidx.room.compiler.codegen.XFunSpec $r2;

        r0 := @this: androidx.room.compiler.codegen.java.JavaFunSpec$Builder;

        $r1 = virtualinvoke r0.<androidx.room.compiler.codegen.java.JavaFunSpec$Builder: androidx.room.compiler.codegen.java.JavaFunSpec build()>();

        $r2 = (androidx.room.compiler.codegen.XFunSpec) $r1;

        return $r2;
    }

