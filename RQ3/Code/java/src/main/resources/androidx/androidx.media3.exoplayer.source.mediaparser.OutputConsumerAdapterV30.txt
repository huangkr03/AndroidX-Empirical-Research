androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30
<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.lang.String TAG>
<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: android.util.Pair SEEK_POINT_PAIR_START>
<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.lang.String MEDIA_FORMAT_KEY_TRACK_TYPE>
<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.lang.String MEDIA_FORMAT_KEY_CHUNK_INDEX_SIZES>
<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.lang.String MEDIA_FORMAT_KEY_CHUNK_INDEX_OFFSETS>
<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.lang.String MEDIA_FORMAT_KEY_CHUNK_INDEX_DURATIONS>
<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.lang.String MEDIA_FORMAT_KEY_CHUNK_INDEX_TIMES>
<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.util.regex.Pattern REGEX_CRYPTO_INFO_PATTERN>
<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.util.ArrayList trackOutputs>
<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.util.ArrayList trackFormats>
<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.util.ArrayList lastReceivedCryptoInfos>
<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.util.ArrayList lastOutputCryptoDatas>
<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$DataReaderAdapter scratchDataReaderAdapter>
<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: boolean expectDummySeekMap>
<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: int primaryTrackType>
<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: androidx.media3.common.Format primaryTrackManifestFormat>
<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: androidx.media3.extractor.ExtractorOutput extractorOutput>
<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: android.media.MediaParser$SeekMap dummySeekMap>
<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: android.media.MediaParser$SeekMap lastSeekMap>
<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.lang.String containerMimeType>
<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: androidx.media3.extractor.ChunkIndex lastChunkIndex>
<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: androidx.media3.common.util.TimestampAdjuster timestampAdjuster>
<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.util.List muxedCaptionFormats>
<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: int primaryTrackIndex>
<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: long sampleTimestampUpperLimitFilterUs>
<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: boolean tracksFoundCalled>
<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: boolean tracksEnded>
<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: boolean seekingDisabled>
    public void <init>()
    {
        androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30 r0;

        r0 := @this: androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30;

        specialinvoke r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: void <init>(androidx.media3.common.Format,int,boolean)>(null, -2, 0);

        return;
    }

    public void <init>(androidx.media3.common.Format, int, boolean)
    {
        androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30 r0;
        androidx.media3.common.Format r1;
        int i0;
        boolean z0;
        com.google.common.collect.ImmutableList $r8;
        java.util.ArrayList r9, r10, r11, r12;
        androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$DataReaderAdapter r13;
        androidx.media3.extractor.DummyExtractorOutput r14;
        androidx.media3.extractor.ExtractorOutput r15;

        r0 := @this: androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30;

        r1 := @parameter0: androidx.media3.common.Format;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: boolean expectDummySeekMap> = z0;

        r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: androidx.media3.common.Format primaryTrackManifestFormat> = r1;

        r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: int primaryTrackType> = i0;

        r9 = new java.util.ArrayList;

        specialinvoke r9.<java.util.ArrayList: void <init>()>();

        r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.util.ArrayList trackOutputs> = r9;

        r10 = new java.util.ArrayList;

        specialinvoke r10.<java.util.ArrayList: void <init>()>();

        r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.util.ArrayList trackFormats> = r10;

        r11 = new java.util.ArrayList;

        specialinvoke r11.<java.util.ArrayList: void <init>()>();

        r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.util.ArrayList lastReceivedCryptoInfos> = r11;

        r12 = new java.util.ArrayList;

        specialinvoke r12.<java.util.ArrayList: void <init>()>();

        r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.util.ArrayList lastOutputCryptoDatas> = r12;

        r13 = new androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$DataReaderAdapter;

        specialinvoke r13.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$DataReaderAdapter: void <init>(androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$1)>(null);

        r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$DataReaderAdapter scratchDataReaderAdapter> = r13;

        r14 = new androidx.media3.extractor.DummyExtractorOutput;

        specialinvoke r14.<androidx.media3.extractor.DummyExtractorOutput: void <init>()>();

        r15 = (androidx.media3.extractor.ExtractorOutput) r14;

        r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: androidx.media3.extractor.ExtractorOutput extractorOutput> = r15;

        r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: long sampleTimestampUpperLimitFilterUs> = -9223372036854775807L;

        $r8 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();

        r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.util.List muxedCaptionFormats> = $r8;

        return;
    }

    public void setSampleTimestampUpperLimitFilterUs(long)
    {
        androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30 r0;
        long l0;

        r0 := @this: androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30;

        l0 := @parameter0: long;

        r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: long sampleTimestampUpperLimitFilterUs> = l0;

        return;
    }

    public void setTimestampAdjuster(androidx.media3.common.util.TimestampAdjuster)
    {
        androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30 r0;
        androidx.media3.common.util.TimestampAdjuster r1;

        r0 := @this: androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30;

        r1 := @parameter0: androidx.media3.common.util.TimestampAdjuster;

        r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: androidx.media3.common.util.TimestampAdjuster timestampAdjuster> = r1;

        return;
    }

    public void setExtractorOutput(androidx.media3.extractor.ExtractorOutput)
    {
        androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30 r0;
        androidx.media3.extractor.ExtractorOutput r1;

        r0 := @this: androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30;

        r1 := @parameter0: androidx.media3.extractor.ExtractorOutput;

        r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: androidx.media3.extractor.ExtractorOutput extractorOutput> = r1;

        return;
    }

    public void setMuxedCaptionFormats(java.util.List)
    {
        androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30 r0;
        java.util.List r1;

        r0 := @this: androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30;

        r1 := @parameter0: java.util.List;

        r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.util.List muxedCaptionFormats> = r1;

        return;
    }

    public void disableSeeking()
    {
        androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30 r0;

        r0 := @this: androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30;

        r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: boolean seekingDisabled> = 1;

        return;
    }

    public android.media.MediaParser$SeekMap getDummySeekMap()
    {
        androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30 r0;
        android.media.MediaParser$SeekMap $r1;

        r0 := @this: androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30;

        $r1 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: android.media.MediaParser$SeekMap dummySeekMap>;

        return $r1;
    }

    public androidx.media3.extractor.ChunkIndex getChunkIndex()
    {
        androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30 r0;
        androidx.media3.extractor.ChunkIndex $r1;

        r0 := @this: androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30;

        $r1 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: androidx.media3.extractor.ChunkIndex lastChunkIndex>;

        return $r1;
    }

    public android.util.Pair getSeekPoints(long)
    {
        androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30 r0;
        long l0;
        android.media.MediaParser$SeekMap $r1, $r2;
        android.util.Pair $r3;

        r0 := @this: androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: android.media.MediaParser$SeekMap lastSeekMap>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: android.media.MediaParser$SeekMap lastSeekMap>;

        $r3 = virtualinvoke $r2.<android.media.MediaParser$SeekMap: android.util.Pair getSeekPoints(long)>(l0);

        goto label2;

     label1:
        $r3 = <androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: android.util.Pair SEEK_POINT_PAIR_START>;

     label2:
        return $r3;
    }

    public void setSelectedParserName(java.lang.String)
    {
        androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30 r0;
        java.lang.String r1, $r2;

        r0 := @this: androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.lang.String getMimeType(java.lang.String)>(r1);

        r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.lang.String containerMimeType> = $r2;

        return;
    }

    public androidx.media3.common.Format[] getSampleFormats()
    {
        androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30 r0;
        androidx.media3.common.Format[] r1;
        boolean $z0;
        java.util.ArrayList $r2, $r3, $r4;
        int $i0, $i1, i2;
        java.lang.Object $r5, $r7;
        androidx.media3.common.Format $r6, $r8;

        r0 := @this: androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30;

        $z0 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: boolean tracksFoundCalled>;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.util.ArrayList trackFormats>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        r1 = newarray (androidx.media3.common.Format)[$i0];

        i2 = 0;

     label2:
        $r3 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.util.ArrayList trackFormats>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i2 >= $i1 goto label3;

        $r4 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.util.ArrayList trackFormats>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r6 = (androidx.media3.common.Format) $r5;

        $r7 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r6);

        $r8 = (androidx.media3.common.Format) $r7;

        r1[i2] = $r8;

        i2 = i2 + 1;

        goto label2;

     label3:
        return r1;
    }

    public void onTrackCountFound(int)
    {
        androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30 r0;
        int i0;

        r0 := @this: androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30;

        i0 := @parameter0: int;

        r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: boolean tracksFoundCalled> = 1;

        specialinvoke r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: void maybeEndTracks()>();

        return;
    }

    public void onSeekMapFound(android.media.MediaParser$SeekMap)
    {
        androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30 r0;
        android.media.MediaParser$SeekMap r1, $r3;
        long l0, $l2;
        boolean $z0, $z1;
        androidx.media3.extractor.ExtractorOutput $r2;
        byte $b1;
        java.lang.Object $r4;
        androidx.media3.extractor.SeekMap$Unseekable r5;
        androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$SeekMapAdapter r6;
        androidx.media3.extractor.SeekMap r7;

        r0 := @this: androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30;

        r1 := @parameter0: android.media.MediaParser$SeekMap;

        $z0 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: boolean expectDummySeekMap>;

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: android.media.MediaParser$SeekMap dummySeekMap>;

        if $r3 != null goto label1;

        r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: android.media.MediaParser$SeekMap dummySeekMap> = r1;

        goto label6;

     label1:
        r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: android.media.MediaParser$SeekMap lastSeekMap> = r1;

        l0 = virtualinvoke r1.<android.media.MediaParser$SeekMap: long getDurationMicros()>();

        $r2 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: androidx.media3.extractor.ExtractorOutput extractorOutput>;

        $z1 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: boolean seekingDisabled>;

        if $z1 == 0 goto label4;

        r5 = new androidx.media3.extractor.SeekMap$Unseekable;

        $r4 = r5;

        $b1 = l0 cmp -2147483648L;

        if $b1 == 0 goto label2;

        $l2 = l0;

        goto label3;

     label2:
        $l2 = -9223372036854775807L;

     label3:
        specialinvoke r5.<androidx.media3.extractor.SeekMap$Unseekable: void <init>(long)>($l2);

        goto label5;

     label4:
        r6 = new androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$SeekMapAdapter;

        $r4 = r6;

        specialinvoke r6.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$SeekMapAdapter: void <init>(android.media.MediaParser$SeekMap)>(r1);

     label5:
        r7 = (androidx.media3.extractor.SeekMap) $r4;

        interfaceinvoke $r2.<androidx.media3.extractor.ExtractorOutput: void seekMap(androidx.media3.extractor.SeekMap)>(r7);

     label6:
        return;
    }

    public void onTrackDataFound(int, android.media.MediaParser$TrackData)
    {
        androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30 r0;
        int i0, i1, $i2, $i3;
        android.media.MediaParser$TrackData r1;
        android.media.MediaFormat $r2, $r8, $r9;
        boolean $z0;
        java.util.ArrayList $r3, $r11, $r19;
        java.lang.Object $r4;
        androidx.media3.common.Format $r5, $r7, r16, $r18;
        androidx.media3.extractor.ExtractorOutput $r10;
        androidx.media3.extractor.TrackOutput r13, $r17;
        java.lang.String r14, $r15;

        r0 := @this: androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.MediaParser$TrackData;

        $r2 = r1.<android.media.MediaParser$TrackData: android.media.MediaFormat mediaFormat>;

        $z0 = specialinvoke r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: boolean maybeObtainChunkIndex(android.media.MediaFormat)>($r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        specialinvoke r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: void ensureSpaceForTrackIndex(int)>(i0);

        $r3 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.util.ArrayList trackOutputs>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r13 = (androidx.media3.extractor.TrackOutput) $r4;

        if r13 != null goto label5;

        $r8 = r1.<android.media.MediaParser$TrackData: android.media.MediaFormat mediaFormat>;

        r14 = virtualinvoke $r8.<android.media.MediaFormat: java.lang.String getString(java.lang.String)>("track-type-string");

        if r14 == null goto label2;

        $r15 = r14;

        goto label3;

     label2:
        $r9 = r1.<android.media.MediaParser$TrackData: android.media.MediaFormat mediaFormat>;

        $r15 = virtualinvoke $r9.<android.media.MediaFormat: java.lang.String getString(java.lang.String)>("mime");

     label3:
        i1 = staticinvoke <androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: int toTrackTypeConstant(java.lang.String)>($r15);

        $i3 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: int primaryTrackType>;

        if i1 != $i3 goto label4;

        r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: int primaryTrackIndex> = i0;

     label4:
        $r10 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: androidx.media3.extractor.ExtractorOutput extractorOutput>;

        r13 = interfaceinvoke $r10.<androidx.media3.extractor.ExtractorOutput: androidx.media3.extractor.TrackOutput track(int,int)>(i0, i1);

        $r11 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.util.ArrayList trackOutputs>;

        virtualinvoke $r11.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i0, r13);

        if r14 == null goto label5;

        return;

     label5:
        r16 = specialinvoke r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: androidx.media3.common.Format toExoPlayerFormat(android.media.MediaParser$TrackData)>(r1);

        $r17 = r13;

        $r5 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: androidx.media3.common.Format primaryTrackManifestFormat>;

        if $r5 == null goto label6;

        $i2 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: int primaryTrackIndex>;

        if i0 != $i2 goto label6;

        $r7 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: androidx.media3.common.Format primaryTrackManifestFormat>;

        $r18 = virtualinvoke r16.<androidx.media3.common.Format: androidx.media3.common.Format withManifestFormatInfo(androidx.media3.common.Format)>($r7);

        goto label7;

     label6:
        $r18 = r16;

     label7:
        interfaceinvoke $r17.<androidx.media3.extractor.TrackOutput: void format(androidx.media3.common.Format)>($r18);

        $r19 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.util.ArrayList trackFormats>;

        virtualinvoke $r19.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i0, r16);

        specialinvoke r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: void maybeEndTracks()>();

        return;
    }

    public void onSampleDataFound(int, android.media.MediaParser$InputReader) throws java.io.IOException
    {
        androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30 r0;
        int i0, $i2;
        android.media.MediaParser$InputReader r1;
        androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$DataReaderAdapter $r2, $r5;
        java.util.ArrayList $r3, $r7;
        java.lang.Object $r4;
        long $l1;
        androidx.media3.extractor.ExtractorOutput $r6;
        androidx.media3.extractor.TrackOutput r9;

        r0 := @this: androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.MediaParser$InputReader;

        specialinvoke r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: void ensureSpaceForTrackIndex(int)>(i0);

        $r2 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$DataReaderAdapter scratchDataReaderAdapter>;

        $r2.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$DataReaderAdapter: android.media.MediaParser$InputReader input> = r1;

        $r3 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.util.ArrayList trackOutputs>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r9 = (androidx.media3.extractor.TrackOutput) $r4;

        if r9 != null goto label1;

        $r6 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: androidx.media3.extractor.ExtractorOutput extractorOutput>;

        r9 = interfaceinvoke $r6.<androidx.media3.extractor.ExtractorOutput: androidx.media3.extractor.TrackOutput track(int,int)>(i0, -1);

        $r7 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.util.ArrayList trackOutputs>;

        virtualinvoke $r7.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i0, r9);

     label1:
        $r5 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$DataReaderAdapter scratchDataReaderAdapter>;

        $l1 = interfaceinvoke r1.<android.media.MediaParser$InputReader: long getLength()>();

        $i2 = (int) $l1;

        interfaceinvoke r9.<androidx.media3.extractor.TrackOutput: int sampleData(androidx.media3.common.DataReader,int,boolean)>($r5, $i2, 1);

        return;
    }

    public void onSampleCompleted(int, long, int, int, int, android.media.MediaCodec$CryptoInfo)
    {
        androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30 r0;
        int i0, i1, i2, i3;
        android.media.MediaCodec$CryptoInfo r1;
        long $l4, $l6, l8;
        byte $b5, $b7;
        androidx.media3.common.util.TimestampAdjuster $r2, $r9;
        java.util.ArrayList $r3;
        java.lang.Object $r4, $r6;
        androidx.media3.extractor.TrackOutput $r5, $r7;
        androidx.media3.extractor.TrackOutput$CryptoData $r8;

        r0 := @this: androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30;

        i0 := @parameter0: int;

        l8 := @parameter1: long;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r1 := @parameter5: android.media.MediaCodec$CryptoInfo;

        $l4 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: long sampleTimestampUpperLimitFilterUs>;

        $b5 = $l4 cmp -9223372036854775807L;

        if $b5 == 0 goto label1;

        $l6 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: long sampleTimestampUpperLimitFilterUs>;

        $b7 = l8 cmp $l6;

        if $b7 < 0 goto label1;

        return;

     label1:
        $r2 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: androidx.media3.common.util.TimestampAdjuster timestampAdjuster>;

        if $r2 == null goto label2;

        $r9 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: androidx.media3.common.util.TimestampAdjuster timestampAdjuster>;

        l8 = virtualinvoke $r9.<androidx.media3.common.util.TimestampAdjuster: long adjustSampleTimestamp(long)>(l8);

     label2:
        $r3 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.util.ArrayList trackOutputs>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r5 = (androidx.media3.extractor.TrackOutput) $r4;

        $r6 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r5);

        $r7 = (androidx.media3.extractor.TrackOutput) $r6;

        $r8 = specialinvoke r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: androidx.media3.extractor.TrackOutput$CryptoData toExoPlayerCryptoData(int,android.media.MediaCodec$CryptoInfo)>(i0, r1);

        interfaceinvoke $r7.<androidx.media3.extractor.TrackOutput: void sampleMetadata(long,int,int,int,androidx.media3.extractor.TrackOutput$CryptoData)>(l8, i1, i2, i3, $r8);

        return;
    }

    private boolean maybeObtainChunkIndex(android.media.MediaFormat)
    {
        androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30 r0;
        android.media.MediaFormat r1;
        java.nio.ByteBuffer r2, $r11, $r13, $r14, $r16, $r17, $r19;
        java.nio.IntBuffer r3;
        java.nio.LongBuffer r4, r5, r6;
        int[] r7;
        long[] r8, r9, r10;
        java.lang.Object $r12, $r15, $r18;
        int $i0, $i1, $i2, $i3;
        androidx.media3.extractor.ChunkIndex $r25, r27;
        androidx.media3.extractor.ExtractorOutput $r26;
        androidx.media3.extractor.SeekMap r28;

        r0 := @this: androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30;

        r1 := @parameter0: android.media.MediaFormat;

        r2 = virtualinvoke r1.<android.media.MediaFormat: java.nio.ByteBuffer getByteBuffer(java.lang.String)>("chunk-index-int-sizes");

        if r2 != null goto label1;

        return 0;

     label1:
        r3 = virtualinvoke r2.<java.nio.ByteBuffer: java.nio.IntBuffer asIntBuffer()>();

        $r11 = virtualinvoke r1.<android.media.MediaFormat: java.nio.ByteBuffer getByteBuffer(java.lang.String)>("chunk-index-long-offsets");

        $r12 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r11);

        $r13 = (java.nio.ByteBuffer) $r12;

        r4 = virtualinvoke $r13.<java.nio.ByteBuffer: java.nio.LongBuffer asLongBuffer()>();

        $r14 = virtualinvoke r1.<android.media.MediaFormat: java.nio.ByteBuffer getByteBuffer(java.lang.String)>("chunk-index-long-us-durations");

        $r15 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r14);

        $r16 = (java.nio.ByteBuffer) $r15;

        r5 = virtualinvoke $r16.<java.nio.ByteBuffer: java.nio.LongBuffer asLongBuffer()>();

        $r17 = virtualinvoke r1.<android.media.MediaFormat: java.nio.ByteBuffer getByteBuffer(java.lang.String)>("chunk-index-long-us-times");

        $r18 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r17);

        $r19 = (java.nio.ByteBuffer) $r18;

        r6 = virtualinvoke $r19.<java.nio.ByteBuffer: java.nio.LongBuffer asLongBuffer()>();

        $i0 = virtualinvoke r3.<java.nio.IntBuffer: int remaining()>();

        r7 = newarray (int)[$i0];

        $i1 = virtualinvoke r4.<java.nio.LongBuffer: int remaining()>();

        r8 = newarray (long)[$i1];

        $i2 = virtualinvoke r5.<java.nio.LongBuffer: int remaining()>();

        r9 = newarray (long)[$i2];

        $i3 = virtualinvoke r6.<java.nio.LongBuffer: int remaining()>();

        r10 = newarray (long)[$i3];

        virtualinvoke r3.<java.nio.IntBuffer: java.nio.IntBuffer get(int[])>(r7);

        virtualinvoke r4.<java.nio.LongBuffer: java.nio.LongBuffer get(long[])>(r8);

        virtualinvoke r5.<java.nio.LongBuffer: java.nio.LongBuffer get(long[])>(r9);

        virtualinvoke r6.<java.nio.LongBuffer: java.nio.LongBuffer get(long[])>(r10);

        r27 = new androidx.media3.extractor.ChunkIndex;

        specialinvoke r27.<androidx.media3.extractor.ChunkIndex: void <init>(int[],long[],long[],long[])>(r7, r8, r9, r10);

        r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: androidx.media3.extractor.ChunkIndex lastChunkIndex> = r27;

        $r26 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: androidx.media3.extractor.ExtractorOutput extractorOutput>;

        $r25 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: androidx.media3.extractor.ChunkIndex lastChunkIndex>;

        r28 = (androidx.media3.extractor.SeekMap) $r25;

        interfaceinvoke $r26.<androidx.media3.extractor.ExtractorOutput: void seekMap(androidx.media3.extractor.SeekMap)>(r28);

        return 1;
    }

    private void ensureSpaceForTrackIndex(int)
    {
        androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30 r0;
        int i0, i1;
        java.util.ArrayList $r1, $r2, $r3, $r4, $r5;

        r0 := @this: androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.util.ArrayList trackOutputs>;

        i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

     label1:
        if i1 > i0 goto label2;

        $r2 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.util.ArrayList trackOutputs>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

        $r3 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.util.ArrayList trackFormats>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

        $r4 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.util.ArrayList lastReceivedCryptoInfos>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

        $r5 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.util.ArrayList lastOutputCryptoDatas>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private androidx.media3.extractor.TrackOutput$CryptoData toExoPlayerCryptoData(int, android.media.MediaCodec$CryptoInfo)
    {
        androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30 r0;
        int i0, $i1, i2, i3;
        android.media.MediaCodec$CryptoInfo r1, r2;
        java.util.ArrayList $r3, $r15, $r17, $r19;
        java.lang.Object $r4, $r8, $r11, $r20, $r22;
        java.util.regex.Pattern $r5;
        java.lang.String $r6, $r7, $r9, $r10, $r12, $r27;
        androidx.media3.extractor.TrackOutput$CryptoData $r13, $r21, r28;
        byte[] $r14;
        java.lang.Throwable $r23, r30;
        java.lang.StringBuilder $r24, $r25, $r26;
        java.util.regex.Matcher r29;

        r0 := @this: androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.MediaCodec$CryptoInfo;

        if r1 != null goto label1;

        return null;

     label1:
        $r3 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.util.ArrayList lastReceivedCryptoInfos>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r2 = (android.media.MediaCodec$CryptoInfo) $r4;

        if r2 != r1 goto label2;

        $r19 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.util.ArrayList lastOutputCryptoDatas>;

        $r20 = virtualinvoke $r19.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r21 = (androidx.media3.extractor.TrackOutput$CryptoData) $r20;

        $r22 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r21);

        r28 = (androidx.media3.extractor.TrackOutput$CryptoData) $r22;

        goto label6;

     label2:
        $r5 = <androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.util.regex.Pattern REGEX_CRYPTO_INFO_PATTERN>;

        $r6 = virtualinvoke r1.<android.media.MediaCodec$CryptoInfo: java.lang.String toString()>();

        r29 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r6);

        virtualinvoke r29.<java.util.regex.Matcher: boolean find()>();

        $r7 = virtualinvoke r29.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r8 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r7);

        $r9 = (java.lang.String) $r8;

        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        $r10 = virtualinvoke r29.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $r11 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r10);

        $r12 = (java.lang.String) $r11;

        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r12);

     label3:
        goto label5;

     label4:
        $r23 := @caughtexception;

        r30 = $r23;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected error while parsing CryptoInfo: ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("OConsumerAdapterV30", $r27, r30);

        i2 = 0;

        i3 = 0;

     label5:
        $r13 = new androidx.media3.extractor.TrackOutput$CryptoData;

        $i1 = r1.<android.media.MediaCodec$CryptoInfo: int mode>;

        $r14 = r1.<android.media.MediaCodec$CryptoInfo: byte[] key>;

        specialinvoke $r13.<androidx.media3.extractor.TrackOutput$CryptoData: void <init>(int,byte[],int,int)>($i1, $r14, i2, i3);

        r28 = $r13;

        $r15 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.util.ArrayList lastReceivedCryptoInfos>;

        virtualinvoke $r15.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        $r17 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.util.ArrayList lastOutputCryptoDatas>;

        virtualinvoke $r17.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i0, r28);

     label6:
        return r28;

        catch java.lang.RuntimeException from label2 to label3 with label4;
    }

    private void maybeEndTracks()
    {
        androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30 r0;
        int i0, i1;
        boolean $z0, $z1;
        java.util.ArrayList $r1, $r3;
        androidx.media3.extractor.ExtractorOutput $r2;
        java.lang.Object $r4;

        r0 := @this: androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30;

        $z0 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: boolean tracksFoundCalled>;

        if $z0 == 0 goto label1;

        $z1 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: boolean tracksEnded>;

        if $z1 == 0 goto label2;

     label1:
        return;

     label2:
        $r1 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.util.ArrayList trackOutputs>;

        i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label3:
        if i1 >= i0 goto label5;

        $r3 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.util.ArrayList trackOutputs>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        if $r4 != null goto label4;

        return;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        $r2 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: androidx.media3.extractor.ExtractorOutput extractorOutput>;

        interfaceinvoke $r2.<androidx.media3.extractor.ExtractorOutput: void endTracks()>();

        r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: boolean tracksEnded> = 1;

        return;
    }

    private static int toTrackTypeConstant(java.lang.String)
    {
        java.lang.String r0, r1;
        int $i0, $i1;
        boolean $z0, $z1, $z2, $z3, $z4;
        byte b2;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label01;

        return -1;

     label01:
        r1 = r0;

        b2 = -1;

        $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -450004177: goto label05;
            case -284840886: goto label06;
            case 3556653: goto label04;
            case 93166550: goto label02;
            case 112202875: goto label03;
            default: goto label07;
        };

     label02:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("audio");

        if $z1 == 0 goto label07;

        b2 = 0;

        goto label07;

     label03:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("video");

        if $z0 == 0 goto label07;

        b2 = 1;

        goto label07;

     label04:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("text");

        if $z2 == 0 goto label07;

        b2 = 2;

        goto label07;

     label05:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("metadata");

        if $z4 == 0 goto label07;

        b2 = 3;

        goto label07;

     label06:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("unknown");

        if $z3 == 0 goto label07;

        b2 = 4;

     label07:
        tableswitch(b2)
        {
            case 0: goto label08;
            case 1: goto label09;
            case 2: goto label10;
            case 3: goto label11;
            case 4: goto label12;
            default: goto label13;
        };

     label08:
        return 1;

     label09:
        return 2;

     label10:
        return 3;

     label11:
        return 5;

     label12:
        return -1;

     label13:
        $i1 = staticinvoke <androidx.media3.common.MimeTypes: int getTrackType(java.lang.String)>(r0);

        return $i1;
    }

    private androidx.media3.common.Format toExoPlayerFormat(android.media.MediaParser$TrackData)
    {
        androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30 r0;
        android.media.MediaParser$TrackData r1;
        android.media.MediaFormat r2;
        java.lang.String r3, $r7, $r11, $r18, $r25, $r40, $r41, $r45;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i16, i17;
        androidx.media3.common.Format$Builder r4, $r6, $r10, $r12, $r13, $r14, $r16, $r17, $r19, $r20, $r21, $r22, $r24, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r42, $r43, $r44, $r46;
        androidx.media3.common.Format r5, $r37;
        android.media.DrmInitData $r8;
        androidx.media3.common.DrmInitData $r9;
        androidx.media3.common.ColorInfo $r15;
        float $f0, $f1;
        java.util.List $r23, $r36, $r38;
        long $l12;
        java.lang.Object $r39;
        boolean $z0;
        androidx.media3.common.Metadata $r47;

        r0 := @this: androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30;

        r1 := @parameter0: android.media.MediaParser$TrackData;

        r2 = r1.<android.media.MediaParser$TrackData: android.media.MediaFormat mediaFormat>;

        r3 = virtualinvoke r2.<android.media.MediaFormat: java.lang.String getString(java.lang.String)>("mime");

        i0 = virtualinvoke r2.<android.media.MediaFormat: int getInteger(java.lang.String,int)>("caption-service-number", -1);

        $r6 = new androidx.media3.common.Format$Builder;

        specialinvoke $r6.<androidx.media3.common.Format$Builder: void <init>()>();

        $r7 = virtualinvoke r2.<android.media.MediaFormat: java.lang.String getString(java.lang.String)>("crypto-mode-fourcc");

        $r8 = r1.<android.media.MediaParser$TrackData: android.media.DrmInitData drmInitData>;

        $r9 = staticinvoke <androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: androidx.media3.common.DrmInitData toExoPlayerDrmInitData(java.lang.String,android.media.DrmInitData)>($r7, $r8);

        $r10 = virtualinvoke $r6.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setDrmInitData(androidx.media3.common.DrmInitData)>($r9);

        $r11 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.lang.String containerMimeType>;

        $r12 = virtualinvoke $r10.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setContainerMimeType(java.lang.String)>($r11);

        $i1 = virtualinvoke r2.<android.media.MediaFormat: int getInteger(java.lang.String,int)>("bitrate", -1);

        $r13 = virtualinvoke $r12.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setPeakBitrate(int)>($i1);

        $i2 = virtualinvoke r2.<android.media.MediaFormat: int getInteger(java.lang.String,int)>("channel-count", -1);

        $r14 = virtualinvoke $r13.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setChannelCount(int)>($i2);

        $r15 = staticinvoke <androidx.media3.common.util.MediaFormatUtil: androidx.media3.common.ColorInfo getColorInfo(android.media.MediaFormat)>(r2);

        $r16 = virtualinvoke $r14.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setColorInfo(androidx.media3.common.ColorInfo)>($r15);

        $r17 = virtualinvoke $r16.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSampleMimeType(java.lang.String)>(r3);

        $r18 = virtualinvoke r2.<android.media.MediaFormat: java.lang.String getString(java.lang.String)>("codecs-string");

        $r19 = virtualinvoke $r17.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setCodecs(java.lang.String)>($r18);

        $f0 = virtualinvoke r2.<android.media.MediaFormat: float getFloat(java.lang.String,float)>("frame-rate", -1.0F);

        $r20 = virtualinvoke $r19.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setFrameRate(float)>($f0);

        $i3 = virtualinvoke r2.<android.media.MediaFormat: int getInteger(java.lang.String,int)>("width", -1);

        $r21 = virtualinvoke $r20.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setWidth(int)>($i3);

        $i4 = virtualinvoke r2.<android.media.MediaFormat: int getInteger(java.lang.String,int)>("height", -1);

        $r22 = virtualinvoke $r21.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setHeight(int)>($i4);

        $r23 = staticinvoke <androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.util.List getInitializationData(android.media.MediaFormat)>(r2);

        $r24 = virtualinvoke $r22.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setInitializationData(java.util.List)>($r23);

        $r25 = virtualinvoke r2.<android.media.MediaFormat: java.lang.String getString(java.lang.String)>("language");

        $r26 = virtualinvoke $r24.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setLanguage(java.lang.String)>($r25);

        $i5 = virtualinvoke r2.<android.media.MediaFormat: int getInteger(java.lang.String,int)>("max-input-size", -1);

        $r27 = virtualinvoke $r26.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setMaxInputSize(int)>($i5);

        $i6 = virtualinvoke r2.<android.media.MediaFormat: int getInteger(java.lang.String,int)>("exo-pcm-encoding", -1);

        $r28 = virtualinvoke $r27.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setPcmEncoding(int)>($i6);

        $i7 = virtualinvoke r2.<android.media.MediaFormat: int getInteger(java.lang.String,int)>("rotation-degrees", 0);

        $r29 = virtualinvoke $r28.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setRotationDegrees(int)>($i7);

        $i8 = virtualinvoke r2.<android.media.MediaFormat: int getInteger(java.lang.String,int)>("sample-rate", -1);

        $r30 = virtualinvoke $r29.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSampleRate(int)>($i8);

        $i9 = staticinvoke <androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: int getSelectionFlags(android.media.MediaFormat)>(r2);

        $r31 = virtualinvoke $r30.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSelectionFlags(int)>($i9);

        $i10 = virtualinvoke r2.<android.media.MediaFormat: int getInteger(java.lang.String,int)>("encoder-delay", 0);

        $r32 = virtualinvoke $r31.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setEncoderDelay(int)>($i10);

        $i11 = virtualinvoke r2.<android.media.MediaFormat: int getInteger(java.lang.String,int)>("encoder-padding", 0);

        $r33 = virtualinvoke $r32.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setEncoderPadding(int)>($i11);

        $f1 = virtualinvoke r2.<android.media.MediaFormat: float getFloat(java.lang.String,float)>("pixel-width-height-ratio-float", 1.0F);

        $r34 = virtualinvoke $r33.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setPixelWidthHeightRatio(float)>($f1);

        $l12 = virtualinvoke r2.<android.media.MediaFormat: long getLong(java.lang.String,long)>("subsample-offset-us-long", 9223372036854775807L);

        $r35 = virtualinvoke $r34.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSubsampleOffsetUs(long)>($l12);

        r4 = virtualinvoke $r35.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setAccessibilityChannel(int)>(i0);

        i17 = 0;

     label1:
        $r36 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.util.List muxedCaptionFormats>;

        $i13 = interfaceinvoke $r36.<java.util.List: int size()>();

        if i17 >= $i13 goto label3;

        $r38 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.util.List muxedCaptionFormats>;

        $r39 = interfaceinvoke $r38.<java.util.List: java.lang.Object get(int)>(i17);

        r5 = (androidx.media3.common.Format) $r39;

        $r40 = r5.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        $z0 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r40, r3);

        if $z0 == 0 goto label2;

        $i14 = r5.<androidx.media3.common.Format: int accessibilityChannel>;

        if $i14 != i0 goto label2;

        $r41 = r5.<androidx.media3.common.Format: java.lang.String language>;

        $r42 = virtualinvoke r4.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setLanguage(java.lang.String)>($r41);

        $i15 = r5.<androidx.media3.common.Format: int roleFlags>;

        $r43 = virtualinvoke $r42.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setRoleFlags(int)>($i15);

        $i16 = r5.<androidx.media3.common.Format: int selectionFlags>;

        $r44 = virtualinvoke $r43.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSelectionFlags(int)>($i16);

        $r45 = r5.<androidx.media3.common.Format: java.lang.String label>;

        $r46 = virtualinvoke $r44.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setLabel(java.lang.String)>($r45);

        $r47 = r5.<androidx.media3.common.Format: androidx.media3.common.Metadata metadata>;

        virtualinvoke $r46.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setMetadata(androidx.media3.common.Metadata)>($r47);

        goto label3;

     label2:
        i17 = i17 + 1;

        goto label1;

     label3:
        $r37 = virtualinvoke r4.<androidx.media3.common.Format$Builder: androidx.media3.common.Format build()>();

        return $r37;
    }

    private static androidx.media3.common.DrmInitData toExoPlayerDrmInitData(java.lang.String, android.media.DrmInitData)
    {
        java.lang.String r0, $r7;
        android.media.DrmInitData r1;
        androidx.media3.common.DrmInitData$SchemeData[] r2;
        android.media.DrmInitData$SchemeInitData r3;
        int $i0, $i1, i2;
        androidx.media3.common.DrmInitData $r4;
        androidx.media3.common.DrmInitData$SchemeData $r5;
        byte[] $r6;
        java.util.UUID $r8;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.media.DrmInitData;

        if r1 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke r1.<android.media.DrmInitData: int getSchemeInitDataCount()>();

        r2 = newarray (androidx.media3.common.DrmInitData$SchemeData)[$i0];

        i2 = 0;

     label2:
        $i1 = lengthof r2;

        if i2 >= $i1 goto label3;

        r3 = virtualinvoke r1.<android.media.DrmInitData: android.media.DrmInitData$SchemeInitData getSchemeInitDataAt(int)>(i2);

        $r5 = new androidx.media3.common.DrmInitData$SchemeData;

        $r8 = r3.<android.media.DrmInitData$SchemeInitData: java.util.UUID uuid>;

        $r7 = r3.<android.media.DrmInitData$SchemeInitData: java.lang.String mimeType>;

        $r6 = r3.<android.media.DrmInitData$SchemeInitData: byte[] data>;

        specialinvoke $r5.<androidx.media3.common.DrmInitData$SchemeData: void <init>(java.util.UUID,java.lang.String,byte[])>($r8, $r7, $r6);

        r2[i2] = $r5;

        i2 = i2 + 1;

        goto label2;

     label3:
        $r4 = new androidx.media3.common.DrmInitData;

        specialinvoke $r4.<androidx.media3.common.DrmInitData: void <init>(java.lang.String,androidx.media3.common.DrmInitData$SchemeData[])>(r0, r2);

        return $r4;
    }

    private static int getSelectionFlags(android.media.MediaFormat)
    {
        android.media.MediaFormat r0;
        int $i0, $i1, $i2, i4, i5, i6;
        byte b3;

        r0 := @parameter0: android.media.MediaFormat;

        b3 = 0;

        $i0 = staticinvoke <androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: int getFlag(android.media.MediaFormat,java.lang.String,int)>(r0, "is-autoselect", 4);

        i4 = b3 | $i0;

        $i1 = staticinvoke <androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: int getFlag(android.media.MediaFormat,java.lang.String,int)>(r0, "is-default", 1);

        i5 = i4 | $i1;

        $i2 = staticinvoke <androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: int getFlag(android.media.MediaFormat,java.lang.String,int)>(r0, "is-forced-subtitle", 2);

        i6 = i5 | $i2;

        return i6;
    }

    private static int getFlag(android.media.MediaFormat, java.lang.String, int)
    {
        android.media.MediaFormat r0;
        java.lang.String r1;
        int i0, $i1, $i2;

        r0 := @parameter0: android.media.MediaFormat;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $i1 = virtualinvoke r0.<android.media.MediaFormat: int getInteger(java.lang.String,int)>(r1, 0);

        if $i1 == 0 goto label1;

        $i2 = i0;

        goto label2;

     label1:
        $i2 = 0;

     label2:
        return $i2;
    }

    private static java.util.List getInitializationData(android.media.MediaFormat)
    {
        android.media.MediaFormat r0;
        java.util.ArrayList r1, $r3;
        java.nio.ByteBuffer r2;
        java.lang.StringBuilder $r4, $r5, $r6;
        int $i0, i1;
        java.lang.String $r7;
        byte[] $r8;

        r0 := @parameter0: android.media.MediaFormat;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r1 = $r3;

        i1 = 0;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("csd-");

        $i0 = i1;

        i1 = i1 + 1;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        r2 = virtualinvoke r0.<android.media.MediaFormat: java.nio.ByteBuffer getByteBuffer(java.lang.String)>($r7);

        if r2 != null goto label2;

        goto label3;

     label2:
        $r8 = staticinvoke <androidx.media3.common.util.MediaFormatUtil: byte[] getArray(java.nio.ByteBuffer)>(r2);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        goto label1;

     label3:
        return r1;
    }

    private static java.lang.String getMimeType(java.lang.String)
    {
        java.lang.String r0, r1, $r6;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        byte b1;

        r0 := @parameter0: java.lang.String;

        r1 = r0;

        b1 = -1;

        $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -2063506020: goto label03;
            case -1870824006: goto label09;
            case -1566427438: goto label07;
            case -900207883: goto label05;
            case -589864617: goto label11;
            case 52265814: goto label10;
            case 116768877: goto label02;
            case 376876796: goto label06;
            case 703268017: goto label12;
            case 768643067: goto label14;
            case 965962719: goto label01;
            case 1264380477: goto label13;
            case 1343957595: goto label04;
            case 2063134683: goto label08;
            default: goto label15;
        };

     label01:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("android.media.mediaparser.MatroskaParser");

        if $z3 == 0 goto label15;

        b1 = 0;

        goto label15;

     label02:
        $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("android.media.mediaparser.FragmentedMp4Parser");

        if $z7 == 0 goto label15;

        b1 = 1;

        goto label15;

     label03:
        $z13 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("android.media.mediaparser.Mp4Parser");

        if $z13 == 0 goto label15;

        b1 = 2;

        goto label15;

     label04:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("android.media.mediaparser.Mp3Parser");

        if $z1 == 0 goto label15;

        b1 = 3;

        goto label15;

     label05:
        $z10 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("android.media.mediaparser.AdtsParser");

        if $z10 == 0 goto label15;

        b1 = 4;

        goto label15;

     label06:
        $z6 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("android.media.mediaparser.Ac3Parser");

        if $z6 == 0 goto label15;

        b1 = 5;

        goto label15;

     label07:
        $z11 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("android.media.mediaparser.TsParser");

        if $z11 == 0 goto label15;

        b1 = 6;

        goto label15;

     label08:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("android.media.mediaparser.FlvParser");

        if $z0 == 0 goto label15;

        b1 = 7;

        goto label15;

     label09:
        $z12 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("android.media.mediaparser.OggParser");

        if $z12 == 0 goto label15;

        b1 = 8;

        goto label15;

     label10:
        $z8 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("android.media.mediaparser.PsParser");

        if $z8 == 0 goto label15;

        b1 = 9;

        goto label15;

     label11:
        $z9 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("android.media.mediaparser.WavParser");

        if $z9 == 0 goto label15;

        b1 = 10;

        goto label15;

     label12:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("android.media.mediaparser.AmrParser");

        if $z5 == 0 goto label15;

        b1 = 11;

        goto label15;

     label13:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("android.media.mediaparser.Ac4Parser");

        if $z2 == 0 goto label15;

        b1 = 12;

        goto label15;

     label14:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("android.media.mediaparser.FlacParser");

        if $z4 == 0 goto label15;

        b1 = 13;

     label15:
        tableswitch(b1)
        {
            case 0: goto label16;
            case 1: goto label17;
            case 2: goto label17;
            case 3: goto label18;
            case 4: goto label19;
            case 5: goto label20;
            case 6: goto label21;
            case 7: goto label22;
            case 8: goto label23;
            case 9: goto label24;
            case 10: goto label25;
            case 11: goto label26;
            case 12: goto label27;
            case 13: goto label28;
            default: goto label29;
        };

     label16:
        return "video/webm";

     label17:
        return "video/mp4";

     label18:
        return "audio/mpeg";

     label19:
        return "audio/mp4a-latm";

     label20:
        return "audio/ac3";

     label21:
        return "video/mp2t";

     label22:
        return "video/x-flv";

     label23:
        return "audio/ogg";

     label24:
        return "video/mp2p";

     label25:
        return "audio/raw";

     label26:
        return "audio/amr";

     label27:
        return "audio/ac4";

     label28:
        return "audio/flac";

     label29:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal parser name: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r2;
    }

    static void <clinit>()
    {
        android.media.MediaParser$SeekPoint $r0, $r1;
        android.util.Pair $r2;
        java.util.regex.Pattern $r3;

        $r1 = <android.media.MediaParser$SeekPoint: android.media.MediaParser$SeekPoint START>;

        $r0 = <android.media.MediaParser$SeekPoint: android.media.MediaParser$SeekPoint START>;

        $r2 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>($r1, $r0);

        <androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: android.util.Pair SEEK_POINT_PAIR_START> = $r2;

        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("pattern \\(encrypt: (\\d+), skip: (\\d+)\\)");

        <androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30: java.util.regex.Pattern REGEX_CRYPTO_INFO_PATTERN> = $r3;

        return;
    }

androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$1
androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$DataReaderAdapter
<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$DataReaderAdapter: android.media.MediaParser$InputReader input>
    private void <init>()
    {
        androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$DataReaderAdapter r0;

        r0 := @this: androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$DataReaderAdapter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$DataReaderAdapter r0;
        byte[] r1;
        int i0, i1, $i2;
        android.media.MediaParser$InputReader $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$DataReaderAdapter;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$DataReaderAdapter: android.media.MediaParser$InputReader input>;

        $r3 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r2);

        $r4 = (android.media.MediaParser$InputReader) $r3;

        $i2 = interfaceinvoke $r4.<android.media.MediaParser$InputReader: int read(byte[],int,int)>(r1, i0, i1);

        return $i2;
    }

    void <init>(androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$1)
    {
        androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$DataReaderAdapter r0;
        androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$1 r1;

        r0 := @this: androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$DataReaderAdapter;

        r1 := @parameter0: androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$1;

        specialinvoke r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$DataReaderAdapter: void <init>()>();

        return;
    }

androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$SeekMapAdapter
<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$SeekMapAdapter: android.media.MediaParser$SeekMap adaptedSeekMap>
    public void <init>(android.media.MediaParser$SeekMap)
    {
        androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$SeekMapAdapter r0;
        android.media.MediaParser$SeekMap r1;

        r0 := @this: androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$SeekMapAdapter;

        r1 := @parameter0: android.media.MediaParser$SeekMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$SeekMapAdapter: android.media.MediaParser$SeekMap adaptedSeekMap> = r1;

        return;
    }

    public boolean isSeekable()
    {
        androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$SeekMapAdapter r0;
        android.media.MediaParser$SeekMap $r1;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$SeekMapAdapter;

        $r1 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$SeekMapAdapter: android.media.MediaParser$SeekMap adaptedSeekMap>;

        $z0 = virtualinvoke $r1.<android.media.MediaParser$SeekMap: boolean isSeekable()>();

        return $z0;
    }

    public long getDurationUs()
    {
        androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$SeekMapAdapter r0;
        long l0, $l2;
        android.media.MediaParser$SeekMap $r1;
        byte $b1;

        r0 := @this: androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$SeekMapAdapter;

        $r1 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$SeekMapAdapter: android.media.MediaParser$SeekMap adaptedSeekMap>;

        l0 = virtualinvoke $r1.<android.media.MediaParser$SeekMap: long getDurationMicros()>();

        $b1 = l0 cmp -2147483648L;

        if $b1 == 0 goto label1;

        $l2 = l0;

        goto label2;

     label1:
        $l2 = -9223372036854775807L;

     label2:
        return $l2;
    }

    public androidx.media3.extractor.SeekMap$SeekPoints getSeekPoints(long)
    {
        androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$SeekMapAdapter r0;
        long l0;
        android.util.Pair r1;
        android.media.MediaParser$SeekMap $r2;
        java.lang.Object $r3, $r4, $r6, $r9, $r13;
        androidx.media3.extractor.SeekMap$SeekPoints $r5, $r12, r16;
        android.media.MediaParser$SeekPoint $r7, $r10, $r14;
        androidx.media3.extractor.SeekPoint $r8, $r11, $r15;

        r0 := @this: androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$SeekMapAdapter;

        l0 := @parameter0: long;

        $r2 = r0.<androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$SeekMapAdapter: android.media.MediaParser$SeekMap adaptedSeekMap>;

        r1 = virtualinvoke $r2.<android.media.MediaParser$SeekMap: android.util.Pair getSeekPoints(long)>(l0);

        $r4 = r1.<android.util.Pair: java.lang.Object first>;

        $r3 = r1.<android.util.Pair: java.lang.Object second>;

        if $r4 != $r3 goto label1;

        $r12 = new androidx.media3.extractor.SeekMap$SeekPoints;

        $r13 = r1.<android.util.Pair: java.lang.Object first>;

        $r14 = (android.media.MediaParser$SeekPoint) $r13;

        $r15 = staticinvoke <androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$SeekMapAdapter: androidx.media3.extractor.SeekPoint asExoPlayerSeekPoint(android.media.MediaParser$SeekPoint)>($r14);

        specialinvoke $r12.<androidx.media3.extractor.SeekMap$SeekPoints: void <init>(androidx.media3.extractor.SeekPoint)>($r15);

        r16 = $r12;

        goto label2;

     label1:
        $r5 = new androidx.media3.extractor.SeekMap$SeekPoints;

        $r6 = r1.<android.util.Pair: java.lang.Object first>;

        $r7 = (android.media.MediaParser$SeekPoint) $r6;

        $r8 = staticinvoke <androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$SeekMapAdapter: androidx.media3.extractor.SeekPoint asExoPlayerSeekPoint(android.media.MediaParser$SeekPoint)>($r7);

        $r9 = r1.<android.util.Pair: java.lang.Object second>;

        $r10 = (android.media.MediaParser$SeekPoint) $r9;

        $r11 = staticinvoke <androidx.media3.exoplayer.source.mediaparser.OutputConsumerAdapterV30$SeekMapAdapter: androidx.media3.extractor.SeekPoint asExoPlayerSeekPoint(android.media.MediaParser$SeekPoint)>($r10);

        specialinvoke $r5.<androidx.media3.extractor.SeekMap$SeekPoints: void <init>(androidx.media3.extractor.SeekPoint,androidx.media3.extractor.SeekPoint)>($r8, $r11);

        r16 = $r5;

     label2:
        return r16;
    }

    private static androidx.media3.extractor.SeekPoint asExoPlayerSeekPoint(android.media.MediaParser$SeekPoint)
    {
        android.media.MediaParser$SeekPoint r0;
        androidx.media3.extractor.SeekPoint $r1;
        long $l0, $l1;

        r0 := @parameter0: android.media.MediaParser$SeekPoint;

        $r1 = new androidx.media3.extractor.SeekPoint;

        $l1 = r0.<android.media.MediaParser$SeekPoint: long timeMicros>;

        $l0 = r0.<android.media.MediaParser$SeekPoint: long position>;

        specialinvoke $r1.<androidx.media3.extractor.SeekPoint: void <init>(long,long)>($l1, $l0);

        return $r1;
    }

