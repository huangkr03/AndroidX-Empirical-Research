kotlin.ranges.UIntRange
<kotlin.ranges.UIntRange: kotlin.ranges.UIntRange$Companion Companion>
<kotlin.ranges.UIntRange: kotlin.ranges.UIntRange EMPTY>
    static void <clinit>()
    {
        kotlin.ranges.UIntRange$Companion $r0;
        kotlin.ranges.UIntRange $r1;

        $r0 = new kotlin.ranges.UIntRange$Companion;

        specialinvoke $r0.<kotlin.ranges.UIntRange$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <kotlin.ranges.UIntRange: kotlin.ranges.UIntRange$Companion Companion> = $r0;

        $r1 = new kotlin.ranges.UIntRange;

        specialinvoke $r1.<kotlin.ranges.UIntRange: void <init>(int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(-1, 0, null);

        <kotlin.ranges.UIntRange: kotlin.ranges.UIntRange EMPTY> = $r1;

        return;
    }

    private void <init>(int, int)
    {
        kotlin.ranges.UIntRange $r0;
        int $i0, $i1;

        $r0 := @this: kotlin.ranges.UIntRange;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke $r0.<kotlin.ranges.UIntProgression: void <init>(int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>($i0, $i1, 1, null);

        return;
    }

    public void <init>(int, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        kotlin.ranges.UIntRange $r0;
        int $i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        $r0 := @this: kotlin.ranges.UIntRange;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke $r0.<kotlin.ranges.UIntRange: void <init>(int,int)>($i0, $i1);

        return;
    }

    public static final kotlin.ranges.UIntRange access$getEMPTY$cp()
    {
        kotlin.ranges.UIntRange r0;

        r0 = <kotlin.ranges.UIntRange: kotlin.ranges.UIntRange EMPTY>;

        return r0;
    }

    public volatile boolean contains(java.lang.Comparable)
    {
        kotlin.ranges.UIntRange $r0;
        java.lang.Comparable $r1;
        kotlin.UInt $r2;
        int $i0;
        boolean $z0;

        $r0 := @this: kotlin.ranges.UIntRange;

        $r1 := @parameter0: java.lang.Comparable;

        $r2 = (kotlin.UInt) $r1;

        $i0 = virtualinvoke $r2.<kotlin.UInt: int unbox-impl()>();

        $z0 = virtualinvoke $r0.<kotlin.ranges.UIntRange: boolean contains-WZ4Q5Ns(int)>($i0);

        return $z0;
    }

    public boolean contains-WZ4Q5Ns(int)
    {
        kotlin.ranges.UIntRange $r0;
        int $i0, $i1;

        $r0 := @this: kotlin.ranges.UIntRange;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke $r0.<kotlin.ranges.UIntRange: int getFirst-pVg5ArA()>();

        $i1 = staticinvoke <kotlin.UnsignedKt: int uintCompare(int,int)>($i1, $i0);

        if $i1 > 0 goto label1;

        $i1 = virtualinvoke $r0.<kotlin.ranges.UIntRange: int getLast-pVg5ArA()>();

        $i0 = staticinvoke <kotlin.UnsignedKt: int uintCompare(int,int)>($i0, $i1);

        if $i0 > 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        kotlin.ranges.UIntRange $r0, $r2;
        java.lang.Object $r1;
        boolean $z0;
        int $i0, $i1;

        $r0 := @this: kotlin.ranges.UIntRange;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof kotlin.ranges.UIntRange;

        if $z0 == 0 goto label3;

        $z0 = virtualinvoke $r0.<kotlin.ranges.UIntRange: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = (kotlin.ranges.UIntRange) $r1;

        $z0 = virtualinvoke $r2.<kotlin.ranges.UIntRange: boolean isEmpty()>();

        if $z0 != 0 goto label2;

     label1:
        $i0 = virtualinvoke $r0.<kotlin.ranges.UIntRange: int getFirst-pVg5ArA()>();

        $r2 = (kotlin.ranges.UIntRange) $r1;

        $i1 = virtualinvoke $r2.<kotlin.ranges.UIntRange: int getFirst-pVg5ArA()>();

        if $i0 != $i1 goto label3;

        $i0 = virtualinvoke $r0.<kotlin.ranges.UIntRange: int getLast-pVg5ArA()>();

        $r0 = (kotlin.ranges.UIntRange) $r1;

        $i1 = virtualinvoke $r0.<kotlin.ranges.UIntRange: int getLast-pVg5ArA()>();

        if $i0 != $i1 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public volatile java.lang.Comparable getEndInclusive()
    {
        kotlin.ranges.UIntRange $r0;
        int $i0;
        kotlin.UInt $r1;

        $r0 := @this: kotlin.ranges.UIntRange;

        $i0 = virtualinvoke $r0.<kotlin.ranges.UIntRange: int getEndInclusive-pVg5ArA()>();

        $r1 = staticinvoke <kotlin.UInt: kotlin.UInt box-impl(int)>($i0);

        return $r1;
    }

    public int getEndInclusive-pVg5ArA()
    {
        kotlin.ranges.UIntRange $r0;
        int $i0;

        $r0 := @this: kotlin.ranges.UIntRange;

        $i0 = virtualinvoke $r0.<kotlin.ranges.UIntRange: int getLast-pVg5ArA()>();

        return $i0;
    }

    public volatile java.lang.Comparable getStart()
    {
        kotlin.ranges.UIntRange $r0;
        int $i0;
        kotlin.UInt $r1;

        $r0 := @this: kotlin.ranges.UIntRange;

        $i0 = virtualinvoke $r0.<kotlin.ranges.UIntRange: int getStart-pVg5ArA()>();

        $r1 = staticinvoke <kotlin.UInt: kotlin.UInt box-impl(int)>($i0);

        return $r1;
    }

    public int getStart-pVg5ArA()
    {
        kotlin.ranges.UIntRange $r0;
        int $i0;

        $r0 := @this: kotlin.ranges.UIntRange;

        $i0 = virtualinvoke $r0.<kotlin.ranges.UIntRange: int getFirst-pVg5ArA()>();

        return $i0;
    }

    public int hashCode()
    {
        kotlin.ranges.UIntRange $r0;
        boolean $z0;
        int $i0, $i1;

        $r0 := @this: kotlin.ranges.UIntRange;

        $z0 = virtualinvoke $r0.<kotlin.ranges.UIntRange: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return -1;

     label1:
        $i0 = virtualinvoke $r0.<kotlin.ranges.UIntRange: int getFirst-pVg5ArA()>();

        $i0 = $i0 * 31;

        $i1 = virtualinvoke $r0.<kotlin.ranges.UIntRange: int getLast-pVg5ArA()>();

        $i0 = $i0 + $i1;

        return $i0;
    }

    public boolean isEmpty()
    {
        kotlin.ranges.UIntRange $r0;
        int $i0, $i1;

        $r0 := @this: kotlin.ranges.UIntRange;

        $i0 = virtualinvoke $r0.<kotlin.ranges.UIntRange: int getFirst-pVg5ArA()>();

        $i1 = virtualinvoke $r0.<kotlin.ranges.UIntRange: int getLast-pVg5ArA()>();

        $i0 = staticinvoke <kotlin.UnsignedKt: int uintCompare(int,int)>($i0, $i1);

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String toString()
    {
        kotlin.ranges.UIntRange $r0;
        java.lang.StringBuilder $r1;
        int $i0;
        java.lang.String $r2;

        $r0 := @this: kotlin.ranges.UIntRange;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $i0 = virtualinvoke $r0.<kotlin.ranges.UIntRange: int getFirst-pVg5ArA()>();

        $r2 = staticinvoke <kotlin.UInt: java.lang.String toString-impl(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("..");

        $i0 = virtualinvoke $r0.<kotlin.ranges.UIntRange: int getLast-pVg5ArA()>();

        $r2 = staticinvoke <kotlin.UInt: java.lang.String toString-impl(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

kotlin.ranges.UIntRange$Companion
    private void <init>()
    {
        kotlin.ranges.UIntRange$Companion $r0;

        $r0 := @this: kotlin.ranges.UIntRange$Companion;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        kotlin.ranges.UIntRange$Companion $r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        $r0 := @this: kotlin.ranges.UIntRange$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke $r0.<kotlin.ranges.UIntRange$Companion: void <init>()>();

        return;
    }

    public final kotlin.ranges.UIntRange getEMPTY()
    {
        kotlin.ranges.UIntRange$Companion $r0;
        kotlin.ranges.UIntRange $r1;

        $r0 := @this: kotlin.ranges.UIntRange$Companion;

        $r1 = staticinvoke <kotlin.ranges.UIntRange: kotlin.ranges.UIntRange access$getEMPTY$cp()>();

        return $r1;
    }

