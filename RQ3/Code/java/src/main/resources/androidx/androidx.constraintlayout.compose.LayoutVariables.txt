androidx.constraintlayout.compose.LayoutVariables
<androidx.constraintlayout.compose.LayoutVariables: java.util.HashMap margins>
<androidx.constraintlayout.compose.LayoutVariables: java.util.HashMap generators>
<androidx.constraintlayout.compose.LayoutVariables: java.util.HashMap arrayIds>
    public void <init>()
    {
        androidx.constraintlayout.compose.LayoutVariables r0;
        java.util.HashMap $r1, $r2, $r3;

        r0 := @this: androidx.constraintlayout.compose.LayoutVariables;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<androidx.constraintlayout.compose.LayoutVariables: java.util.HashMap margins> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<androidx.constraintlayout.compose.LayoutVariables: java.util.HashMap generators> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<androidx.constraintlayout.compose.LayoutVariables: java.util.HashMap arrayIds> = $r3;

        return;
    }

    public final void put(java.lang.String, int)
    {
        androidx.constraintlayout.compose.LayoutVariables r0;
        java.lang.String r1;
        int i0;
        java.util.Map r2;
        java.lang.Integer r3;
        boolean z0;
        java.util.HashMap $r4;

        r0 := @this: androidx.constraintlayout.compose.LayoutVariables;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elementName");

        $r4 = r0.<androidx.constraintlayout.compose.LayoutVariables: java.util.HashMap margins>;

        r2 = (java.util.Map) $r4;

        r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        z0 = 0;

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3);

        return;
    }

    public final void put(java.lang.String, float, float)
    {
        androidx.constraintlayout.compose.LayoutVariables r0;
        java.lang.String r1;
        float f0, f1;
        androidx.constraintlayout.compose.Generator r2, $r5;
        java.util.Map r3;
        boolean z0, $z1, $z2;
        java.util.HashMap $r4, $r6, $r8;
        java.lang.Object $r9;

        r0 := @this: androidx.constraintlayout.compose.LayoutVariables;

        r1 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elementName");

        $r4 = r0.<androidx.constraintlayout.compose.LayoutVariables: java.util.HashMap generators>;

        $z1 = virtualinvoke $r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z1 == 0 goto label1;

        $r8 = r0.<androidx.constraintlayout.compose.LayoutVariables: java.util.HashMap generators>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $z2 = $r9 instanceof androidx.constraintlayout.compose.OverrideValue;

        if $z2 == 0 goto label1;

        return;

     label1:
        $r5 = new androidx.constraintlayout.compose.Generator;

        specialinvoke $r5.<androidx.constraintlayout.compose.Generator: void <init>(float,float)>(f0, f1);

        r2 = $r5;

        $r6 = r0.<androidx.constraintlayout.compose.LayoutVariables: java.util.HashMap generators>;

        r3 = (java.util.Map) $r6;

        z0 = 0;

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public final void put(java.lang.String, float, float, float, java.lang.String, java.lang.String)
    {
        androidx.constraintlayout.compose.LayoutVariables r0;
        java.lang.String r1, r2, r3;
        float f0, f1, f2;
        androidx.constraintlayout.compose.FiniteGenerator r4, $r6;
        boolean z0, $z1, $z2, z3;
        java.util.HashMap $r5, $r7, $r9, $r11;
        java.lang.Object $r12;
        java.util.Map r13, r14;
        java.util.ArrayList r15;

        r0 := @this: androidx.constraintlayout.compose.LayoutVariables;

        r1 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        r2 := @parameter4: java.lang.String;

        r3 := @parameter5: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elementName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "prefix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "postfix");

        $r5 = r0.<androidx.constraintlayout.compose.LayoutVariables: java.util.HashMap generators>;

        $z1 = virtualinvoke $r5.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z1 == 0 goto label1;

        $r11 = r0.<androidx.constraintlayout.compose.LayoutVariables: java.util.HashMap generators>;

        $r12 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $z2 = $r12 instanceof androidx.constraintlayout.compose.OverrideValue;

        if $z2 == 0 goto label1;

        return;

     label1:
        $r6 = new androidx.constraintlayout.compose.FiniteGenerator;

        specialinvoke $r6.<androidx.constraintlayout.compose.FiniteGenerator: void <init>(float,float,float,java.lang.String,java.lang.String)>(f0, f1, f2, r2, r3);

        r4 = $r6;

        $r7 = r0.<androidx.constraintlayout.compose.LayoutVariables: java.util.HashMap generators>;

        r13 = (java.util.Map) $r7;

        z3 = 0;

        interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4);

        $r9 = r0.<androidx.constraintlayout.compose.LayoutVariables: java.util.HashMap arrayIds>;

        r14 = (java.util.Map) $r9;

        r15 = virtualinvoke r4.<androidx.constraintlayout.compose.FiniteGenerator: java.util.ArrayList array()>();

        z0 = 0;

        interfaceinvoke r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r15);

        return;
    }

    public final void putOverride(java.lang.String, float)
    {
        androidx.constraintlayout.compose.LayoutVariables r0;
        java.lang.String r1;
        float f0;
        androidx.constraintlayout.compose.OverrideValue r2, $r4;
        java.util.Map r3;
        boolean z0;
        java.util.HashMap $r5;

        r0 := @this: androidx.constraintlayout.compose.LayoutVariables;

        r1 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elementName");

        $r4 = new androidx.constraintlayout.compose.OverrideValue;

        specialinvoke $r4.<androidx.constraintlayout.compose.OverrideValue: void <init>(float)>(f0);

        r2 = $r4;

        $r5 = r0.<androidx.constraintlayout.compose.LayoutVariables: java.util.HashMap generators>;

        r3 = (java.util.Map) $r5;

        z0 = 0;

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public final float get(java.lang.Object)
    {
        androidx.constraintlayout.compose.LayoutVariables r0;
        java.lang.Object r1, $r8, $r10;
        java.lang.String r2;
        boolean $z0, $z1, $z2, $z3;
        androidx.constraintlayout.core.parser.CLNumber $r3;
        float $f0, $f1, $f2;
        androidx.constraintlayout.core.parser.CLString $r4;
        java.util.HashMap $r5, $r6, $r7, $r9;
        int $i0;
        androidx.constraintlayout.compose.GeneratedValue r11;
        java.lang.Integer r12;

        r0 := @this: androidx.constraintlayout.compose.LayoutVariables;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elementName");

        $z0 = r1 instanceof androidx.constraintlayout.core.parser.CLString;

        if $z0 == 0 goto label2;

        $r4 = (androidx.constraintlayout.core.parser.CLString) r1;

        r2 = virtualinvoke $r4.<androidx.constraintlayout.core.parser.CLString: java.lang.String content()>();

        $r5 = r0.<androidx.constraintlayout.compose.LayoutVariables: java.util.HashMap generators>;

        $z2 = virtualinvoke $r5.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r2);

        if $z2 == 0 goto label1;

        $r9 = r0.<androidx.constraintlayout.compose.LayoutVariables: java.util.HashMap generators>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r11 = (androidx.constraintlayout.compose.GeneratedValue) $r10;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r11);

        $f2 = interfaceinvoke r11.<androidx.constraintlayout.compose.GeneratedValue: float value()>();

        return $f2;

     label1:
        $r6 = r0.<androidx.constraintlayout.compose.LayoutVariables: java.util.HashMap margins>;

        $z3 = virtualinvoke $r6.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r2);

        if $z3 == 0 goto label3;

        $r7 = r0.<androidx.constraintlayout.compose.LayoutVariables: java.util.HashMap margins>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r12 = (java.lang.Integer) $r8;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r12);

        $i0 = virtualinvoke r12.<java.lang.Integer: int intValue()>();

        $f1 = (float) $i0;

        return $f1;

     label2:
        $z1 = r1 instanceof androidx.constraintlayout.core.parser.CLNumber;

        if $z1 == 0 goto label3;

        $r3 = (androidx.constraintlayout.core.parser.CLNumber) r1;

        $f0 = virtualinvoke $r3.<androidx.constraintlayout.core.parser.CLNumber: float getFloat()>();

        return $f0;

     label3:
        return 0.0F;
    }

    public final java.util.ArrayList getList(java.lang.String)
    {
        androidx.constraintlayout.compose.LayoutVariables r0;
        java.lang.String r1;
        java.util.HashMap $r2, $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.util.ArrayList $r5;

        r0 := @this: androidx.constraintlayout.compose.LayoutVariables;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elementName");

        $r2 = r0.<androidx.constraintlayout.compose.LayoutVariables: java.util.HashMap arrayIds>;

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.constraintlayout.compose.LayoutVariables: java.util.HashMap arrayIds>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (java.util.ArrayList) $r4;

        return $r5;

     label1:
        return null;
    }

    public final void put(java.lang.String, java.util.ArrayList)
    {
        androidx.constraintlayout.compose.LayoutVariables r0;
        java.lang.String r1;
        java.util.ArrayList r2;
        java.util.Map r3;
        boolean z0;
        java.util.HashMap $r4;

        r0 := @this: androidx.constraintlayout.compose.LayoutVariables;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.ArrayList;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elementName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "elements");

        $r4 = r0.<androidx.constraintlayout.compose.LayoutVariables: java.util.HashMap arrayIds>;

        r3 = (java.util.Map) $r4;

        z0 = 0;

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

