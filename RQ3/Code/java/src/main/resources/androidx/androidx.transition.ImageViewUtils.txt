androidx.transition.ImageViewUtils
<androidx.transition.ImageViewUtils: boolean sTryHiddenAnimateTransform>
<androidx.transition.ImageViewUtils: java.lang.reflect.Field sDrawMatrixField>
<androidx.transition.ImageViewUtils: boolean sDrawMatrixFieldFetched>
    static void animateTransform(android.widget.ImageView, android.graphics.Matrix)
    {
        android.widget.ImageView r0;
        android.graphics.Matrix r1, $r5, r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13;
        java.lang.reflect.Field $r2, $r3, $r6;
        java.lang.Object $r4;
        java.lang.Throwable $r7, r11;
        android.graphics.drawable.Drawable r8, r9;

        r0 := @parameter0: android.widget.ImageView;

        r1 := @parameter1: android.graphics.Matrix;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 29 goto label01;

        virtualinvoke r0.<android.widget.ImageView: void animateTransform(android.graphics.Matrix)>(r1);

        goto label10;

     label01:
        if r1 != null goto label03;

        r8 = virtualinvoke r0.<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>();

        if r8 == null goto label02;

        $i4 = virtualinvoke r0.<android.widget.ImageView: int getWidth()>();

        $i5 = virtualinvoke r0.<android.widget.ImageView: int getPaddingLeft()>();

        $i6 = $i4 - $i5;

        $i7 = virtualinvoke r0.<android.widget.ImageView: int getPaddingRight()>();

        i12 = $i6 - $i7;

        $i8 = virtualinvoke r0.<android.widget.ImageView: int getHeight()>();

        $i9 = virtualinvoke r0.<android.widget.ImageView: int getPaddingTop()>();

        $i10 = $i8 - $i9;

        $i11 = virtualinvoke r0.<android.widget.ImageView: int getPaddingBottom()>();

        i13 = $i10 - $i11;

        virtualinvoke r8.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, i12, i13);

        virtualinvoke r0.<android.widget.ImageView: void invalidate()>();

     label02:
        goto label10;

     label03:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 21 goto label04;

        staticinvoke <androidx.transition.ImageViewUtils: void hiddenAnimateTransform(android.widget.ImageView,android.graphics.Matrix)>(r0, r1);

        goto label10;

     label04:
        r9 = virtualinvoke r0.<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>();

        if r9 == null goto label10;

        $i2 = virtualinvoke r9.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i3 = virtualinvoke r9.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r9.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i2, $i3);

        r10 = null;

        staticinvoke <androidx.transition.ImageViewUtils: void fetchDrawMatrixField()>();

        $r2 = <androidx.transition.ImageViewUtils: java.lang.reflect.Field sDrawMatrixField>;

        if $r2 == null goto label08;

     label05:
        $r3 = <androidx.transition.ImageViewUtils: java.lang.reflect.Field sDrawMatrixField>;

        $r4 = virtualinvoke $r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        r10 = (android.graphics.Matrix) $r4;

        if r10 != null goto label06;

        $r5 = new android.graphics.Matrix;

        specialinvoke $r5.<android.graphics.Matrix: void <init>()>();

        r10 = $r5;

        $r6 = <androidx.transition.ImageViewUtils: java.lang.reflect.Field sDrawMatrixField>;

        virtualinvoke $r6.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r0, r10);

     label06:
        goto label08;

     label07:
        $r7 := @caughtexception;

        r11 = $r7;

     label08:
        if r10 == null goto label09;

        virtualinvoke r10.<android.graphics.Matrix: void set(android.graphics.Matrix)>(r1);

     label09:
        virtualinvoke r0.<android.widget.ImageView: void invalidate()>();

     label10:
        return;

        catch java.lang.IllegalAccessException from label05 to label06 with label07;
    }

    private static void hiddenAnimateTransform(android.widget.ImageView, android.graphics.Matrix)
    {
        android.widget.ImageView r0;
        android.graphics.Matrix r1;
        java.lang.Throwable r2, $r3;
        boolean $z0;

        r0 := @parameter0: android.widget.ImageView;

        r1 := @parameter1: android.graphics.Matrix;

        $z0 = <androidx.transition.ImageViewUtils: boolean sTryHiddenAnimateTransform>;

        if $z0 == 0 goto label4;

     label1:
        virtualinvoke r0.<android.widget.ImageView: void animateTransform(android.graphics.Matrix)>(r1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        <androidx.transition.ImageViewUtils: boolean sTryHiddenAnimateTransform> = 0;

     label4:
        return;

        catch java.lang.NoSuchMethodError from label1 to label2 with label3;
    }

    private static void fetchDrawMatrixField()
    {
        java.lang.Throwable r0, $r4;
        boolean $z0;
        java.lang.Class $r1;
        java.lang.reflect.Field $r2, $r3;

        $z0 = <androidx.transition.ImageViewUtils: boolean sDrawMatrixFieldFetched>;

        if $z0 != 0 goto label5;

     label1:
        $r1 = class "Landroid/widget/ImageView;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mDrawMatrix");

        <androidx.transition.ImageViewUtils: java.lang.reflect.Field sDrawMatrixField> = $r2;

        $r3 = <androidx.transition.ImageViewUtils: java.lang.reflect.Field sDrawMatrixField>;

        virtualinvoke $r3.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r0 = $r4;

     label4:
        <androidx.transition.ImageViewUtils: boolean sDrawMatrixFieldFetched> = 1;

     label5:
        return;

        catch java.lang.NoSuchFieldException from label1 to label2 with label3;
    }

    private void <init>()
    {
        androidx.transition.ImageViewUtils r0;

        r0 := @this: androidx.transition.ImageViewUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        <androidx.transition.ImageViewUtils: boolean sTryHiddenAnimateTransform> = 1;

        return;
    }

