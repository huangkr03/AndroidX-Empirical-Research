org.junit.internal.runners.statements.RunAfters
<org.junit.internal.runners.statements.RunAfters: java.util.List afters>
<org.junit.internal.runners.statements.RunAfters: org.junit.runners.model.Statement next>
<org.junit.internal.runners.statements.RunAfters: java.lang.Object target>
    public void <init>(org.junit.runners.model.Statement, java.util.List, java.lang.Object)
    {
        org.junit.internal.runners.statements.RunAfters $r0;
        org.junit.runners.model.Statement $r1;
        java.util.List $r2;
        java.lang.Object $r3;

        $r0 := @this: org.junit.internal.runners.statements.RunAfters;

        $r1 := @parameter0: org.junit.runners.model.Statement;

        $r2 := @parameter1: java.util.List;

        $r3 := @parameter2: java.lang.Object;

        specialinvoke $r0.<org.junit.runners.model.Statement: void <init>()>();

        $r0.<org.junit.internal.runners.statements.RunAfters: org.junit.runners.model.Statement next> = $r1;

        $r0.<org.junit.internal.runners.statements.RunAfters: java.util.List afters> = $r2;

        $r0.<org.junit.internal.runners.statements.RunAfters: java.lang.Object target> = $r3;

        return;
    }

    public void evaluate() throws java.lang.Throwable
    {
        org.junit.internal.runners.statements.RunAfters $r0;
        java.util.ArrayList $r1;
        org.junit.runners.model.Statement $r2;
        java.util.List $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        org.junit.runners.model.FrameworkMethod $r6;
        java.lang.Object[] $r7;
        java.lang.Throwable $r8, $r9, $r10, $r11, $r12;

        $r0 := @this: org.junit.internal.runners.statements.RunAfters;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = $r0.<org.junit.internal.runners.statements.RunAfters: org.junit.runners.model.Statement next>;

     label01:
        virtualinvoke $r2.<org.junit.runners.model.Statement: void evaluate()>();

     label02:
        $r3 = $r0.<org.junit.internal.runners.statements.RunAfters: java.util.List afters>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label20;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (org.junit.runners.model.FrameworkMethod) $r5;

        $r5 = $r0.<org.junit.internal.runners.statements.RunAfters: java.lang.Object target>;

        $r7 = newarray (java.lang.Object)[0];

     label04:
        virtualinvoke $r6.<org.junit.runners.model.FrameworkMethod: java.lang.Object invokeExplosively(java.lang.Object,java.lang.Object[])>($r5, $r7);

     label05:
        goto label03;

     label06:
        $r8 := @caughtexception;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r8);

        goto label03;

     label07:
        $r9 := @caughtexception;

     label08:
        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r9);

     label09:
        $r3 = $r0.<org.junit.internal.runners.statements.RunAfters: java.util.List afters>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label20;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (org.junit.runners.model.FrameworkMethod) $r5;

        $r5 = $r0.<org.junit.internal.runners.statements.RunAfters: java.lang.Object target>;

        $r7 = newarray (java.lang.Object)[0];

     label11:
        virtualinvoke $r6.<org.junit.runners.model.FrameworkMethod: java.lang.Object invokeExplosively(java.lang.Object,java.lang.Object[])>($r5, $r7);

     label12:
        goto label10;

     label13:
        $r10 := @caughtexception;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label10;

     label14:
        $r11 := @caughtexception;

        $r3 = $r0.<org.junit.internal.runners.statements.RunAfters: java.util.List afters>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label19;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (org.junit.runners.model.FrameworkMethod) $r5;

        $r5 = $r0.<org.junit.internal.runners.statements.RunAfters: java.lang.Object target>;

        $r7 = newarray (java.lang.Object)[0];

     label16:
        virtualinvoke $r6.<org.junit.runners.model.FrameworkMethod: java.lang.Object invokeExplosively(java.lang.Object,java.lang.Object[])>($r5, $r7);

     label17:
        goto label15;

     label18:
        $r12 := @caughtexception;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r12);

        goto label15;

     label19:
        throw $r11;

     label20:
        staticinvoke <org.junit.runners.model.MultipleFailureException: void assertEmpty(java.util.List)>($r1);

        return;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label16 to label17 with label18;
    }

