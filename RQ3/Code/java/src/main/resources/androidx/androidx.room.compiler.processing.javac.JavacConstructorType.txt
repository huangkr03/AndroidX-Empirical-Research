androidx.room.compiler.processing.javac.JavacConstructorType
<androidx.room.compiler.processing.javac.JavacConstructorType: androidx.room.compiler.processing.javac.JavacConstructorElement element>
    public void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv, androidx.room.compiler.processing.javac.JavacConstructorElement, javax.lang.model.type.ExecutableType)
    {
        androidx.room.compiler.processing.javac.JavacConstructorType r0;
        androidx.room.compiler.processing.javac.JavacProcessingEnv r1;
        androidx.room.compiler.processing.javac.JavacConstructorElement r2;
        javax.lang.model.type.ExecutableType r3;
        androidx.room.compiler.processing.javac.JavacExecutableElement $r4;

        r0 := @this: androidx.room.compiler.processing.javac.JavacConstructorType;

        r1 := @parameter0: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        r2 := @parameter1: androidx.room.compiler.processing.javac.JavacConstructorElement;

        r3 := @parameter2: javax.lang.model.type.ExecutableType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "element");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "executableType");

        $r4 = (androidx.room.compiler.processing.javac.JavacExecutableElement) r2;

        specialinvoke r0.<androidx.room.compiler.processing.javac.JavacExecutableType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,androidx.room.compiler.processing.javac.JavacExecutableElement,javax.lang.model.type.ExecutableType)>(r1, $r4, r3);

        r0.<androidx.room.compiler.processing.javac.JavacConstructorType: androidx.room.compiler.processing.javac.JavacConstructorElement element> = r2;

        return;
    }

    public androidx.room.compiler.processing.javac.JavacConstructorElement getElement()
    {
        androidx.room.compiler.processing.javac.JavacConstructorType r0;
        androidx.room.compiler.processing.javac.JavacConstructorElement $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacConstructorType;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacConstructorType: androidx.room.compiler.processing.javac.JavacConstructorElement element>;

        return $r1;
    }

    public volatile androidx.room.compiler.processing.javac.JavacExecutableElement getElement()
    {
        androidx.room.compiler.processing.javac.JavacConstructorType r0;
        androidx.room.compiler.processing.javac.JavacConstructorElement $r1;
        androidx.room.compiler.processing.javac.JavacExecutableElement $r2;

        r0 := @this: androidx.room.compiler.processing.javac.JavacConstructorType;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacConstructorType: androidx.room.compiler.processing.javac.JavacConstructorElement getElement()>();

        $r2 = (androidx.room.compiler.processing.javac.JavacExecutableElement) $r1;

        return $r2;
    }

