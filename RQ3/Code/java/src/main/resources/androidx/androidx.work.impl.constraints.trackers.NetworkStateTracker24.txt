androidx.work.impl.constraints.trackers.NetworkStateTracker24
<androidx.work.impl.constraints.trackers.NetworkStateTracker24: android.net.ConnectivityManager connectivityManager>
<androidx.work.impl.constraints.trackers.NetworkStateTracker24: androidx.work.impl.constraints.trackers.NetworkStateTracker24$networkCallback$1 networkCallback>
    public void <init>(android.content.Context, androidx.work.impl.utils.taskexecutor.TaskExecutor)
    {
        androidx.work.impl.constraints.trackers.NetworkStateTracker24 r0;
        android.content.Context r1, $r3;
        androidx.work.impl.utils.taskexecutor.TaskExecutor r2;
        java.lang.Object $r4;
        android.net.ConnectivityManager $r5;
        androidx.work.impl.constraints.trackers.NetworkStateTracker24$networkCallback$1 $r6;

        r0 := @this: androidx.work.impl.constraints.trackers.NetworkStateTracker24;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.work.impl.utils.taskexecutor.TaskExecutor;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "taskExecutor");

        specialinvoke r0.<androidx.work.impl.constraints.trackers.ConstraintTracker: void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)>(r1, r2);

        $r3 = virtualinvoke r0.<androidx.work.impl.constraints.trackers.NetworkStateTracker24: android.content.Context getAppContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r4, "null cannot be cast to non-null type android.net.ConnectivityManager");

        $r5 = (android.net.ConnectivityManager) $r4;

        r0.<androidx.work.impl.constraints.trackers.NetworkStateTracker24: android.net.ConnectivityManager connectivityManager> = $r5;

        $r6 = new androidx.work.impl.constraints.trackers.NetworkStateTracker24$networkCallback$1;

        specialinvoke $r6.<androidx.work.impl.constraints.trackers.NetworkStateTracker24$networkCallback$1: void <init>(androidx.work.impl.constraints.trackers.NetworkStateTracker24)>(r0);

        r0.<androidx.work.impl.constraints.trackers.NetworkStateTracker24: androidx.work.impl.constraints.trackers.NetworkStateTracker24$networkCallback$1 networkCallback> = $r6;

        return;
    }

    public androidx.work.impl.constraints.NetworkState getInitialState()
    {
        androidx.work.impl.constraints.trackers.NetworkStateTracker24 r0;
        android.net.ConnectivityManager $r1;
        androidx.work.impl.constraints.NetworkState $r2;

        r0 := @this: androidx.work.impl.constraints.trackers.NetworkStateTracker24;

        $r1 = r0.<androidx.work.impl.constraints.trackers.NetworkStateTracker24: android.net.ConnectivityManager connectivityManager>;

        $r2 = staticinvoke <androidx.work.impl.constraints.trackers.NetworkStateTrackerKt: androidx.work.impl.constraints.NetworkState getActiveNetworkState(android.net.ConnectivityManager)>($r1);

        return $r2;
    }

    public void startTracking()
    {
        androidx.work.impl.constraints.trackers.NetworkStateTracker24 r0;
        androidx.work.Logger $r1, $r7, $r11;
        java.lang.String $r2, $r8, $r12;
        androidx.work.impl.constraints.trackers.NetworkStateTracker24$networkCallback$1 $r3;
        android.net.ConnectivityManager$NetworkCallback $r4;
        android.net.ConnectivityManager $r5;
        java.lang.Throwable $r6, $r9, $r10, $r13, r14, r15;

        r0 := @this: androidx.work.impl.constraints.trackers.NetworkStateTracker24;

     label1:
        $r1 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r2 = staticinvoke <androidx.work.impl.constraints.trackers.NetworkStateTrackerKt: java.lang.String access$getTAG$p()>();

        virtualinvoke $r1.<androidx.work.Logger: void debug(java.lang.String,java.lang.String)>($r2, "Registering network callback");

        $r5 = r0.<androidx.work.impl.constraints.trackers.NetworkStateTracker24: android.net.ConnectivityManager connectivityManager>;

        $r3 = r0.<androidx.work.impl.constraints.trackers.NetworkStateTracker24: androidx.work.impl.constraints.trackers.NetworkStateTracker24$networkCallback$1 networkCallback>;

        $r4 = (android.net.ConnectivityManager$NetworkCallback) $r3;

        staticinvoke <androidx.work.impl.utils.NetworkApi24: void registerDefaultNetworkCallbackCompat(android.net.ConnectivityManager,android.net.ConnectivityManager$NetworkCallback)>($r5, $r4);

     label2:
        goto label5;

     label3:
        $r10 := @caughtexception;

        r14 = $r10;

        $r11 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r12 = staticinvoke <androidx.work.impl.constraints.trackers.NetworkStateTrackerKt: java.lang.String access$getTAG$p()>();

        $r13 = (java.lang.Throwable) r14;

        virtualinvoke $r11.<androidx.work.Logger: void error(java.lang.String,java.lang.String,java.lang.Throwable)>($r12, "Received exception while registering network callback", $r13);

        goto label5;

     label4:
        $r6 := @caughtexception;

        r15 = $r6;

        $r7 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r8 = staticinvoke <androidx.work.impl.constraints.trackers.NetworkStateTrackerKt: java.lang.String access$getTAG$p()>();

        $r9 = (java.lang.Throwable) r15;

        virtualinvoke $r7.<androidx.work.Logger: void error(java.lang.String,java.lang.String,java.lang.Throwable)>($r8, "Received exception while registering network callback", $r9);

     label5:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
        catch java.lang.SecurityException from label1 to label2 with label4;
    }

    public void stopTracking()
    {
        androidx.work.impl.constraints.trackers.NetworkStateTracker24 r0;
        androidx.work.Logger $r1, $r7, $r11;
        java.lang.String $r2, $r8, $r12;
        androidx.work.impl.constraints.trackers.NetworkStateTracker24$networkCallback$1 $r3;
        android.net.ConnectivityManager$NetworkCallback $r4;
        android.net.ConnectivityManager $r5;
        java.lang.Throwable $r6, $r9, $r10, $r13, r14, r15;

        r0 := @this: androidx.work.impl.constraints.trackers.NetworkStateTracker24;

     label1:
        $r1 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r2 = staticinvoke <androidx.work.impl.constraints.trackers.NetworkStateTrackerKt: java.lang.String access$getTAG$p()>();

        virtualinvoke $r1.<androidx.work.Logger: void debug(java.lang.String,java.lang.String)>($r2, "Unregistering network callback");

        $r5 = r0.<androidx.work.impl.constraints.trackers.NetworkStateTracker24: android.net.ConnectivityManager connectivityManager>;

        $r3 = r0.<androidx.work.impl.constraints.trackers.NetworkStateTracker24: androidx.work.impl.constraints.trackers.NetworkStateTracker24$networkCallback$1 networkCallback>;

        $r4 = (android.net.ConnectivityManager$NetworkCallback) $r3;

        staticinvoke <androidx.work.impl.utils.NetworkApi21: void unregisterNetworkCallbackCompat(android.net.ConnectivityManager,android.net.ConnectivityManager$NetworkCallback)>($r5, $r4);

     label2:
        goto label5;

     label3:
        $r10 := @caughtexception;

        r14 = $r10;

        $r11 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r12 = staticinvoke <androidx.work.impl.constraints.trackers.NetworkStateTrackerKt: java.lang.String access$getTAG$p()>();

        $r13 = (java.lang.Throwable) r14;

        virtualinvoke $r11.<androidx.work.Logger: void error(java.lang.String,java.lang.String,java.lang.Throwable)>($r12, "Received exception while unregistering network callback", $r13);

        goto label5;

     label4:
        $r6 := @caughtexception;

        r15 = $r6;

        $r7 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r8 = staticinvoke <androidx.work.impl.constraints.trackers.NetworkStateTrackerKt: java.lang.String access$getTAG$p()>();

        $r9 = (java.lang.Throwable) r15;

        virtualinvoke $r7.<androidx.work.Logger: void error(java.lang.String,java.lang.String,java.lang.Throwable)>($r8, "Received exception while unregistering network callback", $r9);

     label5:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
        catch java.lang.SecurityException from label1 to label2 with label4;
    }

    public volatile java.lang.Object getInitialState()
    {
        androidx.work.impl.constraints.trackers.NetworkStateTracker24 r0;
        androidx.work.impl.constraints.NetworkState $r1;

        r0 := @this: androidx.work.impl.constraints.trackers.NetworkStateTracker24;

        $r1 = virtualinvoke r0.<androidx.work.impl.constraints.trackers.NetworkStateTracker24: androidx.work.impl.constraints.NetworkState getInitialState()>();

        return $r1;
    }

    public static final android.net.ConnectivityManager access$getConnectivityManager$p(androidx.work.impl.constraints.trackers.NetworkStateTracker24)
    {
        androidx.work.impl.constraints.trackers.NetworkStateTracker24 $r0;
        android.net.ConnectivityManager $r1;

        $r0 := @parameter0: androidx.work.impl.constraints.trackers.NetworkStateTracker24;

        $r1 = $r0.<androidx.work.impl.constraints.trackers.NetworkStateTracker24: android.net.ConnectivityManager connectivityManager>;

        return $r1;
    }

androidx.work.impl.constraints.trackers.NetworkStateTracker24$networkCallback$1
<androidx.work.impl.constraints.trackers.NetworkStateTracker24$networkCallback$1: androidx.work.impl.constraints.trackers.NetworkStateTracker24 this$0>
    void <init>(androidx.work.impl.constraints.trackers.NetworkStateTracker24)
    {
        androidx.work.impl.constraints.trackers.NetworkStateTracker24$networkCallback$1 r0;
        androidx.work.impl.constraints.trackers.NetworkStateTracker24 $r1;

        r0 := @this: androidx.work.impl.constraints.trackers.NetworkStateTracker24$networkCallback$1;

        $r1 := @parameter0: androidx.work.impl.constraints.trackers.NetworkStateTracker24;

        r0.<androidx.work.impl.constraints.trackers.NetworkStateTracker24$networkCallback$1: androidx.work.impl.constraints.trackers.NetworkStateTracker24 this$0> = $r1;

        specialinvoke r0.<android.net.ConnectivityManager$NetworkCallback: void <init>()>();

        return;
    }

    public void onCapabilitiesChanged(android.net.Network, android.net.NetworkCapabilities)
    {
        androidx.work.impl.constraints.trackers.NetworkStateTracker24$networkCallback$1 r0;
        android.net.Network r1;
        android.net.NetworkCapabilities r2;
        androidx.work.Logger $r3;
        java.lang.String $r4, $r8;
        java.lang.StringBuilder $r5, $r6, $r7;
        androidx.work.impl.constraints.trackers.NetworkStateTracker24 $r9, $r10;
        android.net.ConnectivityManager $r11;
        androidx.work.impl.constraints.NetworkState $r12;

        r0 := @this: androidx.work.impl.constraints.trackers.NetworkStateTracker24$networkCallback$1;

        r1 := @parameter0: android.net.Network;

        r2 := @parameter1: android.net.NetworkCapabilities;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "network");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "capabilities");

        $r3 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r4 = staticinvoke <androidx.work.impl.constraints.trackers.NetworkStateTrackerKt: java.lang.String access$getTAG$p()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Network capabilities changed: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<androidx.work.Logger: void debug(java.lang.String,java.lang.String)>($r4, $r8);

        $r10 = r0.<androidx.work.impl.constraints.trackers.NetworkStateTracker24$networkCallback$1: androidx.work.impl.constraints.trackers.NetworkStateTracker24 this$0>;

        $r9 = r0.<androidx.work.impl.constraints.trackers.NetworkStateTracker24$networkCallback$1: androidx.work.impl.constraints.trackers.NetworkStateTracker24 this$0>;

        $r11 = staticinvoke <androidx.work.impl.constraints.trackers.NetworkStateTracker24: android.net.ConnectivityManager access$getConnectivityManager$p(androidx.work.impl.constraints.trackers.NetworkStateTracker24)>($r9);

        $r12 = staticinvoke <androidx.work.impl.constraints.trackers.NetworkStateTrackerKt: androidx.work.impl.constraints.NetworkState getActiveNetworkState(android.net.ConnectivityManager)>($r11);

        virtualinvoke $r10.<androidx.work.impl.constraints.trackers.NetworkStateTracker24: void setState(java.lang.Object)>($r12);

        return;
    }

    public void onLost(android.net.Network)
    {
        androidx.work.impl.constraints.trackers.NetworkStateTracker24$networkCallback$1 r0;
        android.net.Network r1;
        androidx.work.Logger $r2;
        java.lang.String $r3;
        androidx.work.impl.constraints.trackers.NetworkStateTracker24 $r4, $r5;
        android.net.ConnectivityManager $r6;
        androidx.work.impl.constraints.NetworkState $r7;

        r0 := @this: androidx.work.impl.constraints.trackers.NetworkStateTracker24$networkCallback$1;

        r1 := @parameter0: android.net.Network;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "network");

        $r2 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r3 = staticinvoke <androidx.work.impl.constraints.trackers.NetworkStateTrackerKt: java.lang.String access$getTAG$p()>();

        virtualinvoke $r2.<androidx.work.Logger: void debug(java.lang.String,java.lang.String)>($r3, "Network connection lost");

        $r5 = r0.<androidx.work.impl.constraints.trackers.NetworkStateTracker24$networkCallback$1: androidx.work.impl.constraints.trackers.NetworkStateTracker24 this$0>;

        $r4 = r0.<androidx.work.impl.constraints.trackers.NetworkStateTracker24$networkCallback$1: androidx.work.impl.constraints.trackers.NetworkStateTracker24 this$0>;

        $r6 = staticinvoke <androidx.work.impl.constraints.trackers.NetworkStateTracker24: android.net.ConnectivityManager access$getConnectivityManager$p(androidx.work.impl.constraints.trackers.NetworkStateTracker24)>($r4);

        $r7 = staticinvoke <androidx.work.impl.constraints.trackers.NetworkStateTrackerKt: androidx.work.impl.constraints.NetworkState getActiveNetworkState(android.net.ConnectivityManager)>($r6);

        virtualinvoke $r5.<androidx.work.impl.constraints.trackers.NetworkStateTracker24: void setState(java.lang.Object)>($r7);

        return;
    }

