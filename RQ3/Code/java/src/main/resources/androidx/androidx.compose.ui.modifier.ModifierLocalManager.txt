androidx.compose.ui.modifier.ModifierLocalManager
<androidx.compose.ui.modifier.ModifierLocalManager: androidx.compose.ui.node.Owner owner>
<androidx.compose.ui.modifier.ModifierLocalManager: androidx.compose.runtime.collection.MutableVector inserted>
<androidx.compose.ui.modifier.ModifierLocalManager: androidx.compose.runtime.collection.MutableVector updated>
<androidx.compose.ui.modifier.ModifierLocalManager: androidx.compose.runtime.collection.MutableVector removed>
<androidx.compose.ui.modifier.ModifierLocalManager: boolean invalidated>
    public void <init>(androidx.compose.ui.node.Owner)
    {
        androidx.compose.ui.modifier.ModifierLocalManager r0;
        androidx.compose.ui.node.Owner r1;
        androidx.compose.runtime.collection.MutableVector $r2, $r4, $r6;
        kotlin.Pair[] $r3, $r5, $r7;
        byte b0, b1, b2;

        r0 := @this: androidx.compose.ui.modifier.ModifierLocalManager;

        r1 := @parameter0: androidx.compose.ui.node.Owner;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "owner");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.modifier.ModifierLocalManager: androidx.compose.ui.node.Owner owner> = r1;

        b0 = 16;

        $r2 = new androidx.compose.runtime.collection.MutableVector;

        $r3 = newarray (kotlin.Pair)[b0];

        specialinvoke $r2.<androidx.compose.runtime.collection.MutableVector: void <init>(java.lang.Object[],int)>($r3, 0);

        r0.<androidx.compose.ui.modifier.ModifierLocalManager: androidx.compose.runtime.collection.MutableVector inserted> = $r2;

        b1 = 16;

        $r4 = new androidx.compose.runtime.collection.MutableVector;

        $r5 = newarray (kotlin.Pair)[b1];

        specialinvoke $r4.<androidx.compose.runtime.collection.MutableVector: void <init>(java.lang.Object[],int)>($r5, 0);

        r0.<androidx.compose.ui.modifier.ModifierLocalManager: androidx.compose.runtime.collection.MutableVector updated> = $r4;

        b2 = 16;

        $r6 = new androidx.compose.runtime.collection.MutableVector;

        $r7 = newarray (kotlin.Pair)[b2];

        specialinvoke $r6.<androidx.compose.runtime.collection.MutableVector: void <init>(java.lang.Object[],int)>($r7, 0);

        r0.<androidx.compose.ui.modifier.ModifierLocalManager: androidx.compose.runtime.collection.MutableVector removed> = $r6;

        return;
    }

    public final androidx.compose.ui.node.Owner getOwner()
    {
        androidx.compose.ui.modifier.ModifierLocalManager r0;
        androidx.compose.ui.node.Owner $r1;

        r0 := @this: androidx.compose.ui.modifier.ModifierLocalManager;

        $r1 = r0.<androidx.compose.ui.modifier.ModifierLocalManager: androidx.compose.ui.node.Owner owner>;

        return $r1;
    }

    public final void invalidate()
    {
        androidx.compose.ui.modifier.ModifierLocalManager r0;
        boolean $z0;
        androidx.compose.ui.modifier.ModifierLocalManager$invalidate$1 $r1;
        androidx.compose.ui.node.Owner $r2;
        kotlin.jvm.functions.Function0 $r3;

        r0 := @this: androidx.compose.ui.modifier.ModifierLocalManager;

        $z0 = r0.<androidx.compose.ui.modifier.ModifierLocalManager: boolean invalidated>;

        if $z0 != 0 goto label1;

        r0.<androidx.compose.ui.modifier.ModifierLocalManager: boolean invalidated> = 1;

        $r2 = r0.<androidx.compose.ui.modifier.ModifierLocalManager: androidx.compose.ui.node.Owner owner>;

        $r1 = new androidx.compose.ui.modifier.ModifierLocalManager$invalidate$1;

        specialinvoke $r1.<androidx.compose.ui.modifier.ModifierLocalManager$invalidate$1: void <init>(androidx.compose.ui.modifier.ModifierLocalManager)>(r0);

        $r3 = (kotlin.jvm.functions.Function0) $r1;

        interfaceinvoke $r2.<androidx.compose.ui.node.Owner: void registerOnEndApplyChangesListener(kotlin.jvm.functions.Function0)>($r3);

     label1:
        return;
    }

    public final void triggerUpdates()
    {
        androidx.compose.ui.modifier.ModifierLocalManager r0;
        java.util.HashSet r1, $r2;
        androidx.compose.runtime.collection.MutableVector $r3, $r4, $r5, r25, r30, r35;
        java.lang.Object[] $r6, $r12, $r18, r26, r31, r36;
        java.lang.Object $r7, $r8, $r9, $r13, $r14, $r15, $r19, $r20, $r21, r42;
        boolean $z0, $z1, $z2, $z10;
        java.util.Set $r10, $r16, $r24;
        androidx.compose.ui.Modifier$Node $r11, $r17, $r23;
        androidx.compose.ui.node.NodeChain $r22;
        int i0, i1, i2, i3, i4, i5;
        kotlin.Pair $r27, $r32, $r37;
        androidx.compose.ui.node.LayoutNode r28;
        androidx.compose.ui.modifier.ModifierLocal r29, r34, r39;
        androidx.compose.ui.node.BackwardsCompatNode r33, r38, r43;
        java.lang.Iterable r40;
        java.util.Iterator r41;

        r0 := @this: androidx.compose.ui.modifier.ModifierLocalManager;

        r0.<androidx.compose.ui.modifier.ModifierLocalManager: boolean invalidated> = 0;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r1 = $r2;

        r25 = r0.<androidx.compose.ui.modifier.ModifierLocalManager: androidx.compose.runtime.collection.MutableVector removed>;

        i0 = virtualinvoke r25.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if i0 <= 0 goto label03;

        i1 = 0;

        $r18 = virtualinvoke r25.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r18, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r26 = $r18;

     label01:
        $r19 = r26[i1];

        $r27 = (kotlin.Pair) $r19;

        $r20 = virtualinvoke $r27.<kotlin.Pair: java.lang.Object component1()>();

        r28 = (androidx.compose.ui.node.LayoutNode) $r20;

        $r21 = virtualinvoke $r27.<kotlin.Pair: java.lang.Object component2()>();

        r29 = (androidx.compose.ui.modifier.ModifierLocal) $r21;

        $z2 = virtualinvoke r28.<androidx.compose.ui.node.LayoutNode: boolean isAttached()>();

        if $z2 == 0 goto label02;

        $r22 = virtualinvoke r28.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.NodeChain getNodes$ui_release()>();

        $r23 = virtualinvoke $r22.<androidx.compose.ui.node.NodeChain: androidx.compose.ui.Modifier$Node getHead$ui_release()>();

        $r24 = (java.util.Set) r1;

        specialinvoke r0.<androidx.compose.ui.modifier.ModifierLocalManager: void invalidateConsumersOfNodeForKey(androidx.compose.ui.Modifier$Node,androidx.compose.ui.modifier.ModifierLocal,java.util.Set)>($r23, r29, $r24);

     label02:
        i1 = i1 + 1;

        if i1 < i0 goto label01;

     label03:
        $r3 = r0.<androidx.compose.ui.modifier.ModifierLocalManager: androidx.compose.runtime.collection.MutableVector removed>;

        virtualinvoke $r3.<androidx.compose.runtime.collection.MutableVector: void clear()>();

        r30 = r0.<androidx.compose.ui.modifier.ModifierLocalManager: androidx.compose.runtime.collection.MutableVector inserted>;

        i2 = virtualinvoke r30.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if i2 <= 0 goto label06;

        i3 = 0;

        $r12 = virtualinvoke r30.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r12, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r31 = $r12;

     label04:
        $r13 = r31[i3];

        $r32 = (kotlin.Pair) $r13;

        $r14 = virtualinvoke $r32.<kotlin.Pair: java.lang.Object component1()>();

        r33 = (androidx.compose.ui.node.BackwardsCompatNode) $r14;

        $r15 = virtualinvoke $r32.<kotlin.Pair: java.lang.Object component2()>();

        r34 = (androidx.compose.ui.modifier.ModifierLocal) $r15;

        $z1 = virtualinvoke r33.<androidx.compose.ui.node.BackwardsCompatNode: boolean isAttached()>();

        if $z1 == 0 goto label05;

        $r17 = (androidx.compose.ui.Modifier$Node) r33;

        $r16 = (java.util.Set) r1;

        specialinvoke r0.<androidx.compose.ui.modifier.ModifierLocalManager: void invalidateConsumersOfNodeForKey(androidx.compose.ui.Modifier$Node,androidx.compose.ui.modifier.ModifierLocal,java.util.Set)>($r17, r34, $r16);

     label05:
        i3 = i3 + 1;

        if i3 < i2 goto label04;

     label06:
        $r4 = r0.<androidx.compose.ui.modifier.ModifierLocalManager: androidx.compose.runtime.collection.MutableVector inserted>;

        virtualinvoke $r4.<androidx.compose.runtime.collection.MutableVector: void clear()>();

        r35 = r0.<androidx.compose.ui.modifier.ModifierLocalManager: androidx.compose.runtime.collection.MutableVector updated>;

        i4 = virtualinvoke r35.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if i4 <= 0 goto label09;

        i5 = 0;

        $r6 = virtualinvoke r35.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r6, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r36 = $r6;

     label07:
        $r7 = r36[i5];

        $r37 = (kotlin.Pair) $r7;

        $r8 = virtualinvoke $r37.<kotlin.Pair: java.lang.Object component1()>();

        r38 = (androidx.compose.ui.node.BackwardsCompatNode) $r8;

        $r9 = virtualinvoke $r37.<kotlin.Pair: java.lang.Object component2()>();

        r39 = (androidx.compose.ui.modifier.ModifierLocal) $r9;

        $z0 = virtualinvoke r38.<androidx.compose.ui.node.BackwardsCompatNode: boolean isAttached()>();

        if $z0 == 0 goto label08;

        $r11 = (androidx.compose.ui.Modifier$Node) r38;

        $r10 = (java.util.Set) r1;

        specialinvoke r0.<androidx.compose.ui.modifier.ModifierLocalManager: void invalidateConsumersOfNodeForKey(androidx.compose.ui.Modifier$Node,androidx.compose.ui.modifier.ModifierLocal,java.util.Set)>($r11, r39, $r10);

     label08:
        i5 = i5 + 1;

        if i5 < i4 goto label07;

     label09:
        $r5 = r0.<androidx.compose.ui.modifier.ModifierLocalManager: androidx.compose.runtime.collection.MutableVector updated>;

        virtualinvoke $r5.<androidx.compose.runtime.collection.MutableVector: void clear()>();

        r40 = (java.lang.Iterable) r1;

        r41 = interfaceinvoke r40.<java.lang.Iterable: java.util.Iterator iterator()>();

     label10:
        $z10 = interfaceinvoke r41.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label11;

        r42 = interfaceinvoke r41.<java.util.Iterator: java.lang.Object next()>();

        r43 = (androidx.compose.ui.node.BackwardsCompatNode) r42;

        virtualinvoke r43.<androidx.compose.ui.node.BackwardsCompatNode: void updateModifierLocalConsumer()>();

        goto label10;

     label11:
        return;
    }

    private final void invalidateConsumersOfNodeForKey(androidx.compose.ui.Modifier$Node, androidx.compose.ui.modifier.ModifierLocal, java.util.Set)
    {
        androidx.compose.ui.modifier.ModifierLocalManager r0;
        androidx.compose.ui.Modifier$Node r1, r6, $r9, $r12, $r18, $r22, r23, $r24;
        androidx.compose.ui.modifier.ModifierLocal r2;
        java.util.Set r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        androidx.compose.ui.node.DelegatableNode $r4;
        androidx.compose.runtime.collection.MutableVector r5, $r10;
        androidx.compose.ui.modifier.ModifierLocalNode r7;
        boolean z4, $z5, $z7, $z8, $z9, $z10, $z14, $z15, $z16;
        androidx.compose.ui.node.Nodes $r8;
        androidx.compose.ui.Modifier$Node[] $r11;
        java.lang.Object $r13;
        androidx.compose.ui.node.BackwardsCompatNode $r14, $r16;
        androidx.compose.ui.Modifier$Element $r15;
        java.util.HashSet $r17;
        java.lang.IllegalStateException $r19;
        java.lang.String $r20, $r21;
        byte b8;
        androidx.compose.ui.modifier.ModifierLocalMap $r25;

        r0 := @this: androidx.compose.ui.modifier.ModifierLocalManager;

        r1 := @parameter0: androidx.compose.ui.Modifier$Node;

        r2 := @parameter1: androidx.compose.ui.modifier.ModifierLocal;

        r3 := @parameter2: java.util.Set;

        $r8 = <androidx.compose.ui.node.Nodes: androidx.compose.ui.node.Nodes INSTANCE>;

        i0 = virtualinvoke $r8.<androidx.compose.ui.node.Nodes: int getLocals-OLwlOKw()>();

        $r4 = (androidx.compose.ui.node.DelegatableNode) r1;

        i1 = i0;

        $r9 = interfaceinvoke $r4.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        $z5 = virtualinvoke $r9.<androidx.compose.ui.Modifier$Node: boolean isAttached()>();

        if $z5 != 0 goto label01;

        $r21 = "Check failed.";

        $r19 = new java.lang.IllegalStateException;

        $r20 = virtualinvoke $r21.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r20);

        throw $r19;

     label01:
        b8 = 16;

        $r10 = new androidx.compose.runtime.collection.MutableVector;

        $r11 = newarray (androidx.compose.ui.Modifier$Node)[b8];

        specialinvoke $r10.<androidx.compose.runtime.collection.MutableVector: void <init>(java.lang.Object[],int)>($r11, 0);

        r5 = $r10;

        $r12 = interfaceinvoke $r4.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        $r22 = virtualinvoke $r12.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node getChild$ui_release()>();

        if $r22 != null goto label02;

        $r18 = interfaceinvoke $r4.<androidx.compose.ui.node.DelegatableNode: androidx.compose.ui.Modifier$Node getNode()>();

        staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: void access$addLayoutNodeChildren(androidx.compose.runtime.collection.MutableVector,androidx.compose.ui.Modifier$Node)>(r5, $r18);

        goto label03;

     label02:
        virtualinvoke r5.<androidx.compose.runtime.collection.MutableVector: boolean add(java.lang.Object)>($r22);

     label03:
        $z14 = virtualinvoke r5.<androidx.compose.runtime.collection.MutableVector: boolean isNotEmpty()>();

        if $z14 == 0 goto label11;

        $i2 = virtualinvoke r5.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        $i3 = $i2 - 1;

        $r13 = virtualinvoke r5.<androidx.compose.runtime.collection.MutableVector: java.lang.Object removeAt(int)>($i3);

        r23 = (androidx.compose.ui.Modifier$Node) $r13;

        $i4 = virtualinvoke r23.<androidx.compose.ui.Modifier$Node: int getAggregateChildKindSet$ui_release()>();

        $i5 = $i4 & i1;

        if $i5 == 0 goto label10;

        $r24 = r23;

     label04:
        if $r24 == null goto label10;

        $i6 = virtualinvoke $r24.<androidx.compose.ui.Modifier$Node: int getKindSet$ui_release()>();

        $i7 = $i6 & i1;

        if $i7 == 0 goto label09;

        r6 = $r24;

        $z7 = r6 instanceof androidx.compose.ui.modifier.ModifierLocalNode;

        if $z7 == 0 goto label07;

        r7 = (androidx.compose.ui.modifier.ModifierLocalNode) r6;

        $z8 = r7 instanceof androidx.compose.ui.node.BackwardsCompatNode;

        if $z8 == 0 goto label05;

        $r14 = (androidx.compose.ui.node.BackwardsCompatNode) r7;

        $r15 = virtualinvoke $r14.<androidx.compose.ui.node.BackwardsCompatNode: androidx.compose.ui.Modifier$Element getElement()>();

        $z9 = $r15 instanceof androidx.compose.ui.modifier.ModifierLocalConsumer;

        if $z9 == 0 goto label05;

        $r16 = (androidx.compose.ui.node.BackwardsCompatNode) r7;

        $r17 = virtualinvoke $r16.<androidx.compose.ui.node.BackwardsCompatNode: java.util.HashSet getReadValues()>();

        $z10 = virtualinvoke $r17.<java.util.HashSet: boolean contains(java.lang.Object)>(r2);

        if $z10 == 0 goto label05;

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r7);

     label05:
        $r25 = interfaceinvoke r7.<androidx.compose.ui.modifier.ModifierLocalNode: androidx.compose.ui.modifier.ModifierLocalMap getProvidedValues()>();

        $z15 = virtualinvoke $r25.<androidx.compose.ui.modifier.ModifierLocalMap: boolean contains$ui_release(androidx.compose.ui.modifier.ModifierLocal)>(r2);

        if $z15 != 0 goto label06;

        $z16 = 1;

        goto label08;

     label06:
        $z16 = 0;

        goto label08;

     label07:
        $z16 = 1;

     label08:
        z4 = $z16;

        if z4 == 0 goto label03;

     label09:
        $r24 = virtualinvoke $r24.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node getChild$ui_release()>();

        goto label04;

     label10:
        staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: void access$addLayoutNodeChildren(androidx.compose.runtime.collection.MutableVector,androidx.compose.ui.Modifier$Node)>(r5, r23);

        goto label03;

     label11:
        return;
    }

    public final void updatedProvider(androidx.compose.ui.node.BackwardsCompatNode, androidx.compose.ui.modifier.ModifierLocal)
    {
        androidx.compose.ui.modifier.ModifierLocalManager r0;
        androidx.compose.ui.node.BackwardsCompatNode r1;
        androidx.compose.ui.modifier.ModifierLocal r2;
        androidx.compose.runtime.collection.MutableVector r3;
        kotlin.Pair r4;

        r0 := @this: androidx.compose.ui.modifier.ModifierLocalManager;

        r1 := @parameter0: androidx.compose.ui.node.BackwardsCompatNode;

        r2 := @parameter1: androidx.compose.ui.modifier.ModifierLocal;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "node");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "key");

        r3 = r0.<androidx.compose.ui.modifier.ModifierLocalManager: androidx.compose.runtime.collection.MutableVector updated>;

        r4 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>(r1, r2);

        virtualinvoke r3.<androidx.compose.runtime.collection.MutableVector: boolean add(java.lang.Object)>(r4);

        virtualinvoke r0.<androidx.compose.ui.modifier.ModifierLocalManager: void invalidate()>();

        return;
    }

    public final void insertedProvider(androidx.compose.ui.node.BackwardsCompatNode, androidx.compose.ui.modifier.ModifierLocal)
    {
        androidx.compose.ui.modifier.ModifierLocalManager r0;
        androidx.compose.ui.node.BackwardsCompatNode r1;
        androidx.compose.ui.modifier.ModifierLocal r2;
        androidx.compose.runtime.collection.MutableVector r3;
        kotlin.Pair r4;

        r0 := @this: androidx.compose.ui.modifier.ModifierLocalManager;

        r1 := @parameter0: androidx.compose.ui.node.BackwardsCompatNode;

        r2 := @parameter1: androidx.compose.ui.modifier.ModifierLocal;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "node");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "key");

        r3 = r0.<androidx.compose.ui.modifier.ModifierLocalManager: androidx.compose.runtime.collection.MutableVector inserted>;

        r4 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>(r1, r2);

        virtualinvoke r3.<androidx.compose.runtime.collection.MutableVector: boolean add(java.lang.Object)>(r4);

        virtualinvoke r0.<androidx.compose.ui.modifier.ModifierLocalManager: void invalidate()>();

        return;
    }

    public final void removedProvider(androidx.compose.ui.node.BackwardsCompatNode, androidx.compose.ui.modifier.ModifierLocal)
    {
        androidx.compose.ui.modifier.ModifierLocalManager r0;
        androidx.compose.ui.node.BackwardsCompatNode r1;
        androidx.compose.ui.modifier.ModifierLocal r2;
        androidx.compose.runtime.collection.MutableVector r3;
        kotlin.Pair r4;
        androidx.compose.ui.node.DelegatableNode $r5;
        androidx.compose.ui.node.LayoutNode $r6;

        r0 := @this: androidx.compose.ui.modifier.ModifierLocalManager;

        r1 := @parameter0: androidx.compose.ui.node.BackwardsCompatNode;

        r2 := @parameter1: androidx.compose.ui.modifier.ModifierLocal;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "node");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "key");

        r3 = r0.<androidx.compose.ui.modifier.ModifierLocalManager: androidx.compose.runtime.collection.MutableVector removed>;

        $r5 = (androidx.compose.ui.node.DelegatableNode) r1;

        $r6 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.LayoutNode requireLayoutNode(androidx.compose.ui.node.DelegatableNode)>($r5);

        r4 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r6, r2);

        virtualinvoke r3.<androidx.compose.runtime.collection.MutableVector: boolean add(java.lang.Object)>(r4);

        virtualinvoke r0.<androidx.compose.ui.modifier.ModifierLocalManager: void invalidate()>();

        return;
    }

androidx.compose.ui.modifier.ModifierLocalManager$invalidate$1
<androidx.compose.ui.modifier.ModifierLocalManager$invalidate$1: androidx.compose.ui.modifier.ModifierLocalManager this$0>
    void <init>(androidx.compose.ui.modifier.ModifierLocalManager)
    {
        androidx.compose.ui.modifier.ModifierLocalManager$invalidate$1 r0;
        androidx.compose.ui.modifier.ModifierLocalManager $r1;

        r0 := @this: androidx.compose.ui.modifier.ModifierLocalManager$invalidate$1;

        $r1 := @parameter0: androidx.compose.ui.modifier.ModifierLocalManager;

        r0.<androidx.compose.ui.modifier.ModifierLocalManager$invalidate$1: androidx.compose.ui.modifier.ModifierLocalManager this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.compose.ui.modifier.ModifierLocalManager$invalidate$1 r0;
        androidx.compose.ui.modifier.ModifierLocalManager $r1;

        r0 := @this: androidx.compose.ui.modifier.ModifierLocalManager$invalidate$1;

        $r1 = r0.<androidx.compose.ui.modifier.ModifierLocalManager$invalidate$1: androidx.compose.ui.modifier.ModifierLocalManager this$0>;

        virtualinvoke $r1.<androidx.compose.ui.modifier.ModifierLocalManager: void triggerUpdates()>();

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.compose.ui.modifier.ModifierLocalManager$invalidate$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.compose.ui.modifier.ModifierLocalManager$invalidate$1;

        virtualinvoke r0.<androidx.compose.ui.modifier.ModifierLocalManager$invalidate$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

