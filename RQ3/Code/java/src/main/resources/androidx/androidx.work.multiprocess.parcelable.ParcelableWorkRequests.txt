androidx.work.multiprocess.parcelable.ParcelableWorkRequests
<androidx.work.multiprocess.parcelable.ParcelableWorkRequests: java.util.List mRequests>
<androidx.work.multiprocess.parcelable.ParcelableWorkRequests: android.os.Parcelable$Creator CREATOR>
    public void <init>(java.util.List)
    {
        androidx.work.multiprocess.parcelable.ParcelableWorkRequests r0;
        java.util.List r1;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableWorkRequests;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.work.multiprocess.parcelable.ParcelableWorkRequests: java.util.List mRequests> = r1;

        return;
    }

    protected void <init>(android.os.Parcel)
    {
        androidx.work.multiprocess.parcelable.ParcelableWorkRequests r0;
        android.os.Parcel r1;
        android.os.Parcelable[] r2, r3;
        int i0, $i1, i2;
        android.os.Parcelable r4;
        androidx.work.multiprocess.parcelable.ParcelableWorkRequest r5;
        java.lang.Class $r6;
        java.lang.ClassLoader $r7;
        java.util.ArrayList $r8;
        java.util.List $r9;
        androidx.work.WorkRequest $r10;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableWorkRequests;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r2 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable[] readParcelableArray(java.lang.ClassLoader)>($r7);

        $r8 = new java.util.ArrayList;

        $i1 = lengthof r2;

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i1);

        r0.<androidx.work.multiprocess.parcelable.ParcelableWorkRequests: java.util.List mRequests> = $r8;

        r3 = r2;

        i0 = lengthof r3;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        r4 = r3[i2];

        r5 = (androidx.work.multiprocess.parcelable.ParcelableWorkRequest) r4;

        $r9 = r0.<androidx.work.multiprocess.parcelable.ParcelableWorkRequests: java.util.List mRequests>;

        $r10 = virtualinvoke r5.<androidx.work.multiprocess.parcelable.ParcelableWorkRequest: androidx.work.WorkRequest getWorkRequest()>();

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r10);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public int describeContents()
    {
        androidx.work.multiprocess.parcelable.ParcelableWorkRequests r0;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableWorkRequests;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        androidx.work.multiprocess.parcelable.ParcelableWorkRequests r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, i3;
        androidx.work.multiprocess.parcelable.ParcelableWorkRequest[] r2;
        java.util.List $r3, $r4, $r6;
        androidx.work.multiprocess.parcelable.ParcelableWorkRequest $r5;
        java.lang.Object $r7;
        androidx.work.WorkRequest $r8;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableWorkRequests;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r3 = r0.<androidx.work.multiprocess.parcelable.ParcelableWorkRequests: java.util.List mRequests>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        r2 = newarray (androidx.work.multiprocess.parcelable.ParcelableWorkRequest)[$i1];

        i3 = 0;

     label1:
        $r4 = r0.<androidx.work.multiprocess.parcelable.ParcelableWorkRequests: java.util.List mRequests>;

        $i2 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i3 >= $i2 goto label2;

        $r5 = new androidx.work.multiprocess.parcelable.ParcelableWorkRequest;

        $r6 = r0.<androidx.work.multiprocess.parcelable.ParcelableWorkRequests: java.util.List mRequests>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i3);

        $r8 = (androidx.work.WorkRequest) $r7;

        specialinvoke $r5.<androidx.work.multiprocess.parcelable.ParcelableWorkRequest: void <init>(androidx.work.WorkRequest)>($r8);

        r2[i3] = $r5;

        i3 = i3 + 1;

        goto label1;

     label2:
        virtualinvoke r1.<android.os.Parcel: void writeParcelableArray(android.os.Parcelable[],int)>(r2, i0);

        return;
    }

    public java.util.List getRequests()
    {
        androidx.work.multiprocess.parcelable.ParcelableWorkRequests r0;
        java.util.List $r1;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableWorkRequests;

        $r1 = r0.<androidx.work.multiprocess.parcelable.ParcelableWorkRequests: java.util.List mRequests>;

        return $r1;
    }

    static void <clinit>()
    {
        androidx.work.multiprocess.parcelable.ParcelableWorkRequests$1 $r0;

        $r0 = new androidx.work.multiprocess.parcelable.ParcelableWorkRequests$1;

        specialinvoke $r0.<androidx.work.multiprocess.parcelable.ParcelableWorkRequests$1: void <init>()>();

        <androidx.work.multiprocess.parcelable.ParcelableWorkRequests: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

androidx.work.multiprocess.parcelable.ParcelableWorkRequests$1
    void <init>()
    {
        androidx.work.multiprocess.parcelable.ParcelableWorkRequests$1 r0;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableWorkRequests$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.work.multiprocess.parcelable.ParcelableWorkRequests createFromParcel(android.os.Parcel)
    {
        androidx.work.multiprocess.parcelable.ParcelableWorkRequests$1 r0;
        android.os.Parcel r1;
        androidx.work.multiprocess.parcelable.ParcelableWorkRequests $r2;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableWorkRequests$1;

        r1 := @parameter0: android.os.Parcel;

        $r2 = new androidx.work.multiprocess.parcelable.ParcelableWorkRequests;

        specialinvoke $r2.<androidx.work.multiprocess.parcelable.ParcelableWorkRequests: void <init>(android.os.Parcel)>(r1);

        return $r2;
    }

    public androidx.work.multiprocess.parcelable.ParcelableWorkRequests[] newArray(int)
    {
        androidx.work.multiprocess.parcelable.ParcelableWorkRequests$1 r0;
        int i0;
        androidx.work.multiprocess.parcelable.ParcelableWorkRequests[] $r1;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableWorkRequests$1;

        i0 := @parameter0: int;

        $r1 = newarray (androidx.work.multiprocess.parcelable.ParcelableWorkRequests)[i0];

        return $r1;
    }

    public volatile java.lang.Object[] newArray(int)
    {
        androidx.work.multiprocess.parcelable.ParcelableWorkRequests$1 r0;
        int i0;
        androidx.work.multiprocess.parcelable.ParcelableWorkRequests[] $r1;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableWorkRequests$1;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.work.multiprocess.parcelable.ParcelableWorkRequests$1: androidx.work.multiprocess.parcelable.ParcelableWorkRequests[] newArray(int)>(i0);

        return $r1;
    }

    public volatile java.lang.Object createFromParcel(android.os.Parcel)
    {
        androidx.work.multiprocess.parcelable.ParcelableWorkRequests$1 r0;
        android.os.Parcel r1;
        androidx.work.multiprocess.parcelable.ParcelableWorkRequests $r2;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableWorkRequests$1;

        r1 := @parameter0: android.os.Parcel;

        $r2 = virtualinvoke r0.<androidx.work.multiprocess.parcelable.ParcelableWorkRequests$1: androidx.work.multiprocess.parcelable.ParcelableWorkRequests createFromParcel(android.os.Parcel)>(r1);

        return $r2;
    }

