androidx.window.layout.WindowInfoTracker
<androidx.window.layout.WindowInfoTracker: androidx.window.layout.WindowInfoTracker$Companion Companion>
<androidx.window.layout.WindowInfoTracker: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)>
    public static androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)
    {
        android.content.Context r0;
        androidx.window.layout.WindowInfoTracker$Companion $r1;
        androidx.window.layout.WindowInfoTracker $r2;

        r0 := @parameter0: android.content.Context;

        $r1 = <androidx.window.layout.WindowInfoTracker: androidx.window.layout.WindowInfoTracker$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)>(r0);

        return $r2;
    }

    public static void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)
    {
        androidx.window.layout.WindowInfoTrackerDecorator r0;
        androidx.window.layout.WindowInfoTracker$Companion $r1;

        r0 := @parameter0: androidx.window.layout.WindowInfoTrackerDecorator;

        $r1 = <androidx.window.layout.WindowInfoTracker: androidx.window.layout.WindowInfoTracker$Companion Companion>;

        virtualinvoke $r1.<androidx.window.layout.WindowInfoTracker$Companion: void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)>(r0);

        return;
    }

    public static void reset()
    {
        androidx.window.layout.WindowInfoTracker$Companion $r0;

        $r0 = <androidx.window.layout.WindowInfoTracker: androidx.window.layout.WindowInfoTracker$Companion Companion>;

        virtualinvoke $r0.<androidx.window.layout.WindowInfoTracker$Companion: void reset()>();

        return;
    }

    static void <clinit>()
    {
        androidx.window.layout.WindowInfoTracker$Companion $r0;

        $r0 = <androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker$Companion $$INSTANCE>;

        <androidx.window.layout.WindowInfoTracker: androidx.window.layout.WindowInfoTracker$Companion Companion> = $r0;

        return;
    }

androidx.window.layout.WindowInfoTracker$Companion
<androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker$Companion $$INSTANCE>
<androidx.window.layout.WindowInfoTracker$Companion: boolean DEBUG>
<androidx.window.layout.WindowInfoTracker$Companion: java.lang.String TAG>
<androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTrackerDecorator decorator>
    private void <init>()
    {
        androidx.window.layout.WindowInfoTracker$Companion r0;

        r0 := @this: androidx.window.layout.WindowInfoTracker$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)
    {
        androidx.window.layout.WindowInfoTracker$Companion r0;
        android.content.Context r1;
        androidx.window.layout.WindowInfoTrackerImpl r2, $r3;
        androidx.window.layout.WindowMetricsCalculatorCompat $r4;
        androidx.window.layout.WindowMetricsCalculator $r5;
        androidx.window.layout.WindowBackend $r6;
        androidx.window.layout.WindowInfoTracker $r7, $r9;
        androidx.window.layout.WindowInfoTrackerDecorator $r8;

        r0 := @this: androidx.window.layout.WindowInfoTracker$Companion;

        r1 := @parameter0: android.content.Context;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        $r3 = new androidx.window.layout.WindowInfoTrackerImpl;

        $r4 = <androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetricsCalculatorCompat INSTANCE>;

        $r5 = (androidx.window.layout.WindowMetricsCalculator) $r4;

        $r6 = virtualinvoke r0.<androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowBackend windowBackend$window_release(android.content.Context)>(r1);

        specialinvoke $r3.<androidx.window.layout.WindowInfoTrackerImpl: void <init>(androidx.window.layout.WindowMetricsCalculator,androidx.window.layout.WindowBackend)>($r5, $r6);

        r2 = $r3;

        $r8 = <androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTrackerDecorator decorator>;

        $r7 = (androidx.window.layout.WindowInfoTracker) r2;

        $r9 = interfaceinvoke $r8.<androidx.window.layout.WindowInfoTrackerDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)>($r7);

        return $r9;
    }

    public final androidx.window.layout.WindowBackend windowBackend$window_release(android.content.Context)
    {
        androidx.window.layout.WindowInfoTracker$Companion r0;
        android.content.Context r1;
        androidx.window.layout.ExtensionWindowLayoutInfoBackend r2, $r11, r12;
        java.lang.Throwable r3, $r8;
        androidx.window.extensions.layout.WindowLayoutComponent r4, r10;
        androidx.window.layout.SafeWindowLayoutComponentProvider $r5;
        androidx.window.layout.SidecarWindowBackend$Companion $r6;
        androidx.window.layout.SidecarWindowBackend $r7;
        boolean $z1;
        java.lang.String $r9;
        androidx.window.layout.WindowBackend $r14;

        r0 := @this: androidx.window.layout.WindowInfoTracker$Companion;

        r1 := @parameter0: android.content.Context;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

     label1:
        $r5 = <androidx.window.layout.SafeWindowLayoutComponentProvider: androidx.window.layout.SafeWindowLayoutComponentProvider INSTANCE>;

        r10 = virtualinvoke $r5.<androidx.window.layout.SafeWindowLayoutComponentProvider: androidx.window.extensions.layout.WindowLayoutComponent getWindowLayoutComponent()>();

        if r10 != null goto label2;

        $r11 = null;

        goto label3;

     label2:
        r4 = r10;

        $r11 = new androidx.window.layout.ExtensionWindowLayoutInfoBackend;

        specialinvoke $r11.<androidx.window.layout.ExtensionWindowLayoutInfoBackend: void <init>(androidx.window.extensions.layout.WindowLayoutComponent)>(r4);

     label3:
        r12 = $r11;

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        r3 = $r8;

        $z1 = <androidx.window.layout.WindowInfoTracker$Companion: boolean DEBUG>;

        if $z1 == 0 goto label6;

        $r9 = <androidx.window.layout.WindowInfoTracker$Companion: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r9, "Failed to load WindowExtensions");

     label6:
        r12 = (androidx.window.layout.ExtensionWindowLayoutInfoBackend) null;

     label7:
        r2 = r12;

        if r2 != null goto label8;

        $r6 = <androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend$Companion Companion>;

        $r7 = virtualinvoke $r6.<androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.SidecarWindowBackend getInstance(android.content.Context)>(r1);

        $r14 = (androidx.window.layout.WindowBackend) $r7;

        goto label9;

     label8:
        $r14 = (androidx.window.layout.WindowBackend) r2;

     label9:
        return $r14;

        catch java.lang.Throwable from label1 to label4 with label5;
    }

    public final void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)
    {
        androidx.window.layout.WindowInfoTracker$Companion r0;
        androidx.window.layout.WindowInfoTrackerDecorator r1;

        r0 := @this: androidx.window.layout.WindowInfoTracker$Companion;

        r1 := @parameter0: androidx.window.layout.WindowInfoTrackerDecorator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "overridingDecorator");

        <androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTrackerDecorator decorator> = r1;

        return;
    }

    public final void reset()
    {
        androidx.window.layout.WindowInfoTracker$Companion r0;
        androidx.window.layout.EmptyDecorator $r1;
        androidx.window.layout.WindowInfoTrackerDecorator $r2;

        r0 := @this: androidx.window.layout.WindowInfoTracker$Companion;

        $r1 = <androidx.window.layout.EmptyDecorator: androidx.window.layout.EmptyDecorator INSTANCE>;

        $r2 = (androidx.window.layout.WindowInfoTrackerDecorator) $r1;

        <androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTrackerDecorator decorator> = $r2;

        return;
    }

    static void <clinit>()
    {
        androidx.window.layout.WindowInfoTracker$Companion $r0;
        kotlin.reflect.KClass $r1;
        java.lang.String $r2;
        androidx.window.layout.EmptyDecorator $r3;
        androidx.window.layout.WindowInfoTrackerDecorator $r4;

        $r0 = new androidx.window.layout.WindowInfoTracker$Companion;

        specialinvoke $r0.<androidx.window.layout.WindowInfoTracker$Companion: void <init>()>();

        <androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker$Companion $$INSTANCE> = $r0;

        $r1 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroidx/window/layout/WindowInfoTracker;");

        $r2 = interfaceinvoke $r1.<kotlin.reflect.KClass: java.lang.String getSimpleName()>();

        <androidx.window.layout.WindowInfoTracker$Companion: java.lang.String TAG> = $r2;

        $r3 = <androidx.window.layout.EmptyDecorator: androidx.window.layout.EmptyDecorator INSTANCE>;

        $r4 = (androidx.window.layout.WindowInfoTrackerDecorator) $r3;

        <androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTrackerDecorator decorator> = $r4;

        return;
    }

