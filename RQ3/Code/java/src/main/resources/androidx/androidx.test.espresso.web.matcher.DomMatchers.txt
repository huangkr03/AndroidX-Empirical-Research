androidx.test.espresso.web.matcher.DomMatchers
    public static org.hamcrest.Matcher containingTextInBody(java.lang.String)
    {
        java.lang.String r0;
        org.hamcrest.Matcher $r2, $r3, $r4;

        r0 := @parameter0: java.lang.String;

        staticinvoke <androidx.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher containsString(java.lang.String)>(r0);

        $r3 = staticinvoke <androidx.test.espresso.web.matcher.DomMatchers: org.hamcrest.Matcher withTextContent(org.hamcrest.Matcher)>($r2);

        $r4 = staticinvoke <androidx.test.espresso.web.matcher.DomMatchers: org.hamcrest.Matcher withBody(org.hamcrest.Matcher)>($r3);

        return $r4;
    }

    public static org.hamcrest.Matcher elementById(java.lang.String, org.hamcrest.Matcher)
    {
        java.lang.String r0;
        org.hamcrest.Matcher r1, r4;
        androidx.test.espresso.web.matcher.DomMatchers$ElementByIdMatcher r2, r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.hamcrest.Matcher;

        r3 = new androidx.test.espresso.web.matcher.DomMatchers$ElementByIdMatcher;

        r2 = r3;

        specialinvoke r3.<androidx.test.espresso.web.matcher.DomMatchers$ElementByIdMatcher: void <init>(java.lang.String,org.hamcrest.Matcher)>(r0, r1);

        r4 = (org.hamcrest.Matcher) r2;

        return r4;
    }

    public static org.hamcrest.Matcher elementByXPath(java.lang.String, org.hamcrest.Matcher)
    {
        java.lang.String r0;
        org.hamcrest.Matcher r1, r4;
        androidx.test.espresso.web.matcher.DomMatchers$ElementByXPathMatcher r2, r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.hamcrest.Matcher;

        r3 = new androidx.test.espresso.web.matcher.DomMatchers$ElementByXPathMatcher;

        r2 = r3;

        specialinvoke r3.<androidx.test.espresso.web.matcher.DomMatchers$ElementByXPathMatcher: void <init>(java.lang.String,org.hamcrest.Matcher)>(r0, r1);

        r4 = (org.hamcrest.Matcher) r2;

        return r4;
    }

    public static org.hamcrest.Matcher hasElementWithId(java.lang.String)
    {
        java.lang.String r0;
        androidx.test.espresso.web.matcher.DomMatchers$HasElementWithIdMatcher r1, r2;
        org.hamcrest.Matcher r3;

        r0 := @parameter0: java.lang.String;

        r2 = new androidx.test.espresso.web.matcher.DomMatchers$HasElementWithIdMatcher;

        r1 = r2;

        specialinvoke r2.<androidx.test.espresso.web.matcher.DomMatchers$HasElementWithIdMatcher: void <init>(java.lang.String)>(r0);

        r3 = (org.hamcrest.Matcher) r1;

        return r3;
    }

    public static org.hamcrest.Matcher hasElementWithXpath(java.lang.String)
    {
        java.lang.String r0;
        androidx.test.espresso.web.matcher.DomMatchers$HasElementWithXPathMatcher r1, r2;
        org.hamcrest.Matcher r3;

        r0 := @parameter0: java.lang.String;

        r2 = new androidx.test.espresso.web.matcher.DomMatchers$HasElementWithXPathMatcher;

        r1 = r2;

        specialinvoke r2.<androidx.test.espresso.web.matcher.DomMatchers$HasElementWithXPathMatcher: void <init>(java.lang.String)>(r0);

        r3 = (org.hamcrest.Matcher) r1;

        return r3;
    }

    public static org.hamcrest.Matcher withBody(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r3;
        androidx.test.espresso.web.matcher.DomMatchers$WithBodyMatcher r1, r2;

        r0 := @parameter0: org.hamcrest.Matcher;

        r2 = new androidx.test.espresso.web.matcher.DomMatchers$WithBodyMatcher;

        r1 = r2;

        specialinvoke r2.<androidx.test.espresso.web.matcher.DomMatchers$WithBodyMatcher: void <init>(org.hamcrest.Matcher)>(r0);

        r3 = (org.hamcrest.Matcher) r1;

        return r3;
    }

    public static org.hamcrest.Matcher withTextContent(java.lang.String)
    {
        java.lang.String r0;
        org.hamcrest.Matcher $r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r2 = staticinvoke <androidx.test.espresso.web.matcher.DomMatchers: org.hamcrest.Matcher withTextContent(org.hamcrest.Matcher)>($r1);

        return $r2;
    }

    public static org.hamcrest.Matcher withTextContent(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r3;
        androidx.test.espresso.web.matcher.DomMatchers$WithTextContentMatcher r1, r2;

        r0 := @parameter0: org.hamcrest.Matcher;

        r2 = new androidx.test.espresso.web.matcher.DomMatchers$WithTextContentMatcher;

        r1 = r2;

        specialinvoke r2.<androidx.test.espresso.web.matcher.DomMatchers$WithTextContentMatcher: void <init>(org.hamcrest.Matcher)>(r0);

        r3 = (org.hamcrest.Matcher) r1;

        return r3;
    }

    static volatile org.w3c.dom.NodeList '-$$Nest$smextractNodeListForXPath'(java.lang.String, org.w3c.dom.Document)
    {
        java.lang.String r0;
        org.w3c.dom.Document r1;
        org.w3c.dom.NodeList $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.w3c.dom.Document;

        $r2 = staticinvoke <androidx.test.espresso.web.matcher.DomMatchers: org.w3c.dom.NodeList extractNodeListForXPath(java.lang.String,org.w3c.dom.Document)>(r0, r1);

        return $r2;
    }

    private static org.w3c.dom.NodeList extractNodeListForXPath(java.lang.String, org.w3c.dom.Document)
    {
        org.w3c.dom.Document r0;
        javax.xml.xpath.XPathFactory $r1;
        javax.xml.xpath.XPath $r2;
        javax.xml.namespace.QName $r3;
        java.lang.Object $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;
        javax.xml.xpath.XPathExpression r7;
        org.w3c.dom.NodeList r8;

        r6 := @parameter0: java.lang.String;

        r0 := @parameter1: org.w3c.dom.Document;

     label1:
        $r1 = staticinvoke <javax.xml.xpath.XPathFactory: javax.xml.xpath.XPathFactory newInstance()>();

        $r2 = virtualinvoke $r1.<javax.xml.xpath.XPathFactory: javax.xml.xpath.XPath newXPath()>();

        r7 = interfaceinvoke $r2.<javax.xml.xpath.XPath: javax.xml.xpath.XPathExpression compile(java.lang.String)>(r6);

     label2:
        $r3 = <javax.xml.xpath.XPathConstants: javax.xml.namespace.QName NODESET>;

        $r4 = interfaceinvoke r7.<javax.xml.xpath.XPathExpression: java.lang.Object evaluate(java.lang.Object,javax.xml.namespace.QName)>(r0, $r3);

        r8 = (org.w3c.dom.NodeList) $r4;

     label3:
        return r8;

     label4:
        $r5 := @caughtexception;

        return null;

        catch javax.xml.xpath.XPathExpressionException from label1 to label2 with label4;
        catch javax.xml.xpath.XPathExpressionException from label2 to label3 with label4;
    }

    private void <init>()
    {
        androidx.test.espresso.web.matcher.DomMatchers r0;

        r0 := @this: androidx.test.espresso.web.matcher.DomMatchers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.test.espresso.web.matcher.DomMatchers$ElementByIdMatcher
<androidx.test.espresso.web.matcher.DomMatchers$ElementByIdMatcher: java.lang.String elementId>
<androidx.test.espresso.web.matcher.DomMatchers$ElementByIdMatcher: org.hamcrest.Matcher elementMatcher>
    void <init>(java.lang.String, org.hamcrest.Matcher)
    {
        androidx.test.espresso.web.matcher.DomMatchers$ElementByIdMatcher r0;
        java.lang.String r1, $r4;
        org.hamcrest.Matcher r2, $r6;
        java.lang.Object $r3, $r5;

        r0 := @this: androidx.test.espresso.web.matcher.DomMatchers$ElementByIdMatcher;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.hamcrest.Matcher;

        specialinvoke r0.<org.hamcrest.TypeSafeMatcher: void <init>()>();

        $r3 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (java.lang.String) $r3;

        r0.<androidx.test.espresso.web.matcher.DomMatchers$ElementByIdMatcher: java.lang.String elementId> = $r4;

        $r5 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r6 = (org.hamcrest.Matcher) $r5;

        r0.<androidx.test.espresso.web.matcher.DomMatchers$ElementByIdMatcher: org.hamcrest.Matcher elementMatcher> = $r6;

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        androidx.test.espresso.web.matcher.DomMatchers$ElementByIdMatcher r0;
        org.hamcrest.Description r1;
        java.lang.Object[] r2;
        java.lang.String $r3, $r4;
        org.hamcrest.Matcher $r6;

        r0 := @this: androidx.test.espresso.web.matcher.DomMatchers$ElementByIdMatcher;

        r1 := @parameter0: org.hamcrest.Description;

        r2 = newarray (java.lang.Object)[1];

        $r3 = r0.<androidx.test.espresso.web.matcher.DomMatchers$ElementByIdMatcher: java.lang.String elementId>;

        r2[0] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("element with id \'%s\' matches: ", r2);

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>($r4);

        $r6 = r0.<androidx.test.espresso.web.matcher.DomMatchers$ElementByIdMatcher: org.hamcrest.Matcher elementMatcher>;

        interfaceinvoke $r6.<org.hamcrest.Matcher: void describeTo(org.hamcrest.Description)>(r1);

        return;
    }

    public volatile boolean matchesSafely(java.lang.Object)
    {
        androidx.test.espresso.web.matcher.DomMatchers$ElementByIdMatcher r0;
        java.lang.Object r1;
        org.w3c.dom.Document $r2;
        boolean $z0;

        r0 := @this: androidx.test.espresso.web.matcher.DomMatchers$ElementByIdMatcher;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.w3c.dom.Document) r1;

        $z0 = virtualinvoke r0.<androidx.test.espresso.web.matcher.DomMatchers$ElementByIdMatcher: boolean matchesSafely(org.w3c.dom.Document)>($r2);

        return $z0;
    }

    public boolean matchesSafely(org.w3c.dom.Document)
    {
        androidx.test.espresso.web.matcher.DomMatchers$ElementByIdMatcher r0;
        org.w3c.dom.Document r1;
        java.lang.String $r2;
        org.hamcrest.Matcher $r3;
        org.w3c.dom.Element $r4;
        boolean $z0;

        r0 := @this: androidx.test.espresso.web.matcher.DomMatchers$ElementByIdMatcher;

        r1 := @parameter0: org.w3c.dom.Document;

        $r3 = r0.<androidx.test.espresso.web.matcher.DomMatchers$ElementByIdMatcher: org.hamcrest.Matcher elementMatcher>;

        $r2 = r0.<androidx.test.espresso.web.matcher.DomMatchers$ElementByIdMatcher: java.lang.String elementId>;

        $r4 = interfaceinvoke r1.<org.w3c.dom.Document: org.w3c.dom.Element getElementById(java.lang.String)>($r2);

        $z0 = interfaceinvoke $r3.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>($r4);

        return $z0;
    }

androidx.test.espresso.web.matcher.DomMatchers$ElementByXPathMatcher
<androidx.test.espresso.web.matcher.DomMatchers$ElementByXPathMatcher: java.lang.String xpath>
<androidx.test.espresso.web.matcher.DomMatchers$ElementByXPathMatcher: org.hamcrest.Matcher elementMatcher>
    void <init>(java.lang.String, org.hamcrest.Matcher)
    {
        androidx.test.espresso.web.matcher.DomMatchers$ElementByXPathMatcher r0;
        java.lang.String r1, $r4;
        org.hamcrest.Matcher r2, $r6;
        java.lang.Object $r3, $r5;

        r0 := @this: androidx.test.espresso.web.matcher.DomMatchers$ElementByXPathMatcher;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.hamcrest.Matcher;

        specialinvoke r0.<org.hamcrest.TypeSafeMatcher: void <init>()>();

        $r3 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (java.lang.String) $r3;

        r0.<androidx.test.espresso.web.matcher.DomMatchers$ElementByXPathMatcher: java.lang.String xpath> = $r4;

        $r5 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r6 = (org.hamcrest.Matcher) $r5;

        r0.<androidx.test.espresso.web.matcher.DomMatchers$ElementByXPathMatcher: org.hamcrest.Matcher elementMatcher> = $r6;

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        androidx.test.espresso.web.matcher.DomMatchers$ElementByXPathMatcher r0;
        org.hamcrest.Description r1;
        java.lang.Object[] r2;
        java.lang.String $r3, $r4;
        org.hamcrest.Matcher $r6;

        r0 := @this: androidx.test.espresso.web.matcher.DomMatchers$ElementByXPathMatcher;

        r1 := @parameter0: org.hamcrest.Description;

        r2 = newarray (java.lang.Object)[1];

        $r3 = r0.<androidx.test.espresso.web.matcher.DomMatchers$ElementByXPathMatcher: java.lang.String xpath>;

        r2[0] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("element with xpath \'%s\' matches: ", r2);

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>($r4);

        $r6 = r0.<androidx.test.espresso.web.matcher.DomMatchers$ElementByXPathMatcher: org.hamcrest.Matcher elementMatcher>;

        interfaceinvoke $r6.<org.hamcrest.Matcher: void describeTo(org.hamcrest.Description)>(r1);

        return;
    }

    public volatile boolean matchesSafely(java.lang.Object)
    {
        androidx.test.espresso.web.matcher.DomMatchers$ElementByXPathMatcher r0;
        java.lang.Object r1;
        org.w3c.dom.Document $r2;
        boolean $z0;

        r0 := @this: androidx.test.espresso.web.matcher.DomMatchers$ElementByXPathMatcher;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.w3c.dom.Document) r1;

        $z0 = virtualinvoke r0.<androidx.test.espresso.web.matcher.DomMatchers$ElementByXPathMatcher: boolean matchesSafely(org.w3c.dom.Document)>($r2);

        return $z0;
    }

    public boolean matchesSafely(org.w3c.dom.Document)
    {
        androidx.test.espresso.web.matcher.DomMatchers$ElementByXPathMatcher r0;
        java.lang.String $r1, $r4;
        int $i0, $i1;
        org.w3c.dom.Node $r2, r8;
        short $s2;
        org.hamcrest.Matcher $r3;
        boolean $z0;
        org.w3c.dom.Document r5;
        org.w3c.dom.NodeList r6;
        androidx.test.espresso.web.matcher.AmbiguousElementMatcherException r7, r10;
        org.w3c.dom.Element r9;
        java.lang.Throwable r11;

        r0 := @this: androidx.test.espresso.web.matcher.DomMatchers$ElementByXPathMatcher;

        r5 := @parameter0: org.w3c.dom.Document;

        $r1 = r0.<androidx.test.espresso.web.matcher.DomMatchers$ElementByXPathMatcher: java.lang.String xpath>;

        r6 = staticinvoke <androidx.test.espresso.web.matcher.DomMatchers: org.w3c.dom.NodeList '-$$Nest$smextractNodeListForXPath'(java.lang.String,org.w3c.dom.Document)>($r1, r5);

        if r6 == null goto label1;

        $i0 = interfaceinvoke r6.<org.w3c.dom.NodeList: int getLength()>();

        if $i0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $i1 = interfaceinvoke r6.<org.w3c.dom.NodeList: int getLength()>();

        if $i1 <= 1 goto label3;

        r10 = new androidx.test.espresso.web.matcher.AmbiguousElementMatcherException;

        r7 = r10;

        $r4 = r0.<androidx.test.espresso.web.matcher.DomMatchers$ElementByXPathMatcher: java.lang.String xpath>;

        specialinvoke r10.<androidx.test.espresso.web.matcher.AmbiguousElementMatcherException: void <init>(java.lang.String)>($r4);

        r11 = (java.lang.Throwable) r7;

        throw r11;

     label3:
        $r2 = interfaceinvoke r6.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        $s2 = interfaceinvoke $r2.<org.w3c.dom.Node: short getNodeType()>();

        if $s2 == 1 goto label4;

        return 0;

     label4:
        r8 = interfaceinvoke r6.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        r9 = (org.w3c.dom.Element) r8;

        $r3 = r0.<androidx.test.espresso.web.matcher.DomMatchers$ElementByXPathMatcher: org.hamcrest.Matcher elementMatcher>;

        $z0 = interfaceinvoke $r3.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>(r9);

        return $z0;
    }

androidx.test.espresso.web.matcher.DomMatchers$HasElementWithIdMatcher
<androidx.test.espresso.web.matcher.DomMatchers$HasElementWithIdMatcher: java.lang.String elementId>
    void <init>(java.lang.String)
    {
        androidx.test.espresso.web.matcher.DomMatchers$HasElementWithIdMatcher r0;
        java.lang.String r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.test.espresso.web.matcher.DomMatchers$HasElementWithIdMatcher;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.hamcrest.TypeSafeMatcher: void <init>()>();

        $r2 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (java.lang.String) $r2;

        r0.<androidx.test.espresso.web.matcher.DomMatchers$HasElementWithIdMatcher: java.lang.String elementId> = $r3;

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        org.hamcrest.Description r0;
        java.lang.StringBuilder r1, $r2, $r3;
        java.lang.String $r4, r7;
        androidx.test.espresso.web.matcher.DomMatchers$HasElementWithIdMatcher r6;

        r6 := @this: androidx.test.espresso.web.matcher.DomMatchers$HasElementWithIdMatcher;

        r0 := @parameter0: org.hamcrest.Description;

        r7 = r6.<androidx.test.espresso.web.matcher.DomMatchers$HasElementWithIdMatcher: java.lang.String elementId>;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("has element with id: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r0.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>($r4);

        return;
    }

    public volatile boolean matchesSafely(java.lang.Object)
    {
        androidx.test.espresso.web.matcher.DomMatchers$HasElementWithIdMatcher r0;
        java.lang.Object r1;
        org.w3c.dom.Document $r2;
        boolean $z0;

        r0 := @this: androidx.test.espresso.web.matcher.DomMatchers$HasElementWithIdMatcher;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.w3c.dom.Document) r1;

        $z0 = virtualinvoke r0.<androidx.test.espresso.web.matcher.DomMatchers$HasElementWithIdMatcher: boolean matchesSafely(org.w3c.dom.Document)>($r2);

        return $z0;
    }

    public boolean matchesSafely(org.w3c.dom.Document)
    {
        org.w3c.dom.Document r0;
        java.lang.String $r1;
        org.w3c.dom.Element $r2;
        androidx.test.espresso.web.matcher.DomMatchers$HasElementWithIdMatcher r3;
        boolean z0;

        r3 := @this: androidx.test.espresso.web.matcher.DomMatchers$HasElementWithIdMatcher;

        r0 := @parameter0: org.w3c.dom.Document;

        $r1 = r3.<androidx.test.espresso.web.matcher.DomMatchers$HasElementWithIdMatcher: java.lang.String elementId>;

        $r2 = interfaceinvoke r0.<org.w3c.dom.Document: org.w3c.dom.Element getElementById(java.lang.String)>($r1);

        if $r2 == null goto label2;

        z0 = 1;

     label1:
        return z0;

     label2:
        z0 = 0;

        goto label1;
    }

androidx.test.espresso.web.matcher.DomMatchers$HasElementWithXPathMatcher
<androidx.test.espresso.web.matcher.DomMatchers$HasElementWithXPathMatcher: java.lang.String xpath>
    void <init>(java.lang.String)
    {
        androidx.test.espresso.web.matcher.DomMatchers$HasElementWithXPathMatcher r0;
        java.lang.String r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.test.espresso.web.matcher.DomMatchers$HasElementWithXPathMatcher;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.hamcrest.TypeSafeMatcher: void <init>()>();

        $r2 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (java.lang.String) $r2;

        r0.<androidx.test.espresso.web.matcher.DomMatchers$HasElementWithXPathMatcher: java.lang.String xpath> = $r3;

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        org.hamcrest.Description r0;
        java.lang.StringBuilder r1, $r2, $r3;
        java.lang.String $r4, r7;
        androidx.test.espresso.web.matcher.DomMatchers$HasElementWithXPathMatcher r6;

        r6 := @this: androidx.test.espresso.web.matcher.DomMatchers$HasElementWithXPathMatcher;

        r0 := @parameter0: org.hamcrest.Description;

        r7 = r6.<androidx.test.espresso.web.matcher.DomMatchers$HasElementWithXPathMatcher: java.lang.String xpath>;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("has element with xpath: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r0.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>($r4);

        return;
    }

    public volatile boolean matchesSafely(java.lang.Object)
    {
        androidx.test.espresso.web.matcher.DomMatchers$HasElementWithXPathMatcher r0;
        java.lang.Object r1;
        org.w3c.dom.Document $r2;
        boolean $z0;

        r0 := @this: androidx.test.espresso.web.matcher.DomMatchers$HasElementWithXPathMatcher;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.w3c.dom.Document) r1;

        $z0 = virtualinvoke r0.<androidx.test.espresso.web.matcher.DomMatchers$HasElementWithXPathMatcher: boolean matchesSafely(org.w3c.dom.Document)>($r2);

        return $z0;
    }

    public boolean matchesSafely(org.w3c.dom.Document)
    {
        org.w3c.dom.Document r0;
        java.lang.String $r1;
        int $i0;
        androidx.test.espresso.web.matcher.DomMatchers$HasElementWithXPathMatcher r2;
        org.w3c.dom.NodeList r3;
        boolean z0;

        r2 := @this: androidx.test.espresso.web.matcher.DomMatchers$HasElementWithXPathMatcher;

        r0 := @parameter0: org.w3c.dom.Document;

        $r1 = r2.<androidx.test.espresso.web.matcher.DomMatchers$HasElementWithXPathMatcher: java.lang.String xpath>;

        r3 = staticinvoke <androidx.test.espresso.web.matcher.DomMatchers: org.w3c.dom.NodeList '-$$Nest$smextractNodeListForXPath'(java.lang.String,org.w3c.dom.Document)>($r1, r0);

        if r3 == null goto label2;

        $i0 = interfaceinvoke r3.<org.w3c.dom.NodeList: int getLength()>();

        if $i0 == 0 goto label2;

        z0 = 1;

     label1:
        return z0;

     label2:
        z0 = 0;

        goto label1;
    }

androidx.test.espresso.web.matcher.DomMatchers$WithBodyMatcher
<androidx.test.espresso.web.matcher.DomMatchers$WithBodyMatcher: org.hamcrest.Matcher bodyMatcher>
    void <init>(org.hamcrest.Matcher)
    {
        androidx.test.espresso.web.matcher.DomMatchers$WithBodyMatcher r0;
        org.hamcrest.Matcher r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.test.espresso.web.matcher.DomMatchers$WithBodyMatcher;

        r1 := @parameter0: org.hamcrest.Matcher;

        specialinvoke r0.<org.hamcrest.TypeSafeMatcher: void <init>()>();

        $r2 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "bodyMatcher cannot be null");

        $r3 = (org.hamcrest.Matcher) $r2;

        r0.<androidx.test.espresso.web.matcher.DomMatchers$WithBodyMatcher: org.hamcrest.Matcher bodyMatcher> = $r3;

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        androidx.test.espresso.web.matcher.DomMatchers$WithBodyMatcher r0;
        org.hamcrest.Description r1;
        org.hamcrest.Matcher $r3;

        r0 := @this: androidx.test.espresso.web.matcher.DomMatchers$WithBodyMatcher;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("with body: ");

        $r3 = r0.<androidx.test.espresso.web.matcher.DomMatchers$WithBodyMatcher: org.hamcrest.Matcher bodyMatcher>;

        interfaceinvoke $r3.<org.hamcrest.Matcher: void describeTo(org.hamcrest.Description)>(r1);

        return;
    }

    public volatile boolean matchesSafely(java.lang.Object)
    {
        androidx.test.espresso.web.matcher.DomMatchers$WithBodyMatcher r0;
        java.lang.Object r1;
        org.w3c.dom.Document $r2;
        boolean $z0;

        r0 := @this: androidx.test.espresso.web.matcher.DomMatchers$WithBodyMatcher;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.w3c.dom.Document) r1;

        $z0 = virtualinvoke r0.<androidx.test.espresso.web.matcher.DomMatchers$WithBodyMatcher: boolean matchesSafely(org.w3c.dom.Document)>($r2);

        return $z0;
    }

    public boolean matchesSafely(org.w3c.dom.Document)
    {
        androidx.test.espresso.web.matcher.DomMatchers$WithBodyMatcher r0;
        int $i0;
        org.hamcrest.Matcher $r1;
        org.w3c.dom.Node $r2;
        boolean $z0;
        org.w3c.dom.Document r3;
        org.w3c.dom.NodeList r4;

        r0 := @this: androidx.test.espresso.web.matcher.DomMatchers$WithBodyMatcher;

        r3 := @parameter0: org.w3c.dom.Document;

        r4 = interfaceinvoke r3.<org.w3c.dom.Document: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>("body");

        $i0 = interfaceinvoke r4.<org.w3c.dom.NodeList: int getLength()>();

        if $i0 != 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<androidx.test.espresso.web.matcher.DomMatchers$WithBodyMatcher: org.hamcrest.Matcher bodyMatcher>;

        $r2 = interfaceinvoke r4.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        $z0 = interfaceinvoke $r1.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>($r2);

        return $z0;
    }

androidx.test.espresso.web.matcher.DomMatchers$WithTextContentMatcher
<androidx.test.espresso.web.matcher.DomMatchers$WithTextContentMatcher: org.hamcrest.Matcher textContentMatcher>
    void <init>(org.hamcrest.Matcher)
    {
        androidx.test.espresso.web.matcher.DomMatchers$WithTextContentMatcher r0;
        org.hamcrest.Matcher r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.test.espresso.web.matcher.DomMatchers$WithTextContentMatcher;

        r1 := @parameter0: org.hamcrest.Matcher;

        specialinvoke r0.<org.hamcrest.TypeSafeMatcher: void <init>()>();

        $r2 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "textContentMatcher cannot be null");

        $r3 = (org.hamcrest.Matcher) $r2;

        r0.<androidx.test.espresso.web.matcher.DomMatchers$WithTextContentMatcher: org.hamcrest.Matcher textContentMatcher> = $r3;

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        androidx.test.espresso.web.matcher.DomMatchers$WithTextContentMatcher r0;
        org.hamcrest.Description r1;
        org.hamcrest.Matcher $r3;

        r0 := @this: androidx.test.espresso.web.matcher.DomMatchers$WithTextContentMatcher;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("with text content: ");

        $r3 = r0.<androidx.test.espresso.web.matcher.DomMatchers$WithTextContentMatcher: org.hamcrest.Matcher textContentMatcher>;

        interfaceinvoke $r3.<org.hamcrest.Matcher: void describeTo(org.hamcrest.Description)>(r1);

        return;
    }

    protected volatile boolean matchesSafely(java.lang.Object)
    {
        androidx.test.espresso.web.matcher.DomMatchers$WithTextContentMatcher r0;
        java.lang.Object r1;
        org.w3c.dom.Element $r2;
        boolean $z0;

        r0 := @this: androidx.test.espresso.web.matcher.DomMatchers$WithTextContentMatcher;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.w3c.dom.Element) r1;

        $z0 = virtualinvoke r0.<androidx.test.espresso.web.matcher.DomMatchers$WithTextContentMatcher: boolean matchesSafely(org.w3c.dom.Element)>($r2);

        return $z0;
    }

    protected boolean matchesSafely(org.w3c.dom.Element)
    {
        androidx.test.espresso.web.matcher.DomMatchers$WithTextContentMatcher r0;
        org.w3c.dom.Element r1;
        org.hamcrest.Matcher $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: androidx.test.espresso.web.matcher.DomMatchers$WithTextContentMatcher;

        r1 := @parameter0: org.w3c.dom.Element;

        $r2 = r0.<androidx.test.espresso.web.matcher.DomMatchers$WithTextContentMatcher: org.hamcrest.Matcher textContentMatcher>;

        $r3 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getTextContent()>();

        $z0 = interfaceinvoke $r2.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>($r3);

        return $z0;
    }

