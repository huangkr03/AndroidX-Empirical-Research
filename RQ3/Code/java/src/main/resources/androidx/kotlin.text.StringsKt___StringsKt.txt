kotlin.text.StringsKt___StringsKt
    public void <init>()
    {
        kotlin.text.StringsKt___StringsKt $r0;

        $r0 := @this: kotlin.text.StringsKt___StringsKt;

        specialinvoke $r0.<kotlin.text.StringsKt___StringsJvmKt: void <init>()>();

        return;
    }

    public static final boolean all(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label3;

        $c2 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return 1;
    }

    public static final boolean any(java.lang.CharSequence)
    {
        int $i0;
        java.lang.CharSequence $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.CharSequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z0 = $z0 ^ 1;

        return $z0;
    }

    public static final boolean any(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label3;

        $c2 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static final java.lang.Iterable asIterable(java.lang.CharSequence)
    {
        java.lang.CharSequence $r0;
        boolean $z0;
        int $i0;
        java.util.List $r1;
        kotlin.text.StringsKt___StringsKt$asIterable$$inlined$Iterable$1 r2;
        java.lang.Iterable r3;

        $r0 := @parameter0: java.lang.CharSequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0 instanceof java.lang.String;

        if $z0 == 0 goto label3;

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        r3 = (java.lang.Iterable) $r1;

        return r3;

     label3:
        r2 = new kotlin.text.StringsKt___StringsKt$asIterable$$inlined$Iterable$1;

        specialinvoke r2.<kotlin.text.StringsKt___StringsKt$asIterable$$inlined$Iterable$1: void <init>(java.lang.CharSequence)>($r0);

        return r2;
    }

    public static final kotlin.sequences.Sequence asSequence(java.lang.CharSequence)
    {
        java.lang.CharSequence $r0;
        boolean $z0;
        int $i0;
        kotlin.sequences.Sequence $r1;
        kotlin.text.StringsKt___StringsKt$asSequence$$inlined$Sequence$1 $r2;

        $r0 := @parameter0: java.lang.CharSequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0 instanceof java.lang.String;

        if $z0 == 0 goto label3;

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r1 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence emptySequence()>();

        return $r1;

     label3:
        $r2 = new kotlin.text.StringsKt___StringsKt$asSequence$$inlined$Sequence$1;

        specialinvoke $r2.<kotlin.text.StringsKt___StringsKt$asSequence$$inlined$Sequence$1: void <init>(java.lang.CharSequence)>($r0);

        return $r2;
    }

    public static final java.util.Map associate(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.LinkedHashMap $r2, r7;
        char $c2;
        java.lang.Character $r3;
        java.lang.Object $r4, $r6;
        kotlin.Pair $r5;
        java.util.Map r8;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        r7 = new java.util.LinkedHashMap;

        $r2 = r7;

        specialinvoke r7.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label2;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (kotlin.Pair) $r4;

        $r4 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getFirst()>();

        $r6 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getSecond()>();

        r8 = (java.util.Map) $r2;

        interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        r8 = (java.util.Map) $r2;

        return r8;
    }

    public static final java.util.Map associateBy(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.LinkedHashMap $r2, r5;
        char $c2;
        java.lang.Character $r3;
        java.lang.Object $r4;
        java.util.Map r6;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        r5 = new java.util.LinkedHashMap;

        $r2 = r5;

        specialinvoke r5.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label2;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        r6 = (java.util.Map) $r2;

        interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        r6 = (java.util.Map) $r2;

        return r6;
    }

    public static final java.util.Map associateBy(java.lang.CharSequence, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function1 $r1, $r2;
        int $i0, $i1;
        java.util.LinkedHashMap $r3, r7;
        char $c2;
        java.lang.Character $r4;
        java.lang.Object $r5, $r6;
        java.util.Map r8;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "valueTransform");

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        r7 = new java.util.LinkedHashMap;

        $r3 = r7;

        specialinvoke r7.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label2;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r6 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        r8 = (java.util.Map) $r3;

        interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        r8 = (java.util.Map) $r3;

        return r8;
    }

    public static final java.util.Map associateByTo(java.lang.CharSequence, java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label2;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Map associateByTo(java.lang.CharSequence, java.util.Map, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2, $r3;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r4;
        java.lang.Object $r5, $r6;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        $r3 := @parameter3: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "valueTransform");

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label2;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r6 = interfaceinvoke $r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Map associateTo(java.lang.CharSequence, java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r3;
        java.lang.Object $r4, $r6;
        kotlin.Pair $r5;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label2;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (kotlin.Pair) $r4;

        $r4 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getFirst()>();

        $r6 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getSecond()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Map associateWith(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.util.LinkedHashMap $r2, r6;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r3, $r4;
        java.lang.Object $r5;
        java.util.Map r7;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "valueSelector");

        r6 = new java.util.LinkedHashMap;

        $r2 = r6;

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtMost(int,int)>($i0, 128);

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        specialinvoke r6.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label2;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        r7 = (java.util.Map) $r2;

        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        r7 = (java.util.Map) $r2;

        return r7;
    }

    public static final java.util.Map associateWithTo(java.lang.CharSequence, java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r3, $r4;
        java.lang.Object $r5;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "valueSelector");

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label2;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.List chunked(java.lang.CharSequence, int)
    {
        int $i0;
        java.util.List $r0;
        java.lang.CharSequence $r1;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r0 = staticinvoke <kotlin.text.StringsKt: java.util.List windowed(java.lang.CharSequence,int,int,boolean)>($r1, $i0, $i0, 1);

        return $r0;
    }

    public static final java.util.List chunked(java.lang.CharSequence, int, kotlin.jvm.functions.Function1)
    {
        int $i0;
        kotlin.jvm.functions.Function1 $r0;
        java.util.List $r1;
        java.lang.CharSequence $r2;

        $r2 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $r0 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "transform");

        $r1 = staticinvoke <kotlin.text.StringsKt: java.util.List windowed(java.lang.CharSequence,int,int,boolean,kotlin.jvm.functions.Function1)>($r2, $i0, $i0, 1, $r0);

        return $r1;
    }

    public static final kotlin.sequences.Sequence chunkedSequence(java.lang.CharSequence, int)
    {
        int $i0;
        kotlin.sequences.Sequence $r0;
        java.lang.CharSequence $r1;
        kotlin.text.StringsKt___StringsKt$chunkedSequence$1 $r2;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r2 = <kotlin.text.StringsKt___StringsKt$chunkedSequence$1: kotlin.text.StringsKt___StringsKt$chunkedSequence$1 INSTANCE>;

        $r0 = staticinvoke <kotlin.text.StringsKt: kotlin.sequences.Sequence chunkedSequence(java.lang.CharSequence,int,kotlin.jvm.functions.Function1)>($r1, $i0, $r2);

        return $r0;
    }

    public static final kotlin.sequences.Sequence chunkedSequence(java.lang.CharSequence, int, kotlin.jvm.functions.Function1)
    {
        int $i0;
        kotlin.jvm.functions.Function1 $r0;
        kotlin.sequences.Sequence $r1;
        java.lang.CharSequence $r2;

        $r2 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $r0 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "transform");

        $r1 = staticinvoke <kotlin.text.StringsKt: kotlin.sequences.Sequence windowedSequence(java.lang.CharSequence,int,int,boolean,kotlin.jvm.functions.Function1)>($r2, $i0, $i0, 1, $r0);

        return $r1;
    }

    private static final int count(java.lang.CharSequence)
    {
        int $i0;
        java.lang.CharSequence $r0;

        $r0 := @parameter0: java.lang.CharSequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        return $i0;
    }

    public static final int count(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2;
        char $c3;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = 0;

        $i1 = 0;

     label1:
        $i2 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 >= $i2 goto label3;

        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $i1 = $i1 + 1;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return $i1;
    }

    public static final java.lang.CharSequence drop(java.lang.CharSequence, int)
    {
        java.lang.CharSequence $r0;
        int $i0, $i1;
        boolean $z0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        java.lang.IllegalArgumentException $r3;

        $r0 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtMost(int,int)>($i0, $i1);

        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $r0 = interfaceinvoke $r0.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>($i0, $i1);

        return $r0;

     label3:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested character count ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new java.lang.IllegalArgumentException;

        $r2 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r3;
    }

    public static final java.lang.String drop(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0, $i1;
        boolean $z0;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtMost(int,int)>($i0, $i1);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this as java.lang.String).substring(startIndex)");

        return $r0;

     label3:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested character count ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = new java.lang.IllegalArgumentException;

        $r0 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r2;
    }

    public static final java.lang.CharSequence dropLast(java.lang.CharSequence, int)
    {
        java.lang.CharSequence $r0;
        int $i0, $i1;
        boolean $z0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        java.lang.IllegalArgumentException $r3;

        $r0 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $i0 = $i1 - $i0;

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 0);

        $r0 = staticinvoke <kotlin.text.StringsKt: java.lang.CharSequence take(java.lang.CharSequence,int)>($r0, $i0);

        return $r0;

     label3:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested character count ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new java.lang.IllegalArgumentException;

        $r2 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r3;
    }

    public static final java.lang.String dropLast(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0, $i1;
        boolean $z0;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i1 - $i0;

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 0);

        $r0 = staticinvoke <kotlin.text.StringsKt: java.lang.String take(java.lang.String,int)>($r0, $i0);

        return $r0;

     label3:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested character count ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = new java.lang.IllegalArgumentException;

        $r0 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r2;
    }

    public static final java.lang.CharSequence dropLastWhile(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0;
        char $c1;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r0);

     label1:
        if $i0 < 0 goto label3;

        $c1 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $i0 = $i0 + 1;

        $r0 = interfaceinvoke $r0.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(0, $i0);

        return $r0;

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        return "";
    }

    public static final java.lang.String dropLastWhile(java.lang.String, kotlin.jvm.functions.Function1)
    {
        java.lang.String $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0;
        char $c1;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r0);

     label1:
        if $i0 < 0 goto label3;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $i0 = $i0 + 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this as java.lang.String\u2026ing(startIndex, endIndex)");

        return $r0;

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        return "";
    }

    public static final java.lang.CharSequence dropWhile(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i1);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $r0 = interfaceinvoke $r0.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>($i1, $i0);

        return $r0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return "";
    }

    public static final java.lang.String dropWhile(java.lang.String, kotlin.jvm.functions.Function1)
    {
        java.lang.String $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this as java.lang.String).substring(startIndex)");

        return $r0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return "";
    }

    private static final char elementAtOrElse(java.lang.CharSequence, int, kotlin.jvm.functions.Function1)
    {
        int $i0, $i1;
        kotlin.jvm.functions.Function1 $r0;
        java.lang.CharSequence $r1;
        char $c2;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Character $r4;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $r0 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "defaultValue");

        if $i0 < 0 goto label1;

        $i1 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r1);

        if $i0 > $i1 goto label1;

        $c2 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        return $c2;

     label1:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Character) $r3;

        $c2 = virtualinvoke $r4.<java.lang.Character: char charValue()>();

        return $c2;
    }

    private static final java.lang.Character elementAtOrNull(java.lang.CharSequence, int)
    {
        int $i0;
        java.lang.Character $r0;
        java.lang.CharSequence $r1;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r0 = staticinvoke <kotlin.text.StringsKt: java.lang.Character getOrNull(java.lang.CharSequence,int)>($r1, $i0);

        return $r0;
    }

    public static final java.lang.CharSequence filter(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.StringBuilder $r2;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i1);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        interfaceinvoke $r2.<java.lang.Appendable: java.lang.Appendable append(char)>($c2);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r2;
    }

    public static final java.lang.String filter(java.lang.String, kotlin.jvm.functions.Function1)
    {
        java.lang.String $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.StringBuilder $r2;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i1);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        interfaceinvoke $r2.<java.lang.Appendable: java.lang.Appendable append(char)>($c2);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "filterTo(StringBuilder(), predicate).toString()");

        return $r0;
    }

    public static final java.lang.CharSequence filterIndexed(java.lang.CharSequence, kotlin.jvm.functions.Function2)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r2;
        char $c3;
        java.lang.Integer $r3;
        java.lang.Character $r4;
        java.lang.Object $r5;
        java.lang.Boolean $r6;
        boolean $z0;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $i1 = 0;

        $i2 = 0;

     label1:
        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i1 >= $i0 goto label3;

        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i1);

        $i0 = $i2 + 1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        interfaceinvoke $r2.<java.lang.Appendable: java.lang.Appendable append(char)>($c3);

     label2:
        $i1 = $i1 + 1;

        $i2 = $i0;

        goto label1;

     label3:
        return $r2;
    }

    public static final java.lang.String filterIndexed(java.lang.String, kotlin.jvm.functions.Function2)
    {
        int $i0, $i1, $i2;
        java.lang.String $r0;
        kotlin.jvm.functions.Function2 $r1;
        java.lang.StringBuilder $r2;
        char $c3;
        java.lang.Integer $r3;
        java.lang.Character $r4;
        java.lang.Object $r5;
        java.lang.Boolean $r6;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $i1 = 0;

        $i2 = 0;

     label1:
        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i1 >= $i0 goto label3;

        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i1);

        $i0 = $i2 + 1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        interfaceinvoke $r2.<java.lang.Appendable: java.lang.Appendable append(char)>($c3);

     label2:
        $i1 = $i1 + 1;

        $i2 = $i0;

        goto label1;

     label3:
        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "filterIndexedTo(StringBu\u2026(), predicate).toString()");

        return $r0;
    }

    public static final java.lang.Appendable filterIndexedTo(java.lang.CharSequence, java.lang.Appendable, kotlin.jvm.functions.Function2)
    {
        java.lang.CharSequence $r0;
        java.lang.Appendable $r1;
        kotlin.jvm.functions.Function2 $r2;
        int $i0, $i1, $i2;
        char $c3;
        java.lang.Integer $r3;
        java.lang.Character $r4;
        java.lang.Object $r5;
        java.lang.Boolean $r6;
        boolean $z0;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: java.lang.Appendable;

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "predicate");

        $i1 = 0;

        $i2 = 0;

     label1:
        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i1 >= $i0 goto label3;

        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i1);

        $i0 = $i2 + 1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(char)>($c3);

     label2:
        $i1 = $i1 + 1;

        $i2 = $i0;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.lang.CharSequence filterNot(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.StringBuilder $r2;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label3;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        interfaceinvoke $r2.<java.lang.Appendable: java.lang.Appendable append(char)>($c2);

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return $r2;
    }

    public static final java.lang.String filterNot(java.lang.String, kotlin.jvm.functions.Function1)
    {
        java.lang.String $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.StringBuilder $r2;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label3;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        interfaceinvoke $r2.<java.lang.Appendable: java.lang.Appendable append(char)>($c2);

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "filterNotTo(StringBuilder(), predicate).toString()");

        return $r0;
    }

    public static final java.lang.Appendable filterNotTo(java.lang.CharSequence, java.lang.Appendable, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        java.lang.Appendable $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: java.lang.Appendable;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "predicate");

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label3;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(char)>($c2);

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.lang.Appendable filterTo(java.lang.CharSequence, java.lang.Appendable, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        java.lang.Appendable $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: java.lang.Appendable;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "predicate");

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i1);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(char)>($c2);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    private static final java.lang.Character find(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label3;

        $c2 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        return $r2;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return null;
    }

    private static final java.lang.Character findLast(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int $i0, $i1;
        java.lang.CharSequence $r1;
        char $c2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $i1 = $i0 + -1;

        if $i1 < 0 goto label4;

     label1:
        $i0 = $i1 + -1;

        $c2 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i1);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        return $r2;

     label2:
        if $i0 >= 0 goto label3;

        goto label4;

     label3:
        $i1 = $i0;

        goto label1;

     label4:
        return null;
    }

    public static final char first(java.lang.CharSequence)
    {
        java.lang.CharSequence $r0;
        int $i0;
        boolean $z0;
        char $c1;
        java.util.NoSuchElementException $r1;

        $r0 := @parameter0: java.lang.CharSequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $c1 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>(0);

        return $c1;

     label3:
        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Char sequence is empty.");

        throw $r1;
    }

    public static final char first(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;
        java.util.NoSuchElementException $r5;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label3;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $c2;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Char sequence contains no character matching the predicate.");

        goto label4;

     label4:
        throw $r5;
    }

    private static final java.lang.Object firstNotNullOf(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r2;
        java.lang.Object $r3, $r4;
        java.util.NoSuchElementException $r5;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label2;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = $r3;

        if $r3 != null goto label3;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r4 = null;

     label3:
        if $r4 == null goto label4;

        return $r4;

     label4:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>(java.lang.String)>("No element of the char sequence was transformed to a non-null value.");

        goto label5;

     label5:
        throw $r5;
    }

    private static final java.lang.Object firstNotNullOfOrNull(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r2;
        java.lang.Object $r3;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "transform");

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label3;

        $c2 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        if $r3 == null goto label2;

        return $r3;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return null;
    }

    public static final java.lang.Character firstOrNull(java.lang.CharSequence)
    {
        java.lang.CharSequence $r0;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.Character $r1;

        $r0 := @parameter0: java.lang.CharSequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $c1 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>(0);

        $r1 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        return $r1;
    }

    public static final java.lang.Character firstOrNull(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label3;

        $c2 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        return $r2;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return null;
    }

    public static final java.util.List flatMap(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.util.ArrayList $r2, r6;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r3;
        java.lang.Object $r4;
        java.lang.Iterable $r5;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label2;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Iterable) $r4;

        r7 = (java.util.Collection) $r2;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r7, $r5);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r2;

        return r8;
    }

    private static final java.util.List flatMapIndexedIterable(java.lang.CharSequence, kotlin.jvm.functions.Function2)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2;
        java.util.ArrayList $r2, r7;
        char $c3;
        java.lang.Integer $r3;
        java.lang.Character $r4;
        java.lang.Object $r5;
        java.lang.Iterable $r6;
        java.util.Collection r8;
        java.util.List r9;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r7 = new java.util.ArrayList;

        $r2 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $i1 = 0;

        $i2 = 0;

     label1:
        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i1 >= $i0 goto label2;

        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i1);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = (java.lang.Iterable) $r5;

        r8 = (java.util.Collection) $r2;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r8, $r6);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        r9 = (java.util.List) $r2;

        return r9;
    }

    private static final java.util.Collection flatMapIndexedIterableTo(java.lang.CharSequence, java.util.Collection, kotlin.jvm.functions.Function2)
    {
        java.lang.CharSequence $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function2 $r2;
        int $i0, $i1, $i2;
        char $c3;
        java.lang.Integer $r3;
        java.lang.Character $r4;
        java.lang.Object $r5;
        java.lang.Iterable $r6;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i1 = 0;

        $i2 = 0;

     label1:
        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i1 >= $i0 goto label2;

        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i1);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = (java.lang.Iterable) $r5;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>($r1, $r6);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Collection flatMapTo(java.lang.CharSequence, java.util.Collection, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r3;
        java.lang.Object $r4;
        java.lang.Iterable $r5;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label2;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Iterable) $r4;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>($r1, $r5);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.lang.Object fold(java.lang.CharSequence, java.lang.Object, kotlin.jvm.functions.Function2)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function2 $r1;
        java.lang.Object $r2;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r3;

        $r0 := @parameter0: java.lang.CharSequence;

        $r2 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label2;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object foldIndexed(java.lang.CharSequence, java.lang.Object, kotlin.jvm.functions.Function3)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function3 $r1;
        int $i0, $i1, $i2;
        java.lang.Object $r2;
        char $c3;
        java.lang.Integer $r3;
        java.lang.Character $r4;

        $r0 := @parameter0: java.lang.CharSequence;

        $r2 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i1 = 0;

        $i2 = 0;

     label1:
        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i1 >= $i0 goto label2;

        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i1);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r3, $r2, $r4);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object foldRight(java.lang.CharSequence, java.lang.Object, kotlin.jvm.functions.Function2)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function2 $r1;
        java.lang.Object $r2;
        int $i0;
        char $c1;
        java.lang.Character $r3;

        $r0 := @parameter0: java.lang.CharSequence;

        $r2 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r0);

     label1:
        if $i0 < 0 goto label2;

        $c1 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r2);

        $i0 = $i0 + -1;

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object foldRightIndexed(java.lang.CharSequence, java.lang.Object, kotlin.jvm.functions.Function3)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function3 $r1;
        java.lang.Object $r2;
        int $i0;
        java.lang.Integer $r3;
        char $c1;
        java.lang.Character $r4;

        $r0 := @parameter0: java.lang.CharSequence;

        $r2 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r0);

     label1:
        if $i0 < 0 goto label2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $c1 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r3, $r4, $r2);

        $i0 = $i0 + -1;

        goto label1;

     label2:
        return $r2;
    }

    public static final void forEach(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r2;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label2;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    public static final void forEachIndexed(java.lang.CharSequence, kotlin.jvm.functions.Function2)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2;
        char $c3;
        java.lang.Integer $r2;
        java.lang.Character $r3;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i1 = 0;

        $i2 = 0;

     label1:
        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i1 >= $i0 goto label2;

        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i1);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return;
    }

    private static final char getOrElse(java.lang.CharSequence, int, kotlin.jvm.functions.Function1)
    {
        int $i0, $i1;
        kotlin.jvm.functions.Function1 $r0;
        java.lang.CharSequence $r1;
        char $c2;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Character $r4;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $r0 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "defaultValue");

        if $i0 < 0 goto label1;

        $i1 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r1);

        if $i0 > $i1 goto label1;

        $c2 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        return $c2;

     label1:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Character) $r3;

        $c2 = virtualinvoke $r4.<java.lang.Character: char charValue()>();

        return $c2;
    }

    public static final java.lang.Character getOrNull(java.lang.CharSequence, int)
    {
        int $i0, $i1;
        java.lang.CharSequence $r0;
        char $c2;
        java.lang.Character $r1;

        $r0 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $i1 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r0);

        if $i0 > $i1 goto label1;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r1 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        return $r1;

     label1:
        return null;
    }

    public static final java.util.Map groupBy(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.util.LinkedHashMap $r2, r8;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r3;
        java.lang.Object $r4, $r5, $r6;
        java.util.List $r7;
        java.util.ArrayList r9;
        java.util.Map r10;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        r8 = new java.util.LinkedHashMap;

        $r2 = r8;

        specialinvoke r8.<java.util.LinkedHashMap: void <init>()>();

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label3;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        r10 = (java.util.Map) $r2;

        $r5 = interfaceinvoke r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = $r5;

        if $r5 != null goto label2;

        r9 = new java.util.ArrayList;

        $r6 = r9;

        specialinvoke r9.<java.util.ArrayList: void <init>()>();

        r10 = (java.util.Map) $r2;

        interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

     label2:
        $r7 = (java.util.List) $r6;

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r3);

        $i0 = $i0 + 1;

        goto label1;

     label3:
        r10 = (java.util.Map) $r2;

        return r10;
    }

    public static final java.util.Map groupBy(java.lang.CharSequence, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function1 $r1, $r2;
        java.util.LinkedHashMap $r3, r9;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r4;
        java.lang.Object $r5, $r6, $r7;
        java.util.List $r8;
        java.util.ArrayList r10;
        java.util.Map r11;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "valueTransform");

        r9 = new java.util.LinkedHashMap;

        $r3 = r9;

        specialinvoke r9.<java.util.LinkedHashMap: void <init>()>();

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label3;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        r11 = (java.util.Map) $r3;

        $r6 = interfaceinvoke r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = $r6;

        if $r6 != null goto label2;

        r10 = new java.util.ArrayList;

        $r7 = r10;

        specialinvoke r10.<java.util.ArrayList: void <init>()>();

        r11 = (java.util.Map) $r3;

        interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7);

     label2:
        $r8 = (java.util.List) $r7;

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r5);

        $i0 = $i0 + 1;

        goto label1;

     label3:
        r11 = (java.util.Map) $r3;

        return r11;
    }

    public static final java.util.Map groupByTo(java.lang.CharSequence, java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r3;
        java.lang.Object $r4, $r5, $r6;
        java.util.List $r7;
        java.util.ArrayList r8;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label3;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = $r5;

        if $r5 != null goto label2;

        r8 = new java.util.ArrayList;

        $r6 = r8;

        specialinvoke r8.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

     label2:
        $r7 = (java.util.List) $r6;

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r3);

        $i0 = $i0 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Map groupByTo(java.lang.CharSequence, java.util.Map, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2, $r3;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r4;
        java.lang.Object $r5, $r6, $r7;
        java.util.List $r8;
        java.util.ArrayList r9;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        $r3 := @parameter3: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "valueTransform");

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label3;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = $r6;

        if $r6 != null goto label2;

        r9 = new java.util.ArrayList;

        $r7 = r9;

        specialinvoke r9.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7);

     label2:
        $r8 = (java.util.List) $r7;

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r5 = interfaceinvoke $r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r5);

        $i0 = $i0 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final kotlin.collections.Grouping groupingBy(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function1 $r1;
        kotlin.text.StringsKt___StringsKt$groupingBy$1 $r2;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        $r2 = new kotlin.text.StringsKt___StringsKt$groupingBy$1;

        specialinvoke $r2.<kotlin.text.StringsKt___StringsKt$groupingBy$1: void <init>(java.lang.CharSequence,kotlin.jvm.functions.Function1)>($r0, $r1);

        return $r2;
    }

    public static final int indexOfFirst(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $c2 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i1);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $i1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    public static final int indexOfLast(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $i1 = $i0 + -1;

        if $i1 < 0 goto label3;

     label1:
        $i0 = $i1 + -1;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i1);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $i1;

     label2:
        if $i0 < 0 goto label3;

        $i1 = $i0;

        goto label1;

     label3:
        return -1;
    }

    public static final char last(java.lang.CharSequence)
    {
        java.lang.CharSequence $r0;
        int $i0;
        boolean $z0;
        char $c1;
        java.util.NoSuchElementException $r1;

        $r0 := @parameter0: java.lang.CharSequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r0);

        $c1 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        return $c1;

     label3:
        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Char sequence is empty.");

        throw $r1;
    }

    public static final char last(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        int $i0, $i1;
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function1 $r1;
        char $c2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;
        java.util.NoSuchElementException $r5;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $i1 = $i0 + -1;

        if $i1 < 0 goto label3;

     label1:
        $i0 = $i1 + -1;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i1);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $c2;

     label2:
        if $i0 < 0 goto label3;

        $i1 = $i0;

        goto label1;

     label3:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Char sequence contains no character matching the predicate.");

        goto label4;

     label4:
        throw $r5;
    }

    public static final java.lang.Character lastOrNull(java.lang.CharSequence)
    {
        java.lang.CharSequence $r0;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.Character $r1;

        $r0 := @parameter0: java.lang.CharSequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $i0 = $i0 + -1;

        $c1 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r1 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        return $r1;
    }

    public static final java.lang.Character lastOrNull(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int $i0, $i1;
        java.lang.CharSequence $r1;
        char $c2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $i1 = $i0 + -1;

        if $i1 < 0 goto label3;

     label1:
        $i0 = $i1 + -1;

        $c2 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i1);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        return $r2;

     label2:
        if $i0 < 0 goto label3;

        $i1 = $i0;

        goto label1;

     label3:
        return null;
    }

    public static final java.util.List map(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.util.ArrayList $r2, r5;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r3;
        java.lang.Object $r4;
        java.util.Collection r6;
        java.util.List r7;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r5 = new java.util.ArrayList;

        $r2 = r5;

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        specialinvoke r5.<java.util.ArrayList: void <init>(int)>($i0);

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label2;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        r6 = (java.util.Collection) $r2;

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.List mapIndexed(java.lang.CharSequence, kotlin.jvm.functions.Function2)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2;
        java.util.ArrayList $r2, r6;
        char $c3;
        java.lang.Integer $r3;
        java.lang.Character $r4;
        java.lang.Object $r5;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i1);

        $i1 = 0;

        $i2 = 0;

     label1:
        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i1 >= $i0 goto label2;

        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i1);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        r7 = (java.util.Collection) $r2;

        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List mapIndexedNotNull(java.lang.CharSequence, kotlin.jvm.functions.Function2)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2;
        java.util.ArrayList $r2, r6;
        char $c3;
        java.lang.Integer $r3;
        java.lang.Character $r4;
        java.lang.Object $r5;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i1 = 0;

        $i2 = 0;

     label1:
        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i1 >= $i0 goto label3;

        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i1);

        $i0 = $i2 + 1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $r5 == null goto label2;

        r7 = (java.util.Collection) $r2;

        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>($r5);

     label2:
        $i1 = $i1 + 1;

        $i2 = $i0;

        goto label1;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.Collection mapIndexedNotNullTo(java.lang.CharSequence, java.util.Collection, kotlin.jvm.functions.Function2)
    {
        java.lang.CharSequence $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function2 $r2;
        int $i0, $i1, $i2;
        char $c3;
        java.lang.Integer $r3;
        java.lang.Character $r4;
        java.lang.Object $r5;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i1 = 0;

        $i2 = 0;

     label1:
        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i1 >= $i0 goto label3;

        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i1);

        $i0 = $i2 + 1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $r5 == null goto label2;

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r5);

     label2:
        $i1 = $i1 + 1;

        $i2 = $i0;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Collection mapIndexedTo(java.lang.CharSequence, java.util.Collection, kotlin.jvm.functions.Function2)
    {
        java.lang.CharSequence $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function2 $r2;
        int $i0, $i1, $i2;
        char $c3;
        java.lang.Integer $r3;
        java.lang.Character $r4;
        java.lang.Object $r5;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i1 = 0;

        $i2 = 0;

     label1:
        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i1 >= $i0 goto label2;

        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i1);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.List mapNotNull(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.util.ArrayList $r2, r5;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r3;
        java.lang.Object $r4;
        java.util.Collection r6;
        java.util.List r7;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r5 = new java.util.ArrayList;

        $r2 = r5;

        specialinvoke r5.<java.util.ArrayList: void <init>()>();

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label3;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        if $r4 == null goto label2;

        r6 = (java.util.Collection) $r2;

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r4);

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.Collection mapNotNullTo(java.lang.CharSequence, java.util.Collection, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label3;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        if $r4 == null goto label2;

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r4);

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Collection mapTo(java.lang.CharSequence, java.util.Collection, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label2;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.lang.Character maxByOrNull(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.CharSequence $r1;
        int $i0;
        boolean $z0;
        char $c1, $c2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>(0);

        $c2 = $c1;

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r1);

        if $i0 != 0 goto label4;

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        return $r2;

     label4:
        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label5:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label5;

        $c2 = $c1;

        $r4 = $r7;

        goto label5;

     label6:
        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        return $r2;
    }

    public static final char maxByOrThrow(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.CharSequence $r1;
        int $i0;
        boolean $z0;
        char $c1, $c2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label6;

        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>(0);

        $c2 = $c1;

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r1);

        if $i0 != 0 goto label3;

        return $c1;

     label3:
        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label4;

        $c2 = $c1;

        $r4 = $r7;

        goto label4;

     label5:
        return $c2;

     label6:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label7;

     label7:
        throw $r8;
    }

    private static final double maxOf(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.CharSequence $r1;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        double $d0, $d1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>(0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        goto label3;

     label4:
        return $d0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final float maxOf(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.CharSequence $r1;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0, $f1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>(0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        goto label3;

     label4:
        return $f0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final java.lang.Comparable maxOf(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.CharSequence $r1;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>(0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label3;

        $r4 = $r7;

        goto label3;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final java.lang.Comparable maxOfOrNull(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.CharSequence $r1;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>(0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label4;

        $r4 = $r7;

        goto label4;

     label5:
        return $r4;
    }

    private static final java.lang.Double maxOfOrNull(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.CharSequence $r1;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        double $d0, $d1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.lang.Double $r7;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>(0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        goto label4;

     label5:
        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r7;
    }

    private static final java.lang.Float maxOfOrNull(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.CharSequence $r1;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0, $f1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.lang.Float $r7;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>(0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        goto label4;

     label5:
        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r7;
    }

    private static final java.lang.Object maxOfWith(java.lang.CharSequence, java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.CharSequence $r2;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.Character $r3;
        java.lang.Object $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r2 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $c1 = interfaceinvoke $r2.<java.lang.CharSequence: char charAt(int)>(0);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r2);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c1 = interfaceinvoke $r2.<java.lang.CharSequence: char charAt(int)>($i0);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r7);

        if $i0 >= 0 goto label3;

        $r4 = $r7;

        goto label3;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final java.lang.Object maxOfWithOrNull(java.lang.CharSequence, java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.CharSequence $r2;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.Character $r3;
        java.lang.Object $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r2 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $c1 = interfaceinvoke $r2.<java.lang.CharSequence: char charAt(int)>(0);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r2);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c1 = interfaceinvoke $r2.<java.lang.CharSequence: char charAt(int)>($i0);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r7);

        if $i0 >= 0 goto label4;

        $r4 = $r7;

        goto label4;

     label5:
        return $r4;
    }

    public static final java.lang.Character maxOrNull(java.lang.CharSequence)
    {
        java.lang.CharSequence $r0;
        int $i0;
        boolean $z0;
        char $c1, $c2;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        java.lang.Character $r3;

        $r0 := @parameter0: java.lang.CharSequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $c1 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>(0);

        $r1 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $i0 = staticinvoke <kotlin.jvm.internal.Intrinsics: int compare(int,int)>($c1, $c2);

        if $i0 >= 0 goto label4;

        $c1 = $c2;

        goto label4;

     label5:
        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        return $r3;
    }

    public static final char maxOrThrow(java.lang.CharSequence)
    {
        java.lang.CharSequence $r0;
        int $i0;
        boolean $z0;
        char $c1, $c2;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        java.util.NoSuchElementException $r3;

        $r0 := @parameter0: java.lang.CharSequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $c1 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>(0);

        $r1 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $i0 = staticinvoke <kotlin.jvm.internal.Intrinsics: int compare(int,int)>($c1, $c2);

        if $i0 >= 0 goto label3;

        $c1 = $c2;

        goto label3;

     label4:
        return $c1;

     label5:
        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r3;
    }

    public static final java.lang.Character maxWithOrNull(java.lang.CharSequence, java.util.Comparator)
    {
        java.util.Comparator $r0;
        java.lang.CharSequence $r1;
        int $i0;
        boolean $z0;
        char $c1, $c2;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Character $r4, $r5;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>(0);

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $c2 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i0 >= 0 goto label4;

        $c1 = $c2;

        goto label4;

     label5:
        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        return $r4;
    }

    public static final char maxWithOrThrow(java.lang.CharSequence, java.util.Comparator)
    {
        java.util.Comparator $r0;
        java.lang.CharSequence $r1;
        int $i0;
        boolean $z0;
        char $c1, $c2;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Character $r4, $r5;
        java.util.NoSuchElementException $r6;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>(0);

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $c2 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i0 >= 0 goto label3;

        $c1 = $c2;

        goto label3;

     label4:
        return $c1;

     label5:
        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r6;
    }

    public static final java.lang.Character minByOrNull(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.CharSequence $r1;
        int $i0;
        boolean $z0;
        char $c1, $c2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>(0);

        $c2 = $c1;

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r1);

        if $i0 != 0 goto label4;

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        return $r2;

     label4:
        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label5:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label5;

        $c2 = $c1;

        $r4 = $r7;

        goto label5;

     label6:
        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        return $r2;
    }

    public static final char minByOrThrow(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.CharSequence $r1;
        int $i0;
        boolean $z0;
        char $c1, $c2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label6;

        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>(0);

        $c2 = $c1;

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r1);

        if $i0 != 0 goto label3;

        return $c1;

     label3:
        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label4;

        $c2 = $c1;

        $r4 = $r7;

        goto label4;

     label5:
        return $c2;

     label6:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label7;

     label7:
        throw $r8;
    }

    private static final double minOf(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.CharSequence $r1;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        double $d0, $d1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>(0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double min(double,double)>($d0, $d1);

        goto label3;

     label4:
        return $d0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final float minOf(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.CharSequence $r1;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0, $f1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>(0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        goto label3;

     label4:
        return $f0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final java.lang.Comparable minOf(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.CharSequence $r1;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>(0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label3;

        $r4 = $r7;

        goto label3;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final java.lang.Comparable minOfOrNull(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.CharSequence $r1;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>(0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label4;

        $r4 = $r7;

        goto label4;

     label5:
        return $r4;
    }

    private static final java.lang.Double minOfOrNull(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.CharSequence $r1;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        double $d0, $d1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.lang.Double $r7;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>(0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double min(double,double)>($d0, $d1);

        goto label4;

     label5:
        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r7;
    }

    private static final java.lang.Float minOfOrNull(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.CharSequence $r1;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0, $f1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.lang.Float $r7;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>(0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        goto label4;

     label5:
        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r7;
    }

    private static final java.lang.Object minOfWith(java.lang.CharSequence, java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.CharSequence $r2;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.Character $r3;
        java.lang.Object $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r2 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $c1 = interfaceinvoke $r2.<java.lang.CharSequence: char charAt(int)>(0);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r2);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c1 = interfaceinvoke $r2.<java.lang.CharSequence: char charAt(int)>($i0);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r7);

        if $i0 <= 0 goto label3;

        $r4 = $r7;

        goto label3;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final java.lang.Object minOfWithOrNull(java.lang.CharSequence, java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.CharSequence $r2;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.Character $r3;
        java.lang.Object $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r2 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $c1 = interfaceinvoke $r2.<java.lang.CharSequence: char charAt(int)>(0);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r2);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c1 = interfaceinvoke $r2.<java.lang.CharSequence: char charAt(int)>($i0);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r7);

        if $i0 <= 0 goto label4;

        $r4 = $r7;

        goto label4;

     label5:
        return $r4;
    }

    public static final java.lang.Character minOrNull(java.lang.CharSequence)
    {
        java.lang.CharSequence $r0;
        int $i0;
        boolean $z0;
        char $c1, $c2;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        java.lang.Character $r3;

        $r0 := @parameter0: java.lang.CharSequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $c1 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>(0);

        $r1 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $i0 = staticinvoke <kotlin.jvm.internal.Intrinsics: int compare(int,int)>($c1, $c2);

        if $i0 <= 0 goto label4;

        $c1 = $c2;

        goto label4;

     label5:
        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        return $r3;
    }

    public static final char minOrThrow(java.lang.CharSequence)
    {
        java.lang.CharSequence $r0;
        int $i0;
        boolean $z0;
        char $c1, $c2;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        java.util.NoSuchElementException $r3;

        $r0 := @parameter0: java.lang.CharSequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $c1 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>(0);

        $r1 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $i0 = staticinvoke <kotlin.jvm.internal.Intrinsics: int compare(int,int)>($c1, $c2);

        if $i0 <= 0 goto label3;

        $c1 = $c2;

        goto label3;

     label4:
        return $c1;

     label5:
        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r3;
    }

    public static final java.lang.Character minWithOrNull(java.lang.CharSequence, java.util.Comparator)
    {
        java.util.Comparator $r0;
        java.lang.CharSequence $r1;
        int $i0;
        boolean $z0;
        char $c1, $c2;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Character $r4, $r5;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>(0);

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $c2 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i0 <= 0 goto label4;

        $c1 = $c2;

        goto label4;

     label5:
        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        return $r4;
    }

    public static final char minWithOrThrow(java.lang.CharSequence, java.util.Comparator)
    {
        java.util.Comparator $r0;
        java.lang.CharSequence $r1;
        int $i0;
        boolean $z0;
        char $c1, $c2;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Character $r4, $r5;
        java.util.NoSuchElementException $r6;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>(0);

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $c2 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i0 <= 0 goto label3;

        $c1 = $c2;

        goto label3;

     label4:
        return $c1;

     label5:
        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r6;
    }

    public static final boolean none(java.lang.CharSequence)
    {
        int $i0;
        java.lang.CharSequence $r0;

        $r0 := @parameter0: java.lang.CharSequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static final boolean none(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label3;

        $c2 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return 0;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return 1;
    }

    public static final java.lang.CharSequence onEach(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r2;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label2;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r0;
    }

    public static final java.lang.CharSequence onEachIndexed(java.lang.CharSequence, kotlin.jvm.functions.Function2)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2;
        char $c3;
        java.lang.Integer $r2;
        java.lang.Character $r3;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i1 = 0;

        $i2 = 0;

     label1:
        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i1 >= $i0 goto label2;

        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i1);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r0;
    }

    public static final kotlin.Pair partition(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.StringBuilder $r1, $r3;
        java.lang.CharSequence $r2;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r4;
        java.lang.Object $r5;
        java.lang.Boolean $r6;
        boolean $z0;
        kotlin.Pair $r7;

        $r2 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label4;

        $c2 = interfaceinvoke $r2.<java.lang.CharSequence: char charAt(int)>($i0);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        goto label3;

     label2:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

     label3:
        $i0 = $i0 + 1;

        goto label1;

     label4:
        $r7 = new kotlin.Pair;

        specialinvoke $r7.<kotlin.Pair: void <init>(java.lang.Object,java.lang.Object)>($r3, $r1);

        return $r7;
    }

    public static final kotlin.Pair partition(java.lang.String, kotlin.jvm.functions.Function1)
    {
        java.lang.String $r0, $r8;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.StringBuilder $r2, $r3;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r4;
        java.lang.Object $r5;
        java.lang.Boolean $r6;
        boolean $z0;
        kotlin.Pair $r7;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        goto label3;

     label2:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        $r7 = new kotlin.Pair;

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "first.toString()");

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "second.toString()");

        specialinvoke $r7.<kotlin.Pair: void <init>(java.lang.Object,java.lang.Object)>($r0, $r8);

        return $r7;
    }

    private static final char random(java.lang.CharSequence)
    {
        char $c0;
        java.lang.CharSequence $r0;
        kotlin.random.Random$Default $r1;

        $r0 := @parameter0: java.lang.CharSequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <kotlin.random.Random: kotlin.random.Random$Default Default>;

        $c0 = staticinvoke <kotlin.text.StringsKt: char random(java.lang.CharSequence,kotlin.random.Random)>($r0, $r1);

        return $c0;
    }

    public static final char random(java.lang.CharSequence, kotlin.random.Random)
    {
        java.lang.CharSequence $r0;
        kotlin.random.Random $r1;
        int $i0;
        boolean $z0;
        char $c1;
        java.util.NoSuchElementException $r2;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.random.Random;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "random");

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $i0 = virtualinvoke $r1.<kotlin.random.Random: int nextInt(int)>($i0);

        $c1 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        return $c1;

     label3:
        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Char sequence is empty.");

        throw $r2;
    }

    private static final java.lang.Character randomOrNull(java.lang.CharSequence)
    {
        java.lang.Character $r0;
        java.lang.CharSequence $r1;
        kotlin.random.Random$Default $r2;

        $r1 := @parameter0: java.lang.CharSequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r2 = <kotlin.random.Random: kotlin.random.Random$Default Default>;

        $r0 = staticinvoke <kotlin.text.StringsKt: java.lang.Character randomOrNull(java.lang.CharSequence,kotlin.random.Random)>($r1, $r2);

        return $r0;
    }

    public static final java.lang.Character randomOrNull(java.lang.CharSequence, kotlin.random.Random)
    {
        java.lang.CharSequence $r0;
        kotlin.random.Random $r1;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.Character $r2;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.random.Random;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "random");

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $i0 = virtualinvoke $r1.<kotlin.random.Random: int nextInt(int)>($i0);

        $c1 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        return $r2;
    }

    public static final char reduce(java.lang.CharSequence, kotlin.jvm.functions.Function2)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0;
        boolean $z0;
        char $c1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Character $r4, $r5;
        java.lang.Object $r6;
        java.lang.UnsupportedOperationException $r7;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $c1 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>(0);

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r0);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $c1 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r6 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r4 = (java.lang.Character) $r6;

        $c1 = virtualinvoke $r4.<java.lang.Character: char charValue()>();

        goto label3;

     label4:
        return $c1;

     label5:
        $r7 = new java.lang.UnsupportedOperationException;

        specialinvoke $r7.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty char sequence can\'t be reduced.");

        goto label6;

     label6:
        throw $r7;
    }

    public static final char reduceIndexed(java.lang.CharSequence, kotlin.jvm.functions.Function3)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function3 $r1;
        int $i0;
        boolean $z0;
        char $c1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Integer $r4;
        java.lang.Character $r5, $r6;
        java.lang.Object $r7;
        java.lang.UnsupportedOperationException $r8;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $c1 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>(0);

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r0);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $c1 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r6 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r5, $r6);

        $r5 = (java.lang.Character) $r7;

        $c1 = virtualinvoke $r5.<java.lang.Character: char charValue()>();

        goto label3;

     label4:
        return $c1;

     label5:
        $r8 = new java.lang.UnsupportedOperationException;

        specialinvoke $r8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty char sequence can\'t be reduced.");

        goto label6;

     label6:
        throw $r8;
    }

    public static final java.lang.Character reduceIndexedOrNull(java.lang.CharSequence, kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        java.lang.CharSequence $r1;
        int $i0;
        boolean $z0;
        char $c1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Integer $r4;
        java.lang.Character $r5, $r6;
        java.lang.Object $r7;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>(0);

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        $r6 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r5, $r6);

        $r5 = (java.lang.Character) $r7;

        $c1 = virtualinvoke $r5.<java.lang.Character: char charValue()>();

        goto label4;

     label5:
        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        return $r5;
    }

    public static final java.lang.Character reduceOrNull(java.lang.CharSequence, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        java.lang.CharSequence $r1;
        int $i0;
        boolean $z0;
        char $c1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Character $r4, $r5;
        java.lang.Object $r6;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>(0);

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r4 = (java.lang.Character) $r6;

        $c1 = virtualinvoke $r4.<java.lang.Character: char charValue()>();

        goto label4;

     label5:
        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        return $r4;
    }

    public static final char reduceRight(java.lang.CharSequence, kotlin.jvm.functions.Function2)
    {
        int $i0, $i1;
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function2 $r1;
        char $c2, $c3;
        java.lang.Character $r2, $r3;
        java.lang.Object $r4;
        java.lang.UnsupportedOperationException $r5;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r0);

        if $i0 < 0 goto label3;

        $i1 = $i0 + -1;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

     label1:
        if $i1 < 0 goto label2;

        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i1);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r2 = (java.lang.Character) $r4;

        $c2 = virtualinvoke $r2.<java.lang.Character: char charValue()>();

        $i1 = $i1 + -1;

        goto label1;

     label2:
        return $c2;

     label3:
        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty char sequence can\'t be reduced.");

        goto label4;

     label4:
        throw $r5;
    }

    public static final char reduceRightIndexed(java.lang.CharSequence, kotlin.jvm.functions.Function3)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function3 $r1;
        int $i0, $i1;
        char $c2, $c3;
        java.lang.Integer $r2;
        java.lang.Character $r3, $r4;
        java.lang.Object $r5;
        java.lang.UnsupportedOperationException $r6;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r0);

        if $i0 < 0 goto label3;

        $i1 = $i0 + -1;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

     label1:
        if $i1 < 0 goto label2;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i1);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r2, $r3, $r4);

        $r3 = (java.lang.Character) $r5;

        $c2 = virtualinvoke $r3.<java.lang.Character: char charValue()>();

        $i1 = $i1 + -1;

        goto label1;

     label2:
        return $c2;

     label3:
        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty char sequence can\'t be reduced.");

        goto label4;

     label4:
        throw $r6;
    }

    public static final java.lang.Character reduceRightIndexedOrNull(java.lang.CharSequence, kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1;
        char $c2, $c3;
        java.lang.Integer $r2;
        java.lang.Character $r3, $r4;
        java.lang.Object $r5;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r1);

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $i1 = $i0 + -1;

        $c2 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

     label2:
        if $i1 < 0 goto label3;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $c3 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i1);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r2, $r3, $r4);

        $r3 = (java.lang.Character) $r5;

        $c2 = virtualinvoke $r3.<java.lang.Character: char charValue()>();

        $i1 = $i1 + -1;

        goto label2;

     label3:
        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        return $r3;
    }

    public static final java.lang.Character reduceRightOrNull(java.lang.CharSequence, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        int $i0, $i1;
        java.lang.CharSequence $r1;
        char $c2, $c3;
        java.lang.Character $r2, $r3;
        java.lang.Object $r4;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r1);

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $i1 = $i0 + -1;

        $c2 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

     label2:
        if $i1 < 0 goto label3;

        $c3 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i1);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r2 = (java.lang.Character) $r4;

        $c2 = virtualinvoke $r2.<java.lang.Character: char charValue()>();

        $i1 = $i1 + -1;

        goto label2;

     label3:
        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        return $r2;
    }

    public static final java.lang.CharSequence reversed(java.lang.CharSequence)
    {
        java.lang.StringBuilder $r0;
        java.lang.CharSequence $r1;

        $r1 := @parameter0: java.lang.CharSequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.CharSequence)>($r1);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder reverse()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "StringBuilder(this).reverse()");

        return $r0;
    }

    private static final java.lang.String reversed(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.CharSequence $r1;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <kotlin.text.StringsKt: java.lang.CharSequence reversed(java.lang.CharSequence)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r0;
    }

    public static final java.util.List runningFold(java.lang.CharSequence, java.lang.Object, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        java.lang.CharSequence $r1;
        java.lang.Object $r2, $r6;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r7;
        char $c2;
        java.lang.Character $r5;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r7 = new java.util.ArrayList;

        $r4 = r7;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $i0 = $i0 + 1;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

     label4:
        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i1 >= $i0 goto label5;

        $c2 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i1);

        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r5);

        $r2 = $r6;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    public static final java.util.List runningFoldIndexed(java.lang.CharSequence, java.lang.Object, kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        java.lang.CharSequence $r1;
        java.lang.Object $r2, $r7;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r8;
        java.lang.Integer $r5;
        char $c2;
        java.lang.Character $r6;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r8 = new java.util.ArrayList;

        $r4 = r8;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $i0 = $i0 + 1;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

     label4:
        if $i1 >= $i0 goto label5;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $c2 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i1);

        $r6 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r2, $r6);

        $r2 = $r7;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    public static final java.util.List runningReduce(java.lang.CharSequence, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r2;
        char $c2, $c3;
        java.util.ArrayList $r3, r7;
        java.lang.Character $r4, $r5;
        java.lang.Object $r6;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $i1 = 1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r2;

     label3:
        $c2 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>(0);

        $c3 = $c2;

        r7 = new java.util.ArrayList;

        $r3 = r7;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

     label4:
        if $i1 >= $i0 goto label5;

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $c3 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i1);

        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r4 = (java.lang.Character) $r6;

        $c2 = virtualinvoke $r4.<java.lang.Character: char charValue()>();

        $c3 = $c2;

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r2 = (java.util.List) $r3;

        return $r2;
    }

    public static final java.util.List runningReduceIndexed(java.lang.CharSequence, kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r2;
        char $c2, $c3;
        java.util.ArrayList $r3, r8;
        java.lang.Character $r4, $r6;
        java.lang.Integer $r5;
        java.lang.Object $r7;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $i1 = 1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r2;

     label3:
        $c2 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>(0);

        $c3 = $c2;

        r8 = new java.util.ArrayList;

        $r3 = r8;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

     label4:
        if $i1 >= $i0 goto label5;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $c3 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i1);

        $r6 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r4, $r6);

        $r4 = (java.lang.Character) $r7;

        $c2 = virtualinvoke $r4.<java.lang.Character: char charValue()>();

        $c3 = $c2;

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r2 = (java.util.List) $r3;

        return $r2;
    }

    public static final java.util.List scan(java.lang.CharSequence, java.lang.Object, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        java.lang.CharSequence $r1;
        java.lang.Object $r2, $r6;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r7;
        char $c2;
        java.lang.Character $r5;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r7 = new java.util.ArrayList;

        $r4 = r7;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $i0 = $i0 + 1;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

     label4:
        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i1 >= $i0 goto label5;

        $c2 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i1);

        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r5);

        $r2 = $r6;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    public static final java.util.List scanIndexed(java.lang.CharSequence, java.lang.Object, kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        java.lang.CharSequence $r1;
        java.lang.Object $r2, $r7;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r8;
        java.lang.Integer $r5;
        char $c2;
        java.lang.Character $r6;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r8 = new java.util.ArrayList;

        $r4 = r8;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $i0 = $i0 + 1;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

     label4:
        if $i1 >= $i0 goto label5;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $c2 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i1);

        $r6 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r2, $r6);

        $r2 = $r7;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    public static final char single(java.lang.CharSequence)
    {
        java.lang.CharSequence $r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;
        char $c1;
        java.util.NoSuchElementException $r2;

        $r0 := @parameter0: java.lang.CharSequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Char sequence has more than one element.");

        throw $r1;

     label2:
        $c1 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>(0);

        return $c1;

     label3:
        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Char sequence is empty.");

        throw $r2;
    }

    public static final char single(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Character $r2, $r3;
        int $i0, $i1;
        boolean $z0, $z1;
        char $c2;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        java.lang.IllegalArgumentException $r6;
        java.util.NoSuchElementException $r7;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $r2 = null;

        $i0 = 0;

        $z0 = 0;

     label1:
        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label4;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label3;

        if $z0 != 0 goto label2;

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $z0 = 1;

        goto label3;

     label2:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Char sequence contains more than one matching element.");

        throw $r6;

     label3:
        $i0 = $i0 + 1;

        goto label1;

     label4:
        if $z0 == 0 goto label5;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type kotlin.Char");

        $c2 = virtualinvoke $r2.<java.lang.Character: char charValue()>();

        return $c2;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Char sequence contains no character matching the predicate.");

        goto label6;

     label6:
        throw $r7;
    }

    public static final java.lang.Character singleOrNull(java.lang.CharSequence)
    {
        java.lang.CharSequence $r0;
        int $i0;
        char $c1;
        java.lang.Character $r1;

        $r0 := @parameter0: java.lang.CharSequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 != 1 goto label1;

        $c1 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>(0);

        $r1 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        return $r1;

     label1:
        return null;
    }

    public static final java.lang.Character singleOrNull(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.lang.Character $r2, $r3;
        boolean $z0, $z1;
        char $c2;
        java.lang.Object $r4;
        java.lang.Boolean $r5;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = 0;

        $r2 = null;

        $z0 = 0;

     label1:
        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label4;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label3;

        if $z0 == 0 goto label2;

        return null;

     label2:
        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $z0 = 1;

        goto label3;

     label3:
        $i0 = $i0 + 1;

        goto label1;

     label4:
        if $z0 != 0 goto label5;

        return null;

     label5:
        return $r2;
    }

    public static final java.lang.CharSequence slice(java.lang.CharSequence, java.lang.Iterable)
    {
        java.lang.StringBuilder $r0;
        java.lang.CharSequence $r1;
        java.lang.Iterable $r2;
        int $i0;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Number $r5;
        char $c1;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "indices");

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 10);

        if $i0 != 0 goto label1;

        return "";

     label1:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.Number) $r4;

        $i0 = virtualinvoke $r5.<java.lang.Number: int intValue()>();

        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        goto label2;

     label3:
        return $r0;
    }

    public static final java.lang.CharSequence slice(java.lang.CharSequence, kotlin.ranges.IntRange)
    {
        kotlin.ranges.IntRange $r0;
        java.lang.CharSequence $r1;
        boolean $z0;

        $r1 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: kotlin.ranges.IntRange;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "indices");

        $z0 = virtualinvoke $r0.<kotlin.ranges.IntRange: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return "";

     label1:
        $r1 = staticinvoke <kotlin.text.StringsKt: java.lang.CharSequence subSequence(java.lang.CharSequence,kotlin.ranges.IntRange)>($r1, $r0);

        return $r1;
    }

    private static final java.lang.String slice(java.lang.String, java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.lang.String $r1;
        java.lang.CharSequence $r2;

        $r1 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "indices");

        $r2 = staticinvoke <kotlin.text.StringsKt: java.lang.CharSequence slice(java.lang.CharSequence,java.lang.Iterable)>($r1, $r0);

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    public static final java.lang.String slice(java.lang.String, kotlin.ranges.IntRange)
    {
        kotlin.ranges.IntRange $r0;
        java.lang.String $r1;
        boolean $z0;

        $r1 := @parameter0: java.lang.String;

        $r0 := @parameter1: kotlin.ranges.IntRange;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "indices");

        $z0 = virtualinvoke $r0.<kotlin.ranges.IntRange: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return "";

     label1:
        $r1 = staticinvoke <kotlin.text.StringsKt: java.lang.String substring(java.lang.String,kotlin.ranges.IntRange)>($r1, $r0);

        return $r1;
    }

    public static final int sumBy(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2;
        char $c3;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = 0;

        $i1 = 0;

     label1:
        $i2 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 >= $i2 goto label2;

        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $i2 = virtualinvoke $r4.<java.lang.Number: int intValue()>();

        $i1 = $i1 + $i2;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $i1;
    }

    public static final double sumByDouble(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function1 $r1;
        double $d0, $d1;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $d0 = 0.0;

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label2;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = $d0 + $d1;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $d0;
    }

    private static final double sumOfDouble(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function1 $r1;
        double $d0, $d1;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $d0 = 0.0;

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label2;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = $d0 + $d1;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $d0;
    }

    private static final int sumOfInt(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2;
        char $c3;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = 0;

        $i1 = 0;

     label1:
        $i2 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 >= $i2 goto label2;

        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $i2 = virtualinvoke $r4.<java.lang.Number: int intValue()>();

        $i1 = $i1 + $i2;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $i1;
    }

    private static final long sumOfLong(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function1 $r1;
        long $l0, $l4;
        int $i1, $i2;
        char $c3;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $l0 = 0L;

        $i1 = 0;

     label1:
        $i2 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i1 >= $i2 goto label2;

        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i1);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $l4 = virtualinvoke $r4.<java.lang.Number: long longValue()>();

        $l0 = $l0 + $l4;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $l0;
    }

    private static final int sumOfUInt(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2;
        char $c3;
        java.lang.Character $r2;
        java.lang.Object $r3;
        kotlin.UInt $r4;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = 0;

        $i1 = staticinvoke <kotlin.UInt: int constructor-impl(int)>(0);

     label1:
        $i2 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 >= $i2 goto label2;

        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (kotlin.UInt) $r3;

        $i2 = virtualinvoke $r4.<kotlin.UInt: int unbox-impl()>();

        $i1 = $i1 + $i2;

        $i1 = staticinvoke <kotlin.UInt: int constructor-impl(int)>($i1);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $i1;
    }

    private static final long sumOfULong(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function1 $r1;
        long $l0, $l4;
        int $i1, $i2;
        char $c3;
        java.lang.Character $r2;
        java.lang.Object $r3;
        kotlin.ULong $r4;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $l0 = staticinvoke <kotlin.ULong: long constructor-impl(long)>(0L);

        $i1 = 0;

     label1:
        $i2 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i1 >= $i2 goto label2;

        $c3 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i1);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (kotlin.ULong) $r3;

        $l4 = virtualinvoke $r4.<kotlin.ULong: long unbox-impl()>();

        $l0 = $l0 + $l4;

        $l0 = staticinvoke <kotlin.ULong: long constructor-impl(long)>($l0);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $l0;
    }

    public static final java.lang.CharSequence take(java.lang.CharSequence, int)
    {
        java.lang.CharSequence $r0;
        int $i0, $i1;
        boolean $z0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        java.lang.IllegalArgumentException $r3;

        $r0 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtMost(int,int)>($i0, $i1);

        $r0 = interfaceinvoke $r0.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(0, $i0);

        return $r0;

     label3:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested character count ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new java.lang.IllegalArgumentException;

        $r2 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r3;
    }

    public static final java.lang.String take(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0, $i1;
        boolean $z0;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtMost(int,int)>($i0, $i1);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this as java.lang.String\u2026ing(startIndex, endIndex)");

        return $r0;

     label3:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested character count ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = new java.lang.IllegalArgumentException;

        $r0 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r2;
    }

    public static final java.lang.CharSequence takeLast(java.lang.CharSequence, int)
    {
        java.lang.CharSequence $r0;
        int $i0, $i1;
        boolean $z0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        java.lang.IllegalArgumentException $r3;

        $r0 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtMost(int,int)>($i0, $i1);

        $i0 = $i1 - $i0;

        $r0 = interfaceinvoke $r0.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>($i0, $i1);

        return $r0;

     label3:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested character count ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new java.lang.IllegalArgumentException;

        $r2 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r3;
    }

    public static final java.lang.String takeLast(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0, $i1;
        boolean $z0;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtMost(int,int)>($i0, $i1);

        $i0 = $i1 - $i0;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this as java.lang.String).substring(startIndex)");

        return $r0;

     label3:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested character count ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = new java.lang.IllegalArgumentException;

        $r0 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r2;
    }

    public static final java.lang.CharSequence takeLastWhile(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i2;
        char $c1;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r0);

     label1:
        if $i0 < 0 goto label3;

        $c1 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $i0 = $i0 + 1;

        $i2 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $r0 = interfaceinvoke $r0.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>($i0, $i2);

        return $r0;

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $r0 = interfaceinvoke $r0.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(0, $i0);

        return $r0;
    }

    public static final java.lang.String takeLastWhile(java.lang.String, kotlin.jvm.functions.Function1)
    {
        java.lang.String $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0;
        char $c1;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = staticinvoke <kotlin.text.StringsKt: int getLastIndex(java.lang.CharSequence)>($r0);

     label1:
        if $i0 < 0 goto label3;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $i0 = $i0 + 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this as java.lang.String).substring(startIndex)");

        return $r0;

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        return $r0;
    }

    public static final java.lang.CharSequence takeWhile(java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i1);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $r0 = interfaceinvoke $r0.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(0, $i1);

        return $r0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $r0 = interfaceinvoke $r0.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(0, $i0);

        return $r0;
    }

    public static final java.lang.String takeWhile(java.lang.String, kotlin.jvm.functions.Function1)
    {
        java.lang.String $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this as java.lang.String\u2026ing(startIndex, endIndex)");

        return $r0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r0;
    }

    public static final java.util.Collection toCollection(java.lang.CharSequence, java.util.Collection)
    {
        java.lang.CharSequence $r0;
        java.util.Collection $r1;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r2;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label2;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r2);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.HashSet toHashSet(java.lang.CharSequence)
    {
        java.lang.CharSequence $r0;
        java.util.HashSet $r1, r3;
        int $i0;
        java.util.Collection $r2;

        $r0 := @parameter0: java.lang.CharSequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r3 = new java.util.HashSet;

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtMost(int,int)>($i0, 128);

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r3.<java.util.HashSet: void <init>(int)>($i0);

        $r2 = (java.util.Collection) r3;

        $r2 = staticinvoke <kotlin.text.StringsKt: java.util.Collection toCollection(java.lang.CharSequence,java.util.Collection)>($r0, $r2);

        $r1 = (java.util.HashSet) $r2;

        return $r1;
    }

    public static final java.util.List toList(java.lang.CharSequence)
    {
        java.lang.CharSequence $r0;
        int $i0;
        java.util.List $r1;
        char $c1;
        java.lang.Character $r2;

        $r0 := @parameter0: java.lang.CharSequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = staticinvoke <kotlin.text.StringsKt: java.util.List toMutableList(java.lang.CharSequence)>($r0);

        return $r1;

     label2:
        $c1 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>(0);

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r1;

     label3:
        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;
    }

    public static final java.util.List toMutableList(java.lang.CharSequence)
    {
        java.lang.CharSequence $r0;
        int $i0;
        java.util.Collection $r1;
        java.util.List $r2;
        java.util.ArrayList r3;

        $r0 := @parameter0: java.lang.CharSequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r3 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        specialinvoke r3.<java.util.ArrayList: void <init>(int)>($i0);

        $r1 = (java.util.Collection) r3;

        $r1 = staticinvoke <kotlin.text.StringsKt: java.util.Collection toCollection(java.lang.CharSequence,java.util.Collection)>($r0, $r1);

        $r2 = (java.util.List) $r1;

        return $r2;
    }

    public static final java.util.Set toSet(java.lang.CharSequence)
    {
        java.lang.CharSequence $r0;
        int $i0;
        java.util.Collection $r1;
        java.util.Set $r2;
        char $c1;
        java.lang.Character $r3;
        java.util.LinkedHashSet r4;

        $r0 := @parameter0: java.lang.CharSequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        r4 = new java.util.LinkedHashSet;

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtMost(int,int)>($i0, 128);

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r4.<java.util.LinkedHashSet: void <init>(int)>($i0);

        $r1 = (java.util.Collection) r4;

        $r1 = staticinvoke <kotlin.text.StringsKt: java.util.Collection toCollection(java.lang.CharSequence,java.util.Collection)>($r0, $r1);

        $r2 = (java.util.Set) $r1;

        return $r2;

     label2:
        $c1 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>(0);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r2 = staticinvoke <kotlin.collections.SetsKt: java.util.Set setOf(java.lang.Object)>($r3);

        return $r2;

     label3:
        $r2 = staticinvoke <kotlin.collections.SetsKt: java.util.Set emptySet()>();

        return $r2;
    }

    public static final java.util.List windowed(java.lang.CharSequence, int, int, boolean)
    {
        int $i0, $i1;
        boolean $z0;
        java.util.List $r0;
        java.lang.CharSequence $r1;
        kotlin.text.StringsKt___StringsKt$windowed$1 $r2;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r2 = <kotlin.text.StringsKt___StringsKt$windowed$1: kotlin.text.StringsKt___StringsKt$windowed$1 INSTANCE>;

        $r0 = staticinvoke <kotlin.text.StringsKt: java.util.List windowed(java.lang.CharSequence,int,int,boolean,kotlin.jvm.functions.Function1)>($r1, $i0, $i1, $z0, $r2);

        return $r0;
    }

    public static final java.util.List windowed(java.lang.CharSequence, int, int, boolean, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0, $r3;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1;
        kotlin.jvm.functions.Function1 $r1;
        java.util.ArrayList $r2, r5;
        byte $b5;
        java.lang.Object $r4;
        java.util.List r6;

        $r0 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $r1 := @parameter4: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        staticinvoke <kotlin.collections.SlidingWindowKt: void checkWindowSizeStep(int,int)>($i0, $i1);

        $i2 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $i3 = $i2 / $i1;

        $i4 = $i2 % $i1;

        if $i4 != 0 goto label1;

        $b5 = 0;

        goto label2;

     label1:
        $b5 = 1;

     label2:
        r5 = new java.util.ArrayList;

        $r2 = r5;

        $i3 = $i3 + $b5;

        specialinvoke r5.<java.util.ArrayList: void <init>(int)>($i3);

        $i3 = 0;

     label3:
        if $i3 < 0 goto label4;

        if $i3 >= $i2 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        if $z1 == 0 goto label8;

        $i4 = $i3 + $i0;

        if $i4 < 0 goto label6;

        if $i4 <= $i2 goto label7;

     label6:
        if $z0 == 0 goto label9;

        $i4 = $i2;

     label7:
        $r3 = interfaceinvoke $r0.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>($i3, $i4);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i3 = $i3 + $i1;

        goto label3;

     label8:
        r6 = (java.util.List) $r2;

        return r6;

     label9:
        r6 = (java.util.List) $r2;

        return r6;
    }

    public static java.util.List windowed$default(java.lang.CharSequence, int, int, boolean, int, java.lang.Object)
    {
        int $i0, $i1, $i2, $i3;
        java.util.List $r0;
        java.lang.CharSequence $r1;
        boolean $z0;
        java.lang.Object $r2;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $i2 := @parameter4: int;

        $r2 := @parameter5: java.lang.Object;

        $i3 = $i2 & 2;

        if $i3 == 0 goto label1;

        $i1 = 1;

     label1:
        $i2 = $i2 & 4;

        if $i2 == 0 goto label2;

        $z0 = 0;

     label2:
        $r0 = staticinvoke <kotlin.text.StringsKt: java.util.List windowed(java.lang.CharSequence,int,int,boolean)>($r1, $i0, $i1, $z0);

        return $r0;
    }

    public static java.util.List windowed$default(java.lang.CharSequence, int, int, boolean, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        int $i0, $i1, $i2, $i3;
        kotlin.jvm.functions.Function1 $r0;
        java.util.List $r1;
        java.lang.CharSequence $r2;
        boolean $z0;
        java.lang.Object $r3;

        $r2 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $r0 := @parameter4: kotlin.jvm.functions.Function1;

        $i2 := @parameter5: int;

        $r3 := @parameter6: java.lang.Object;

        $i3 = $i2 & 2;

        if $i3 == 0 goto label1;

        $i1 = 1;

     label1:
        $i2 = $i2 & 4;

        if $i2 == 0 goto label2;

        $z0 = 0;

     label2:
        $r1 = staticinvoke <kotlin.text.StringsKt: java.util.List windowed(java.lang.CharSequence,int,int,boolean,kotlin.jvm.functions.Function1)>($r2, $i0, $i1, $z0, $r0);

        return $r1;
    }

    public static final kotlin.sequences.Sequence windowedSequence(java.lang.CharSequence, int, int, boolean)
    {
        int $i0, $i1;
        boolean $z0;
        kotlin.sequences.Sequence $r0;
        java.lang.CharSequence $r1;
        kotlin.text.StringsKt___StringsKt$windowedSequence$1 $r2;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r2 = <kotlin.text.StringsKt___StringsKt$windowedSequence$1: kotlin.text.StringsKt___StringsKt$windowedSequence$1 INSTANCE>;

        $r0 = staticinvoke <kotlin.text.StringsKt: kotlin.sequences.Sequence windowedSequence(java.lang.CharSequence,int,int,boolean,kotlin.jvm.functions.Function1)>($r1, $i0, $i1, $z0, $r2);

        return $r0;
    }

    public static final kotlin.sequences.Sequence windowedSequence(java.lang.CharSequence, int, int, boolean, kotlin.jvm.functions.Function1)
    {
        int $i0, $i1, $i2;
        kotlin.jvm.functions.Function1 $r0;
        java.lang.CharSequence $r1;
        boolean $z0;
        kotlin.ranges.IntRange $r2;
        kotlin.ranges.IntProgression $r3;
        kotlin.sequences.Sequence $r4;
        kotlin.text.StringsKt___StringsKt$windowedSequence$2 $r5;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $r0 := @parameter4: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "transform");

        staticinvoke <kotlin.collections.SlidingWindowKt: void checkWindowSizeStep(int,int)>($i0, $i1);

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <kotlin.text.StringsKt: kotlin.ranges.IntRange getIndices(java.lang.CharSequence)>($r1);

        goto label2;

     label1:
        $i2 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $i2 = $i2 - $i0;

        $i2 = $i2 + 1;

        $r2 = staticinvoke <kotlin.ranges.RangesKt: kotlin.ranges.IntRange until(int,int)>(0, $i2);

     label2:
        $r3 = staticinvoke <kotlin.ranges.RangesKt: kotlin.ranges.IntProgression step(kotlin.ranges.IntProgression,int)>($r2, $i1);

        $r4 = staticinvoke <kotlin.collections.CollectionsKt: kotlin.sequences.Sequence asSequence(java.lang.Iterable)>($r3);

        $r5 = new kotlin.text.StringsKt___StringsKt$windowedSequence$2;

        specialinvoke $r5.<kotlin.text.StringsKt___StringsKt$windowedSequence$2: void <init>(int,java.lang.CharSequence,kotlin.jvm.functions.Function1)>($i0, $r1, $r0);

        $r4 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>($r4, $r5);

        return $r4;
    }

    public static kotlin.sequences.Sequence windowedSequence$default(java.lang.CharSequence, int, int, boolean, int, java.lang.Object)
    {
        int $i0, $i1, $i2, $i3;
        kotlin.sequences.Sequence $r0;
        java.lang.CharSequence $r1;
        boolean $z0;
        java.lang.Object $r2;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $i2 := @parameter4: int;

        $r2 := @parameter5: java.lang.Object;

        $i3 = $i2 & 2;

        if $i3 == 0 goto label1;

        $i1 = 1;

     label1:
        $i2 = $i2 & 4;

        if $i2 == 0 goto label2;

        $z0 = 0;

     label2:
        $r0 = staticinvoke <kotlin.text.StringsKt: kotlin.sequences.Sequence windowedSequence(java.lang.CharSequence,int,int,boolean)>($r1, $i0, $i1, $z0);

        return $r0;
    }

    public static kotlin.sequences.Sequence windowedSequence$default(java.lang.CharSequence, int, int, boolean, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        int $i0, $i1, $i2, $i3;
        kotlin.jvm.functions.Function1 $r0;
        kotlin.sequences.Sequence $r1;
        java.lang.CharSequence $r2;
        boolean $z0;
        java.lang.Object $r3;

        $r2 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $r0 := @parameter4: kotlin.jvm.functions.Function1;

        $i2 := @parameter5: int;

        $r3 := @parameter6: java.lang.Object;

        $i3 = $i2 & 2;

        if $i3 == 0 goto label1;

        $i1 = 1;

     label1:
        $i2 = $i2 & 4;

        if $i2 == 0 goto label2;

        $z0 = 0;

     label2:
        $r1 = staticinvoke <kotlin.text.StringsKt: kotlin.sequences.Sequence windowedSequence(java.lang.CharSequence,int,int,boolean,kotlin.jvm.functions.Function1)>($r2, $i0, $i1, $z0, $r0);

        return $r1;
    }

    public static final java.lang.Iterable withIndex(java.lang.CharSequence)
    {
        java.lang.CharSequence $r0;
        kotlin.text.StringsKt___StringsKt$withIndex$1 $r1;
        kotlin.collections.IndexingIterable $r2;

        $r0 := @parameter0: java.lang.CharSequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r2 = new kotlin.collections.IndexingIterable;

        $r1 = new kotlin.text.StringsKt___StringsKt$withIndex$1;

        specialinvoke $r1.<kotlin.text.StringsKt___StringsKt$withIndex$1: void <init>(java.lang.CharSequence)>($r0);

        specialinvoke $r2.<kotlin.collections.IndexingIterable: void <init>(kotlin.jvm.functions.Function0)>($r1);

        return $r2;
    }

    public static final java.util.List zip(java.lang.CharSequence, java.lang.CharSequence)
    {
        java.lang.CharSequence $r0, $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        char $c2, $c3;
        java.lang.Character $r3, $r4;
        kotlin.Pair $r5;
        java.util.List r7;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: java.lang.CharSequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $i1 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i1);

        $c3 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i1);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r5 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r3, $r4);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.List zip(java.lang.CharSequence, java.lang.CharSequence, kotlin.jvm.functions.Function2)
    {
        java.lang.CharSequence $r0, $r1;
        kotlin.jvm.functions.Function2 $r2;
        int $i0, $i1;
        java.util.ArrayList $r3, r7;
        char $c2;
        java.lang.Character $r4, $r5;
        java.lang.Object $r6;
        java.util.List r8;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 := @parameter1: java.lang.CharSequence;

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $i1 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r7 = new java.util.ArrayList;

        $r3 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i1);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $c2 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i1);

        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r6 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r3;

        return r8;
    }

    public static final java.util.List zipWithNext(java.lang.CharSequence)
    {
        java.util.ArrayList $r0, r6;
        java.lang.CharSequence $r1;
        int $i0, $i1;
        java.util.List $r2;
        char $c2, $c3;
        java.lang.Character $r3, $r4;
        kotlin.Pair $r5;

        $r1 := @parameter0: java.lang.CharSequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $i0 = $i0 + -1;

        if $i0 > 0 goto label1;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r2;

     label1:
        r6 = new java.util.ArrayList;

        $r0 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        $c2 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i1);

        $i1 = $i1 + 1;

        $c3 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i1);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r5 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r3, $r4);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        goto label2;

     label3:
        $r2 = (java.util.List) $r0;

        return $r2;
    }

    public static final java.util.List zipWithNext(java.lang.CharSequence, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        java.util.ArrayList $r1, r7;
        java.lang.CharSequence $r2;
        int $i0, $i1;
        java.util.List $r3;
        char $c2;
        java.lang.Character $r4, $r5;
        java.lang.Object $r6;

        $r2 := @parameter0: java.lang.CharSequence;

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "transform");

        $i0 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        $i0 = $i0 + -1;

        if $i0 > 0 goto label1;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r3;

     label1:
        r7 = new java.util.ArrayList;

        $r1 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        $c2 = interfaceinvoke $r2.<java.lang.CharSequence: char charAt(int)>($i1);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $i1 = $i1 + 1;

        $c2 = interfaceinvoke $r2.<java.lang.CharSequence: char charAt(int)>($i1);

        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        goto label2;

     label3:
        $r3 = (java.util.List) $r1;

        return $r3;
    }

