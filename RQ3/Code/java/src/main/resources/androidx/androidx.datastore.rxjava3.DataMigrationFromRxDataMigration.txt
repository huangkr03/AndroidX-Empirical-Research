androidx.datastore.rxjava3.DataMigrationFromRxDataMigration
<androidx.datastore.rxjava3.DataMigrationFromRxDataMigration: androidx.datastore.rxjava3.RxDataMigration migration>
    public void <init>(androidx.datastore.rxjava3.RxDataMigration)
    {
        androidx.datastore.rxjava3.DataMigrationFromRxDataMigration r0;
        androidx.datastore.rxjava3.RxDataMigration r1;

        r0 := @this: androidx.datastore.rxjava3.DataMigrationFromRxDataMigration;

        r1 := @parameter0: androidx.datastore.rxjava3.RxDataMigration;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "migration");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.datastore.rxjava3.DataMigrationFromRxDataMigration: androidx.datastore.rxjava3.RxDataMigration migration> = r1;

        return;
    }

    public java.lang.Object shouldMigrate(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.datastore.rxjava3.DataMigrationFromRxDataMigration r0;
        java.lang.Object r1, r3, $r5, r6, $r12;
        kotlin.coroutines.Continuation r2, r15;
        io.reactivex.rxjava3.core.Single r4;
        boolean $z0;
        androidx.datastore.rxjava3.RxDataMigration $r8;
        io.reactivex.rxjava3.core.SingleSource $r9;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.datastore.rxjava3.DataMigrationFromRxDataMigration$shouldMigrate$1 $r11, r13;
        java.lang.IllegalStateException r14;

        r0 := @this: androidx.datastore.rxjava3.DataMigrationFromRxDataMigration;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = r2 instanceof androidx.datastore.rxjava3.DataMigrationFromRxDataMigration$shouldMigrate$1;

        if $z0 == 0 goto label1;

        $r11 = (androidx.datastore.rxjava3.DataMigrationFromRxDataMigration$shouldMigrate$1) r2;

        $i0 = $r11.<androidx.datastore.rxjava3.DataMigrationFromRxDataMigration$shouldMigrate$1: int label>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label1;

        $i2 = $r11.<androidx.datastore.rxjava3.DataMigrationFromRxDataMigration$shouldMigrate$1: int label>;

        $i3 = $i2 - -2147483648;

        $r11.<androidx.datastore.rxjava3.DataMigrationFromRxDataMigration$shouldMigrate$1: int label> = $i3;

        goto label2;

     label1:
        r13 = new androidx.datastore.rxjava3.DataMigrationFromRxDataMigration$shouldMigrate$1;

        specialinvoke r13.<androidx.datastore.rxjava3.DataMigrationFromRxDataMigration$shouldMigrate$1: void <init>(androidx.datastore.rxjava3.DataMigrationFromRxDataMigration,kotlin.coroutines.Continuation)>(r0, r2);

        $r11 = r13;

     label2:
        $r5 = $r11.<androidx.datastore.rxjava3.DataMigrationFromRxDataMigration$shouldMigrate$1: java.lang.Object result>;

        r6 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i4 = $r11.<androidx.datastore.rxjava3.DataMigrationFromRxDataMigration$shouldMigrate$1: int label>;

        tableswitch($i4)
        {
            case 0: goto label3;
            case 1: goto label4;
            default: goto label6;
        };

     label3:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r5);

        $r8 = r0.<androidx.datastore.rxjava3.DataMigrationFromRxDataMigration: androidx.datastore.rxjava3.RxDataMigration migration>;

        r4 = interfaceinvoke $r8.<androidx.datastore.rxjava3.RxDataMigration: io.reactivex.rxjava3.core.Single shouldMigrate(java.lang.Object)>(r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r4, "migration.shouldMigrate(currentData)");

        $r9 = (io.reactivex.rxjava3.core.SingleSource) r4;

        $r11.<androidx.datastore.rxjava3.DataMigrationFromRxDataMigration$shouldMigrate$1: int label> = 1;

        r15 = (kotlin.coroutines.Continuation) $r11;

        $r12 = staticinvoke <kotlinx.coroutines.rx3.RxAwaitKt: java.lang.Object await(io.reactivex.rxjava3.core.SingleSource,kotlin.coroutines.Continuation)>($r9, r15);

        if $r12 != r6 goto label5;

        return r6;

     label4:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r5);

        $r12 = $r5;

     label5:
        r3 = $r12;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "migration.shouldMigrate(currentData).await()");

        return r3;

     label6:
        r14 = new java.lang.IllegalStateException;

        specialinvoke r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r14;
    }

    public java.lang.Object migrate(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.datastore.rxjava3.DataMigrationFromRxDataMigration r0;
        java.lang.Object r1, $r6;
        kotlin.coroutines.Continuation $r2;
        io.reactivex.rxjava3.core.Single r3;
        androidx.datastore.rxjava3.RxDataMigration $r4;
        io.reactivex.rxjava3.core.SingleSource $r5;

        r0 := @this: androidx.datastore.rxjava3.DataMigrationFromRxDataMigration;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = r0.<androidx.datastore.rxjava3.DataMigrationFromRxDataMigration: androidx.datastore.rxjava3.RxDataMigration migration>;

        r3 = interfaceinvoke $r4.<androidx.datastore.rxjava3.RxDataMigration: io.reactivex.rxjava3.core.Single migrate(java.lang.Object)>(r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "migration.migrate(currentData)");

        $r5 = (io.reactivex.rxjava3.core.SingleSource) r3;

        $r6 = staticinvoke <kotlinx.coroutines.rx3.RxAwaitKt: java.lang.Object await(io.reactivex.rxjava3.core.SingleSource,kotlin.coroutines.Continuation)>($r5, $r2);

        return $r6;
    }

    public java.lang.Object cleanUp(kotlin.coroutines.Continuation)
    {
        androidx.datastore.rxjava3.DataMigrationFromRxDataMigration r0;
        kotlin.coroutines.Continuation $r1;
        io.reactivex.rxjava3.core.Completable r2;
        androidx.datastore.rxjava3.RxDataMigration $r3;
        io.reactivex.rxjava3.core.CompletableSource $r4;
        java.lang.Object $r5, $r6;
        kotlin.Unit $r7;

        r0 := @this: androidx.datastore.rxjava3.DataMigrationFromRxDataMigration;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

        $r3 = r0.<androidx.datastore.rxjava3.DataMigrationFromRxDataMigration: androidx.datastore.rxjava3.RxDataMigration migration>;

        r2 = interfaceinvoke $r3.<androidx.datastore.rxjava3.RxDataMigration: io.reactivex.rxjava3.core.Completable cleanUp()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "migration.cleanUp()");

        $r4 = (io.reactivex.rxjava3.core.CompletableSource) r2;

        $r5 = staticinvoke <kotlinx.coroutines.rx3.RxAwaitKt: java.lang.Object await(io.reactivex.rxjava3.core.CompletableSource,kotlin.coroutines.Continuation)>($r4, $r1);

        $r6 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r5 != $r6 goto label1;

        return $r5;

     label1:
        $r7 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r7;
    }

androidx.datastore.rxjava3.DataMigrationFromRxDataMigration$shouldMigrate$1
<androidx.datastore.rxjava3.DataMigrationFromRxDataMigration$shouldMigrate$1: java.lang.Object result>
<androidx.datastore.rxjava3.DataMigrationFromRxDataMigration$shouldMigrate$1: androidx.datastore.rxjava3.DataMigrationFromRxDataMigration this$0>
<androidx.datastore.rxjava3.DataMigrationFromRxDataMigration$shouldMigrate$1: int label>
    void <init>(androidx.datastore.rxjava3.DataMigrationFromRxDataMigration, kotlin.coroutines.Continuation)
    {
        androidx.datastore.rxjava3.DataMigrationFromRxDataMigration$shouldMigrate$1 r0;
        androidx.datastore.rxjava3.DataMigrationFromRxDataMigration r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.datastore.rxjava3.DataMigrationFromRxDataMigration$shouldMigrate$1;

        r1 := @parameter0: androidx.datastore.rxjava3.DataMigrationFromRxDataMigration;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.datastore.rxjava3.DataMigrationFromRxDataMigration$shouldMigrate$1: androidx.datastore.rxjava3.DataMigrationFromRxDataMigration this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.datastore.rxjava3.DataMigrationFromRxDataMigration$shouldMigrate$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.datastore.rxjava3.DataMigrationFromRxDataMigration $r3;

        r0 := @this: androidx.datastore.rxjava3.DataMigrationFromRxDataMigration$shouldMigrate$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.datastore.rxjava3.DataMigrationFromRxDataMigration$shouldMigrate$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.datastore.rxjava3.DataMigrationFromRxDataMigration$shouldMigrate$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.datastore.rxjava3.DataMigrationFromRxDataMigration$shouldMigrate$1: int label> = $i1;

        $r3 = r0.<androidx.datastore.rxjava3.DataMigrationFromRxDataMigration$shouldMigrate$1: androidx.datastore.rxjava3.DataMigrationFromRxDataMigration this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.datastore.rxjava3.DataMigrationFromRxDataMigration: java.lang.Object shouldMigrate(java.lang.Object,kotlin.coroutines.Continuation)>(null, $r2);

        return $r4;
    }

