androidx.camera.camera2.internal.Camera2CaptureOptionUnpacker
<androidx.camera.camera2.internal.Camera2CaptureOptionUnpacker: androidx.camera.camera2.internal.Camera2CaptureOptionUnpacker INSTANCE>
    void <init>()
    {
        androidx.camera.camera2.internal.Camera2CaptureOptionUnpacker r0;

        r0 := @this: androidx.camera.camera2.internal.Camera2CaptureOptionUnpacker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void unpack(androidx.camera.core.impl.UseCaseConfig, androidx.camera.core.impl.CaptureConfig$Builder)
    {
        androidx.camera.camera2.internal.Camera2CaptureOptionUnpacker r0;
        androidx.camera.core.impl.UseCaseConfig r1;
        androidx.camera.core.impl.CaptureConfig$Builder r2;
        androidx.camera.core.impl.CaptureConfig r3, $r5;
        androidx.camera.camera2.impl.Camera2ImplConfig r4, r13;
        int $i0, i1;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback $r7, $r8;
        androidx.camera.camera2.internal.CaptureCallbackContainer $r9;
        androidx.camera.camera2.interop.CaptureRequestOptions $r10;
        java.util.List $r11;
        java.lang.Object r12;
        androidx.camera.core.impl.Config r14, r15, r16;

        r0 := @this: androidx.camera.camera2.internal.Camera2CaptureOptionUnpacker;

        r1 := @parameter0: androidx.camera.core.impl.UseCaseConfig;

        r2 := @parameter1: androidx.camera.core.impl.CaptureConfig$Builder;

        r3 = interfaceinvoke r1.<androidx.camera.core.impl.UseCaseConfig: androidx.camera.core.impl.CaptureConfig getDefaultCaptureConfig(androidx.camera.core.impl.CaptureConfig)>(null);

        r12 = staticinvoke <androidx.camera.core.impl.OptionsBundle: androidx.camera.core.impl.OptionsBundle emptyBundle()>();

        $r5 = staticinvoke <androidx.camera.core.impl.CaptureConfig: androidx.camera.core.impl.CaptureConfig defaultEmptyCaptureConfig()>();

        i1 = virtualinvoke $r5.<androidx.camera.core.impl.CaptureConfig: int getTemplateType()>();

        if r3 == null goto label1;

        i1 = virtualinvoke r3.<androidx.camera.core.impl.CaptureConfig: int getTemplateType()>();

        $r11 = virtualinvoke r3.<androidx.camera.core.impl.CaptureConfig: java.util.List getCameraCaptureCallbacks()>();

        virtualinvoke r2.<androidx.camera.core.impl.CaptureConfig$Builder: void addAllCameraCaptureCallbacks(java.util.Collection)>($r11);

        r12 = virtualinvoke r3.<androidx.camera.core.impl.CaptureConfig: androidx.camera.core.impl.Config getImplementationOptions()>();

     label1:
        r14 = (androidx.camera.core.impl.Config) r12;

        virtualinvoke r2.<androidx.camera.core.impl.CaptureConfig$Builder: void setImplementationOptions(androidx.camera.core.impl.Config)>(r14);

        r13 = new androidx.camera.camera2.impl.Camera2ImplConfig;

        r15 = (androidx.camera.core.impl.Config) r1;

        specialinvoke r13.<androidx.camera.camera2.impl.Camera2ImplConfig: void <init>(androidx.camera.core.impl.Config)>(r15);

        r4 = r13;

        $i0 = virtualinvoke r4.<androidx.camera.camera2.impl.Camera2ImplConfig: int getCaptureRequestTemplate(int)>(i1);

        virtualinvoke r2.<androidx.camera.core.impl.CaptureConfig$Builder: void setTemplateType(int)>($i0);

        $r7 = staticinvoke <androidx.camera.camera2.internal.Camera2CaptureCallbacks: android.hardware.camera2.CameraCaptureSession$CaptureCallback createNoOpCallback()>();

        $r8 = virtualinvoke r4.<androidx.camera.camera2.impl.Camera2ImplConfig: android.hardware.camera2.CameraCaptureSession$CaptureCallback getSessionCaptureCallback(android.hardware.camera2.CameraCaptureSession$CaptureCallback)>($r7);

        $r9 = staticinvoke <androidx.camera.camera2.internal.CaptureCallbackContainer: androidx.camera.camera2.internal.CaptureCallbackContainer create(android.hardware.camera2.CameraCaptureSession$CaptureCallback)>($r8);

        virtualinvoke r2.<androidx.camera.core.impl.CaptureConfig$Builder: void addCameraCaptureCallback(androidx.camera.core.impl.CameraCaptureCallback)>($r9);

        $r10 = virtualinvoke r4.<androidx.camera.camera2.impl.Camera2ImplConfig: androidx.camera.camera2.interop.CaptureRequestOptions getCaptureRequestOptions()>();

        r16 = (androidx.camera.core.impl.Config) $r10;

        virtualinvoke r2.<androidx.camera.core.impl.CaptureConfig$Builder: void addImplementationOptions(androidx.camera.core.impl.Config)>(r16);

        return;
    }

    static void <clinit>()
    {
        androidx.camera.camera2.internal.Camera2CaptureOptionUnpacker $r0;

        $r0 = new androidx.camera.camera2.internal.Camera2CaptureOptionUnpacker;

        specialinvoke $r0.<androidx.camera.camera2.internal.Camera2CaptureOptionUnpacker: void <init>()>();

        <androidx.camera.camera2.internal.Camera2CaptureOptionUnpacker: androidx.camera.camera2.internal.Camera2CaptureOptionUnpacker INSTANCE> = $r0;

        return;
    }

