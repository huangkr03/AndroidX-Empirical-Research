androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreDelegateKt
    public static final kotlin.properties.ReadOnlyProperty rxPreferencesDataStore(java.lang.String, androidx.datastore.core.handlers.ReplaceFileCorruptionHandler, kotlin.jvm.functions.Function1, io.reactivex.rxjava3.core.Scheduler)
    {
        java.lang.String r0;
        androidx.datastore.core.handlers.ReplaceFileCorruptionHandler r1;
        kotlin.jvm.functions.Function1 r2;
        io.reactivex.rxjava3.core.Scheduler r3;
        androidx.datastore.preferences.rxjava3.RxDataStoreSingletonDelegate $r4;
        kotlin.properties.ReadOnlyProperty $r5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: androidx.datastore.core.handlers.ReplaceFileCorruptionHandler;

        r2 := @parameter2: kotlin.jvm.functions.Function1;

        r3 := @parameter3: io.reactivex.rxjava3.core.Scheduler;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "name");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "produceMigrations");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "scheduler");

        $r4 = new androidx.datastore.preferences.rxjava3.RxDataStoreSingletonDelegate;

        specialinvoke $r4.<androidx.datastore.preferences.rxjava3.RxDataStoreSingletonDelegate: void <init>(java.lang.String,androidx.datastore.core.handlers.ReplaceFileCorruptionHandler,kotlin.jvm.functions.Function1,io.reactivex.rxjava3.core.Scheduler)>(r0, r1, r2, r3);

        $r5 = (kotlin.properties.ReadOnlyProperty) $r4;

        return $r5;
    }

    public static kotlin.properties.ReadOnlyProperty rxPreferencesDataStore$default(java.lang.String, androidx.datastore.core.handlers.ReplaceFileCorruptionHandler, kotlin.jvm.functions.Function1, io.reactivex.rxjava3.core.Scheduler, int, java.lang.Object)
    {
        java.lang.String r0;
        int i0, $i1, $i2, $i3;
        java.lang.Object r1;
        io.reactivex.rxjava3.core.Scheduler r2, r7;
        kotlin.properties.ReadOnlyProperty $r3;
        androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreDelegateKt$rxPreferencesDataStore$1 $r4;
        androidx.datastore.core.handlers.ReplaceFileCorruptionHandler r5;
        kotlin.jvm.functions.Function1 r6;

        r0 := @parameter0: java.lang.String;

        r5 := @parameter1: androidx.datastore.core.handlers.ReplaceFileCorruptionHandler;

        r6 := @parameter2: kotlin.jvm.functions.Function1;

        r7 := @parameter3: io.reactivex.rxjava3.core.Scheduler;

        i0 := @parameter4: int;

        r1 := @parameter5: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r5 = null;

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        $r4 = <androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreDelegateKt$rxPreferencesDataStore$1: androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreDelegateKt$rxPreferencesDataStore$1 INSTANCE>;

        r6 = (kotlin.jvm.functions.Function1) $r4;

     label2:
        $i3 = i0 & 8;

        if $i3 == 0 goto label3;

        r2 = staticinvoke <io.reactivex.rxjava3.schedulers.Schedulers: io.reactivex.rxjava3.core.Scheduler io()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "io()");

        r7 = r2;

     label3:
        $r3 = staticinvoke <androidx.datastore.preferences.rxjava3.RxPreferenceDataStoreDelegateKt: kotlin.properties.ReadOnlyProperty rxPreferencesDataStore(java.lang.String,androidx.datastore.core.handlers.ReplaceFileCorruptionHandler,kotlin.jvm.functions.Function1,io.reactivex.rxjava3.core.Scheduler)>(r0, r5, r6, r7);

        return $r3;
    }

