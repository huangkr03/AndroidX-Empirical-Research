androidx.lifecycle.LegacySavedStateHandleController
<androidx.lifecycle.LegacySavedStateHandleController: androidx.lifecycle.LegacySavedStateHandleController INSTANCE>
<androidx.lifecycle.LegacySavedStateHandleController: java.lang.String TAG_SAVED_STATE_HANDLE_CONTROLLER>
    private void <init>()
    {
        androidx.lifecycle.LegacySavedStateHandleController r0;

        r0 := @this: androidx.lifecycle.LegacySavedStateHandleController;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry, androidx.lifecycle.Lifecycle, java.lang.String, android.os.Bundle)
    {
        androidx.savedstate.SavedStateRegistry r0;
        androidx.lifecycle.Lifecycle r1;
        java.lang.String r2;
        android.os.Bundle r3, r4;
        androidx.lifecycle.SavedStateHandle r5;
        androidx.lifecycle.SavedStateHandleController r6, $r8;
        androidx.lifecycle.SavedStateHandle$Companion $r7;
        androidx.lifecycle.LegacySavedStateHandleController $r9;

        r0 := @parameter0: androidx.savedstate.SavedStateRegistry;

        r1 := @parameter1: androidx.lifecycle.Lifecycle;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.os.Bundle;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "registry");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "lifecycle");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r2);

        r4 = virtualinvoke r0.<androidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)>(r2);

        $r7 = <androidx.lifecycle.SavedStateHandle: androidx.lifecycle.SavedStateHandle$Companion Companion>;

        r5 = virtualinvoke $r7.<androidx.lifecycle.SavedStateHandle$Companion: androidx.lifecycle.SavedStateHandle createHandle(android.os.Bundle,android.os.Bundle)>(r4, r3);

        $r8 = new androidx.lifecycle.SavedStateHandleController;

        specialinvoke $r8.<androidx.lifecycle.SavedStateHandleController: void <init>(java.lang.String,androidx.lifecycle.SavedStateHandle)>(r2, r5);

        r6 = $r8;

        virtualinvoke r6.<androidx.lifecycle.SavedStateHandleController: void attachToLifecycle(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle)>(r0, r1);

        $r9 = <androidx.lifecycle.LegacySavedStateHandleController: androidx.lifecycle.LegacySavedStateHandleController INSTANCE>;

        specialinvoke $r9.<androidx.lifecycle.LegacySavedStateHandleController: void tryToAddRecreator(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle)>(r0, r1);

        return r6;
    }

    public static final void attachHandleIfNeeded(androidx.lifecycle.ViewModel, androidx.savedstate.SavedStateRegistry, androidx.lifecycle.Lifecycle)
    {
        androidx.lifecycle.ViewModel r0;
        androidx.savedstate.SavedStateRegistry r1;
        androidx.lifecycle.Lifecycle r2;
        androidx.lifecycle.SavedStateHandleController r3;
        java.lang.Object $r4;
        boolean $z0;
        androidx.lifecycle.LegacySavedStateHandleController $r5;

        r0 := @parameter0: androidx.lifecycle.ViewModel;

        r1 := @parameter1: androidx.savedstate.SavedStateRegistry;

        r2 := @parameter2: androidx.lifecycle.Lifecycle;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "viewModel");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "registry");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "lifecycle");

        $r4 = virtualinvoke r0.<androidx.lifecycle.ViewModel: java.lang.Object getTag(java.lang.String)>("androidx.lifecycle.savedstate.vm.tag");

        r3 = (androidx.lifecycle.SavedStateHandleController) $r4;

        if r3 == null goto label1;

        $z0 = virtualinvoke r3.<androidx.lifecycle.SavedStateHandleController: boolean isAttached()>();

        if $z0 != 0 goto label1;

        virtualinvoke r3.<androidx.lifecycle.SavedStateHandleController: void attachToLifecycle(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle)>(r1, r2);

        $r5 = <androidx.lifecycle.LegacySavedStateHandleController: androidx.lifecycle.LegacySavedStateHandleController INSTANCE>;

        specialinvoke $r5.<androidx.lifecycle.LegacySavedStateHandleController: void tryToAddRecreator(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle)>(r1, r2);

     label1:
        return;
    }

    private final void tryToAddRecreator(androidx.savedstate.SavedStateRegistry, androidx.lifecycle.Lifecycle)
    {
        androidx.lifecycle.LegacySavedStateHandleController r0;
        androidx.savedstate.SavedStateRegistry r1;
        androidx.lifecycle.Lifecycle r2;
        androidx.lifecycle.Lifecycle$State r3, $r4, $r5;
        boolean $z0;
        androidx.lifecycle.LegacySavedStateHandleController$tryToAddRecreator$1 $r6;
        androidx.lifecycle.LifecycleObserver $r7;

        r0 := @this: androidx.lifecycle.LegacySavedStateHandleController;

        r1 := @parameter0: androidx.savedstate.SavedStateRegistry;

        r2 := @parameter1: androidx.lifecycle.Lifecycle;

        r3 = virtualinvoke r2.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r4 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State INITIALIZED>;

        if r3 == $r4 goto label1;

        $r5 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State STARTED>;

        $z0 = virtualinvoke r3.<androidx.lifecycle.Lifecycle$State: boolean isAtLeast(androidx.lifecycle.Lifecycle$State)>($r5);

        if $z0 == 0 goto label2;

     label1:
        virtualinvoke r1.<androidx.savedstate.SavedStateRegistry: void runOnNextRecreation(java.lang.Class)>(class "Landroidx/lifecycle/LegacySavedStateHandleController$OnRecreation;");

        goto label3;

     label2:
        $r6 = new androidx.lifecycle.LegacySavedStateHandleController$tryToAddRecreator$1;

        specialinvoke $r6.<androidx.lifecycle.LegacySavedStateHandleController$tryToAddRecreator$1: void <init>(androidx.lifecycle.Lifecycle,androidx.savedstate.SavedStateRegistry)>(r2, r1);

        $r7 = (androidx.lifecycle.LifecycleObserver) $r6;

        virtualinvoke r2.<androidx.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)>($r7);

     label3:
        return;
    }

    static void <clinit>()
    {
        androidx.lifecycle.LegacySavedStateHandleController $r0;

        $r0 = new androidx.lifecycle.LegacySavedStateHandleController;

        specialinvoke $r0.<androidx.lifecycle.LegacySavedStateHandleController: void <init>()>();

        <androidx.lifecycle.LegacySavedStateHandleController: androidx.lifecycle.LegacySavedStateHandleController INSTANCE> = $r0;

        return;
    }

androidx.lifecycle.LegacySavedStateHandleController$OnRecreation
    public void <init>()
    {
        androidx.lifecycle.LegacySavedStateHandleController$OnRecreation r0;

        r0 := @this: androidx.lifecycle.LegacySavedStateHandleController$OnRecreation;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onRecreated(androidx.savedstate.SavedStateRegistryOwner)
    {
        androidx.lifecycle.LegacySavedStateHandleController$OnRecreation r0;
        androidx.savedstate.SavedStateRegistryOwner r1;
        androidx.lifecycle.ViewModelStore r2;
        java.util.Iterator r3;
        java.lang.String r4, $r13, $r14;
        androidx.lifecycle.ViewModel r5;
        boolean $z0, $z1, $z2, $z4;
        androidx.lifecycle.ViewModelStoreOwner $r6;
        java.util.Set $r7, $r8;
        java.util.Collection $r9;
        java.lang.Object $r10;
        androidx.lifecycle.Lifecycle $r11;
        java.lang.IllegalStateException $r12;
        androidx.savedstate.SavedStateRegistry $r15;

        r0 := @this: androidx.lifecycle.LegacySavedStateHandleController$OnRecreation;

        r1 := @parameter0: androidx.savedstate.SavedStateRegistryOwner;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "owner");

        $z0 = r1 instanceof androidx.lifecycle.ViewModelStoreOwner;

        if $z0 != 0 goto label1;

        $r14 = "Internal error: OnRecreation should be registered only on components that implement ViewModelStoreOwner";

        $r12 = new java.lang.IllegalStateException;

        $r13 = virtualinvoke $r14.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label1:
        $r6 = (androidx.lifecycle.ViewModelStoreOwner) r1;

        r2 = interfaceinvoke $r6.<androidx.lifecycle.ViewModelStoreOwner: androidx.lifecycle.ViewModelStore getViewModelStore()>();

        $r15 = interfaceinvoke r1.<androidx.savedstate.SavedStateRegistryOwner: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()>();

        $r7 = virtualinvoke r2.<androidx.lifecycle.ViewModelStore: java.util.Set keys()>();

        r3 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r10;

        r5 = virtualinvoke r2.<androidx.lifecycle.ViewModelStore: androidx.lifecycle.ViewModel get(java.lang.String)>(r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r5);

        $r11 = interfaceinvoke r1.<androidx.savedstate.SavedStateRegistryOwner: androidx.lifecycle.Lifecycle getLifecycle()>();

        staticinvoke <androidx.lifecycle.LegacySavedStateHandleController: void attachHandleIfNeeded(androidx.lifecycle.ViewModel,androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle)>(r5, $r15, $r11);

        goto label2;

     label3:
        $r8 = virtualinvoke r2.<androidx.lifecycle.ViewModelStore: java.util.Set keys()>();

        $r9 = (java.util.Collection) $r8;

        $z2 = interfaceinvoke $r9.<java.util.Collection: boolean isEmpty()>();

        if $z2 != 0 goto label4;

        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        if $z4 == 0 goto label6;

        virtualinvoke $r15.<androidx.savedstate.SavedStateRegistry: void runOnNextRecreation(java.lang.Class)>(class "Landroidx/lifecycle/LegacySavedStateHandleController$OnRecreation;");

     label6:
        return;
    }

androidx.lifecycle.LegacySavedStateHandleController$tryToAddRecreator$1
<androidx.lifecycle.LegacySavedStateHandleController$tryToAddRecreator$1: androidx.lifecycle.Lifecycle $lifecycle>
<androidx.lifecycle.LegacySavedStateHandleController$tryToAddRecreator$1: androidx.savedstate.SavedStateRegistry $registry>
    void <init>(androidx.lifecycle.Lifecycle, androidx.savedstate.SavedStateRegistry)
    {
        androidx.lifecycle.LegacySavedStateHandleController$tryToAddRecreator$1 r0;
        androidx.lifecycle.Lifecycle $r1;
        androidx.savedstate.SavedStateRegistry $r2;

        r0 := @this: androidx.lifecycle.LegacySavedStateHandleController$tryToAddRecreator$1;

        $r1 := @parameter0: androidx.lifecycle.Lifecycle;

        $r2 := @parameter1: androidx.savedstate.SavedStateRegistry;

        r0.<androidx.lifecycle.LegacySavedStateHandleController$tryToAddRecreator$1: androidx.lifecycle.Lifecycle $lifecycle> = $r1;

        r0.<androidx.lifecycle.LegacySavedStateHandleController$tryToAddRecreator$1: androidx.savedstate.SavedStateRegistry $registry> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onStateChanged(androidx.lifecycle.LifecycleOwner, androidx.lifecycle.Lifecycle$Event)
    {
        androidx.lifecycle.LegacySavedStateHandleController$tryToAddRecreator$1 r0;
        androidx.lifecycle.LifecycleOwner r1;
        androidx.lifecycle.Lifecycle$Event r2, $r3;
        androidx.lifecycle.LifecycleObserver $r4;
        androidx.lifecycle.Lifecycle $r5;
        androidx.savedstate.SavedStateRegistry $r6;

        r0 := @this: androidx.lifecycle.LegacySavedStateHandleController$tryToAddRecreator$1;

        r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        r2 := @parameter1: androidx.lifecycle.Lifecycle$Event;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "source");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "event");

        $r3 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START>;

        if r2 != $r3 goto label1;

        $r5 = r0.<androidx.lifecycle.LegacySavedStateHandleController$tryToAddRecreator$1: androidx.lifecycle.Lifecycle $lifecycle>;

        $r4 = (androidx.lifecycle.LifecycleObserver) r0;

        virtualinvoke $r5.<androidx.lifecycle.Lifecycle: void removeObserver(androidx.lifecycle.LifecycleObserver)>($r4);

        $r6 = r0.<androidx.lifecycle.LegacySavedStateHandleController$tryToAddRecreator$1: androidx.savedstate.SavedStateRegistry $registry>;

        virtualinvoke $r6.<androidx.savedstate.SavedStateRegistry: void runOnNextRecreation(java.lang.Class)>(class "Landroidx/lifecycle/LegacySavedStateHandleController$OnRecreation;");

     label1:
        return;
    }

