androidx.work.impl.constraints.trackers.ConstraintTracker
<androidx.work.impl.constraints.trackers.ConstraintTracker: androidx.work.impl.utils.taskexecutor.TaskExecutor taskExecutor>
<androidx.work.impl.constraints.trackers.ConstraintTracker: android.content.Context appContext>
<androidx.work.impl.constraints.trackers.ConstraintTracker: java.lang.Object lock>
<androidx.work.impl.constraints.trackers.ConstraintTracker: java.util.LinkedHashSet listeners>
<androidx.work.impl.constraints.trackers.ConstraintTracker: java.lang.Object currentState>
    protected void <init>(android.content.Context, androidx.work.impl.utils.taskexecutor.TaskExecutor)
    {
        androidx.work.impl.constraints.trackers.ConstraintTracker r0;
        android.content.Context r1, $r3;
        androidx.work.impl.utils.taskexecutor.TaskExecutor r2;
        java.lang.Object $r4;
        java.util.LinkedHashSet $r5;

        r0 := @this: androidx.work.impl.constraints.trackers.ConstraintTracker;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.work.impl.utils.taskexecutor.TaskExecutor;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "taskExecutor");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.work.impl.constraints.trackers.ConstraintTracker: androidx.work.impl.utils.taskexecutor.TaskExecutor taskExecutor> = r2;

        $r3 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "context.applicationContext");

        r0.<androidx.work.impl.constraints.trackers.ConstraintTracker: android.content.Context appContext> = $r3;

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<androidx.work.impl.constraints.trackers.ConstraintTracker: java.lang.Object lock> = $r4;

        $r5 = new java.util.LinkedHashSet;

        specialinvoke $r5.<java.util.LinkedHashSet: void <init>()>();

        r0.<androidx.work.impl.constraints.trackers.ConstraintTracker: java.util.LinkedHashSet listeners> = $r5;

        return;
    }

    protected final android.content.Context getAppContext()
    {
        androidx.work.impl.constraints.trackers.ConstraintTracker r0;
        android.content.Context $r1;

        r0 := @this: androidx.work.impl.constraints.trackers.ConstraintTracker;

        $r1 = r0.<androidx.work.impl.constraints.trackers.ConstraintTracker: android.content.Context appContext>;

        return $r1;
    }

    public final void addListener(androidx.work.impl.constraints.ConstraintListener)
    {
        androidx.work.impl.constraints.trackers.ConstraintTracker r0;
        androidx.work.impl.constraints.ConstraintListener r1;
        java.lang.Object r2, $r5, $r6, $r14;
        java.util.LinkedHashSet $r3, $r4;
        boolean $z0;
        int $i0;
        androidx.work.Logger $r7;
        java.lang.String $r8, $r11, $r16;
        java.lang.StringBuilder $r9, $r12, $r13, $r15;
        java.lang.Class $r10;
        java.lang.Throwable $r17;
        kotlin.Unit $r18;

        r0 := @this: androidx.work.impl.constraints.trackers.ConstraintTracker;

        r1 := @parameter0: androidx.work.impl.constraints.ConstraintListener;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "listener");

        r2 = r0.<androidx.work.impl.constraints.trackers.ConstraintTracker: java.lang.Object lock>;

        entermonitor r2;

     label1:
        $r3 = r0.<androidx.work.impl.constraints.trackers.ConstraintTracker: java.util.LinkedHashSet listeners>;

        $z0 = virtualinvoke $r3.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        $r4 = r0.<androidx.work.impl.constraints.trackers.ConstraintTracker: java.util.LinkedHashSet listeners>;

        $i0 = virtualinvoke $r4.<java.util.LinkedHashSet: int size()>();

        if $i0 != 1 goto label2;

        $r6 = virtualinvoke r0.<androidx.work.impl.constraints.trackers.ConstraintTracker: java.lang.Object getInitialState()>();

        r0.<androidx.work.impl.constraints.trackers.ConstraintTracker: java.lang.Object currentState> = $r6;

        $r7 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r8 = staticinvoke <androidx.work.impl.constraints.trackers.ConstraintTrackerKt: java.lang.String access$getTAG$p()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getSimpleName()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": initial state = ");

        $r14 = r0.<androidx.work.impl.constraints.trackers.ConstraintTracker: java.lang.Object currentState>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<androidx.work.Logger: void debug(java.lang.String,java.lang.String)>($r8, $r16);

        virtualinvoke r0.<androidx.work.impl.constraints.trackers.ConstraintTracker: void startTracking()>();

     label2:
        $r5 = r0.<androidx.work.impl.constraints.trackers.ConstraintTracker: java.lang.Object currentState>;

        interfaceinvoke r1.<androidx.work.impl.constraints.ConstraintListener: void onConstraintChanged(java.lang.Object)>($r5);

     label3:
        $r18 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label4:
        exitmonitor r2;

        goto label7;

     label5:
        $r17 := @caughtexception;

     label6:
        exitmonitor r2;

        throw $r17;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public final void removeListener(androidx.work.impl.constraints.ConstraintListener)
    {
        androidx.work.impl.constraints.trackers.ConstraintTracker r0;
        androidx.work.impl.constraints.ConstraintListener r1;
        java.lang.Object r2;
        java.util.LinkedHashSet $r3, $r4;
        boolean $z0, $z1;
        java.lang.Throwable $r5;
        kotlin.Unit $r6;

        r0 := @this: androidx.work.impl.constraints.trackers.ConstraintTracker;

        r1 := @parameter0: androidx.work.impl.constraints.ConstraintListener;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "listener");

        r2 = r0.<androidx.work.impl.constraints.trackers.ConstraintTracker: java.lang.Object lock>;

        entermonitor r2;

     label1:
        $r3 = r0.<androidx.work.impl.constraints.trackers.ConstraintTracker: java.util.LinkedHashSet listeners>;

        $z0 = virtualinvoke $r3.<java.util.LinkedHashSet: boolean remove(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r4 = r0.<androidx.work.impl.constraints.trackers.ConstraintTracker: java.util.LinkedHashSet listeners>;

        $z1 = virtualinvoke $r4.<java.util.LinkedHashSet: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        virtualinvoke r0.<androidx.work.impl.constraints.trackers.ConstraintTracker: void stopTracking()>();

     label2:
        $r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label3:
        exitmonitor r2;

        goto label6;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor r2;

        throw $r5;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public final java.lang.Object getState()
    {
        androidx.work.impl.constraints.trackers.ConstraintTracker r0;
        java.lang.Object $r1;

        r0 := @this: androidx.work.impl.constraints.trackers.ConstraintTracker;

        $r1 = r0.<androidx.work.impl.constraints.trackers.ConstraintTracker: java.lang.Object currentState>;

        if $r1 != null goto label1;

        $r1 = virtualinvoke r0.<androidx.work.impl.constraints.trackers.ConstraintTracker: java.lang.Object getInitialState()>();

     label1:
        return $r1;
    }

    public final void setState(java.lang.Object)
    {
        androidx.work.impl.constraints.trackers.ConstraintTracker r0;
        java.lang.Object r1, r2, $r4, $r10;
        java.util.List r3;
        java.util.LinkedHashSet $r5;
        java.lang.Iterable $r6;
        androidx.work.impl.utils.taskexecutor.TaskExecutor $r7;
        java.util.concurrent.Executor $r8;
        java.lang.Runnable $r9;
        boolean $z0;
        java.lang.Throwable $r11;
        kotlin.Unit $r12;

        r0 := @this: androidx.work.impl.constraints.trackers.ConstraintTracker;

        r1 := @parameter0: java.lang.Object;

        r2 = r0.<androidx.work.impl.constraints.trackers.ConstraintTracker: java.lang.Object lock>;

        entermonitor r2;

     label1:
        $r4 = r0.<androidx.work.impl.constraints.trackers.ConstraintTracker: java.lang.Object currentState>;

        if $r4 == null goto label3;

        $r10 = r0.<androidx.work.impl.constraints.trackers.ConstraintTracker: java.lang.Object currentState>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r10, r1);

        if $z0 == 0 goto label3;

     label2:
        exitmonitor r2;

        return;

     label3:
        r0.<androidx.work.impl.constraints.trackers.ConstraintTracker: java.lang.Object currentState> = r1;

        $r5 = r0.<androidx.work.impl.constraints.trackers.ConstraintTracker: java.util.LinkedHashSet listeners>;

        $r6 = (java.lang.Iterable) $r5;

        r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>($r6);

        $r7 = r0.<androidx.work.impl.constraints.trackers.ConstraintTracker: androidx.work.impl.utils.taskexecutor.TaskExecutor taskExecutor>;

        $r8 = interfaceinvoke $r7.<androidx.work.impl.utils.taskexecutor.TaskExecutor: java.util.concurrent.Executor getMainThreadExecutor()>();

        $r9 = dynamicinvoke "run" <java.lang.Runnable (java.util.List,androidx.work.impl.constraints.trackers.ConstraintTracker)>(r3, r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.work.impl.constraints.trackers.ConstraintTracker: void _set_state_$lambda$4$lambda$3(java.util.List,androidx.work.impl.constraints.trackers.ConstraintTracker)>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r8.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r9);

        $r12 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label4:
        exitmonitor r2;

        goto label7;

     label5:
        $r11 := @caughtexception;

     label6:
        exitmonitor r2;

        throw $r11;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

<androidx.work.impl.constraints.trackers.ConstraintTracker: java.lang.Object getInitialState()>
<androidx.work.impl.constraints.trackers.ConstraintTracker: void startTracking()>
<androidx.work.impl.constraints.trackers.ConstraintTracker: void stopTracking()>
    private static final void _set_state_$lambda$4$lambda$3(java.util.List, androidx.work.impl.constraints.trackers.ConstraintTracker)
    {
        java.util.List $r0;
        androidx.work.impl.constraints.trackers.ConstraintTracker r1;
        java.lang.Iterable $r2;
        java.util.Iterator r3;
        java.lang.Object r4, $r6;
        androidx.work.impl.constraints.ConstraintListener r5;
        boolean $z2;

        $r0 := @parameter0: java.util.List;

        r1 := @parameter1: androidx.work.impl.constraints.trackers.ConstraintTracker;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$listenersList");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "this$0");

        $r2 = (java.lang.Iterable) $r0;

        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.work.impl.constraints.ConstraintListener) r4;

        $r6 = r1.<androidx.work.impl.constraints.trackers.ConstraintTracker: java.lang.Object currentState>;

        interfaceinvoke r5.<androidx.work.impl.constraints.ConstraintListener: void onConstraintChanged(java.lang.Object)>($r6);

        goto label1;

     label2:
        return;
    }

