kotlinx.coroutines.BuildersKt__BuildersKt
    public static final java.lang.Object runBlocking(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2) throws java.lang.InterruptedException
    {
        kotlin.jvm.functions.Function2 $r0;
        kotlin.coroutines.CoroutineContext $r1;
        java.lang.Thread $r2;
        kotlin.coroutines.ContinuationInterceptor$Key $r3;
        kotlin.coroutines.CoroutineContext$Element $r4;
        kotlin.coroutines.ContinuationInterceptor $r5;
        kotlinx.coroutines.ThreadLocalEventLoop $r6;
        kotlinx.coroutines.EventLoop $r7, $r8;
        kotlinx.coroutines.GlobalScope $r9;
        boolean $z0;
        kotlinx.coroutines.BlockingCoroutine $r10;
        kotlinx.coroutines.CoroutineStart $r11;
        java.lang.Object $r12;

        $r1 := @parameter0: kotlin.coroutines.CoroutineContext;

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "block");

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r3 = <kotlin.coroutines.ContinuationInterceptor: kotlin.coroutines.ContinuationInterceptor$Key Key>;

        $r4 = interfaceinvoke $r1.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)>($r3);

        $r5 = (kotlin.coroutines.ContinuationInterceptor) $r4;

        if $r5 != null goto label02;

        $r6 = <kotlinx.coroutines.ThreadLocalEventLoop: kotlinx.coroutines.ThreadLocalEventLoop INSTANCE>;

        $r7 = virtualinvoke $r6.<kotlinx.coroutines.ThreadLocalEventLoop: kotlinx.coroutines.EventLoop getEventLoop$third_party_kotlin_kotlinx_coroutines_kotlinx_coroutines()>();

        $r8 = $r7;

        $r9 = <kotlinx.coroutines.GlobalScope: kotlinx.coroutines.GlobalScope INSTANCE>;

        $r1 = interfaceinvoke $r1.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)>($r7);

        $r1 = staticinvoke <kotlinx.coroutines.CoroutineContextKt: kotlin.coroutines.CoroutineContext newCoroutineContext(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext)>($r9, $r1);

     label01:
        goto label10;

     label02:
        $z0 = $r5 instanceof kotlinx.coroutines.EventLoop;

        $r7 = null;

        if $z0 == 0 goto label03;

        $r8 = (kotlinx.coroutines.EventLoop) $r5;

        goto label04;

     label03:
        $r8 = null;

     label04:
        if $r8 == null goto label08;

        $z0 = virtualinvoke $r8.<kotlinx.coroutines.EventLoop: boolean shouldBeProcessedFromContext()>();

        if $z0 != 0 goto label05;

        goto label06;

     label05:
        $r7 = $r8;

     label06:
        if $r7 != null goto label07;

        goto label08;

     label07:
        $r8 = $r7;

        goto label09;

     label08:
        $r6 = <kotlinx.coroutines.ThreadLocalEventLoop: kotlinx.coroutines.ThreadLocalEventLoop INSTANCE>;

        $r8 = virtualinvoke $r6.<kotlinx.coroutines.ThreadLocalEventLoop: kotlinx.coroutines.EventLoop currentOrNull$third_party_kotlin_kotlinx_coroutines_kotlinx_coroutines()>();

     label09:
        $r9 = <kotlinx.coroutines.GlobalScope: kotlinx.coroutines.GlobalScope INSTANCE>;

        $r1 = staticinvoke <kotlinx.coroutines.CoroutineContextKt: kotlin.coroutines.CoroutineContext newCoroutineContext(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext)>($r9, $r1);

        goto label01;

     label10:
        $r10 = new kotlinx.coroutines.BlockingCoroutine;

        specialinvoke $r10.<kotlinx.coroutines.BlockingCoroutine: void <init>(kotlin.coroutines.CoroutineContext,java.lang.Thread,kotlinx.coroutines.EventLoop)>($r1, $r2, $r8);

        $r11 = <kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart DEFAULT>;

        virtualinvoke $r10.<kotlinx.coroutines.BlockingCoroutine: void start(kotlinx.coroutines.CoroutineStart,java.lang.Object,kotlin.jvm.functions.Function2)>($r11, $r10, $r0);

        $r12 = virtualinvoke $r10.<kotlinx.coroutines.BlockingCoroutine: java.lang.Object joinBlocking()>();

        return $r12;
    }

    public static java.lang.Object runBlocking$default(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function2, int, java.lang.Object) throws java.lang.InterruptedException
    {
        kotlin.jvm.functions.Function2 $r0;
        java.lang.Object $r1;
        kotlin.coroutines.CoroutineContext $r2;
        int $i0;

        $r2 := @parameter0: kotlin.coroutines.CoroutineContext;

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        $i0 := @parameter2: int;

        $r1 := @parameter3: java.lang.Object;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label1;

        $r2 = <kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.EmptyCoroutineContext INSTANCE>;

     label1:
        $r1 = staticinvoke <kotlinx.coroutines.BuildersKt: java.lang.Object runBlocking(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)>($r2, $r0);

        return $r1;
    }

