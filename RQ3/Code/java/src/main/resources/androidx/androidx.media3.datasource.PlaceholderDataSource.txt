androidx.media3.datasource.PlaceholderDataSource
<androidx.media3.datasource.PlaceholderDataSource: androidx.media3.datasource.PlaceholderDataSource INSTANCE>
<androidx.media3.datasource.PlaceholderDataSource: androidx.media3.datasource.DataSource$Factory FACTORY>
    private void <init>()
    {
        androidx.media3.datasource.PlaceholderDataSource r0;

        r0 := @this: androidx.media3.datasource.PlaceholderDataSource;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void addTransferListener(androidx.media3.datasource.TransferListener)
    {
        androidx.media3.datasource.PlaceholderDataSource r0;
        androidx.media3.datasource.TransferListener r1;

        r0 := @this: androidx.media3.datasource.PlaceholderDataSource;

        r1 := @parameter0: androidx.media3.datasource.TransferListener;

        return;
    }

    public long open(androidx.media3.datasource.DataSpec) throws java.io.IOException
    {
        androidx.media3.datasource.PlaceholderDataSource r0;
        androidx.media3.datasource.DataSpec r1;
        java.io.IOException r3;
        java.lang.Throwable r4;

        r0 := @this: androidx.media3.datasource.PlaceholderDataSource;

        r1 := @parameter0: androidx.media3.datasource.DataSpec;

        r3 = new java.io.IOException;

        specialinvoke r3.<java.io.IOException: void <init>(java.lang.String)>("PlaceholderDataSource cannot be opened");

        r4 = (java.lang.Throwable) r3;

        throw r4;
    }

    public int read(byte[], int, int)
    {
        androidx.media3.datasource.PlaceholderDataSource r0;
        byte[] r1;
        int i0, i1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: androidx.media3.datasource.PlaceholderDataSource;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public android.net.Uri getUri()
    {
        androidx.media3.datasource.PlaceholderDataSource r0;

        r0 := @this: androidx.media3.datasource.PlaceholderDataSource;

        return null;
    }

    public void close()
    {
        androidx.media3.datasource.PlaceholderDataSource r0;

        r0 := @this: androidx.media3.datasource.PlaceholderDataSource;

        return;
    }

    static void <clinit>()
    {
        androidx.media3.datasource.PlaceholderDataSource $r0;
        androidx.media3.datasource.DataSource$Factory $r1;

        $r0 = new androidx.media3.datasource.PlaceholderDataSource;

        specialinvoke $r0.<androidx.media3.datasource.PlaceholderDataSource: void <init>()>();

        <androidx.media3.datasource.PlaceholderDataSource: androidx.media3.datasource.PlaceholderDataSource INSTANCE> = $r0;

        $r1 = dynamicinvoke "createDataSource" <androidx.media3.datasource.DataSource$Factory ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: androidx.media3.datasource.DataSource __METHODTYPE__(), methodhandle: "REF_INVOKE_CONSTRUCTOR" <androidx.media3.datasource.PlaceholderDataSource: void <init>()>, methodtype: androidx.media3.datasource.DataSource __METHODTYPE__());

        <androidx.media3.datasource.PlaceholderDataSource: androidx.media3.datasource.DataSource$Factory FACTORY> = $r1;

        return;
    }

