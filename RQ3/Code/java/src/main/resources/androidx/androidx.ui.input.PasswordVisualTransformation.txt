androidx.ui.input.PasswordVisualTransformation
<androidx.ui.input.PasswordVisualTransformation: char mask>
    public void <init>(char)
    {
        androidx.ui.input.PasswordVisualTransformation r0;
        char c0;

        r0 := @this: androidx.ui.input.PasswordVisualTransformation;

        c0 := @parameter0: char;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.ui.input.PasswordVisualTransformation: char mask> = c0;

        return;
    }

    public void <init>(char, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.ui.input.PasswordVisualTransformation r0;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        char c2;

        r0 := @this: androidx.ui.input.PasswordVisualTransformation;

        c2 := @parameter0: char;

        i0 := @parameter1: int;

        r1 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        c2 = 8226;

     label1:
        specialinvoke r0.<androidx.ui.input.PasswordVisualTransformation: void <init>(char)>(c2);

        return;
    }

    public final char getMask()
    {
        androidx.ui.input.PasswordVisualTransformation r0;
        char $c0;

        r0 := @this: androidx.ui.input.PasswordVisualTransformation;

        $c0 = r0.<androidx.ui.input.PasswordVisualTransformation: char mask>;

        return $c0;
    }

    public androidx.ui.input.TransformedText filter(androidx.ui.text.AnnotatedString)
    {
        androidx.ui.input.PasswordVisualTransformation r0;
        androidx.ui.text.AnnotatedString r1, $r3;
        androidx.ui.input.TransformedText $r2;
        char $c0;
        java.lang.String $r4, $r6, $r7;
        java.lang.CharSequence $r5;
        int $i1;
        androidx.ui.input.OffsetMap$Companion $r8;
        androidx.ui.input.OffsetMap $r9;

        r0 := @this: androidx.ui.input.PasswordVisualTransformation;

        r1 := @parameter0: androidx.ui.text.AnnotatedString;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "text");

        $r2 = new androidx.ui.input.TransformedText;

        $r3 = new androidx.ui.text.AnnotatedString;

        $c0 = virtualinvoke r0.<androidx.ui.input.PasswordVisualTransformation: char getMask()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c0);

        $r5 = (java.lang.CharSequence) $r4;

        $r6 = virtualinvoke r1.<androidx.ui.text.AnnotatedString: java.lang.String getText()>();

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        $r7 = staticinvoke <kotlin.text.StringsKt: java.lang.String repeat(java.lang.CharSequence,int)>($r5, $i1);

        specialinvoke $r3.<androidx.ui.text.AnnotatedString: void <init>(java.lang.String,java.util.List,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r7, null, null, 6, null);

        $r8 = <androidx.ui.input.OffsetMap: androidx.ui.input.OffsetMap$Companion Companion>;

        $r9 = virtualinvoke $r8.<androidx.ui.input.OffsetMap$Companion: androidx.ui.input.OffsetMap getIdentityOffsetMap()>();

        specialinvoke $r2.<androidx.ui.input.TransformedText: void <init>(androidx.ui.text.AnnotatedString,androidx.ui.input.OffsetMap)>($r3, $r9);

        return $r2;
    }

    public final char component1()
    {
        androidx.ui.input.PasswordVisualTransformation r0;
        char $c0;

        r0 := @this: androidx.ui.input.PasswordVisualTransformation;

        $c0 = r0.<androidx.ui.input.PasswordVisualTransformation: char mask>;

        return $c0;
    }

    public final androidx.ui.input.PasswordVisualTransformation copy(char)
    {
        androidx.ui.input.PasswordVisualTransformation r0, $r1;
        char c0;

        r0 := @this: androidx.ui.input.PasswordVisualTransformation;

        c0 := @parameter0: char;

        $r1 = new androidx.ui.input.PasswordVisualTransformation;

        specialinvoke $r1.<androidx.ui.input.PasswordVisualTransformation: void <init>(char)>(c0);

        return $r1;
    }

    public static androidx.ui.input.PasswordVisualTransformation copy$default(androidx.ui.input.PasswordVisualTransformation, char, int, java.lang.Object)
    {
        androidx.ui.input.PasswordVisualTransformation r0, $r2;
        int i0, $i1;
        java.lang.Object r1;
        char c2;

        r0 := @parameter0: androidx.ui.input.PasswordVisualTransformation;

        c2 := @parameter1: char;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        c2 = r0.<androidx.ui.input.PasswordVisualTransformation: char mask>;

     label1:
        $r2 = virtualinvoke r0.<androidx.ui.input.PasswordVisualTransformation: androidx.ui.input.PasswordVisualTransformation copy(char)>(c2);

        return $r2;
    }

    public java.lang.String toString()
    {
        androidx.ui.input.PasswordVisualTransformation r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        char $c0;
        java.lang.String $r5;

        r0 := @this: androidx.ui.input.PasswordVisualTransformation;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PasswordVisualTransformation(mask=");

        $c0 = r0.<androidx.ui.input.PasswordVisualTransformation: char mask>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public int hashCode()
    {
        androidx.ui.input.PasswordVisualTransformation r0;
        char $c0;
        int $i1;

        r0 := @this: androidx.ui.input.PasswordVisualTransformation;

        $c0 = r0.<androidx.ui.input.PasswordVisualTransformation: char mask>;

        $i1 = staticinvoke <java.lang.Character: int hashCode(char)>($c0);

        return $i1;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.ui.input.PasswordVisualTransformation r0, r2;
        java.lang.Object r1, r3;
        boolean $z0;
        char $c0, $c1;

        r0 := @this: androidx.ui.input.PasswordVisualTransformation;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.ui.input.PasswordVisualTransformation;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r3 = r1;

        r2 = (androidx.ui.input.PasswordVisualTransformation) r3;

        $c1 = r0.<androidx.ui.input.PasswordVisualTransformation: char mask>;

        $c0 = r2.<androidx.ui.input.PasswordVisualTransformation: char mask>;

        if $c1 == $c0 goto label3;

        return 0;

     label3:
        return 1;
    }

    public void <init>()
    {
        androidx.ui.input.PasswordVisualTransformation r0;

        r0 := @this: androidx.ui.input.PasswordVisualTransformation;

        specialinvoke r0.<androidx.ui.input.PasswordVisualTransformation: void <init>(char,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0, 1, null);

        return;
    }

