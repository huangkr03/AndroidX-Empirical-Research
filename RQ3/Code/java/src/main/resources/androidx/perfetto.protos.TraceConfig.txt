perfetto.protos.TraceConfig
<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$Companion Companion>
<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$BuiltinDataSource builtin_data_sources>
<perfetto.protos.TraceConfig: java.lang.Integer duration_ms>
<perfetto.protos.TraceConfig: java.lang.Boolean enable_extra_guardrails>
<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$LockdownModeOperation lockdown_mode>
<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$StatsdMetadata statsd_metadata>
<perfetto.protos.TraceConfig: java.lang.Boolean write_into_file>
<perfetto.protos.TraceConfig: java.lang.String output_path>
<perfetto.protos.TraceConfig: java.lang.Integer file_write_period_ms>
<perfetto.protos.TraceConfig: java.lang.Long max_file_size_bytes>
<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$GuardrailOverrides guardrail_overrides>
<perfetto.protos.TraceConfig: java.lang.Boolean deferred_start>
<perfetto.protos.TraceConfig: java.lang.Integer flush_period_ms>
<perfetto.protos.TraceConfig: java.lang.Integer flush_timeout_ms>
<perfetto.protos.TraceConfig: java.lang.Integer data_source_stop_timeout_ms>
<perfetto.protos.TraceConfig: java.lang.Boolean notify_traceur>
<perfetto.protos.TraceConfig: java.lang.Integer bugreport_score>
<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$TriggerConfig trigger_config>
<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$IncrementalStateConfig incremental_state_config>
<perfetto.protos.TraceConfig: java.lang.Boolean allow_user_build_tracing>
<perfetto.protos.TraceConfig: java.lang.String unique_session_name>
<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$CompressionType compression_type>
<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$StatsdLogging statsd_logging>
<perfetto.protos.TraceConfig: java.lang.Long trace_uuid_msb>
<perfetto.protos.TraceConfig: java.lang.Long trace_uuid_lsb>
<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$TraceFilter trace_filter>
<perfetto.protos.TraceConfig: java.util.List buffers>
<perfetto.protos.TraceConfig: java.util.List data_sources>
<perfetto.protos.TraceConfig: java.util.List producers>
<perfetto.protos.TraceConfig: java.util.List activate_triggers>
<perfetto.protos.TraceConfig: com.squareup.wire.ProtoAdapter ADAPTER>
<perfetto.protos.TraceConfig: long serialVersionUID>
    public void <init>(java.util.List, java.util.List, perfetto.protos.TraceConfig$BuiltinDataSource, java.lang.Integer, java.lang.Boolean, perfetto.protos.TraceConfig$LockdownModeOperation, java.util.List, perfetto.protos.TraceConfig$StatsdMetadata, java.lang.Boolean, java.lang.String, java.lang.Integer, java.lang.Long, perfetto.protos.TraceConfig$GuardrailOverrides, java.lang.Boolean, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Boolean, java.lang.Integer, perfetto.protos.TraceConfig$TriggerConfig, java.util.List, perfetto.protos.TraceConfig$IncrementalStateConfig, java.lang.Boolean, java.lang.String, perfetto.protos.TraceConfig$CompressionType, perfetto.protos.TraceConfig$StatsdLogging, java.lang.Long, java.lang.Long, perfetto.protos.TraceConfig$TraceFilter, okio.ByteString)
    {
        perfetto.protos.TraceConfig r0;
        java.util.List r1, r2, r7, r21, $r32, $r33, $r34, $r35;
        perfetto.protos.TraceConfig$BuiltinDataSource r3;
        java.lang.Integer r4, r11, r15, r16, r17, r19;
        java.lang.Boolean r5, r9, r14, r18, r23;
        perfetto.protos.TraceConfig$LockdownModeOperation r6;
        perfetto.protos.TraceConfig$StatsdMetadata r8;
        java.lang.String r10, r24;
        java.lang.Long r12, r27, r28;
        perfetto.protos.TraceConfig$GuardrailOverrides r13;
        perfetto.protos.TraceConfig$TriggerConfig r20;
        perfetto.protos.TraceConfig$IncrementalStateConfig r22;
        perfetto.protos.TraceConfig$CompressionType r25;
        perfetto.protos.TraceConfig$StatsdLogging r26;
        perfetto.protos.TraceConfig$TraceFilter r29;
        okio.ByteString r30;
        com.squareup.wire.ProtoAdapter $r31;

        r0 := @this: perfetto.protos.TraceConfig;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: perfetto.protos.TraceConfig$BuiltinDataSource;

        r4 := @parameter3: java.lang.Integer;

        r5 := @parameter4: java.lang.Boolean;

        r6 := @parameter5: perfetto.protos.TraceConfig$LockdownModeOperation;

        r7 := @parameter6: java.util.List;

        r8 := @parameter7: perfetto.protos.TraceConfig$StatsdMetadata;

        r9 := @parameter8: java.lang.Boolean;

        r10 := @parameter9: java.lang.String;

        r11 := @parameter10: java.lang.Integer;

        r12 := @parameter11: java.lang.Long;

        r13 := @parameter12: perfetto.protos.TraceConfig$GuardrailOverrides;

        r14 := @parameter13: java.lang.Boolean;

        r15 := @parameter14: java.lang.Integer;

        r16 := @parameter15: java.lang.Integer;

        r17 := @parameter16: java.lang.Integer;

        r18 := @parameter17: java.lang.Boolean;

        r19 := @parameter18: java.lang.Integer;

        r20 := @parameter19: perfetto.protos.TraceConfig$TriggerConfig;

        r21 := @parameter20: java.util.List;

        r22 := @parameter21: perfetto.protos.TraceConfig$IncrementalStateConfig;

        r23 := @parameter22: java.lang.Boolean;

        r24 := @parameter23: java.lang.String;

        r25 := @parameter24: perfetto.protos.TraceConfig$CompressionType;

        r26 := @parameter25: perfetto.protos.TraceConfig$StatsdLogging;

        r27 := @parameter26: java.lang.Long;

        r28 := @parameter27: java.lang.Long;

        r29 := @parameter28: perfetto.protos.TraceConfig$TraceFilter;

        r30 := @parameter29: okio.ByteString;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "buffers");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "data_sources");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r7, "producers");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r21, "activate_triggers");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r30, "unknownFields");

        $r31 = <perfetto.protos.TraceConfig: com.squareup.wire.ProtoAdapter ADAPTER>;

        specialinvoke r0.<com.squareup.wire.Message: void <init>(com.squareup.wire.ProtoAdapter,okio.ByteString)>($r31, r30);

        r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$BuiltinDataSource builtin_data_sources> = r3;

        r0.<perfetto.protos.TraceConfig: java.lang.Integer duration_ms> = r4;

        r0.<perfetto.protos.TraceConfig: java.lang.Boolean enable_extra_guardrails> = r5;

        r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$LockdownModeOperation lockdown_mode> = r6;

        r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$StatsdMetadata statsd_metadata> = r8;

        r0.<perfetto.protos.TraceConfig: java.lang.Boolean write_into_file> = r9;

        r0.<perfetto.protos.TraceConfig: java.lang.String output_path> = r10;

        r0.<perfetto.protos.TraceConfig: java.lang.Integer file_write_period_ms> = r11;

        r0.<perfetto.protos.TraceConfig: java.lang.Long max_file_size_bytes> = r12;

        r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$GuardrailOverrides guardrail_overrides> = r13;

        r0.<perfetto.protos.TraceConfig: java.lang.Boolean deferred_start> = r14;

        r0.<perfetto.protos.TraceConfig: java.lang.Integer flush_period_ms> = r15;

        r0.<perfetto.protos.TraceConfig: java.lang.Integer flush_timeout_ms> = r16;

        r0.<perfetto.protos.TraceConfig: java.lang.Integer data_source_stop_timeout_ms> = r17;

        r0.<perfetto.protos.TraceConfig: java.lang.Boolean notify_traceur> = r18;

        r0.<perfetto.protos.TraceConfig: java.lang.Integer bugreport_score> = r19;

        r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$TriggerConfig trigger_config> = r20;

        r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$IncrementalStateConfig incremental_state_config> = r22;

        r0.<perfetto.protos.TraceConfig: java.lang.Boolean allow_user_build_tracing> = r23;

        r0.<perfetto.protos.TraceConfig: java.lang.String unique_session_name> = r24;

        r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$CompressionType compression_type> = r25;

        r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$StatsdLogging statsd_logging> = r26;

        r0.<perfetto.protos.TraceConfig: java.lang.Long trace_uuid_msb> = r27;

        r0.<perfetto.protos.TraceConfig: java.lang.Long trace_uuid_lsb> = r28;

        r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$TraceFilter trace_filter> = r29;

        $r32 = staticinvoke <com.squareup.wire.internal.Internal: java.util.List immutableCopyOf(java.lang.String,java.util.List)>("buffers", r1);

        r0.<perfetto.protos.TraceConfig: java.util.List buffers> = $r32;

        $r33 = staticinvoke <com.squareup.wire.internal.Internal: java.util.List immutableCopyOf(java.lang.String,java.util.List)>("data_sources", r2);

        r0.<perfetto.protos.TraceConfig: java.util.List data_sources> = $r33;

        $r34 = staticinvoke <com.squareup.wire.internal.Internal: java.util.List immutableCopyOf(java.lang.String,java.util.List)>("producers", r7);

        r0.<perfetto.protos.TraceConfig: java.util.List producers> = $r34;

        $r35 = staticinvoke <com.squareup.wire.internal.Internal: java.util.List immutableCopyOf(java.lang.String,java.util.List)>("activate_triggers", r21);

        r0.<perfetto.protos.TraceConfig: java.util.List activate_triggers> = $r35;

        return;
    }

    public void <init>(java.util.List, java.util.List, perfetto.protos.TraceConfig$BuiltinDataSource, java.lang.Integer, java.lang.Boolean, perfetto.protos.TraceConfig$LockdownModeOperation, java.util.List, perfetto.protos.TraceConfig$StatsdMetadata, java.lang.Boolean, java.lang.String, java.lang.Integer, java.lang.Long, perfetto.protos.TraceConfig$GuardrailOverrides, java.lang.Boolean, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Boolean, java.lang.Integer, perfetto.protos.TraceConfig$TriggerConfig, java.util.List, perfetto.protos.TraceConfig$IncrementalStateConfig, java.lang.Boolean, java.lang.String, perfetto.protos.TraceConfig$CompressionType, perfetto.protos.TraceConfig$StatsdLogging, java.lang.Long, java.lang.Long, perfetto.protos.TraceConfig$TraceFilter, okio.ByteString, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.TraceConfig r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        java.util.List r2, r3, r8, r22;
        perfetto.protos.TraceConfig$BuiltinDataSource r4;
        java.lang.Integer r5, r12, r16, r17, r18, r20;
        java.lang.Boolean r6, r10, r15, r19, r24;
        perfetto.protos.TraceConfig$LockdownModeOperation r7;
        perfetto.protos.TraceConfig$StatsdMetadata r9;
        java.lang.String r11, r25;
        java.lang.Long r13, r28, r29;
        perfetto.protos.TraceConfig$GuardrailOverrides r14;
        perfetto.protos.TraceConfig$TriggerConfig r21;
        perfetto.protos.TraceConfig$IncrementalStateConfig r23;
        perfetto.protos.TraceConfig$CompressionType r26;
        perfetto.protos.TraceConfig$StatsdLogging r27;
        perfetto.protos.TraceConfig$TraceFilter r30;
        okio.ByteString r31;

        r0 := @this: perfetto.protos.TraceConfig;

        r2 := @parameter0: java.util.List;

        r3 := @parameter1: java.util.List;

        r4 := @parameter2: perfetto.protos.TraceConfig$BuiltinDataSource;

        r5 := @parameter3: java.lang.Integer;

        r6 := @parameter4: java.lang.Boolean;

        r7 := @parameter5: perfetto.protos.TraceConfig$LockdownModeOperation;

        r8 := @parameter6: java.util.List;

        r9 := @parameter7: perfetto.protos.TraceConfig$StatsdMetadata;

        r10 := @parameter8: java.lang.Boolean;

        r11 := @parameter9: java.lang.String;

        r12 := @parameter10: java.lang.Integer;

        r13 := @parameter11: java.lang.Long;

        r14 := @parameter12: perfetto.protos.TraceConfig$GuardrailOverrides;

        r15 := @parameter13: java.lang.Boolean;

        r16 := @parameter14: java.lang.Integer;

        r17 := @parameter15: java.lang.Integer;

        r18 := @parameter16: java.lang.Integer;

        r19 := @parameter17: java.lang.Boolean;

        r20 := @parameter18: java.lang.Integer;

        r21 := @parameter19: perfetto.protos.TraceConfig$TriggerConfig;

        r22 := @parameter20: java.util.List;

        r23 := @parameter21: perfetto.protos.TraceConfig$IncrementalStateConfig;

        r24 := @parameter22: java.lang.Boolean;

        r25 := @parameter23: java.lang.String;

        r26 := @parameter24: perfetto.protos.TraceConfig$CompressionType;

        r27 := @parameter25: perfetto.protos.TraceConfig$StatsdLogging;

        r28 := @parameter26: java.lang.Long;

        r29 := @parameter27: java.lang.Long;

        r30 := @parameter28: perfetto.protos.TraceConfig$TraceFilter;

        r31 := @parameter29: okio.ByteString;

        i0 := @parameter30: int;

        r1 := @parameter31: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label01;

        r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label01:
        $i2 = i0 & 2;

        if $i2 == 0 goto label02;

        r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label02:
        $i3 = i0 & 4;

        if $i3 == 0 goto label03;

        r4 = null;

     label03:
        $i4 = i0 & 8;

        if $i4 == 0 goto label04;

        r5 = null;

     label04:
        $i5 = i0 & 16;

        if $i5 == 0 goto label05;

        r6 = null;

     label05:
        $i6 = i0 & 32;

        if $i6 == 0 goto label06;

        r7 = null;

     label06:
        $i7 = i0 & 64;

        if $i7 == 0 goto label07;

        r8 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label07:
        $i8 = i0 & 128;

        if $i8 == 0 goto label08;

        r9 = null;

     label08:
        $i9 = i0 & 256;

        if $i9 == 0 goto label09;

        r10 = null;

     label09:
        $i10 = i0 & 512;

        if $i10 == 0 goto label10;

        r11 = null;

     label10:
        $i11 = i0 & 1024;

        if $i11 == 0 goto label11;

        r12 = null;

     label11:
        $i12 = i0 & 2048;

        if $i12 == 0 goto label12;

        r13 = null;

     label12:
        $i13 = i0 & 4096;

        if $i13 == 0 goto label13;

        r14 = null;

     label13:
        $i14 = i0 & 8192;

        if $i14 == 0 goto label14;

        r15 = null;

     label14:
        $i15 = i0 & 16384;

        if $i15 == 0 goto label15;

        r16 = null;

     label15:
        $i16 = i0 & 32768;

        if $i16 == 0 goto label16;

        r17 = null;

     label16:
        $i17 = i0 & 65536;

        if $i17 == 0 goto label17;

        r18 = null;

     label17:
        $i18 = i0 & 131072;

        if $i18 == 0 goto label18;

        r19 = null;

     label18:
        $i19 = i0 & 262144;

        if $i19 == 0 goto label19;

        r20 = null;

     label19:
        $i20 = i0 & 524288;

        if $i20 == 0 goto label20;

        r21 = null;

     label20:
        $i21 = i0 & 1048576;

        if $i21 == 0 goto label21;

        r22 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label21:
        $i22 = i0 & 2097152;

        if $i22 == 0 goto label22;

        r23 = null;

     label22:
        $i23 = i0 & 4194304;

        if $i23 == 0 goto label23;

        r24 = null;

     label23:
        $i24 = i0 & 8388608;

        if $i24 == 0 goto label24;

        r25 = null;

     label24:
        $i25 = i0 & 16777216;

        if $i25 == 0 goto label25;

        r26 = null;

     label25:
        $i26 = i0 & 33554432;

        if $i26 == 0 goto label26;

        r27 = null;

     label26:
        $i27 = i0 & 67108864;

        if $i27 == 0 goto label27;

        r28 = null;

     label27:
        $i28 = i0 & 134217728;

        if $i28 == 0 goto label28;

        r29 = null;

     label28:
        $i29 = i0 & 268435456;

        if $i29 == 0 goto label29;

        r30 = null;

     label29:
        $i30 = i0 & 536870912;

        if $i30 == 0 goto label30;

        r31 = <okio.ByteString: okio.ByteString EMPTY>;

     label30:
        specialinvoke r0.<perfetto.protos.TraceConfig: void <init>(java.util.List,java.util.List,perfetto.protos.TraceConfig$BuiltinDataSource,java.lang.Integer,java.lang.Boolean,perfetto.protos.TraceConfig$LockdownModeOperation,java.util.List,perfetto.protos.TraceConfig$StatsdMetadata,java.lang.Boolean,java.lang.String,java.lang.Integer,java.lang.Long,perfetto.protos.TraceConfig$GuardrailOverrides,java.lang.Boolean,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.lang.Integer,perfetto.protos.TraceConfig$TriggerConfig,java.util.List,perfetto.protos.TraceConfig$IncrementalStateConfig,java.lang.Boolean,java.lang.String,perfetto.protos.TraceConfig$CompressionType,perfetto.protos.TraceConfig$StatsdLogging,java.lang.Long,java.lang.Long,perfetto.protos.TraceConfig$TraceFilter,okio.ByteString)>(r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31);

        return;
    }

    public final perfetto.protos.TraceConfig$BuiltinDataSource getBuiltin_data_sources()
    {
        perfetto.protos.TraceConfig r0;
        perfetto.protos.TraceConfig$BuiltinDataSource $r1;

        r0 := @this: perfetto.protos.TraceConfig;

        $r1 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$BuiltinDataSource builtin_data_sources>;

        return $r1;
    }

    public final java.lang.Integer getDuration_ms()
    {
        perfetto.protos.TraceConfig r0;
        java.lang.Integer $r1;

        r0 := @this: perfetto.protos.TraceConfig;

        $r1 = r0.<perfetto.protos.TraceConfig: java.lang.Integer duration_ms>;

        return $r1;
    }

    public final java.lang.Boolean getEnable_extra_guardrails()
    {
        perfetto.protos.TraceConfig r0;
        java.lang.Boolean $r1;

        r0 := @this: perfetto.protos.TraceConfig;

        $r1 = r0.<perfetto.protos.TraceConfig: java.lang.Boolean enable_extra_guardrails>;

        return $r1;
    }

    public final perfetto.protos.TraceConfig$LockdownModeOperation getLockdown_mode()
    {
        perfetto.protos.TraceConfig r0;
        perfetto.protos.TraceConfig$LockdownModeOperation $r1;

        r0 := @this: perfetto.protos.TraceConfig;

        $r1 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$LockdownModeOperation lockdown_mode>;

        return $r1;
    }

    public final perfetto.protos.TraceConfig$StatsdMetadata getStatsd_metadata()
    {
        perfetto.protos.TraceConfig r0;
        perfetto.protos.TraceConfig$StatsdMetadata $r1;

        r0 := @this: perfetto.protos.TraceConfig;

        $r1 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$StatsdMetadata statsd_metadata>;

        return $r1;
    }

    public final java.lang.Boolean getWrite_into_file()
    {
        perfetto.protos.TraceConfig r0;
        java.lang.Boolean $r1;

        r0 := @this: perfetto.protos.TraceConfig;

        $r1 = r0.<perfetto.protos.TraceConfig: java.lang.Boolean write_into_file>;

        return $r1;
    }

    public final java.lang.String getOutput_path()
    {
        perfetto.protos.TraceConfig r0;
        java.lang.String $r1;

        r0 := @this: perfetto.protos.TraceConfig;

        $r1 = r0.<perfetto.protos.TraceConfig: java.lang.String output_path>;

        return $r1;
    }

    public final java.lang.Integer getFile_write_period_ms()
    {
        perfetto.protos.TraceConfig r0;
        java.lang.Integer $r1;

        r0 := @this: perfetto.protos.TraceConfig;

        $r1 = r0.<perfetto.protos.TraceConfig: java.lang.Integer file_write_period_ms>;

        return $r1;
    }

    public final java.lang.Long getMax_file_size_bytes()
    {
        perfetto.protos.TraceConfig r0;
        java.lang.Long $r1;

        r0 := @this: perfetto.protos.TraceConfig;

        $r1 = r0.<perfetto.protos.TraceConfig: java.lang.Long max_file_size_bytes>;

        return $r1;
    }

    public final perfetto.protos.TraceConfig$GuardrailOverrides getGuardrail_overrides()
    {
        perfetto.protos.TraceConfig r0;
        perfetto.protos.TraceConfig$GuardrailOverrides $r1;

        r0 := @this: perfetto.protos.TraceConfig;

        $r1 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$GuardrailOverrides guardrail_overrides>;

        return $r1;
    }

    public final java.lang.Boolean getDeferred_start()
    {
        perfetto.protos.TraceConfig r0;
        java.lang.Boolean $r1;

        r0 := @this: perfetto.protos.TraceConfig;

        $r1 = r0.<perfetto.protos.TraceConfig: java.lang.Boolean deferred_start>;

        return $r1;
    }

    public final java.lang.Integer getFlush_period_ms()
    {
        perfetto.protos.TraceConfig r0;
        java.lang.Integer $r1;

        r0 := @this: perfetto.protos.TraceConfig;

        $r1 = r0.<perfetto.protos.TraceConfig: java.lang.Integer flush_period_ms>;

        return $r1;
    }

    public final java.lang.Integer getFlush_timeout_ms()
    {
        perfetto.protos.TraceConfig r0;
        java.lang.Integer $r1;

        r0 := @this: perfetto.protos.TraceConfig;

        $r1 = r0.<perfetto.protos.TraceConfig: java.lang.Integer flush_timeout_ms>;

        return $r1;
    }

    public final java.lang.Integer getData_source_stop_timeout_ms()
    {
        perfetto.protos.TraceConfig r0;
        java.lang.Integer $r1;

        r0 := @this: perfetto.protos.TraceConfig;

        $r1 = r0.<perfetto.protos.TraceConfig: java.lang.Integer data_source_stop_timeout_ms>;

        return $r1;
    }

    public final java.lang.Boolean getNotify_traceur()
    {
        perfetto.protos.TraceConfig r0;
        java.lang.Boolean $r1;

        r0 := @this: perfetto.protos.TraceConfig;

        $r1 = r0.<perfetto.protos.TraceConfig: java.lang.Boolean notify_traceur>;

        return $r1;
    }

    public final java.lang.Integer getBugreport_score()
    {
        perfetto.protos.TraceConfig r0;
        java.lang.Integer $r1;

        r0 := @this: perfetto.protos.TraceConfig;

        $r1 = r0.<perfetto.protos.TraceConfig: java.lang.Integer bugreport_score>;

        return $r1;
    }

    public final perfetto.protos.TraceConfig$TriggerConfig getTrigger_config()
    {
        perfetto.protos.TraceConfig r0;
        perfetto.protos.TraceConfig$TriggerConfig $r1;

        r0 := @this: perfetto.protos.TraceConfig;

        $r1 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$TriggerConfig trigger_config>;

        return $r1;
    }

    public final perfetto.protos.TraceConfig$IncrementalStateConfig getIncremental_state_config()
    {
        perfetto.protos.TraceConfig r0;
        perfetto.protos.TraceConfig$IncrementalStateConfig $r1;

        r0 := @this: perfetto.protos.TraceConfig;

        $r1 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$IncrementalStateConfig incremental_state_config>;

        return $r1;
    }

    public final java.lang.Boolean getAllow_user_build_tracing()
    {
        perfetto.protos.TraceConfig r0;
        java.lang.Boolean $r1;

        r0 := @this: perfetto.protos.TraceConfig;

        $r1 = r0.<perfetto.protos.TraceConfig: java.lang.Boolean allow_user_build_tracing>;

        return $r1;
    }

    public final java.lang.String getUnique_session_name()
    {
        perfetto.protos.TraceConfig r0;
        java.lang.String $r1;

        r0 := @this: perfetto.protos.TraceConfig;

        $r1 = r0.<perfetto.protos.TraceConfig: java.lang.String unique_session_name>;

        return $r1;
    }

    public final perfetto.protos.TraceConfig$CompressionType getCompression_type()
    {
        perfetto.protos.TraceConfig r0;
        perfetto.protos.TraceConfig$CompressionType $r1;

        r0 := @this: perfetto.protos.TraceConfig;

        $r1 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$CompressionType compression_type>;

        return $r1;
    }

    public final perfetto.protos.TraceConfig$StatsdLogging getStatsd_logging()
    {
        perfetto.protos.TraceConfig r0;
        perfetto.protos.TraceConfig$StatsdLogging $r1;

        r0 := @this: perfetto.protos.TraceConfig;

        $r1 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$StatsdLogging statsd_logging>;

        return $r1;
    }

    public final java.lang.Long getTrace_uuid_msb()
    {
        perfetto.protos.TraceConfig r0;
        java.lang.Long $r1;

        r0 := @this: perfetto.protos.TraceConfig;

        $r1 = r0.<perfetto.protos.TraceConfig: java.lang.Long trace_uuid_msb>;

        return $r1;
    }

    public final java.lang.Long getTrace_uuid_lsb()
    {
        perfetto.protos.TraceConfig r0;
        java.lang.Long $r1;

        r0 := @this: perfetto.protos.TraceConfig;

        $r1 = r0.<perfetto.protos.TraceConfig: java.lang.Long trace_uuid_lsb>;

        return $r1;
    }

    public final perfetto.protos.TraceConfig$TraceFilter getTrace_filter()
    {
        perfetto.protos.TraceConfig r0;
        perfetto.protos.TraceConfig$TraceFilter $r1;

        r0 := @this: perfetto.protos.TraceConfig;

        $r1 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$TraceFilter trace_filter>;

        return $r1;
    }

    public final java.util.List getBuffers()
    {
        perfetto.protos.TraceConfig r0;
        java.util.List $r1;

        r0 := @this: perfetto.protos.TraceConfig;

        $r1 = r0.<perfetto.protos.TraceConfig: java.util.List buffers>;

        return $r1;
    }

    public final java.util.List getData_sources()
    {
        perfetto.protos.TraceConfig r0;
        java.util.List $r1;

        r0 := @this: perfetto.protos.TraceConfig;

        $r1 = r0.<perfetto.protos.TraceConfig: java.util.List data_sources>;

        return $r1;
    }

    public final java.util.List getProducers()
    {
        perfetto.protos.TraceConfig r0;
        java.util.List $r1;

        r0 := @this: perfetto.protos.TraceConfig;

        $r1 = r0.<perfetto.protos.TraceConfig: java.util.List producers>;

        return $r1;
    }

    public final java.util.List getActivate_triggers()
    {
        perfetto.protos.TraceConfig r0;
        java.util.List $r1;

        r0 := @this: perfetto.protos.TraceConfig;

        $r1 = r0.<perfetto.protos.TraceConfig: java.util.List activate_triggers>;

        return $r1;
    }

    public java.lang.Void newBuilder()
    {
        perfetto.protos.TraceConfig r0;
        java.lang.AssertionError $r1;

        r0 := @this: perfetto.protos.TraceConfig;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;
    }

    public boolean equals(java.lang.Object)
    {
        perfetto.protos.TraceConfig r0, $r3, $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r26, $r29, $r32, $r35, $r38, $r41, $r44, $r47, $r50, $r53, $r56, $r59, $r62, $r65, $r68, $r71, $r74, $r77, $r80, $r83, $r86, $r89;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27;
        okio.ByteString $r2, $r4;
        java.util.List $r6, $r7, $r9, $r10, $r24, $r25, $r66, $r67;
        perfetto.protos.TraceConfig$BuiltinDataSource $r12, $r13;
        java.lang.Integer $r15, $r16, $r36, $r37, $r48, $r49, $r51, $r52, $r54, $r55, $r60, $r61;
        java.lang.Boolean $r18, $r19, $r30, $r31, $r45, $r46, $r57, $r58, $r72, $r73;
        perfetto.protos.TraceConfig$LockdownModeOperation $r21, $r22;
        perfetto.protos.TraceConfig$StatsdMetadata $r27, $r28;
        java.lang.String $r33, $r34, $r75, $r76;
        java.lang.Long $r39, $r40, $r84, $r85, $r87, $r88;
        perfetto.protos.TraceConfig$GuardrailOverrides $r42, $r43;
        perfetto.protos.TraceConfig$TriggerConfig $r63, $r64;
        perfetto.protos.TraceConfig$IncrementalStateConfig $r69, $r70;
        perfetto.protos.TraceConfig$CompressionType $r78, $r79;
        perfetto.protos.TraceConfig$StatsdLogging $r81, $r82;
        perfetto.protos.TraceConfig$TraceFilter $r90, $r91;

        r0 := @this: perfetto.protos.TraceConfig;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label01;

        return 1;

     label01:
        $z0 = r1 instanceof perfetto.protos.TraceConfig;

        if $z0 != 0 goto label02;

        return 0;

     label02:
        $r2 = virtualinvoke r0.<perfetto.protos.TraceConfig: okio.ByteString unknownFields()>();

        $r3 = (perfetto.protos.TraceConfig) r1;

        $r4 = virtualinvoke $r3.<perfetto.protos.TraceConfig: okio.ByteString unknownFields()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r4);

        if $z1 != 0 goto label03;

        return 0;

     label03:
        $r7 = r0.<perfetto.protos.TraceConfig: java.util.List buffers>;

        $r5 = (perfetto.protos.TraceConfig) r1;

        $r6 = $r5.<perfetto.protos.TraceConfig: java.util.List buffers>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, $r6);

        if $z2 != 0 goto label04;

        return 0;

     label04:
        $r10 = r0.<perfetto.protos.TraceConfig: java.util.List data_sources>;

        $r8 = (perfetto.protos.TraceConfig) r1;

        $r9 = $r8.<perfetto.protos.TraceConfig: java.util.List data_sources>;

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r10, $r9);

        if $z3 != 0 goto label05;

        return 0;

     label05:
        $r13 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$BuiltinDataSource builtin_data_sources>;

        $r11 = (perfetto.protos.TraceConfig) r1;

        $r12 = $r11.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$BuiltinDataSource builtin_data_sources>;

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r13, $r12);

        if $z4 != 0 goto label06;

        return 0;

     label06:
        $r16 = r0.<perfetto.protos.TraceConfig: java.lang.Integer duration_ms>;

        $r14 = (perfetto.protos.TraceConfig) r1;

        $r15 = $r14.<perfetto.protos.TraceConfig: java.lang.Integer duration_ms>;

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r16, $r15);

        if $z5 != 0 goto label07;

        return 0;

     label07:
        $r19 = r0.<perfetto.protos.TraceConfig: java.lang.Boolean enable_extra_guardrails>;

        $r17 = (perfetto.protos.TraceConfig) r1;

        $r18 = $r17.<perfetto.protos.TraceConfig: java.lang.Boolean enable_extra_guardrails>;

        $z6 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r19, $r18);

        if $z6 != 0 goto label08;

        return 0;

     label08:
        $r22 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$LockdownModeOperation lockdown_mode>;

        $r20 = (perfetto.protos.TraceConfig) r1;

        $r21 = $r20.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$LockdownModeOperation lockdown_mode>;

        if $r22 == $r21 goto label09;

        return 0;

     label09:
        $r25 = r0.<perfetto.protos.TraceConfig: java.util.List producers>;

        $r23 = (perfetto.protos.TraceConfig) r1;

        $r24 = $r23.<perfetto.protos.TraceConfig: java.util.List producers>;

        $z7 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r25, $r24);

        if $z7 != 0 goto label10;

        return 0;

     label10:
        $r28 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$StatsdMetadata statsd_metadata>;

        $r26 = (perfetto.protos.TraceConfig) r1;

        $r27 = $r26.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$StatsdMetadata statsd_metadata>;

        $z8 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r28, $r27);

        if $z8 != 0 goto label11;

        return 0;

     label11:
        $r31 = r0.<perfetto.protos.TraceConfig: java.lang.Boolean write_into_file>;

        $r29 = (perfetto.protos.TraceConfig) r1;

        $r30 = $r29.<perfetto.protos.TraceConfig: java.lang.Boolean write_into_file>;

        $z9 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r31, $r30);

        if $z9 != 0 goto label12;

        return 0;

     label12:
        $r34 = r0.<perfetto.protos.TraceConfig: java.lang.String output_path>;

        $r32 = (perfetto.protos.TraceConfig) r1;

        $r33 = $r32.<perfetto.protos.TraceConfig: java.lang.String output_path>;

        $z10 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r34, $r33);

        if $z10 != 0 goto label13;

        return 0;

     label13:
        $r37 = r0.<perfetto.protos.TraceConfig: java.lang.Integer file_write_period_ms>;

        $r35 = (perfetto.protos.TraceConfig) r1;

        $r36 = $r35.<perfetto.protos.TraceConfig: java.lang.Integer file_write_period_ms>;

        $z11 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r37, $r36);

        if $z11 != 0 goto label14;

        return 0;

     label14:
        $r40 = r0.<perfetto.protos.TraceConfig: java.lang.Long max_file_size_bytes>;

        $r38 = (perfetto.protos.TraceConfig) r1;

        $r39 = $r38.<perfetto.protos.TraceConfig: java.lang.Long max_file_size_bytes>;

        $z12 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r40, $r39);

        if $z12 != 0 goto label15;

        return 0;

     label15:
        $r43 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$GuardrailOverrides guardrail_overrides>;

        $r41 = (perfetto.protos.TraceConfig) r1;

        $r42 = $r41.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$GuardrailOverrides guardrail_overrides>;

        $z13 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r43, $r42);

        if $z13 != 0 goto label16;

        return 0;

     label16:
        $r46 = r0.<perfetto.protos.TraceConfig: java.lang.Boolean deferred_start>;

        $r44 = (perfetto.protos.TraceConfig) r1;

        $r45 = $r44.<perfetto.protos.TraceConfig: java.lang.Boolean deferred_start>;

        $z14 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r46, $r45);

        if $z14 != 0 goto label17;

        return 0;

     label17:
        $r49 = r0.<perfetto.protos.TraceConfig: java.lang.Integer flush_period_ms>;

        $r47 = (perfetto.protos.TraceConfig) r1;

        $r48 = $r47.<perfetto.protos.TraceConfig: java.lang.Integer flush_period_ms>;

        $z15 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r49, $r48);

        if $z15 != 0 goto label18;

        return 0;

     label18:
        $r52 = r0.<perfetto.protos.TraceConfig: java.lang.Integer flush_timeout_ms>;

        $r50 = (perfetto.protos.TraceConfig) r1;

        $r51 = $r50.<perfetto.protos.TraceConfig: java.lang.Integer flush_timeout_ms>;

        $z16 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r52, $r51);

        if $z16 != 0 goto label19;

        return 0;

     label19:
        $r55 = r0.<perfetto.protos.TraceConfig: java.lang.Integer data_source_stop_timeout_ms>;

        $r53 = (perfetto.protos.TraceConfig) r1;

        $r54 = $r53.<perfetto.protos.TraceConfig: java.lang.Integer data_source_stop_timeout_ms>;

        $z17 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r55, $r54);

        if $z17 != 0 goto label20;

        return 0;

     label20:
        $r58 = r0.<perfetto.protos.TraceConfig: java.lang.Boolean notify_traceur>;

        $r56 = (perfetto.protos.TraceConfig) r1;

        $r57 = $r56.<perfetto.protos.TraceConfig: java.lang.Boolean notify_traceur>;

        $z18 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r58, $r57);

        if $z18 != 0 goto label21;

        return 0;

     label21:
        $r61 = r0.<perfetto.protos.TraceConfig: java.lang.Integer bugreport_score>;

        $r59 = (perfetto.protos.TraceConfig) r1;

        $r60 = $r59.<perfetto.protos.TraceConfig: java.lang.Integer bugreport_score>;

        $z19 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r61, $r60);

        if $z19 != 0 goto label22;

        return 0;

     label22:
        $r64 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$TriggerConfig trigger_config>;

        $r62 = (perfetto.protos.TraceConfig) r1;

        $r63 = $r62.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$TriggerConfig trigger_config>;

        $z20 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r64, $r63);

        if $z20 != 0 goto label23;

        return 0;

     label23:
        $r67 = r0.<perfetto.protos.TraceConfig: java.util.List activate_triggers>;

        $r65 = (perfetto.protos.TraceConfig) r1;

        $r66 = $r65.<perfetto.protos.TraceConfig: java.util.List activate_triggers>;

        $z21 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r67, $r66);

        if $z21 != 0 goto label24;

        return 0;

     label24:
        $r70 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$IncrementalStateConfig incremental_state_config>;

        $r68 = (perfetto.protos.TraceConfig) r1;

        $r69 = $r68.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$IncrementalStateConfig incremental_state_config>;

        $z22 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r70, $r69);

        if $z22 != 0 goto label25;

        return 0;

     label25:
        $r73 = r0.<perfetto.protos.TraceConfig: java.lang.Boolean allow_user_build_tracing>;

        $r71 = (perfetto.protos.TraceConfig) r1;

        $r72 = $r71.<perfetto.protos.TraceConfig: java.lang.Boolean allow_user_build_tracing>;

        $z23 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r73, $r72);

        if $z23 != 0 goto label26;

        return 0;

     label26:
        $r76 = r0.<perfetto.protos.TraceConfig: java.lang.String unique_session_name>;

        $r74 = (perfetto.protos.TraceConfig) r1;

        $r75 = $r74.<perfetto.protos.TraceConfig: java.lang.String unique_session_name>;

        $z24 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r76, $r75);

        if $z24 != 0 goto label27;

        return 0;

     label27:
        $r79 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$CompressionType compression_type>;

        $r77 = (perfetto.protos.TraceConfig) r1;

        $r78 = $r77.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$CompressionType compression_type>;

        if $r79 == $r78 goto label28;

        return 0;

     label28:
        $r82 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$StatsdLogging statsd_logging>;

        $r80 = (perfetto.protos.TraceConfig) r1;

        $r81 = $r80.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$StatsdLogging statsd_logging>;

        if $r82 == $r81 goto label29;

        return 0;

     label29:
        $r85 = r0.<perfetto.protos.TraceConfig: java.lang.Long trace_uuid_msb>;

        $r83 = (perfetto.protos.TraceConfig) r1;

        $r84 = $r83.<perfetto.protos.TraceConfig: java.lang.Long trace_uuid_msb>;

        $z25 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r85, $r84);

        if $z25 != 0 goto label30;

        return 0;

     label30:
        $r88 = r0.<perfetto.protos.TraceConfig: java.lang.Long trace_uuid_lsb>;

        $r86 = (perfetto.protos.TraceConfig) r1;

        $r87 = $r86.<perfetto.protos.TraceConfig: java.lang.Long trace_uuid_lsb>;

        $z26 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r88, $r87);

        if $z26 != 0 goto label31;

        return 0;

     label31:
        $r91 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$TraceFilter trace_filter>;

        $r89 = (perfetto.protos.TraceConfig) r1;

        $r90 = $r89.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$TraceFilter trace_filter>;

        $z27 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r91, $r90);

        if $z27 != 0 goto label32;

        return 0;

     label32:
        return 1;
    }

    public int hashCode()
    {
        perfetto.protos.TraceConfig r0;
        okio.ByteString $r1;
        java.util.List $r2, $r3, $r8, $r22;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, i33, i34, i35, i36, $i37, i38, $i39, i40, $i41, i42, $i43, i44, i45, $i46, i47, $i48, i49, $i50, i51, $i52, i53, $i54, i55, $i56, i57, $i58, i59, $i60, i61, $i62, i63, $i64, i65, $i66, i67, $i68, i69, $i70, i71, i72, $i73, i74, $i75, i76, $i77, i78, $i79, i80, $i81, i82, $i83, i84, $i85, i86, $i87;
        perfetto.protos.TraceConfig$BuiltinDataSource $r4;
        java.lang.Integer $r5, $r12, $r16, $r17, $r18, $r20;
        java.lang.Boolean $r6, $r10, $r15, $r19, $r24;
        perfetto.protos.TraceConfig$LockdownModeOperation $r7;
        perfetto.protos.TraceConfig$StatsdMetadata $r9;
        java.lang.String $r11, $r25;
        java.lang.Long $r13, $r28, $r29;
        perfetto.protos.TraceConfig$GuardrailOverrides $r14;
        perfetto.protos.TraceConfig$TriggerConfig $r21;
        perfetto.protos.TraceConfig$IncrementalStateConfig $r23;
        perfetto.protos.TraceConfig$CompressionType $r26;
        perfetto.protos.TraceConfig$StatsdLogging $r27;
        perfetto.protos.TraceConfig$TraceFilter $r30;

        r0 := @this: perfetto.protos.TraceConfig;

        i33 = r0.<perfetto.protos.TraceConfig: int hashCode>;

        if i33 != 0 goto label51;

        $r1 = virtualinvoke r0.<perfetto.protos.TraceConfig: okio.ByteString unknownFields()>();

        i34 = virtualinvoke $r1.<okio.ByteString: int hashCode()>();

        $i0 = i34 * 37;

        $r2 = r0.<perfetto.protos.TraceConfig: java.util.List buffers>;

        $i1 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        i35 = $i0 + $i1;

        $i2 = i35 * 37;

        $r3 = r0.<perfetto.protos.TraceConfig: java.util.List data_sources>;

        $i3 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

        i36 = $i2 + $i3;

        $i4 = i36 * 37;

        $r4 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$BuiltinDataSource builtin_data_sources>;

        if $r4 != null goto label01;

        $i37 = 0;

        goto label02;

     label01:
        $i37 = virtualinvoke $r4.<java.lang.Object: int hashCode()>();

     label02:
        i38 = $i4 + $i37;

        $i5 = i38 * 37;

        $r5 = r0.<perfetto.protos.TraceConfig: java.lang.Integer duration_ms>;

        if $r5 != null goto label03;

        $i39 = 0;

        goto label04;

     label03:
        $i39 = virtualinvoke $r5.<java.lang.Object: int hashCode()>();

     label04:
        i40 = $i5 + $i39;

        $i6 = i40 * 37;

        $r6 = r0.<perfetto.protos.TraceConfig: java.lang.Boolean enable_extra_guardrails>;

        if $r6 != null goto label05;

        $i41 = 0;

        goto label06;

     label05:
        $i41 = virtualinvoke $r6.<java.lang.Object: int hashCode()>();

     label06:
        i42 = $i6 + $i41;

        $i7 = i42 * 37;

        $r7 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$LockdownModeOperation lockdown_mode>;

        if $r7 != null goto label07;

        $i43 = 0;

        goto label08;

     label07:
        $i43 = virtualinvoke $r7.<java.lang.Object: int hashCode()>();

     label08:
        i44 = $i7 + $i43;

        $i8 = i44 * 37;

        $r8 = r0.<perfetto.protos.TraceConfig: java.util.List producers>;

        $i9 = virtualinvoke $r8.<java.lang.Object: int hashCode()>();

        i45 = $i8 + $i9;

        $i10 = i45 * 37;

        $r9 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$StatsdMetadata statsd_metadata>;

        if $r9 != null goto label09;

        $i46 = 0;

        goto label10;

     label09:
        $i46 = virtualinvoke $r9.<java.lang.Object: int hashCode()>();

     label10:
        i47 = $i10 + $i46;

        $i11 = i47 * 37;

        $r10 = r0.<perfetto.protos.TraceConfig: java.lang.Boolean write_into_file>;

        if $r10 != null goto label11;

        $i48 = 0;

        goto label12;

     label11:
        $i48 = virtualinvoke $r10.<java.lang.Object: int hashCode()>();

     label12:
        i49 = $i11 + $i48;

        $i12 = i49 * 37;

        $r11 = r0.<perfetto.protos.TraceConfig: java.lang.String output_path>;

        if $r11 != null goto label13;

        $i50 = 0;

        goto label14;

     label13:
        $i50 = virtualinvoke $r11.<java.lang.Object: int hashCode()>();

     label14:
        i51 = $i12 + $i50;

        $i13 = i51 * 37;

        $r12 = r0.<perfetto.protos.TraceConfig: java.lang.Integer file_write_period_ms>;

        if $r12 != null goto label15;

        $i52 = 0;

        goto label16;

     label15:
        $i52 = virtualinvoke $r12.<java.lang.Object: int hashCode()>();

     label16:
        i53 = $i13 + $i52;

        $i14 = i53 * 37;

        $r13 = r0.<perfetto.protos.TraceConfig: java.lang.Long max_file_size_bytes>;

        if $r13 != null goto label17;

        $i54 = 0;

        goto label18;

     label17:
        $i54 = virtualinvoke $r13.<java.lang.Object: int hashCode()>();

     label18:
        i55 = $i14 + $i54;

        $i15 = i55 * 37;

        $r14 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$GuardrailOverrides guardrail_overrides>;

        if $r14 != null goto label19;

        $i56 = 0;

        goto label20;

     label19:
        $i56 = virtualinvoke $r14.<java.lang.Object: int hashCode()>();

     label20:
        i57 = $i15 + $i56;

        $i16 = i57 * 37;

        $r15 = r0.<perfetto.protos.TraceConfig: java.lang.Boolean deferred_start>;

        if $r15 != null goto label21;

        $i58 = 0;

        goto label22;

     label21:
        $i58 = virtualinvoke $r15.<java.lang.Object: int hashCode()>();

     label22:
        i59 = $i16 + $i58;

        $i17 = i59 * 37;

        $r16 = r0.<perfetto.protos.TraceConfig: java.lang.Integer flush_period_ms>;

        if $r16 != null goto label23;

        $i60 = 0;

        goto label24;

     label23:
        $i60 = virtualinvoke $r16.<java.lang.Object: int hashCode()>();

     label24:
        i61 = $i17 + $i60;

        $i18 = i61 * 37;

        $r17 = r0.<perfetto.protos.TraceConfig: java.lang.Integer flush_timeout_ms>;

        if $r17 != null goto label25;

        $i62 = 0;

        goto label26;

     label25:
        $i62 = virtualinvoke $r17.<java.lang.Object: int hashCode()>();

     label26:
        i63 = $i18 + $i62;

        $i19 = i63 * 37;

        $r18 = r0.<perfetto.protos.TraceConfig: java.lang.Integer data_source_stop_timeout_ms>;

        if $r18 != null goto label27;

        $i64 = 0;

        goto label28;

     label27:
        $i64 = virtualinvoke $r18.<java.lang.Object: int hashCode()>();

     label28:
        i65 = $i19 + $i64;

        $i20 = i65 * 37;

        $r19 = r0.<perfetto.protos.TraceConfig: java.lang.Boolean notify_traceur>;

        if $r19 != null goto label29;

        $i66 = 0;

        goto label30;

     label29:
        $i66 = virtualinvoke $r19.<java.lang.Object: int hashCode()>();

     label30:
        i67 = $i20 + $i66;

        $i21 = i67 * 37;

        $r20 = r0.<perfetto.protos.TraceConfig: java.lang.Integer bugreport_score>;

        if $r20 != null goto label31;

        $i68 = 0;

        goto label32;

     label31:
        $i68 = virtualinvoke $r20.<java.lang.Object: int hashCode()>();

     label32:
        i69 = $i21 + $i68;

        $i22 = i69 * 37;

        $r21 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$TriggerConfig trigger_config>;

        if $r21 != null goto label33;

        $i70 = 0;

        goto label34;

     label33:
        $i70 = virtualinvoke $r21.<java.lang.Object: int hashCode()>();

     label34:
        i71 = $i22 + $i70;

        $i23 = i71 * 37;

        $r22 = r0.<perfetto.protos.TraceConfig: java.util.List activate_triggers>;

        $i24 = virtualinvoke $r22.<java.lang.Object: int hashCode()>();

        i72 = $i23 + $i24;

        $i25 = i72 * 37;

        $r23 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$IncrementalStateConfig incremental_state_config>;

        if $r23 != null goto label35;

        $i73 = 0;

        goto label36;

     label35:
        $i73 = virtualinvoke $r23.<java.lang.Object: int hashCode()>();

     label36:
        i74 = $i25 + $i73;

        $i26 = i74 * 37;

        $r24 = r0.<perfetto.protos.TraceConfig: java.lang.Boolean allow_user_build_tracing>;

        if $r24 != null goto label37;

        $i75 = 0;

        goto label38;

     label37:
        $i75 = virtualinvoke $r24.<java.lang.Object: int hashCode()>();

     label38:
        i76 = $i26 + $i75;

        $i27 = i76 * 37;

        $r25 = r0.<perfetto.protos.TraceConfig: java.lang.String unique_session_name>;

        if $r25 != null goto label39;

        $i77 = 0;

        goto label40;

     label39:
        $i77 = virtualinvoke $r25.<java.lang.Object: int hashCode()>();

     label40:
        i78 = $i27 + $i77;

        $i28 = i78 * 37;

        $r26 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$CompressionType compression_type>;

        if $r26 != null goto label41;

        $i79 = 0;

        goto label42;

     label41:
        $i79 = virtualinvoke $r26.<java.lang.Object: int hashCode()>();

     label42:
        i80 = $i28 + $i79;

        $i29 = i80 * 37;

        $r27 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$StatsdLogging statsd_logging>;

        if $r27 != null goto label43;

        $i81 = 0;

        goto label44;

     label43:
        $i81 = virtualinvoke $r27.<java.lang.Object: int hashCode()>();

     label44:
        i82 = $i29 + $i81;

        $i30 = i82 * 37;

        $r28 = r0.<perfetto.protos.TraceConfig: java.lang.Long trace_uuid_msb>;

        if $r28 != null goto label45;

        $i83 = 0;

        goto label46;

     label45:
        $i83 = virtualinvoke $r28.<java.lang.Object: int hashCode()>();

     label46:
        i84 = $i30 + $i83;

        $i31 = i84 * 37;

        $r29 = r0.<perfetto.protos.TraceConfig: java.lang.Long trace_uuid_lsb>;

        if $r29 != null goto label47;

        $i85 = 0;

        goto label48;

     label47:
        $i85 = virtualinvoke $r29.<java.lang.Object: int hashCode()>();

     label48:
        i86 = $i31 + $i85;

        $i32 = i86 * 37;

        $r30 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$TraceFilter trace_filter>;

        if $r30 != null goto label49;

        $i87 = 0;

        goto label50;

     label49:
        $i87 = virtualinvoke $r30.<java.lang.Object: int hashCode()>();

     label50:
        i33 = $i32 + $i87;

        r0.<perfetto.protos.TraceConfig: int hashCode> = i33;

     label51:
        return i33;
    }

    public java.lang.String toString()
    {
        perfetto.protos.TraceConfig r0;
        java.util.List r1, $r3, $r5, $r11, $r26, $r66, $r110, $r125, $r128;
        java.util.ArrayList $r2;
        java.util.Collection $r4, $r6, $r12, $r27, $r42, $r45, $r48, $r51, $r54, $r57, $r61, $r64, $r67, $r71, $r74, $r77, $r80, $r83, $r86, $r89, $r92, $r95, $r98, $r101, $r105, $r108, $r111, $r114, $r117, $r120, $r123, $r126, $r129;
        boolean $z0, $z1, $z2, $z3, $z33, $z34, $z35, $z36;
        perfetto.protos.TraceConfig$BuiltinDataSource $r7, $r122;
        java.lang.Integer $r8, $r16, $r20, $r21, $r22, $r24, $r73, $r79, $r82, $r85, $r97, $r119;
        java.lang.Boolean $r9, $r14, $r19, $r23, $r29, $r60, $r76, $r88, $r104, $r116;
        perfetto.protos.TraceConfig$LockdownModeOperation $r10, $r113;
        perfetto.protos.TraceConfig$StatsdMetadata $r13, $r107;
        java.lang.String $r15, $r30, $r40, $r43, $r46, $r49, $r52, $r55, $r56, $r58, $r59, $r62, $r65, $r68, $r69, $r72, $r75, $r78, $r81, $r84, $r87, $r90, $r93, $r96, $r99, $r100, $r102, $r103, $r106, $r109, $r112, $r115, $r118, $r121, $r124, $r127, $r130;
        java.lang.Long $r17, $r33, $r34, $r44, $r47, $r94;
        perfetto.protos.TraceConfig$GuardrailOverrides $r18, $r91;
        perfetto.protos.TraceConfig$TriggerConfig $r25, $r70;
        perfetto.protos.TraceConfig$IncrementalStateConfig $r28, $r63;
        perfetto.protos.TraceConfig$CompressionType $r31, $r53;
        perfetto.protos.TraceConfig$StatsdLogging $r32, $r50;
        perfetto.protos.TraceConfig$TraceFilter $r35, $r41;
        java.lang.CharSequence $r36, $r37, $r38;
        java.lang.Iterable $r39;

        r0 := @this: perfetto.protos.TraceConfig;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r1 = (java.util.List) $r2;

        $r3 = r0.<perfetto.protos.TraceConfig: java.util.List buffers>;

        $r4 = (java.util.Collection) $r3;

        $z0 = interfaceinvoke $r4.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label01;

        $z33 = 1;

        goto label02;

     label01:
        $z33 = 0;

     label02:
        if $z33 == 0 goto label03;

        $r129 = (java.util.Collection) r1;

        $r128 = r0.<perfetto.protos.TraceConfig: java.util.List buffers>;

        $r130 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("buffers=", $r128);

        interfaceinvoke $r129.<java.util.Collection: boolean add(java.lang.Object)>($r130);

     label03:
        $r5 = r0.<perfetto.protos.TraceConfig: java.util.List data_sources>;

        $r6 = (java.util.Collection) $r5;

        $z1 = interfaceinvoke $r6.<java.util.Collection: boolean isEmpty()>();

        if $z1 != 0 goto label04;

        $z34 = 1;

        goto label05;

     label04:
        $z34 = 0;

     label05:
        if $z34 == 0 goto label06;

        $r126 = (java.util.Collection) r1;

        $r125 = r0.<perfetto.protos.TraceConfig: java.util.List data_sources>;

        $r127 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("data_sources=", $r125);

        interfaceinvoke $r126.<java.util.Collection: boolean add(java.lang.Object)>($r127);

     label06:
        $r7 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$BuiltinDataSource builtin_data_sources>;

        if $r7 == null goto label07;

        $r123 = (java.util.Collection) r1;

        $r122 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$BuiltinDataSource builtin_data_sources>;

        $r124 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("builtin_data_sources=", $r122);

        interfaceinvoke $r123.<java.util.Collection: boolean add(java.lang.Object)>($r124);

     label07:
        $r8 = r0.<perfetto.protos.TraceConfig: java.lang.Integer duration_ms>;

        if $r8 == null goto label08;

        $r120 = (java.util.Collection) r1;

        $r119 = r0.<perfetto.protos.TraceConfig: java.lang.Integer duration_ms>;

        $r121 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("duration_ms=", $r119);

        interfaceinvoke $r120.<java.util.Collection: boolean add(java.lang.Object)>($r121);

     label08:
        $r9 = r0.<perfetto.protos.TraceConfig: java.lang.Boolean enable_extra_guardrails>;

        if $r9 == null goto label09;

        $r117 = (java.util.Collection) r1;

        $r116 = r0.<perfetto.protos.TraceConfig: java.lang.Boolean enable_extra_guardrails>;

        $r118 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("enable_extra_guardrails=", $r116);

        interfaceinvoke $r117.<java.util.Collection: boolean add(java.lang.Object)>($r118);

     label09:
        $r10 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$LockdownModeOperation lockdown_mode>;

        if $r10 == null goto label10;

        $r114 = (java.util.Collection) r1;

        $r113 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$LockdownModeOperation lockdown_mode>;

        $r115 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("lockdown_mode=", $r113);

        interfaceinvoke $r114.<java.util.Collection: boolean add(java.lang.Object)>($r115);

     label10:
        $r11 = r0.<perfetto.protos.TraceConfig: java.util.List producers>;

        $r12 = (java.util.Collection) $r11;

        $z2 = interfaceinvoke $r12.<java.util.Collection: boolean isEmpty()>();

        if $z2 != 0 goto label11;

        $z35 = 1;

        goto label12;

     label11:
        $z35 = 0;

     label12:
        if $z35 == 0 goto label13;

        $r111 = (java.util.Collection) r1;

        $r110 = r0.<perfetto.protos.TraceConfig: java.util.List producers>;

        $r112 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("producers=", $r110);

        interfaceinvoke $r111.<java.util.Collection: boolean add(java.lang.Object)>($r112);

     label13:
        $r13 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$StatsdMetadata statsd_metadata>;

        if $r13 == null goto label14;

        $r108 = (java.util.Collection) r1;

        $r107 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$StatsdMetadata statsd_metadata>;

        $r109 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("statsd_metadata=", $r107);

        interfaceinvoke $r108.<java.util.Collection: boolean add(java.lang.Object)>($r109);

     label14:
        $r14 = r0.<perfetto.protos.TraceConfig: java.lang.Boolean write_into_file>;

        if $r14 == null goto label15;

        $r105 = (java.util.Collection) r1;

        $r104 = r0.<perfetto.protos.TraceConfig: java.lang.Boolean write_into_file>;

        $r106 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("write_into_file=", $r104);

        interfaceinvoke $r105.<java.util.Collection: boolean add(java.lang.Object)>($r106);

     label15:
        $r15 = r0.<perfetto.protos.TraceConfig: java.lang.String output_path>;

        if $r15 == null goto label16;

        $r101 = (java.util.Collection) r1;

        $r100 = r0.<perfetto.protos.TraceConfig: java.lang.String output_path>;

        $r102 = staticinvoke <com.squareup.wire.internal.Internal: java.lang.String sanitize(java.lang.String)>($r100);

        $r103 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("output_path=", $r102);

        interfaceinvoke $r101.<java.util.Collection: boolean add(java.lang.Object)>($r103);

     label16:
        $r16 = r0.<perfetto.protos.TraceConfig: java.lang.Integer file_write_period_ms>;

        if $r16 == null goto label17;

        $r98 = (java.util.Collection) r1;

        $r97 = r0.<perfetto.protos.TraceConfig: java.lang.Integer file_write_period_ms>;

        $r99 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("file_write_period_ms=", $r97);

        interfaceinvoke $r98.<java.util.Collection: boolean add(java.lang.Object)>($r99);

     label17:
        $r17 = r0.<perfetto.protos.TraceConfig: java.lang.Long max_file_size_bytes>;

        if $r17 == null goto label18;

        $r95 = (java.util.Collection) r1;

        $r94 = r0.<perfetto.protos.TraceConfig: java.lang.Long max_file_size_bytes>;

        $r96 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("max_file_size_bytes=", $r94);

        interfaceinvoke $r95.<java.util.Collection: boolean add(java.lang.Object)>($r96);

     label18:
        $r18 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$GuardrailOverrides guardrail_overrides>;

        if $r18 == null goto label19;

        $r92 = (java.util.Collection) r1;

        $r91 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$GuardrailOverrides guardrail_overrides>;

        $r93 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("guardrail_overrides=", $r91);

        interfaceinvoke $r92.<java.util.Collection: boolean add(java.lang.Object)>($r93);

     label19:
        $r19 = r0.<perfetto.protos.TraceConfig: java.lang.Boolean deferred_start>;

        if $r19 == null goto label20;

        $r89 = (java.util.Collection) r1;

        $r88 = r0.<perfetto.protos.TraceConfig: java.lang.Boolean deferred_start>;

        $r90 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("deferred_start=", $r88);

        interfaceinvoke $r89.<java.util.Collection: boolean add(java.lang.Object)>($r90);

     label20:
        $r20 = r0.<perfetto.protos.TraceConfig: java.lang.Integer flush_period_ms>;

        if $r20 == null goto label21;

        $r86 = (java.util.Collection) r1;

        $r85 = r0.<perfetto.protos.TraceConfig: java.lang.Integer flush_period_ms>;

        $r87 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("flush_period_ms=", $r85);

        interfaceinvoke $r86.<java.util.Collection: boolean add(java.lang.Object)>($r87);

     label21:
        $r21 = r0.<perfetto.protos.TraceConfig: java.lang.Integer flush_timeout_ms>;

        if $r21 == null goto label22;

        $r83 = (java.util.Collection) r1;

        $r82 = r0.<perfetto.protos.TraceConfig: java.lang.Integer flush_timeout_ms>;

        $r84 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("flush_timeout_ms=", $r82);

        interfaceinvoke $r83.<java.util.Collection: boolean add(java.lang.Object)>($r84);

     label22:
        $r22 = r0.<perfetto.protos.TraceConfig: java.lang.Integer data_source_stop_timeout_ms>;

        if $r22 == null goto label23;

        $r80 = (java.util.Collection) r1;

        $r79 = r0.<perfetto.protos.TraceConfig: java.lang.Integer data_source_stop_timeout_ms>;

        $r81 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("data_source_stop_timeout_ms=", $r79);

        interfaceinvoke $r80.<java.util.Collection: boolean add(java.lang.Object)>($r81);

     label23:
        $r23 = r0.<perfetto.protos.TraceConfig: java.lang.Boolean notify_traceur>;

        if $r23 == null goto label24;

        $r77 = (java.util.Collection) r1;

        $r76 = r0.<perfetto.protos.TraceConfig: java.lang.Boolean notify_traceur>;

        $r78 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("notify_traceur=", $r76);

        interfaceinvoke $r77.<java.util.Collection: boolean add(java.lang.Object)>($r78);

     label24:
        $r24 = r0.<perfetto.protos.TraceConfig: java.lang.Integer bugreport_score>;

        if $r24 == null goto label25;

        $r74 = (java.util.Collection) r1;

        $r73 = r0.<perfetto.protos.TraceConfig: java.lang.Integer bugreport_score>;

        $r75 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("bugreport_score=", $r73);

        interfaceinvoke $r74.<java.util.Collection: boolean add(java.lang.Object)>($r75);

     label25:
        $r25 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$TriggerConfig trigger_config>;

        if $r25 == null goto label26;

        $r71 = (java.util.Collection) r1;

        $r70 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$TriggerConfig trigger_config>;

        $r72 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("trigger_config=", $r70);

        interfaceinvoke $r71.<java.util.Collection: boolean add(java.lang.Object)>($r72);

     label26:
        $r26 = r0.<perfetto.protos.TraceConfig: java.util.List activate_triggers>;

        $r27 = (java.util.Collection) $r26;

        $z3 = interfaceinvoke $r27.<java.util.Collection: boolean isEmpty()>();

        if $z3 != 0 goto label27;

        $z36 = 1;

        goto label28;

     label27:
        $z36 = 0;

     label28:
        if $z36 == 0 goto label29;

        $r67 = (java.util.Collection) r1;

        $r66 = r0.<perfetto.protos.TraceConfig: java.util.List activate_triggers>;

        $r68 = staticinvoke <com.squareup.wire.internal.Internal: java.lang.String sanitize(java.util.List)>($r66);

        $r69 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("activate_triggers=", $r68);

        interfaceinvoke $r67.<java.util.Collection: boolean add(java.lang.Object)>($r69);

     label29:
        $r28 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$IncrementalStateConfig incremental_state_config>;

        if $r28 == null goto label30;

        $r64 = (java.util.Collection) r1;

        $r63 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$IncrementalStateConfig incremental_state_config>;

        $r65 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("incremental_state_config=", $r63);

        interfaceinvoke $r64.<java.util.Collection: boolean add(java.lang.Object)>($r65);

     label30:
        $r29 = r0.<perfetto.protos.TraceConfig: java.lang.Boolean allow_user_build_tracing>;

        if $r29 == null goto label31;

        $r61 = (java.util.Collection) r1;

        $r60 = r0.<perfetto.protos.TraceConfig: java.lang.Boolean allow_user_build_tracing>;

        $r62 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("allow_user_build_tracing=", $r60);

        interfaceinvoke $r61.<java.util.Collection: boolean add(java.lang.Object)>($r62);

     label31:
        $r30 = r0.<perfetto.protos.TraceConfig: java.lang.String unique_session_name>;

        if $r30 == null goto label32;

        $r57 = (java.util.Collection) r1;

        $r56 = r0.<perfetto.protos.TraceConfig: java.lang.String unique_session_name>;

        $r58 = staticinvoke <com.squareup.wire.internal.Internal: java.lang.String sanitize(java.lang.String)>($r56);

        $r59 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("unique_session_name=", $r58);

        interfaceinvoke $r57.<java.util.Collection: boolean add(java.lang.Object)>($r59);

     label32:
        $r31 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$CompressionType compression_type>;

        if $r31 == null goto label33;

        $r54 = (java.util.Collection) r1;

        $r53 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$CompressionType compression_type>;

        $r55 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("compression_type=", $r53);

        interfaceinvoke $r54.<java.util.Collection: boolean add(java.lang.Object)>($r55);

     label33:
        $r32 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$StatsdLogging statsd_logging>;

        if $r32 == null goto label34;

        $r51 = (java.util.Collection) r1;

        $r50 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$StatsdLogging statsd_logging>;

        $r52 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("statsd_logging=", $r50);

        interfaceinvoke $r51.<java.util.Collection: boolean add(java.lang.Object)>($r52);

     label34:
        $r33 = r0.<perfetto.protos.TraceConfig: java.lang.Long trace_uuid_msb>;

        if $r33 == null goto label35;

        $r48 = (java.util.Collection) r1;

        $r47 = r0.<perfetto.protos.TraceConfig: java.lang.Long trace_uuid_msb>;

        $r49 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("trace_uuid_msb=", $r47);

        interfaceinvoke $r48.<java.util.Collection: boolean add(java.lang.Object)>($r49);

     label35:
        $r34 = r0.<perfetto.protos.TraceConfig: java.lang.Long trace_uuid_lsb>;

        if $r34 == null goto label36;

        $r45 = (java.util.Collection) r1;

        $r44 = r0.<perfetto.protos.TraceConfig: java.lang.Long trace_uuid_lsb>;

        $r46 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("trace_uuid_lsb=", $r44);

        interfaceinvoke $r45.<java.util.Collection: boolean add(java.lang.Object)>($r46);

     label36:
        $r35 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$TraceFilter trace_filter>;

        if $r35 == null goto label37;

        $r42 = (java.util.Collection) r1;

        $r41 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$TraceFilter trace_filter>;

        $r43 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("trace_filter=", $r41);

        interfaceinvoke $r42.<java.util.Collection: boolean add(java.lang.Object)>($r43);

     label37:
        $r39 = (java.lang.Iterable) r1;

        $r38 = (java.lang.CharSequence) ", ";

        $r37 = (java.lang.CharSequence) "TraceConfig{";

        $r36 = (java.lang.CharSequence) "}";

        $r40 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r39, $r38, $r37, $r36, 0, null, null, 56, null);

        return $r40;
    }

    public final perfetto.protos.TraceConfig copy(java.util.List, java.util.List, perfetto.protos.TraceConfig$BuiltinDataSource, java.lang.Integer, java.lang.Boolean, perfetto.protos.TraceConfig$LockdownModeOperation, java.util.List, perfetto.protos.TraceConfig$StatsdMetadata, java.lang.Boolean, java.lang.String, java.lang.Integer, java.lang.Long, perfetto.protos.TraceConfig$GuardrailOverrides, java.lang.Boolean, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Boolean, java.lang.Integer, perfetto.protos.TraceConfig$TriggerConfig, java.util.List, perfetto.protos.TraceConfig$IncrementalStateConfig, java.lang.Boolean, java.lang.String, perfetto.protos.TraceConfig$CompressionType, perfetto.protos.TraceConfig$StatsdLogging, java.lang.Long, java.lang.Long, perfetto.protos.TraceConfig$TraceFilter, okio.ByteString)
    {
        perfetto.protos.TraceConfig r0, $r31;
        java.util.List r1, r2, r7, r21;
        perfetto.protos.TraceConfig$BuiltinDataSource r3;
        java.lang.Integer r4, r11, r15, r16, r17, r19;
        java.lang.Boolean r5, r9, r14, r18, r23;
        perfetto.protos.TraceConfig$LockdownModeOperation r6;
        perfetto.protos.TraceConfig$StatsdMetadata r8;
        java.lang.String r10, r24;
        java.lang.Long r12, r27, r28;
        perfetto.protos.TraceConfig$GuardrailOverrides r13;
        perfetto.protos.TraceConfig$TriggerConfig r20;
        perfetto.protos.TraceConfig$IncrementalStateConfig r22;
        perfetto.protos.TraceConfig$CompressionType r25;
        perfetto.protos.TraceConfig$StatsdLogging r26;
        perfetto.protos.TraceConfig$TraceFilter r29;
        okio.ByteString r30;

        r0 := @this: perfetto.protos.TraceConfig;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: perfetto.protos.TraceConfig$BuiltinDataSource;

        r4 := @parameter3: java.lang.Integer;

        r5 := @parameter4: java.lang.Boolean;

        r6 := @parameter5: perfetto.protos.TraceConfig$LockdownModeOperation;

        r7 := @parameter6: java.util.List;

        r8 := @parameter7: perfetto.protos.TraceConfig$StatsdMetadata;

        r9 := @parameter8: java.lang.Boolean;

        r10 := @parameter9: java.lang.String;

        r11 := @parameter10: java.lang.Integer;

        r12 := @parameter11: java.lang.Long;

        r13 := @parameter12: perfetto.protos.TraceConfig$GuardrailOverrides;

        r14 := @parameter13: java.lang.Boolean;

        r15 := @parameter14: java.lang.Integer;

        r16 := @parameter15: java.lang.Integer;

        r17 := @parameter16: java.lang.Integer;

        r18 := @parameter17: java.lang.Boolean;

        r19 := @parameter18: java.lang.Integer;

        r20 := @parameter19: perfetto.protos.TraceConfig$TriggerConfig;

        r21 := @parameter20: java.util.List;

        r22 := @parameter21: perfetto.protos.TraceConfig$IncrementalStateConfig;

        r23 := @parameter22: java.lang.Boolean;

        r24 := @parameter23: java.lang.String;

        r25 := @parameter24: perfetto.protos.TraceConfig$CompressionType;

        r26 := @parameter25: perfetto.protos.TraceConfig$StatsdLogging;

        r27 := @parameter26: java.lang.Long;

        r28 := @parameter27: java.lang.Long;

        r29 := @parameter28: perfetto.protos.TraceConfig$TraceFilter;

        r30 := @parameter29: okio.ByteString;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "buffers");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "data_sources");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r7, "producers");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r21, "activate_triggers");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r30, "unknownFields");

        $r31 = new perfetto.protos.TraceConfig;

        specialinvoke $r31.<perfetto.protos.TraceConfig: void <init>(java.util.List,java.util.List,perfetto.protos.TraceConfig$BuiltinDataSource,java.lang.Integer,java.lang.Boolean,perfetto.protos.TraceConfig$LockdownModeOperation,java.util.List,perfetto.protos.TraceConfig$StatsdMetadata,java.lang.Boolean,java.lang.String,java.lang.Integer,java.lang.Long,perfetto.protos.TraceConfig$GuardrailOverrides,java.lang.Boolean,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.lang.Integer,perfetto.protos.TraceConfig$TriggerConfig,java.util.List,perfetto.protos.TraceConfig$IncrementalStateConfig,java.lang.Boolean,java.lang.String,perfetto.protos.TraceConfig$CompressionType,perfetto.protos.TraceConfig$StatsdLogging,java.lang.Long,java.lang.Long,perfetto.protos.TraceConfig$TraceFilter,okio.ByteString)>(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30);

        return $r31;
    }

    public static perfetto.protos.TraceConfig copy$default(perfetto.protos.TraceConfig, java.util.List, java.util.List, perfetto.protos.TraceConfig$BuiltinDataSource, java.lang.Integer, java.lang.Boolean, perfetto.protos.TraceConfig$LockdownModeOperation, java.util.List, perfetto.protos.TraceConfig$StatsdMetadata, java.lang.Boolean, java.lang.String, java.lang.Integer, java.lang.Long, perfetto.protos.TraceConfig$GuardrailOverrides, java.lang.Boolean, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Boolean, java.lang.Integer, perfetto.protos.TraceConfig$TriggerConfig, java.util.List, perfetto.protos.TraceConfig$IncrementalStateConfig, java.lang.Boolean, java.lang.String, perfetto.protos.TraceConfig$CompressionType, perfetto.protos.TraceConfig$StatsdLogging, java.lang.Long, java.lang.Long, perfetto.protos.TraceConfig$TraceFilter, okio.ByteString, int, java.lang.Object)
    {
        perfetto.protos.TraceConfig r0, $r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30;
        java.lang.Object r1;
        java.util.List r3, r4, r9, r23;
        perfetto.protos.TraceConfig$BuiltinDataSource r5;
        java.lang.Integer r6, r13, r17, r18, r19, r21;
        java.lang.Boolean r7, r11, r16, r20, r25;
        perfetto.protos.TraceConfig$LockdownModeOperation r8;
        perfetto.protos.TraceConfig$StatsdMetadata r10;
        java.lang.String r12, r26;
        java.lang.Long r14, r29, r30;
        perfetto.protos.TraceConfig$GuardrailOverrides r15;
        perfetto.protos.TraceConfig$TriggerConfig r22;
        perfetto.protos.TraceConfig$IncrementalStateConfig r24;
        perfetto.protos.TraceConfig$CompressionType r27;
        perfetto.protos.TraceConfig$StatsdLogging r28;
        perfetto.protos.TraceConfig$TraceFilter r31;
        okio.ByteString r32;

        r0 := @parameter0: perfetto.protos.TraceConfig;

        r3 := @parameter1: java.util.List;

        r4 := @parameter2: java.util.List;

        r5 := @parameter3: perfetto.protos.TraceConfig$BuiltinDataSource;

        r6 := @parameter4: java.lang.Integer;

        r7 := @parameter5: java.lang.Boolean;

        r8 := @parameter6: perfetto.protos.TraceConfig$LockdownModeOperation;

        r9 := @parameter7: java.util.List;

        r10 := @parameter8: perfetto.protos.TraceConfig$StatsdMetadata;

        r11 := @parameter9: java.lang.Boolean;

        r12 := @parameter10: java.lang.String;

        r13 := @parameter11: java.lang.Integer;

        r14 := @parameter12: java.lang.Long;

        r15 := @parameter13: perfetto.protos.TraceConfig$GuardrailOverrides;

        r16 := @parameter14: java.lang.Boolean;

        r17 := @parameter15: java.lang.Integer;

        r18 := @parameter16: java.lang.Integer;

        r19 := @parameter17: java.lang.Integer;

        r20 := @parameter18: java.lang.Boolean;

        r21 := @parameter19: java.lang.Integer;

        r22 := @parameter20: perfetto.protos.TraceConfig$TriggerConfig;

        r23 := @parameter21: java.util.List;

        r24 := @parameter22: perfetto.protos.TraceConfig$IncrementalStateConfig;

        r25 := @parameter23: java.lang.Boolean;

        r26 := @parameter24: java.lang.String;

        r27 := @parameter25: perfetto.protos.TraceConfig$CompressionType;

        r28 := @parameter26: perfetto.protos.TraceConfig$StatsdLogging;

        r29 := @parameter27: java.lang.Long;

        r30 := @parameter28: java.lang.Long;

        r31 := @parameter29: perfetto.protos.TraceConfig$TraceFilter;

        r32 := @parameter30: okio.ByteString;

        i0 := @parameter31: int;

        r1 := @parameter32: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label01;

        r3 = r0.<perfetto.protos.TraceConfig: java.util.List buffers>;

     label01:
        $i2 = i0 & 2;

        if $i2 == 0 goto label02;

        r4 = r0.<perfetto.protos.TraceConfig: java.util.List data_sources>;

     label02:
        $i3 = i0 & 4;

        if $i3 == 0 goto label03;

        r5 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$BuiltinDataSource builtin_data_sources>;

     label03:
        $i4 = i0 & 8;

        if $i4 == 0 goto label04;

        r6 = r0.<perfetto.protos.TraceConfig: java.lang.Integer duration_ms>;

     label04:
        $i5 = i0 & 16;

        if $i5 == 0 goto label05;

        r7 = r0.<perfetto.protos.TraceConfig: java.lang.Boolean enable_extra_guardrails>;

     label05:
        $i6 = i0 & 32;

        if $i6 == 0 goto label06;

        r8 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$LockdownModeOperation lockdown_mode>;

     label06:
        $i7 = i0 & 64;

        if $i7 == 0 goto label07;

        r9 = r0.<perfetto.protos.TraceConfig: java.util.List producers>;

     label07:
        $i8 = i0 & 128;

        if $i8 == 0 goto label08;

        r10 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$StatsdMetadata statsd_metadata>;

     label08:
        $i9 = i0 & 256;

        if $i9 == 0 goto label09;

        r11 = r0.<perfetto.protos.TraceConfig: java.lang.Boolean write_into_file>;

     label09:
        $i10 = i0 & 512;

        if $i10 == 0 goto label10;

        r12 = r0.<perfetto.protos.TraceConfig: java.lang.String output_path>;

     label10:
        $i11 = i0 & 1024;

        if $i11 == 0 goto label11;

        r13 = r0.<perfetto.protos.TraceConfig: java.lang.Integer file_write_period_ms>;

     label11:
        $i12 = i0 & 2048;

        if $i12 == 0 goto label12;

        r14 = r0.<perfetto.protos.TraceConfig: java.lang.Long max_file_size_bytes>;

     label12:
        $i13 = i0 & 4096;

        if $i13 == 0 goto label13;

        r15 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$GuardrailOverrides guardrail_overrides>;

     label13:
        $i14 = i0 & 8192;

        if $i14 == 0 goto label14;

        r16 = r0.<perfetto.protos.TraceConfig: java.lang.Boolean deferred_start>;

     label14:
        $i15 = i0 & 16384;

        if $i15 == 0 goto label15;

        r17 = r0.<perfetto.protos.TraceConfig: java.lang.Integer flush_period_ms>;

     label15:
        $i16 = i0 & 32768;

        if $i16 == 0 goto label16;

        r18 = r0.<perfetto.protos.TraceConfig: java.lang.Integer flush_timeout_ms>;

     label16:
        $i17 = i0 & 65536;

        if $i17 == 0 goto label17;

        r19 = r0.<perfetto.protos.TraceConfig: java.lang.Integer data_source_stop_timeout_ms>;

     label17:
        $i18 = i0 & 131072;

        if $i18 == 0 goto label18;

        r20 = r0.<perfetto.protos.TraceConfig: java.lang.Boolean notify_traceur>;

     label18:
        $i19 = i0 & 262144;

        if $i19 == 0 goto label19;

        r21 = r0.<perfetto.protos.TraceConfig: java.lang.Integer bugreport_score>;

     label19:
        $i20 = i0 & 524288;

        if $i20 == 0 goto label20;

        r22 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$TriggerConfig trigger_config>;

     label20:
        $i21 = i0 & 1048576;

        if $i21 == 0 goto label21;

        r23 = r0.<perfetto.protos.TraceConfig: java.util.List activate_triggers>;

     label21:
        $i22 = i0 & 2097152;

        if $i22 == 0 goto label22;

        r24 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$IncrementalStateConfig incremental_state_config>;

     label22:
        $i23 = i0 & 4194304;

        if $i23 == 0 goto label23;

        r25 = r0.<perfetto.protos.TraceConfig: java.lang.Boolean allow_user_build_tracing>;

     label23:
        $i24 = i0 & 8388608;

        if $i24 == 0 goto label24;

        r26 = r0.<perfetto.protos.TraceConfig: java.lang.String unique_session_name>;

     label24:
        $i25 = i0 & 16777216;

        if $i25 == 0 goto label25;

        r27 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$CompressionType compression_type>;

     label25:
        $i26 = i0 & 33554432;

        if $i26 == 0 goto label26;

        r28 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$StatsdLogging statsd_logging>;

     label26:
        $i27 = i0 & 67108864;

        if $i27 == 0 goto label27;

        r29 = r0.<perfetto.protos.TraceConfig: java.lang.Long trace_uuid_msb>;

     label27:
        $i28 = i0 & 134217728;

        if $i28 == 0 goto label28;

        r30 = r0.<perfetto.protos.TraceConfig: java.lang.Long trace_uuid_lsb>;

     label28:
        $i29 = i0 & 268435456;

        if $i29 == 0 goto label29;

        r31 = r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$TraceFilter trace_filter>;

     label29:
        $i30 = i0 & 536870912;

        if $i30 == 0 goto label30;

        r32 = virtualinvoke r0.<perfetto.protos.TraceConfig: okio.ByteString unknownFields()>();

     label30:
        $r2 = virtualinvoke r0.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig copy(java.util.List,java.util.List,perfetto.protos.TraceConfig$BuiltinDataSource,java.lang.Integer,java.lang.Boolean,perfetto.protos.TraceConfig$LockdownModeOperation,java.util.List,perfetto.protos.TraceConfig$StatsdMetadata,java.lang.Boolean,java.lang.String,java.lang.Integer,java.lang.Long,perfetto.protos.TraceConfig$GuardrailOverrides,java.lang.Boolean,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.lang.Integer,perfetto.protos.TraceConfig$TriggerConfig,java.util.List,perfetto.protos.TraceConfig$IncrementalStateConfig,java.lang.Boolean,java.lang.String,perfetto.protos.TraceConfig$CompressionType,perfetto.protos.TraceConfig$StatsdLogging,java.lang.Long,java.lang.Long,perfetto.protos.TraceConfig$TraceFilter,okio.ByteString)>(r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32);

        return $r2;
    }

    public void <init>()
    {
        perfetto.protos.TraceConfig r0;

        r0 := @this: perfetto.protos.TraceConfig;

        specialinvoke r0.<perfetto.protos.TraceConfig: void <init>(java.util.List,java.util.List,perfetto.protos.TraceConfig$BuiltinDataSource,java.lang.Integer,java.lang.Boolean,perfetto.protos.TraceConfig$LockdownModeOperation,java.util.List,perfetto.protos.TraceConfig$StatsdMetadata,java.lang.Boolean,java.lang.String,java.lang.Integer,java.lang.Long,perfetto.protos.TraceConfig$GuardrailOverrides,java.lang.Boolean,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.lang.Integer,perfetto.protos.TraceConfig$TriggerConfig,java.util.List,perfetto.protos.TraceConfig$IncrementalStateConfig,java.lang.Boolean,java.lang.String,perfetto.protos.TraceConfig$CompressionType,perfetto.protos.TraceConfig$StatsdLogging,java.lang.Long,java.lang.Long,perfetto.protos.TraceConfig$TraceFilter,okio.ByteString,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 1073741823, null);

        return;
    }

    public volatile com.squareup.wire.Message$Builder newBuilder()
    {
        perfetto.protos.TraceConfig r0;
        java.lang.Void $r1;
        com.squareup.wire.Message$Builder $r2;

        r0 := @this: perfetto.protos.TraceConfig;

        $r1 = virtualinvoke r0.<perfetto.protos.TraceConfig: java.lang.Void newBuilder()>();

        $r2 = (com.squareup.wire.Message$Builder) $r1;

        return $r2;
    }

    static void <clinit>()
    {
        com.squareup.wire.FieldEncoding r0;
        kotlin.reflect.KClass r1;
        com.squareup.wire.Syntax r2;
        perfetto.protos.TraceConfig$Companion $r3;
        perfetto.protos.TraceConfig$Companion$ADAPTER$1 $r4;
        com.squareup.wire.ProtoAdapter $r5;

        $r3 = new perfetto.protos.TraceConfig$Companion;

        specialinvoke $r3.<perfetto.protos.TraceConfig$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$Companion Companion> = $r3;

        r0 = <com.squareup.wire.FieldEncoding: com.squareup.wire.FieldEncoding LENGTH_DELIMITED>;

        r1 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Lperfetto/protos/TraceConfig;");

        r2 = <com.squareup.wire.Syntax: com.squareup.wire.Syntax PROTO_2>;

        $r4 = new perfetto.protos.TraceConfig$Companion$ADAPTER$1;

        specialinvoke $r4.<perfetto.protos.TraceConfig$Companion$ADAPTER$1: void <init>(com.squareup.wire.FieldEncoding,kotlin.reflect.KClass,com.squareup.wire.Syntax)>(r0, r1, r2);

        $r5 = (com.squareup.wire.ProtoAdapter) $r4;

        <perfetto.protos.TraceConfig: com.squareup.wire.ProtoAdapter ADAPTER> = $r5;

        return;
    }

perfetto.protos.TraceConfig$BufferConfig$Companion$ADAPTER$1
    void <init>(com.squareup.wire.FieldEncoding, kotlin.reflect.KClass, com.squareup.wire.Syntax)
    {
        perfetto.protos.TraceConfig$BufferConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.FieldEncoding $r1;
        kotlin.reflect.KClass $r2;
        com.squareup.wire.Syntax $r3;

        r0 := @this: perfetto.protos.TraceConfig$BufferConfig$Companion$ADAPTER$1;

        $r1 := @parameter0: com.squareup.wire.FieldEncoding;

        $r2 := @parameter1: kotlin.reflect.KClass;

        $r3 := @parameter2: com.squareup.wire.Syntax;

        specialinvoke r0.<com.squareup.wire.ProtoAdapter: void <init>(com.squareup.wire.FieldEncoding,kotlin.reflect.KClass,java.lang.String,com.squareup.wire.Syntax,java.lang.Object)>($r1, $r2, "type.googleapis.com/perfetto.protos.TraceConfig.BufferConfig", $r3, null);

        return;
    }

    public int encodedSize(perfetto.protos.TraceConfig$BufferConfig)
    {
        perfetto.protos.TraceConfig$BufferConfig$Companion$ADAPTER$1 r0;
        perfetto.protos.TraceConfig$BufferConfig r1;
        okio.ByteString $r2;
        com.squareup.wire.ProtoAdapter $r3, $r5;
        java.lang.Integer $r4;
        int $i0, $i1, i2, i3, i4;
        perfetto.protos.TraceConfig$BufferConfig$FillPolicy $r6;

        r0 := @this: perfetto.protos.TraceConfig$BufferConfig$Companion$ADAPTER$1;

        r1 := @parameter0: perfetto.protos.TraceConfig$BufferConfig;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = virtualinvoke r1.<perfetto.protos.TraceConfig$BufferConfig: okio.ByteString unknownFields()>();

        i2 = virtualinvoke $r2.<okio.ByteString: int size()>();

        $r3 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r4 = virtualinvoke r1.<perfetto.protos.TraceConfig$BufferConfig: java.lang.Integer getSize_kb()>();

        $i0 = virtualinvoke $r3.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(1, $r4);

        i3 = i2 + $i0;

        $r5 = <perfetto.protos.TraceConfig$BufferConfig$FillPolicy: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r6 = virtualinvoke r1.<perfetto.protos.TraceConfig$BufferConfig: perfetto.protos.TraceConfig$BufferConfig$FillPolicy getFill_policy()>();

        $i1 = virtualinvoke $r5.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(4, $r6);

        i4 = i3 + $i1;

        return i4;
    }

    public void encode(com.squareup.wire.ProtoWriter, perfetto.protos.TraceConfig$BufferConfig)
    {
        perfetto.protos.TraceConfig$BufferConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoWriter r1;
        perfetto.protos.TraceConfig$BufferConfig r2;
        com.squareup.wire.ProtoAdapter $r3, $r5;
        java.lang.Integer $r4;
        perfetto.protos.TraceConfig$BufferConfig$FillPolicy $r6;
        okio.ByteString $r7;

        r0 := @this: perfetto.protos.TraceConfig$BufferConfig$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoWriter;

        r2 := @parameter1: perfetto.protos.TraceConfig$BufferConfig;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "writer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "value");

        $r3 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r4 = virtualinvoke r2.<perfetto.protos.TraceConfig$BufferConfig: java.lang.Integer getSize_kb()>();

        virtualinvoke $r3.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 1, $r4);

        $r5 = <perfetto.protos.TraceConfig$BufferConfig$FillPolicy: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r6 = virtualinvoke r2.<perfetto.protos.TraceConfig$BufferConfig: perfetto.protos.TraceConfig$BufferConfig$FillPolicy getFill_policy()>();

        virtualinvoke $r5.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 4, $r6);

        $r7 = virtualinvoke r2.<perfetto.protos.TraceConfig$BufferConfig: okio.ByteString unknownFields()>();

        virtualinvoke r1.<com.squareup.wire.ProtoWriter: void writeBytes(okio.ByteString)>($r7);

        return;
    }

    public perfetto.protos.TraceConfig$BufferConfig decode(com.squareup.wire.ProtoReader)
    {
        perfetto.protos.TraceConfig$BufferConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoReader r1, r3;
        okio.ByteString r2;
        long l0, $l4;
        int i1, i2, $i3;
        java.lang.Throwable r4, $r10;
        com.squareup.wire.ProtoAdapter $r5, $r6;
        perfetto.protos.TraceConfig$BufferConfig $r7;
        perfetto.protos.TraceConfig$BufferConfig$FillPolicy $r8;
        java.lang.Integer $r9;
        com.squareup.wire.FieldEncoding $r11;
        java.lang.Long $r12;
        java.lang.Object r13, r14;

        r0 := @this: perfetto.protos.TraceConfig$BufferConfig$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoReader;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "reader");

        r13 = null;

        r14 = null;

        r3 = r1;

        l0 = virtualinvoke r3.<com.squareup.wire.ProtoReader: long beginMessage()>();

     label1:
        i1 = virtualinvoke r3.<com.squareup.wire.ProtoReader: int nextTag()>();

        if i1 != -1 goto label2;

        goto label9;

     label2:
        i2 = i1;

        tableswitch(i2)
        {
            case 1: goto label3;
            case 2: goto label7;
            case 3: goto label7;
            case 4: goto label4;
            default: goto label7;
        };

     label3:
        $r6 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        r13 = virtualinvoke $r6.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label8;

     label4:
        $r5 = <perfetto.protos.TraceConfig$BufferConfig$FillPolicy: com.squareup.wire.ProtoAdapter ADAPTER>;

        r14 = virtualinvoke $r5.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

     label5:
        goto label8;

     label6:
        $r10 := @caughtexception;

        r4 = $r10;

        $r11 = <com.squareup.wire.FieldEncoding: com.squareup.wire.FieldEncoding VARINT>;

        $i3 = r4.<com.squareup.wire.ProtoAdapter$EnumConstantNotFoundException: int value>;

        $l4 = (long) $i3;

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        virtualinvoke r1.<com.squareup.wire.ProtoReader: void addUnknownField(int,com.squareup.wire.FieldEncoding,java.lang.Object)>(i2, $r11, $r12);

        goto label8;

     label7:
        virtualinvoke r1.<com.squareup.wire.ProtoReader: void readUnknownField(int)>(i2);

     label8:
        goto label1;

     label9:
        r2 = virtualinvoke r3.<com.squareup.wire.ProtoReader: okio.ByteString endMessageAndGetUnknownFields(long)>(l0);

        $r7 = new perfetto.protos.TraceConfig$BufferConfig;

        $r9 = (java.lang.Integer) r13;

        $r8 = (perfetto.protos.TraceConfig$BufferConfig$FillPolicy) r14;

        specialinvoke $r7.<perfetto.protos.TraceConfig$BufferConfig: void <init>(java.lang.Integer,perfetto.protos.TraceConfig$BufferConfig$FillPolicy,okio.ByteString)>($r9, $r8, r2);

        return $r7;

        catch com.squareup.wire.ProtoAdapter$EnumConstantNotFoundException from label4 to label5 with label6;
    }

    public perfetto.protos.TraceConfig$BufferConfig redact(perfetto.protos.TraceConfig$BufferConfig)
    {
        perfetto.protos.TraceConfig$BufferConfig$Companion$ADAPTER$1 r0;
        perfetto.protos.TraceConfig$BufferConfig r1, $r3;
        okio.ByteString $r2;

        r0 := @this: perfetto.protos.TraceConfig$BufferConfig$Companion$ADAPTER$1;

        r1 := @parameter0: perfetto.protos.TraceConfig$BufferConfig;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = <okio.ByteString: okio.ByteString EMPTY>;

        $r3 = staticinvoke <perfetto.protos.TraceConfig$BufferConfig: perfetto.protos.TraceConfig$BufferConfig copy$default(perfetto.protos.TraceConfig$BufferConfig,java.lang.Integer,perfetto.protos.TraceConfig$BufferConfig$FillPolicy,okio.ByteString,int,java.lang.Object)>(r1, null, null, $r2, 3, null);

        return $r3;
    }

    public volatile int encodedSize(java.lang.Object)
    {
        perfetto.protos.TraceConfig$BufferConfig$Companion$ADAPTER$1 r0;
        java.lang.Object r1;
        perfetto.protos.TraceConfig$BufferConfig $r2;
        int $i0;

        r0 := @this: perfetto.protos.TraceConfig$BufferConfig$Companion$ADAPTER$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (perfetto.protos.TraceConfig$BufferConfig) r1;

        $i0 = virtualinvoke r0.<perfetto.protos.TraceConfig$BufferConfig$Companion$ADAPTER$1: int encodedSize(perfetto.protos.TraceConfig$BufferConfig)>($r2);

        return $i0;
    }

    public volatile void encode(com.squareup.wire.ProtoWriter, java.lang.Object)
    {
        perfetto.protos.TraceConfig$BufferConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoWriter r1;
        java.lang.Object r2;
        perfetto.protos.TraceConfig$BufferConfig $r3;

        r0 := @this: perfetto.protos.TraceConfig$BufferConfig$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoWriter;

        r2 := @parameter1: java.lang.Object;

        $r3 = (perfetto.protos.TraceConfig$BufferConfig) r2;

        virtualinvoke r0.<perfetto.protos.TraceConfig$BufferConfig$Companion$ADAPTER$1: void encode(com.squareup.wire.ProtoWriter,perfetto.protos.TraceConfig$BufferConfig)>(r1, $r3);

        return;
    }

    public volatile java.lang.Object decode(com.squareup.wire.ProtoReader)
    {
        perfetto.protos.TraceConfig$BufferConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoReader r1;
        perfetto.protos.TraceConfig$BufferConfig $r2;

        r0 := @this: perfetto.protos.TraceConfig$BufferConfig$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoReader;

        $r2 = virtualinvoke r0.<perfetto.protos.TraceConfig$BufferConfig$Companion$ADAPTER$1: perfetto.protos.TraceConfig$BufferConfig decode(com.squareup.wire.ProtoReader)>(r1);

        return $r2;
    }

    public volatile java.lang.Object redact(java.lang.Object)
    {
        perfetto.protos.TraceConfig$BufferConfig$Companion$ADAPTER$1 r0;
        java.lang.Object r1;
        perfetto.protos.TraceConfig$BufferConfig $r2, $r3;

        r0 := @this: perfetto.protos.TraceConfig$BufferConfig$Companion$ADAPTER$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (perfetto.protos.TraceConfig$BufferConfig) r1;

        $r3 = virtualinvoke r0.<perfetto.protos.TraceConfig$BufferConfig$Companion$ADAPTER$1: perfetto.protos.TraceConfig$BufferConfig redact(perfetto.protos.TraceConfig$BufferConfig)>($r2);

        return $r3;
    }

perfetto.protos.TraceConfig$BufferConfig$Companion
    private void <init>()
    {
        perfetto.protos.TraceConfig$BufferConfig$Companion r0;

        r0 := @this: perfetto.protos.TraceConfig$BufferConfig$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.TraceConfig$BufferConfig$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: perfetto.protos.TraceConfig$BufferConfig$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<perfetto.protos.TraceConfig$BufferConfig$Companion: void <init>()>();

        return;
    }

perfetto.protos.TraceConfig$BufferConfig$FillPolicy$Companion$ADAPTER$1
    void <init>(kotlin.reflect.KClass, com.squareup.wire.Syntax, perfetto.protos.TraceConfig$BufferConfig$FillPolicy)
    {
        perfetto.protos.TraceConfig$BufferConfig$FillPolicy$Companion$ADAPTER$1 r0;
        kotlin.reflect.KClass $r1;
        com.squareup.wire.Syntax $r2;
        perfetto.protos.TraceConfig$BufferConfig$FillPolicy $r3;
        com.squareup.wire.WireEnum $r4;

        r0 := @this: perfetto.protos.TraceConfig$BufferConfig$FillPolicy$Companion$ADAPTER$1;

        $r1 := @parameter0: kotlin.reflect.KClass;

        $r2 := @parameter1: com.squareup.wire.Syntax;

        $r3 := @parameter2: perfetto.protos.TraceConfig$BufferConfig$FillPolicy;

        $r4 = (com.squareup.wire.WireEnum) $r3;

        specialinvoke r0.<com.squareup.wire.EnumAdapter: void <init>(kotlin.reflect.KClass,com.squareup.wire.Syntax,com.squareup.wire.WireEnum)>($r1, $r2, $r4);

        return;
    }

    public perfetto.protos.TraceConfig$BufferConfig$FillPolicy fromValue(int)
    {
        perfetto.protos.TraceConfig$BufferConfig$FillPolicy$Companion$ADAPTER$1 r0;
        int i0;
        perfetto.protos.TraceConfig$BufferConfig$FillPolicy$Companion $r1;
        perfetto.protos.TraceConfig$BufferConfig$FillPolicy $r2;

        r0 := @this: perfetto.protos.TraceConfig$BufferConfig$FillPolicy$Companion$ADAPTER$1;

        i0 := @parameter0: int;

        $r1 = <perfetto.protos.TraceConfig$BufferConfig$FillPolicy: perfetto.protos.TraceConfig$BufferConfig$FillPolicy$Companion Companion>;

        $r2 = virtualinvoke $r1.<perfetto.protos.TraceConfig$BufferConfig$FillPolicy$Companion: perfetto.protos.TraceConfig$BufferConfig$FillPolicy fromValue(int)>(i0);

        return $r2;
    }

    public volatile com.squareup.wire.WireEnum fromValue(int)
    {
        perfetto.protos.TraceConfig$BufferConfig$FillPolicy$Companion$ADAPTER$1 r0;
        int i0;
        perfetto.protos.TraceConfig$BufferConfig$FillPolicy $r1;
        com.squareup.wire.WireEnum $r2;

        r0 := @this: perfetto.protos.TraceConfig$BufferConfig$FillPolicy$Companion$ADAPTER$1;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<perfetto.protos.TraceConfig$BufferConfig$FillPolicy$Companion$ADAPTER$1: perfetto.protos.TraceConfig$BufferConfig$FillPolicy fromValue(int)>(i0);

        $r2 = (com.squareup.wire.WireEnum) $r1;

        return $r2;
    }

perfetto.protos.TraceConfig$BufferConfig$FillPolicy$Companion
    private void <init>()
    {
        perfetto.protos.TraceConfig$BufferConfig$FillPolicy$Companion r0;

        r0 := @this: perfetto.protos.TraceConfig$BufferConfig$FillPolicy$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final perfetto.protos.TraceConfig$BufferConfig$FillPolicy fromValue(int)
    {
        perfetto.protos.TraceConfig$BufferConfig$FillPolicy$Companion r0;
        int i0;
        perfetto.protos.TraceConfig$BufferConfig$FillPolicy $r1;

        r0 := @this: perfetto.protos.TraceConfig$BufferConfig$FillPolicy$Companion;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        $r1 = <perfetto.protos.TraceConfig$BufferConfig$FillPolicy: perfetto.protos.TraceConfig$BufferConfig$FillPolicy UNSPECIFIED>;

        goto label5;

     label2:
        $r1 = <perfetto.protos.TraceConfig$BufferConfig$FillPolicy: perfetto.protos.TraceConfig$BufferConfig$FillPolicy RING_BUFFER>;

        goto label5;

     label3:
        $r1 = <perfetto.protos.TraceConfig$BufferConfig$FillPolicy: perfetto.protos.TraceConfig$BufferConfig$FillPolicy DISCARD>;

        goto label5;

     label4:
        $r1 = null;

     label5:
        return $r1;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.TraceConfig$BufferConfig$FillPolicy$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: perfetto.protos.TraceConfig$BufferConfig$FillPolicy$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<perfetto.protos.TraceConfig$BufferConfig$FillPolicy$Companion: void <init>()>();

        return;
    }

perfetto.protos.TraceConfig$BufferConfig$FillPolicy
<perfetto.protos.TraceConfig$BufferConfig$FillPolicy: perfetto.protos.TraceConfig$BufferConfig$FillPolicy$Companion Companion>
<perfetto.protos.TraceConfig$BufferConfig$FillPolicy: int value>
<perfetto.protos.TraceConfig$BufferConfig$FillPolicy: com.squareup.wire.ProtoAdapter ADAPTER>
<perfetto.protos.TraceConfig$BufferConfig$FillPolicy: perfetto.protos.TraceConfig$BufferConfig$FillPolicy UNSPECIFIED>
<perfetto.protos.TraceConfig$BufferConfig$FillPolicy: perfetto.protos.TraceConfig$BufferConfig$FillPolicy RING_BUFFER>
<perfetto.protos.TraceConfig$BufferConfig$FillPolicy: perfetto.protos.TraceConfig$BufferConfig$FillPolicy DISCARD>
<perfetto.protos.TraceConfig$BufferConfig$FillPolicy: perfetto.protos.TraceConfig$BufferConfig$FillPolicy[] $VALUES>
    private void <init>(java.lang.String, int, int)
    {
        perfetto.protos.TraceConfig$BufferConfig$FillPolicy r0;
        java.lang.String $r1;
        int $i0, i1;

        r0 := @this: perfetto.protos.TraceConfig$BufferConfig$FillPolicy;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        r0.<perfetto.protos.TraceConfig$BufferConfig$FillPolicy: int value> = i1;

        return;
    }

    public int getValue()
    {
        perfetto.protos.TraceConfig$BufferConfig$FillPolicy r0;
        int $i0;

        r0 := @this: perfetto.protos.TraceConfig$BufferConfig$FillPolicy;

        $i0 = r0.<perfetto.protos.TraceConfig$BufferConfig$FillPolicy: int value>;

        return $i0;
    }

    public static perfetto.protos.TraceConfig$BufferConfig$FillPolicy[] values()
    {
        perfetto.protos.TraceConfig$BufferConfig$FillPolicy[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <perfetto.protos.TraceConfig$BufferConfig$FillPolicy: perfetto.protos.TraceConfig$BufferConfig$FillPolicy[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (perfetto.protos.TraceConfig$BufferConfig$FillPolicy[]) $r1;

        return $r2;
    }

    public static perfetto.protos.TraceConfig$BufferConfig$FillPolicy valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        perfetto.protos.TraceConfig$BufferConfig$FillPolicy $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lperfetto/protos/TraceConfig$BufferConfig$FillPolicy;", r0);

        $r2 = (perfetto.protos.TraceConfig$BufferConfig$FillPolicy) $r1;

        return $r2;
    }

    private static final perfetto.protos.TraceConfig$BufferConfig$FillPolicy[] $values()
    {
        perfetto.protos.TraceConfig$BufferConfig$FillPolicy[] r0;
        perfetto.protos.TraceConfig$BufferConfig$FillPolicy $r1, $r2, $r3;

        r0 = newarray (perfetto.protos.TraceConfig$BufferConfig$FillPolicy)[3];

        $r1 = <perfetto.protos.TraceConfig$BufferConfig$FillPolicy: perfetto.protos.TraceConfig$BufferConfig$FillPolicy UNSPECIFIED>;

        r0[0] = $r1;

        $r2 = <perfetto.protos.TraceConfig$BufferConfig$FillPolicy: perfetto.protos.TraceConfig$BufferConfig$FillPolicy RING_BUFFER>;

        r0[1] = $r2;

        $r3 = <perfetto.protos.TraceConfig$BufferConfig$FillPolicy: perfetto.protos.TraceConfig$BufferConfig$FillPolicy DISCARD>;

        r0[2] = $r3;

        return r0;
    }

    public static final perfetto.protos.TraceConfig$BufferConfig$FillPolicy fromValue(int)
    {
        int i0;
        perfetto.protos.TraceConfig$BufferConfig$FillPolicy$Companion $r0;
        perfetto.protos.TraceConfig$BufferConfig$FillPolicy $r1;

        i0 := @parameter0: int;

        $r0 = <perfetto.protos.TraceConfig$BufferConfig$FillPolicy: perfetto.protos.TraceConfig$BufferConfig$FillPolicy$Companion Companion>;

        $r1 = virtualinvoke $r0.<perfetto.protos.TraceConfig$BufferConfig$FillPolicy$Companion: perfetto.protos.TraceConfig$BufferConfig$FillPolicy fromValue(int)>(i0);

        return $r1;
    }

    static void <clinit>()
    {
        kotlin.reflect.KClass r0;
        com.squareup.wire.Syntax r1;
        perfetto.protos.TraceConfig$BufferConfig$FillPolicy r2, $r3, $r4, $r5;
        perfetto.protos.TraceConfig$BufferConfig$FillPolicy[] $r6;
        perfetto.protos.TraceConfig$BufferConfig$FillPolicy$Companion $r7;
        perfetto.protos.TraceConfig$BufferConfig$FillPolicy$Companion$ADAPTER$1 $r8;
        com.squareup.wire.ProtoAdapter $r9;

        $r3 = new perfetto.protos.TraceConfig$BufferConfig$FillPolicy;

        specialinvoke $r3.<perfetto.protos.TraceConfig$BufferConfig$FillPolicy: void <init>(java.lang.String,int,int)>("UNSPECIFIED", 0, 0);

        <perfetto.protos.TraceConfig$BufferConfig$FillPolicy: perfetto.protos.TraceConfig$BufferConfig$FillPolicy UNSPECIFIED> = $r3;

        $r4 = new perfetto.protos.TraceConfig$BufferConfig$FillPolicy;

        specialinvoke $r4.<perfetto.protos.TraceConfig$BufferConfig$FillPolicy: void <init>(java.lang.String,int,int)>("RING_BUFFER", 1, 1);

        <perfetto.protos.TraceConfig$BufferConfig$FillPolicy: perfetto.protos.TraceConfig$BufferConfig$FillPolicy RING_BUFFER> = $r4;

        $r5 = new perfetto.protos.TraceConfig$BufferConfig$FillPolicy;

        specialinvoke $r5.<perfetto.protos.TraceConfig$BufferConfig$FillPolicy: void <init>(java.lang.String,int,int)>("DISCARD", 2, 2);

        <perfetto.protos.TraceConfig$BufferConfig$FillPolicy: perfetto.protos.TraceConfig$BufferConfig$FillPolicy DISCARD> = $r5;

        $r6 = staticinvoke <perfetto.protos.TraceConfig$BufferConfig$FillPolicy: perfetto.protos.TraceConfig$BufferConfig$FillPolicy[] $values()>();

        <perfetto.protos.TraceConfig$BufferConfig$FillPolicy: perfetto.protos.TraceConfig$BufferConfig$FillPolicy[] $VALUES> = $r6;

        $r7 = new perfetto.protos.TraceConfig$BufferConfig$FillPolicy$Companion;

        specialinvoke $r7.<perfetto.protos.TraceConfig$BufferConfig$FillPolicy$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <perfetto.protos.TraceConfig$BufferConfig$FillPolicy: perfetto.protos.TraceConfig$BufferConfig$FillPolicy$Companion Companion> = $r7;

        r0 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Lperfetto/protos/TraceConfig$BufferConfig$FillPolicy;");

        r1 = <com.squareup.wire.Syntax: com.squareup.wire.Syntax PROTO_2>;

        r2 = <perfetto.protos.TraceConfig$BufferConfig$FillPolicy: perfetto.protos.TraceConfig$BufferConfig$FillPolicy UNSPECIFIED>;

        $r8 = new perfetto.protos.TraceConfig$BufferConfig$FillPolicy$Companion$ADAPTER$1;

        specialinvoke $r8.<perfetto.protos.TraceConfig$BufferConfig$FillPolicy$Companion$ADAPTER$1: void <init>(kotlin.reflect.KClass,com.squareup.wire.Syntax,perfetto.protos.TraceConfig$BufferConfig$FillPolicy)>(r0, r1, r2);

        $r9 = (com.squareup.wire.ProtoAdapter) $r8;

        <perfetto.protos.TraceConfig$BufferConfig$FillPolicy: com.squareup.wire.ProtoAdapter ADAPTER> = $r9;

        return;
    }

perfetto.protos.TraceConfig$BufferConfig
<perfetto.protos.TraceConfig$BufferConfig: perfetto.protos.TraceConfig$BufferConfig$Companion Companion>
<perfetto.protos.TraceConfig$BufferConfig: java.lang.Integer size_kb>
<perfetto.protos.TraceConfig$BufferConfig: perfetto.protos.TraceConfig$BufferConfig$FillPolicy fill_policy>
<perfetto.protos.TraceConfig$BufferConfig: com.squareup.wire.ProtoAdapter ADAPTER>
<perfetto.protos.TraceConfig$BufferConfig: long serialVersionUID>
    public void <init>(java.lang.Integer, perfetto.protos.TraceConfig$BufferConfig$FillPolicy, okio.ByteString)
    {
        perfetto.protos.TraceConfig$BufferConfig r0;
        java.lang.Integer r1;
        perfetto.protos.TraceConfig$BufferConfig$FillPolicy r2;
        okio.ByteString r3;
        com.squareup.wire.ProtoAdapter $r4;

        r0 := @this: perfetto.protos.TraceConfig$BufferConfig;

        r1 := @parameter0: java.lang.Integer;

        r2 := @parameter1: perfetto.protos.TraceConfig$BufferConfig$FillPolicy;

        r3 := @parameter2: okio.ByteString;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "unknownFields");

        $r4 = <perfetto.protos.TraceConfig$BufferConfig: com.squareup.wire.ProtoAdapter ADAPTER>;

        specialinvoke r0.<com.squareup.wire.Message: void <init>(com.squareup.wire.ProtoAdapter,okio.ByteString)>($r4, r3);

        r0.<perfetto.protos.TraceConfig$BufferConfig: java.lang.Integer size_kb> = r1;

        r0.<perfetto.protos.TraceConfig$BufferConfig: perfetto.protos.TraceConfig$BufferConfig$FillPolicy fill_policy> = r2;

        return;
    }

    public void <init>(java.lang.Integer, perfetto.protos.TraceConfig$BufferConfig$FillPolicy, okio.ByteString, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.TraceConfig$BufferConfig r0;
        int i0, $i1, $i2, $i3;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        java.lang.Integer r2;
        perfetto.protos.TraceConfig$BufferConfig$FillPolicy r3;
        okio.ByteString r4;

        r0 := @this: perfetto.protos.TraceConfig$BufferConfig;

        r2 := @parameter0: java.lang.Integer;

        r3 := @parameter1: perfetto.protos.TraceConfig$BufferConfig$FillPolicy;

        r4 := @parameter2: okio.ByteString;

        i0 := @parameter3: int;

        r1 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r2 = null;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r3 = null;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        r4 = <okio.ByteString: okio.ByteString EMPTY>;

     label3:
        specialinvoke r0.<perfetto.protos.TraceConfig$BufferConfig: void <init>(java.lang.Integer,perfetto.protos.TraceConfig$BufferConfig$FillPolicy,okio.ByteString)>(r2, r3, r4);

        return;
    }

    public final java.lang.Integer getSize_kb()
    {
        perfetto.protos.TraceConfig$BufferConfig r0;
        java.lang.Integer $r1;

        r0 := @this: perfetto.protos.TraceConfig$BufferConfig;

        $r1 = r0.<perfetto.protos.TraceConfig$BufferConfig: java.lang.Integer size_kb>;

        return $r1;
    }

    public final perfetto.protos.TraceConfig$BufferConfig$FillPolicy getFill_policy()
    {
        perfetto.protos.TraceConfig$BufferConfig r0;
        perfetto.protos.TraceConfig$BufferConfig$FillPolicy $r1;

        r0 := @this: perfetto.protos.TraceConfig$BufferConfig;

        $r1 = r0.<perfetto.protos.TraceConfig$BufferConfig: perfetto.protos.TraceConfig$BufferConfig$FillPolicy fill_policy>;

        return $r1;
    }

    public java.lang.Void newBuilder()
    {
        perfetto.protos.TraceConfig$BufferConfig r0;
        java.lang.AssertionError $r1;

        r0 := @this: perfetto.protos.TraceConfig$BufferConfig;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;
    }

    public boolean equals(java.lang.Object)
    {
        perfetto.protos.TraceConfig$BufferConfig r0, $r3, $r5, $r8;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        okio.ByteString $r2, $r4;
        java.lang.Integer $r6, $r7;
        perfetto.protos.TraceConfig$BufferConfig$FillPolicy $r9, $r10;

        r0 := @this: perfetto.protos.TraceConfig$BufferConfig;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof perfetto.protos.TraceConfig$BufferConfig;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<perfetto.protos.TraceConfig$BufferConfig: okio.ByteString unknownFields()>();

        $r3 = (perfetto.protos.TraceConfig$BufferConfig) r1;

        $r4 = virtualinvoke $r3.<perfetto.protos.TraceConfig$BufferConfig: okio.ByteString unknownFields()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r4);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $r7 = r0.<perfetto.protos.TraceConfig$BufferConfig: java.lang.Integer size_kb>;

        $r5 = (perfetto.protos.TraceConfig$BufferConfig) r1;

        $r6 = $r5.<perfetto.protos.TraceConfig$BufferConfig: java.lang.Integer size_kb>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, $r6);

        if $z2 != 0 goto label4;

        return 0;

     label4:
        $r10 = r0.<perfetto.protos.TraceConfig$BufferConfig: perfetto.protos.TraceConfig$BufferConfig$FillPolicy fill_policy>;

        $r8 = (perfetto.protos.TraceConfig$BufferConfig) r1;

        $r9 = $r8.<perfetto.protos.TraceConfig$BufferConfig: perfetto.protos.TraceConfig$BufferConfig$FillPolicy fill_policy>;

        if $r10 == $r9 goto label5;

        return 0;

     label5:
        return 1;
    }

    public int hashCode()
    {
        perfetto.protos.TraceConfig$BufferConfig r0;
        okio.ByteString $r1;
        java.lang.Integer $r2;
        int $i0, $i1, i2, i3, $i4, i5, $i6;
        perfetto.protos.TraceConfig$BufferConfig$FillPolicy $r3;

        r0 := @this: perfetto.protos.TraceConfig$BufferConfig;

        i2 = r0.<perfetto.protos.TraceConfig$BufferConfig: int hashCode>;

        if i2 != 0 goto label5;

        $r1 = virtualinvoke r0.<perfetto.protos.TraceConfig$BufferConfig: okio.ByteString unknownFields()>();

        i3 = virtualinvoke $r1.<okio.ByteString: int hashCode()>();

        $i0 = i3 * 37;

        $r2 = r0.<perfetto.protos.TraceConfig$BufferConfig: java.lang.Integer size_kb>;

        if $r2 != null goto label1;

        $i4 = 0;

        goto label2;

     label1:
        $i4 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

     label2:
        i5 = $i0 + $i4;

        $i1 = i5 * 37;

        $r3 = r0.<perfetto.protos.TraceConfig$BufferConfig: perfetto.protos.TraceConfig$BufferConfig$FillPolicy fill_policy>;

        if $r3 != null goto label3;

        $i6 = 0;

        goto label4;

     label3:
        $i6 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

     label4:
        i2 = $i1 + $i6;

        r0.<perfetto.protos.TraceConfig$BufferConfig: int hashCode> = i2;

     label5:
        return i2;
    }

    public java.lang.String toString()
    {
        perfetto.protos.TraceConfig$BufferConfig r0;
        java.util.List r1;
        java.util.ArrayList $r2;
        java.lang.Integer $r3, $r13;
        perfetto.protos.TraceConfig$BufferConfig$FillPolicy $r4, $r10;
        java.lang.CharSequence $r5, $r6, $r7;
        java.lang.Iterable $r8;
        java.lang.String $r9, $r12, $r15;
        java.util.Collection $r11, $r14;

        r0 := @this: perfetto.protos.TraceConfig$BufferConfig;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r1 = (java.util.List) $r2;

        $r3 = r0.<perfetto.protos.TraceConfig$BufferConfig: java.lang.Integer size_kb>;

        if $r3 == null goto label1;

        $r14 = (java.util.Collection) r1;

        $r13 = r0.<perfetto.protos.TraceConfig$BufferConfig: java.lang.Integer size_kb>;

        $r15 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("size_kb=", $r13);

        interfaceinvoke $r14.<java.util.Collection: boolean add(java.lang.Object)>($r15);

     label1:
        $r4 = r0.<perfetto.protos.TraceConfig$BufferConfig: perfetto.protos.TraceConfig$BufferConfig$FillPolicy fill_policy>;

        if $r4 == null goto label2;

        $r11 = (java.util.Collection) r1;

        $r10 = r0.<perfetto.protos.TraceConfig$BufferConfig: perfetto.protos.TraceConfig$BufferConfig$FillPolicy fill_policy>;

        $r12 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("fill_policy=", $r10);

        interfaceinvoke $r11.<java.util.Collection: boolean add(java.lang.Object)>($r12);

     label2:
        $r8 = (java.lang.Iterable) r1;

        $r7 = (java.lang.CharSequence) ", ";

        $r6 = (java.lang.CharSequence) "BufferConfig{";

        $r5 = (java.lang.CharSequence) "}";

        $r9 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r8, $r7, $r6, $r5, 0, null, null, 56, null);

        return $r9;
    }

    public final perfetto.protos.TraceConfig$BufferConfig copy(java.lang.Integer, perfetto.protos.TraceConfig$BufferConfig$FillPolicy, okio.ByteString)
    {
        perfetto.protos.TraceConfig$BufferConfig r0, $r4;
        java.lang.Integer r1;
        perfetto.protos.TraceConfig$BufferConfig$FillPolicy r2;
        okio.ByteString r3;

        r0 := @this: perfetto.protos.TraceConfig$BufferConfig;

        r1 := @parameter0: java.lang.Integer;

        r2 := @parameter1: perfetto.protos.TraceConfig$BufferConfig$FillPolicy;

        r3 := @parameter2: okio.ByteString;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "unknownFields");

        $r4 = new perfetto.protos.TraceConfig$BufferConfig;

        specialinvoke $r4.<perfetto.protos.TraceConfig$BufferConfig: void <init>(java.lang.Integer,perfetto.protos.TraceConfig$BufferConfig$FillPolicy,okio.ByteString)>(r1, r2, r3);

        return $r4;
    }

    public static perfetto.protos.TraceConfig$BufferConfig copy$default(perfetto.protos.TraceConfig$BufferConfig, java.lang.Integer, perfetto.protos.TraceConfig$BufferConfig$FillPolicy, okio.ByteString, int, java.lang.Object)
    {
        perfetto.protos.TraceConfig$BufferConfig r0, $r2;
        int i0, $i1, $i2, $i3;
        java.lang.Object r1;
        java.lang.Integer r3;
        perfetto.protos.TraceConfig$BufferConfig$FillPolicy r4;
        okio.ByteString r5;

        r0 := @parameter0: perfetto.protos.TraceConfig$BufferConfig;

        r3 := @parameter1: java.lang.Integer;

        r4 := @parameter2: perfetto.protos.TraceConfig$BufferConfig$FillPolicy;

        r5 := @parameter3: okio.ByteString;

        i0 := @parameter4: int;

        r1 := @parameter5: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r3 = r0.<perfetto.protos.TraceConfig$BufferConfig: java.lang.Integer size_kb>;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r4 = r0.<perfetto.protos.TraceConfig$BufferConfig: perfetto.protos.TraceConfig$BufferConfig$FillPolicy fill_policy>;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        r5 = virtualinvoke r0.<perfetto.protos.TraceConfig$BufferConfig: okio.ByteString unknownFields()>();

     label3:
        $r2 = virtualinvoke r0.<perfetto.protos.TraceConfig$BufferConfig: perfetto.protos.TraceConfig$BufferConfig copy(java.lang.Integer,perfetto.protos.TraceConfig$BufferConfig$FillPolicy,okio.ByteString)>(r3, r4, r5);

        return $r2;
    }

    public void <init>()
    {
        perfetto.protos.TraceConfig$BufferConfig r0;

        r0 := @this: perfetto.protos.TraceConfig$BufferConfig;

        specialinvoke r0.<perfetto.protos.TraceConfig$BufferConfig: void <init>(java.lang.Integer,perfetto.protos.TraceConfig$BufferConfig$FillPolicy,okio.ByteString,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, null, null, 7, null);

        return;
    }

    public volatile com.squareup.wire.Message$Builder newBuilder()
    {
        perfetto.protos.TraceConfig$BufferConfig r0;
        java.lang.Void $r1;
        com.squareup.wire.Message$Builder $r2;

        r0 := @this: perfetto.protos.TraceConfig$BufferConfig;

        $r1 = virtualinvoke r0.<perfetto.protos.TraceConfig$BufferConfig: java.lang.Void newBuilder()>();

        $r2 = (com.squareup.wire.Message$Builder) $r1;

        return $r2;
    }

    static void <clinit>()
    {
        com.squareup.wire.FieldEncoding r0;
        kotlin.reflect.KClass r1;
        com.squareup.wire.Syntax r2;
        perfetto.protos.TraceConfig$BufferConfig$Companion $r3;
        perfetto.protos.TraceConfig$BufferConfig$Companion$ADAPTER$1 $r4;
        com.squareup.wire.ProtoAdapter $r5;

        $r3 = new perfetto.protos.TraceConfig$BufferConfig$Companion;

        specialinvoke $r3.<perfetto.protos.TraceConfig$BufferConfig$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <perfetto.protos.TraceConfig$BufferConfig: perfetto.protos.TraceConfig$BufferConfig$Companion Companion> = $r3;

        r0 = <com.squareup.wire.FieldEncoding: com.squareup.wire.FieldEncoding LENGTH_DELIMITED>;

        r1 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Lperfetto/protos/TraceConfig$BufferConfig;");

        r2 = <com.squareup.wire.Syntax: com.squareup.wire.Syntax PROTO_2>;

        $r4 = new perfetto.protos.TraceConfig$BufferConfig$Companion$ADAPTER$1;

        specialinvoke $r4.<perfetto.protos.TraceConfig$BufferConfig$Companion$ADAPTER$1: void <init>(com.squareup.wire.FieldEncoding,kotlin.reflect.KClass,com.squareup.wire.Syntax)>(r0, r1, r2);

        $r5 = (com.squareup.wire.ProtoAdapter) $r4;

        <perfetto.protos.TraceConfig$BufferConfig: com.squareup.wire.ProtoAdapter ADAPTER> = $r5;

        return;
    }

perfetto.protos.TraceConfig$BuiltinDataSource$Companion$ADAPTER$1
    void <init>(com.squareup.wire.FieldEncoding, kotlin.reflect.KClass, com.squareup.wire.Syntax)
    {
        perfetto.protos.TraceConfig$BuiltinDataSource$Companion$ADAPTER$1 r0;
        com.squareup.wire.FieldEncoding $r1;
        kotlin.reflect.KClass $r2;
        com.squareup.wire.Syntax $r3;

        r0 := @this: perfetto.protos.TraceConfig$BuiltinDataSource$Companion$ADAPTER$1;

        $r1 := @parameter0: com.squareup.wire.FieldEncoding;

        $r2 := @parameter1: kotlin.reflect.KClass;

        $r3 := @parameter2: com.squareup.wire.Syntax;

        specialinvoke r0.<com.squareup.wire.ProtoAdapter: void <init>(com.squareup.wire.FieldEncoding,kotlin.reflect.KClass,java.lang.String,com.squareup.wire.Syntax,java.lang.Object)>($r1, $r2, "type.googleapis.com/perfetto.protos.TraceConfig.BuiltinDataSource", $r3, null);

        return;
    }

    public int encodedSize(perfetto.protos.TraceConfig$BuiltinDataSource)
    {
        perfetto.protos.TraceConfig$BuiltinDataSource$Companion$ADAPTER$1 r0;
        perfetto.protos.TraceConfig$BuiltinDataSource r1;
        okio.ByteString $r2;
        com.squareup.wire.ProtoAdapter $r3, $r5, $r7, $r9, $r11, $r13, $r15;
        java.lang.Boolean $r4, $r6, $r8, $r10, $r16;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11, i12, i13, i14;
        perfetto.protos.BuiltinClock $r12;
        java.lang.Integer $r14;

        r0 := @this: perfetto.protos.TraceConfig$BuiltinDataSource$Companion$ADAPTER$1;

        r1 := @parameter0: perfetto.protos.TraceConfig$BuiltinDataSource;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = virtualinvoke r1.<perfetto.protos.TraceConfig$BuiltinDataSource: okio.ByteString unknownFields()>();

        i7 = virtualinvoke $r2.<okio.ByteString: int size()>();

        $r3 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r4 = virtualinvoke r1.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean getDisable_clock_snapshotting()>();

        $i0 = virtualinvoke $r3.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(1, $r4);

        i8 = i7 + $i0;

        $r5 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r6 = virtualinvoke r1.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean getDisable_trace_config()>();

        $i1 = virtualinvoke $r5.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(2, $r6);

        i9 = i8 + $i1;

        $r7 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r8 = virtualinvoke r1.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean getDisable_system_info()>();

        $i2 = virtualinvoke $r7.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(3, $r8);

        i10 = i9 + $i2;

        $r9 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r10 = virtualinvoke r1.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean getDisable_service_events()>();

        $i3 = virtualinvoke $r9.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(4, $r10);

        i11 = i10 + $i3;

        $r11 = <perfetto.protos.BuiltinClock: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r12 = virtualinvoke r1.<perfetto.protos.TraceConfig$BuiltinDataSource: perfetto.protos.BuiltinClock getPrimary_trace_clock()>();

        $i4 = virtualinvoke $r11.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(5, $r12);

        i12 = i11 + $i4;

        $r13 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r14 = virtualinvoke r1.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Integer getSnapshot_interval_ms()>();

        $i5 = virtualinvoke $r13.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(6, $r14);

        i13 = i12 + $i5;

        $r15 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r16 = virtualinvoke r1.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean getPrefer_suspend_clock_for_snapshot()>();

        $i6 = virtualinvoke $r15.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(7, $r16);

        i14 = i13 + $i6;

        return i14;
    }

    public void encode(com.squareup.wire.ProtoWriter, perfetto.protos.TraceConfig$BuiltinDataSource)
    {
        perfetto.protos.TraceConfig$BuiltinDataSource$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoWriter r1;
        perfetto.protos.TraceConfig$BuiltinDataSource r2;
        com.squareup.wire.ProtoAdapter $r3, $r5, $r7, $r9, $r11, $r13, $r15;
        java.lang.Boolean $r4, $r6, $r8, $r10, $r16;
        perfetto.protos.BuiltinClock $r12;
        java.lang.Integer $r14;
        okio.ByteString $r17;

        r0 := @this: perfetto.protos.TraceConfig$BuiltinDataSource$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoWriter;

        r2 := @parameter1: perfetto.protos.TraceConfig$BuiltinDataSource;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "writer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "value");

        $r3 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r4 = virtualinvoke r2.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean getDisable_clock_snapshotting()>();

        virtualinvoke $r3.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 1, $r4);

        $r5 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r6 = virtualinvoke r2.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean getDisable_trace_config()>();

        virtualinvoke $r5.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 2, $r6);

        $r7 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r8 = virtualinvoke r2.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean getDisable_system_info()>();

        virtualinvoke $r7.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 3, $r8);

        $r9 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r10 = virtualinvoke r2.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean getDisable_service_events()>();

        virtualinvoke $r9.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 4, $r10);

        $r11 = <perfetto.protos.BuiltinClock: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r12 = virtualinvoke r2.<perfetto.protos.TraceConfig$BuiltinDataSource: perfetto.protos.BuiltinClock getPrimary_trace_clock()>();

        virtualinvoke $r11.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 5, $r12);

        $r13 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r14 = virtualinvoke r2.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Integer getSnapshot_interval_ms()>();

        virtualinvoke $r13.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 6, $r14);

        $r15 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r16 = virtualinvoke r2.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean getPrefer_suspend_clock_for_snapshot()>();

        virtualinvoke $r15.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 7, $r16);

        $r17 = virtualinvoke r2.<perfetto.protos.TraceConfig$BuiltinDataSource: okio.ByteString unknownFields()>();

        virtualinvoke r1.<com.squareup.wire.ProtoWriter: void writeBytes(okio.ByteString)>($r17);

        return;
    }

    public perfetto.protos.TraceConfig$BuiltinDataSource decode(com.squareup.wire.ProtoReader)
    {
        perfetto.protos.TraceConfig$BuiltinDataSource$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoReader r1, r3;
        okio.ByteString r2;
        long l0, $l4;
        int i1, i2, $i3;
        java.lang.Throwable r4, $r20;
        com.squareup.wire.ProtoAdapter $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        perfetto.protos.TraceConfig$BuiltinDataSource $r12;
        java.lang.Boolean $r13, $r16, $r17, $r18, $r19;
        java.lang.Integer $r14;
        perfetto.protos.BuiltinClock $r15;
        com.squareup.wire.FieldEncoding $r21;
        java.lang.Long $r22;
        java.lang.Object r23, r24, r25, r26, r27, r28, r29;

        r0 := @this: perfetto.protos.TraceConfig$BuiltinDataSource$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoReader;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "reader");

        r23 = null;

        r24 = null;

        r25 = null;

        r26 = null;

        r27 = null;

        r28 = null;

        r29 = null;

        r3 = r1;

        l0 = virtualinvoke r3.<com.squareup.wire.ProtoReader: long beginMessage()>();

     label01:
        i1 = virtualinvoke r3.<com.squareup.wire.ProtoReader: int nextTag()>();

        if i1 != -1 goto label02;

        goto label14;

     label02:
        i2 = i1;

        tableswitch(i2)
        {
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label07;
            case 6: goto label10;
            case 7: goto label11;
            default: goto label12;
        };

     label03:
        $r11 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        r23 = virtualinvoke $r11.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label13;

     label04:
        $r10 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        r24 = virtualinvoke $r10.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label13;

     label05:
        $r9 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        r25 = virtualinvoke $r9.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label13;

     label06:
        $r8 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        r26 = virtualinvoke $r8.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label13;

     label07:
        $r7 = <perfetto.protos.BuiltinClock: com.squareup.wire.ProtoAdapter ADAPTER>;

        r27 = virtualinvoke $r7.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

     label08:
        goto label13;

     label09:
        $r20 := @caughtexception;

        r4 = $r20;

        $r21 = <com.squareup.wire.FieldEncoding: com.squareup.wire.FieldEncoding VARINT>;

        $i3 = r4.<com.squareup.wire.ProtoAdapter$EnumConstantNotFoundException: int value>;

        $l4 = (long) $i3;

        $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        virtualinvoke r1.<com.squareup.wire.ProtoReader: void addUnknownField(int,com.squareup.wire.FieldEncoding,java.lang.Object)>(i2, $r21, $r22);

        goto label13;

     label10:
        $r6 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        r28 = virtualinvoke $r6.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label13;

     label11:
        $r5 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        r29 = virtualinvoke $r5.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label13;

     label12:
        virtualinvoke r1.<com.squareup.wire.ProtoReader: void readUnknownField(int)>(i2);

     label13:
        goto label01;

     label14:
        r2 = virtualinvoke r3.<com.squareup.wire.ProtoReader: okio.ByteString endMessageAndGetUnknownFields(long)>(l0);

        $r12 = new perfetto.protos.TraceConfig$BuiltinDataSource;

        $r19 = (java.lang.Boolean) r23;

        $r18 = (java.lang.Boolean) r24;

        $r17 = (java.lang.Boolean) r25;

        $r16 = (java.lang.Boolean) r26;

        $r15 = (perfetto.protos.BuiltinClock) r27;

        $r14 = (java.lang.Integer) r28;

        $r13 = (java.lang.Boolean) r29;

        specialinvoke $r12.<perfetto.protos.TraceConfig$BuiltinDataSource: void <init>(java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,perfetto.protos.BuiltinClock,java.lang.Integer,java.lang.Boolean,okio.ByteString)>($r19, $r18, $r17, $r16, $r15, $r14, $r13, r2);

        return $r12;

        catch com.squareup.wire.ProtoAdapter$EnumConstantNotFoundException from label07 to label08 with label09;
    }

    public perfetto.protos.TraceConfig$BuiltinDataSource redact(perfetto.protos.TraceConfig$BuiltinDataSource)
    {
        perfetto.protos.TraceConfig$BuiltinDataSource$Companion$ADAPTER$1 r0;
        perfetto.protos.TraceConfig$BuiltinDataSource r1, $r3;
        okio.ByteString $r2;

        r0 := @this: perfetto.protos.TraceConfig$BuiltinDataSource$Companion$ADAPTER$1;

        r1 := @parameter0: perfetto.protos.TraceConfig$BuiltinDataSource;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = <okio.ByteString: okio.ByteString EMPTY>;

        $r3 = staticinvoke <perfetto.protos.TraceConfig$BuiltinDataSource: perfetto.protos.TraceConfig$BuiltinDataSource copy$default(perfetto.protos.TraceConfig$BuiltinDataSource,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,perfetto.protos.BuiltinClock,java.lang.Integer,java.lang.Boolean,okio.ByteString,int,java.lang.Object)>(r1, null, null, null, null, null, null, null, $r2, 127, null);

        return $r3;
    }

    public volatile int encodedSize(java.lang.Object)
    {
        perfetto.protos.TraceConfig$BuiltinDataSource$Companion$ADAPTER$1 r0;
        java.lang.Object r1;
        perfetto.protos.TraceConfig$BuiltinDataSource $r2;
        int $i0;

        r0 := @this: perfetto.protos.TraceConfig$BuiltinDataSource$Companion$ADAPTER$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (perfetto.protos.TraceConfig$BuiltinDataSource) r1;

        $i0 = virtualinvoke r0.<perfetto.protos.TraceConfig$BuiltinDataSource$Companion$ADAPTER$1: int encodedSize(perfetto.protos.TraceConfig$BuiltinDataSource)>($r2);

        return $i0;
    }

    public volatile void encode(com.squareup.wire.ProtoWriter, java.lang.Object)
    {
        perfetto.protos.TraceConfig$BuiltinDataSource$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoWriter r1;
        java.lang.Object r2;
        perfetto.protos.TraceConfig$BuiltinDataSource $r3;

        r0 := @this: perfetto.protos.TraceConfig$BuiltinDataSource$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoWriter;

        r2 := @parameter1: java.lang.Object;

        $r3 = (perfetto.protos.TraceConfig$BuiltinDataSource) r2;

        virtualinvoke r0.<perfetto.protos.TraceConfig$BuiltinDataSource$Companion$ADAPTER$1: void encode(com.squareup.wire.ProtoWriter,perfetto.protos.TraceConfig$BuiltinDataSource)>(r1, $r3);

        return;
    }

    public volatile java.lang.Object decode(com.squareup.wire.ProtoReader)
    {
        perfetto.protos.TraceConfig$BuiltinDataSource$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoReader r1;
        perfetto.protos.TraceConfig$BuiltinDataSource $r2;

        r0 := @this: perfetto.protos.TraceConfig$BuiltinDataSource$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoReader;

        $r2 = virtualinvoke r0.<perfetto.protos.TraceConfig$BuiltinDataSource$Companion$ADAPTER$1: perfetto.protos.TraceConfig$BuiltinDataSource decode(com.squareup.wire.ProtoReader)>(r1);

        return $r2;
    }

    public volatile java.lang.Object redact(java.lang.Object)
    {
        perfetto.protos.TraceConfig$BuiltinDataSource$Companion$ADAPTER$1 r0;
        java.lang.Object r1;
        perfetto.protos.TraceConfig$BuiltinDataSource $r2, $r3;

        r0 := @this: perfetto.protos.TraceConfig$BuiltinDataSource$Companion$ADAPTER$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (perfetto.protos.TraceConfig$BuiltinDataSource) r1;

        $r3 = virtualinvoke r0.<perfetto.protos.TraceConfig$BuiltinDataSource$Companion$ADAPTER$1: perfetto.protos.TraceConfig$BuiltinDataSource redact(perfetto.protos.TraceConfig$BuiltinDataSource)>($r2);

        return $r3;
    }

perfetto.protos.TraceConfig$BuiltinDataSource$Companion
    private void <init>()
    {
        perfetto.protos.TraceConfig$BuiltinDataSource$Companion r0;

        r0 := @this: perfetto.protos.TraceConfig$BuiltinDataSource$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.TraceConfig$BuiltinDataSource$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: perfetto.protos.TraceConfig$BuiltinDataSource$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<perfetto.protos.TraceConfig$BuiltinDataSource$Companion: void <init>()>();

        return;
    }

perfetto.protos.TraceConfig$BuiltinDataSource
<perfetto.protos.TraceConfig$BuiltinDataSource: perfetto.protos.TraceConfig$BuiltinDataSource$Companion Companion>
<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean disable_clock_snapshotting>
<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean disable_trace_config>
<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean disable_system_info>
<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean disable_service_events>
<perfetto.protos.TraceConfig$BuiltinDataSource: perfetto.protos.BuiltinClock primary_trace_clock>
<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Integer snapshot_interval_ms>
<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean prefer_suspend_clock_for_snapshot>
<perfetto.protos.TraceConfig$BuiltinDataSource: com.squareup.wire.ProtoAdapter ADAPTER>
<perfetto.protos.TraceConfig$BuiltinDataSource: long serialVersionUID>
    public void <init>(java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, perfetto.protos.BuiltinClock, java.lang.Integer, java.lang.Boolean, okio.ByteString)
    {
        perfetto.protos.TraceConfig$BuiltinDataSource r0;
        java.lang.Boolean r1, r2, r3, r4, r7;
        perfetto.protos.BuiltinClock r5;
        java.lang.Integer r6;
        okio.ByteString r8;
        com.squareup.wire.ProtoAdapter $r9;

        r0 := @this: perfetto.protos.TraceConfig$BuiltinDataSource;

        r1 := @parameter0: java.lang.Boolean;

        r2 := @parameter1: java.lang.Boolean;

        r3 := @parameter2: java.lang.Boolean;

        r4 := @parameter3: java.lang.Boolean;

        r5 := @parameter4: perfetto.protos.BuiltinClock;

        r6 := @parameter5: java.lang.Integer;

        r7 := @parameter6: java.lang.Boolean;

        r8 := @parameter7: okio.ByteString;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r8, "unknownFields");

        $r9 = <perfetto.protos.TraceConfig$BuiltinDataSource: com.squareup.wire.ProtoAdapter ADAPTER>;

        specialinvoke r0.<com.squareup.wire.Message: void <init>(com.squareup.wire.ProtoAdapter,okio.ByteString)>($r9, r8);

        r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean disable_clock_snapshotting> = r1;

        r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean disable_trace_config> = r2;

        r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean disable_system_info> = r3;

        r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean disable_service_events> = r4;

        r0.<perfetto.protos.TraceConfig$BuiltinDataSource: perfetto.protos.BuiltinClock primary_trace_clock> = r5;

        r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Integer snapshot_interval_ms> = r6;

        r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean prefer_suspend_clock_for_snapshot> = r7;

        return;
    }

    public void <init>(java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, perfetto.protos.BuiltinClock, java.lang.Integer, java.lang.Boolean, okio.ByteString, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.TraceConfig$BuiltinDataSource r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        java.lang.Boolean r2, r3, r4, r5, r8;
        perfetto.protos.BuiltinClock r6;
        java.lang.Integer r7;
        okio.ByteString r9;

        r0 := @this: perfetto.protos.TraceConfig$BuiltinDataSource;

        r2 := @parameter0: java.lang.Boolean;

        r3 := @parameter1: java.lang.Boolean;

        r4 := @parameter2: java.lang.Boolean;

        r5 := @parameter3: java.lang.Boolean;

        r6 := @parameter4: perfetto.protos.BuiltinClock;

        r7 := @parameter5: java.lang.Integer;

        r8 := @parameter6: java.lang.Boolean;

        r9 := @parameter7: okio.ByteString;

        i0 := @parameter8: int;

        r1 := @parameter9: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r2 = null;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r3 = null;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        r4 = null;

     label3:
        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        r5 = null;

     label4:
        $i5 = i0 & 16;

        if $i5 == 0 goto label5;

        r6 = null;

     label5:
        $i6 = i0 & 32;

        if $i6 == 0 goto label6;

        r7 = null;

     label6:
        $i7 = i0 & 64;

        if $i7 == 0 goto label7;

        r8 = null;

     label7:
        $i8 = i0 & 128;

        if $i8 == 0 goto label8;

        r9 = <okio.ByteString: okio.ByteString EMPTY>;

     label8:
        specialinvoke r0.<perfetto.protos.TraceConfig$BuiltinDataSource: void <init>(java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,perfetto.protos.BuiltinClock,java.lang.Integer,java.lang.Boolean,okio.ByteString)>(r2, r3, r4, r5, r6, r7, r8, r9);

        return;
    }

    public final java.lang.Boolean getDisable_clock_snapshotting()
    {
        perfetto.protos.TraceConfig$BuiltinDataSource r0;
        java.lang.Boolean $r1;

        r0 := @this: perfetto.protos.TraceConfig$BuiltinDataSource;

        $r1 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean disable_clock_snapshotting>;

        return $r1;
    }

    public final java.lang.Boolean getDisable_trace_config()
    {
        perfetto.protos.TraceConfig$BuiltinDataSource r0;
        java.lang.Boolean $r1;

        r0 := @this: perfetto.protos.TraceConfig$BuiltinDataSource;

        $r1 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean disable_trace_config>;

        return $r1;
    }

    public final java.lang.Boolean getDisable_system_info()
    {
        perfetto.protos.TraceConfig$BuiltinDataSource r0;
        java.lang.Boolean $r1;

        r0 := @this: perfetto.protos.TraceConfig$BuiltinDataSource;

        $r1 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean disable_system_info>;

        return $r1;
    }

    public final java.lang.Boolean getDisable_service_events()
    {
        perfetto.protos.TraceConfig$BuiltinDataSource r0;
        java.lang.Boolean $r1;

        r0 := @this: perfetto.protos.TraceConfig$BuiltinDataSource;

        $r1 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean disable_service_events>;

        return $r1;
    }

    public final perfetto.protos.BuiltinClock getPrimary_trace_clock()
    {
        perfetto.protos.TraceConfig$BuiltinDataSource r0;
        perfetto.protos.BuiltinClock $r1;

        r0 := @this: perfetto.protos.TraceConfig$BuiltinDataSource;

        $r1 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: perfetto.protos.BuiltinClock primary_trace_clock>;

        return $r1;
    }

    public final java.lang.Integer getSnapshot_interval_ms()
    {
        perfetto.protos.TraceConfig$BuiltinDataSource r0;
        java.lang.Integer $r1;

        r0 := @this: perfetto.protos.TraceConfig$BuiltinDataSource;

        $r1 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Integer snapshot_interval_ms>;

        return $r1;
    }

    public final java.lang.Boolean getPrefer_suspend_clock_for_snapshot()
    {
        perfetto.protos.TraceConfig$BuiltinDataSource r0;
        java.lang.Boolean $r1;

        r0 := @this: perfetto.protos.TraceConfig$BuiltinDataSource;

        $r1 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean prefer_suspend_clock_for_snapshot>;

        return $r1;
    }

    public java.lang.Void newBuilder()
    {
        perfetto.protos.TraceConfig$BuiltinDataSource r0;
        java.lang.AssertionError $r1;

        r0 := @this: perfetto.protos.TraceConfig$BuiltinDataSource;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;
    }

    public boolean equals(java.lang.Object)
    {
        perfetto.protos.TraceConfig$BuiltinDataSource r0, $r3, $r5, $r8, $r11, $r14, $r17, $r20, $r23;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        okio.ByteString $r2, $r4;
        java.lang.Boolean $r6, $r7, $r9, $r10, $r12, $r13, $r15, $r16, $r24, $r25;
        perfetto.protos.BuiltinClock $r18, $r19;
        java.lang.Integer $r21, $r22;

        r0 := @this: perfetto.protos.TraceConfig$BuiltinDataSource;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label01;

        return 1;

     label01:
        $z0 = r1 instanceof perfetto.protos.TraceConfig$BuiltinDataSource;

        if $z0 != 0 goto label02;

        return 0;

     label02:
        $r2 = virtualinvoke r0.<perfetto.protos.TraceConfig$BuiltinDataSource: okio.ByteString unknownFields()>();

        $r3 = (perfetto.protos.TraceConfig$BuiltinDataSource) r1;

        $r4 = virtualinvoke $r3.<perfetto.protos.TraceConfig$BuiltinDataSource: okio.ByteString unknownFields()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r4);

        if $z1 != 0 goto label03;

        return 0;

     label03:
        $r7 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean disable_clock_snapshotting>;

        $r5 = (perfetto.protos.TraceConfig$BuiltinDataSource) r1;

        $r6 = $r5.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean disable_clock_snapshotting>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, $r6);

        if $z2 != 0 goto label04;

        return 0;

     label04:
        $r10 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean disable_trace_config>;

        $r8 = (perfetto.protos.TraceConfig$BuiltinDataSource) r1;

        $r9 = $r8.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean disable_trace_config>;

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r10, $r9);

        if $z3 != 0 goto label05;

        return 0;

     label05:
        $r13 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean disable_system_info>;

        $r11 = (perfetto.protos.TraceConfig$BuiltinDataSource) r1;

        $r12 = $r11.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean disable_system_info>;

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r13, $r12);

        if $z4 != 0 goto label06;

        return 0;

     label06:
        $r16 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean disable_service_events>;

        $r14 = (perfetto.protos.TraceConfig$BuiltinDataSource) r1;

        $r15 = $r14.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean disable_service_events>;

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r16, $r15);

        if $z5 != 0 goto label07;

        return 0;

     label07:
        $r19 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: perfetto.protos.BuiltinClock primary_trace_clock>;

        $r17 = (perfetto.protos.TraceConfig$BuiltinDataSource) r1;

        $r18 = $r17.<perfetto.protos.TraceConfig$BuiltinDataSource: perfetto.protos.BuiltinClock primary_trace_clock>;

        if $r19 == $r18 goto label08;

        return 0;

     label08:
        $r22 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Integer snapshot_interval_ms>;

        $r20 = (perfetto.protos.TraceConfig$BuiltinDataSource) r1;

        $r21 = $r20.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Integer snapshot_interval_ms>;

        $z6 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r22, $r21);

        if $z6 != 0 goto label09;

        return 0;

     label09:
        $r25 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean prefer_suspend_clock_for_snapshot>;

        $r23 = (perfetto.protos.TraceConfig$BuiltinDataSource) r1;

        $r24 = $r23.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean prefer_suspend_clock_for_snapshot>;

        $z7 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r25, $r24);

        if $z7 != 0 goto label10;

        return 0;

     label10:
        return 1;
    }

    public int hashCode()
    {
        perfetto.protos.TraceConfig$BuiltinDataSource r0;
        okio.ByteString $r1;
        java.lang.Boolean $r2, $r3, $r4, $r5, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, $i9, i10, $i11, i12, $i13, i14, $i15, i16, $i17, i18, $i19, i20, $i21;
        perfetto.protos.BuiltinClock $r6;
        java.lang.Integer $r7;

        r0 := @this: perfetto.protos.TraceConfig$BuiltinDataSource;

        i7 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: int hashCode>;

        if i7 != 0 goto label15;

        $r1 = virtualinvoke r0.<perfetto.protos.TraceConfig$BuiltinDataSource: okio.ByteString unknownFields()>();

        i8 = virtualinvoke $r1.<okio.ByteString: int hashCode()>();

        $i0 = i8 * 37;

        $r2 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean disable_clock_snapshotting>;

        if $r2 != null goto label01;

        $i9 = 0;

        goto label02;

     label01:
        $i9 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

     label02:
        i10 = $i0 + $i9;

        $i1 = i10 * 37;

        $r3 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean disable_trace_config>;

        if $r3 != null goto label03;

        $i11 = 0;

        goto label04;

     label03:
        $i11 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

     label04:
        i12 = $i1 + $i11;

        $i2 = i12 * 37;

        $r4 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean disable_system_info>;

        if $r4 != null goto label05;

        $i13 = 0;

        goto label06;

     label05:
        $i13 = virtualinvoke $r4.<java.lang.Object: int hashCode()>();

     label06:
        i14 = $i2 + $i13;

        $i3 = i14 * 37;

        $r5 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean disable_service_events>;

        if $r5 != null goto label07;

        $i15 = 0;

        goto label08;

     label07:
        $i15 = virtualinvoke $r5.<java.lang.Object: int hashCode()>();

     label08:
        i16 = $i3 + $i15;

        $i4 = i16 * 37;

        $r6 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: perfetto.protos.BuiltinClock primary_trace_clock>;

        if $r6 != null goto label09;

        $i17 = 0;

        goto label10;

     label09:
        $i17 = virtualinvoke $r6.<java.lang.Object: int hashCode()>();

     label10:
        i18 = $i4 + $i17;

        $i5 = i18 * 37;

        $r7 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Integer snapshot_interval_ms>;

        if $r7 != null goto label11;

        $i19 = 0;

        goto label12;

     label11:
        $i19 = virtualinvoke $r7.<java.lang.Object: int hashCode()>();

     label12:
        i20 = $i5 + $i19;

        $i6 = i20 * 37;

        $r8 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean prefer_suspend_clock_for_snapshot>;

        if $r8 != null goto label13;

        $i21 = 0;

        goto label14;

     label13:
        $i21 = virtualinvoke $r8.<java.lang.Object: int hashCode()>();

     label14:
        i7 = $i6 + $i21;

        r0.<perfetto.protos.TraceConfig$BuiltinDataSource: int hashCode> = i7;

     label15:
        return i7;
    }

    public java.lang.String toString()
    {
        perfetto.protos.TraceConfig$BuiltinDataSource r0;
        java.util.List r1;
        java.util.ArrayList $r2;
        java.lang.Boolean $r3, $r4, $r5, $r6, $r9, $r15, $r24, $r27, $r30, $r33;
        perfetto.protos.BuiltinClock $r7, $r21;
        java.lang.Integer $r8, $r18;
        java.lang.CharSequence $r10, $r11, $r12;
        java.lang.Iterable $r13;
        java.lang.String $r14, $r17, $r20, $r23, $r26, $r29, $r32, $r35;
        java.util.Collection $r16, $r19, $r22, $r25, $r28, $r31, $r34;

        r0 := @this: perfetto.protos.TraceConfig$BuiltinDataSource;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r1 = (java.util.List) $r2;

        $r3 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean disable_clock_snapshotting>;

        if $r3 == null goto label1;

        $r34 = (java.util.Collection) r1;

        $r33 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean disable_clock_snapshotting>;

        $r35 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("disable_clock_snapshotting=", $r33);

        interfaceinvoke $r34.<java.util.Collection: boolean add(java.lang.Object)>($r35);

     label1:
        $r4 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean disable_trace_config>;

        if $r4 == null goto label2;

        $r31 = (java.util.Collection) r1;

        $r30 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean disable_trace_config>;

        $r32 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("disable_trace_config=", $r30);

        interfaceinvoke $r31.<java.util.Collection: boolean add(java.lang.Object)>($r32);

     label2:
        $r5 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean disable_system_info>;

        if $r5 == null goto label3;

        $r28 = (java.util.Collection) r1;

        $r27 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean disable_system_info>;

        $r29 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("disable_system_info=", $r27);

        interfaceinvoke $r28.<java.util.Collection: boolean add(java.lang.Object)>($r29);

     label3:
        $r6 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean disable_service_events>;

        if $r6 == null goto label4;

        $r25 = (java.util.Collection) r1;

        $r24 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean disable_service_events>;

        $r26 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("disable_service_events=", $r24);

        interfaceinvoke $r25.<java.util.Collection: boolean add(java.lang.Object)>($r26);

     label4:
        $r7 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: perfetto.protos.BuiltinClock primary_trace_clock>;

        if $r7 == null goto label5;

        $r22 = (java.util.Collection) r1;

        $r21 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: perfetto.protos.BuiltinClock primary_trace_clock>;

        $r23 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("primary_trace_clock=", $r21);

        interfaceinvoke $r22.<java.util.Collection: boolean add(java.lang.Object)>($r23);

     label5:
        $r8 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Integer snapshot_interval_ms>;

        if $r8 == null goto label6;

        $r19 = (java.util.Collection) r1;

        $r18 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Integer snapshot_interval_ms>;

        $r20 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("snapshot_interval_ms=", $r18);

        interfaceinvoke $r19.<java.util.Collection: boolean add(java.lang.Object)>($r20);

     label6:
        $r9 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean prefer_suspend_clock_for_snapshot>;

        if $r9 == null goto label7;

        $r16 = (java.util.Collection) r1;

        $r15 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean prefer_suspend_clock_for_snapshot>;

        $r17 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("prefer_suspend_clock_for_snapshot=", $r15);

        interfaceinvoke $r16.<java.util.Collection: boolean add(java.lang.Object)>($r17);

     label7:
        $r13 = (java.lang.Iterable) r1;

        $r12 = (java.lang.CharSequence) ", ";

        $r11 = (java.lang.CharSequence) "BuiltinDataSource{";

        $r10 = (java.lang.CharSequence) "}";

        $r14 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r13, $r12, $r11, $r10, 0, null, null, 56, null);

        return $r14;
    }

    public final perfetto.protos.TraceConfig$BuiltinDataSource copy(java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, perfetto.protos.BuiltinClock, java.lang.Integer, java.lang.Boolean, okio.ByteString)
    {
        perfetto.protos.TraceConfig$BuiltinDataSource r0, $r9;
        java.lang.Boolean r1, r2, r3, r4, r7;
        perfetto.protos.BuiltinClock r5;
        java.lang.Integer r6;
        okio.ByteString r8;

        r0 := @this: perfetto.protos.TraceConfig$BuiltinDataSource;

        r1 := @parameter0: java.lang.Boolean;

        r2 := @parameter1: java.lang.Boolean;

        r3 := @parameter2: java.lang.Boolean;

        r4 := @parameter3: java.lang.Boolean;

        r5 := @parameter4: perfetto.protos.BuiltinClock;

        r6 := @parameter5: java.lang.Integer;

        r7 := @parameter6: java.lang.Boolean;

        r8 := @parameter7: okio.ByteString;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r8, "unknownFields");

        $r9 = new perfetto.protos.TraceConfig$BuiltinDataSource;

        specialinvoke $r9.<perfetto.protos.TraceConfig$BuiltinDataSource: void <init>(java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,perfetto.protos.BuiltinClock,java.lang.Integer,java.lang.Boolean,okio.ByteString)>(r1, r2, r3, r4, r5, r6, r7, r8);

        return $r9;
    }

    public static perfetto.protos.TraceConfig$BuiltinDataSource copy$default(perfetto.protos.TraceConfig$BuiltinDataSource, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, perfetto.protos.BuiltinClock, java.lang.Integer, java.lang.Boolean, okio.ByteString, int, java.lang.Object)
    {
        perfetto.protos.TraceConfig$BuiltinDataSource r0, $r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.Object r1;
        java.lang.Boolean r3, r4, r5, r6, r9;
        perfetto.protos.BuiltinClock r7;
        java.lang.Integer r8;
        okio.ByteString r10;

        r0 := @parameter0: perfetto.protos.TraceConfig$BuiltinDataSource;

        r3 := @parameter1: java.lang.Boolean;

        r4 := @parameter2: java.lang.Boolean;

        r5 := @parameter3: java.lang.Boolean;

        r6 := @parameter4: java.lang.Boolean;

        r7 := @parameter5: perfetto.protos.BuiltinClock;

        r8 := @parameter6: java.lang.Integer;

        r9 := @parameter7: java.lang.Boolean;

        r10 := @parameter8: okio.ByteString;

        i0 := @parameter9: int;

        r1 := @parameter10: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r3 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean disable_clock_snapshotting>;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r4 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean disable_trace_config>;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        r5 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean disable_system_info>;

     label3:
        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        r6 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean disable_service_events>;

     label4:
        $i5 = i0 & 16;

        if $i5 == 0 goto label5;

        r7 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: perfetto.protos.BuiltinClock primary_trace_clock>;

     label5:
        $i6 = i0 & 32;

        if $i6 == 0 goto label6;

        r8 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Integer snapshot_interval_ms>;

     label6:
        $i7 = i0 & 64;

        if $i7 == 0 goto label7;

        r9 = r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Boolean prefer_suspend_clock_for_snapshot>;

     label7:
        $i8 = i0 & 128;

        if $i8 == 0 goto label8;

        r10 = virtualinvoke r0.<perfetto.protos.TraceConfig$BuiltinDataSource: okio.ByteString unknownFields()>();

     label8:
        $r2 = virtualinvoke r0.<perfetto.protos.TraceConfig$BuiltinDataSource: perfetto.protos.TraceConfig$BuiltinDataSource copy(java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,perfetto.protos.BuiltinClock,java.lang.Integer,java.lang.Boolean,okio.ByteString)>(r3, r4, r5, r6, r7, r8, r9, r10);

        return $r2;
    }

    public void <init>()
    {
        perfetto.protos.TraceConfig$BuiltinDataSource r0;

        r0 := @this: perfetto.protos.TraceConfig$BuiltinDataSource;

        specialinvoke r0.<perfetto.protos.TraceConfig$BuiltinDataSource: void <init>(java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,perfetto.protos.BuiltinClock,java.lang.Integer,java.lang.Boolean,okio.ByteString,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, null, null, null, null, null, null, null, 255, null);

        return;
    }

    public volatile com.squareup.wire.Message$Builder newBuilder()
    {
        perfetto.protos.TraceConfig$BuiltinDataSource r0;
        java.lang.Void $r1;
        com.squareup.wire.Message$Builder $r2;

        r0 := @this: perfetto.protos.TraceConfig$BuiltinDataSource;

        $r1 = virtualinvoke r0.<perfetto.protos.TraceConfig$BuiltinDataSource: java.lang.Void newBuilder()>();

        $r2 = (com.squareup.wire.Message$Builder) $r1;

        return $r2;
    }

    static void <clinit>()
    {
        com.squareup.wire.FieldEncoding r0;
        kotlin.reflect.KClass r1;
        com.squareup.wire.Syntax r2;
        perfetto.protos.TraceConfig$BuiltinDataSource$Companion $r3;
        perfetto.protos.TraceConfig$BuiltinDataSource$Companion$ADAPTER$1 $r4;
        com.squareup.wire.ProtoAdapter $r5;

        $r3 = new perfetto.protos.TraceConfig$BuiltinDataSource$Companion;

        specialinvoke $r3.<perfetto.protos.TraceConfig$BuiltinDataSource$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <perfetto.protos.TraceConfig$BuiltinDataSource: perfetto.protos.TraceConfig$BuiltinDataSource$Companion Companion> = $r3;

        r0 = <com.squareup.wire.FieldEncoding: com.squareup.wire.FieldEncoding LENGTH_DELIMITED>;

        r1 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Lperfetto/protos/TraceConfig$BuiltinDataSource;");

        r2 = <com.squareup.wire.Syntax: com.squareup.wire.Syntax PROTO_2>;

        $r4 = new perfetto.protos.TraceConfig$BuiltinDataSource$Companion$ADAPTER$1;

        specialinvoke $r4.<perfetto.protos.TraceConfig$BuiltinDataSource$Companion$ADAPTER$1: void <init>(com.squareup.wire.FieldEncoding,kotlin.reflect.KClass,com.squareup.wire.Syntax)>(r0, r1, r2);

        $r5 = (com.squareup.wire.ProtoAdapter) $r4;

        <perfetto.protos.TraceConfig$BuiltinDataSource: com.squareup.wire.ProtoAdapter ADAPTER> = $r5;

        return;
    }

perfetto.protos.TraceConfig$Companion$ADAPTER$1
    void <init>(com.squareup.wire.FieldEncoding, kotlin.reflect.KClass, com.squareup.wire.Syntax)
    {
        perfetto.protos.TraceConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.FieldEncoding $r1;
        kotlin.reflect.KClass $r2;
        com.squareup.wire.Syntax $r3;

        r0 := @this: perfetto.protos.TraceConfig$Companion$ADAPTER$1;

        $r1 := @parameter0: com.squareup.wire.FieldEncoding;

        $r2 := @parameter1: kotlin.reflect.KClass;

        $r3 := @parameter2: com.squareup.wire.Syntax;

        specialinvoke r0.<com.squareup.wire.ProtoAdapter: void <init>(com.squareup.wire.FieldEncoding,kotlin.reflect.KClass,java.lang.String,com.squareup.wire.Syntax,java.lang.Object)>($r1, $r2, "type.googleapis.com/perfetto.protos.TraceConfig", $r3, null);

        return;
    }

    public int encodedSize(perfetto.protos.TraceConfig)
    {
        perfetto.protos.TraceConfig$Companion$ADAPTER$1 r0;
        perfetto.protos.TraceConfig r1;
        okio.ByteString $r2;
        com.squareup.wire.ProtoAdapter $r3, $r4, $r6, $r7, $r9, $r11, $r13, $r15, $r17, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r38, $r40, $r42, $r44, $r46, $r47, $r49, $r51, $r53, $r55, $r57, $r59, $r61, $r63;
        java.util.List $r5, $r8, $r19, $r48;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, i29, i30, i31, i32, i33, i34, i35, i36, i37, i38, i39, i40, i41, i42, i43, i44, i45, i46, i47, i48, i49, i50, i51, i52, i53, i54, i55, i56, i57, i58;
        perfetto.protos.TraceConfig$BuiltinDataSource $r10;
        java.lang.Integer $r12, $r27, $r35, $r37, $r39, $r43;
        java.lang.Boolean $r14, $r23, $r33, $r41, $r52;
        perfetto.protos.TraceConfig$LockdownModeOperation $r16;
        perfetto.protos.TraceConfig$StatsdMetadata $r21;
        java.lang.String $r25, $r54;
        java.lang.Long $r29, $r60, $r62;
        perfetto.protos.TraceConfig$GuardrailOverrides $r31;
        perfetto.protos.TraceConfig$TriggerConfig $r45;
        perfetto.protos.TraceConfig$IncrementalStateConfig $r50;
        perfetto.protos.TraceConfig$CompressionType $r56;
        perfetto.protos.TraceConfig$StatsdLogging $r58;
        perfetto.protos.TraceConfig$TraceFilter $r64;

        r0 := @this: perfetto.protos.TraceConfig$Companion$ADAPTER$1;

        r1 := @parameter0: perfetto.protos.TraceConfig;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = virtualinvoke r1.<perfetto.protos.TraceConfig: okio.ByteString unknownFields()>();

        i29 = virtualinvoke $r2.<okio.ByteString: int size()>();

        $r3 = <perfetto.protos.TraceConfig$BufferConfig: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r4 = virtualinvoke $r3.<com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter asRepeated()>();

        $r5 = virtualinvoke r1.<perfetto.protos.TraceConfig: java.util.List getBuffers()>();

        $i0 = virtualinvoke $r4.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(1, $r5);

        i30 = i29 + $i0;

        $r6 = <perfetto.protos.TraceConfig$DataSource: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r7 = virtualinvoke $r6.<com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter asRepeated()>();

        $r8 = virtualinvoke r1.<perfetto.protos.TraceConfig: java.util.List getData_sources()>();

        $i1 = virtualinvoke $r7.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(2, $r8);

        i31 = i30 + $i1;

        $r9 = <perfetto.protos.TraceConfig$BuiltinDataSource: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r10 = virtualinvoke r1.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$BuiltinDataSource getBuiltin_data_sources()>();

        $i2 = virtualinvoke $r9.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(20, $r10);

        i32 = i31 + $i2;

        $r11 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r12 = virtualinvoke r1.<perfetto.protos.TraceConfig: java.lang.Integer getDuration_ms()>();

        $i3 = virtualinvoke $r11.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(3, $r12);

        i33 = i32 + $i3;

        $r13 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r14 = virtualinvoke r1.<perfetto.protos.TraceConfig: java.lang.Boolean getEnable_extra_guardrails()>();

        $i4 = virtualinvoke $r13.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(4, $r14);

        i34 = i33 + $i4;

        $r15 = <perfetto.protos.TraceConfig$LockdownModeOperation: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r16 = virtualinvoke r1.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$LockdownModeOperation getLockdown_mode()>();

        $i5 = virtualinvoke $r15.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(5, $r16);

        i35 = i34 + $i5;

        $r17 = <perfetto.protos.TraceConfig$ProducerConfig: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r18 = virtualinvoke $r17.<com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter asRepeated()>();

        $r19 = virtualinvoke r1.<perfetto.protos.TraceConfig: java.util.List getProducers()>();

        $i6 = virtualinvoke $r18.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(6, $r19);

        i36 = i35 + $i6;

        $r20 = <perfetto.protos.TraceConfig$StatsdMetadata: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r21 = virtualinvoke r1.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$StatsdMetadata getStatsd_metadata()>();

        $i7 = virtualinvoke $r20.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(7, $r21);

        i37 = i36 + $i7;

        $r22 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r23 = virtualinvoke r1.<perfetto.protos.TraceConfig: java.lang.Boolean getWrite_into_file()>();

        $i8 = virtualinvoke $r22.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(8, $r23);

        i38 = i37 + $i8;

        $r24 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        $r25 = virtualinvoke r1.<perfetto.protos.TraceConfig: java.lang.String getOutput_path()>();

        $i9 = virtualinvoke $r24.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(29, $r25);

        i39 = i38 + $i9;

        $r26 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r27 = virtualinvoke r1.<perfetto.protos.TraceConfig: java.lang.Integer getFile_write_period_ms()>();

        $i10 = virtualinvoke $r26.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(9, $r27);

        i40 = i39 + $i10;

        $r28 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT64>;

        $r29 = virtualinvoke r1.<perfetto.protos.TraceConfig: java.lang.Long getMax_file_size_bytes()>();

        $i11 = virtualinvoke $r28.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(10, $r29);

        i41 = i40 + $i11;

        $r30 = <perfetto.protos.TraceConfig$GuardrailOverrides: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r31 = virtualinvoke r1.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$GuardrailOverrides getGuardrail_overrides()>();

        $i12 = virtualinvoke $r30.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(11, $r31);

        i42 = i41 + $i12;

        $r32 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r33 = virtualinvoke r1.<perfetto.protos.TraceConfig: java.lang.Boolean getDeferred_start()>();

        $i13 = virtualinvoke $r32.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(12, $r33);

        i43 = i42 + $i13;

        $r34 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r35 = virtualinvoke r1.<perfetto.protos.TraceConfig: java.lang.Integer getFlush_period_ms()>();

        $i14 = virtualinvoke $r34.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(13, $r35);

        i44 = i43 + $i14;

        $r36 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r37 = virtualinvoke r1.<perfetto.protos.TraceConfig: java.lang.Integer getFlush_timeout_ms()>();

        $i15 = virtualinvoke $r36.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(14, $r37);

        i45 = i44 + $i15;

        $r38 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r39 = virtualinvoke r1.<perfetto.protos.TraceConfig: java.lang.Integer getData_source_stop_timeout_ms()>();

        $i16 = virtualinvoke $r38.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(23, $r39);

        i46 = i45 + $i16;

        $r40 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r41 = virtualinvoke r1.<perfetto.protos.TraceConfig: java.lang.Boolean getNotify_traceur()>();

        $i17 = virtualinvoke $r40.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(16, $r41);

        i47 = i46 + $i17;

        $r42 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter INT32>;

        $r43 = virtualinvoke r1.<perfetto.protos.TraceConfig: java.lang.Integer getBugreport_score()>();

        $i18 = virtualinvoke $r42.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(30, $r43);

        i48 = i47 + $i18;

        $r44 = <perfetto.protos.TraceConfig$TriggerConfig: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r45 = virtualinvoke r1.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$TriggerConfig getTrigger_config()>();

        $i19 = virtualinvoke $r44.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(17, $r45);

        i49 = i48 + $i19;

        $r46 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        $r47 = virtualinvoke $r46.<com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter asRepeated()>();

        $r48 = virtualinvoke r1.<perfetto.protos.TraceConfig: java.util.List getActivate_triggers()>();

        $i20 = virtualinvoke $r47.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(18, $r48);

        i50 = i49 + $i20;

        $r49 = <perfetto.protos.TraceConfig$IncrementalStateConfig: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r50 = virtualinvoke r1.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$IncrementalStateConfig getIncremental_state_config()>();

        $i21 = virtualinvoke $r49.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(21, $r50);

        i51 = i50 + $i21;

        $r51 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r52 = virtualinvoke r1.<perfetto.protos.TraceConfig: java.lang.Boolean getAllow_user_build_tracing()>();

        $i22 = virtualinvoke $r51.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(19, $r52);

        i52 = i51 + $i22;

        $r53 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        $r54 = virtualinvoke r1.<perfetto.protos.TraceConfig: java.lang.String getUnique_session_name()>();

        $i23 = virtualinvoke $r53.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(22, $r54);

        i53 = i52 + $i23;

        $r55 = <perfetto.protos.TraceConfig$CompressionType: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r56 = virtualinvoke r1.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$CompressionType getCompression_type()>();

        $i24 = virtualinvoke $r55.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(24, $r56);

        i54 = i53 + $i24;

        $r57 = <perfetto.protos.TraceConfig$StatsdLogging: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r58 = virtualinvoke r1.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$StatsdLogging getStatsd_logging()>();

        $i25 = virtualinvoke $r57.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(31, $r58);

        i55 = i54 + $i25;

        $r59 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter INT64>;

        $r60 = virtualinvoke r1.<perfetto.protos.TraceConfig: java.lang.Long getTrace_uuid_msb()>();

        $i26 = virtualinvoke $r59.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(27, $r60);

        i56 = i55 + $i26;

        $r61 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter INT64>;

        $r62 = virtualinvoke r1.<perfetto.protos.TraceConfig: java.lang.Long getTrace_uuid_lsb()>();

        $i27 = virtualinvoke $r61.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(28, $r62);

        i57 = i56 + $i27;

        $r63 = <perfetto.protos.TraceConfig$TraceFilter: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r64 = virtualinvoke r1.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$TraceFilter getTrace_filter()>();

        $i28 = virtualinvoke $r63.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(32, $r64);

        i58 = i57 + $i28;

        return i58;
    }

    public void encode(com.squareup.wire.ProtoWriter, perfetto.protos.TraceConfig)
    {
        perfetto.protos.TraceConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoWriter r1;
        perfetto.protos.TraceConfig r2;
        com.squareup.wire.ProtoAdapter $r3, $r4, $r6, $r7, $r9, $r11, $r13, $r15, $r17, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r38, $r40, $r42, $r44, $r46, $r47, $r49, $r51, $r53, $r55, $r57, $r59, $r61, $r63;
        java.util.List $r5, $r8, $r19, $r48;
        perfetto.protos.TraceConfig$BuiltinDataSource $r10;
        java.lang.Integer $r12, $r27, $r35, $r37, $r39, $r43;
        java.lang.Boolean $r14, $r23, $r33, $r41, $r52;
        perfetto.protos.TraceConfig$LockdownModeOperation $r16;
        perfetto.protos.TraceConfig$StatsdMetadata $r21;
        java.lang.String $r25, $r54;
        java.lang.Long $r29, $r60, $r62;
        perfetto.protos.TraceConfig$GuardrailOverrides $r31;
        perfetto.protos.TraceConfig$TriggerConfig $r45;
        perfetto.protos.TraceConfig$IncrementalStateConfig $r50;
        perfetto.protos.TraceConfig$CompressionType $r56;
        perfetto.protos.TraceConfig$StatsdLogging $r58;
        perfetto.protos.TraceConfig$TraceFilter $r64;
        okio.ByteString $r65;

        r0 := @this: perfetto.protos.TraceConfig$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoWriter;

        r2 := @parameter1: perfetto.protos.TraceConfig;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "writer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "value");

        $r3 = <perfetto.protos.TraceConfig$BufferConfig: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r4 = virtualinvoke $r3.<com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter asRepeated()>();

        $r5 = virtualinvoke r2.<perfetto.protos.TraceConfig: java.util.List getBuffers()>();

        virtualinvoke $r4.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 1, $r5);

        $r6 = <perfetto.protos.TraceConfig$DataSource: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r7 = virtualinvoke $r6.<com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter asRepeated()>();

        $r8 = virtualinvoke r2.<perfetto.protos.TraceConfig: java.util.List getData_sources()>();

        virtualinvoke $r7.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 2, $r8);

        $r9 = <perfetto.protos.TraceConfig$BuiltinDataSource: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r10 = virtualinvoke r2.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$BuiltinDataSource getBuiltin_data_sources()>();

        virtualinvoke $r9.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 20, $r10);

        $r11 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r12 = virtualinvoke r2.<perfetto.protos.TraceConfig: java.lang.Integer getDuration_ms()>();

        virtualinvoke $r11.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 3, $r12);

        $r13 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r14 = virtualinvoke r2.<perfetto.protos.TraceConfig: java.lang.Boolean getEnable_extra_guardrails()>();

        virtualinvoke $r13.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 4, $r14);

        $r15 = <perfetto.protos.TraceConfig$LockdownModeOperation: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r16 = virtualinvoke r2.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$LockdownModeOperation getLockdown_mode()>();

        virtualinvoke $r15.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 5, $r16);

        $r17 = <perfetto.protos.TraceConfig$ProducerConfig: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r18 = virtualinvoke $r17.<com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter asRepeated()>();

        $r19 = virtualinvoke r2.<perfetto.protos.TraceConfig: java.util.List getProducers()>();

        virtualinvoke $r18.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 6, $r19);

        $r20 = <perfetto.protos.TraceConfig$StatsdMetadata: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r21 = virtualinvoke r2.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$StatsdMetadata getStatsd_metadata()>();

        virtualinvoke $r20.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 7, $r21);

        $r22 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r23 = virtualinvoke r2.<perfetto.protos.TraceConfig: java.lang.Boolean getWrite_into_file()>();

        virtualinvoke $r22.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 8, $r23);

        $r24 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        $r25 = virtualinvoke r2.<perfetto.protos.TraceConfig: java.lang.String getOutput_path()>();

        virtualinvoke $r24.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 29, $r25);

        $r26 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r27 = virtualinvoke r2.<perfetto.protos.TraceConfig: java.lang.Integer getFile_write_period_ms()>();

        virtualinvoke $r26.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 9, $r27);

        $r28 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT64>;

        $r29 = virtualinvoke r2.<perfetto.protos.TraceConfig: java.lang.Long getMax_file_size_bytes()>();

        virtualinvoke $r28.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 10, $r29);

        $r30 = <perfetto.protos.TraceConfig$GuardrailOverrides: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r31 = virtualinvoke r2.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$GuardrailOverrides getGuardrail_overrides()>();

        virtualinvoke $r30.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 11, $r31);

        $r32 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r33 = virtualinvoke r2.<perfetto.protos.TraceConfig: java.lang.Boolean getDeferred_start()>();

        virtualinvoke $r32.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 12, $r33);

        $r34 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r35 = virtualinvoke r2.<perfetto.protos.TraceConfig: java.lang.Integer getFlush_period_ms()>();

        virtualinvoke $r34.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 13, $r35);

        $r36 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r37 = virtualinvoke r2.<perfetto.protos.TraceConfig: java.lang.Integer getFlush_timeout_ms()>();

        virtualinvoke $r36.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 14, $r37);

        $r38 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r39 = virtualinvoke r2.<perfetto.protos.TraceConfig: java.lang.Integer getData_source_stop_timeout_ms()>();

        virtualinvoke $r38.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 23, $r39);

        $r40 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r41 = virtualinvoke r2.<perfetto.protos.TraceConfig: java.lang.Boolean getNotify_traceur()>();

        virtualinvoke $r40.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 16, $r41);

        $r42 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter INT32>;

        $r43 = virtualinvoke r2.<perfetto.protos.TraceConfig: java.lang.Integer getBugreport_score()>();

        virtualinvoke $r42.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 30, $r43);

        $r44 = <perfetto.protos.TraceConfig$TriggerConfig: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r45 = virtualinvoke r2.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$TriggerConfig getTrigger_config()>();

        virtualinvoke $r44.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 17, $r45);

        $r46 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        $r47 = virtualinvoke $r46.<com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter asRepeated()>();

        $r48 = virtualinvoke r2.<perfetto.protos.TraceConfig: java.util.List getActivate_triggers()>();

        virtualinvoke $r47.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 18, $r48);

        $r49 = <perfetto.protos.TraceConfig$IncrementalStateConfig: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r50 = virtualinvoke r2.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$IncrementalStateConfig getIncremental_state_config()>();

        virtualinvoke $r49.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 21, $r50);

        $r51 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        $r52 = virtualinvoke r2.<perfetto.protos.TraceConfig: java.lang.Boolean getAllow_user_build_tracing()>();

        virtualinvoke $r51.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 19, $r52);

        $r53 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        $r54 = virtualinvoke r2.<perfetto.protos.TraceConfig: java.lang.String getUnique_session_name()>();

        virtualinvoke $r53.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 22, $r54);

        $r55 = <perfetto.protos.TraceConfig$CompressionType: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r56 = virtualinvoke r2.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$CompressionType getCompression_type()>();

        virtualinvoke $r55.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 24, $r56);

        $r57 = <perfetto.protos.TraceConfig$StatsdLogging: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r58 = virtualinvoke r2.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$StatsdLogging getStatsd_logging()>();

        virtualinvoke $r57.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 31, $r58);

        $r59 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter INT64>;

        $r60 = virtualinvoke r2.<perfetto.protos.TraceConfig: java.lang.Long getTrace_uuid_msb()>();

        virtualinvoke $r59.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 27, $r60);

        $r61 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter INT64>;

        $r62 = virtualinvoke r2.<perfetto.protos.TraceConfig: java.lang.Long getTrace_uuid_lsb()>();

        virtualinvoke $r61.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 28, $r62);

        $r63 = <perfetto.protos.TraceConfig$TraceFilter: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r64 = virtualinvoke r2.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$TraceFilter getTrace_filter()>();

        virtualinvoke $r63.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 32, $r64);

        $r65 = virtualinvoke r2.<perfetto.protos.TraceConfig: okio.ByteString unknownFields()>();

        virtualinvoke r1.<com.squareup.wire.ProtoWriter: void writeBytes(okio.ByteString)>($r65);

        return;
    }

    public perfetto.protos.TraceConfig decode(com.squareup.wire.ProtoReader)
    {
        perfetto.protos.TraceConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoReader r1, r7;
        java.util.List r2, r3, r4, r5;
        okio.ByteString r6;
        long l0, $l4, $l6, $l8;
        int i1, i2, $i3, $i5, $i7;
        java.util.ArrayList $r8, $r9, $r10, $r11;
        com.squareup.wire.ProtoAdapter $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r38, $r39, $r40, $r41, $r43;
        java.lang.Object $r25, $r37, $r42, $r44, r80, r81, r82, r83, r84, r85, r86, r87, r88, r89, r90, r91, r92, r93, r94, r95, r96, r97, r98, r99, r100, r101, r102, r103, r104;
        perfetto.protos.TraceConfig $r45;
        perfetto.protos.TraceConfig$TraceFilter $r46;
        java.lang.Long $r47, $r48, $r62, $r73, $r76, $r79;
        perfetto.protos.TraceConfig$StatsdLogging $r49;
        perfetto.protos.TraceConfig$CompressionType $r50;
        java.lang.String $r51, $r64;
        java.lang.Boolean $r52, $r56, $r60, $r65, $r68;
        perfetto.protos.TraceConfig$IncrementalStateConfig $r53;
        perfetto.protos.TraceConfig$TriggerConfig $r54;
        java.lang.Integer $r55, $r57, $r58, $r59, $r63, $r69;
        perfetto.protos.TraceConfig$GuardrailOverrides $r61;
        perfetto.protos.TraceConfig$StatsdMetadata $r66;
        perfetto.protos.TraceConfig$LockdownModeOperation $r67;
        perfetto.protos.TraceConfig$BuiltinDataSource $r70;
        java.lang.Throwable $r71, $r74, $r77, r105, r106, r107;
        com.squareup.wire.FieldEncoding $r72, $r75, $r78;

        r0 := @this: perfetto.protos.TraceConfig$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoReader;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "reader");

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r2 = (java.util.List) $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r3 = (java.util.List) $r9;

        r80 = null;

        r81 = null;

        r82 = null;

        r83 = null;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r4 = (java.util.List) $r10;

        r84 = null;

        r85 = null;

        r86 = null;

        r87 = null;

        r88 = null;

        r89 = null;

        r90 = null;

        r91 = null;

        r92 = null;

        r93 = null;

        r94 = null;

        r95 = null;

        r96 = null;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r5 = (java.util.List) $r11;

        r97 = null;

        r98 = null;

        r99 = null;

        r100 = null;

        r101 = null;

        r102 = null;

        r103 = null;

        r104 = null;

        r7 = r1;

        l0 = virtualinvoke r7.<com.squareup.wire.ProtoReader: long beginMessage()>();

     label01:
        i1 = virtualinvoke r7.<com.squareup.wire.ProtoReader: int nextTag()>();

        if i1 != -1 goto label02;

        goto label40;

     label02:
        i2 = i1;

        tableswitch(i2)
        {
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label06;
            case 4: goto label07;
            case 5: goto label08;
            case 6: goto label11;
            case 7: goto label12;
            case 8: goto label13;
            case 9: goto label15;
            case 10: goto label16;
            case 11: goto label17;
            case 12: goto label18;
            case 13: goto label19;
            case 14: goto label20;
            case 15: goto label38;
            case 16: goto label22;
            case 17: goto label24;
            case 18: goto label25;
            case 19: goto label27;
            case 20: goto label05;
            case 21: goto label26;
            case 22: goto label28;
            case 23: goto label21;
            case 24: goto label29;
            case 25: goto label38;
            case 26: goto label38;
            case 27: goto label35;
            case 28: goto label36;
            case 29: goto label14;
            case 30: goto label23;
            case 31: goto label32;
            case 32: goto label37;
            default: goto label38;
        };

     label03:
        $r43 = <perfetto.protos.TraceConfig$BufferConfig: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r44 = virtualinvoke $r43.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r44);

        goto label39;

     label04:
        $r41 = <perfetto.protos.TraceConfig$DataSource: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r42 = virtualinvoke $r41.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r42);

        goto label39;

     label05:
        $r22 = <perfetto.protos.TraceConfig$BuiltinDataSource: com.squareup.wire.ProtoAdapter ADAPTER>;

        r80 = virtualinvoke $r22.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label39;

     label06:
        $r40 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        r81 = virtualinvoke $r40.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label39;

     label07:
        $r39 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        r82 = virtualinvoke $r39.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label39;

     label08:
        $r38 = <perfetto.protos.TraceConfig$LockdownModeOperation: com.squareup.wire.ProtoAdapter ADAPTER>;

        r83 = virtualinvoke $r38.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

     label09:
        goto label39;

     label10:
        $r77 := @caughtexception;

        r105 = $r77;

        $r78 = <com.squareup.wire.FieldEncoding: com.squareup.wire.FieldEncoding VARINT>;

        $i7 = r105.<com.squareup.wire.ProtoAdapter$EnumConstantNotFoundException: int value>;

        $l8 = (long) $i7;

        $r79 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l8);

        virtualinvoke r1.<com.squareup.wire.ProtoReader: void addUnknownField(int,com.squareup.wire.FieldEncoding,java.lang.Object)>(i2, $r78, $r79);

        goto label39;

     label11:
        $r36 = <perfetto.protos.TraceConfig$ProducerConfig: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r37 = virtualinvoke $r36.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r37);

        goto label39;

     label12:
        $r35 = <perfetto.protos.TraceConfig$StatsdMetadata: com.squareup.wire.ProtoAdapter ADAPTER>;

        r84 = virtualinvoke $r35.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label39;

     label13:
        $r34 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        r85 = virtualinvoke $r34.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label39;

     label14:
        $r15 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        r86 = virtualinvoke $r15.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label39;

     label15:
        $r33 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        r87 = virtualinvoke $r33.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label39;

     label16:
        $r32 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT64>;

        r88 = virtualinvoke $r32.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label39;

     label17:
        $r31 = <perfetto.protos.TraceConfig$GuardrailOverrides: com.squareup.wire.ProtoAdapter ADAPTER>;

        r89 = virtualinvoke $r31.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label39;

     label18:
        $r30 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        r90 = virtualinvoke $r30.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label39;

     label19:
        $r29 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        r91 = virtualinvoke $r29.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label39;

     label20:
        $r28 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        r92 = virtualinvoke $r28.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label39;

     label21:
        $r19 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        r93 = virtualinvoke $r19.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label39;

     label22:
        $r27 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        r94 = virtualinvoke $r27.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label39;

     label23:
        $r14 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter INT32>;

        r95 = virtualinvoke $r14.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label39;

     label24:
        $r26 = <perfetto.protos.TraceConfig$TriggerConfig: com.squareup.wire.ProtoAdapter ADAPTER>;

        r96 = virtualinvoke $r26.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label39;

     label25:
        $r24 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        $r25 = virtualinvoke $r24.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r25);

        goto label39;

     label26:
        $r21 = <perfetto.protos.TraceConfig$IncrementalStateConfig: com.squareup.wire.ProtoAdapter ADAPTER>;

        r97 = virtualinvoke $r21.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label39;

     label27:
        $r23 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BOOL>;

        r98 = virtualinvoke $r23.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label39;

     label28:
        $r20 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        r99 = virtualinvoke $r20.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label39;

     label29:
        $r18 = <perfetto.protos.TraceConfig$CompressionType: com.squareup.wire.ProtoAdapter ADAPTER>;

        r100 = virtualinvoke $r18.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

     label30:
        goto label39;

     label31:
        $r71 := @caughtexception;

        r106 = $r71;

        $r72 = <com.squareup.wire.FieldEncoding: com.squareup.wire.FieldEncoding VARINT>;

        $i3 = r106.<com.squareup.wire.ProtoAdapter$EnumConstantNotFoundException: int value>;

        $l4 = (long) $i3;

        $r73 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        virtualinvoke r1.<com.squareup.wire.ProtoReader: void addUnknownField(int,com.squareup.wire.FieldEncoding,java.lang.Object)>(i2, $r72, $r73);

        goto label39;

     label32:
        $r13 = <perfetto.protos.TraceConfig$StatsdLogging: com.squareup.wire.ProtoAdapter ADAPTER>;

        r101 = virtualinvoke $r13.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

     label33:
        goto label39;

     label34:
        $r74 := @caughtexception;

        r107 = $r74;

        $r75 = <com.squareup.wire.FieldEncoding: com.squareup.wire.FieldEncoding VARINT>;

        $i5 = r107.<com.squareup.wire.ProtoAdapter$EnumConstantNotFoundException: int value>;

        $l6 = (long) $i5;

        $r76 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);

        virtualinvoke r1.<com.squareup.wire.ProtoReader: void addUnknownField(int,com.squareup.wire.FieldEncoding,java.lang.Object)>(i2, $r75, $r76);

        goto label39;

     label35:
        $r17 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter INT64>;

        r102 = virtualinvoke $r17.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label39;

     label36:
        $r16 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter INT64>;

        r103 = virtualinvoke $r16.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label39;

     label37:
        $r12 = <perfetto.protos.TraceConfig$TraceFilter: com.squareup.wire.ProtoAdapter ADAPTER>;

        r104 = virtualinvoke $r12.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label39;

     label38:
        virtualinvoke r1.<com.squareup.wire.ProtoReader: void readUnknownField(int)>(i2);

     label39:
        goto label01;

     label40:
        r6 = virtualinvoke r7.<com.squareup.wire.ProtoReader: okio.ByteString endMessageAndGetUnknownFields(long)>(l0);

        $r45 = new perfetto.protos.TraceConfig;

        $r70 = (perfetto.protos.TraceConfig$BuiltinDataSource) r80;

        $r69 = (java.lang.Integer) r81;

        $r68 = (java.lang.Boolean) r82;

        $r67 = (perfetto.protos.TraceConfig$LockdownModeOperation) r83;

        $r66 = (perfetto.protos.TraceConfig$StatsdMetadata) r84;

        $r65 = (java.lang.Boolean) r85;

        $r64 = (java.lang.String) r86;

        $r63 = (java.lang.Integer) r87;

        $r62 = (java.lang.Long) r88;

        $r61 = (perfetto.protos.TraceConfig$GuardrailOverrides) r89;

        $r60 = (java.lang.Boolean) r90;

        $r59 = (java.lang.Integer) r91;

        $r58 = (java.lang.Integer) r92;

        $r57 = (java.lang.Integer) r93;

        $r56 = (java.lang.Boolean) r94;

        $r55 = (java.lang.Integer) r95;

        $r54 = (perfetto.protos.TraceConfig$TriggerConfig) r96;

        $r53 = (perfetto.protos.TraceConfig$IncrementalStateConfig) r97;

        $r52 = (java.lang.Boolean) r98;

        $r51 = (java.lang.String) r99;

        $r50 = (perfetto.protos.TraceConfig$CompressionType) r100;

        $r49 = (perfetto.protos.TraceConfig$StatsdLogging) r101;

        $r48 = (java.lang.Long) r102;

        $r47 = (java.lang.Long) r103;

        $r46 = (perfetto.protos.TraceConfig$TraceFilter) r104;

        specialinvoke $r45.<perfetto.protos.TraceConfig: void <init>(java.util.List,java.util.List,perfetto.protos.TraceConfig$BuiltinDataSource,java.lang.Integer,java.lang.Boolean,perfetto.protos.TraceConfig$LockdownModeOperation,java.util.List,perfetto.protos.TraceConfig$StatsdMetadata,java.lang.Boolean,java.lang.String,java.lang.Integer,java.lang.Long,perfetto.protos.TraceConfig$GuardrailOverrides,java.lang.Boolean,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.lang.Integer,perfetto.protos.TraceConfig$TriggerConfig,java.util.List,perfetto.protos.TraceConfig$IncrementalStateConfig,java.lang.Boolean,java.lang.String,perfetto.protos.TraceConfig$CompressionType,perfetto.protos.TraceConfig$StatsdLogging,java.lang.Long,java.lang.Long,perfetto.protos.TraceConfig$TraceFilter,okio.ByteString)>(r2, r3, $r70, $r69, $r68, $r67, r4, $r66, $r65, $r64, $r63, $r62, $r61, $r60, $r59, $r58, $r57, $r56, $r55, $r54, r5, $r53, $r52, $r51, $r50, $r49, $r48, $r47, $r46, r6);

        return $r45;

        catch com.squareup.wire.ProtoAdapter$EnumConstantNotFoundException from label08 to label09 with label10;
        catch com.squareup.wire.ProtoAdapter$EnumConstantNotFoundException from label29 to label30 with label31;
        catch com.squareup.wire.ProtoAdapter$EnumConstantNotFoundException from label32 to label33 with label34;
    }

    public perfetto.protos.TraceConfig redact(perfetto.protos.TraceConfig)
    {
        perfetto.protos.TraceConfig$Companion$ADAPTER$1 r0;
        perfetto.protos.TraceConfig r1, $r17, r26, r37, r49, r62, r76, r91, $r93;
        perfetto.protos.TraceConfig$TraceFilter r2, $r78, $r79, r80, r82;
        java.util.List $r3, $r5, $r9, $r18, $r19, r24, r25, $r28, r33, r35, r36, r45, r47, r48, r58, r60, r61, r72, r74, r75, r87, r89, r90;
        com.squareup.wire.ProtoAdapter $r4, $r6, $r10, r22, r31, r42, r54, r67, r81;
        perfetto.protos.TraceConfig$BuiltinDataSource $r7, $r20, r21, r23, r27, r34, r46, r59, r73, r88;
        java.lang.Object $r8, $r12, $r13, $r14, $r15, $r16;
        perfetto.protos.TraceConfig$StatsdMetadata $r11, $r29, r30, r32, r38, r44, r57, r71, r86;
        perfetto.protos.TraceConfig$GuardrailOverrides $r39, $r40, r41, r43, r50, r56, r70, r85;
        perfetto.protos.TraceConfig$TriggerConfig $r51, $r52, r53, r55, r63, r69, r84;
        perfetto.protos.TraceConfig$IncrementalStateConfig $r64, $r65, r66, r68, r77, r83;
        okio.ByteString $r92;

        r0 := @this: perfetto.protos.TraceConfig$Companion$ADAPTER$1;

        r1 := @parameter0: perfetto.protos.TraceConfig;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r17 = r1;

        $r3 = virtualinvoke r1.<perfetto.protos.TraceConfig: java.util.List getBuffers()>();

        $r4 = <perfetto.protos.TraceConfig$BufferConfig: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r18 = staticinvoke <com.squareup.wire.internal.Internal: java.util.List '-redactElements'(java.util.List,com.squareup.wire.ProtoAdapter)>($r3, $r4);

        $r5 = virtualinvoke r1.<perfetto.protos.TraceConfig: java.util.List getData_sources()>();

        $r6 = <perfetto.protos.TraceConfig$DataSource: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r19 = staticinvoke <com.squareup.wire.internal.Internal: java.util.List '-redactElements'(java.util.List,com.squareup.wire.ProtoAdapter)>($r5, $r6);

        $r7 = virtualinvoke r1.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$BuiltinDataSource getBuiltin_data_sources()>();

        if $r7 != null goto label01;

        $r20 = null;

        goto label02;

     label01:
        r21 = $r7;

        r22 = <perfetto.protos.TraceConfig$BuiltinDataSource: com.squareup.wire.ProtoAdapter ADAPTER>;

        r23 = r21;

        r24 = $r19;

        r25 = $r18;

        r26 = r1;

        $r8 = virtualinvoke r22.<com.squareup.wire.ProtoAdapter: java.lang.Object redact(java.lang.Object)>(r23);

        r27 = (perfetto.protos.TraceConfig$BuiltinDataSource) $r8;

        $r17 = r26;

        $r18 = r25;

        $r19 = r24;

        $r20 = r27;

     label02:
        $r9 = virtualinvoke r1.<perfetto.protos.TraceConfig: java.util.List getProducers()>();

        $r10 = <perfetto.protos.TraceConfig$ProducerConfig: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r28 = staticinvoke <com.squareup.wire.internal.Internal: java.util.List '-redactElements'(java.util.List,com.squareup.wire.ProtoAdapter)>($r9, $r10);

        $r11 = virtualinvoke r1.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$StatsdMetadata getStatsd_metadata()>();

        if $r11 != null goto label03;

        $r29 = null;

        goto label04;

     label03:
        r30 = $r11;

        r31 = <perfetto.protos.TraceConfig$StatsdMetadata: com.squareup.wire.ProtoAdapter ADAPTER>;

        r32 = r30;

        r33 = $r28;

        r34 = $r20;

        r35 = $r19;

        r36 = $r18;

        r37 = $r17;

        $r12 = virtualinvoke r31.<com.squareup.wire.ProtoAdapter: java.lang.Object redact(java.lang.Object)>(r32);

        r38 = (perfetto.protos.TraceConfig$StatsdMetadata) $r12;

        $r17 = r37;

        $r18 = r36;

        $r19 = r35;

        $r20 = r34;

        $r28 = r33;

        $r29 = r38;

     label04:
        $r39 = virtualinvoke r1.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$GuardrailOverrides getGuardrail_overrides()>();

        if $r39 != null goto label05;

        $r40 = null;

        goto label06;

     label05:
        r41 = $r39;

        r42 = <perfetto.protos.TraceConfig$GuardrailOverrides: com.squareup.wire.ProtoAdapter ADAPTER>;

        r43 = r41;

        r44 = $r29;

        r45 = $r28;

        r46 = $r20;

        r47 = $r19;

        r48 = $r18;

        r49 = $r17;

        $r13 = virtualinvoke r42.<com.squareup.wire.ProtoAdapter: java.lang.Object redact(java.lang.Object)>(r43);

        r50 = (perfetto.protos.TraceConfig$GuardrailOverrides) $r13;

        $r17 = r49;

        $r18 = r48;

        $r19 = r47;

        $r20 = r46;

        $r28 = r45;

        $r29 = r44;

        $r40 = r50;

     label06:
        $r51 = virtualinvoke r1.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$TriggerConfig getTrigger_config()>();

        if $r51 != null goto label07;

        $r52 = null;

        goto label08;

     label07:
        r53 = $r51;

        r54 = <perfetto.protos.TraceConfig$TriggerConfig: com.squareup.wire.ProtoAdapter ADAPTER>;

        r55 = r53;

        r56 = $r40;

        r57 = $r29;

        r58 = $r28;

        r59 = $r20;

        r60 = $r19;

        r61 = $r18;

        r62 = $r17;

        $r14 = virtualinvoke r54.<com.squareup.wire.ProtoAdapter: java.lang.Object redact(java.lang.Object)>(r55);

        r63 = (perfetto.protos.TraceConfig$TriggerConfig) $r14;

        $r17 = r62;

        $r18 = r61;

        $r19 = r60;

        $r20 = r59;

        $r28 = r58;

        $r29 = r57;

        $r40 = r56;

        $r52 = r63;

     label08:
        $r64 = virtualinvoke r1.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$IncrementalStateConfig getIncremental_state_config()>();

        if $r64 != null goto label09;

        $r65 = null;

        goto label10;

     label09:
        r66 = $r64;

        r67 = <perfetto.protos.TraceConfig$IncrementalStateConfig: com.squareup.wire.ProtoAdapter ADAPTER>;

        r68 = r66;

        r69 = $r52;

        r70 = $r40;

        r71 = $r29;

        r72 = $r28;

        r73 = $r20;

        r74 = $r19;

        r75 = $r18;

        r76 = $r17;

        $r15 = virtualinvoke r67.<com.squareup.wire.ProtoAdapter: java.lang.Object redact(java.lang.Object)>(r68);

        r77 = (perfetto.protos.TraceConfig$IncrementalStateConfig) $r15;

        $r17 = r76;

        $r18 = r75;

        $r19 = r74;

        $r20 = r73;

        $r28 = r72;

        $r29 = r71;

        $r40 = r70;

        $r52 = r69;

        $r65 = r77;

     label10:
        $r78 = virtualinvoke r1.<perfetto.protos.TraceConfig: perfetto.protos.TraceConfig$TraceFilter getTrace_filter()>();

        if $r78 != null goto label11;

        $r79 = null;

        goto label12;

     label11:
        r80 = $r78;

        r81 = <perfetto.protos.TraceConfig$TraceFilter: com.squareup.wire.ProtoAdapter ADAPTER>;

        r82 = r80;

        r83 = $r65;

        r84 = $r52;

        r85 = $r40;

        r86 = $r29;

        r87 = $r28;

        r88 = $r20;

        r89 = $r19;

        r90 = $r18;

        r91 = $r17;

        $r16 = virtualinvoke r81.<com.squareup.wire.ProtoAdapter: java.lang.Object redact(java.lang.Object)>(r82);

        r2 = (perfetto.protos.TraceConfig$TraceFilter) $r16;

        $r17 = r91;

        $r18 = r90;

        $r19 = r89;

        $r20 = r88;

        $r28 = r87;

        $r29 = r86;

        $r40 = r85;

        $r52 = r84;

        $r65 = r83;

        $r79 = r2;

     label12:
        $r92 = <okio.ByteString: okio.ByteString EMPTY>;

        $r93 = staticinvoke <perfetto.protos.TraceConfig: perfetto.protos.TraceConfig copy$default(perfetto.protos.TraceConfig,java.util.List,java.util.List,perfetto.protos.TraceConfig$BuiltinDataSource,java.lang.Integer,java.lang.Boolean,perfetto.protos.TraceConfig$LockdownModeOperation,java.util.List,perfetto.protos.TraceConfig$StatsdMetadata,java.lang.Boolean,java.lang.String,java.lang.Integer,java.lang.Long,perfetto.protos.TraceConfig$GuardrailOverrides,java.lang.Boolean,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.lang.Integer,perfetto.protos.TraceConfig$TriggerConfig,java.util.List,perfetto.protos.TraceConfig$IncrementalStateConfig,java.lang.Boolean,java.lang.String,perfetto.protos.TraceConfig$CompressionType,perfetto.protos.TraceConfig$StatsdLogging,java.lang.Long,java.lang.Long,perfetto.protos.TraceConfig$TraceFilter,okio.ByteString,int,java.lang.Object)>($r17, $r18, $r19, $r20, null, null, null, $r28, $r29, null, null, null, null, $r40, null, null, null, null, null, null, $r52, null, $r65, null, null, null, null, null, null, $r79, $r92, 265809720, null);

        return $r93;
    }

    public volatile int encodedSize(java.lang.Object)
    {
        perfetto.protos.TraceConfig$Companion$ADAPTER$1 r0;
        java.lang.Object r1;
        perfetto.protos.TraceConfig $r2;
        int $i0;

        r0 := @this: perfetto.protos.TraceConfig$Companion$ADAPTER$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (perfetto.protos.TraceConfig) r1;

        $i0 = virtualinvoke r0.<perfetto.protos.TraceConfig$Companion$ADAPTER$1: int encodedSize(perfetto.protos.TraceConfig)>($r2);

        return $i0;
    }

    public volatile void encode(com.squareup.wire.ProtoWriter, java.lang.Object)
    {
        perfetto.protos.TraceConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoWriter r1;
        java.lang.Object r2;
        perfetto.protos.TraceConfig $r3;

        r0 := @this: perfetto.protos.TraceConfig$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoWriter;

        r2 := @parameter1: java.lang.Object;

        $r3 = (perfetto.protos.TraceConfig) r2;

        virtualinvoke r0.<perfetto.protos.TraceConfig$Companion$ADAPTER$1: void encode(com.squareup.wire.ProtoWriter,perfetto.protos.TraceConfig)>(r1, $r3);

        return;
    }

    public volatile java.lang.Object decode(com.squareup.wire.ProtoReader)
    {
        perfetto.protos.TraceConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoReader r1;
        perfetto.protos.TraceConfig $r2;

        r0 := @this: perfetto.protos.TraceConfig$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoReader;

        $r2 = virtualinvoke r0.<perfetto.protos.TraceConfig$Companion$ADAPTER$1: perfetto.protos.TraceConfig decode(com.squareup.wire.ProtoReader)>(r1);

        return $r2;
    }

    public volatile java.lang.Object redact(java.lang.Object)
    {
        perfetto.protos.TraceConfig$Companion$ADAPTER$1 r0;
        java.lang.Object r1;
        perfetto.protos.TraceConfig $r2, $r3;

        r0 := @this: perfetto.protos.TraceConfig$Companion$ADAPTER$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (perfetto.protos.TraceConfig) r1;

        $r3 = virtualinvoke r0.<perfetto.protos.TraceConfig$Companion$ADAPTER$1: perfetto.protos.TraceConfig redact(perfetto.protos.TraceConfig)>($r2);

        return $r3;
    }

perfetto.protos.TraceConfig$Companion
    private void <init>()
    {
        perfetto.protos.TraceConfig$Companion r0;

        r0 := @this: perfetto.protos.TraceConfig$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.TraceConfig$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: perfetto.protos.TraceConfig$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<perfetto.protos.TraceConfig$Companion: void <init>()>();

        return;
    }

perfetto.protos.TraceConfig$CompressionType$Companion$ADAPTER$1
    void <init>(kotlin.reflect.KClass, com.squareup.wire.Syntax, perfetto.protos.TraceConfig$CompressionType)
    {
        perfetto.protos.TraceConfig$CompressionType$Companion$ADAPTER$1 r0;
        kotlin.reflect.KClass $r1;
        com.squareup.wire.Syntax $r2;
        perfetto.protos.TraceConfig$CompressionType $r3;
        com.squareup.wire.WireEnum $r4;

        r0 := @this: perfetto.protos.TraceConfig$CompressionType$Companion$ADAPTER$1;

        $r1 := @parameter0: kotlin.reflect.KClass;

        $r2 := @parameter1: com.squareup.wire.Syntax;

        $r3 := @parameter2: perfetto.protos.TraceConfig$CompressionType;

        $r4 = (com.squareup.wire.WireEnum) $r3;

        specialinvoke r0.<com.squareup.wire.EnumAdapter: void <init>(kotlin.reflect.KClass,com.squareup.wire.Syntax,com.squareup.wire.WireEnum)>($r1, $r2, $r4);

        return;
    }

    public perfetto.protos.TraceConfig$CompressionType fromValue(int)
    {
        perfetto.protos.TraceConfig$CompressionType$Companion$ADAPTER$1 r0;
        int i0;
        perfetto.protos.TraceConfig$CompressionType$Companion $r1;
        perfetto.protos.TraceConfig$CompressionType $r2;

        r0 := @this: perfetto.protos.TraceConfig$CompressionType$Companion$ADAPTER$1;

        i0 := @parameter0: int;

        $r1 = <perfetto.protos.TraceConfig$CompressionType: perfetto.protos.TraceConfig$CompressionType$Companion Companion>;

        $r2 = virtualinvoke $r1.<perfetto.protos.TraceConfig$CompressionType$Companion: perfetto.protos.TraceConfig$CompressionType fromValue(int)>(i0);

        return $r2;
    }

    public volatile com.squareup.wire.WireEnum fromValue(int)
    {
        perfetto.protos.TraceConfig$CompressionType$Companion$ADAPTER$1 r0;
        int i0;
        perfetto.protos.TraceConfig$CompressionType $r1;
        com.squareup.wire.WireEnum $r2;

        r0 := @this: perfetto.protos.TraceConfig$CompressionType$Companion$ADAPTER$1;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<perfetto.protos.TraceConfig$CompressionType$Companion$ADAPTER$1: perfetto.protos.TraceConfig$CompressionType fromValue(int)>(i0);

        $r2 = (com.squareup.wire.WireEnum) $r1;

        return $r2;
    }

perfetto.protos.TraceConfig$CompressionType$Companion
    private void <init>()
    {
        perfetto.protos.TraceConfig$CompressionType$Companion r0;

        r0 := @this: perfetto.protos.TraceConfig$CompressionType$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final perfetto.protos.TraceConfig$CompressionType fromValue(int)
    {
        perfetto.protos.TraceConfig$CompressionType$Companion r0;
        int i0;
        perfetto.protos.TraceConfig$CompressionType $r1;

        r0 := @this: perfetto.protos.TraceConfig$CompressionType$Companion;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label3;
        };

     label1:
        $r1 = <perfetto.protos.TraceConfig$CompressionType: perfetto.protos.TraceConfig$CompressionType COMPRESSION_TYPE_UNSPECIFIED>;

        goto label4;

     label2:
        $r1 = <perfetto.protos.TraceConfig$CompressionType: perfetto.protos.TraceConfig$CompressionType COMPRESSION_TYPE_DEFLATE>;

        goto label4;

     label3:
        $r1 = null;

     label4:
        return $r1;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.TraceConfig$CompressionType$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: perfetto.protos.TraceConfig$CompressionType$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<perfetto.protos.TraceConfig$CompressionType$Companion: void <init>()>();

        return;
    }

perfetto.protos.TraceConfig$CompressionType
<perfetto.protos.TraceConfig$CompressionType: perfetto.protos.TraceConfig$CompressionType$Companion Companion>
<perfetto.protos.TraceConfig$CompressionType: int value>
<perfetto.protos.TraceConfig$CompressionType: com.squareup.wire.ProtoAdapter ADAPTER>
<perfetto.protos.TraceConfig$CompressionType: perfetto.protos.TraceConfig$CompressionType COMPRESSION_TYPE_UNSPECIFIED>
<perfetto.protos.TraceConfig$CompressionType: perfetto.protos.TraceConfig$CompressionType COMPRESSION_TYPE_DEFLATE>
<perfetto.protos.TraceConfig$CompressionType: perfetto.protos.TraceConfig$CompressionType[] $VALUES>
    private void <init>(java.lang.String, int, int)
    {
        perfetto.protos.TraceConfig$CompressionType r0;
        java.lang.String $r1;
        int $i0, i1;

        r0 := @this: perfetto.protos.TraceConfig$CompressionType;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        r0.<perfetto.protos.TraceConfig$CompressionType: int value> = i1;

        return;
    }

    public int getValue()
    {
        perfetto.protos.TraceConfig$CompressionType r0;
        int $i0;

        r0 := @this: perfetto.protos.TraceConfig$CompressionType;

        $i0 = r0.<perfetto.protos.TraceConfig$CompressionType: int value>;

        return $i0;
    }

    public static perfetto.protos.TraceConfig$CompressionType[] values()
    {
        perfetto.protos.TraceConfig$CompressionType[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <perfetto.protos.TraceConfig$CompressionType: perfetto.protos.TraceConfig$CompressionType[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (perfetto.protos.TraceConfig$CompressionType[]) $r1;

        return $r2;
    }

    public static perfetto.protos.TraceConfig$CompressionType valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        perfetto.protos.TraceConfig$CompressionType $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lperfetto/protos/TraceConfig$CompressionType;", r0);

        $r2 = (perfetto.protos.TraceConfig$CompressionType) $r1;

        return $r2;
    }

    private static final perfetto.protos.TraceConfig$CompressionType[] $values()
    {
        perfetto.protos.TraceConfig$CompressionType[] r0;
        perfetto.protos.TraceConfig$CompressionType $r1, $r2;

        r0 = newarray (perfetto.protos.TraceConfig$CompressionType)[2];

        $r1 = <perfetto.protos.TraceConfig$CompressionType: perfetto.protos.TraceConfig$CompressionType COMPRESSION_TYPE_UNSPECIFIED>;

        r0[0] = $r1;

        $r2 = <perfetto.protos.TraceConfig$CompressionType: perfetto.protos.TraceConfig$CompressionType COMPRESSION_TYPE_DEFLATE>;

        r0[1] = $r2;

        return r0;
    }

    public static final perfetto.protos.TraceConfig$CompressionType fromValue(int)
    {
        int i0;
        perfetto.protos.TraceConfig$CompressionType$Companion $r0;
        perfetto.protos.TraceConfig$CompressionType $r1;

        i0 := @parameter0: int;

        $r0 = <perfetto.protos.TraceConfig$CompressionType: perfetto.protos.TraceConfig$CompressionType$Companion Companion>;

        $r1 = virtualinvoke $r0.<perfetto.protos.TraceConfig$CompressionType$Companion: perfetto.protos.TraceConfig$CompressionType fromValue(int)>(i0);

        return $r1;
    }

    static void <clinit>()
    {
        kotlin.reflect.KClass r0;
        com.squareup.wire.Syntax r1;
        perfetto.protos.TraceConfig$CompressionType r2, $r3, $r4;
        perfetto.protos.TraceConfig$CompressionType[] $r5;
        perfetto.protos.TraceConfig$CompressionType$Companion $r6;
        perfetto.protos.TraceConfig$CompressionType$Companion$ADAPTER$1 $r7;
        com.squareup.wire.ProtoAdapter $r8;

        $r3 = new perfetto.protos.TraceConfig$CompressionType;

        specialinvoke $r3.<perfetto.protos.TraceConfig$CompressionType: void <init>(java.lang.String,int,int)>("COMPRESSION_TYPE_UNSPECIFIED", 0, 0);

        <perfetto.protos.TraceConfig$CompressionType: perfetto.protos.TraceConfig$CompressionType COMPRESSION_TYPE_UNSPECIFIED> = $r3;

        $r4 = new perfetto.protos.TraceConfig$CompressionType;

        specialinvoke $r4.<perfetto.protos.TraceConfig$CompressionType: void <init>(java.lang.String,int,int)>("COMPRESSION_TYPE_DEFLATE", 1, 1);

        <perfetto.protos.TraceConfig$CompressionType: perfetto.protos.TraceConfig$CompressionType COMPRESSION_TYPE_DEFLATE> = $r4;

        $r5 = staticinvoke <perfetto.protos.TraceConfig$CompressionType: perfetto.protos.TraceConfig$CompressionType[] $values()>();

        <perfetto.protos.TraceConfig$CompressionType: perfetto.protos.TraceConfig$CompressionType[] $VALUES> = $r5;

        $r6 = new perfetto.protos.TraceConfig$CompressionType$Companion;

        specialinvoke $r6.<perfetto.protos.TraceConfig$CompressionType$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <perfetto.protos.TraceConfig$CompressionType: perfetto.protos.TraceConfig$CompressionType$Companion Companion> = $r6;

        r0 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Lperfetto/protos/TraceConfig$CompressionType;");

        r1 = <com.squareup.wire.Syntax: com.squareup.wire.Syntax PROTO_2>;

        r2 = <perfetto.protos.TraceConfig$CompressionType: perfetto.protos.TraceConfig$CompressionType COMPRESSION_TYPE_UNSPECIFIED>;

        $r7 = new perfetto.protos.TraceConfig$CompressionType$Companion$ADAPTER$1;

        specialinvoke $r7.<perfetto.protos.TraceConfig$CompressionType$Companion$ADAPTER$1: void <init>(kotlin.reflect.KClass,com.squareup.wire.Syntax,perfetto.protos.TraceConfig$CompressionType)>(r0, r1, r2);

        $r8 = (com.squareup.wire.ProtoAdapter) $r7;

        <perfetto.protos.TraceConfig$CompressionType: com.squareup.wire.ProtoAdapter ADAPTER> = $r8;

        return;
    }

perfetto.protos.TraceConfig$DataSource$Companion$ADAPTER$1
    void <init>(com.squareup.wire.FieldEncoding, kotlin.reflect.KClass, com.squareup.wire.Syntax)
    {
        perfetto.protos.TraceConfig$DataSource$Companion$ADAPTER$1 r0;
        com.squareup.wire.FieldEncoding $r1;
        kotlin.reflect.KClass $r2;
        com.squareup.wire.Syntax $r3;

        r0 := @this: perfetto.protos.TraceConfig$DataSource$Companion$ADAPTER$1;

        $r1 := @parameter0: com.squareup.wire.FieldEncoding;

        $r2 := @parameter1: kotlin.reflect.KClass;

        $r3 := @parameter2: com.squareup.wire.Syntax;

        specialinvoke r0.<com.squareup.wire.ProtoAdapter: void <init>(com.squareup.wire.FieldEncoding,kotlin.reflect.KClass,java.lang.String,com.squareup.wire.Syntax,java.lang.Object)>($r1, $r2, "type.googleapis.com/perfetto.protos.TraceConfig.DataSource", $r3, null);

        return;
    }

    public int encodedSize(perfetto.protos.TraceConfig$DataSource)
    {
        perfetto.protos.TraceConfig$DataSource$Companion$ADAPTER$1 r0;
        perfetto.protos.TraceConfig$DataSource r1;
        okio.ByteString $r2;
        com.squareup.wire.ProtoAdapter $r3, $r5, $r6, $r8, $r9;
        perfetto.protos.DataSourceConfig $r4;
        int $i0, $i1, $i2, i3, i4, i5, i6;
        java.util.List $r7, $r10;

        r0 := @this: perfetto.protos.TraceConfig$DataSource$Companion$ADAPTER$1;

        r1 := @parameter0: perfetto.protos.TraceConfig$DataSource;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = virtualinvoke r1.<perfetto.protos.TraceConfig$DataSource: okio.ByteString unknownFields()>();

        i3 = virtualinvoke $r2.<okio.ByteString: int size()>();

        $r3 = <perfetto.protos.DataSourceConfig: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r4 = virtualinvoke r1.<perfetto.protos.TraceConfig$DataSource: perfetto.protos.DataSourceConfig getConfig()>();

        $i0 = virtualinvoke $r3.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(1, $r4);

        i4 = i3 + $i0;

        $r5 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        $r6 = virtualinvoke $r5.<com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter asRepeated()>();

        $r7 = virtualinvoke r1.<perfetto.protos.TraceConfig$DataSource: java.util.List getProducer_name_filter()>();

        $i1 = virtualinvoke $r6.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(2, $r7);

        i5 = i4 + $i1;

        $r8 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        $r9 = virtualinvoke $r8.<com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter asRepeated()>();

        $r10 = virtualinvoke r1.<perfetto.protos.TraceConfig$DataSource: java.util.List getProducer_name_regex_filter()>();

        $i2 = virtualinvoke $r9.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(3, $r10);

        i6 = i5 + $i2;

        return i6;
    }

    public void encode(com.squareup.wire.ProtoWriter, perfetto.protos.TraceConfig$DataSource)
    {
        perfetto.protos.TraceConfig$DataSource$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoWriter r1;
        perfetto.protos.TraceConfig$DataSource r2;
        com.squareup.wire.ProtoAdapter $r3, $r5, $r6, $r8, $r9;
        perfetto.protos.DataSourceConfig $r4;
        java.util.List $r7, $r10;
        okio.ByteString $r11;

        r0 := @this: perfetto.protos.TraceConfig$DataSource$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoWriter;

        r2 := @parameter1: perfetto.protos.TraceConfig$DataSource;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "writer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "value");

        $r3 = <perfetto.protos.DataSourceConfig: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r4 = virtualinvoke r2.<perfetto.protos.TraceConfig$DataSource: perfetto.protos.DataSourceConfig getConfig()>();

        virtualinvoke $r3.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 1, $r4);

        $r5 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        $r6 = virtualinvoke $r5.<com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter asRepeated()>();

        $r7 = virtualinvoke r2.<perfetto.protos.TraceConfig$DataSource: java.util.List getProducer_name_filter()>();

        virtualinvoke $r6.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 2, $r7);

        $r8 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        $r9 = virtualinvoke $r8.<com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter asRepeated()>();

        $r10 = virtualinvoke r2.<perfetto.protos.TraceConfig$DataSource: java.util.List getProducer_name_regex_filter()>();

        virtualinvoke $r9.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 3, $r10);

        $r11 = virtualinvoke r2.<perfetto.protos.TraceConfig$DataSource: okio.ByteString unknownFields()>();

        virtualinvoke r1.<com.squareup.wire.ProtoWriter: void writeBytes(okio.ByteString)>($r11);

        return;
    }

    public perfetto.protos.TraceConfig$DataSource decode(com.squareup.wire.ProtoReader)
    {
        perfetto.protos.TraceConfig$DataSource$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoReader r1, r5;
        java.util.List r2, r3;
        okio.ByteString r4;
        long l0;
        int i1, i2;
        java.util.ArrayList $r6, $r7;
        com.squareup.wire.ProtoAdapter $r8, $r10, $r12;
        java.lang.Object $r9, $r11, r15;
        perfetto.protos.TraceConfig$DataSource $r13;
        perfetto.protos.DataSourceConfig $r14;

        r0 := @this: perfetto.protos.TraceConfig$DataSource$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoReader;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "reader");

        r15 = null;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r2 = (java.util.List) $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r3 = (java.util.List) $r7;

        r5 = r1;

        l0 = virtualinvoke r5.<com.squareup.wire.ProtoReader: long beginMessage()>();

     label1:
        i1 = virtualinvoke r5.<com.squareup.wire.ProtoReader: int nextTag()>();

        if i1 != -1 goto label2;

        goto label8;

     label2:
        i2 = i1;

        tableswitch(i2)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label6;
        };

     label3:
        $r12 = <perfetto.protos.DataSourceConfig: com.squareup.wire.ProtoAdapter ADAPTER>;

        r15 = virtualinvoke $r12.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label7;

     label4:
        $r10 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        $r11 = virtualinvoke $r10.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r11);

        goto label7;

     label5:
        $r8 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        $r9 = virtualinvoke $r8.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r9);

        goto label7;

     label6:
        virtualinvoke r1.<com.squareup.wire.ProtoReader: void readUnknownField(int)>(i2);

     label7:
        goto label1;

     label8:
        r4 = virtualinvoke r5.<com.squareup.wire.ProtoReader: okio.ByteString endMessageAndGetUnknownFields(long)>(l0);

        $r13 = new perfetto.protos.TraceConfig$DataSource;

        $r14 = (perfetto.protos.DataSourceConfig) r15;

        specialinvoke $r13.<perfetto.protos.TraceConfig$DataSource: void <init>(perfetto.protos.DataSourceConfig,java.util.List,java.util.List,okio.ByteString)>($r14, r2, r3, r4);

        return $r13;
    }

    public perfetto.protos.TraceConfig$DataSource redact(perfetto.protos.TraceConfig$DataSource)
    {
        perfetto.protos.TraceConfig$DataSource$Companion$ADAPTER$1 r0;
        perfetto.protos.TraceConfig$DataSource r1, r5, $r9, $r10;
        perfetto.protos.DataSourceConfig r2, r4, $r6, $r11;
        com.squareup.wire.ProtoAdapter r3;
        java.lang.Object $r7;
        okio.ByteString $r8;

        r0 := @this: perfetto.protos.TraceConfig$DataSource$Companion$ADAPTER$1;

        r1 := @parameter0: perfetto.protos.TraceConfig$DataSource;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r10 = r1;

        $r6 = virtualinvoke r1.<perfetto.protos.TraceConfig$DataSource: perfetto.protos.DataSourceConfig getConfig()>();

        if $r6 != null goto label1;

        $r11 = null;

        goto label2;

     label1:
        r2 = $r6;

        r3 = <perfetto.protos.DataSourceConfig: com.squareup.wire.ProtoAdapter ADAPTER>;

        r4 = r2;

        r5 = r1;

        $r7 = virtualinvoke r3.<com.squareup.wire.ProtoAdapter: java.lang.Object redact(java.lang.Object)>(r4);

        $r11 = (perfetto.protos.DataSourceConfig) $r7;

        $r10 = r5;

     label2:
        $r8 = <okio.ByteString: okio.ByteString EMPTY>;

        $r9 = staticinvoke <perfetto.protos.TraceConfig$DataSource: perfetto.protos.TraceConfig$DataSource copy$default(perfetto.protos.TraceConfig$DataSource,perfetto.protos.DataSourceConfig,java.util.List,java.util.List,okio.ByteString,int,java.lang.Object)>($r10, $r11, null, null, $r8, 6, null);

        return $r9;
    }

    public volatile int encodedSize(java.lang.Object)
    {
        perfetto.protos.TraceConfig$DataSource$Companion$ADAPTER$1 r0;
        java.lang.Object r1;
        perfetto.protos.TraceConfig$DataSource $r2;
        int $i0;

        r0 := @this: perfetto.protos.TraceConfig$DataSource$Companion$ADAPTER$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (perfetto.protos.TraceConfig$DataSource) r1;

        $i0 = virtualinvoke r0.<perfetto.protos.TraceConfig$DataSource$Companion$ADAPTER$1: int encodedSize(perfetto.protos.TraceConfig$DataSource)>($r2);

        return $i0;
    }

    public volatile void encode(com.squareup.wire.ProtoWriter, java.lang.Object)
    {
        perfetto.protos.TraceConfig$DataSource$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoWriter r1;
        java.lang.Object r2;
        perfetto.protos.TraceConfig$DataSource $r3;

        r0 := @this: perfetto.protos.TraceConfig$DataSource$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoWriter;

        r2 := @parameter1: java.lang.Object;

        $r3 = (perfetto.protos.TraceConfig$DataSource) r2;

        virtualinvoke r0.<perfetto.protos.TraceConfig$DataSource$Companion$ADAPTER$1: void encode(com.squareup.wire.ProtoWriter,perfetto.protos.TraceConfig$DataSource)>(r1, $r3);

        return;
    }

    public volatile java.lang.Object decode(com.squareup.wire.ProtoReader)
    {
        perfetto.protos.TraceConfig$DataSource$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoReader r1;
        perfetto.protos.TraceConfig$DataSource $r2;

        r0 := @this: perfetto.protos.TraceConfig$DataSource$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoReader;

        $r2 = virtualinvoke r0.<perfetto.protos.TraceConfig$DataSource$Companion$ADAPTER$1: perfetto.protos.TraceConfig$DataSource decode(com.squareup.wire.ProtoReader)>(r1);

        return $r2;
    }

    public volatile java.lang.Object redact(java.lang.Object)
    {
        perfetto.protos.TraceConfig$DataSource$Companion$ADAPTER$1 r0;
        java.lang.Object r1;
        perfetto.protos.TraceConfig$DataSource $r2, $r3;

        r0 := @this: perfetto.protos.TraceConfig$DataSource$Companion$ADAPTER$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (perfetto.protos.TraceConfig$DataSource) r1;

        $r3 = virtualinvoke r0.<perfetto.protos.TraceConfig$DataSource$Companion$ADAPTER$1: perfetto.protos.TraceConfig$DataSource redact(perfetto.protos.TraceConfig$DataSource)>($r2);

        return $r3;
    }

perfetto.protos.TraceConfig$DataSource$Companion
    private void <init>()
    {
        perfetto.protos.TraceConfig$DataSource$Companion r0;

        r0 := @this: perfetto.protos.TraceConfig$DataSource$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.TraceConfig$DataSource$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: perfetto.protos.TraceConfig$DataSource$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<perfetto.protos.TraceConfig$DataSource$Companion: void <init>()>();

        return;
    }

perfetto.protos.TraceConfig$DataSource
<perfetto.protos.TraceConfig$DataSource: perfetto.protos.TraceConfig$DataSource$Companion Companion>
<perfetto.protos.TraceConfig$DataSource: perfetto.protos.DataSourceConfig config>
<perfetto.protos.TraceConfig$DataSource: java.util.List producer_name_filter>
<perfetto.protos.TraceConfig$DataSource: java.util.List producer_name_regex_filter>
<perfetto.protos.TraceConfig$DataSource: com.squareup.wire.ProtoAdapter ADAPTER>
<perfetto.protos.TraceConfig$DataSource: long serialVersionUID>
    public void <init>(perfetto.protos.DataSourceConfig, java.util.List, java.util.List, okio.ByteString)
    {
        perfetto.protos.TraceConfig$DataSource r0;
        perfetto.protos.DataSourceConfig r1;
        java.util.List r2, r3, $r6, $r7;
        okio.ByteString r4;
        com.squareup.wire.ProtoAdapter $r5;

        r0 := @this: perfetto.protos.TraceConfig$DataSource;

        r1 := @parameter0: perfetto.protos.DataSourceConfig;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: okio.ByteString;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "producer_name_filter");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "producer_name_regex_filter");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "unknownFields");

        $r5 = <perfetto.protos.TraceConfig$DataSource: com.squareup.wire.ProtoAdapter ADAPTER>;

        specialinvoke r0.<com.squareup.wire.Message: void <init>(com.squareup.wire.ProtoAdapter,okio.ByteString)>($r5, r4);

        r0.<perfetto.protos.TraceConfig$DataSource: perfetto.protos.DataSourceConfig config> = r1;

        $r6 = staticinvoke <com.squareup.wire.internal.Internal: java.util.List immutableCopyOf(java.lang.String,java.util.List)>("producer_name_filter", r2);

        r0.<perfetto.protos.TraceConfig$DataSource: java.util.List producer_name_filter> = $r6;

        $r7 = staticinvoke <com.squareup.wire.internal.Internal: java.util.List immutableCopyOf(java.lang.String,java.util.List)>("producer_name_regex_filter", r3);

        r0.<perfetto.protos.TraceConfig$DataSource: java.util.List producer_name_regex_filter> = $r7;

        return;
    }

    public void <init>(perfetto.protos.DataSourceConfig, java.util.List, java.util.List, okio.ByteString, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.TraceConfig$DataSource r0;
        int i0, $i1, $i2, $i3, $i4;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        perfetto.protos.DataSourceConfig r2;
        java.util.List r3, r4;
        okio.ByteString r5;

        r0 := @this: perfetto.protos.TraceConfig$DataSource;

        r2 := @parameter0: perfetto.protos.DataSourceConfig;

        r3 := @parameter1: java.util.List;

        r4 := @parameter2: java.util.List;

        r5 := @parameter3: okio.ByteString;

        i0 := @parameter4: int;

        r1 := @parameter5: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r2 = null;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        r4 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label3:
        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        r5 = <okio.ByteString: okio.ByteString EMPTY>;

     label4:
        specialinvoke r0.<perfetto.protos.TraceConfig$DataSource: void <init>(perfetto.protos.DataSourceConfig,java.util.List,java.util.List,okio.ByteString)>(r2, r3, r4, r5);

        return;
    }

    public final perfetto.protos.DataSourceConfig getConfig()
    {
        perfetto.protos.TraceConfig$DataSource r0;
        perfetto.protos.DataSourceConfig $r1;

        r0 := @this: perfetto.protos.TraceConfig$DataSource;

        $r1 = r0.<perfetto.protos.TraceConfig$DataSource: perfetto.protos.DataSourceConfig config>;

        return $r1;
    }

    public final java.util.List getProducer_name_filter()
    {
        perfetto.protos.TraceConfig$DataSource r0;
        java.util.List $r1;

        r0 := @this: perfetto.protos.TraceConfig$DataSource;

        $r1 = r0.<perfetto.protos.TraceConfig$DataSource: java.util.List producer_name_filter>;

        return $r1;
    }

    public final java.util.List getProducer_name_regex_filter()
    {
        perfetto.protos.TraceConfig$DataSource r0;
        java.util.List $r1;

        r0 := @this: perfetto.protos.TraceConfig$DataSource;

        $r1 = r0.<perfetto.protos.TraceConfig$DataSource: java.util.List producer_name_regex_filter>;

        return $r1;
    }

    public java.lang.Void newBuilder()
    {
        perfetto.protos.TraceConfig$DataSource r0;
        java.lang.AssertionError $r1;

        r0 := @this: perfetto.protos.TraceConfig$DataSource;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;
    }

    public boolean equals(java.lang.Object)
    {
        perfetto.protos.TraceConfig$DataSource r0, $r3, $r5, $r8, $r11;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        okio.ByteString $r2, $r4;
        perfetto.protos.DataSourceConfig $r6, $r7;
        java.util.List $r9, $r10, $r12, $r13;

        r0 := @this: perfetto.protos.TraceConfig$DataSource;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof perfetto.protos.TraceConfig$DataSource;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<perfetto.protos.TraceConfig$DataSource: okio.ByteString unknownFields()>();

        $r3 = (perfetto.protos.TraceConfig$DataSource) r1;

        $r4 = virtualinvoke $r3.<perfetto.protos.TraceConfig$DataSource: okio.ByteString unknownFields()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r4);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $r7 = r0.<perfetto.protos.TraceConfig$DataSource: perfetto.protos.DataSourceConfig config>;

        $r5 = (perfetto.protos.TraceConfig$DataSource) r1;

        $r6 = $r5.<perfetto.protos.TraceConfig$DataSource: perfetto.protos.DataSourceConfig config>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, $r6);

        if $z2 != 0 goto label4;

        return 0;

     label4:
        $r10 = r0.<perfetto.protos.TraceConfig$DataSource: java.util.List producer_name_filter>;

        $r8 = (perfetto.protos.TraceConfig$DataSource) r1;

        $r9 = $r8.<perfetto.protos.TraceConfig$DataSource: java.util.List producer_name_filter>;

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r10, $r9);

        if $z3 != 0 goto label5;

        return 0;

     label5:
        $r13 = r0.<perfetto.protos.TraceConfig$DataSource: java.util.List producer_name_regex_filter>;

        $r11 = (perfetto.protos.TraceConfig$DataSource) r1;

        $r12 = $r11.<perfetto.protos.TraceConfig$DataSource: java.util.List producer_name_regex_filter>;

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r13, $r12);

        if $z4 != 0 goto label6;

        return 0;

     label6:
        return 1;
    }

    public int hashCode()
    {
        perfetto.protos.TraceConfig$DataSource r0;
        okio.ByteString $r1;
        perfetto.protos.DataSourceConfig $r2;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, $i7, i8, i9;
        java.util.List $r3, $r4;

        r0 := @this: perfetto.protos.TraceConfig$DataSource;

        i5 = r0.<perfetto.protos.TraceConfig$DataSource: int hashCode>;

        if i5 != 0 goto label3;

        $r1 = virtualinvoke r0.<perfetto.protos.TraceConfig$DataSource: okio.ByteString unknownFields()>();

        i6 = virtualinvoke $r1.<okio.ByteString: int hashCode()>();

        $i0 = i6 * 37;

        $r2 = r0.<perfetto.protos.TraceConfig$DataSource: perfetto.protos.DataSourceConfig config>;

        if $r2 != null goto label1;

        $i7 = 0;

        goto label2;

     label1:
        $i7 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

     label2:
        i8 = $i0 + $i7;

        $i1 = i8 * 37;

        $r3 = r0.<perfetto.protos.TraceConfig$DataSource: java.util.List producer_name_filter>;

        $i2 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

        i9 = $i1 + $i2;

        $i3 = i9 * 37;

        $r4 = r0.<perfetto.protos.TraceConfig$DataSource: java.util.List producer_name_regex_filter>;

        $i4 = virtualinvoke $r4.<java.lang.Object: int hashCode()>();

        i5 = $i3 + $i4;

        r0.<perfetto.protos.TraceConfig$DataSource: int hashCode> = i5;

     label3:
        return i5;
    }

    public java.lang.String toString()
    {
        perfetto.protos.TraceConfig$DataSource r0;
        java.util.List r1, $r4, $r6, $r13, $r17;
        java.util.ArrayList $r2;
        perfetto.protos.DataSourceConfig $r3, $r21;
        java.util.Collection $r5, $r7, $r14, $r18, $r22;
        boolean $z0, $z1, $z5, $z6;
        java.lang.CharSequence $r8, $r9, $r10;
        java.lang.Iterable $r11;
        java.lang.String $r12, $r15, $r16, $r19, $r20, $r23;

        r0 := @this: perfetto.protos.TraceConfig$DataSource;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r1 = (java.util.List) $r2;

        $r3 = r0.<perfetto.protos.TraceConfig$DataSource: perfetto.protos.DataSourceConfig config>;

        if $r3 == null goto label1;

        $r22 = (java.util.Collection) r1;

        $r21 = r0.<perfetto.protos.TraceConfig$DataSource: perfetto.protos.DataSourceConfig config>;

        $r23 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("config=", $r21);

        interfaceinvoke $r22.<java.util.Collection: boolean add(java.lang.Object)>($r23);

     label1:
        $r4 = r0.<perfetto.protos.TraceConfig$DataSource: java.util.List producer_name_filter>;

        $r5 = (java.util.Collection) $r4;

        $z0 = interfaceinvoke $r5.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        if $z5 == 0 goto label4;

        $r18 = (java.util.Collection) r1;

        $r17 = r0.<perfetto.protos.TraceConfig$DataSource: java.util.List producer_name_filter>;

        $r19 = staticinvoke <com.squareup.wire.internal.Internal: java.lang.String sanitize(java.util.List)>($r17);

        $r20 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("producer_name_filter=", $r19);

        interfaceinvoke $r18.<java.util.Collection: boolean add(java.lang.Object)>($r20);

     label4:
        $r6 = r0.<perfetto.protos.TraceConfig$DataSource: java.util.List producer_name_regex_filter>;

        $r7 = (java.util.Collection) $r6;

        $z1 = interfaceinvoke $r7.<java.util.Collection: boolean isEmpty()>();

        if $z1 != 0 goto label5;

        $z6 = 1;

        goto label6;

     label5:
        $z6 = 0;

     label6:
        if $z6 == 0 goto label7;

        $r14 = (java.util.Collection) r1;

        $r13 = r0.<perfetto.protos.TraceConfig$DataSource: java.util.List producer_name_regex_filter>;

        $r15 = staticinvoke <com.squareup.wire.internal.Internal: java.lang.String sanitize(java.util.List)>($r13);

        $r16 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("producer_name_regex_filter=", $r15);

        interfaceinvoke $r14.<java.util.Collection: boolean add(java.lang.Object)>($r16);

     label7:
        $r11 = (java.lang.Iterable) r1;

        $r10 = (java.lang.CharSequence) ", ";

        $r9 = (java.lang.CharSequence) "DataSource{";

        $r8 = (java.lang.CharSequence) "}";

        $r12 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r11, $r10, $r9, $r8, 0, null, null, 56, null);

        return $r12;
    }

    public final perfetto.protos.TraceConfig$DataSource copy(perfetto.protos.DataSourceConfig, java.util.List, java.util.List, okio.ByteString)
    {
        perfetto.protos.TraceConfig$DataSource r0, $r5;
        perfetto.protos.DataSourceConfig r1;
        java.util.List r2, r3;
        okio.ByteString r4;

        r0 := @this: perfetto.protos.TraceConfig$DataSource;

        r1 := @parameter0: perfetto.protos.DataSourceConfig;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: okio.ByteString;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "producer_name_filter");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "producer_name_regex_filter");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "unknownFields");

        $r5 = new perfetto.protos.TraceConfig$DataSource;

        specialinvoke $r5.<perfetto.protos.TraceConfig$DataSource: void <init>(perfetto.protos.DataSourceConfig,java.util.List,java.util.List,okio.ByteString)>(r1, r2, r3, r4);

        return $r5;
    }

    public static perfetto.protos.TraceConfig$DataSource copy$default(perfetto.protos.TraceConfig$DataSource, perfetto.protos.DataSourceConfig, java.util.List, java.util.List, okio.ByteString, int, java.lang.Object)
    {
        perfetto.protos.TraceConfig$DataSource r0, $r2;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Object r1;
        perfetto.protos.DataSourceConfig r3;
        java.util.List r4, r5;
        okio.ByteString r6;

        r0 := @parameter0: perfetto.protos.TraceConfig$DataSource;

        r3 := @parameter1: perfetto.protos.DataSourceConfig;

        r4 := @parameter2: java.util.List;

        r5 := @parameter3: java.util.List;

        r6 := @parameter4: okio.ByteString;

        i0 := @parameter5: int;

        r1 := @parameter6: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r3 = r0.<perfetto.protos.TraceConfig$DataSource: perfetto.protos.DataSourceConfig config>;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r4 = r0.<perfetto.protos.TraceConfig$DataSource: java.util.List producer_name_filter>;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        r5 = r0.<perfetto.protos.TraceConfig$DataSource: java.util.List producer_name_regex_filter>;

     label3:
        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        r6 = virtualinvoke r0.<perfetto.protos.TraceConfig$DataSource: okio.ByteString unknownFields()>();

     label4:
        $r2 = virtualinvoke r0.<perfetto.protos.TraceConfig$DataSource: perfetto.protos.TraceConfig$DataSource copy(perfetto.protos.DataSourceConfig,java.util.List,java.util.List,okio.ByteString)>(r3, r4, r5, r6);

        return $r2;
    }

    public void <init>()
    {
        perfetto.protos.TraceConfig$DataSource r0;

        r0 := @this: perfetto.protos.TraceConfig$DataSource;

        specialinvoke r0.<perfetto.protos.TraceConfig$DataSource: void <init>(perfetto.protos.DataSourceConfig,java.util.List,java.util.List,okio.ByteString,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, null, null, null, 15, null);

        return;
    }

    public volatile com.squareup.wire.Message$Builder newBuilder()
    {
        perfetto.protos.TraceConfig$DataSource r0;
        java.lang.Void $r1;
        com.squareup.wire.Message$Builder $r2;

        r0 := @this: perfetto.protos.TraceConfig$DataSource;

        $r1 = virtualinvoke r0.<perfetto.protos.TraceConfig$DataSource: java.lang.Void newBuilder()>();

        $r2 = (com.squareup.wire.Message$Builder) $r1;

        return $r2;
    }

    static void <clinit>()
    {
        com.squareup.wire.FieldEncoding r0;
        kotlin.reflect.KClass r1;
        com.squareup.wire.Syntax r2;
        perfetto.protos.TraceConfig$DataSource$Companion $r3;
        perfetto.protos.TraceConfig$DataSource$Companion$ADAPTER$1 $r4;
        com.squareup.wire.ProtoAdapter $r5;

        $r3 = new perfetto.protos.TraceConfig$DataSource$Companion;

        specialinvoke $r3.<perfetto.protos.TraceConfig$DataSource$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <perfetto.protos.TraceConfig$DataSource: perfetto.protos.TraceConfig$DataSource$Companion Companion> = $r3;

        r0 = <com.squareup.wire.FieldEncoding: com.squareup.wire.FieldEncoding LENGTH_DELIMITED>;

        r1 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Lperfetto/protos/TraceConfig$DataSource;");

        r2 = <com.squareup.wire.Syntax: com.squareup.wire.Syntax PROTO_2>;

        $r4 = new perfetto.protos.TraceConfig$DataSource$Companion$ADAPTER$1;

        specialinvoke $r4.<perfetto.protos.TraceConfig$DataSource$Companion$ADAPTER$1: void <init>(com.squareup.wire.FieldEncoding,kotlin.reflect.KClass,com.squareup.wire.Syntax)>(r0, r1, r2);

        $r5 = (com.squareup.wire.ProtoAdapter) $r4;

        <perfetto.protos.TraceConfig$DataSource: com.squareup.wire.ProtoAdapter ADAPTER> = $r5;

        return;
    }

perfetto.protos.TraceConfig$GuardrailOverrides$Companion$ADAPTER$1
    void <init>(com.squareup.wire.FieldEncoding, kotlin.reflect.KClass, com.squareup.wire.Syntax)
    {
        perfetto.protos.TraceConfig$GuardrailOverrides$Companion$ADAPTER$1 r0;
        com.squareup.wire.FieldEncoding $r1;
        kotlin.reflect.KClass $r2;
        com.squareup.wire.Syntax $r3;

        r0 := @this: perfetto.protos.TraceConfig$GuardrailOverrides$Companion$ADAPTER$1;

        $r1 := @parameter0: com.squareup.wire.FieldEncoding;

        $r2 := @parameter1: kotlin.reflect.KClass;

        $r3 := @parameter2: com.squareup.wire.Syntax;

        specialinvoke r0.<com.squareup.wire.ProtoAdapter: void <init>(com.squareup.wire.FieldEncoding,kotlin.reflect.KClass,java.lang.String,com.squareup.wire.Syntax,java.lang.Object)>($r1, $r2, "type.googleapis.com/perfetto.protos.TraceConfig.GuardrailOverrides", $r3, null);

        return;
    }

    public int encodedSize(perfetto.protos.TraceConfig$GuardrailOverrides)
    {
        perfetto.protos.TraceConfig$GuardrailOverrides$Companion$ADAPTER$1 r0;
        perfetto.protos.TraceConfig$GuardrailOverrides r1;
        okio.ByteString $r2;
        com.squareup.wire.ProtoAdapter $r3;
        java.lang.Long $r4;
        int $i0, i1, i2;

        r0 := @this: perfetto.protos.TraceConfig$GuardrailOverrides$Companion$ADAPTER$1;

        r1 := @parameter0: perfetto.protos.TraceConfig$GuardrailOverrides;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = virtualinvoke r1.<perfetto.protos.TraceConfig$GuardrailOverrides: okio.ByteString unknownFields()>();

        i1 = virtualinvoke $r2.<okio.ByteString: int size()>();

        $r3 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT64>;

        $r4 = virtualinvoke r1.<perfetto.protos.TraceConfig$GuardrailOverrides: java.lang.Long getMax_upload_per_day_bytes()>();

        $i0 = virtualinvoke $r3.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(1, $r4);

        i2 = i1 + $i0;

        return i2;
    }

    public void encode(com.squareup.wire.ProtoWriter, perfetto.protos.TraceConfig$GuardrailOverrides)
    {
        perfetto.protos.TraceConfig$GuardrailOverrides$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoWriter r1;
        perfetto.protos.TraceConfig$GuardrailOverrides r2;
        com.squareup.wire.ProtoAdapter $r3;
        java.lang.Long $r4;
        okio.ByteString $r5;

        r0 := @this: perfetto.protos.TraceConfig$GuardrailOverrides$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoWriter;

        r2 := @parameter1: perfetto.protos.TraceConfig$GuardrailOverrides;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "writer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "value");

        $r3 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT64>;

        $r4 = virtualinvoke r2.<perfetto.protos.TraceConfig$GuardrailOverrides: java.lang.Long getMax_upload_per_day_bytes()>();

        virtualinvoke $r3.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 1, $r4);

        $r5 = virtualinvoke r2.<perfetto.protos.TraceConfig$GuardrailOverrides: okio.ByteString unknownFields()>();

        virtualinvoke r1.<com.squareup.wire.ProtoWriter: void writeBytes(okio.ByteString)>($r5);

        return;
    }

    public perfetto.protos.TraceConfig$GuardrailOverrides decode(com.squareup.wire.ProtoReader)
    {
        perfetto.protos.TraceConfig$GuardrailOverrides$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoReader r1, r3;
        okio.ByteString r2;
        long l0;
        int i1, i2;
        com.squareup.wire.ProtoAdapter $r4;
        perfetto.protos.TraceConfig$GuardrailOverrides $r5;
        java.lang.Long $r6;
        java.lang.Object r7;

        r0 := @this: perfetto.protos.TraceConfig$GuardrailOverrides$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoReader;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "reader");

        r7 = null;

        r3 = r1;

        l0 = virtualinvoke r3.<com.squareup.wire.ProtoReader: long beginMessage()>();

     label1:
        i1 = virtualinvoke r3.<com.squareup.wire.ProtoReader: int nextTag()>();

        if i1 != -1 goto label2;

        goto label5;

     label2:
        i2 = i1;

        if i2 != 1 goto label3;

        $r4 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT64>;

        r7 = virtualinvoke $r4.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label4;

     label3:
        virtualinvoke r1.<com.squareup.wire.ProtoReader: void readUnknownField(int)>(i2);

     label4:
        goto label1;

     label5:
        r2 = virtualinvoke r3.<com.squareup.wire.ProtoReader: okio.ByteString endMessageAndGetUnknownFields(long)>(l0);

        $r5 = new perfetto.protos.TraceConfig$GuardrailOverrides;

        $r6 = (java.lang.Long) r7;

        specialinvoke $r5.<perfetto.protos.TraceConfig$GuardrailOverrides: void <init>(java.lang.Long,okio.ByteString)>($r6, r2);

        return $r5;
    }

    public perfetto.protos.TraceConfig$GuardrailOverrides redact(perfetto.protos.TraceConfig$GuardrailOverrides)
    {
        perfetto.protos.TraceConfig$GuardrailOverrides$Companion$ADAPTER$1 r0;
        perfetto.protos.TraceConfig$GuardrailOverrides r1, $r3;
        okio.ByteString $r2;

        r0 := @this: perfetto.protos.TraceConfig$GuardrailOverrides$Companion$ADAPTER$1;

        r1 := @parameter0: perfetto.protos.TraceConfig$GuardrailOverrides;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = <okio.ByteString: okio.ByteString EMPTY>;

        $r3 = staticinvoke <perfetto.protos.TraceConfig$GuardrailOverrides: perfetto.protos.TraceConfig$GuardrailOverrides copy$default(perfetto.protos.TraceConfig$GuardrailOverrides,java.lang.Long,okio.ByteString,int,java.lang.Object)>(r1, null, $r2, 1, null);

        return $r3;
    }

    public volatile int encodedSize(java.lang.Object)
    {
        perfetto.protos.TraceConfig$GuardrailOverrides$Companion$ADAPTER$1 r0;
        java.lang.Object r1;
        perfetto.protos.TraceConfig$GuardrailOverrides $r2;
        int $i0;

        r0 := @this: perfetto.protos.TraceConfig$GuardrailOverrides$Companion$ADAPTER$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (perfetto.protos.TraceConfig$GuardrailOverrides) r1;

        $i0 = virtualinvoke r0.<perfetto.protos.TraceConfig$GuardrailOverrides$Companion$ADAPTER$1: int encodedSize(perfetto.protos.TraceConfig$GuardrailOverrides)>($r2);

        return $i0;
    }

    public volatile void encode(com.squareup.wire.ProtoWriter, java.lang.Object)
    {
        perfetto.protos.TraceConfig$GuardrailOverrides$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoWriter r1;
        java.lang.Object r2;
        perfetto.protos.TraceConfig$GuardrailOverrides $r3;

        r0 := @this: perfetto.protos.TraceConfig$GuardrailOverrides$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoWriter;

        r2 := @parameter1: java.lang.Object;

        $r3 = (perfetto.protos.TraceConfig$GuardrailOverrides) r2;

        virtualinvoke r0.<perfetto.protos.TraceConfig$GuardrailOverrides$Companion$ADAPTER$1: void encode(com.squareup.wire.ProtoWriter,perfetto.protos.TraceConfig$GuardrailOverrides)>(r1, $r3);

        return;
    }

    public volatile java.lang.Object decode(com.squareup.wire.ProtoReader)
    {
        perfetto.protos.TraceConfig$GuardrailOverrides$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoReader r1;
        perfetto.protos.TraceConfig$GuardrailOverrides $r2;

        r0 := @this: perfetto.protos.TraceConfig$GuardrailOverrides$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoReader;

        $r2 = virtualinvoke r0.<perfetto.protos.TraceConfig$GuardrailOverrides$Companion$ADAPTER$1: perfetto.protos.TraceConfig$GuardrailOverrides decode(com.squareup.wire.ProtoReader)>(r1);

        return $r2;
    }

    public volatile java.lang.Object redact(java.lang.Object)
    {
        perfetto.protos.TraceConfig$GuardrailOverrides$Companion$ADAPTER$1 r0;
        java.lang.Object r1;
        perfetto.protos.TraceConfig$GuardrailOverrides $r2, $r3;

        r0 := @this: perfetto.protos.TraceConfig$GuardrailOverrides$Companion$ADAPTER$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (perfetto.protos.TraceConfig$GuardrailOverrides) r1;

        $r3 = virtualinvoke r0.<perfetto.protos.TraceConfig$GuardrailOverrides$Companion$ADAPTER$1: perfetto.protos.TraceConfig$GuardrailOverrides redact(perfetto.protos.TraceConfig$GuardrailOverrides)>($r2);

        return $r3;
    }

perfetto.protos.TraceConfig$GuardrailOverrides$Companion
    private void <init>()
    {
        perfetto.protos.TraceConfig$GuardrailOverrides$Companion r0;

        r0 := @this: perfetto.protos.TraceConfig$GuardrailOverrides$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.TraceConfig$GuardrailOverrides$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: perfetto.protos.TraceConfig$GuardrailOverrides$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<perfetto.protos.TraceConfig$GuardrailOverrides$Companion: void <init>()>();

        return;
    }

perfetto.protos.TraceConfig$GuardrailOverrides
<perfetto.protos.TraceConfig$GuardrailOverrides: perfetto.protos.TraceConfig$GuardrailOverrides$Companion Companion>
<perfetto.protos.TraceConfig$GuardrailOverrides: java.lang.Long max_upload_per_day_bytes>
<perfetto.protos.TraceConfig$GuardrailOverrides: com.squareup.wire.ProtoAdapter ADAPTER>
<perfetto.protos.TraceConfig$GuardrailOverrides: long serialVersionUID>
    public void <init>(java.lang.Long, okio.ByteString)
    {
        perfetto.protos.TraceConfig$GuardrailOverrides r0;
        java.lang.Long r1;
        okio.ByteString r2;
        com.squareup.wire.ProtoAdapter $r3;

        r0 := @this: perfetto.protos.TraceConfig$GuardrailOverrides;

        r1 := @parameter0: java.lang.Long;

        r2 := @parameter1: okio.ByteString;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "unknownFields");

        $r3 = <perfetto.protos.TraceConfig$GuardrailOverrides: com.squareup.wire.ProtoAdapter ADAPTER>;

        specialinvoke r0.<com.squareup.wire.Message: void <init>(com.squareup.wire.ProtoAdapter,okio.ByteString)>($r3, r2);

        r0.<perfetto.protos.TraceConfig$GuardrailOverrides: java.lang.Long max_upload_per_day_bytes> = r1;

        return;
    }

    public void <init>(java.lang.Long, okio.ByteString, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.TraceConfig$GuardrailOverrides r0;
        int i0, $i1, $i2;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        java.lang.Long r2;
        okio.ByteString r3;

        r0 := @this: perfetto.protos.TraceConfig$GuardrailOverrides;

        r2 := @parameter0: java.lang.Long;

        r3 := @parameter1: okio.ByteString;

        i0 := @parameter2: int;

        r1 := @parameter3: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r2 = null;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r3 = <okio.ByteString: okio.ByteString EMPTY>;

     label2:
        specialinvoke r0.<perfetto.protos.TraceConfig$GuardrailOverrides: void <init>(java.lang.Long,okio.ByteString)>(r2, r3);

        return;
    }

    public final java.lang.Long getMax_upload_per_day_bytes()
    {
        perfetto.protos.TraceConfig$GuardrailOverrides r0;
        java.lang.Long $r1;

        r0 := @this: perfetto.protos.TraceConfig$GuardrailOverrides;

        $r1 = r0.<perfetto.protos.TraceConfig$GuardrailOverrides: java.lang.Long max_upload_per_day_bytes>;

        return $r1;
    }

    public java.lang.Void newBuilder()
    {
        perfetto.protos.TraceConfig$GuardrailOverrides r0;
        java.lang.AssertionError $r1;

        r0 := @this: perfetto.protos.TraceConfig$GuardrailOverrides;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;
    }

    public boolean equals(java.lang.Object)
    {
        perfetto.protos.TraceConfig$GuardrailOverrides r0, $r3, $r5;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        okio.ByteString $r2, $r4;
        java.lang.Long $r6, $r7;

        r0 := @this: perfetto.protos.TraceConfig$GuardrailOverrides;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof perfetto.protos.TraceConfig$GuardrailOverrides;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<perfetto.protos.TraceConfig$GuardrailOverrides: okio.ByteString unknownFields()>();

        $r3 = (perfetto.protos.TraceConfig$GuardrailOverrides) r1;

        $r4 = virtualinvoke $r3.<perfetto.protos.TraceConfig$GuardrailOverrides: okio.ByteString unknownFields()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r4);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $r7 = r0.<perfetto.protos.TraceConfig$GuardrailOverrides: java.lang.Long max_upload_per_day_bytes>;

        $r5 = (perfetto.protos.TraceConfig$GuardrailOverrides) r1;

        $r6 = $r5.<perfetto.protos.TraceConfig$GuardrailOverrides: java.lang.Long max_upload_per_day_bytes>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, $r6);

        if $z2 != 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    public int hashCode()
    {
        perfetto.protos.TraceConfig$GuardrailOverrides r0;
        okio.ByteString $r1;
        java.lang.Long $r2;
        int $i0, i1, i2, $i3;

        r0 := @this: perfetto.protos.TraceConfig$GuardrailOverrides;

        i1 = r0.<perfetto.protos.TraceConfig$GuardrailOverrides: int hashCode>;

        if i1 != 0 goto label3;

        $r1 = virtualinvoke r0.<perfetto.protos.TraceConfig$GuardrailOverrides: okio.ByteString unknownFields()>();

        i2 = virtualinvoke $r1.<okio.ByteString: int hashCode()>();

        $i0 = i2 * 37;

        $r2 = r0.<perfetto.protos.TraceConfig$GuardrailOverrides: java.lang.Long max_upload_per_day_bytes>;

        if $r2 != null goto label1;

        $i3 = 0;

        goto label2;

     label1:
        $i3 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

     label2:
        i1 = $i0 + $i3;

        r0.<perfetto.protos.TraceConfig$GuardrailOverrides: int hashCode> = i1;

     label3:
        return i1;
    }

    public java.lang.String toString()
    {
        perfetto.protos.TraceConfig$GuardrailOverrides r0;
        java.util.List r1;
        java.util.ArrayList $r2;
        java.lang.Long $r3, $r9;
        java.lang.CharSequence $r4, $r5, $r6;
        java.lang.Iterable $r7;
        java.lang.String $r8, $r11;
        java.util.Collection $r10;

        r0 := @this: perfetto.protos.TraceConfig$GuardrailOverrides;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r1 = (java.util.List) $r2;

        $r3 = r0.<perfetto.protos.TraceConfig$GuardrailOverrides: java.lang.Long max_upload_per_day_bytes>;

        if $r3 == null goto label1;

        $r10 = (java.util.Collection) r1;

        $r9 = r0.<perfetto.protos.TraceConfig$GuardrailOverrides: java.lang.Long max_upload_per_day_bytes>;

        $r11 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("max_upload_per_day_bytes=", $r9);

        interfaceinvoke $r10.<java.util.Collection: boolean add(java.lang.Object)>($r11);

     label1:
        $r7 = (java.lang.Iterable) r1;

        $r6 = (java.lang.CharSequence) ", ";

        $r5 = (java.lang.CharSequence) "GuardrailOverrides{";

        $r4 = (java.lang.CharSequence) "}";

        $r8 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r7, $r6, $r5, $r4, 0, null, null, 56, null);

        return $r8;
    }

    public final perfetto.protos.TraceConfig$GuardrailOverrides copy(java.lang.Long, okio.ByteString)
    {
        perfetto.protos.TraceConfig$GuardrailOverrides r0, $r3;
        java.lang.Long r1;
        okio.ByteString r2;

        r0 := @this: perfetto.protos.TraceConfig$GuardrailOverrides;

        r1 := @parameter0: java.lang.Long;

        r2 := @parameter1: okio.ByteString;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "unknownFields");

        $r3 = new perfetto.protos.TraceConfig$GuardrailOverrides;

        specialinvoke $r3.<perfetto.protos.TraceConfig$GuardrailOverrides: void <init>(java.lang.Long,okio.ByteString)>(r1, r2);

        return $r3;
    }

    public static perfetto.protos.TraceConfig$GuardrailOverrides copy$default(perfetto.protos.TraceConfig$GuardrailOverrides, java.lang.Long, okio.ByteString, int, java.lang.Object)
    {
        perfetto.protos.TraceConfig$GuardrailOverrides r0, $r2;
        int i0, $i1, $i2;
        java.lang.Object r1;
        java.lang.Long r3;
        okio.ByteString r4;

        r0 := @parameter0: perfetto.protos.TraceConfig$GuardrailOverrides;

        r3 := @parameter1: java.lang.Long;

        r4 := @parameter2: okio.ByteString;

        i0 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r3 = r0.<perfetto.protos.TraceConfig$GuardrailOverrides: java.lang.Long max_upload_per_day_bytes>;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r4 = virtualinvoke r0.<perfetto.protos.TraceConfig$GuardrailOverrides: okio.ByteString unknownFields()>();

     label2:
        $r2 = virtualinvoke r0.<perfetto.protos.TraceConfig$GuardrailOverrides: perfetto.protos.TraceConfig$GuardrailOverrides copy(java.lang.Long,okio.ByteString)>(r3, r4);

        return $r2;
    }

    public void <init>()
    {
        perfetto.protos.TraceConfig$GuardrailOverrides r0;

        r0 := @this: perfetto.protos.TraceConfig$GuardrailOverrides;

        specialinvoke r0.<perfetto.protos.TraceConfig$GuardrailOverrides: void <init>(java.lang.Long,okio.ByteString,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, null, 3, null);

        return;
    }

    public volatile com.squareup.wire.Message$Builder newBuilder()
    {
        perfetto.protos.TraceConfig$GuardrailOverrides r0;
        java.lang.Void $r1;
        com.squareup.wire.Message$Builder $r2;

        r0 := @this: perfetto.protos.TraceConfig$GuardrailOverrides;

        $r1 = virtualinvoke r0.<perfetto.protos.TraceConfig$GuardrailOverrides: java.lang.Void newBuilder()>();

        $r2 = (com.squareup.wire.Message$Builder) $r1;

        return $r2;
    }

    static void <clinit>()
    {
        com.squareup.wire.FieldEncoding r0;
        kotlin.reflect.KClass r1;
        com.squareup.wire.Syntax r2;
        perfetto.protos.TraceConfig$GuardrailOverrides$Companion $r3;
        perfetto.protos.TraceConfig$GuardrailOverrides$Companion$ADAPTER$1 $r4;
        com.squareup.wire.ProtoAdapter $r5;

        $r3 = new perfetto.protos.TraceConfig$GuardrailOverrides$Companion;

        specialinvoke $r3.<perfetto.protos.TraceConfig$GuardrailOverrides$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <perfetto.protos.TraceConfig$GuardrailOverrides: perfetto.protos.TraceConfig$GuardrailOverrides$Companion Companion> = $r3;

        r0 = <com.squareup.wire.FieldEncoding: com.squareup.wire.FieldEncoding LENGTH_DELIMITED>;

        r1 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Lperfetto/protos/TraceConfig$GuardrailOverrides;");

        r2 = <com.squareup.wire.Syntax: com.squareup.wire.Syntax PROTO_2>;

        $r4 = new perfetto.protos.TraceConfig$GuardrailOverrides$Companion$ADAPTER$1;

        specialinvoke $r4.<perfetto.protos.TraceConfig$GuardrailOverrides$Companion$ADAPTER$1: void <init>(com.squareup.wire.FieldEncoding,kotlin.reflect.KClass,com.squareup.wire.Syntax)>(r0, r1, r2);

        $r5 = (com.squareup.wire.ProtoAdapter) $r4;

        <perfetto.protos.TraceConfig$GuardrailOverrides: com.squareup.wire.ProtoAdapter ADAPTER> = $r5;

        return;
    }

perfetto.protos.TraceConfig$IncrementalStateConfig$Companion$ADAPTER$1
    void <init>(com.squareup.wire.FieldEncoding, kotlin.reflect.KClass, com.squareup.wire.Syntax)
    {
        perfetto.protos.TraceConfig$IncrementalStateConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.FieldEncoding $r1;
        kotlin.reflect.KClass $r2;
        com.squareup.wire.Syntax $r3;

        r0 := @this: perfetto.protos.TraceConfig$IncrementalStateConfig$Companion$ADAPTER$1;

        $r1 := @parameter0: com.squareup.wire.FieldEncoding;

        $r2 := @parameter1: kotlin.reflect.KClass;

        $r3 := @parameter2: com.squareup.wire.Syntax;

        specialinvoke r0.<com.squareup.wire.ProtoAdapter: void <init>(com.squareup.wire.FieldEncoding,kotlin.reflect.KClass,java.lang.String,com.squareup.wire.Syntax,java.lang.Object)>($r1, $r2, "type.googleapis.com/perfetto.protos.TraceConfig.IncrementalStateConfig", $r3, null);

        return;
    }

    public int encodedSize(perfetto.protos.TraceConfig$IncrementalStateConfig)
    {
        perfetto.protos.TraceConfig$IncrementalStateConfig$Companion$ADAPTER$1 r0;
        perfetto.protos.TraceConfig$IncrementalStateConfig r1;
        okio.ByteString $r2;
        com.squareup.wire.ProtoAdapter $r3;
        java.lang.Integer $r4;
        int $i0, i1, i2;

        r0 := @this: perfetto.protos.TraceConfig$IncrementalStateConfig$Companion$ADAPTER$1;

        r1 := @parameter0: perfetto.protos.TraceConfig$IncrementalStateConfig;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = virtualinvoke r1.<perfetto.protos.TraceConfig$IncrementalStateConfig: okio.ByteString unknownFields()>();

        i1 = virtualinvoke $r2.<okio.ByteString: int size()>();

        $r3 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r4 = virtualinvoke r1.<perfetto.protos.TraceConfig$IncrementalStateConfig: java.lang.Integer getClear_period_ms()>();

        $i0 = virtualinvoke $r3.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(1, $r4);

        i2 = i1 + $i0;

        return i2;
    }

    public void encode(com.squareup.wire.ProtoWriter, perfetto.protos.TraceConfig$IncrementalStateConfig)
    {
        perfetto.protos.TraceConfig$IncrementalStateConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoWriter r1;
        perfetto.protos.TraceConfig$IncrementalStateConfig r2;
        com.squareup.wire.ProtoAdapter $r3;
        java.lang.Integer $r4;
        okio.ByteString $r5;

        r0 := @this: perfetto.protos.TraceConfig$IncrementalStateConfig$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoWriter;

        r2 := @parameter1: perfetto.protos.TraceConfig$IncrementalStateConfig;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "writer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "value");

        $r3 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r4 = virtualinvoke r2.<perfetto.protos.TraceConfig$IncrementalStateConfig: java.lang.Integer getClear_period_ms()>();

        virtualinvoke $r3.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 1, $r4);

        $r5 = virtualinvoke r2.<perfetto.protos.TraceConfig$IncrementalStateConfig: okio.ByteString unknownFields()>();

        virtualinvoke r1.<com.squareup.wire.ProtoWriter: void writeBytes(okio.ByteString)>($r5);

        return;
    }

    public perfetto.protos.TraceConfig$IncrementalStateConfig decode(com.squareup.wire.ProtoReader)
    {
        perfetto.protos.TraceConfig$IncrementalStateConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoReader r1, r3;
        okio.ByteString r2;
        long l0;
        int i1, i2;
        com.squareup.wire.ProtoAdapter $r4;
        perfetto.protos.TraceConfig$IncrementalStateConfig $r5;
        java.lang.Integer $r6;
        java.lang.Object r7;

        r0 := @this: perfetto.protos.TraceConfig$IncrementalStateConfig$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoReader;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "reader");

        r7 = null;

        r3 = r1;

        l0 = virtualinvoke r3.<com.squareup.wire.ProtoReader: long beginMessage()>();

     label1:
        i1 = virtualinvoke r3.<com.squareup.wire.ProtoReader: int nextTag()>();

        if i1 != -1 goto label2;

        goto label5;

     label2:
        i2 = i1;

        if i2 != 1 goto label3;

        $r4 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        r7 = virtualinvoke $r4.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label4;

     label3:
        virtualinvoke r1.<com.squareup.wire.ProtoReader: void readUnknownField(int)>(i2);

     label4:
        goto label1;

     label5:
        r2 = virtualinvoke r3.<com.squareup.wire.ProtoReader: okio.ByteString endMessageAndGetUnknownFields(long)>(l0);

        $r5 = new perfetto.protos.TraceConfig$IncrementalStateConfig;

        $r6 = (java.lang.Integer) r7;

        specialinvoke $r5.<perfetto.protos.TraceConfig$IncrementalStateConfig: void <init>(java.lang.Integer,okio.ByteString)>($r6, r2);

        return $r5;
    }

    public perfetto.protos.TraceConfig$IncrementalStateConfig redact(perfetto.protos.TraceConfig$IncrementalStateConfig)
    {
        perfetto.protos.TraceConfig$IncrementalStateConfig$Companion$ADAPTER$1 r0;
        perfetto.protos.TraceConfig$IncrementalStateConfig r1, $r3;
        okio.ByteString $r2;

        r0 := @this: perfetto.protos.TraceConfig$IncrementalStateConfig$Companion$ADAPTER$1;

        r1 := @parameter0: perfetto.protos.TraceConfig$IncrementalStateConfig;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = <okio.ByteString: okio.ByteString EMPTY>;

        $r3 = staticinvoke <perfetto.protos.TraceConfig$IncrementalStateConfig: perfetto.protos.TraceConfig$IncrementalStateConfig copy$default(perfetto.protos.TraceConfig$IncrementalStateConfig,java.lang.Integer,okio.ByteString,int,java.lang.Object)>(r1, null, $r2, 1, null);

        return $r3;
    }

    public volatile int encodedSize(java.lang.Object)
    {
        perfetto.protos.TraceConfig$IncrementalStateConfig$Companion$ADAPTER$1 r0;
        java.lang.Object r1;
        perfetto.protos.TraceConfig$IncrementalStateConfig $r2;
        int $i0;

        r0 := @this: perfetto.protos.TraceConfig$IncrementalStateConfig$Companion$ADAPTER$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (perfetto.protos.TraceConfig$IncrementalStateConfig) r1;

        $i0 = virtualinvoke r0.<perfetto.protos.TraceConfig$IncrementalStateConfig$Companion$ADAPTER$1: int encodedSize(perfetto.protos.TraceConfig$IncrementalStateConfig)>($r2);

        return $i0;
    }

    public volatile void encode(com.squareup.wire.ProtoWriter, java.lang.Object)
    {
        perfetto.protos.TraceConfig$IncrementalStateConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoWriter r1;
        java.lang.Object r2;
        perfetto.protos.TraceConfig$IncrementalStateConfig $r3;

        r0 := @this: perfetto.protos.TraceConfig$IncrementalStateConfig$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoWriter;

        r2 := @parameter1: java.lang.Object;

        $r3 = (perfetto.protos.TraceConfig$IncrementalStateConfig) r2;

        virtualinvoke r0.<perfetto.protos.TraceConfig$IncrementalStateConfig$Companion$ADAPTER$1: void encode(com.squareup.wire.ProtoWriter,perfetto.protos.TraceConfig$IncrementalStateConfig)>(r1, $r3);

        return;
    }

    public volatile java.lang.Object decode(com.squareup.wire.ProtoReader)
    {
        perfetto.protos.TraceConfig$IncrementalStateConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoReader r1;
        perfetto.protos.TraceConfig$IncrementalStateConfig $r2;

        r0 := @this: perfetto.protos.TraceConfig$IncrementalStateConfig$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoReader;

        $r2 = virtualinvoke r0.<perfetto.protos.TraceConfig$IncrementalStateConfig$Companion$ADAPTER$1: perfetto.protos.TraceConfig$IncrementalStateConfig decode(com.squareup.wire.ProtoReader)>(r1);

        return $r2;
    }

    public volatile java.lang.Object redact(java.lang.Object)
    {
        perfetto.protos.TraceConfig$IncrementalStateConfig$Companion$ADAPTER$1 r0;
        java.lang.Object r1;
        perfetto.protos.TraceConfig$IncrementalStateConfig $r2, $r3;

        r0 := @this: perfetto.protos.TraceConfig$IncrementalStateConfig$Companion$ADAPTER$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (perfetto.protos.TraceConfig$IncrementalStateConfig) r1;

        $r3 = virtualinvoke r0.<perfetto.protos.TraceConfig$IncrementalStateConfig$Companion$ADAPTER$1: perfetto.protos.TraceConfig$IncrementalStateConfig redact(perfetto.protos.TraceConfig$IncrementalStateConfig)>($r2);

        return $r3;
    }

perfetto.protos.TraceConfig$IncrementalStateConfig$Companion
    private void <init>()
    {
        perfetto.protos.TraceConfig$IncrementalStateConfig$Companion r0;

        r0 := @this: perfetto.protos.TraceConfig$IncrementalStateConfig$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.TraceConfig$IncrementalStateConfig$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: perfetto.protos.TraceConfig$IncrementalStateConfig$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<perfetto.protos.TraceConfig$IncrementalStateConfig$Companion: void <init>()>();

        return;
    }

perfetto.protos.TraceConfig$IncrementalStateConfig
<perfetto.protos.TraceConfig$IncrementalStateConfig: perfetto.protos.TraceConfig$IncrementalStateConfig$Companion Companion>
<perfetto.protos.TraceConfig$IncrementalStateConfig: java.lang.Integer clear_period_ms>
<perfetto.protos.TraceConfig$IncrementalStateConfig: com.squareup.wire.ProtoAdapter ADAPTER>
<perfetto.protos.TraceConfig$IncrementalStateConfig: long serialVersionUID>
    public void <init>(java.lang.Integer, okio.ByteString)
    {
        perfetto.protos.TraceConfig$IncrementalStateConfig r0;
        java.lang.Integer r1;
        okio.ByteString r2;
        com.squareup.wire.ProtoAdapter $r3;

        r0 := @this: perfetto.protos.TraceConfig$IncrementalStateConfig;

        r1 := @parameter0: java.lang.Integer;

        r2 := @parameter1: okio.ByteString;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "unknownFields");

        $r3 = <perfetto.protos.TraceConfig$IncrementalStateConfig: com.squareup.wire.ProtoAdapter ADAPTER>;

        specialinvoke r0.<com.squareup.wire.Message: void <init>(com.squareup.wire.ProtoAdapter,okio.ByteString)>($r3, r2);

        r0.<perfetto.protos.TraceConfig$IncrementalStateConfig: java.lang.Integer clear_period_ms> = r1;

        return;
    }

    public void <init>(java.lang.Integer, okio.ByteString, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.TraceConfig$IncrementalStateConfig r0;
        int i0, $i1, $i2;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        java.lang.Integer r2;
        okio.ByteString r3;

        r0 := @this: perfetto.protos.TraceConfig$IncrementalStateConfig;

        r2 := @parameter0: java.lang.Integer;

        r3 := @parameter1: okio.ByteString;

        i0 := @parameter2: int;

        r1 := @parameter3: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r2 = null;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r3 = <okio.ByteString: okio.ByteString EMPTY>;

     label2:
        specialinvoke r0.<perfetto.protos.TraceConfig$IncrementalStateConfig: void <init>(java.lang.Integer,okio.ByteString)>(r2, r3);

        return;
    }

    public final java.lang.Integer getClear_period_ms()
    {
        perfetto.protos.TraceConfig$IncrementalStateConfig r0;
        java.lang.Integer $r1;

        r0 := @this: perfetto.protos.TraceConfig$IncrementalStateConfig;

        $r1 = r0.<perfetto.protos.TraceConfig$IncrementalStateConfig: java.lang.Integer clear_period_ms>;

        return $r1;
    }

    public java.lang.Void newBuilder()
    {
        perfetto.protos.TraceConfig$IncrementalStateConfig r0;
        java.lang.AssertionError $r1;

        r0 := @this: perfetto.protos.TraceConfig$IncrementalStateConfig;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;
    }

    public boolean equals(java.lang.Object)
    {
        perfetto.protos.TraceConfig$IncrementalStateConfig r0, $r3, $r5;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        okio.ByteString $r2, $r4;
        java.lang.Integer $r6, $r7;

        r0 := @this: perfetto.protos.TraceConfig$IncrementalStateConfig;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof perfetto.protos.TraceConfig$IncrementalStateConfig;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<perfetto.protos.TraceConfig$IncrementalStateConfig: okio.ByteString unknownFields()>();

        $r3 = (perfetto.protos.TraceConfig$IncrementalStateConfig) r1;

        $r4 = virtualinvoke $r3.<perfetto.protos.TraceConfig$IncrementalStateConfig: okio.ByteString unknownFields()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r4);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $r7 = r0.<perfetto.protos.TraceConfig$IncrementalStateConfig: java.lang.Integer clear_period_ms>;

        $r5 = (perfetto.protos.TraceConfig$IncrementalStateConfig) r1;

        $r6 = $r5.<perfetto.protos.TraceConfig$IncrementalStateConfig: java.lang.Integer clear_period_ms>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, $r6);

        if $z2 != 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    public int hashCode()
    {
        perfetto.protos.TraceConfig$IncrementalStateConfig r0;
        okio.ByteString $r1;
        java.lang.Integer $r2;
        int $i0, i1, i2, $i3;

        r0 := @this: perfetto.protos.TraceConfig$IncrementalStateConfig;

        i1 = r0.<perfetto.protos.TraceConfig$IncrementalStateConfig: int hashCode>;

        if i1 != 0 goto label3;

        $r1 = virtualinvoke r0.<perfetto.protos.TraceConfig$IncrementalStateConfig: okio.ByteString unknownFields()>();

        i2 = virtualinvoke $r1.<okio.ByteString: int hashCode()>();

        $i0 = i2 * 37;

        $r2 = r0.<perfetto.protos.TraceConfig$IncrementalStateConfig: java.lang.Integer clear_period_ms>;

        if $r2 != null goto label1;

        $i3 = 0;

        goto label2;

     label1:
        $i3 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

     label2:
        i1 = $i0 + $i3;

        r0.<perfetto.protos.TraceConfig$IncrementalStateConfig: int hashCode> = i1;

     label3:
        return i1;
    }

    public java.lang.String toString()
    {
        perfetto.protos.TraceConfig$IncrementalStateConfig r0;
        java.util.List r1;
        java.util.ArrayList $r2;
        java.lang.Integer $r3, $r9;
        java.lang.CharSequence $r4, $r5, $r6;
        java.lang.Iterable $r7;
        java.lang.String $r8, $r11;
        java.util.Collection $r10;

        r0 := @this: perfetto.protos.TraceConfig$IncrementalStateConfig;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r1 = (java.util.List) $r2;

        $r3 = r0.<perfetto.protos.TraceConfig$IncrementalStateConfig: java.lang.Integer clear_period_ms>;

        if $r3 == null goto label1;

        $r10 = (java.util.Collection) r1;

        $r9 = r0.<perfetto.protos.TraceConfig$IncrementalStateConfig: java.lang.Integer clear_period_ms>;

        $r11 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("clear_period_ms=", $r9);

        interfaceinvoke $r10.<java.util.Collection: boolean add(java.lang.Object)>($r11);

     label1:
        $r7 = (java.lang.Iterable) r1;

        $r6 = (java.lang.CharSequence) ", ";

        $r5 = (java.lang.CharSequence) "IncrementalStateConfig{";

        $r4 = (java.lang.CharSequence) "}";

        $r8 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r7, $r6, $r5, $r4, 0, null, null, 56, null);

        return $r8;
    }

    public final perfetto.protos.TraceConfig$IncrementalStateConfig copy(java.lang.Integer, okio.ByteString)
    {
        perfetto.protos.TraceConfig$IncrementalStateConfig r0, $r3;
        java.lang.Integer r1;
        okio.ByteString r2;

        r0 := @this: perfetto.protos.TraceConfig$IncrementalStateConfig;

        r1 := @parameter0: java.lang.Integer;

        r2 := @parameter1: okio.ByteString;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "unknownFields");

        $r3 = new perfetto.protos.TraceConfig$IncrementalStateConfig;

        specialinvoke $r3.<perfetto.protos.TraceConfig$IncrementalStateConfig: void <init>(java.lang.Integer,okio.ByteString)>(r1, r2);

        return $r3;
    }

    public static perfetto.protos.TraceConfig$IncrementalStateConfig copy$default(perfetto.protos.TraceConfig$IncrementalStateConfig, java.lang.Integer, okio.ByteString, int, java.lang.Object)
    {
        perfetto.protos.TraceConfig$IncrementalStateConfig r0, $r2;
        int i0, $i1, $i2;
        java.lang.Object r1;
        java.lang.Integer r3;
        okio.ByteString r4;

        r0 := @parameter0: perfetto.protos.TraceConfig$IncrementalStateConfig;

        r3 := @parameter1: java.lang.Integer;

        r4 := @parameter2: okio.ByteString;

        i0 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r3 = r0.<perfetto.protos.TraceConfig$IncrementalStateConfig: java.lang.Integer clear_period_ms>;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r4 = virtualinvoke r0.<perfetto.protos.TraceConfig$IncrementalStateConfig: okio.ByteString unknownFields()>();

     label2:
        $r2 = virtualinvoke r0.<perfetto.protos.TraceConfig$IncrementalStateConfig: perfetto.protos.TraceConfig$IncrementalStateConfig copy(java.lang.Integer,okio.ByteString)>(r3, r4);

        return $r2;
    }

    public void <init>()
    {
        perfetto.protos.TraceConfig$IncrementalStateConfig r0;

        r0 := @this: perfetto.protos.TraceConfig$IncrementalStateConfig;

        specialinvoke r0.<perfetto.protos.TraceConfig$IncrementalStateConfig: void <init>(java.lang.Integer,okio.ByteString,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, null, 3, null);

        return;
    }

    public volatile com.squareup.wire.Message$Builder newBuilder()
    {
        perfetto.protos.TraceConfig$IncrementalStateConfig r0;
        java.lang.Void $r1;
        com.squareup.wire.Message$Builder $r2;

        r0 := @this: perfetto.protos.TraceConfig$IncrementalStateConfig;

        $r1 = virtualinvoke r0.<perfetto.protos.TraceConfig$IncrementalStateConfig: java.lang.Void newBuilder()>();

        $r2 = (com.squareup.wire.Message$Builder) $r1;

        return $r2;
    }

    static void <clinit>()
    {
        com.squareup.wire.FieldEncoding r0;
        kotlin.reflect.KClass r1;
        com.squareup.wire.Syntax r2;
        perfetto.protos.TraceConfig$IncrementalStateConfig$Companion $r3;
        perfetto.protos.TraceConfig$IncrementalStateConfig$Companion$ADAPTER$1 $r4;
        com.squareup.wire.ProtoAdapter $r5;

        $r3 = new perfetto.protos.TraceConfig$IncrementalStateConfig$Companion;

        specialinvoke $r3.<perfetto.protos.TraceConfig$IncrementalStateConfig$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <perfetto.protos.TraceConfig$IncrementalStateConfig: perfetto.protos.TraceConfig$IncrementalStateConfig$Companion Companion> = $r3;

        r0 = <com.squareup.wire.FieldEncoding: com.squareup.wire.FieldEncoding LENGTH_DELIMITED>;

        r1 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Lperfetto/protos/TraceConfig$IncrementalStateConfig;");

        r2 = <com.squareup.wire.Syntax: com.squareup.wire.Syntax PROTO_2>;

        $r4 = new perfetto.protos.TraceConfig$IncrementalStateConfig$Companion$ADAPTER$1;

        specialinvoke $r4.<perfetto.protos.TraceConfig$IncrementalStateConfig$Companion$ADAPTER$1: void <init>(com.squareup.wire.FieldEncoding,kotlin.reflect.KClass,com.squareup.wire.Syntax)>(r0, r1, r2);

        $r5 = (com.squareup.wire.ProtoAdapter) $r4;

        <perfetto.protos.TraceConfig$IncrementalStateConfig: com.squareup.wire.ProtoAdapter ADAPTER> = $r5;

        return;
    }

perfetto.protos.TraceConfig$LockdownModeOperation$Companion$ADAPTER$1
    void <init>(kotlin.reflect.KClass, com.squareup.wire.Syntax, perfetto.protos.TraceConfig$LockdownModeOperation)
    {
        perfetto.protos.TraceConfig$LockdownModeOperation$Companion$ADAPTER$1 r0;
        kotlin.reflect.KClass $r1;
        com.squareup.wire.Syntax $r2;
        perfetto.protos.TraceConfig$LockdownModeOperation $r3;
        com.squareup.wire.WireEnum $r4;

        r0 := @this: perfetto.protos.TraceConfig$LockdownModeOperation$Companion$ADAPTER$1;

        $r1 := @parameter0: kotlin.reflect.KClass;

        $r2 := @parameter1: com.squareup.wire.Syntax;

        $r3 := @parameter2: perfetto.protos.TraceConfig$LockdownModeOperation;

        $r4 = (com.squareup.wire.WireEnum) $r3;

        specialinvoke r0.<com.squareup.wire.EnumAdapter: void <init>(kotlin.reflect.KClass,com.squareup.wire.Syntax,com.squareup.wire.WireEnum)>($r1, $r2, $r4);

        return;
    }

    public perfetto.protos.TraceConfig$LockdownModeOperation fromValue(int)
    {
        perfetto.protos.TraceConfig$LockdownModeOperation$Companion$ADAPTER$1 r0;
        int i0;
        perfetto.protos.TraceConfig$LockdownModeOperation$Companion $r1;
        perfetto.protos.TraceConfig$LockdownModeOperation $r2;

        r0 := @this: perfetto.protos.TraceConfig$LockdownModeOperation$Companion$ADAPTER$1;

        i0 := @parameter0: int;

        $r1 = <perfetto.protos.TraceConfig$LockdownModeOperation: perfetto.protos.TraceConfig$LockdownModeOperation$Companion Companion>;

        $r2 = virtualinvoke $r1.<perfetto.protos.TraceConfig$LockdownModeOperation$Companion: perfetto.protos.TraceConfig$LockdownModeOperation fromValue(int)>(i0);

        return $r2;
    }

    public volatile com.squareup.wire.WireEnum fromValue(int)
    {
        perfetto.protos.TraceConfig$LockdownModeOperation$Companion$ADAPTER$1 r0;
        int i0;
        perfetto.protos.TraceConfig$LockdownModeOperation $r1;
        com.squareup.wire.WireEnum $r2;

        r0 := @this: perfetto.protos.TraceConfig$LockdownModeOperation$Companion$ADAPTER$1;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<perfetto.protos.TraceConfig$LockdownModeOperation$Companion$ADAPTER$1: perfetto.protos.TraceConfig$LockdownModeOperation fromValue(int)>(i0);

        $r2 = (com.squareup.wire.WireEnum) $r1;

        return $r2;
    }

perfetto.protos.TraceConfig$LockdownModeOperation$Companion
    private void <init>()
    {
        perfetto.protos.TraceConfig$LockdownModeOperation$Companion r0;

        r0 := @this: perfetto.protos.TraceConfig$LockdownModeOperation$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final perfetto.protos.TraceConfig$LockdownModeOperation fromValue(int)
    {
        perfetto.protos.TraceConfig$LockdownModeOperation$Companion r0;
        int i0;
        perfetto.protos.TraceConfig$LockdownModeOperation $r1;

        r0 := @this: perfetto.protos.TraceConfig$LockdownModeOperation$Companion;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        $r1 = <perfetto.protos.TraceConfig$LockdownModeOperation: perfetto.protos.TraceConfig$LockdownModeOperation LOCKDOWN_UNCHANGED>;

        goto label5;

     label2:
        $r1 = <perfetto.protos.TraceConfig$LockdownModeOperation: perfetto.protos.TraceConfig$LockdownModeOperation LOCKDOWN_CLEAR>;

        goto label5;

     label3:
        $r1 = <perfetto.protos.TraceConfig$LockdownModeOperation: perfetto.protos.TraceConfig$LockdownModeOperation LOCKDOWN_SET>;

        goto label5;

     label4:
        $r1 = null;

     label5:
        return $r1;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.TraceConfig$LockdownModeOperation$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: perfetto.protos.TraceConfig$LockdownModeOperation$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<perfetto.protos.TraceConfig$LockdownModeOperation$Companion: void <init>()>();

        return;
    }

perfetto.protos.TraceConfig$LockdownModeOperation
<perfetto.protos.TraceConfig$LockdownModeOperation: perfetto.protos.TraceConfig$LockdownModeOperation$Companion Companion>
<perfetto.protos.TraceConfig$LockdownModeOperation: int value>
<perfetto.protos.TraceConfig$LockdownModeOperation: com.squareup.wire.ProtoAdapter ADAPTER>
<perfetto.protos.TraceConfig$LockdownModeOperation: perfetto.protos.TraceConfig$LockdownModeOperation LOCKDOWN_UNCHANGED>
<perfetto.protos.TraceConfig$LockdownModeOperation: perfetto.protos.TraceConfig$LockdownModeOperation LOCKDOWN_CLEAR>
<perfetto.protos.TraceConfig$LockdownModeOperation: perfetto.protos.TraceConfig$LockdownModeOperation LOCKDOWN_SET>
<perfetto.protos.TraceConfig$LockdownModeOperation: perfetto.protos.TraceConfig$LockdownModeOperation[] $VALUES>
    private void <init>(java.lang.String, int, int)
    {
        perfetto.protos.TraceConfig$LockdownModeOperation r0;
        java.lang.String $r1;
        int $i0, i1;

        r0 := @this: perfetto.protos.TraceConfig$LockdownModeOperation;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        r0.<perfetto.protos.TraceConfig$LockdownModeOperation: int value> = i1;

        return;
    }

    public int getValue()
    {
        perfetto.protos.TraceConfig$LockdownModeOperation r0;
        int $i0;

        r0 := @this: perfetto.protos.TraceConfig$LockdownModeOperation;

        $i0 = r0.<perfetto.protos.TraceConfig$LockdownModeOperation: int value>;

        return $i0;
    }

    public static perfetto.protos.TraceConfig$LockdownModeOperation[] values()
    {
        perfetto.protos.TraceConfig$LockdownModeOperation[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <perfetto.protos.TraceConfig$LockdownModeOperation: perfetto.protos.TraceConfig$LockdownModeOperation[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (perfetto.protos.TraceConfig$LockdownModeOperation[]) $r1;

        return $r2;
    }

    public static perfetto.protos.TraceConfig$LockdownModeOperation valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        perfetto.protos.TraceConfig$LockdownModeOperation $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lperfetto/protos/TraceConfig$LockdownModeOperation;", r0);

        $r2 = (perfetto.protos.TraceConfig$LockdownModeOperation) $r1;

        return $r2;
    }

    private static final perfetto.protos.TraceConfig$LockdownModeOperation[] $values()
    {
        perfetto.protos.TraceConfig$LockdownModeOperation[] r0;
        perfetto.protos.TraceConfig$LockdownModeOperation $r1, $r2, $r3;

        r0 = newarray (perfetto.protos.TraceConfig$LockdownModeOperation)[3];

        $r1 = <perfetto.protos.TraceConfig$LockdownModeOperation: perfetto.protos.TraceConfig$LockdownModeOperation LOCKDOWN_UNCHANGED>;

        r0[0] = $r1;

        $r2 = <perfetto.protos.TraceConfig$LockdownModeOperation: perfetto.protos.TraceConfig$LockdownModeOperation LOCKDOWN_CLEAR>;

        r0[1] = $r2;

        $r3 = <perfetto.protos.TraceConfig$LockdownModeOperation: perfetto.protos.TraceConfig$LockdownModeOperation LOCKDOWN_SET>;

        r0[2] = $r3;

        return r0;
    }

    public static final perfetto.protos.TraceConfig$LockdownModeOperation fromValue(int)
    {
        int i0;
        perfetto.protos.TraceConfig$LockdownModeOperation$Companion $r0;
        perfetto.protos.TraceConfig$LockdownModeOperation $r1;

        i0 := @parameter0: int;

        $r0 = <perfetto.protos.TraceConfig$LockdownModeOperation: perfetto.protos.TraceConfig$LockdownModeOperation$Companion Companion>;

        $r1 = virtualinvoke $r0.<perfetto.protos.TraceConfig$LockdownModeOperation$Companion: perfetto.protos.TraceConfig$LockdownModeOperation fromValue(int)>(i0);

        return $r1;
    }

    static void <clinit>()
    {
        kotlin.reflect.KClass r0;
        com.squareup.wire.Syntax r1;
        perfetto.protos.TraceConfig$LockdownModeOperation r2, $r3, $r4, $r5;
        perfetto.protos.TraceConfig$LockdownModeOperation[] $r6;
        perfetto.protos.TraceConfig$LockdownModeOperation$Companion $r7;
        perfetto.protos.TraceConfig$LockdownModeOperation$Companion$ADAPTER$1 $r8;
        com.squareup.wire.ProtoAdapter $r9;

        $r3 = new perfetto.protos.TraceConfig$LockdownModeOperation;

        specialinvoke $r3.<perfetto.protos.TraceConfig$LockdownModeOperation: void <init>(java.lang.String,int,int)>("LOCKDOWN_UNCHANGED", 0, 0);

        <perfetto.protos.TraceConfig$LockdownModeOperation: perfetto.protos.TraceConfig$LockdownModeOperation LOCKDOWN_UNCHANGED> = $r3;

        $r4 = new perfetto.protos.TraceConfig$LockdownModeOperation;

        specialinvoke $r4.<perfetto.protos.TraceConfig$LockdownModeOperation: void <init>(java.lang.String,int,int)>("LOCKDOWN_CLEAR", 1, 1);

        <perfetto.protos.TraceConfig$LockdownModeOperation: perfetto.protos.TraceConfig$LockdownModeOperation LOCKDOWN_CLEAR> = $r4;

        $r5 = new perfetto.protos.TraceConfig$LockdownModeOperation;

        specialinvoke $r5.<perfetto.protos.TraceConfig$LockdownModeOperation: void <init>(java.lang.String,int,int)>("LOCKDOWN_SET", 2, 2);

        <perfetto.protos.TraceConfig$LockdownModeOperation: perfetto.protos.TraceConfig$LockdownModeOperation LOCKDOWN_SET> = $r5;

        $r6 = staticinvoke <perfetto.protos.TraceConfig$LockdownModeOperation: perfetto.protos.TraceConfig$LockdownModeOperation[] $values()>();

        <perfetto.protos.TraceConfig$LockdownModeOperation: perfetto.protos.TraceConfig$LockdownModeOperation[] $VALUES> = $r6;

        $r7 = new perfetto.protos.TraceConfig$LockdownModeOperation$Companion;

        specialinvoke $r7.<perfetto.protos.TraceConfig$LockdownModeOperation$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <perfetto.protos.TraceConfig$LockdownModeOperation: perfetto.protos.TraceConfig$LockdownModeOperation$Companion Companion> = $r7;

        r0 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Lperfetto/protos/TraceConfig$LockdownModeOperation;");

        r1 = <com.squareup.wire.Syntax: com.squareup.wire.Syntax PROTO_2>;

        r2 = <perfetto.protos.TraceConfig$LockdownModeOperation: perfetto.protos.TraceConfig$LockdownModeOperation LOCKDOWN_UNCHANGED>;

        $r8 = new perfetto.protos.TraceConfig$LockdownModeOperation$Companion$ADAPTER$1;

        specialinvoke $r8.<perfetto.protos.TraceConfig$LockdownModeOperation$Companion$ADAPTER$1: void <init>(kotlin.reflect.KClass,com.squareup.wire.Syntax,perfetto.protos.TraceConfig$LockdownModeOperation)>(r0, r1, r2);

        $r9 = (com.squareup.wire.ProtoAdapter) $r8;

        <perfetto.protos.TraceConfig$LockdownModeOperation: com.squareup.wire.ProtoAdapter ADAPTER> = $r9;

        return;
    }

perfetto.protos.TraceConfig$ProducerConfig$Companion$ADAPTER$1
    void <init>(com.squareup.wire.FieldEncoding, kotlin.reflect.KClass, com.squareup.wire.Syntax)
    {
        perfetto.protos.TraceConfig$ProducerConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.FieldEncoding $r1;
        kotlin.reflect.KClass $r2;
        com.squareup.wire.Syntax $r3;

        r0 := @this: perfetto.protos.TraceConfig$ProducerConfig$Companion$ADAPTER$1;

        $r1 := @parameter0: com.squareup.wire.FieldEncoding;

        $r2 := @parameter1: kotlin.reflect.KClass;

        $r3 := @parameter2: com.squareup.wire.Syntax;

        specialinvoke r0.<com.squareup.wire.ProtoAdapter: void <init>(com.squareup.wire.FieldEncoding,kotlin.reflect.KClass,java.lang.String,com.squareup.wire.Syntax,java.lang.Object)>($r1, $r2, "type.googleapis.com/perfetto.protos.TraceConfig.ProducerConfig", $r3, null);

        return;
    }

    public int encodedSize(perfetto.protos.TraceConfig$ProducerConfig)
    {
        perfetto.protos.TraceConfig$ProducerConfig$Companion$ADAPTER$1 r0;
        perfetto.protos.TraceConfig$ProducerConfig r1;
        okio.ByteString $r2;
        com.squareup.wire.ProtoAdapter $r3, $r5, $r7;
        java.lang.String $r4;
        int $i0, $i1, $i2, i3, i4, i5, i6;
        java.lang.Integer $r6, $r8;

        r0 := @this: perfetto.protos.TraceConfig$ProducerConfig$Companion$ADAPTER$1;

        r1 := @parameter0: perfetto.protos.TraceConfig$ProducerConfig;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = virtualinvoke r1.<perfetto.protos.TraceConfig$ProducerConfig: okio.ByteString unknownFields()>();

        i3 = virtualinvoke $r2.<okio.ByteString: int size()>();

        $r3 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        $r4 = virtualinvoke r1.<perfetto.protos.TraceConfig$ProducerConfig: java.lang.String getProducer_name()>();

        $i0 = virtualinvoke $r3.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(1, $r4);

        i4 = i3 + $i0;

        $r5 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r6 = virtualinvoke r1.<perfetto.protos.TraceConfig$ProducerConfig: java.lang.Integer getShm_size_kb()>();

        $i1 = virtualinvoke $r5.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(2, $r6);

        i5 = i4 + $i1;

        $r7 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r8 = virtualinvoke r1.<perfetto.protos.TraceConfig$ProducerConfig: java.lang.Integer getPage_size_kb()>();

        $i2 = virtualinvoke $r7.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(3, $r8);

        i6 = i5 + $i2;

        return i6;
    }

    public void encode(com.squareup.wire.ProtoWriter, perfetto.protos.TraceConfig$ProducerConfig)
    {
        perfetto.protos.TraceConfig$ProducerConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoWriter r1;
        perfetto.protos.TraceConfig$ProducerConfig r2;
        com.squareup.wire.ProtoAdapter $r3, $r5, $r7;
        java.lang.String $r4;
        java.lang.Integer $r6, $r8;
        okio.ByteString $r9;

        r0 := @this: perfetto.protos.TraceConfig$ProducerConfig$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoWriter;

        r2 := @parameter1: perfetto.protos.TraceConfig$ProducerConfig;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "writer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "value");

        $r3 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        $r4 = virtualinvoke r2.<perfetto.protos.TraceConfig$ProducerConfig: java.lang.String getProducer_name()>();

        virtualinvoke $r3.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 1, $r4);

        $r5 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r6 = virtualinvoke r2.<perfetto.protos.TraceConfig$ProducerConfig: java.lang.Integer getShm_size_kb()>();

        virtualinvoke $r5.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 2, $r6);

        $r7 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r8 = virtualinvoke r2.<perfetto.protos.TraceConfig$ProducerConfig: java.lang.Integer getPage_size_kb()>();

        virtualinvoke $r7.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 3, $r8);

        $r9 = virtualinvoke r2.<perfetto.protos.TraceConfig$ProducerConfig: okio.ByteString unknownFields()>();

        virtualinvoke r1.<com.squareup.wire.ProtoWriter: void writeBytes(okio.ByteString)>($r9);

        return;
    }

    public perfetto.protos.TraceConfig$ProducerConfig decode(com.squareup.wire.ProtoReader)
    {
        perfetto.protos.TraceConfig$ProducerConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoReader r1, r3;
        okio.ByteString r2;
        long l0;
        int i1, i2;
        com.squareup.wire.ProtoAdapter $r4, $r5, $r6;
        perfetto.protos.TraceConfig$ProducerConfig $r7;
        java.lang.Integer $r8, $r9;
        java.lang.String $r10;
        java.lang.Object r11, r12, r13;

        r0 := @this: perfetto.protos.TraceConfig$ProducerConfig$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoReader;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "reader");

        r11 = null;

        r12 = null;

        r13 = null;

        r3 = r1;

        l0 = virtualinvoke r3.<com.squareup.wire.ProtoReader: long beginMessage()>();

     label1:
        i1 = virtualinvoke r3.<com.squareup.wire.ProtoReader: int nextTag()>();

        if i1 != -1 goto label2;

        goto label8;

     label2:
        i2 = i1;

        tableswitch(i2)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label6;
        };

     label3:
        $r6 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        r11 = virtualinvoke $r6.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label7;

     label4:
        $r5 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        r12 = virtualinvoke $r5.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label7;

     label5:
        $r4 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        r13 = virtualinvoke $r4.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label7;

     label6:
        virtualinvoke r1.<com.squareup.wire.ProtoReader: void readUnknownField(int)>(i2);

     label7:
        goto label1;

     label8:
        r2 = virtualinvoke r3.<com.squareup.wire.ProtoReader: okio.ByteString endMessageAndGetUnknownFields(long)>(l0);

        $r7 = new perfetto.protos.TraceConfig$ProducerConfig;

        $r10 = (java.lang.String) r11;

        $r9 = (java.lang.Integer) r12;

        $r8 = (java.lang.Integer) r13;

        specialinvoke $r7.<perfetto.protos.TraceConfig$ProducerConfig: void <init>(java.lang.String,java.lang.Integer,java.lang.Integer,okio.ByteString)>($r10, $r9, $r8, r2);

        return $r7;
    }

    public perfetto.protos.TraceConfig$ProducerConfig redact(perfetto.protos.TraceConfig$ProducerConfig)
    {
        perfetto.protos.TraceConfig$ProducerConfig$Companion$ADAPTER$1 r0;
        perfetto.protos.TraceConfig$ProducerConfig r1, $r3;
        okio.ByteString $r2;

        r0 := @this: perfetto.protos.TraceConfig$ProducerConfig$Companion$ADAPTER$1;

        r1 := @parameter0: perfetto.protos.TraceConfig$ProducerConfig;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = <okio.ByteString: okio.ByteString EMPTY>;

        $r3 = staticinvoke <perfetto.protos.TraceConfig$ProducerConfig: perfetto.protos.TraceConfig$ProducerConfig copy$default(perfetto.protos.TraceConfig$ProducerConfig,java.lang.String,java.lang.Integer,java.lang.Integer,okio.ByteString,int,java.lang.Object)>(r1, null, null, null, $r2, 7, null);

        return $r3;
    }

    public volatile int encodedSize(java.lang.Object)
    {
        perfetto.protos.TraceConfig$ProducerConfig$Companion$ADAPTER$1 r0;
        java.lang.Object r1;
        perfetto.protos.TraceConfig$ProducerConfig $r2;
        int $i0;

        r0 := @this: perfetto.protos.TraceConfig$ProducerConfig$Companion$ADAPTER$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (perfetto.protos.TraceConfig$ProducerConfig) r1;

        $i0 = virtualinvoke r0.<perfetto.protos.TraceConfig$ProducerConfig$Companion$ADAPTER$1: int encodedSize(perfetto.protos.TraceConfig$ProducerConfig)>($r2);

        return $i0;
    }

    public volatile void encode(com.squareup.wire.ProtoWriter, java.lang.Object)
    {
        perfetto.protos.TraceConfig$ProducerConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoWriter r1;
        java.lang.Object r2;
        perfetto.protos.TraceConfig$ProducerConfig $r3;

        r0 := @this: perfetto.protos.TraceConfig$ProducerConfig$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoWriter;

        r2 := @parameter1: java.lang.Object;

        $r3 = (perfetto.protos.TraceConfig$ProducerConfig) r2;

        virtualinvoke r0.<perfetto.protos.TraceConfig$ProducerConfig$Companion$ADAPTER$1: void encode(com.squareup.wire.ProtoWriter,perfetto.protos.TraceConfig$ProducerConfig)>(r1, $r3);

        return;
    }

    public volatile java.lang.Object decode(com.squareup.wire.ProtoReader)
    {
        perfetto.protos.TraceConfig$ProducerConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoReader r1;
        perfetto.protos.TraceConfig$ProducerConfig $r2;

        r0 := @this: perfetto.protos.TraceConfig$ProducerConfig$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoReader;

        $r2 = virtualinvoke r0.<perfetto.protos.TraceConfig$ProducerConfig$Companion$ADAPTER$1: perfetto.protos.TraceConfig$ProducerConfig decode(com.squareup.wire.ProtoReader)>(r1);

        return $r2;
    }

    public volatile java.lang.Object redact(java.lang.Object)
    {
        perfetto.protos.TraceConfig$ProducerConfig$Companion$ADAPTER$1 r0;
        java.lang.Object r1;
        perfetto.protos.TraceConfig$ProducerConfig $r2, $r3;

        r0 := @this: perfetto.protos.TraceConfig$ProducerConfig$Companion$ADAPTER$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (perfetto.protos.TraceConfig$ProducerConfig) r1;

        $r3 = virtualinvoke r0.<perfetto.protos.TraceConfig$ProducerConfig$Companion$ADAPTER$1: perfetto.protos.TraceConfig$ProducerConfig redact(perfetto.protos.TraceConfig$ProducerConfig)>($r2);

        return $r3;
    }

perfetto.protos.TraceConfig$ProducerConfig$Companion
    private void <init>()
    {
        perfetto.protos.TraceConfig$ProducerConfig$Companion r0;

        r0 := @this: perfetto.protos.TraceConfig$ProducerConfig$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.TraceConfig$ProducerConfig$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: perfetto.protos.TraceConfig$ProducerConfig$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<perfetto.protos.TraceConfig$ProducerConfig$Companion: void <init>()>();

        return;
    }

perfetto.protos.TraceConfig$ProducerConfig
<perfetto.protos.TraceConfig$ProducerConfig: perfetto.protos.TraceConfig$ProducerConfig$Companion Companion>
<perfetto.protos.TraceConfig$ProducerConfig: java.lang.String producer_name>
<perfetto.protos.TraceConfig$ProducerConfig: java.lang.Integer shm_size_kb>
<perfetto.protos.TraceConfig$ProducerConfig: java.lang.Integer page_size_kb>
<perfetto.protos.TraceConfig$ProducerConfig: com.squareup.wire.ProtoAdapter ADAPTER>
<perfetto.protos.TraceConfig$ProducerConfig: long serialVersionUID>
    public void <init>(java.lang.String, java.lang.Integer, java.lang.Integer, okio.ByteString)
    {
        perfetto.protos.TraceConfig$ProducerConfig r0;
        java.lang.String r1;
        java.lang.Integer r2, r3;
        okio.ByteString r4;
        com.squareup.wire.ProtoAdapter $r5;

        r0 := @this: perfetto.protos.TraceConfig$ProducerConfig;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Integer;

        r3 := @parameter2: java.lang.Integer;

        r4 := @parameter3: okio.ByteString;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "unknownFields");

        $r5 = <perfetto.protos.TraceConfig$ProducerConfig: com.squareup.wire.ProtoAdapter ADAPTER>;

        specialinvoke r0.<com.squareup.wire.Message: void <init>(com.squareup.wire.ProtoAdapter,okio.ByteString)>($r5, r4);

        r0.<perfetto.protos.TraceConfig$ProducerConfig: java.lang.String producer_name> = r1;

        r0.<perfetto.protos.TraceConfig$ProducerConfig: java.lang.Integer shm_size_kb> = r2;

        r0.<perfetto.protos.TraceConfig$ProducerConfig: java.lang.Integer page_size_kb> = r3;

        return;
    }

    public void <init>(java.lang.String, java.lang.Integer, java.lang.Integer, okio.ByteString, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.TraceConfig$ProducerConfig r0;
        int i0, $i1, $i2, $i3, $i4;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        java.lang.String r2;
        java.lang.Integer r3, r4;
        okio.ByteString r5;

        r0 := @this: perfetto.protos.TraceConfig$ProducerConfig;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Integer;

        r4 := @parameter2: java.lang.Integer;

        r5 := @parameter3: okio.ByteString;

        i0 := @parameter4: int;

        r1 := @parameter5: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r2 = null;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r3 = null;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        r4 = null;

     label3:
        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        r5 = <okio.ByteString: okio.ByteString EMPTY>;

     label4:
        specialinvoke r0.<perfetto.protos.TraceConfig$ProducerConfig: void <init>(java.lang.String,java.lang.Integer,java.lang.Integer,okio.ByteString)>(r2, r3, r4, r5);

        return;
    }

    public final java.lang.String getProducer_name()
    {
        perfetto.protos.TraceConfig$ProducerConfig r0;
        java.lang.String $r1;

        r0 := @this: perfetto.protos.TraceConfig$ProducerConfig;

        $r1 = r0.<perfetto.protos.TraceConfig$ProducerConfig: java.lang.String producer_name>;

        return $r1;
    }

    public final java.lang.Integer getShm_size_kb()
    {
        perfetto.protos.TraceConfig$ProducerConfig r0;
        java.lang.Integer $r1;

        r0 := @this: perfetto.protos.TraceConfig$ProducerConfig;

        $r1 = r0.<perfetto.protos.TraceConfig$ProducerConfig: java.lang.Integer shm_size_kb>;

        return $r1;
    }

    public final java.lang.Integer getPage_size_kb()
    {
        perfetto.protos.TraceConfig$ProducerConfig r0;
        java.lang.Integer $r1;

        r0 := @this: perfetto.protos.TraceConfig$ProducerConfig;

        $r1 = r0.<perfetto.protos.TraceConfig$ProducerConfig: java.lang.Integer page_size_kb>;

        return $r1;
    }

    public java.lang.Void newBuilder()
    {
        perfetto.protos.TraceConfig$ProducerConfig r0;
        java.lang.AssertionError $r1;

        r0 := @this: perfetto.protos.TraceConfig$ProducerConfig;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;
    }

    public boolean equals(java.lang.Object)
    {
        perfetto.protos.TraceConfig$ProducerConfig r0, $r3, $r5, $r8, $r11;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        okio.ByteString $r2, $r4;
        java.lang.String $r6, $r7;
        java.lang.Integer $r9, $r10, $r12, $r13;

        r0 := @this: perfetto.protos.TraceConfig$ProducerConfig;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof perfetto.protos.TraceConfig$ProducerConfig;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<perfetto.protos.TraceConfig$ProducerConfig: okio.ByteString unknownFields()>();

        $r3 = (perfetto.protos.TraceConfig$ProducerConfig) r1;

        $r4 = virtualinvoke $r3.<perfetto.protos.TraceConfig$ProducerConfig: okio.ByteString unknownFields()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r4);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $r7 = r0.<perfetto.protos.TraceConfig$ProducerConfig: java.lang.String producer_name>;

        $r5 = (perfetto.protos.TraceConfig$ProducerConfig) r1;

        $r6 = $r5.<perfetto.protos.TraceConfig$ProducerConfig: java.lang.String producer_name>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, $r6);

        if $z2 != 0 goto label4;

        return 0;

     label4:
        $r10 = r0.<perfetto.protos.TraceConfig$ProducerConfig: java.lang.Integer shm_size_kb>;

        $r8 = (perfetto.protos.TraceConfig$ProducerConfig) r1;

        $r9 = $r8.<perfetto.protos.TraceConfig$ProducerConfig: java.lang.Integer shm_size_kb>;

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r10, $r9);

        if $z3 != 0 goto label5;

        return 0;

     label5:
        $r13 = r0.<perfetto.protos.TraceConfig$ProducerConfig: java.lang.Integer page_size_kb>;

        $r11 = (perfetto.protos.TraceConfig$ProducerConfig) r1;

        $r12 = $r11.<perfetto.protos.TraceConfig$ProducerConfig: java.lang.Integer page_size_kb>;

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r13, $r12);

        if $z4 != 0 goto label6;

        return 0;

     label6:
        return 1;
    }

    public int hashCode()
    {
        perfetto.protos.TraceConfig$ProducerConfig r0;
        okio.ByteString $r1;
        java.lang.String $r2;
        int $i0, $i1, $i2, i3, i4, $i5, i6, $i7, i8, $i9;
        java.lang.Integer $r3, $r4;

        r0 := @this: perfetto.protos.TraceConfig$ProducerConfig;

        i3 = r0.<perfetto.protos.TraceConfig$ProducerConfig: int hashCode>;

        if i3 != 0 goto label7;

        $r1 = virtualinvoke r0.<perfetto.protos.TraceConfig$ProducerConfig: okio.ByteString unknownFields()>();

        i4 = virtualinvoke $r1.<okio.ByteString: int hashCode()>();

        $i0 = i4 * 37;

        $r2 = r0.<perfetto.protos.TraceConfig$ProducerConfig: java.lang.String producer_name>;

        if $r2 != null goto label1;

        $i5 = 0;

        goto label2;

     label1:
        $i5 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

     label2:
        i6 = $i0 + $i5;

        $i1 = i6 * 37;

        $r3 = r0.<perfetto.protos.TraceConfig$ProducerConfig: java.lang.Integer shm_size_kb>;

        if $r3 != null goto label3;

        $i7 = 0;

        goto label4;

     label3:
        $i7 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

     label4:
        i8 = $i1 + $i7;

        $i2 = i8 * 37;

        $r4 = r0.<perfetto.protos.TraceConfig$ProducerConfig: java.lang.Integer page_size_kb>;

        if $r4 != null goto label5;

        $i9 = 0;

        goto label6;

     label5:
        $i9 = virtualinvoke $r4.<java.lang.Object: int hashCode()>();

     label6:
        i3 = $i2 + $i9;

        r0.<perfetto.protos.TraceConfig$ProducerConfig: int hashCode> = i3;

     label7:
        return i3;
    }

    public java.lang.String toString()
    {
        perfetto.protos.TraceConfig$ProducerConfig r0;
        java.util.List r1;
        java.util.ArrayList $r2;
        java.lang.String $r3, $r10, $r13, $r16, $r17, $r19, $r20;
        java.lang.Integer $r4, $r5, $r11, $r14;
        java.lang.CharSequence $r6, $r7, $r8;
        java.lang.Iterable $r9;
        java.util.Collection $r12, $r15, $r18;

        r0 := @this: perfetto.protos.TraceConfig$ProducerConfig;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r1 = (java.util.List) $r2;

        $r3 = r0.<perfetto.protos.TraceConfig$ProducerConfig: java.lang.String producer_name>;

        if $r3 == null goto label1;

        $r18 = (java.util.Collection) r1;

        $r17 = r0.<perfetto.protos.TraceConfig$ProducerConfig: java.lang.String producer_name>;

        $r19 = staticinvoke <com.squareup.wire.internal.Internal: java.lang.String sanitize(java.lang.String)>($r17);

        $r20 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("producer_name=", $r19);

        interfaceinvoke $r18.<java.util.Collection: boolean add(java.lang.Object)>($r20);

     label1:
        $r4 = r0.<perfetto.protos.TraceConfig$ProducerConfig: java.lang.Integer shm_size_kb>;

        if $r4 == null goto label2;

        $r15 = (java.util.Collection) r1;

        $r14 = r0.<perfetto.protos.TraceConfig$ProducerConfig: java.lang.Integer shm_size_kb>;

        $r16 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("shm_size_kb=", $r14);

        interfaceinvoke $r15.<java.util.Collection: boolean add(java.lang.Object)>($r16);

     label2:
        $r5 = r0.<perfetto.protos.TraceConfig$ProducerConfig: java.lang.Integer page_size_kb>;

        if $r5 == null goto label3;

        $r12 = (java.util.Collection) r1;

        $r11 = r0.<perfetto.protos.TraceConfig$ProducerConfig: java.lang.Integer page_size_kb>;

        $r13 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("page_size_kb=", $r11);

        interfaceinvoke $r12.<java.util.Collection: boolean add(java.lang.Object)>($r13);

     label3:
        $r9 = (java.lang.Iterable) r1;

        $r8 = (java.lang.CharSequence) ", ";

        $r7 = (java.lang.CharSequence) "ProducerConfig{";

        $r6 = (java.lang.CharSequence) "}";

        $r10 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r9, $r8, $r7, $r6, 0, null, null, 56, null);

        return $r10;
    }

    public final perfetto.protos.TraceConfig$ProducerConfig copy(java.lang.String, java.lang.Integer, java.lang.Integer, okio.ByteString)
    {
        perfetto.protos.TraceConfig$ProducerConfig r0, $r5;
        java.lang.String r1;
        java.lang.Integer r2, r3;
        okio.ByteString r4;

        r0 := @this: perfetto.protos.TraceConfig$ProducerConfig;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Integer;

        r3 := @parameter2: java.lang.Integer;

        r4 := @parameter3: okio.ByteString;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "unknownFields");

        $r5 = new perfetto.protos.TraceConfig$ProducerConfig;

        specialinvoke $r5.<perfetto.protos.TraceConfig$ProducerConfig: void <init>(java.lang.String,java.lang.Integer,java.lang.Integer,okio.ByteString)>(r1, r2, r3, r4);

        return $r5;
    }

    public static perfetto.protos.TraceConfig$ProducerConfig copy$default(perfetto.protos.TraceConfig$ProducerConfig, java.lang.String, java.lang.Integer, java.lang.Integer, okio.ByteString, int, java.lang.Object)
    {
        perfetto.protos.TraceConfig$ProducerConfig r0, $r2;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Object r1;
        java.lang.String r3;
        java.lang.Integer r4, r5;
        okio.ByteString r6;

        r0 := @parameter0: perfetto.protos.TraceConfig$ProducerConfig;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.Integer;

        r5 := @parameter3: java.lang.Integer;

        r6 := @parameter4: okio.ByteString;

        i0 := @parameter5: int;

        r1 := @parameter6: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r3 = r0.<perfetto.protos.TraceConfig$ProducerConfig: java.lang.String producer_name>;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r4 = r0.<perfetto.protos.TraceConfig$ProducerConfig: java.lang.Integer shm_size_kb>;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        r5 = r0.<perfetto.protos.TraceConfig$ProducerConfig: java.lang.Integer page_size_kb>;

     label3:
        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        r6 = virtualinvoke r0.<perfetto.protos.TraceConfig$ProducerConfig: okio.ByteString unknownFields()>();

     label4:
        $r2 = virtualinvoke r0.<perfetto.protos.TraceConfig$ProducerConfig: perfetto.protos.TraceConfig$ProducerConfig copy(java.lang.String,java.lang.Integer,java.lang.Integer,okio.ByteString)>(r3, r4, r5, r6);

        return $r2;
    }

    public void <init>()
    {
        perfetto.protos.TraceConfig$ProducerConfig r0;

        r0 := @this: perfetto.protos.TraceConfig$ProducerConfig;

        specialinvoke r0.<perfetto.protos.TraceConfig$ProducerConfig: void <init>(java.lang.String,java.lang.Integer,java.lang.Integer,okio.ByteString,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, null, null, null, 15, null);

        return;
    }

    public volatile com.squareup.wire.Message$Builder newBuilder()
    {
        perfetto.protos.TraceConfig$ProducerConfig r0;
        java.lang.Void $r1;
        com.squareup.wire.Message$Builder $r2;

        r0 := @this: perfetto.protos.TraceConfig$ProducerConfig;

        $r1 = virtualinvoke r0.<perfetto.protos.TraceConfig$ProducerConfig: java.lang.Void newBuilder()>();

        $r2 = (com.squareup.wire.Message$Builder) $r1;

        return $r2;
    }

    static void <clinit>()
    {
        com.squareup.wire.FieldEncoding r0;
        kotlin.reflect.KClass r1;
        com.squareup.wire.Syntax r2;
        perfetto.protos.TraceConfig$ProducerConfig$Companion $r3;
        perfetto.protos.TraceConfig$ProducerConfig$Companion$ADAPTER$1 $r4;
        com.squareup.wire.ProtoAdapter $r5;

        $r3 = new perfetto.protos.TraceConfig$ProducerConfig$Companion;

        specialinvoke $r3.<perfetto.protos.TraceConfig$ProducerConfig$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <perfetto.protos.TraceConfig$ProducerConfig: perfetto.protos.TraceConfig$ProducerConfig$Companion Companion> = $r3;

        r0 = <com.squareup.wire.FieldEncoding: com.squareup.wire.FieldEncoding LENGTH_DELIMITED>;

        r1 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Lperfetto/protos/TraceConfig$ProducerConfig;");

        r2 = <com.squareup.wire.Syntax: com.squareup.wire.Syntax PROTO_2>;

        $r4 = new perfetto.protos.TraceConfig$ProducerConfig$Companion$ADAPTER$1;

        specialinvoke $r4.<perfetto.protos.TraceConfig$ProducerConfig$Companion$ADAPTER$1: void <init>(com.squareup.wire.FieldEncoding,kotlin.reflect.KClass,com.squareup.wire.Syntax)>(r0, r1, r2);

        $r5 = (com.squareup.wire.ProtoAdapter) $r4;

        <perfetto.protos.TraceConfig$ProducerConfig: com.squareup.wire.ProtoAdapter ADAPTER> = $r5;

        return;
    }

perfetto.protos.TraceConfig$StatsdLogging$Companion$ADAPTER$1
    void <init>(kotlin.reflect.KClass, com.squareup.wire.Syntax, perfetto.protos.TraceConfig$StatsdLogging)
    {
        perfetto.protos.TraceConfig$StatsdLogging$Companion$ADAPTER$1 r0;
        kotlin.reflect.KClass $r1;
        com.squareup.wire.Syntax $r2;
        perfetto.protos.TraceConfig$StatsdLogging $r3;
        com.squareup.wire.WireEnum $r4;

        r0 := @this: perfetto.protos.TraceConfig$StatsdLogging$Companion$ADAPTER$1;

        $r1 := @parameter0: kotlin.reflect.KClass;

        $r2 := @parameter1: com.squareup.wire.Syntax;

        $r3 := @parameter2: perfetto.protos.TraceConfig$StatsdLogging;

        $r4 = (com.squareup.wire.WireEnum) $r3;

        specialinvoke r0.<com.squareup.wire.EnumAdapter: void <init>(kotlin.reflect.KClass,com.squareup.wire.Syntax,com.squareup.wire.WireEnum)>($r1, $r2, $r4);

        return;
    }

    public perfetto.protos.TraceConfig$StatsdLogging fromValue(int)
    {
        perfetto.protos.TraceConfig$StatsdLogging$Companion$ADAPTER$1 r0;
        int i0;
        perfetto.protos.TraceConfig$StatsdLogging$Companion $r1;
        perfetto.protos.TraceConfig$StatsdLogging $r2;

        r0 := @this: perfetto.protos.TraceConfig$StatsdLogging$Companion$ADAPTER$1;

        i0 := @parameter0: int;

        $r1 = <perfetto.protos.TraceConfig$StatsdLogging: perfetto.protos.TraceConfig$StatsdLogging$Companion Companion>;

        $r2 = virtualinvoke $r1.<perfetto.protos.TraceConfig$StatsdLogging$Companion: perfetto.protos.TraceConfig$StatsdLogging fromValue(int)>(i0);

        return $r2;
    }

    public volatile com.squareup.wire.WireEnum fromValue(int)
    {
        perfetto.protos.TraceConfig$StatsdLogging$Companion$ADAPTER$1 r0;
        int i0;
        perfetto.protos.TraceConfig$StatsdLogging $r1;
        com.squareup.wire.WireEnum $r2;

        r0 := @this: perfetto.protos.TraceConfig$StatsdLogging$Companion$ADAPTER$1;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<perfetto.protos.TraceConfig$StatsdLogging$Companion$ADAPTER$1: perfetto.protos.TraceConfig$StatsdLogging fromValue(int)>(i0);

        $r2 = (com.squareup.wire.WireEnum) $r1;

        return $r2;
    }

perfetto.protos.TraceConfig$StatsdLogging$Companion
    private void <init>()
    {
        perfetto.protos.TraceConfig$StatsdLogging$Companion r0;

        r0 := @this: perfetto.protos.TraceConfig$StatsdLogging$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final perfetto.protos.TraceConfig$StatsdLogging fromValue(int)
    {
        perfetto.protos.TraceConfig$StatsdLogging$Companion r0;
        int i0;
        perfetto.protos.TraceConfig$StatsdLogging $r1;

        r0 := @this: perfetto.protos.TraceConfig$StatsdLogging$Companion;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        $r1 = <perfetto.protos.TraceConfig$StatsdLogging: perfetto.protos.TraceConfig$StatsdLogging STATSD_LOGGING_UNSPECIFIED>;

        goto label5;

     label2:
        $r1 = <perfetto.protos.TraceConfig$StatsdLogging: perfetto.protos.TraceConfig$StatsdLogging STATSD_LOGGING_ENABLED>;

        goto label5;

     label3:
        $r1 = <perfetto.protos.TraceConfig$StatsdLogging: perfetto.protos.TraceConfig$StatsdLogging STATSD_LOGGING_DISABLED>;

        goto label5;

     label4:
        $r1 = null;

     label5:
        return $r1;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.TraceConfig$StatsdLogging$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: perfetto.protos.TraceConfig$StatsdLogging$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<perfetto.protos.TraceConfig$StatsdLogging$Companion: void <init>()>();

        return;
    }

perfetto.protos.TraceConfig$StatsdLogging
<perfetto.protos.TraceConfig$StatsdLogging: perfetto.protos.TraceConfig$StatsdLogging$Companion Companion>
<perfetto.protos.TraceConfig$StatsdLogging: int value>
<perfetto.protos.TraceConfig$StatsdLogging: com.squareup.wire.ProtoAdapter ADAPTER>
<perfetto.protos.TraceConfig$StatsdLogging: perfetto.protos.TraceConfig$StatsdLogging STATSD_LOGGING_UNSPECIFIED>
<perfetto.protos.TraceConfig$StatsdLogging: perfetto.protos.TraceConfig$StatsdLogging STATSD_LOGGING_ENABLED>
<perfetto.protos.TraceConfig$StatsdLogging: perfetto.protos.TraceConfig$StatsdLogging STATSD_LOGGING_DISABLED>
<perfetto.protos.TraceConfig$StatsdLogging: perfetto.protos.TraceConfig$StatsdLogging[] $VALUES>
    private void <init>(java.lang.String, int, int)
    {
        perfetto.protos.TraceConfig$StatsdLogging r0;
        java.lang.String $r1;
        int $i0, i1;

        r0 := @this: perfetto.protos.TraceConfig$StatsdLogging;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        r0.<perfetto.protos.TraceConfig$StatsdLogging: int value> = i1;

        return;
    }

    public int getValue()
    {
        perfetto.protos.TraceConfig$StatsdLogging r0;
        int $i0;

        r0 := @this: perfetto.protos.TraceConfig$StatsdLogging;

        $i0 = r0.<perfetto.protos.TraceConfig$StatsdLogging: int value>;

        return $i0;
    }

    public static perfetto.protos.TraceConfig$StatsdLogging[] values()
    {
        perfetto.protos.TraceConfig$StatsdLogging[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <perfetto.protos.TraceConfig$StatsdLogging: perfetto.protos.TraceConfig$StatsdLogging[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (perfetto.protos.TraceConfig$StatsdLogging[]) $r1;

        return $r2;
    }

    public static perfetto.protos.TraceConfig$StatsdLogging valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        perfetto.protos.TraceConfig$StatsdLogging $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lperfetto/protos/TraceConfig$StatsdLogging;", r0);

        $r2 = (perfetto.protos.TraceConfig$StatsdLogging) $r1;

        return $r2;
    }

    private static final perfetto.protos.TraceConfig$StatsdLogging[] $values()
    {
        perfetto.protos.TraceConfig$StatsdLogging[] r0;
        perfetto.protos.TraceConfig$StatsdLogging $r1, $r2, $r3;

        r0 = newarray (perfetto.protos.TraceConfig$StatsdLogging)[3];

        $r1 = <perfetto.protos.TraceConfig$StatsdLogging: perfetto.protos.TraceConfig$StatsdLogging STATSD_LOGGING_UNSPECIFIED>;

        r0[0] = $r1;

        $r2 = <perfetto.protos.TraceConfig$StatsdLogging: perfetto.protos.TraceConfig$StatsdLogging STATSD_LOGGING_ENABLED>;

        r0[1] = $r2;

        $r3 = <perfetto.protos.TraceConfig$StatsdLogging: perfetto.protos.TraceConfig$StatsdLogging STATSD_LOGGING_DISABLED>;

        r0[2] = $r3;

        return r0;
    }

    public static final perfetto.protos.TraceConfig$StatsdLogging fromValue(int)
    {
        int i0;
        perfetto.protos.TraceConfig$StatsdLogging$Companion $r0;
        perfetto.protos.TraceConfig$StatsdLogging $r1;

        i0 := @parameter0: int;

        $r0 = <perfetto.protos.TraceConfig$StatsdLogging: perfetto.protos.TraceConfig$StatsdLogging$Companion Companion>;

        $r1 = virtualinvoke $r0.<perfetto.protos.TraceConfig$StatsdLogging$Companion: perfetto.protos.TraceConfig$StatsdLogging fromValue(int)>(i0);

        return $r1;
    }

    static void <clinit>()
    {
        kotlin.reflect.KClass r0;
        com.squareup.wire.Syntax r1;
        perfetto.protos.TraceConfig$StatsdLogging r2, $r3, $r4, $r5;
        perfetto.protos.TraceConfig$StatsdLogging[] $r6;
        perfetto.protos.TraceConfig$StatsdLogging$Companion $r7;
        perfetto.protos.TraceConfig$StatsdLogging$Companion$ADAPTER$1 $r8;
        com.squareup.wire.ProtoAdapter $r9;

        $r3 = new perfetto.protos.TraceConfig$StatsdLogging;

        specialinvoke $r3.<perfetto.protos.TraceConfig$StatsdLogging: void <init>(java.lang.String,int,int)>("STATSD_LOGGING_UNSPECIFIED", 0, 0);

        <perfetto.protos.TraceConfig$StatsdLogging: perfetto.protos.TraceConfig$StatsdLogging STATSD_LOGGING_UNSPECIFIED> = $r3;

        $r4 = new perfetto.protos.TraceConfig$StatsdLogging;

        specialinvoke $r4.<perfetto.protos.TraceConfig$StatsdLogging: void <init>(java.lang.String,int,int)>("STATSD_LOGGING_ENABLED", 1, 1);

        <perfetto.protos.TraceConfig$StatsdLogging: perfetto.protos.TraceConfig$StatsdLogging STATSD_LOGGING_ENABLED> = $r4;

        $r5 = new perfetto.protos.TraceConfig$StatsdLogging;

        specialinvoke $r5.<perfetto.protos.TraceConfig$StatsdLogging: void <init>(java.lang.String,int,int)>("STATSD_LOGGING_DISABLED", 2, 2);

        <perfetto.protos.TraceConfig$StatsdLogging: perfetto.protos.TraceConfig$StatsdLogging STATSD_LOGGING_DISABLED> = $r5;

        $r6 = staticinvoke <perfetto.protos.TraceConfig$StatsdLogging: perfetto.protos.TraceConfig$StatsdLogging[] $values()>();

        <perfetto.protos.TraceConfig$StatsdLogging: perfetto.protos.TraceConfig$StatsdLogging[] $VALUES> = $r6;

        $r7 = new perfetto.protos.TraceConfig$StatsdLogging$Companion;

        specialinvoke $r7.<perfetto.protos.TraceConfig$StatsdLogging$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <perfetto.protos.TraceConfig$StatsdLogging: perfetto.protos.TraceConfig$StatsdLogging$Companion Companion> = $r7;

        r0 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Lperfetto/protos/TraceConfig$StatsdLogging;");

        r1 = <com.squareup.wire.Syntax: com.squareup.wire.Syntax PROTO_2>;

        r2 = <perfetto.protos.TraceConfig$StatsdLogging: perfetto.protos.TraceConfig$StatsdLogging STATSD_LOGGING_UNSPECIFIED>;

        $r8 = new perfetto.protos.TraceConfig$StatsdLogging$Companion$ADAPTER$1;

        specialinvoke $r8.<perfetto.protos.TraceConfig$StatsdLogging$Companion$ADAPTER$1: void <init>(kotlin.reflect.KClass,com.squareup.wire.Syntax,perfetto.protos.TraceConfig$StatsdLogging)>(r0, r1, r2);

        $r9 = (com.squareup.wire.ProtoAdapter) $r8;

        <perfetto.protos.TraceConfig$StatsdLogging: com.squareup.wire.ProtoAdapter ADAPTER> = $r9;

        return;
    }

perfetto.protos.TraceConfig$StatsdMetadata$Companion$ADAPTER$1
    void <init>(com.squareup.wire.FieldEncoding, kotlin.reflect.KClass, com.squareup.wire.Syntax)
    {
        perfetto.protos.TraceConfig$StatsdMetadata$Companion$ADAPTER$1 r0;
        com.squareup.wire.FieldEncoding $r1;
        kotlin.reflect.KClass $r2;
        com.squareup.wire.Syntax $r3;

        r0 := @this: perfetto.protos.TraceConfig$StatsdMetadata$Companion$ADAPTER$1;

        $r1 := @parameter0: com.squareup.wire.FieldEncoding;

        $r2 := @parameter1: kotlin.reflect.KClass;

        $r3 := @parameter2: com.squareup.wire.Syntax;

        specialinvoke r0.<com.squareup.wire.ProtoAdapter: void <init>(com.squareup.wire.FieldEncoding,kotlin.reflect.KClass,java.lang.String,com.squareup.wire.Syntax,java.lang.Object)>($r1, $r2, "type.googleapis.com/perfetto.protos.TraceConfig.StatsdMetadata", $r3, null);

        return;
    }

    public int encodedSize(perfetto.protos.TraceConfig$StatsdMetadata)
    {
        perfetto.protos.TraceConfig$StatsdMetadata$Companion$ADAPTER$1 r0;
        perfetto.protos.TraceConfig$StatsdMetadata r1;
        okio.ByteString $r2;
        com.squareup.wire.ProtoAdapter $r3, $r5, $r7, $r9;
        java.lang.Long $r4, $r8, $r10;
        int $i0, $i1, $i2, $i3, i4, i5, i6, i7, i8;
        java.lang.Integer $r6;

        r0 := @this: perfetto.protos.TraceConfig$StatsdMetadata$Companion$ADAPTER$1;

        r1 := @parameter0: perfetto.protos.TraceConfig$StatsdMetadata;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = virtualinvoke r1.<perfetto.protos.TraceConfig$StatsdMetadata: okio.ByteString unknownFields()>();

        i4 = virtualinvoke $r2.<okio.ByteString: int size()>();

        $r3 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter INT64>;

        $r4 = virtualinvoke r1.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Long getTriggering_alert_id()>();

        $i0 = virtualinvoke $r3.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(1, $r4);

        i5 = i4 + $i0;

        $r5 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter INT32>;

        $r6 = virtualinvoke r1.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Integer getTriggering_config_uid()>();

        $i1 = virtualinvoke $r5.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(2, $r6);

        i6 = i5 + $i1;

        $r7 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter INT64>;

        $r8 = virtualinvoke r1.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Long getTriggering_config_id()>();

        $i2 = virtualinvoke $r7.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(3, $r8);

        i7 = i6 + $i2;

        $r9 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter INT64>;

        $r10 = virtualinvoke r1.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Long getTriggering_subscription_id()>();

        $i3 = virtualinvoke $r9.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(4, $r10);

        i8 = i7 + $i3;

        return i8;
    }

    public void encode(com.squareup.wire.ProtoWriter, perfetto.protos.TraceConfig$StatsdMetadata)
    {
        perfetto.protos.TraceConfig$StatsdMetadata$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoWriter r1;
        perfetto.protos.TraceConfig$StatsdMetadata r2;
        com.squareup.wire.ProtoAdapter $r3, $r5, $r7, $r9;
        java.lang.Long $r4, $r8, $r10;
        java.lang.Integer $r6;
        okio.ByteString $r11;

        r0 := @this: perfetto.protos.TraceConfig$StatsdMetadata$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoWriter;

        r2 := @parameter1: perfetto.protos.TraceConfig$StatsdMetadata;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "writer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "value");

        $r3 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter INT64>;

        $r4 = virtualinvoke r2.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Long getTriggering_alert_id()>();

        virtualinvoke $r3.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 1, $r4);

        $r5 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter INT32>;

        $r6 = virtualinvoke r2.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Integer getTriggering_config_uid()>();

        virtualinvoke $r5.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 2, $r6);

        $r7 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter INT64>;

        $r8 = virtualinvoke r2.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Long getTriggering_config_id()>();

        virtualinvoke $r7.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 3, $r8);

        $r9 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter INT64>;

        $r10 = virtualinvoke r2.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Long getTriggering_subscription_id()>();

        virtualinvoke $r9.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 4, $r10);

        $r11 = virtualinvoke r2.<perfetto.protos.TraceConfig$StatsdMetadata: okio.ByteString unknownFields()>();

        virtualinvoke r1.<com.squareup.wire.ProtoWriter: void writeBytes(okio.ByteString)>($r11);

        return;
    }

    public perfetto.protos.TraceConfig$StatsdMetadata decode(com.squareup.wire.ProtoReader)
    {
        perfetto.protos.TraceConfig$StatsdMetadata$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoReader r1, r3;
        okio.ByteString r2;
        long l0;
        int i1, i2;
        com.squareup.wire.ProtoAdapter $r4, $r5, $r6, $r7;
        perfetto.protos.TraceConfig$StatsdMetadata $r8;
        java.lang.Long $r9, $r10, $r12;
        java.lang.Integer $r11;
        java.lang.Object r13, r14, r15, r16;

        r0 := @this: perfetto.protos.TraceConfig$StatsdMetadata$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoReader;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "reader");

        r13 = null;

        r14 = null;

        r15 = null;

        r16 = null;

        r3 = r1;

        l0 = virtualinvoke r3.<com.squareup.wire.ProtoReader: long beginMessage()>();

     label1:
        i1 = virtualinvoke r3.<com.squareup.wire.ProtoReader: int nextTag()>();

        if i1 != -1 goto label2;

        goto label9;

     label2:
        i2 = i1;

        tableswitch(i2)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            default: goto label7;
        };

     label3:
        $r7 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter INT64>;

        r13 = virtualinvoke $r7.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label8;

     label4:
        $r6 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter INT32>;

        r14 = virtualinvoke $r6.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label8;

     label5:
        $r5 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter INT64>;

        r15 = virtualinvoke $r5.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label8;

     label6:
        $r4 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter INT64>;

        r16 = virtualinvoke $r4.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label8;

     label7:
        virtualinvoke r1.<com.squareup.wire.ProtoReader: void readUnknownField(int)>(i2);

     label8:
        goto label1;

     label9:
        r2 = virtualinvoke r3.<com.squareup.wire.ProtoReader: okio.ByteString endMessageAndGetUnknownFields(long)>(l0);

        $r8 = new perfetto.protos.TraceConfig$StatsdMetadata;

        $r12 = (java.lang.Long) r13;

        $r11 = (java.lang.Integer) r14;

        $r10 = (java.lang.Long) r15;

        $r9 = (java.lang.Long) r16;

        specialinvoke $r8.<perfetto.protos.TraceConfig$StatsdMetadata: void <init>(java.lang.Long,java.lang.Integer,java.lang.Long,java.lang.Long,okio.ByteString)>($r12, $r11, $r10, $r9, r2);

        return $r8;
    }

    public perfetto.protos.TraceConfig$StatsdMetadata redact(perfetto.protos.TraceConfig$StatsdMetadata)
    {
        perfetto.protos.TraceConfig$StatsdMetadata$Companion$ADAPTER$1 r0;
        perfetto.protos.TraceConfig$StatsdMetadata r1, $r3;
        okio.ByteString $r2;

        r0 := @this: perfetto.protos.TraceConfig$StatsdMetadata$Companion$ADAPTER$1;

        r1 := @parameter0: perfetto.protos.TraceConfig$StatsdMetadata;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = <okio.ByteString: okio.ByteString EMPTY>;

        $r3 = staticinvoke <perfetto.protos.TraceConfig$StatsdMetadata: perfetto.protos.TraceConfig$StatsdMetadata copy$default(perfetto.protos.TraceConfig$StatsdMetadata,java.lang.Long,java.lang.Integer,java.lang.Long,java.lang.Long,okio.ByteString,int,java.lang.Object)>(r1, null, null, null, null, $r2, 15, null);

        return $r3;
    }

    public volatile int encodedSize(java.lang.Object)
    {
        perfetto.protos.TraceConfig$StatsdMetadata$Companion$ADAPTER$1 r0;
        java.lang.Object r1;
        perfetto.protos.TraceConfig$StatsdMetadata $r2;
        int $i0;

        r0 := @this: perfetto.protos.TraceConfig$StatsdMetadata$Companion$ADAPTER$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (perfetto.protos.TraceConfig$StatsdMetadata) r1;

        $i0 = virtualinvoke r0.<perfetto.protos.TraceConfig$StatsdMetadata$Companion$ADAPTER$1: int encodedSize(perfetto.protos.TraceConfig$StatsdMetadata)>($r2);

        return $i0;
    }

    public volatile void encode(com.squareup.wire.ProtoWriter, java.lang.Object)
    {
        perfetto.protos.TraceConfig$StatsdMetadata$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoWriter r1;
        java.lang.Object r2;
        perfetto.protos.TraceConfig$StatsdMetadata $r3;

        r0 := @this: perfetto.protos.TraceConfig$StatsdMetadata$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoWriter;

        r2 := @parameter1: java.lang.Object;

        $r3 = (perfetto.protos.TraceConfig$StatsdMetadata) r2;

        virtualinvoke r0.<perfetto.protos.TraceConfig$StatsdMetadata$Companion$ADAPTER$1: void encode(com.squareup.wire.ProtoWriter,perfetto.protos.TraceConfig$StatsdMetadata)>(r1, $r3);

        return;
    }

    public volatile java.lang.Object decode(com.squareup.wire.ProtoReader)
    {
        perfetto.protos.TraceConfig$StatsdMetadata$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoReader r1;
        perfetto.protos.TraceConfig$StatsdMetadata $r2;

        r0 := @this: perfetto.protos.TraceConfig$StatsdMetadata$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoReader;

        $r2 = virtualinvoke r0.<perfetto.protos.TraceConfig$StatsdMetadata$Companion$ADAPTER$1: perfetto.protos.TraceConfig$StatsdMetadata decode(com.squareup.wire.ProtoReader)>(r1);

        return $r2;
    }

    public volatile java.lang.Object redact(java.lang.Object)
    {
        perfetto.protos.TraceConfig$StatsdMetadata$Companion$ADAPTER$1 r0;
        java.lang.Object r1;
        perfetto.protos.TraceConfig$StatsdMetadata $r2, $r3;

        r0 := @this: perfetto.protos.TraceConfig$StatsdMetadata$Companion$ADAPTER$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (perfetto.protos.TraceConfig$StatsdMetadata) r1;

        $r3 = virtualinvoke r0.<perfetto.protos.TraceConfig$StatsdMetadata$Companion$ADAPTER$1: perfetto.protos.TraceConfig$StatsdMetadata redact(perfetto.protos.TraceConfig$StatsdMetadata)>($r2);

        return $r3;
    }

perfetto.protos.TraceConfig$StatsdMetadata$Companion
    private void <init>()
    {
        perfetto.protos.TraceConfig$StatsdMetadata$Companion r0;

        r0 := @this: perfetto.protos.TraceConfig$StatsdMetadata$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.TraceConfig$StatsdMetadata$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: perfetto.protos.TraceConfig$StatsdMetadata$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<perfetto.protos.TraceConfig$StatsdMetadata$Companion: void <init>()>();

        return;
    }

perfetto.protos.TraceConfig$StatsdMetadata
<perfetto.protos.TraceConfig$StatsdMetadata: perfetto.protos.TraceConfig$StatsdMetadata$Companion Companion>
<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Long triggering_alert_id>
<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Integer triggering_config_uid>
<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Long triggering_config_id>
<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Long triggering_subscription_id>
<perfetto.protos.TraceConfig$StatsdMetadata: com.squareup.wire.ProtoAdapter ADAPTER>
<perfetto.protos.TraceConfig$StatsdMetadata: long serialVersionUID>
    public void <init>(java.lang.Long, java.lang.Integer, java.lang.Long, java.lang.Long, okio.ByteString)
    {
        perfetto.protos.TraceConfig$StatsdMetadata r0;
        java.lang.Long r1, r3, r4;
        java.lang.Integer r2;
        okio.ByteString r5;
        com.squareup.wire.ProtoAdapter $r6;

        r0 := @this: perfetto.protos.TraceConfig$StatsdMetadata;

        r1 := @parameter0: java.lang.Long;

        r2 := @parameter1: java.lang.Integer;

        r3 := @parameter2: java.lang.Long;

        r4 := @parameter3: java.lang.Long;

        r5 := @parameter4: okio.ByteString;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "unknownFields");

        $r6 = <perfetto.protos.TraceConfig$StatsdMetadata: com.squareup.wire.ProtoAdapter ADAPTER>;

        specialinvoke r0.<com.squareup.wire.Message: void <init>(com.squareup.wire.ProtoAdapter,okio.ByteString)>($r6, r5);

        r0.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Long triggering_alert_id> = r1;

        r0.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Integer triggering_config_uid> = r2;

        r0.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Long triggering_config_id> = r3;

        r0.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Long triggering_subscription_id> = r4;

        return;
    }

    public void <init>(java.lang.Long, java.lang.Integer, java.lang.Long, java.lang.Long, okio.ByteString, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.TraceConfig$StatsdMetadata r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        java.lang.Long r2, r4, r5;
        java.lang.Integer r3;
        okio.ByteString r6;

        r0 := @this: perfetto.protos.TraceConfig$StatsdMetadata;

        r2 := @parameter0: java.lang.Long;

        r3 := @parameter1: java.lang.Integer;

        r4 := @parameter2: java.lang.Long;

        r5 := @parameter3: java.lang.Long;

        r6 := @parameter4: okio.ByteString;

        i0 := @parameter5: int;

        r1 := @parameter6: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r2 = null;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r3 = null;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        r4 = null;

     label3:
        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        r5 = null;

     label4:
        $i5 = i0 & 16;

        if $i5 == 0 goto label5;

        r6 = <okio.ByteString: okio.ByteString EMPTY>;

     label5:
        specialinvoke r0.<perfetto.protos.TraceConfig$StatsdMetadata: void <init>(java.lang.Long,java.lang.Integer,java.lang.Long,java.lang.Long,okio.ByteString)>(r2, r3, r4, r5, r6);

        return;
    }

    public final java.lang.Long getTriggering_alert_id()
    {
        perfetto.protos.TraceConfig$StatsdMetadata r0;
        java.lang.Long $r1;

        r0 := @this: perfetto.protos.TraceConfig$StatsdMetadata;

        $r1 = r0.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Long triggering_alert_id>;

        return $r1;
    }

    public final java.lang.Integer getTriggering_config_uid()
    {
        perfetto.protos.TraceConfig$StatsdMetadata r0;
        java.lang.Integer $r1;

        r0 := @this: perfetto.protos.TraceConfig$StatsdMetadata;

        $r1 = r0.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Integer triggering_config_uid>;

        return $r1;
    }

    public final java.lang.Long getTriggering_config_id()
    {
        perfetto.protos.TraceConfig$StatsdMetadata r0;
        java.lang.Long $r1;

        r0 := @this: perfetto.protos.TraceConfig$StatsdMetadata;

        $r1 = r0.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Long triggering_config_id>;

        return $r1;
    }

    public final java.lang.Long getTriggering_subscription_id()
    {
        perfetto.protos.TraceConfig$StatsdMetadata r0;
        java.lang.Long $r1;

        r0 := @this: perfetto.protos.TraceConfig$StatsdMetadata;

        $r1 = r0.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Long triggering_subscription_id>;

        return $r1;
    }

    public java.lang.Void newBuilder()
    {
        perfetto.protos.TraceConfig$StatsdMetadata r0;
        java.lang.AssertionError $r1;

        r0 := @this: perfetto.protos.TraceConfig$StatsdMetadata;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;
    }

    public boolean equals(java.lang.Object)
    {
        perfetto.protos.TraceConfig$StatsdMetadata r0, $r3, $r5, $r8, $r11, $r14;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        okio.ByteString $r2, $r4;
        java.lang.Long $r6, $r7, $r12, $r13, $r15, $r16;
        java.lang.Integer $r9, $r10;

        r0 := @this: perfetto.protos.TraceConfig$StatsdMetadata;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof perfetto.protos.TraceConfig$StatsdMetadata;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<perfetto.protos.TraceConfig$StatsdMetadata: okio.ByteString unknownFields()>();

        $r3 = (perfetto.protos.TraceConfig$StatsdMetadata) r1;

        $r4 = virtualinvoke $r3.<perfetto.protos.TraceConfig$StatsdMetadata: okio.ByteString unknownFields()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r4);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $r7 = r0.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Long triggering_alert_id>;

        $r5 = (perfetto.protos.TraceConfig$StatsdMetadata) r1;

        $r6 = $r5.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Long triggering_alert_id>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, $r6);

        if $z2 != 0 goto label4;

        return 0;

     label4:
        $r10 = r0.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Integer triggering_config_uid>;

        $r8 = (perfetto.protos.TraceConfig$StatsdMetadata) r1;

        $r9 = $r8.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Integer triggering_config_uid>;

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r10, $r9);

        if $z3 != 0 goto label5;

        return 0;

     label5:
        $r13 = r0.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Long triggering_config_id>;

        $r11 = (perfetto.protos.TraceConfig$StatsdMetadata) r1;

        $r12 = $r11.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Long triggering_config_id>;

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r13, $r12);

        if $z4 != 0 goto label6;

        return 0;

     label6:
        $r16 = r0.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Long triggering_subscription_id>;

        $r14 = (perfetto.protos.TraceConfig$StatsdMetadata) r1;

        $r15 = $r14.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Long triggering_subscription_id>;

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r16, $r15);

        if $z5 != 0 goto label7;

        return 0;

     label7:
        return 1;
    }

    public int hashCode()
    {
        perfetto.protos.TraceConfig$StatsdMetadata r0;
        okio.ByteString $r1;
        java.lang.Long $r2, $r4, $r5;
        int $i0, $i1, $i2, $i3, i4, i5, $i6, i7, $i8, i9, $i10, i11, $i12;
        java.lang.Integer $r3;

        r0 := @this: perfetto.protos.TraceConfig$StatsdMetadata;

        i4 = r0.<perfetto.protos.TraceConfig$StatsdMetadata: int hashCode>;

        if i4 != 0 goto label9;

        $r1 = virtualinvoke r0.<perfetto.protos.TraceConfig$StatsdMetadata: okio.ByteString unknownFields()>();

        i5 = virtualinvoke $r1.<okio.ByteString: int hashCode()>();

        $i0 = i5 * 37;

        $r2 = r0.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Long triggering_alert_id>;

        if $r2 != null goto label1;

        $i6 = 0;

        goto label2;

     label1:
        $i6 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

     label2:
        i7 = $i0 + $i6;

        $i1 = i7 * 37;

        $r3 = r0.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Integer triggering_config_uid>;

        if $r3 != null goto label3;

        $i8 = 0;

        goto label4;

     label3:
        $i8 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

     label4:
        i9 = $i1 + $i8;

        $i2 = i9 * 37;

        $r4 = r0.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Long triggering_config_id>;

        if $r4 != null goto label5;

        $i10 = 0;

        goto label6;

     label5:
        $i10 = virtualinvoke $r4.<java.lang.Object: int hashCode()>();

     label6:
        i11 = $i2 + $i10;

        $i3 = i11 * 37;

        $r5 = r0.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Long triggering_subscription_id>;

        if $r5 != null goto label7;

        $i12 = 0;

        goto label8;

     label7:
        $i12 = virtualinvoke $r5.<java.lang.Object: int hashCode()>();

     label8:
        i4 = $i3 + $i12;

        r0.<perfetto.protos.TraceConfig$StatsdMetadata: int hashCode> = i4;

     label9:
        return i4;
    }

    public java.lang.String toString()
    {
        perfetto.protos.TraceConfig$StatsdMetadata r0;
        java.util.List r1;
        java.util.ArrayList $r2;
        java.lang.Long $r3, $r5, $r6, $r12, $r15, $r21;
        java.lang.Integer $r4, $r18;
        java.lang.CharSequence $r7, $r8, $r9;
        java.lang.Iterable $r10;
        java.lang.String $r11, $r14, $r17, $r20, $r23;
        java.util.Collection $r13, $r16, $r19, $r22;

        r0 := @this: perfetto.protos.TraceConfig$StatsdMetadata;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r1 = (java.util.List) $r2;

        $r3 = r0.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Long triggering_alert_id>;

        if $r3 == null goto label1;

        $r22 = (java.util.Collection) r1;

        $r21 = r0.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Long triggering_alert_id>;

        $r23 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("triggering_alert_id=", $r21);

        interfaceinvoke $r22.<java.util.Collection: boolean add(java.lang.Object)>($r23);

     label1:
        $r4 = r0.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Integer triggering_config_uid>;

        if $r4 == null goto label2;

        $r19 = (java.util.Collection) r1;

        $r18 = r0.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Integer triggering_config_uid>;

        $r20 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("triggering_config_uid=", $r18);

        interfaceinvoke $r19.<java.util.Collection: boolean add(java.lang.Object)>($r20);

     label2:
        $r5 = r0.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Long triggering_config_id>;

        if $r5 == null goto label3;

        $r16 = (java.util.Collection) r1;

        $r15 = r0.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Long triggering_config_id>;

        $r17 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("triggering_config_id=", $r15);

        interfaceinvoke $r16.<java.util.Collection: boolean add(java.lang.Object)>($r17);

     label3:
        $r6 = r0.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Long triggering_subscription_id>;

        if $r6 == null goto label4;

        $r13 = (java.util.Collection) r1;

        $r12 = r0.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Long triggering_subscription_id>;

        $r14 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("triggering_subscription_id=", $r12);

        interfaceinvoke $r13.<java.util.Collection: boolean add(java.lang.Object)>($r14);

     label4:
        $r10 = (java.lang.Iterable) r1;

        $r9 = (java.lang.CharSequence) ", ";

        $r8 = (java.lang.CharSequence) "StatsdMetadata{";

        $r7 = (java.lang.CharSequence) "}";

        $r11 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r10, $r9, $r8, $r7, 0, null, null, 56, null);

        return $r11;
    }

    public final perfetto.protos.TraceConfig$StatsdMetadata copy(java.lang.Long, java.lang.Integer, java.lang.Long, java.lang.Long, okio.ByteString)
    {
        perfetto.protos.TraceConfig$StatsdMetadata r0, $r6;
        java.lang.Long r1, r3, r4;
        java.lang.Integer r2;
        okio.ByteString r5;

        r0 := @this: perfetto.protos.TraceConfig$StatsdMetadata;

        r1 := @parameter0: java.lang.Long;

        r2 := @parameter1: java.lang.Integer;

        r3 := @parameter2: java.lang.Long;

        r4 := @parameter3: java.lang.Long;

        r5 := @parameter4: okio.ByteString;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "unknownFields");

        $r6 = new perfetto.protos.TraceConfig$StatsdMetadata;

        specialinvoke $r6.<perfetto.protos.TraceConfig$StatsdMetadata: void <init>(java.lang.Long,java.lang.Integer,java.lang.Long,java.lang.Long,okio.ByteString)>(r1, r2, r3, r4, r5);

        return $r6;
    }

    public static perfetto.protos.TraceConfig$StatsdMetadata copy$default(perfetto.protos.TraceConfig$StatsdMetadata, java.lang.Long, java.lang.Integer, java.lang.Long, java.lang.Long, okio.ByteString, int, java.lang.Object)
    {
        perfetto.protos.TraceConfig$StatsdMetadata r0, $r2;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object r1;
        java.lang.Long r3, r5, r6;
        java.lang.Integer r4;
        okio.ByteString r7;

        r0 := @parameter0: perfetto.protos.TraceConfig$StatsdMetadata;

        r3 := @parameter1: java.lang.Long;

        r4 := @parameter2: java.lang.Integer;

        r5 := @parameter3: java.lang.Long;

        r6 := @parameter4: java.lang.Long;

        r7 := @parameter5: okio.ByteString;

        i0 := @parameter6: int;

        r1 := @parameter7: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r3 = r0.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Long triggering_alert_id>;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r4 = r0.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Integer triggering_config_uid>;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        r5 = r0.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Long triggering_config_id>;

     label3:
        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        r6 = r0.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Long triggering_subscription_id>;

     label4:
        $i5 = i0 & 16;

        if $i5 == 0 goto label5;

        r7 = virtualinvoke r0.<perfetto.protos.TraceConfig$StatsdMetadata: okio.ByteString unknownFields()>();

     label5:
        $r2 = virtualinvoke r0.<perfetto.protos.TraceConfig$StatsdMetadata: perfetto.protos.TraceConfig$StatsdMetadata copy(java.lang.Long,java.lang.Integer,java.lang.Long,java.lang.Long,okio.ByteString)>(r3, r4, r5, r6, r7);

        return $r2;
    }

    public void <init>()
    {
        perfetto.protos.TraceConfig$StatsdMetadata r0;

        r0 := @this: perfetto.protos.TraceConfig$StatsdMetadata;

        specialinvoke r0.<perfetto.protos.TraceConfig$StatsdMetadata: void <init>(java.lang.Long,java.lang.Integer,java.lang.Long,java.lang.Long,okio.ByteString,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, null, null, null, null, 31, null);

        return;
    }

    public volatile com.squareup.wire.Message$Builder newBuilder()
    {
        perfetto.protos.TraceConfig$StatsdMetadata r0;
        java.lang.Void $r1;
        com.squareup.wire.Message$Builder $r2;

        r0 := @this: perfetto.protos.TraceConfig$StatsdMetadata;

        $r1 = virtualinvoke r0.<perfetto.protos.TraceConfig$StatsdMetadata: java.lang.Void newBuilder()>();

        $r2 = (com.squareup.wire.Message$Builder) $r1;

        return $r2;
    }

    static void <clinit>()
    {
        com.squareup.wire.FieldEncoding r0;
        kotlin.reflect.KClass r1;
        com.squareup.wire.Syntax r2;
        perfetto.protos.TraceConfig$StatsdMetadata$Companion $r3;
        perfetto.protos.TraceConfig$StatsdMetadata$Companion$ADAPTER$1 $r4;
        com.squareup.wire.ProtoAdapter $r5;

        $r3 = new perfetto.protos.TraceConfig$StatsdMetadata$Companion;

        specialinvoke $r3.<perfetto.protos.TraceConfig$StatsdMetadata$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <perfetto.protos.TraceConfig$StatsdMetadata: perfetto.protos.TraceConfig$StatsdMetadata$Companion Companion> = $r3;

        r0 = <com.squareup.wire.FieldEncoding: com.squareup.wire.FieldEncoding LENGTH_DELIMITED>;

        r1 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Lperfetto/protos/TraceConfig$StatsdMetadata;");

        r2 = <com.squareup.wire.Syntax: com.squareup.wire.Syntax PROTO_2>;

        $r4 = new perfetto.protos.TraceConfig$StatsdMetadata$Companion$ADAPTER$1;

        specialinvoke $r4.<perfetto.protos.TraceConfig$StatsdMetadata$Companion$ADAPTER$1: void <init>(com.squareup.wire.FieldEncoding,kotlin.reflect.KClass,com.squareup.wire.Syntax)>(r0, r1, r2);

        $r5 = (com.squareup.wire.ProtoAdapter) $r4;

        <perfetto.protos.TraceConfig$StatsdMetadata: com.squareup.wire.ProtoAdapter ADAPTER> = $r5;

        return;
    }

perfetto.protos.TraceConfig$TraceFilter$Companion$ADAPTER$1
    void <init>(com.squareup.wire.FieldEncoding, kotlin.reflect.KClass, com.squareup.wire.Syntax)
    {
        perfetto.protos.TraceConfig$TraceFilter$Companion$ADAPTER$1 r0;
        com.squareup.wire.FieldEncoding $r1;
        kotlin.reflect.KClass $r2;
        com.squareup.wire.Syntax $r3;

        r0 := @this: perfetto.protos.TraceConfig$TraceFilter$Companion$ADAPTER$1;

        $r1 := @parameter0: com.squareup.wire.FieldEncoding;

        $r2 := @parameter1: kotlin.reflect.KClass;

        $r3 := @parameter2: com.squareup.wire.Syntax;

        specialinvoke r0.<com.squareup.wire.ProtoAdapter: void <init>(com.squareup.wire.FieldEncoding,kotlin.reflect.KClass,java.lang.String,com.squareup.wire.Syntax,java.lang.Object)>($r1, $r2, "type.googleapis.com/perfetto.protos.TraceConfig.TraceFilter", $r3, null);

        return;
    }

    public int encodedSize(perfetto.protos.TraceConfig$TraceFilter)
    {
        perfetto.protos.TraceConfig$TraceFilter$Companion$ADAPTER$1 r0;
        perfetto.protos.TraceConfig$TraceFilter r1;
        okio.ByteString $r2, $r4;
        com.squareup.wire.ProtoAdapter $r3;
        int $i0, i1, i2;

        r0 := @this: perfetto.protos.TraceConfig$TraceFilter$Companion$ADAPTER$1;

        r1 := @parameter0: perfetto.protos.TraceConfig$TraceFilter;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = virtualinvoke r1.<perfetto.protos.TraceConfig$TraceFilter: okio.ByteString unknownFields()>();

        i1 = virtualinvoke $r2.<okio.ByteString: int size()>();

        $r3 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BYTES>;

        $r4 = virtualinvoke r1.<perfetto.protos.TraceConfig$TraceFilter: okio.ByteString getBytecode()>();

        $i0 = virtualinvoke $r3.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(1, $r4);

        i2 = i1 + $i0;

        return i2;
    }

    public void encode(com.squareup.wire.ProtoWriter, perfetto.protos.TraceConfig$TraceFilter)
    {
        perfetto.protos.TraceConfig$TraceFilter$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoWriter r1;
        perfetto.protos.TraceConfig$TraceFilter r2;
        com.squareup.wire.ProtoAdapter $r3;
        okio.ByteString $r4, $r5;

        r0 := @this: perfetto.protos.TraceConfig$TraceFilter$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoWriter;

        r2 := @parameter1: perfetto.protos.TraceConfig$TraceFilter;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "writer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "value");

        $r3 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BYTES>;

        $r4 = virtualinvoke r2.<perfetto.protos.TraceConfig$TraceFilter: okio.ByteString getBytecode()>();

        virtualinvoke $r3.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 1, $r4);

        $r5 = virtualinvoke r2.<perfetto.protos.TraceConfig$TraceFilter: okio.ByteString unknownFields()>();

        virtualinvoke r1.<com.squareup.wire.ProtoWriter: void writeBytes(okio.ByteString)>($r5);

        return;
    }

    public perfetto.protos.TraceConfig$TraceFilter decode(com.squareup.wire.ProtoReader)
    {
        perfetto.protos.TraceConfig$TraceFilter$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoReader r1, r3;
        okio.ByteString r2, $r6;
        long l0;
        int i1, i2;
        com.squareup.wire.ProtoAdapter $r4;
        perfetto.protos.TraceConfig$TraceFilter $r5;
        java.lang.Object r7;

        r0 := @this: perfetto.protos.TraceConfig$TraceFilter$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoReader;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "reader");

        r7 = null;

        r3 = r1;

        l0 = virtualinvoke r3.<com.squareup.wire.ProtoReader: long beginMessage()>();

     label1:
        i1 = virtualinvoke r3.<com.squareup.wire.ProtoReader: int nextTag()>();

        if i1 != -1 goto label2;

        goto label5;

     label2:
        i2 = i1;

        if i2 != 1 goto label3;

        $r4 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter BYTES>;

        r7 = virtualinvoke $r4.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label4;

     label3:
        virtualinvoke r1.<com.squareup.wire.ProtoReader: void readUnknownField(int)>(i2);

     label4:
        goto label1;

     label5:
        r2 = virtualinvoke r3.<com.squareup.wire.ProtoReader: okio.ByteString endMessageAndGetUnknownFields(long)>(l0);

        $r5 = new perfetto.protos.TraceConfig$TraceFilter;

        $r6 = (okio.ByteString) r7;

        specialinvoke $r5.<perfetto.protos.TraceConfig$TraceFilter: void <init>(okio.ByteString,okio.ByteString)>($r6, r2);

        return $r5;
    }

    public perfetto.protos.TraceConfig$TraceFilter redact(perfetto.protos.TraceConfig$TraceFilter)
    {
        perfetto.protos.TraceConfig$TraceFilter$Companion$ADAPTER$1 r0;
        perfetto.protos.TraceConfig$TraceFilter r1, $r3;
        okio.ByteString $r2;

        r0 := @this: perfetto.protos.TraceConfig$TraceFilter$Companion$ADAPTER$1;

        r1 := @parameter0: perfetto.protos.TraceConfig$TraceFilter;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = <okio.ByteString: okio.ByteString EMPTY>;

        $r3 = staticinvoke <perfetto.protos.TraceConfig$TraceFilter: perfetto.protos.TraceConfig$TraceFilter copy$default(perfetto.protos.TraceConfig$TraceFilter,okio.ByteString,okio.ByteString,int,java.lang.Object)>(r1, null, $r2, 1, null);

        return $r3;
    }

    public volatile int encodedSize(java.lang.Object)
    {
        perfetto.protos.TraceConfig$TraceFilter$Companion$ADAPTER$1 r0;
        java.lang.Object r1;
        perfetto.protos.TraceConfig$TraceFilter $r2;
        int $i0;

        r0 := @this: perfetto.protos.TraceConfig$TraceFilter$Companion$ADAPTER$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (perfetto.protos.TraceConfig$TraceFilter) r1;

        $i0 = virtualinvoke r0.<perfetto.protos.TraceConfig$TraceFilter$Companion$ADAPTER$1: int encodedSize(perfetto.protos.TraceConfig$TraceFilter)>($r2);

        return $i0;
    }

    public volatile void encode(com.squareup.wire.ProtoWriter, java.lang.Object)
    {
        perfetto.protos.TraceConfig$TraceFilter$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoWriter r1;
        java.lang.Object r2;
        perfetto.protos.TraceConfig$TraceFilter $r3;

        r0 := @this: perfetto.protos.TraceConfig$TraceFilter$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoWriter;

        r2 := @parameter1: java.lang.Object;

        $r3 = (perfetto.protos.TraceConfig$TraceFilter) r2;

        virtualinvoke r0.<perfetto.protos.TraceConfig$TraceFilter$Companion$ADAPTER$1: void encode(com.squareup.wire.ProtoWriter,perfetto.protos.TraceConfig$TraceFilter)>(r1, $r3);

        return;
    }

    public volatile java.lang.Object decode(com.squareup.wire.ProtoReader)
    {
        perfetto.protos.TraceConfig$TraceFilter$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoReader r1;
        perfetto.protos.TraceConfig$TraceFilter $r2;

        r0 := @this: perfetto.protos.TraceConfig$TraceFilter$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoReader;

        $r2 = virtualinvoke r0.<perfetto.protos.TraceConfig$TraceFilter$Companion$ADAPTER$1: perfetto.protos.TraceConfig$TraceFilter decode(com.squareup.wire.ProtoReader)>(r1);

        return $r2;
    }

    public volatile java.lang.Object redact(java.lang.Object)
    {
        perfetto.protos.TraceConfig$TraceFilter$Companion$ADAPTER$1 r0;
        java.lang.Object r1;
        perfetto.protos.TraceConfig$TraceFilter $r2, $r3;

        r0 := @this: perfetto.protos.TraceConfig$TraceFilter$Companion$ADAPTER$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (perfetto.protos.TraceConfig$TraceFilter) r1;

        $r3 = virtualinvoke r0.<perfetto.protos.TraceConfig$TraceFilter$Companion$ADAPTER$1: perfetto.protos.TraceConfig$TraceFilter redact(perfetto.protos.TraceConfig$TraceFilter)>($r2);

        return $r3;
    }

perfetto.protos.TraceConfig$TraceFilter$Companion
    private void <init>()
    {
        perfetto.protos.TraceConfig$TraceFilter$Companion r0;

        r0 := @this: perfetto.protos.TraceConfig$TraceFilter$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.TraceConfig$TraceFilter$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: perfetto.protos.TraceConfig$TraceFilter$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<perfetto.protos.TraceConfig$TraceFilter$Companion: void <init>()>();

        return;
    }

perfetto.protos.TraceConfig$TraceFilter
<perfetto.protos.TraceConfig$TraceFilter: perfetto.protos.TraceConfig$TraceFilter$Companion Companion>
<perfetto.protos.TraceConfig$TraceFilter: okio.ByteString bytecode>
<perfetto.protos.TraceConfig$TraceFilter: com.squareup.wire.ProtoAdapter ADAPTER>
<perfetto.protos.TraceConfig$TraceFilter: long serialVersionUID>
    public void <init>(okio.ByteString, okio.ByteString)
    {
        perfetto.protos.TraceConfig$TraceFilter r0;
        okio.ByteString r1, r2;
        com.squareup.wire.ProtoAdapter $r3;

        r0 := @this: perfetto.protos.TraceConfig$TraceFilter;

        r1 := @parameter0: okio.ByteString;

        r2 := @parameter1: okio.ByteString;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "unknownFields");

        $r3 = <perfetto.protos.TraceConfig$TraceFilter: com.squareup.wire.ProtoAdapter ADAPTER>;

        specialinvoke r0.<com.squareup.wire.Message: void <init>(com.squareup.wire.ProtoAdapter,okio.ByteString)>($r3, r2);

        r0.<perfetto.protos.TraceConfig$TraceFilter: okio.ByteString bytecode> = r1;

        return;
    }

    public void <init>(okio.ByteString, okio.ByteString, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.TraceConfig$TraceFilter r0;
        int i0, $i1, $i2;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        okio.ByteString r2, r3;

        r0 := @this: perfetto.protos.TraceConfig$TraceFilter;

        r2 := @parameter0: okio.ByteString;

        r3 := @parameter1: okio.ByteString;

        i0 := @parameter2: int;

        r1 := @parameter3: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r2 = null;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r3 = <okio.ByteString: okio.ByteString EMPTY>;

     label2:
        specialinvoke r0.<perfetto.protos.TraceConfig$TraceFilter: void <init>(okio.ByteString,okio.ByteString)>(r2, r3);

        return;
    }

    public final okio.ByteString getBytecode()
    {
        perfetto.protos.TraceConfig$TraceFilter r0;
        okio.ByteString $r1;

        r0 := @this: perfetto.protos.TraceConfig$TraceFilter;

        $r1 = r0.<perfetto.protos.TraceConfig$TraceFilter: okio.ByteString bytecode>;

        return $r1;
    }

    public java.lang.Void newBuilder()
    {
        perfetto.protos.TraceConfig$TraceFilter r0;
        java.lang.AssertionError $r1;

        r0 := @this: perfetto.protos.TraceConfig$TraceFilter;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;
    }

    public boolean equals(java.lang.Object)
    {
        perfetto.protos.TraceConfig$TraceFilter r0, $r3, $r5;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        okio.ByteString $r2, $r4, $r6, $r7;

        r0 := @this: perfetto.protos.TraceConfig$TraceFilter;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof perfetto.protos.TraceConfig$TraceFilter;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<perfetto.protos.TraceConfig$TraceFilter: okio.ByteString unknownFields()>();

        $r3 = (perfetto.protos.TraceConfig$TraceFilter) r1;

        $r4 = virtualinvoke $r3.<perfetto.protos.TraceConfig$TraceFilter: okio.ByteString unknownFields()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r4);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $r7 = r0.<perfetto.protos.TraceConfig$TraceFilter: okio.ByteString bytecode>;

        $r5 = (perfetto.protos.TraceConfig$TraceFilter) r1;

        $r6 = $r5.<perfetto.protos.TraceConfig$TraceFilter: okio.ByteString bytecode>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, $r6);

        if $z2 != 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    public int hashCode()
    {
        perfetto.protos.TraceConfig$TraceFilter r0;
        okio.ByteString $r1, $r2;
        int $i0, i1, i2, $i3;

        r0 := @this: perfetto.protos.TraceConfig$TraceFilter;

        i1 = r0.<perfetto.protos.TraceConfig$TraceFilter: int hashCode>;

        if i1 != 0 goto label3;

        $r1 = virtualinvoke r0.<perfetto.protos.TraceConfig$TraceFilter: okio.ByteString unknownFields()>();

        i2 = virtualinvoke $r1.<okio.ByteString: int hashCode()>();

        $i0 = i2 * 37;

        $r2 = r0.<perfetto.protos.TraceConfig$TraceFilter: okio.ByteString bytecode>;

        if $r2 != null goto label1;

        $i3 = 0;

        goto label2;

     label1:
        $i3 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

     label2:
        i1 = $i0 + $i3;

        r0.<perfetto.protos.TraceConfig$TraceFilter: int hashCode> = i1;

     label3:
        return i1;
    }

    public java.lang.String toString()
    {
        perfetto.protos.TraceConfig$TraceFilter r0;
        java.util.List r1;
        java.util.ArrayList $r2;
        okio.ByteString $r3, $r9;
        java.lang.CharSequence $r4, $r5, $r6;
        java.lang.Iterable $r7;
        java.lang.String $r8, $r11;
        java.util.Collection $r10;

        r0 := @this: perfetto.protos.TraceConfig$TraceFilter;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r1 = (java.util.List) $r2;

        $r3 = r0.<perfetto.protos.TraceConfig$TraceFilter: okio.ByteString bytecode>;

        if $r3 == null goto label1;

        $r10 = (java.util.Collection) r1;

        $r9 = r0.<perfetto.protos.TraceConfig$TraceFilter: okio.ByteString bytecode>;

        $r11 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("bytecode=", $r9);

        interfaceinvoke $r10.<java.util.Collection: boolean add(java.lang.Object)>($r11);

     label1:
        $r7 = (java.lang.Iterable) r1;

        $r6 = (java.lang.CharSequence) ", ";

        $r5 = (java.lang.CharSequence) "TraceFilter{";

        $r4 = (java.lang.CharSequence) "}";

        $r8 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r7, $r6, $r5, $r4, 0, null, null, 56, null);

        return $r8;
    }

    public final perfetto.protos.TraceConfig$TraceFilter copy(okio.ByteString, okio.ByteString)
    {
        perfetto.protos.TraceConfig$TraceFilter r0, $r3;
        okio.ByteString r1, r2;

        r0 := @this: perfetto.protos.TraceConfig$TraceFilter;

        r1 := @parameter0: okio.ByteString;

        r2 := @parameter1: okio.ByteString;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "unknownFields");

        $r3 = new perfetto.protos.TraceConfig$TraceFilter;

        specialinvoke $r3.<perfetto.protos.TraceConfig$TraceFilter: void <init>(okio.ByteString,okio.ByteString)>(r1, r2);

        return $r3;
    }

    public static perfetto.protos.TraceConfig$TraceFilter copy$default(perfetto.protos.TraceConfig$TraceFilter, okio.ByteString, okio.ByteString, int, java.lang.Object)
    {
        perfetto.protos.TraceConfig$TraceFilter r0, $r2;
        int i0, $i1, $i2;
        java.lang.Object r1;
        okio.ByteString r3, r4;

        r0 := @parameter0: perfetto.protos.TraceConfig$TraceFilter;

        r3 := @parameter1: okio.ByteString;

        r4 := @parameter2: okio.ByteString;

        i0 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r3 = r0.<perfetto.protos.TraceConfig$TraceFilter: okio.ByteString bytecode>;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r4 = virtualinvoke r0.<perfetto.protos.TraceConfig$TraceFilter: okio.ByteString unknownFields()>();

     label2:
        $r2 = virtualinvoke r0.<perfetto.protos.TraceConfig$TraceFilter: perfetto.protos.TraceConfig$TraceFilter copy(okio.ByteString,okio.ByteString)>(r3, r4);

        return $r2;
    }

    public void <init>()
    {
        perfetto.protos.TraceConfig$TraceFilter r0;

        r0 := @this: perfetto.protos.TraceConfig$TraceFilter;

        specialinvoke r0.<perfetto.protos.TraceConfig$TraceFilter: void <init>(okio.ByteString,okio.ByteString,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, null, 3, null);

        return;
    }

    public volatile com.squareup.wire.Message$Builder newBuilder()
    {
        perfetto.protos.TraceConfig$TraceFilter r0;
        java.lang.Void $r1;
        com.squareup.wire.Message$Builder $r2;

        r0 := @this: perfetto.protos.TraceConfig$TraceFilter;

        $r1 = virtualinvoke r0.<perfetto.protos.TraceConfig$TraceFilter: java.lang.Void newBuilder()>();

        $r2 = (com.squareup.wire.Message$Builder) $r1;

        return $r2;
    }

    static void <clinit>()
    {
        com.squareup.wire.FieldEncoding r0;
        kotlin.reflect.KClass r1;
        com.squareup.wire.Syntax r2;
        perfetto.protos.TraceConfig$TraceFilter$Companion $r3;
        perfetto.protos.TraceConfig$TraceFilter$Companion$ADAPTER$1 $r4;
        com.squareup.wire.ProtoAdapter $r5;

        $r3 = new perfetto.protos.TraceConfig$TraceFilter$Companion;

        specialinvoke $r3.<perfetto.protos.TraceConfig$TraceFilter$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <perfetto.protos.TraceConfig$TraceFilter: perfetto.protos.TraceConfig$TraceFilter$Companion Companion> = $r3;

        r0 = <com.squareup.wire.FieldEncoding: com.squareup.wire.FieldEncoding LENGTH_DELIMITED>;

        r1 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Lperfetto/protos/TraceConfig$TraceFilter;");

        r2 = <com.squareup.wire.Syntax: com.squareup.wire.Syntax PROTO_2>;

        $r4 = new perfetto.protos.TraceConfig$TraceFilter$Companion$ADAPTER$1;

        specialinvoke $r4.<perfetto.protos.TraceConfig$TraceFilter$Companion$ADAPTER$1: void <init>(com.squareup.wire.FieldEncoding,kotlin.reflect.KClass,com.squareup.wire.Syntax)>(r0, r1, r2);

        $r5 = (com.squareup.wire.ProtoAdapter) $r4;

        <perfetto.protos.TraceConfig$TraceFilter: com.squareup.wire.ProtoAdapter ADAPTER> = $r5;

        return;
    }

perfetto.protos.TraceConfig$TriggerConfig$Companion$ADAPTER$1
    void <init>(com.squareup.wire.FieldEncoding, kotlin.reflect.KClass, com.squareup.wire.Syntax)
    {
        perfetto.protos.TraceConfig$TriggerConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.FieldEncoding $r1;
        kotlin.reflect.KClass $r2;
        com.squareup.wire.Syntax $r3;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$Companion$ADAPTER$1;

        $r1 := @parameter0: com.squareup.wire.FieldEncoding;

        $r2 := @parameter1: kotlin.reflect.KClass;

        $r3 := @parameter2: com.squareup.wire.Syntax;

        specialinvoke r0.<com.squareup.wire.ProtoAdapter: void <init>(com.squareup.wire.FieldEncoding,kotlin.reflect.KClass,java.lang.String,com.squareup.wire.Syntax,java.lang.Object)>($r1, $r2, "type.googleapis.com/perfetto.protos.TraceConfig.TriggerConfig", $r3, null);

        return;
    }

    public int encodedSize(perfetto.protos.TraceConfig$TriggerConfig)
    {
        perfetto.protos.TraceConfig$TriggerConfig$Companion$ADAPTER$1 r0;
        perfetto.protos.TraceConfig$TriggerConfig r1;
        okio.ByteString $r2;
        com.squareup.wire.ProtoAdapter $r3, $r5, $r6, $r8;
        perfetto.protos.TraceConfig$TriggerConfig$TriggerMode $r4;
        int $i0, $i1, $i2, i3, i4, i5, i6;
        java.util.List $r7;
        java.lang.Integer $r9;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$Companion$ADAPTER$1;

        r1 := @parameter0: perfetto.protos.TraceConfig$TriggerConfig;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = virtualinvoke r1.<perfetto.protos.TraceConfig$TriggerConfig: okio.ByteString unknownFields()>();

        i3 = virtualinvoke $r2.<okio.ByteString: int size()>();

        $r3 = <perfetto.protos.TraceConfig$TriggerConfig$TriggerMode: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r4 = virtualinvoke r1.<perfetto.protos.TraceConfig$TriggerConfig: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode getTrigger_mode()>();

        $i0 = virtualinvoke $r3.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(1, $r4);

        i4 = i3 + $i0;

        $r5 = <perfetto.protos.TraceConfig$TriggerConfig$Trigger: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r6 = virtualinvoke $r5.<com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter asRepeated()>();

        $r7 = virtualinvoke r1.<perfetto.protos.TraceConfig$TriggerConfig: java.util.List getTriggers()>();

        $i1 = virtualinvoke $r6.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(2, $r7);

        i5 = i4 + $i1;

        $r8 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r9 = virtualinvoke r1.<perfetto.protos.TraceConfig$TriggerConfig: java.lang.Integer getTrigger_timeout_ms()>();

        $i2 = virtualinvoke $r8.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(3, $r9);

        i6 = i5 + $i2;

        return i6;
    }

    public void encode(com.squareup.wire.ProtoWriter, perfetto.protos.TraceConfig$TriggerConfig)
    {
        perfetto.protos.TraceConfig$TriggerConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoWriter r1;
        perfetto.protos.TraceConfig$TriggerConfig r2;
        com.squareup.wire.ProtoAdapter $r3, $r5, $r6, $r8;
        perfetto.protos.TraceConfig$TriggerConfig$TriggerMode $r4;
        java.util.List $r7;
        java.lang.Integer $r9;
        okio.ByteString $r10;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoWriter;

        r2 := @parameter1: perfetto.protos.TraceConfig$TriggerConfig;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "writer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "value");

        $r3 = <perfetto.protos.TraceConfig$TriggerConfig$TriggerMode: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r4 = virtualinvoke r2.<perfetto.protos.TraceConfig$TriggerConfig: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode getTrigger_mode()>();

        virtualinvoke $r3.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 1, $r4);

        $r5 = <perfetto.protos.TraceConfig$TriggerConfig$Trigger: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r6 = virtualinvoke $r5.<com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter asRepeated()>();

        $r7 = virtualinvoke r2.<perfetto.protos.TraceConfig$TriggerConfig: java.util.List getTriggers()>();

        virtualinvoke $r6.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 2, $r7);

        $r8 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r9 = virtualinvoke r2.<perfetto.protos.TraceConfig$TriggerConfig: java.lang.Integer getTrigger_timeout_ms()>();

        virtualinvoke $r8.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 3, $r9);

        $r10 = virtualinvoke r2.<perfetto.protos.TraceConfig$TriggerConfig: okio.ByteString unknownFields()>();

        virtualinvoke r1.<com.squareup.wire.ProtoWriter: void writeBytes(okio.ByteString)>($r10);

        return;
    }

    public perfetto.protos.TraceConfig$TriggerConfig decode(com.squareup.wire.ProtoReader)
    {
        perfetto.protos.TraceConfig$TriggerConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoReader r1, r4;
        java.util.List r2;
        okio.ByteString r3;
        long l0, $l4;
        int i1, i2, $i3;
        java.lang.Throwable r5, $r14;
        java.util.ArrayList $r6;
        com.squareup.wire.ProtoAdapter $r7, $r8, $r10;
        java.lang.Object $r9, r17, r18;
        perfetto.protos.TraceConfig$TriggerConfig $r11;
        java.lang.Integer $r12;
        perfetto.protos.TraceConfig$TriggerConfig$TriggerMode $r13;
        com.squareup.wire.FieldEncoding $r15;
        java.lang.Long $r16;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoReader;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "reader");

        r17 = null;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r2 = (java.util.List) $r6;

        r18 = null;

        r4 = r1;

        l0 = virtualinvoke r4.<com.squareup.wire.ProtoReader: long beginMessage()>();

     label01:
        i1 = virtualinvoke r4.<com.squareup.wire.ProtoReader: int nextTag()>();

        if i1 != -1 goto label02;

        goto label10;

     label02:
        i2 = i1;

        tableswitch(i2)
        {
            case 1: goto label03;
            case 2: goto label06;
            case 3: goto label07;
            default: goto label08;
        };

     label03:
        $r10 = <perfetto.protos.TraceConfig$TriggerConfig$TriggerMode: com.squareup.wire.ProtoAdapter ADAPTER>;

        r17 = virtualinvoke $r10.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

     label04:
        goto label09;

     label05:
        $r14 := @caughtexception;

        r5 = $r14;

        $r15 = <com.squareup.wire.FieldEncoding: com.squareup.wire.FieldEncoding VARINT>;

        $i3 = r5.<com.squareup.wire.ProtoAdapter$EnumConstantNotFoundException: int value>;

        $l4 = (long) $i3;

        $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        virtualinvoke r1.<com.squareup.wire.ProtoReader: void addUnknownField(int,com.squareup.wire.FieldEncoding,java.lang.Object)>(i2, $r15, $r16);

        goto label09;

     label06:
        $r8 = <perfetto.protos.TraceConfig$TriggerConfig$Trigger: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r9 = virtualinvoke $r8.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r9);

        goto label09;

     label07:
        $r7 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        r18 = virtualinvoke $r7.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label09;

     label08:
        virtualinvoke r1.<com.squareup.wire.ProtoReader: void readUnknownField(int)>(i2);

     label09:
        goto label01;

     label10:
        r3 = virtualinvoke r4.<com.squareup.wire.ProtoReader: okio.ByteString endMessageAndGetUnknownFields(long)>(l0);

        $r11 = new perfetto.protos.TraceConfig$TriggerConfig;

        $r13 = (perfetto.protos.TraceConfig$TriggerConfig$TriggerMode) r17;

        $r12 = (java.lang.Integer) r18;

        specialinvoke $r11.<perfetto.protos.TraceConfig$TriggerConfig: void <init>(perfetto.protos.TraceConfig$TriggerConfig$TriggerMode,java.util.List,java.lang.Integer,okio.ByteString)>($r13, r2, $r12, r3);

        return $r11;

        catch com.squareup.wire.ProtoAdapter$EnumConstantNotFoundException from label03 to label04 with label05;
    }

    public perfetto.protos.TraceConfig$TriggerConfig redact(perfetto.protos.TraceConfig$TriggerConfig)
    {
        perfetto.protos.TraceConfig$TriggerConfig$Companion$ADAPTER$1 r0;
        perfetto.protos.TraceConfig$TriggerConfig r1, $r6;
        java.util.List $r2, $r4;
        com.squareup.wire.ProtoAdapter $r3;
        okio.ByteString $r5;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$Companion$ADAPTER$1;

        r1 := @parameter0: perfetto.protos.TraceConfig$TriggerConfig;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = virtualinvoke r1.<perfetto.protos.TraceConfig$TriggerConfig: java.util.List getTriggers()>();

        $r3 = <perfetto.protos.TraceConfig$TriggerConfig$Trigger: com.squareup.wire.ProtoAdapter ADAPTER>;

        $r4 = staticinvoke <com.squareup.wire.internal.Internal: java.util.List '-redactElements'(java.util.List,com.squareup.wire.ProtoAdapter)>($r2, $r3);

        $r5 = <okio.ByteString: okio.ByteString EMPTY>;

        $r6 = staticinvoke <perfetto.protos.TraceConfig$TriggerConfig: perfetto.protos.TraceConfig$TriggerConfig copy$default(perfetto.protos.TraceConfig$TriggerConfig,perfetto.protos.TraceConfig$TriggerConfig$TriggerMode,java.util.List,java.lang.Integer,okio.ByteString,int,java.lang.Object)>(r1, null, $r4, null, $r5, 5, null);

        return $r6;
    }

    public volatile int encodedSize(java.lang.Object)
    {
        perfetto.protos.TraceConfig$TriggerConfig$Companion$ADAPTER$1 r0;
        java.lang.Object r1;
        perfetto.protos.TraceConfig$TriggerConfig $r2;
        int $i0;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$Companion$ADAPTER$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (perfetto.protos.TraceConfig$TriggerConfig) r1;

        $i0 = virtualinvoke r0.<perfetto.protos.TraceConfig$TriggerConfig$Companion$ADAPTER$1: int encodedSize(perfetto.protos.TraceConfig$TriggerConfig)>($r2);

        return $i0;
    }

    public volatile void encode(com.squareup.wire.ProtoWriter, java.lang.Object)
    {
        perfetto.protos.TraceConfig$TriggerConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoWriter r1;
        java.lang.Object r2;
        perfetto.protos.TraceConfig$TriggerConfig $r3;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoWriter;

        r2 := @parameter1: java.lang.Object;

        $r3 = (perfetto.protos.TraceConfig$TriggerConfig) r2;

        virtualinvoke r0.<perfetto.protos.TraceConfig$TriggerConfig$Companion$ADAPTER$1: void encode(com.squareup.wire.ProtoWriter,perfetto.protos.TraceConfig$TriggerConfig)>(r1, $r3);

        return;
    }

    public volatile java.lang.Object decode(com.squareup.wire.ProtoReader)
    {
        perfetto.protos.TraceConfig$TriggerConfig$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoReader r1;
        perfetto.protos.TraceConfig$TriggerConfig $r2;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoReader;

        $r2 = virtualinvoke r0.<perfetto.protos.TraceConfig$TriggerConfig$Companion$ADAPTER$1: perfetto.protos.TraceConfig$TriggerConfig decode(com.squareup.wire.ProtoReader)>(r1);

        return $r2;
    }

    public volatile java.lang.Object redact(java.lang.Object)
    {
        perfetto.protos.TraceConfig$TriggerConfig$Companion$ADAPTER$1 r0;
        java.lang.Object r1;
        perfetto.protos.TraceConfig$TriggerConfig $r2, $r3;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$Companion$ADAPTER$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (perfetto.protos.TraceConfig$TriggerConfig) r1;

        $r3 = virtualinvoke r0.<perfetto.protos.TraceConfig$TriggerConfig$Companion$ADAPTER$1: perfetto.protos.TraceConfig$TriggerConfig redact(perfetto.protos.TraceConfig$TriggerConfig)>($r2);

        return $r3;
    }

perfetto.protos.TraceConfig$TriggerConfig$Companion
    private void <init>()
    {
        perfetto.protos.TraceConfig$TriggerConfig$Companion r0;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.TraceConfig$TriggerConfig$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<perfetto.protos.TraceConfig$TriggerConfig$Companion: void <init>()>();

        return;
    }

perfetto.protos.TraceConfig$TriggerConfig$Trigger$Companion$ADAPTER$1
    void <init>(com.squareup.wire.FieldEncoding, kotlin.reflect.KClass, com.squareup.wire.Syntax)
    {
        perfetto.protos.TraceConfig$TriggerConfig$Trigger$Companion$ADAPTER$1 r0;
        com.squareup.wire.FieldEncoding $r1;
        kotlin.reflect.KClass $r2;
        com.squareup.wire.Syntax $r3;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$Trigger$Companion$ADAPTER$1;

        $r1 := @parameter0: com.squareup.wire.FieldEncoding;

        $r2 := @parameter1: kotlin.reflect.KClass;

        $r3 := @parameter2: com.squareup.wire.Syntax;

        specialinvoke r0.<com.squareup.wire.ProtoAdapter: void <init>(com.squareup.wire.FieldEncoding,kotlin.reflect.KClass,java.lang.String,com.squareup.wire.Syntax,java.lang.Object)>($r1, $r2, "type.googleapis.com/perfetto.protos.TraceConfig.TriggerConfig.Trigger", $r3, null);

        return;
    }

    public int encodedSize(perfetto.protos.TraceConfig$TriggerConfig$Trigger)
    {
        perfetto.protos.TraceConfig$TriggerConfig$Trigger$Companion$ADAPTER$1 r0;
        perfetto.protos.TraceConfig$TriggerConfig$Trigger r1;
        okio.ByteString $r2;
        com.squareup.wire.ProtoAdapter $r3, $r5, $r7, $r9, $r11;
        java.lang.String $r4, $r6;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8, i9, i10;
        java.lang.Integer $r8, $r10;
        java.lang.Double $r12;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$Trigger$Companion$ADAPTER$1;

        r1 := @parameter0: perfetto.protos.TraceConfig$TriggerConfig$Trigger;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = virtualinvoke r1.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: okio.ByteString unknownFields()>();

        i5 = virtualinvoke $r2.<okio.ByteString: int size()>();

        $r3 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        $r4 = virtualinvoke r1.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.String getName()>();

        $i0 = virtualinvoke $r3.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(1, $r4);

        i6 = i5 + $i0;

        $r5 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        $r6 = virtualinvoke r1.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.String getProducer_name_regex()>();

        $i1 = virtualinvoke $r5.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(2, $r6);

        i7 = i6 + $i1;

        $r7 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r8 = virtualinvoke r1.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.Integer getStop_delay_ms()>();

        $i2 = virtualinvoke $r7.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(3, $r8);

        i8 = i7 + $i2;

        $r9 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r10 = virtualinvoke r1.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.Integer getMax_per_24_h()>();

        $i3 = virtualinvoke $r9.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(4, $r10);

        i9 = i8 + $i3;

        $r11 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter DOUBLE>;

        $r12 = virtualinvoke r1.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.Double getSkip_probability()>();

        $i4 = virtualinvoke $r11.<com.squareup.wire.ProtoAdapter: int encodedSizeWithTag(int,java.lang.Object)>(5, $r12);

        i10 = i9 + $i4;

        return i10;
    }

    public void encode(com.squareup.wire.ProtoWriter, perfetto.protos.TraceConfig$TriggerConfig$Trigger)
    {
        perfetto.protos.TraceConfig$TriggerConfig$Trigger$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoWriter r1;
        perfetto.protos.TraceConfig$TriggerConfig$Trigger r2;
        com.squareup.wire.ProtoAdapter $r3, $r5, $r7, $r9, $r11;
        java.lang.String $r4, $r6;
        java.lang.Integer $r8, $r10;
        java.lang.Double $r12;
        okio.ByteString $r13;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$Trigger$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoWriter;

        r2 := @parameter1: perfetto.protos.TraceConfig$TriggerConfig$Trigger;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "writer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "value");

        $r3 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        $r4 = virtualinvoke r2.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.String getName()>();

        virtualinvoke $r3.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 1, $r4);

        $r5 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        $r6 = virtualinvoke r2.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.String getProducer_name_regex()>();

        virtualinvoke $r5.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 2, $r6);

        $r7 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r8 = virtualinvoke r2.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.Integer getStop_delay_ms()>();

        virtualinvoke $r7.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 3, $r8);

        $r9 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        $r10 = virtualinvoke r2.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.Integer getMax_per_24_h()>();

        virtualinvoke $r9.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 4, $r10);

        $r11 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter DOUBLE>;

        $r12 = virtualinvoke r2.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.Double getSkip_probability()>();

        virtualinvoke $r11.<com.squareup.wire.ProtoAdapter: void encodeWithTag(com.squareup.wire.ProtoWriter,int,java.lang.Object)>(r1, 5, $r12);

        $r13 = virtualinvoke r2.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: okio.ByteString unknownFields()>();

        virtualinvoke r1.<com.squareup.wire.ProtoWriter: void writeBytes(okio.ByteString)>($r13);

        return;
    }

    public perfetto.protos.TraceConfig$TriggerConfig$Trigger decode(com.squareup.wire.ProtoReader)
    {
        perfetto.protos.TraceConfig$TriggerConfig$Trigger$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoReader r1, r3;
        okio.ByteString r2;
        long l0;
        int i1, i2;
        com.squareup.wire.ProtoAdapter $r4, $r5, $r6, $r7, $r8;
        perfetto.protos.TraceConfig$TriggerConfig$Trigger $r9;
        java.lang.Double $r10;
        java.lang.Integer $r11, $r12;
        java.lang.String $r13, $r14;
        java.lang.Object r15, r16, r17, r18, r19;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$Trigger$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoReader;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "reader");

        r15 = null;

        r16 = null;

        r17 = null;

        r18 = null;

        r19 = null;

        r3 = r1;

        l0 = virtualinvoke r3.<com.squareup.wire.ProtoReader: long beginMessage()>();

     label01:
        i1 = virtualinvoke r3.<com.squareup.wire.ProtoReader: int nextTag()>();

        if i1 != -1 goto label02;

        goto label10;

     label02:
        i2 = i1;

        tableswitch(i2)
        {
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label07;
            default: goto label08;
        };

     label03:
        $r8 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        r15 = virtualinvoke $r8.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label09;

     label04:
        $r7 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter STRING>;

        r16 = virtualinvoke $r7.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label09;

     label05:
        $r6 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        r17 = virtualinvoke $r6.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label09;

     label06:
        $r5 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter UINT32>;

        r18 = virtualinvoke $r5.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label09;

     label07:
        $r4 = <com.squareup.wire.ProtoAdapter: com.squareup.wire.ProtoAdapter DOUBLE>;

        r19 = virtualinvoke $r4.<com.squareup.wire.ProtoAdapter: java.lang.Object decode(com.squareup.wire.ProtoReader)>(r1);

        goto label09;

     label08:
        virtualinvoke r1.<com.squareup.wire.ProtoReader: void readUnknownField(int)>(i2);

     label09:
        goto label01;

     label10:
        r2 = virtualinvoke r3.<com.squareup.wire.ProtoReader: okio.ByteString endMessageAndGetUnknownFields(long)>(l0);

        $r9 = new perfetto.protos.TraceConfig$TriggerConfig$Trigger;

        $r14 = (java.lang.String) r15;

        $r13 = (java.lang.String) r16;

        $r12 = (java.lang.Integer) r17;

        $r11 = (java.lang.Integer) r18;

        $r10 = (java.lang.Double) r19;

        specialinvoke $r9.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: void <init>(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Double,okio.ByteString)>($r14, $r13, $r12, $r11, $r10, r2);

        return $r9;
    }

    public perfetto.protos.TraceConfig$TriggerConfig$Trigger redact(perfetto.protos.TraceConfig$TriggerConfig$Trigger)
    {
        perfetto.protos.TraceConfig$TriggerConfig$Trigger$Companion$ADAPTER$1 r0;
        perfetto.protos.TraceConfig$TriggerConfig$Trigger r1, $r3;
        okio.ByteString $r2;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$Trigger$Companion$ADAPTER$1;

        r1 := @parameter0: perfetto.protos.TraceConfig$TriggerConfig$Trigger;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = <okio.ByteString: okio.ByteString EMPTY>;

        $r3 = staticinvoke <perfetto.protos.TraceConfig$TriggerConfig$Trigger: perfetto.protos.TraceConfig$TriggerConfig$Trigger copy$default(perfetto.protos.TraceConfig$TriggerConfig$Trigger,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Double,okio.ByteString,int,java.lang.Object)>(r1, null, null, null, null, null, $r2, 31, null);

        return $r3;
    }

    public volatile int encodedSize(java.lang.Object)
    {
        perfetto.protos.TraceConfig$TriggerConfig$Trigger$Companion$ADAPTER$1 r0;
        java.lang.Object r1;
        perfetto.protos.TraceConfig$TriggerConfig$Trigger $r2;
        int $i0;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$Trigger$Companion$ADAPTER$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (perfetto.protos.TraceConfig$TriggerConfig$Trigger) r1;

        $i0 = virtualinvoke r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger$Companion$ADAPTER$1: int encodedSize(perfetto.protos.TraceConfig$TriggerConfig$Trigger)>($r2);

        return $i0;
    }

    public volatile void encode(com.squareup.wire.ProtoWriter, java.lang.Object)
    {
        perfetto.protos.TraceConfig$TriggerConfig$Trigger$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoWriter r1;
        java.lang.Object r2;
        perfetto.protos.TraceConfig$TriggerConfig$Trigger $r3;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$Trigger$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoWriter;

        r2 := @parameter1: java.lang.Object;

        $r3 = (perfetto.protos.TraceConfig$TriggerConfig$Trigger) r2;

        virtualinvoke r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger$Companion$ADAPTER$1: void encode(com.squareup.wire.ProtoWriter,perfetto.protos.TraceConfig$TriggerConfig$Trigger)>(r1, $r3);

        return;
    }

    public volatile java.lang.Object decode(com.squareup.wire.ProtoReader)
    {
        perfetto.protos.TraceConfig$TriggerConfig$Trigger$Companion$ADAPTER$1 r0;
        com.squareup.wire.ProtoReader r1;
        perfetto.protos.TraceConfig$TriggerConfig$Trigger $r2;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$Trigger$Companion$ADAPTER$1;

        r1 := @parameter0: com.squareup.wire.ProtoReader;

        $r2 = virtualinvoke r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger$Companion$ADAPTER$1: perfetto.protos.TraceConfig$TriggerConfig$Trigger decode(com.squareup.wire.ProtoReader)>(r1);

        return $r2;
    }

    public volatile java.lang.Object redact(java.lang.Object)
    {
        perfetto.protos.TraceConfig$TriggerConfig$Trigger$Companion$ADAPTER$1 r0;
        java.lang.Object r1;
        perfetto.protos.TraceConfig$TriggerConfig$Trigger $r2, $r3;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$Trigger$Companion$ADAPTER$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (perfetto.protos.TraceConfig$TriggerConfig$Trigger) r1;

        $r3 = virtualinvoke r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger$Companion$ADAPTER$1: perfetto.protos.TraceConfig$TriggerConfig$Trigger redact(perfetto.protos.TraceConfig$TriggerConfig$Trigger)>($r2);

        return $r3;
    }

perfetto.protos.TraceConfig$TriggerConfig$Trigger$Companion
    private void <init>()
    {
        perfetto.protos.TraceConfig$TriggerConfig$Trigger$Companion r0;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$Trigger$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.TraceConfig$TriggerConfig$Trigger$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$Trigger$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger$Companion: void <init>()>();

        return;
    }

perfetto.protos.TraceConfig$TriggerConfig$Trigger
<perfetto.protos.TraceConfig$TriggerConfig$Trigger: perfetto.protos.TraceConfig$TriggerConfig$Trigger$Companion Companion>
<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.String name>
<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.String producer_name_regex>
<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.Integer stop_delay_ms>
<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.Integer max_per_24_h>
<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.Double skip_probability>
<perfetto.protos.TraceConfig$TriggerConfig$Trigger: com.squareup.wire.ProtoAdapter ADAPTER>
<perfetto.protos.TraceConfig$TriggerConfig$Trigger: long serialVersionUID>
    public void <init>(java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer, java.lang.Double, okio.ByteString)
    {
        perfetto.protos.TraceConfig$TriggerConfig$Trigger r0;
        java.lang.String r1, r2;
        java.lang.Integer r3, r4;
        java.lang.Double r5;
        okio.ByteString r6;
        com.squareup.wire.ProtoAdapter $r7;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$Trigger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Integer;

        r4 := @parameter3: java.lang.Integer;

        r5 := @parameter4: java.lang.Double;

        r6 := @parameter5: okio.ByteString;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r6, "unknownFields");

        $r7 = <perfetto.protos.TraceConfig$TriggerConfig$Trigger: com.squareup.wire.ProtoAdapter ADAPTER>;

        specialinvoke r0.<com.squareup.wire.Message: void <init>(com.squareup.wire.ProtoAdapter,okio.ByteString)>($r7, r6);

        r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.String name> = r1;

        r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.String producer_name_regex> = r2;

        r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.Integer stop_delay_ms> = r3;

        r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.Integer max_per_24_h> = r4;

        r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.Double skip_probability> = r5;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer, java.lang.Double, okio.ByteString, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.TraceConfig$TriggerConfig$Trigger r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        java.lang.String r2, r3;
        java.lang.Integer r4, r5;
        java.lang.Double r6;
        okio.ByteString r7;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$Trigger;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.Integer;

        r5 := @parameter3: java.lang.Integer;

        r6 := @parameter4: java.lang.Double;

        r7 := @parameter5: okio.ByteString;

        i0 := @parameter6: int;

        r1 := @parameter7: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r2 = null;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r3 = null;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        r4 = null;

     label3:
        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        r5 = null;

     label4:
        $i5 = i0 & 16;

        if $i5 == 0 goto label5;

        r6 = null;

     label5:
        $i6 = i0 & 32;

        if $i6 == 0 goto label6;

        r7 = <okio.ByteString: okio.ByteString EMPTY>;

     label6:
        specialinvoke r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: void <init>(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Double,okio.ByteString)>(r2, r3, r4, r5, r6, r7);

        return;
    }

    public final java.lang.String getName()
    {
        perfetto.protos.TraceConfig$TriggerConfig$Trigger r0;
        java.lang.String $r1;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$Trigger;

        $r1 = r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.String name>;

        return $r1;
    }

    public final java.lang.String getProducer_name_regex()
    {
        perfetto.protos.TraceConfig$TriggerConfig$Trigger r0;
        java.lang.String $r1;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$Trigger;

        $r1 = r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.String producer_name_regex>;

        return $r1;
    }

    public final java.lang.Integer getStop_delay_ms()
    {
        perfetto.protos.TraceConfig$TriggerConfig$Trigger r0;
        java.lang.Integer $r1;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$Trigger;

        $r1 = r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.Integer stop_delay_ms>;

        return $r1;
    }

    public final java.lang.Integer getMax_per_24_h()
    {
        perfetto.protos.TraceConfig$TriggerConfig$Trigger r0;
        java.lang.Integer $r1;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$Trigger;

        $r1 = r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.Integer max_per_24_h>;

        return $r1;
    }

    public final java.lang.Double getSkip_probability()
    {
        perfetto.protos.TraceConfig$TriggerConfig$Trigger r0;
        java.lang.Double $r1;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$Trigger;

        $r1 = r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.Double skip_probability>;

        return $r1;
    }

    public java.lang.Void newBuilder()
    {
        perfetto.protos.TraceConfig$TriggerConfig$Trigger r0;
        java.lang.AssertionError $r1;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$Trigger;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;
    }

    public boolean equals(java.lang.Object)
    {
        perfetto.protos.TraceConfig$TriggerConfig$Trigger r0, $r3, $r5, $r8, $r11, $r14, $r17;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        okio.ByteString $r2, $r4;
        java.lang.String $r6, $r7, $r9, $r10;
        java.lang.Integer $r12, $r13, $r15, $r16;
        java.lang.Double $r18, $r19;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$Trigger;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof perfetto.protos.TraceConfig$TriggerConfig$Trigger;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: okio.ByteString unknownFields()>();

        $r3 = (perfetto.protos.TraceConfig$TriggerConfig$Trigger) r1;

        $r4 = virtualinvoke $r3.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: okio.ByteString unknownFields()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r4);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $r7 = r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.String name>;

        $r5 = (perfetto.protos.TraceConfig$TriggerConfig$Trigger) r1;

        $r6 = $r5.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.String name>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, $r6);

        if $z2 != 0 goto label4;

        return 0;

     label4:
        $r10 = r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.String producer_name_regex>;

        $r8 = (perfetto.protos.TraceConfig$TriggerConfig$Trigger) r1;

        $r9 = $r8.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.String producer_name_regex>;

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r10, $r9);

        if $z3 != 0 goto label5;

        return 0;

     label5:
        $r13 = r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.Integer stop_delay_ms>;

        $r11 = (perfetto.protos.TraceConfig$TriggerConfig$Trigger) r1;

        $r12 = $r11.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.Integer stop_delay_ms>;

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r13, $r12);

        if $z4 != 0 goto label6;

        return 0;

     label6:
        $r16 = r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.Integer max_per_24_h>;

        $r14 = (perfetto.protos.TraceConfig$TriggerConfig$Trigger) r1;

        $r15 = $r14.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.Integer max_per_24_h>;

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r16, $r15);

        if $z5 != 0 goto label7;

        return 0;

     label7:
        $r19 = r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.Double skip_probability>;

        $r17 = (perfetto.protos.TraceConfig$TriggerConfig$Trigger) r1;

        $r18 = $r17.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.Double skip_probability>;

        $z6 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Double,java.lang.Double)>($r19, $r18);

        if $z6 != 0 goto label8;

        return 0;

     label8:
        return 1;
    }

    public int hashCode()
    {
        perfetto.protos.TraceConfig$TriggerConfig$Trigger r0;
        okio.ByteString $r1;
        java.lang.String $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, $i7, i8, $i9, i10, $i11, i12, $i13, i14, $i15;
        java.lang.Integer $r4, $r5;
        java.lang.Double $r6;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$Trigger;

        i5 = r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: int hashCode>;

        if i5 != 0 goto label11;

        $r1 = virtualinvoke r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: okio.ByteString unknownFields()>();

        i6 = virtualinvoke $r1.<okio.ByteString: int hashCode()>();

        $i0 = i6 * 37;

        $r2 = r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.String name>;

        if $r2 != null goto label01;

        $i7 = 0;

        goto label02;

     label01:
        $i7 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

     label02:
        i8 = $i0 + $i7;

        $i1 = i8 * 37;

        $r3 = r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.String producer_name_regex>;

        if $r3 != null goto label03;

        $i9 = 0;

        goto label04;

     label03:
        $i9 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

     label04:
        i10 = $i1 + $i9;

        $i2 = i10 * 37;

        $r4 = r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.Integer stop_delay_ms>;

        if $r4 != null goto label05;

        $i11 = 0;

        goto label06;

     label05:
        $i11 = virtualinvoke $r4.<java.lang.Object: int hashCode()>();

     label06:
        i12 = $i2 + $i11;

        $i3 = i12 * 37;

        $r5 = r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.Integer max_per_24_h>;

        if $r5 != null goto label07;

        $i13 = 0;

        goto label08;

     label07:
        $i13 = virtualinvoke $r5.<java.lang.Object: int hashCode()>();

     label08:
        i14 = $i3 + $i13;

        $i4 = i14 * 37;

        $r6 = r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.Double skip_probability>;

        if $r6 != null goto label09;

        $i15 = 0;

        goto label10;

     label09:
        $i15 = virtualinvoke $r6.<java.lang.Object: int hashCode()>();

     label10:
        i5 = $i4 + $i15;

        r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: int hashCode> = i5;

     label11:
        return i5;
    }

    public java.lang.String toString()
    {
        perfetto.protos.TraceConfig$TriggerConfig$Trigger r0;
        java.util.List r1;
        java.util.ArrayList $r2;
        java.lang.String $r3, $r4, $r12, $r15, $r18, $r21, $r22, $r24, $r25, $r26, $r28, $r29;
        java.lang.Integer $r5, $r6, $r16, $r19;
        java.lang.Double $r7, $r13;
        java.lang.CharSequence $r8, $r9, $r10;
        java.lang.Iterable $r11;
        java.util.Collection $r14, $r17, $r20, $r23, $r27;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$Trigger;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r1 = (java.util.List) $r2;

        $r3 = r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.String name>;

        if $r3 == null goto label1;

        $r27 = (java.util.Collection) r1;

        $r26 = r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.String name>;

        $r28 = staticinvoke <com.squareup.wire.internal.Internal: java.lang.String sanitize(java.lang.String)>($r26);

        $r29 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("name=", $r28);

        interfaceinvoke $r27.<java.util.Collection: boolean add(java.lang.Object)>($r29);

     label1:
        $r4 = r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.String producer_name_regex>;

        if $r4 == null goto label2;

        $r23 = (java.util.Collection) r1;

        $r22 = r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.String producer_name_regex>;

        $r24 = staticinvoke <com.squareup.wire.internal.Internal: java.lang.String sanitize(java.lang.String)>($r22);

        $r25 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("producer_name_regex=", $r24);

        interfaceinvoke $r23.<java.util.Collection: boolean add(java.lang.Object)>($r25);

     label2:
        $r5 = r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.Integer stop_delay_ms>;

        if $r5 == null goto label3;

        $r20 = (java.util.Collection) r1;

        $r19 = r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.Integer stop_delay_ms>;

        $r21 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("stop_delay_ms=", $r19);

        interfaceinvoke $r20.<java.util.Collection: boolean add(java.lang.Object)>($r21);

     label3:
        $r6 = r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.Integer max_per_24_h>;

        if $r6 == null goto label4;

        $r17 = (java.util.Collection) r1;

        $r16 = r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.Integer max_per_24_h>;

        $r18 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("max_per_24_h=", $r16);

        interfaceinvoke $r17.<java.util.Collection: boolean add(java.lang.Object)>($r18);

     label4:
        $r7 = r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.Double skip_probability>;

        if $r7 == null goto label5;

        $r14 = (java.util.Collection) r1;

        $r13 = r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.Double skip_probability>;

        $r15 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("skip_probability=", $r13);

        interfaceinvoke $r14.<java.util.Collection: boolean add(java.lang.Object)>($r15);

     label5:
        $r11 = (java.lang.Iterable) r1;

        $r10 = (java.lang.CharSequence) ", ";

        $r9 = (java.lang.CharSequence) "Trigger{";

        $r8 = (java.lang.CharSequence) "}";

        $r12 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r11, $r10, $r9, $r8, 0, null, null, 56, null);

        return $r12;
    }

    public final perfetto.protos.TraceConfig$TriggerConfig$Trigger copy(java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer, java.lang.Double, okio.ByteString)
    {
        perfetto.protos.TraceConfig$TriggerConfig$Trigger r0, $r7;
        java.lang.String r1, r2;
        java.lang.Integer r3, r4;
        java.lang.Double r5;
        okio.ByteString r6;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$Trigger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Integer;

        r4 := @parameter3: java.lang.Integer;

        r5 := @parameter4: java.lang.Double;

        r6 := @parameter5: okio.ByteString;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r6, "unknownFields");

        $r7 = new perfetto.protos.TraceConfig$TriggerConfig$Trigger;

        specialinvoke $r7.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: void <init>(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Double,okio.ByteString)>(r1, r2, r3, r4, r5, r6);

        return $r7;
    }

    public static perfetto.protos.TraceConfig$TriggerConfig$Trigger copy$default(perfetto.protos.TraceConfig$TriggerConfig$Trigger, java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer, java.lang.Double, okio.ByteString, int, java.lang.Object)
    {
        perfetto.protos.TraceConfig$TriggerConfig$Trigger r0, $r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Object r1;
        java.lang.String r3, r4;
        java.lang.Integer r5, r6;
        java.lang.Double r7;
        okio.ByteString r8;

        r0 := @parameter0: perfetto.protos.TraceConfig$TriggerConfig$Trigger;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.Integer;

        r6 := @parameter4: java.lang.Integer;

        r7 := @parameter5: java.lang.Double;

        r8 := @parameter6: okio.ByteString;

        i0 := @parameter7: int;

        r1 := @parameter8: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r3 = r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.String name>;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r4 = r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.String producer_name_regex>;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        r5 = r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.Integer stop_delay_ms>;

     label3:
        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        r6 = r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.Integer max_per_24_h>;

     label4:
        $i5 = i0 & 16;

        if $i5 == 0 goto label5;

        r7 = r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.Double skip_probability>;

     label5:
        $i6 = i0 & 32;

        if $i6 == 0 goto label6;

        r8 = virtualinvoke r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: okio.ByteString unknownFields()>();

     label6:
        $r2 = virtualinvoke r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: perfetto.protos.TraceConfig$TriggerConfig$Trigger copy(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Double,okio.ByteString)>(r3, r4, r5, r6, r7, r8);

        return $r2;
    }

    public void <init>()
    {
        perfetto.protos.TraceConfig$TriggerConfig$Trigger r0;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$Trigger;

        specialinvoke r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: void <init>(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Double,okio.ByteString,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, null, null, null, null, null, 63, null);

        return;
    }

    public volatile com.squareup.wire.Message$Builder newBuilder()
    {
        perfetto.protos.TraceConfig$TriggerConfig$Trigger r0;
        java.lang.Void $r1;
        com.squareup.wire.Message$Builder $r2;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$Trigger;

        $r1 = virtualinvoke r0.<perfetto.protos.TraceConfig$TriggerConfig$Trigger: java.lang.Void newBuilder()>();

        $r2 = (com.squareup.wire.Message$Builder) $r1;

        return $r2;
    }

    static void <clinit>()
    {
        com.squareup.wire.FieldEncoding r0;
        kotlin.reflect.KClass r1;
        com.squareup.wire.Syntax r2;
        perfetto.protos.TraceConfig$TriggerConfig$Trigger$Companion $r3;
        perfetto.protos.TraceConfig$TriggerConfig$Trigger$Companion$ADAPTER$1 $r4;
        com.squareup.wire.ProtoAdapter $r5;

        $r3 = new perfetto.protos.TraceConfig$TriggerConfig$Trigger$Companion;

        specialinvoke $r3.<perfetto.protos.TraceConfig$TriggerConfig$Trigger$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <perfetto.protos.TraceConfig$TriggerConfig$Trigger: perfetto.protos.TraceConfig$TriggerConfig$Trigger$Companion Companion> = $r3;

        r0 = <com.squareup.wire.FieldEncoding: com.squareup.wire.FieldEncoding LENGTH_DELIMITED>;

        r1 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Lperfetto/protos/TraceConfig$TriggerConfig$Trigger;");

        r2 = <com.squareup.wire.Syntax: com.squareup.wire.Syntax PROTO_2>;

        $r4 = new perfetto.protos.TraceConfig$TriggerConfig$Trigger$Companion$ADAPTER$1;

        specialinvoke $r4.<perfetto.protos.TraceConfig$TriggerConfig$Trigger$Companion$ADAPTER$1: void <init>(com.squareup.wire.FieldEncoding,kotlin.reflect.KClass,com.squareup.wire.Syntax)>(r0, r1, r2);

        $r5 = (com.squareup.wire.ProtoAdapter) $r4;

        <perfetto.protos.TraceConfig$TriggerConfig$Trigger: com.squareup.wire.ProtoAdapter ADAPTER> = $r5;

        return;
    }

perfetto.protos.TraceConfig$TriggerConfig$TriggerMode$Companion$ADAPTER$1
    void <init>(kotlin.reflect.KClass, com.squareup.wire.Syntax, perfetto.protos.TraceConfig$TriggerConfig$TriggerMode)
    {
        perfetto.protos.TraceConfig$TriggerConfig$TriggerMode$Companion$ADAPTER$1 r0;
        kotlin.reflect.KClass $r1;
        com.squareup.wire.Syntax $r2;
        perfetto.protos.TraceConfig$TriggerConfig$TriggerMode $r3;
        com.squareup.wire.WireEnum $r4;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode$Companion$ADAPTER$1;

        $r1 := @parameter0: kotlin.reflect.KClass;

        $r2 := @parameter1: com.squareup.wire.Syntax;

        $r3 := @parameter2: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode;

        $r4 = (com.squareup.wire.WireEnum) $r3;

        specialinvoke r0.<com.squareup.wire.EnumAdapter: void <init>(kotlin.reflect.KClass,com.squareup.wire.Syntax,com.squareup.wire.WireEnum)>($r1, $r2, $r4);

        return;
    }

    public perfetto.protos.TraceConfig$TriggerConfig$TriggerMode fromValue(int)
    {
        perfetto.protos.TraceConfig$TriggerConfig$TriggerMode$Companion$ADAPTER$1 r0;
        int i0;
        perfetto.protos.TraceConfig$TriggerConfig$TriggerMode$Companion $r1;
        perfetto.protos.TraceConfig$TriggerConfig$TriggerMode $r2;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode$Companion$ADAPTER$1;

        i0 := @parameter0: int;

        $r1 = <perfetto.protos.TraceConfig$TriggerConfig$TriggerMode: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode$Companion Companion>;

        $r2 = virtualinvoke $r1.<perfetto.protos.TraceConfig$TriggerConfig$TriggerMode$Companion: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode fromValue(int)>(i0);

        return $r2;
    }

    public volatile com.squareup.wire.WireEnum fromValue(int)
    {
        perfetto.protos.TraceConfig$TriggerConfig$TriggerMode$Companion$ADAPTER$1 r0;
        int i0;
        perfetto.protos.TraceConfig$TriggerConfig$TriggerMode $r1;
        com.squareup.wire.WireEnum $r2;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode$Companion$ADAPTER$1;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<perfetto.protos.TraceConfig$TriggerConfig$TriggerMode$Companion$ADAPTER$1: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode fromValue(int)>(i0);

        $r2 = (com.squareup.wire.WireEnum) $r1;

        return $r2;
    }

perfetto.protos.TraceConfig$TriggerConfig$TriggerMode$Companion
    private void <init>()
    {
        perfetto.protos.TraceConfig$TriggerConfig$TriggerMode$Companion r0;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final perfetto.protos.TraceConfig$TriggerConfig$TriggerMode fromValue(int)
    {
        perfetto.protos.TraceConfig$TriggerConfig$TriggerMode$Companion r0;
        int i0;
        perfetto.protos.TraceConfig$TriggerConfig$TriggerMode $r1;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode$Companion;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        $r1 = <perfetto.protos.TraceConfig$TriggerConfig$TriggerMode: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode UNSPECIFIED>;

        goto label5;

     label2:
        $r1 = <perfetto.protos.TraceConfig$TriggerConfig$TriggerMode: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode START_TRACING>;

        goto label5;

     label3:
        $r1 = <perfetto.protos.TraceConfig$TriggerConfig$TriggerMode: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode STOP_TRACING>;

        goto label5;

     label4:
        $r1 = null;

     label5:
        return $r1;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.TraceConfig$TriggerConfig$TriggerMode$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<perfetto.protos.TraceConfig$TriggerConfig$TriggerMode$Companion: void <init>()>();

        return;
    }

perfetto.protos.TraceConfig$TriggerConfig$TriggerMode
<perfetto.protos.TraceConfig$TriggerConfig$TriggerMode: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode$Companion Companion>
<perfetto.protos.TraceConfig$TriggerConfig$TriggerMode: int value>
<perfetto.protos.TraceConfig$TriggerConfig$TriggerMode: com.squareup.wire.ProtoAdapter ADAPTER>
<perfetto.protos.TraceConfig$TriggerConfig$TriggerMode: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode UNSPECIFIED>
<perfetto.protos.TraceConfig$TriggerConfig$TriggerMode: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode START_TRACING>
<perfetto.protos.TraceConfig$TriggerConfig$TriggerMode: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode STOP_TRACING>
<perfetto.protos.TraceConfig$TriggerConfig$TriggerMode: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode[] $VALUES>
    private void <init>(java.lang.String, int, int)
    {
        perfetto.protos.TraceConfig$TriggerConfig$TriggerMode r0;
        java.lang.String $r1;
        int $i0, i1;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        r0.<perfetto.protos.TraceConfig$TriggerConfig$TriggerMode: int value> = i1;

        return;
    }

    public int getValue()
    {
        perfetto.protos.TraceConfig$TriggerConfig$TriggerMode r0;
        int $i0;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode;

        $i0 = r0.<perfetto.protos.TraceConfig$TriggerConfig$TriggerMode: int value>;

        return $i0;
    }

    public static perfetto.protos.TraceConfig$TriggerConfig$TriggerMode[] values()
    {
        perfetto.protos.TraceConfig$TriggerConfig$TriggerMode[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <perfetto.protos.TraceConfig$TriggerConfig$TriggerMode: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (perfetto.protos.TraceConfig$TriggerConfig$TriggerMode[]) $r1;

        return $r2;
    }

    public static perfetto.protos.TraceConfig$TriggerConfig$TriggerMode valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        perfetto.protos.TraceConfig$TriggerConfig$TriggerMode $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lperfetto/protos/TraceConfig$TriggerConfig$TriggerMode;", r0);

        $r2 = (perfetto.protos.TraceConfig$TriggerConfig$TriggerMode) $r1;

        return $r2;
    }

    private static final perfetto.protos.TraceConfig$TriggerConfig$TriggerMode[] $values()
    {
        perfetto.protos.TraceConfig$TriggerConfig$TriggerMode[] r0;
        perfetto.protos.TraceConfig$TriggerConfig$TriggerMode $r1, $r2, $r3;

        r0 = newarray (perfetto.protos.TraceConfig$TriggerConfig$TriggerMode)[3];

        $r1 = <perfetto.protos.TraceConfig$TriggerConfig$TriggerMode: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode UNSPECIFIED>;

        r0[0] = $r1;

        $r2 = <perfetto.protos.TraceConfig$TriggerConfig$TriggerMode: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode START_TRACING>;

        r0[1] = $r2;

        $r3 = <perfetto.protos.TraceConfig$TriggerConfig$TriggerMode: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode STOP_TRACING>;

        r0[2] = $r3;

        return r0;
    }

    public static final perfetto.protos.TraceConfig$TriggerConfig$TriggerMode fromValue(int)
    {
        int i0;
        perfetto.protos.TraceConfig$TriggerConfig$TriggerMode$Companion $r0;
        perfetto.protos.TraceConfig$TriggerConfig$TriggerMode $r1;

        i0 := @parameter0: int;

        $r0 = <perfetto.protos.TraceConfig$TriggerConfig$TriggerMode: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode$Companion Companion>;

        $r1 = virtualinvoke $r0.<perfetto.protos.TraceConfig$TriggerConfig$TriggerMode$Companion: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode fromValue(int)>(i0);

        return $r1;
    }

    static void <clinit>()
    {
        kotlin.reflect.KClass r0;
        com.squareup.wire.Syntax r1;
        perfetto.protos.TraceConfig$TriggerConfig$TriggerMode r2, $r3, $r4, $r5;
        perfetto.protos.TraceConfig$TriggerConfig$TriggerMode[] $r6;
        perfetto.protos.TraceConfig$TriggerConfig$TriggerMode$Companion $r7;
        perfetto.protos.TraceConfig$TriggerConfig$TriggerMode$Companion$ADAPTER$1 $r8;
        com.squareup.wire.ProtoAdapter $r9;

        $r3 = new perfetto.protos.TraceConfig$TriggerConfig$TriggerMode;

        specialinvoke $r3.<perfetto.protos.TraceConfig$TriggerConfig$TriggerMode: void <init>(java.lang.String,int,int)>("UNSPECIFIED", 0, 0);

        <perfetto.protos.TraceConfig$TriggerConfig$TriggerMode: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode UNSPECIFIED> = $r3;

        $r4 = new perfetto.protos.TraceConfig$TriggerConfig$TriggerMode;

        specialinvoke $r4.<perfetto.protos.TraceConfig$TriggerConfig$TriggerMode: void <init>(java.lang.String,int,int)>("START_TRACING", 1, 1);

        <perfetto.protos.TraceConfig$TriggerConfig$TriggerMode: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode START_TRACING> = $r4;

        $r5 = new perfetto.protos.TraceConfig$TriggerConfig$TriggerMode;

        specialinvoke $r5.<perfetto.protos.TraceConfig$TriggerConfig$TriggerMode: void <init>(java.lang.String,int,int)>("STOP_TRACING", 2, 2);

        <perfetto.protos.TraceConfig$TriggerConfig$TriggerMode: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode STOP_TRACING> = $r5;

        $r6 = staticinvoke <perfetto.protos.TraceConfig$TriggerConfig$TriggerMode: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode[] $values()>();

        <perfetto.protos.TraceConfig$TriggerConfig$TriggerMode: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode[] $VALUES> = $r6;

        $r7 = new perfetto.protos.TraceConfig$TriggerConfig$TriggerMode$Companion;

        specialinvoke $r7.<perfetto.protos.TraceConfig$TriggerConfig$TriggerMode$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <perfetto.protos.TraceConfig$TriggerConfig$TriggerMode: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode$Companion Companion> = $r7;

        r0 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Lperfetto/protos/TraceConfig$TriggerConfig$TriggerMode;");

        r1 = <com.squareup.wire.Syntax: com.squareup.wire.Syntax PROTO_2>;

        r2 = <perfetto.protos.TraceConfig$TriggerConfig$TriggerMode: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode UNSPECIFIED>;

        $r8 = new perfetto.protos.TraceConfig$TriggerConfig$TriggerMode$Companion$ADAPTER$1;

        specialinvoke $r8.<perfetto.protos.TraceConfig$TriggerConfig$TriggerMode$Companion$ADAPTER$1: void <init>(kotlin.reflect.KClass,com.squareup.wire.Syntax,perfetto.protos.TraceConfig$TriggerConfig$TriggerMode)>(r0, r1, r2);

        $r9 = (com.squareup.wire.ProtoAdapter) $r8;

        <perfetto.protos.TraceConfig$TriggerConfig$TriggerMode: com.squareup.wire.ProtoAdapter ADAPTER> = $r9;

        return;
    }

perfetto.protos.TraceConfig$TriggerConfig
<perfetto.protos.TraceConfig$TriggerConfig: perfetto.protos.TraceConfig$TriggerConfig$Companion Companion>
<perfetto.protos.TraceConfig$TriggerConfig: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode trigger_mode>
<perfetto.protos.TraceConfig$TriggerConfig: java.lang.Integer trigger_timeout_ms>
<perfetto.protos.TraceConfig$TriggerConfig: java.util.List triggers>
<perfetto.protos.TraceConfig$TriggerConfig: com.squareup.wire.ProtoAdapter ADAPTER>
<perfetto.protos.TraceConfig$TriggerConfig: long serialVersionUID>
    public void <init>(perfetto.protos.TraceConfig$TriggerConfig$TriggerMode, java.util.List, java.lang.Integer, okio.ByteString)
    {
        perfetto.protos.TraceConfig$TriggerConfig r0;
        perfetto.protos.TraceConfig$TriggerConfig$TriggerMode r1;
        java.util.List r2, $r6;
        java.lang.Integer r3;
        okio.ByteString r4;
        com.squareup.wire.ProtoAdapter $r5;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig;

        r1 := @parameter0: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.lang.Integer;

        r4 := @parameter3: okio.ByteString;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "triggers");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "unknownFields");

        $r5 = <perfetto.protos.TraceConfig$TriggerConfig: com.squareup.wire.ProtoAdapter ADAPTER>;

        specialinvoke r0.<com.squareup.wire.Message: void <init>(com.squareup.wire.ProtoAdapter,okio.ByteString)>($r5, r4);

        r0.<perfetto.protos.TraceConfig$TriggerConfig: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode trigger_mode> = r1;

        r0.<perfetto.protos.TraceConfig$TriggerConfig: java.lang.Integer trigger_timeout_ms> = r3;

        $r6 = staticinvoke <com.squareup.wire.internal.Internal: java.util.List immutableCopyOf(java.lang.String,java.util.List)>("triggers", r2);

        r0.<perfetto.protos.TraceConfig$TriggerConfig: java.util.List triggers> = $r6;

        return;
    }

    public void <init>(perfetto.protos.TraceConfig$TriggerConfig$TriggerMode, java.util.List, java.lang.Integer, okio.ByteString, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        perfetto.protos.TraceConfig$TriggerConfig r0;
        int i0, $i1, $i2, $i3, $i4;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        perfetto.protos.TraceConfig$TriggerConfig$TriggerMode r2;
        java.util.List r3;
        java.lang.Integer r4;
        okio.ByteString r5;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig;

        r2 := @parameter0: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode;

        r3 := @parameter1: java.util.List;

        r4 := @parameter2: java.lang.Integer;

        r5 := @parameter3: okio.ByteString;

        i0 := @parameter4: int;

        r1 := @parameter5: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r2 = null;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        r4 = null;

     label3:
        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        r5 = <okio.ByteString: okio.ByteString EMPTY>;

     label4:
        specialinvoke r0.<perfetto.protos.TraceConfig$TriggerConfig: void <init>(perfetto.protos.TraceConfig$TriggerConfig$TriggerMode,java.util.List,java.lang.Integer,okio.ByteString)>(r2, r3, r4, r5);

        return;
    }

    public final perfetto.protos.TraceConfig$TriggerConfig$TriggerMode getTrigger_mode()
    {
        perfetto.protos.TraceConfig$TriggerConfig r0;
        perfetto.protos.TraceConfig$TriggerConfig$TriggerMode $r1;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig;

        $r1 = r0.<perfetto.protos.TraceConfig$TriggerConfig: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode trigger_mode>;

        return $r1;
    }

    public final java.lang.Integer getTrigger_timeout_ms()
    {
        perfetto.protos.TraceConfig$TriggerConfig r0;
        java.lang.Integer $r1;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig;

        $r1 = r0.<perfetto.protos.TraceConfig$TriggerConfig: java.lang.Integer trigger_timeout_ms>;

        return $r1;
    }

    public final java.util.List getTriggers()
    {
        perfetto.protos.TraceConfig$TriggerConfig r0;
        java.util.List $r1;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig;

        $r1 = r0.<perfetto.protos.TraceConfig$TriggerConfig: java.util.List triggers>;

        return $r1;
    }

    public java.lang.Void newBuilder()
    {
        perfetto.protos.TraceConfig$TriggerConfig r0;
        java.lang.AssertionError $r1;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;
    }

    public boolean equals(java.lang.Object)
    {
        perfetto.protos.TraceConfig$TriggerConfig r0, $r3, $r5, $r8, $r11;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;
        okio.ByteString $r2, $r4;
        perfetto.protos.TraceConfig$TriggerConfig$TriggerMode $r6, $r7;
        java.util.List $r9, $r10;
        java.lang.Integer $r12, $r13;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof perfetto.protos.TraceConfig$TriggerConfig;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<perfetto.protos.TraceConfig$TriggerConfig: okio.ByteString unknownFields()>();

        $r3 = (perfetto.protos.TraceConfig$TriggerConfig) r1;

        $r4 = virtualinvoke $r3.<perfetto.protos.TraceConfig$TriggerConfig: okio.ByteString unknownFields()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r4);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $r7 = r0.<perfetto.protos.TraceConfig$TriggerConfig: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode trigger_mode>;

        $r5 = (perfetto.protos.TraceConfig$TriggerConfig) r1;

        $r6 = $r5.<perfetto.protos.TraceConfig$TriggerConfig: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode trigger_mode>;

        if $r7 == $r6 goto label4;

        return 0;

     label4:
        $r10 = r0.<perfetto.protos.TraceConfig$TriggerConfig: java.util.List triggers>;

        $r8 = (perfetto.protos.TraceConfig$TriggerConfig) r1;

        $r9 = $r8.<perfetto.protos.TraceConfig$TriggerConfig: java.util.List triggers>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r10, $r9);

        if $z2 != 0 goto label5;

        return 0;

     label5:
        $r13 = r0.<perfetto.protos.TraceConfig$TriggerConfig: java.lang.Integer trigger_timeout_ms>;

        $r11 = (perfetto.protos.TraceConfig$TriggerConfig) r1;

        $r12 = $r11.<perfetto.protos.TraceConfig$TriggerConfig: java.lang.Integer trigger_timeout_ms>;

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r13, $r12);

        if $z3 != 0 goto label6;

        return 0;

     label6:
        return 1;
    }

    public int hashCode()
    {
        perfetto.protos.TraceConfig$TriggerConfig r0;
        okio.ByteString $r1;
        perfetto.protos.TraceConfig$TriggerConfig$TriggerMode $r2;
        int $i0, $i1, $i2, $i3, i4, i5, $i6, i7, i8, $i9;
        java.util.List $r3;
        java.lang.Integer $r4;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig;

        i4 = r0.<perfetto.protos.TraceConfig$TriggerConfig: int hashCode>;

        if i4 != 0 goto label5;

        $r1 = virtualinvoke r0.<perfetto.protos.TraceConfig$TriggerConfig: okio.ByteString unknownFields()>();

        i5 = virtualinvoke $r1.<okio.ByteString: int hashCode()>();

        $i0 = i5 * 37;

        $r2 = r0.<perfetto.protos.TraceConfig$TriggerConfig: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode trigger_mode>;

        if $r2 != null goto label1;

        $i6 = 0;

        goto label2;

     label1:
        $i6 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

     label2:
        i7 = $i0 + $i6;

        $i1 = i7 * 37;

        $r3 = r0.<perfetto.protos.TraceConfig$TriggerConfig: java.util.List triggers>;

        $i2 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

        i8 = $i1 + $i2;

        $i3 = i8 * 37;

        $r4 = r0.<perfetto.protos.TraceConfig$TriggerConfig: java.lang.Integer trigger_timeout_ms>;

        if $r4 != null goto label3;

        $i9 = 0;

        goto label4;

     label3:
        $i9 = virtualinvoke $r4.<java.lang.Object: int hashCode()>();

     label4:
        i4 = $i3 + $i9;

        r0.<perfetto.protos.TraceConfig$TriggerConfig: int hashCode> = i4;

     label5:
        return i4;
    }

    public java.lang.String toString()
    {
        perfetto.protos.TraceConfig$TriggerConfig r0;
        java.util.List r1, $r4, $r15;
        java.util.ArrayList $r2;
        perfetto.protos.TraceConfig$TriggerConfig$TriggerMode $r3, $r18;
        java.util.Collection $r5, $r13, $r16, $r19;
        boolean $z0, $z4;
        java.lang.Integer $r6, $r12;
        java.lang.CharSequence $r7, $r8, $r9;
        java.lang.Iterable $r10;
        java.lang.String $r11, $r14, $r17, $r20;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r1 = (java.util.List) $r2;

        $r3 = r0.<perfetto.protos.TraceConfig$TriggerConfig: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode trigger_mode>;

        if $r3 == null goto label1;

        $r19 = (java.util.Collection) r1;

        $r18 = r0.<perfetto.protos.TraceConfig$TriggerConfig: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode trigger_mode>;

        $r20 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("trigger_mode=", $r18);

        interfaceinvoke $r19.<java.util.Collection: boolean add(java.lang.Object)>($r20);

     label1:
        $r4 = r0.<perfetto.protos.TraceConfig$TriggerConfig: java.util.List triggers>;

        $r5 = (java.util.Collection) $r4;

        $z0 = interfaceinvoke $r5.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        if $z4 == 0 goto label4;

        $r16 = (java.util.Collection) r1;

        $r15 = r0.<perfetto.protos.TraceConfig$TriggerConfig: java.util.List triggers>;

        $r17 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("triggers=", $r15);

        interfaceinvoke $r16.<java.util.Collection: boolean add(java.lang.Object)>($r17);

     label4:
        $r6 = r0.<perfetto.protos.TraceConfig$TriggerConfig: java.lang.Integer trigger_timeout_ms>;

        if $r6 == null goto label5;

        $r13 = (java.util.Collection) r1;

        $r12 = r0.<perfetto.protos.TraceConfig$TriggerConfig: java.lang.Integer trigger_timeout_ms>;

        $r14 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("trigger_timeout_ms=", $r12);

        interfaceinvoke $r13.<java.util.Collection: boolean add(java.lang.Object)>($r14);

     label5:
        $r10 = (java.lang.Iterable) r1;

        $r9 = (java.lang.CharSequence) ", ";

        $r8 = (java.lang.CharSequence) "TriggerConfig{";

        $r7 = (java.lang.CharSequence) "}";

        $r11 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r10, $r9, $r8, $r7, 0, null, null, 56, null);

        return $r11;
    }

    public final perfetto.protos.TraceConfig$TriggerConfig copy(perfetto.protos.TraceConfig$TriggerConfig$TriggerMode, java.util.List, java.lang.Integer, okio.ByteString)
    {
        perfetto.protos.TraceConfig$TriggerConfig r0, $r5;
        perfetto.protos.TraceConfig$TriggerConfig$TriggerMode r1;
        java.util.List r2;
        java.lang.Integer r3;
        okio.ByteString r4;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig;

        r1 := @parameter0: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.lang.Integer;

        r4 := @parameter3: okio.ByteString;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "triggers");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "unknownFields");

        $r5 = new perfetto.protos.TraceConfig$TriggerConfig;

        specialinvoke $r5.<perfetto.protos.TraceConfig$TriggerConfig: void <init>(perfetto.protos.TraceConfig$TriggerConfig$TriggerMode,java.util.List,java.lang.Integer,okio.ByteString)>(r1, r2, r3, r4);

        return $r5;
    }

    public static perfetto.protos.TraceConfig$TriggerConfig copy$default(perfetto.protos.TraceConfig$TriggerConfig, perfetto.protos.TraceConfig$TriggerConfig$TriggerMode, java.util.List, java.lang.Integer, okio.ByteString, int, java.lang.Object)
    {
        perfetto.protos.TraceConfig$TriggerConfig r0, $r2;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Object r1;
        perfetto.protos.TraceConfig$TriggerConfig$TriggerMode r3;
        java.util.List r4;
        java.lang.Integer r5;
        okio.ByteString r6;

        r0 := @parameter0: perfetto.protos.TraceConfig$TriggerConfig;

        r3 := @parameter1: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode;

        r4 := @parameter2: java.util.List;

        r5 := @parameter3: java.lang.Integer;

        r6 := @parameter4: okio.ByteString;

        i0 := @parameter5: int;

        r1 := @parameter6: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r3 = r0.<perfetto.protos.TraceConfig$TriggerConfig: perfetto.protos.TraceConfig$TriggerConfig$TriggerMode trigger_mode>;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r4 = r0.<perfetto.protos.TraceConfig$TriggerConfig: java.util.List triggers>;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        r5 = r0.<perfetto.protos.TraceConfig$TriggerConfig: java.lang.Integer trigger_timeout_ms>;

     label3:
        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        r6 = virtualinvoke r0.<perfetto.protos.TraceConfig$TriggerConfig: okio.ByteString unknownFields()>();

     label4:
        $r2 = virtualinvoke r0.<perfetto.protos.TraceConfig$TriggerConfig: perfetto.protos.TraceConfig$TriggerConfig copy(perfetto.protos.TraceConfig$TriggerConfig$TriggerMode,java.util.List,java.lang.Integer,okio.ByteString)>(r3, r4, r5, r6);

        return $r2;
    }

    public void <init>()
    {
        perfetto.protos.TraceConfig$TriggerConfig r0;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig;

        specialinvoke r0.<perfetto.protos.TraceConfig$TriggerConfig: void <init>(perfetto.protos.TraceConfig$TriggerConfig$TriggerMode,java.util.List,java.lang.Integer,okio.ByteString,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, null, null, null, 15, null);

        return;
    }

    public volatile com.squareup.wire.Message$Builder newBuilder()
    {
        perfetto.protos.TraceConfig$TriggerConfig r0;
        java.lang.Void $r1;
        com.squareup.wire.Message$Builder $r2;

        r0 := @this: perfetto.protos.TraceConfig$TriggerConfig;

        $r1 = virtualinvoke r0.<perfetto.protos.TraceConfig$TriggerConfig: java.lang.Void newBuilder()>();

        $r2 = (com.squareup.wire.Message$Builder) $r1;

        return $r2;
    }

    static void <clinit>()
    {
        com.squareup.wire.FieldEncoding r0;
        kotlin.reflect.KClass r1;
        com.squareup.wire.Syntax r2;
        perfetto.protos.TraceConfig$TriggerConfig$Companion $r3;
        perfetto.protos.TraceConfig$TriggerConfig$Companion$ADAPTER$1 $r4;
        com.squareup.wire.ProtoAdapter $r5;

        $r3 = new perfetto.protos.TraceConfig$TriggerConfig$Companion;

        specialinvoke $r3.<perfetto.protos.TraceConfig$TriggerConfig$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <perfetto.protos.TraceConfig$TriggerConfig: perfetto.protos.TraceConfig$TriggerConfig$Companion Companion> = $r3;

        r0 = <com.squareup.wire.FieldEncoding: com.squareup.wire.FieldEncoding LENGTH_DELIMITED>;

        r1 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Lperfetto/protos/TraceConfig$TriggerConfig;");

        r2 = <com.squareup.wire.Syntax: com.squareup.wire.Syntax PROTO_2>;

        $r4 = new perfetto.protos.TraceConfig$TriggerConfig$Companion$ADAPTER$1;

        specialinvoke $r4.<perfetto.protos.TraceConfig$TriggerConfig$Companion$ADAPTER$1: void <init>(com.squareup.wire.FieldEncoding,kotlin.reflect.KClass,com.squareup.wire.Syntax)>(r0, r1, r2);

        $r5 = (com.squareup.wire.ProtoAdapter) $r4;

        <perfetto.protos.TraceConfig$TriggerConfig: com.squareup.wire.ProtoAdapter ADAPTER> = $r5;

        return;
    }

