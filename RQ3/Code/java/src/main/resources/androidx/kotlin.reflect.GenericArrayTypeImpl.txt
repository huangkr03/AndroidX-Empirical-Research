kotlin.reflect.GenericArrayTypeImpl
<kotlin.reflect.GenericArrayTypeImpl: java.lang.reflect.Type elementType>
    public void <init>(java.lang.reflect.Type)
    {
        kotlin.reflect.GenericArrayTypeImpl $r0;
        java.lang.reflect.Type $r1;

        $r0 := @this: kotlin.reflect.GenericArrayTypeImpl;

        $r1 := @parameter0: java.lang.reflect.Type;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "elementType");

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<kotlin.reflect.GenericArrayTypeImpl: java.lang.reflect.Type elementType> = $r1;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        kotlin.reflect.GenericArrayTypeImpl $r0;
        java.lang.Object $r1;
        boolean $z0;
        java.lang.reflect.Type $r2, $r4;
        java.lang.reflect.GenericArrayType $r3;

        $r0 := @this: kotlin.reflect.GenericArrayTypeImpl;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof java.lang.reflect.GenericArrayType;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r0.<kotlin.reflect.GenericArrayTypeImpl: java.lang.reflect.Type getGenericComponentType()>();

        $r3 = (java.lang.reflect.GenericArrayType) $r1;

        $r4 = interfaceinvoke $r3.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r4);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.reflect.Type getGenericComponentType()
    {
        kotlin.reflect.GenericArrayTypeImpl $r0;
        java.lang.reflect.Type r1;

        $r0 := @this: kotlin.reflect.GenericArrayTypeImpl;

        r1 = $r0.<kotlin.reflect.GenericArrayTypeImpl: java.lang.reflect.Type elementType>;

        return r1;
    }

    public java.lang.String getTypeName()
    {
        kotlin.reflect.GenericArrayTypeImpl $r0;
        java.lang.StringBuilder $r1;
        java.lang.reflect.Type $r2;
        java.lang.String $r3;

        $r0 := @this: kotlin.reflect.GenericArrayTypeImpl;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = $r0.<kotlin.reflect.GenericArrayTypeImpl: java.lang.reflect.Type elementType>;

        $r3 = staticinvoke <kotlin.reflect.TypesJVMKt: java.lang.String access$typeToString(java.lang.reflect.Type)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[]");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public int hashCode()
    {
        kotlin.reflect.GenericArrayTypeImpl $r0;
        java.lang.reflect.Type $r1;
        int $i0;

        $r0 := @this: kotlin.reflect.GenericArrayTypeImpl;

        $r1 = virtualinvoke $r0.<kotlin.reflect.GenericArrayTypeImpl: java.lang.reflect.Type getGenericComponentType()>();

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        kotlin.reflect.GenericArrayTypeImpl $r0;
        java.lang.String $r1;

        $r0 := @this: kotlin.reflect.GenericArrayTypeImpl;

        $r1 = virtualinvoke $r0.<kotlin.reflect.GenericArrayTypeImpl: java.lang.String getTypeName()>();

        return $r1;
    }

