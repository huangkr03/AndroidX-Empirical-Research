kotlinx.coroutines.internal.Removed
<kotlinx.coroutines.internal.Removed: kotlinx.coroutines.internal.LockFreeLinkedListNode ref>
    public void <init>(kotlinx.coroutines.internal.LockFreeLinkedListNode)
    {
        kotlinx.coroutines.internal.Removed $r0;
        kotlinx.coroutines.internal.LockFreeLinkedListNode $r1;

        $r0 := @this: kotlinx.coroutines.internal.Removed;

        $r1 := @parameter0: kotlinx.coroutines.internal.LockFreeLinkedListNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "ref");

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<kotlinx.coroutines.internal.Removed: kotlinx.coroutines.internal.LockFreeLinkedListNode ref> = $r1;

        return;
    }

    public java.lang.String toString()
    {
        kotlinx.coroutines.internal.Removed $r0;
        kotlinx.coroutines.internal.LockFreeLinkedListNode $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        $r0 := @this: kotlinx.coroutines.internal.Removed;

        $r1 = $r0.<kotlinx.coroutines.internal.Removed: kotlinx.coroutines.internal.LockFreeLinkedListNode ref>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removed[");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

