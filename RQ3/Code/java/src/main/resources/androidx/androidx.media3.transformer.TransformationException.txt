androidx.media3.transformer.TransformationException
<androidx.media3.transformer.TransformationException: int ERROR_CODE_UNSPECIFIED>
<androidx.media3.transformer.TransformationException: int ERROR_CODE_FAILED_RUNTIME_CHECK>
<androidx.media3.transformer.TransformationException: int ERROR_CODE_IO_UNSPECIFIED>
<androidx.media3.transformer.TransformationException: int ERROR_CODE_IO_NETWORK_CONNECTION_FAILED>
<androidx.media3.transformer.TransformationException: int ERROR_CODE_IO_NETWORK_CONNECTION_TIMEOUT>
<androidx.media3.transformer.TransformationException: int ERROR_CODE_IO_INVALID_HTTP_CONTENT_TYPE>
<androidx.media3.transformer.TransformationException: int ERROR_CODE_IO_BAD_HTTP_STATUS>
<androidx.media3.transformer.TransformationException: int ERROR_CODE_IO_FILE_NOT_FOUND>
<androidx.media3.transformer.TransformationException: int ERROR_CODE_IO_NO_PERMISSION>
<androidx.media3.transformer.TransformationException: int ERROR_CODE_IO_CLEARTEXT_NOT_PERMITTED>
<androidx.media3.transformer.TransformationException: int ERROR_CODE_IO_READ_POSITION_OUT_OF_RANGE>
<androidx.media3.transformer.TransformationException: int ERROR_CODE_DECODER_INIT_FAILED>
<androidx.media3.transformer.TransformationException: int ERROR_CODE_DECODING_FAILED>
<androidx.media3.transformer.TransformationException: int ERROR_CODE_DECODING_FORMAT_UNSUPPORTED>
<androidx.media3.transformer.TransformationException: int ERROR_CODE_HDR_DECODING_UNSUPPORTED>
<androidx.media3.transformer.TransformationException: int ERROR_CODE_ENCODER_INIT_FAILED>
<androidx.media3.transformer.TransformationException: int ERROR_CODE_ENCODING_FAILED>
<androidx.media3.transformer.TransformationException: int ERROR_CODE_OUTPUT_FORMAT_UNSUPPORTED>
<androidx.media3.transformer.TransformationException: int ERROR_CODE_HDR_ENCODING_UNSUPPORTED>
<androidx.media3.transformer.TransformationException: int ERROR_CODE_FRAME_PROCESSING_FAILED>
<androidx.media3.transformer.TransformationException: int ERROR_CODE_MUXING_FAILED>
<androidx.media3.transformer.TransformationException: com.google.common.collect.ImmutableBiMap NAME_TO_ERROR_CODE>
<androidx.media3.transformer.TransformationException: int errorCode>
<androidx.media3.transformer.TransformationException: long timestampMs>
    private static int getErrorCodeForName(java.lang.String)
    {
        java.lang.String r0;
        com.google.common.collect.ImmutableBiMap $r1;
        java.lang.Integer $r2, $r4;
        java.lang.Object $r3;
        int $i0;

        r0 := @parameter0: java.lang.String;

        $r1 = <androidx.media3.transformer.TransformationException: com.google.common.collect.ImmutableBiMap NAME_TO_ERROR_CODE>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1000);

        $r3 = virtualinvoke $r1.<com.google.common.collect.ImmutableBiMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>(r0, $r2);

        $r4 = (java.lang.Integer) $r3;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public static java.lang.String getErrorCodeName(int)
    {
        int i0;
        com.google.common.collect.ImmutableBiMap $r0, $r1;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        i0 := @parameter0: int;

        $r0 = <androidx.media3.transformer.TransformationException: com.google.common.collect.ImmutableBiMap NAME_TO_ERROR_CODE>;

        $r1 = virtualinvoke $r0.<com.google.common.collect.ImmutableBiMap: com.google.common.collect.ImmutableBiMap inverse()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = virtualinvoke $r1.<com.google.common.collect.ImmutableBiMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>($r2, "invalid error code");

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public java.lang.String getErrorCodeName()
    {
        androidx.media3.transformer.TransformationException r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: androidx.media3.transformer.TransformationException;

        $i0 = r0.<androidx.media3.transformer.TransformationException: int errorCode>;

        $r1 = staticinvoke <androidx.media3.transformer.TransformationException: java.lang.String getErrorCodeName(int)>($i0);

        return $r1;
    }

    public static androidx.media3.transformer.TransformationException createForCodec(java.lang.Throwable, boolean, boolean, android.media.MediaFormat, java.lang.String, int)
    {
        java.lang.Throwable r0;
        boolean z0, z1;
        android.media.MediaFormat r1;
        java.lang.String r2, r3, r4, $r15, $r16;
        int i0;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        androidx.media3.transformer.TransformationException $r14;

        r0 := @parameter0: java.lang.Throwable;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r1 := @parameter3: android.media.MediaFormat;

        r2 := @parameter4: java.lang.String;

        i0 := @parameter5: int;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        if z0 == 0 goto label1;

        $r15 = "Video";

        goto label2;

     label1:
        $r15 = "Audio";

     label2:
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        if z1 == 0 goto label3;

        $r16 = "Decoder";

        goto label4;

     label3:
        $r16 = "Encoder";

     label4:
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mediaFormat=");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mediaCodecName=");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r4 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = new androidx.media3.transformer.TransformationException;

        specialinvoke $r14.<androidx.media3.transformer.TransformationException: void <init>(java.lang.String,java.lang.Throwable,int)>(r4, r0, i0);

        return $r14;
    }

    public static androidx.media3.transformer.TransformationException createForCodec(java.lang.Throwable, boolean, boolean, androidx.media3.common.Format, java.lang.String, int)
    {
        java.lang.Throwable r0;
        boolean z0, z1;
        androidx.media3.common.Format r1;
        java.lang.String r2, r3, r4, $r15, $r16;
        int i0;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        androidx.media3.transformer.TransformationException $r14;

        r0 := @parameter0: java.lang.Throwable;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r1 := @parameter3: androidx.media3.common.Format;

        r2 := @parameter4: java.lang.String;

        i0 := @parameter5: int;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        if z0 == 0 goto label1;

        $r15 = "Video";

        goto label2;

     label1:
        $r15 = "Audio";

     label2:
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        if z1 == 0 goto label3;

        $r16 = "Decoder";

        goto label4;

     label3:
        $r16 = "Encoder";

     label4:
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" error, format=");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mediaCodecName=");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r4 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = new androidx.media3.transformer.TransformationException;

        specialinvoke $r14.<androidx.media3.transformer.TransformationException: void <init>(java.lang.String,java.lang.Throwable,int)>(r4, r0, i0);

        return $r14;
    }

    public static androidx.media3.transformer.TransformationException createForAudioProcessor(java.lang.Throwable, java.lang.String, androidx.media3.common.audio.AudioProcessor$AudioFormat, int)
    {
        java.lang.Throwable r0;
        java.lang.String r1, $r8;
        androidx.media3.common.audio.AudioProcessor$AudioFormat r2;
        int i0;
        androidx.media3.transformer.TransformationException $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;

        r0 := @parameter0: java.lang.Throwable;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: androidx.media3.common.audio.AudioProcessor$AudioFormat;

        i0 := @parameter3: int;

        $r3 = new androidx.media3.transformer.TransformationException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" error, audio_format = ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<androidx.media3.transformer.TransformationException: void <init>(java.lang.String,java.lang.Throwable,int)>($r8, r0, i0);

        return $r3;
    }

    static androidx.media3.transformer.TransformationException createForFrameProcessingException(androidx.media3.common.FrameProcessingException, int)
    {
        androidx.media3.common.FrameProcessingException r0;
        int i0;
        androidx.media3.transformer.TransformationException $r1;

        r0 := @parameter0: androidx.media3.common.FrameProcessingException;

        i0 := @parameter1: int;

        $r1 = new androidx.media3.transformer.TransformationException;

        specialinvoke $r1.<androidx.media3.transformer.TransformationException: void <init>(java.lang.String,java.lang.Throwable,int)>("Frame processing error", r0, i0);

        return $r1;
    }

    static androidx.media3.transformer.TransformationException createForMuxer(java.lang.Throwable, int)
    {
        java.lang.Throwable r0;
        int i0;
        androidx.media3.transformer.TransformationException $r1;

        r0 := @parameter0: java.lang.Throwable;

        i0 := @parameter1: int;

        $r1 = new androidx.media3.transformer.TransformationException;

        specialinvoke $r1.<androidx.media3.transformer.TransformationException: void <init>(java.lang.String,java.lang.Throwable,int)>("Muxer error", r0, i0);

        return $r1;
    }

    public static androidx.media3.transformer.TransformationException createForUnexpected(java.lang.Exception)
    {
        java.lang.Exception r0;
        boolean $z0;
        androidx.media3.transformer.TransformationException r3, r4;
        java.lang.Throwable r5, r6;

        r0 := @parameter0: java.lang.Exception;

        $z0 = r0 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label1;

        r3 = new androidx.media3.transformer.TransformationException;

        r5 = (java.lang.Throwable) r0;

        specialinvoke r3.<androidx.media3.transformer.TransformationException: void <init>(java.lang.String,java.lang.Throwable,int)>("Unexpected runtime error", r5, 1001);

        return r3;

     label1:
        r4 = new androidx.media3.transformer.TransformationException;

        r6 = (java.lang.Throwable) r0;

        specialinvoke r4.<androidx.media3.transformer.TransformationException: void <init>(java.lang.String,java.lang.Throwable,int)>("Unexpected error", r6, 1000);

        return r4;
    }

    static androidx.media3.transformer.TransformationException createForPlaybackException(androidx.media3.common.PlaybackException)
    {
        androidx.media3.common.PlaybackException r0;
        int i0;
        java.lang.String $r1, $r2;
        androidx.media3.transformer.TransformationException $r3;

        r0 := @parameter0: androidx.media3.common.PlaybackException;

        $r1 = virtualinvoke r0.<androidx.media3.common.PlaybackException: java.lang.String getErrorCodeName()>();

        i0 = staticinvoke <androidx.media3.transformer.TransformationException: int getErrorCodeForName(java.lang.String)>($r1);

        if i0 != 1000 goto label1;

        $r3 = staticinvoke <androidx.media3.transformer.TransformationException: androidx.media3.transformer.TransformationException createForUnexpected(java.lang.Exception)>(r0);

        goto label2;

     label1:
        $r3 = new androidx.media3.transformer.TransformationException;

        $r2 = virtualinvoke r0.<androidx.media3.common.PlaybackException: java.lang.String getMessage()>();

        specialinvoke $r3.<androidx.media3.transformer.TransformationException: void <init>(java.lang.String,java.lang.Throwable,int)>($r2, r0, i0);

     label2:
        return $r3;
    }

    private void <init>(java.lang.String, java.lang.Throwable, int)
    {
        androidx.media3.transformer.TransformationException r0;
        java.lang.String r1;
        java.lang.Throwable r2;
        int i0;
        androidx.media3.common.util.Clock $r3;
        long $l1;

        r0 := @this: androidx.media3.transformer.TransformationException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>(r1, r2);

        r0.<androidx.media3.transformer.TransformationException: int errorCode> = i0;

        $r3 = <androidx.media3.common.util.Clock: androidx.media3.common.util.Clock DEFAULT>;

        $l1 = interfaceinvoke $r3.<androidx.media3.common.util.Clock: long elapsedRealtime()>();

        r0.<androidx.media3.transformer.TransformationException: long timestampMs> = $l1;

        return;
    }

    public boolean errorInfoEquals(androidx.media3.transformer.TransformationException)
    {
        androidx.media3.transformer.TransformationException r0, r1;
        java.lang.Throwable r2, r3;
        java.lang.Class $r4, $r5, $r10, $r11;
        int $i0, $i1;
        java.lang.String $r6, $r7, $r8, $r9;
        boolean $z0, $z1, $z2, $z3;
        long $l2, $l3;
        byte $b4;

        r0 := @this: androidx.media3.transformer.TransformationException;

        r1 := @parameter0: androidx.media3.transformer.TransformationException;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r4 == $r5 goto label3;

     label2:
        return 0;

     label3:
        r2 = virtualinvoke r0.<androidx.media3.transformer.TransformationException: java.lang.Throwable getCause()>();

        r3 = virtualinvoke r1.<androidx.media3.transformer.TransformationException: java.lang.Throwable getCause()>();

        if r2 == null goto label5;

        if r3 == null goto label5;

        $r8 = virtualinvoke r2.<java.lang.Throwable: java.lang.String getMessage()>();

        $r9 = virtualinvoke r3.<java.lang.Throwable: java.lang.String getMessage()>();

        $z1 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r8, $r9);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        $r10 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $z2 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r10, $r11);

        if $z2 != 0 goto label7;

        return 0;

     label5:
        if r2 != null goto label6;

        if r3 == null goto label7;

     label6:
        return 0;

     label7:
        $i1 = r0.<androidx.media3.transformer.TransformationException: int errorCode>;

        $i0 = r1.<androidx.media3.transformer.TransformationException: int errorCode>;

        if $i1 != $i0 goto label8;

        $r6 = virtualinvoke r0.<androidx.media3.transformer.TransformationException: java.lang.String getMessage()>();

        $r7 = virtualinvoke r1.<androidx.media3.transformer.TransformationException: java.lang.String getMessage()>();

        $z0 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r6, $r7);

        if $z0 == 0 goto label8;

        $l3 = r0.<androidx.media3.transformer.TransformationException: long timestampMs>;

        $l2 = r1.<androidx.media3.transformer.TransformationException: long timestampMs>;

        $b4 = $l3 cmp $l2;

        if $b4 != 0 goto label8;

        $z3 = 1;

        goto label9;

     label8:
        $z3 = 0;

     label9:
        return $z3;
    }

    static void <clinit>()
    {
        com.google.common.collect.ImmutableBiMap$Builder $r0, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r38, $r40;
        java.lang.Integer $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r35, $r37, $r39;
        com.google.common.collect.ImmutableBiMap $r41;

        $r0 = new com.google.common.collect.ImmutableBiMap$Builder;

        specialinvoke $r0.<com.google.common.collect.ImmutableBiMap$Builder: void <init>()>();

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1001);

        $r2 = virtualinvoke $r0.<com.google.common.collect.ImmutableBiMap$Builder: com.google.common.collect.ImmutableBiMap$Builder put(java.lang.Object,java.lang.Object)>("ERROR_CODE_FAILED_RUNTIME_CHECK", $r1);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2000);

        $r4 = virtualinvoke $r2.<com.google.common.collect.ImmutableBiMap$Builder: com.google.common.collect.ImmutableBiMap$Builder put(java.lang.Object,java.lang.Object)>("ERROR_CODE_IO_UNSPECIFIED", $r3);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2001);

        $r6 = virtualinvoke $r4.<com.google.common.collect.ImmutableBiMap$Builder: com.google.common.collect.ImmutableBiMap$Builder put(java.lang.Object,java.lang.Object)>("ERROR_CODE_IO_NETWORK_CONNECTION_FAILED", $r5);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2002);

        $r8 = virtualinvoke $r6.<com.google.common.collect.ImmutableBiMap$Builder: com.google.common.collect.ImmutableBiMap$Builder put(java.lang.Object,java.lang.Object)>("ERROR_CODE_IO_NETWORK_CONNECTION_TIMEOUT", $r7);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2003);

        $r10 = virtualinvoke $r8.<com.google.common.collect.ImmutableBiMap$Builder: com.google.common.collect.ImmutableBiMap$Builder put(java.lang.Object,java.lang.Object)>("ERROR_CODE_IO_INVALID_HTTP_CONTENT_TYPE", $r9);

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2004);

        $r12 = virtualinvoke $r10.<com.google.common.collect.ImmutableBiMap$Builder: com.google.common.collect.ImmutableBiMap$Builder put(java.lang.Object,java.lang.Object)>("ERROR_CODE_IO_BAD_HTTP_STATUS", $r11);

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2005);

        $r14 = virtualinvoke $r12.<com.google.common.collect.ImmutableBiMap$Builder: com.google.common.collect.ImmutableBiMap$Builder put(java.lang.Object,java.lang.Object)>("ERROR_CODE_IO_FILE_NOT_FOUND", $r13);

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2006);

        $r16 = virtualinvoke $r14.<com.google.common.collect.ImmutableBiMap$Builder: com.google.common.collect.ImmutableBiMap$Builder put(java.lang.Object,java.lang.Object)>("ERROR_CODE_IO_NO_PERMISSION", $r15);

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2007);

        $r18 = virtualinvoke $r16.<com.google.common.collect.ImmutableBiMap$Builder: com.google.common.collect.ImmutableBiMap$Builder put(java.lang.Object,java.lang.Object)>("ERROR_CODE_IO_CLEARTEXT_NOT_PERMITTED", $r17);

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2008);

        $r20 = virtualinvoke $r18.<com.google.common.collect.ImmutableBiMap$Builder: com.google.common.collect.ImmutableBiMap$Builder put(java.lang.Object,java.lang.Object)>("ERROR_CODE_IO_READ_POSITION_OUT_OF_RANGE", $r19);

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3001);

        $r22 = virtualinvoke $r20.<com.google.common.collect.ImmutableBiMap$Builder: com.google.common.collect.ImmutableBiMap$Builder put(java.lang.Object,java.lang.Object)>("ERROR_CODE_DECODER_INIT_FAILED", $r21);

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3002);

        $r24 = virtualinvoke $r22.<com.google.common.collect.ImmutableBiMap$Builder: com.google.common.collect.ImmutableBiMap$Builder put(java.lang.Object,java.lang.Object)>("ERROR_CODE_DECODING_FAILED", $r23);

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3003);

        $r26 = virtualinvoke $r24.<com.google.common.collect.ImmutableBiMap$Builder: com.google.common.collect.ImmutableBiMap$Builder put(java.lang.Object,java.lang.Object)>("ERROR_CODE_DECODING_FORMAT_UNSUPPORTED", $r25);

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3004);

        $r28 = virtualinvoke $r26.<com.google.common.collect.ImmutableBiMap$Builder: com.google.common.collect.ImmutableBiMap$Builder put(java.lang.Object,java.lang.Object)>("ERROR_CODE_HDR_DECODING_UNSUPPORTED", $r27);

        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4001);

        $r30 = virtualinvoke $r28.<com.google.common.collect.ImmutableBiMap$Builder: com.google.common.collect.ImmutableBiMap$Builder put(java.lang.Object,java.lang.Object)>("ERROR_CODE_ENCODER_INIT_FAILED", $r29);

        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4002);

        $r32 = virtualinvoke $r30.<com.google.common.collect.ImmutableBiMap$Builder: com.google.common.collect.ImmutableBiMap$Builder put(java.lang.Object,java.lang.Object)>("ERROR_CODE_ENCODING_FAILED", $r31);

        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4003);

        $r34 = virtualinvoke $r32.<com.google.common.collect.ImmutableBiMap$Builder: com.google.common.collect.ImmutableBiMap$Builder put(java.lang.Object,java.lang.Object)>("ERROR_CODE_OUTPUT_FORMAT_UNSUPPORTED", $r33);

        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4004);

        $r36 = virtualinvoke $r34.<com.google.common.collect.ImmutableBiMap$Builder: com.google.common.collect.ImmutableBiMap$Builder put(java.lang.Object,java.lang.Object)>("ERROR_CODE_HDR_ENCODING_UNSUPPORTED", $r35);

        $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5001);

        $r38 = virtualinvoke $r36.<com.google.common.collect.ImmutableBiMap$Builder: com.google.common.collect.ImmutableBiMap$Builder put(java.lang.Object,java.lang.Object)>("ERROR_CODE_FRAME_PROCESSING_FAILED", $r37);

        $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6001);

        $r40 = virtualinvoke $r38.<com.google.common.collect.ImmutableBiMap$Builder: com.google.common.collect.ImmutableBiMap$Builder put(java.lang.Object,java.lang.Object)>("ERROR_CODE_MUXING_FAILED", $r39);

        $r41 = virtualinvoke $r40.<com.google.common.collect.ImmutableBiMap$Builder: com.google.common.collect.ImmutableBiMap buildOrThrow()>();

        <androidx.media3.transformer.TransformationException: com.google.common.collect.ImmutableBiMap NAME_TO_ERROR_CODE> = $r41;

        return;
    }

androidx.media3.transformer.TransformationException$ErrorCode
