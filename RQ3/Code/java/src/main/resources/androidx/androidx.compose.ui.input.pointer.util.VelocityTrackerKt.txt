androidx.compose.ui.input.pointer.util.VelocityTrackerKt
<androidx.compose.ui.input.pointer.util.VelocityTrackerKt: int AssumePointerMoveStoppedMilliseconds>
<androidx.compose.ui.input.pointer.util.VelocityTrackerKt: int HistorySize>
<androidx.compose.ui.input.pointer.util.VelocityTrackerKt: int HorizonMilliseconds>
<androidx.compose.ui.input.pointer.util.VelocityTrackerKt: int MinSampleSize>
<androidx.compose.ui.input.pointer.util.VelocityTrackerKt: float DefaultWeight>
    public static final void addPointerInputChange(androidx.compose.ui.input.pointer.util.VelocityTracker, androidx.compose.ui.input.pointer.PointerInputChange)
    {
        androidx.compose.ui.input.pointer.util.VelocityTracker $r0;
        androidx.compose.ui.input.pointer.PointerInputChange r1;
        int i0, i15;
        java.lang.Object r2;
        androidx.compose.ui.input.pointer.HistoricalChange r3;
        long l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12, l13, l14, $l16;
        boolean $z2;
        java.util.List $r4;

        $r0 := @parameter0: androidx.compose.ui.input.pointer.util.VelocityTracker;

        r1 := @parameter1: androidx.compose.ui.input.pointer.PointerInputChange;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "event");

        $z2 = staticinvoke <androidx.compose.ui.input.pointer.PointerEventKt: boolean changedToDownIgnoreConsumed(androidx.compose.ui.input.pointer.PointerInputChange)>(r1);

        if $z2 == 0 goto label1;

        $l12 = virtualinvoke r1.<androidx.compose.ui.input.pointer.PointerInputChange: long getPosition-F1C5BW0()>();

        virtualinvoke $r0.<androidx.compose.ui.input.pointer.util.VelocityTracker: void setCurrentPointerPositionAccumulator-k-4lQ0M$ui_release(long)>($l12);

        virtualinvoke $r0.<androidx.compose.ui.input.pointer.util.VelocityTracker: void resetTracking()>();

     label1:
        l13 = 0L;

        l14 = virtualinvoke r1.<androidx.compose.ui.input.pointer.PointerInputChange: long getPreviousPosition-F1C5BW0()>();

        $r4 = virtualinvoke r1.<androidx.compose.ui.input.pointer.PointerInputChange: java.util.List getHistorical()>();

        i15 = 0;

        i0 = interfaceinvoke $r4.<java.util.List: int size()>();

     label2:
        if i15 >= i0 goto label3;

        r2 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i15);

        r3 = (androidx.compose.ui.input.pointer.HistoricalChange) r2;

        $l7 = virtualinvoke r3.<androidx.compose.ui.input.pointer.HistoricalChange: long getPosition-F1C5BW0()>();

        l1 = staticinvoke <androidx.compose.ui.geometry.Offset: long minus-MK-Hz9U(long,long)>($l7, l14);

        l14 = virtualinvoke r3.<androidx.compose.ui.input.pointer.HistoricalChange: long getPosition-F1C5BW0()>();

        $l8 = virtualinvoke $r0.<androidx.compose.ui.input.pointer.util.VelocityTracker: long getCurrentPointerPositionAccumulator-F1C5BW0$ui_release()>();

        $l9 = staticinvoke <androidx.compose.ui.geometry.Offset: long plus-MK-Hz9U(long,long)>($l8, l1);

        virtualinvoke $r0.<androidx.compose.ui.input.pointer.util.VelocityTracker: void setCurrentPointerPositionAccumulator-k-4lQ0M$ui_release(long)>($l9);

        $l10 = virtualinvoke r3.<androidx.compose.ui.input.pointer.HistoricalChange: long getUptimeMillis()>();

        $l11 = virtualinvoke $r0.<androidx.compose.ui.input.pointer.util.VelocityTracker: long getCurrentPointerPositionAccumulator-F1C5BW0$ui_release()>();

        virtualinvoke $r0.<androidx.compose.ui.input.pointer.util.VelocityTracker: void addPosition-Uv8p0NA(long,long)>($l10, $l11);

        i15 = i15 + 1;

        goto label2;

     label3:
        $l2 = virtualinvoke r1.<androidx.compose.ui.input.pointer.PointerInputChange: long getPosition-F1C5BW0()>();

        $l16 = staticinvoke <androidx.compose.ui.geometry.Offset: long minus-MK-Hz9U(long,long)>($l2, l14);

        $l3 = virtualinvoke $r0.<androidx.compose.ui.input.pointer.util.VelocityTracker: long getCurrentPointerPositionAccumulator-F1C5BW0$ui_release()>();

        $l4 = staticinvoke <androidx.compose.ui.geometry.Offset: long plus-MK-Hz9U(long,long)>($l3, $l16);

        virtualinvoke $r0.<androidx.compose.ui.input.pointer.util.VelocityTracker: void setCurrentPointerPositionAccumulator-k-4lQ0M$ui_release(long)>($l4);

        $l5 = virtualinvoke r1.<androidx.compose.ui.input.pointer.PointerInputChange: long getUptimeMillis()>();

        $l6 = virtualinvoke $r0.<androidx.compose.ui.input.pointer.util.VelocityTracker: long getCurrentPointerPositionAccumulator-F1C5BW0$ui_release()>();

        virtualinvoke $r0.<androidx.compose.ui.input.pointer.util.VelocityTracker: void addPosition-Uv8p0NA(long,long)>($l5, $l6);

        return;
    }

    public static final androidx.compose.ui.input.pointer.util.PolynomialFit polyFitLeastSquares(java.util.List, java.util.List, int)
    {
        java.util.List r0, r1, r2;
        int i0, i1, $i2, $i3, $i4, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i15, i16, i17, i18, i19, $i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34;
        java.util.ArrayList r3, $r4, r50;
        boolean $z0;
        androidx.compose.ui.input.pointer.util.Matrix $r5, $r6, $r7, r51, r52, r53;
        androidx.compose.ui.input.pointer.util.Vector $r8, $r22, $r37, $r38, $r39, $r42, $r43;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, f34, f35, f36, $f37, f38, f39, f40, f41, f42, f43, f44, $f45, f46;
        byte $b5, $b6;
        androidx.compose.ui.input.pointer.util.PolynomialFit $r9;
        java.lang.Object $r10, $r12, $r14, $r16, $r18, $r20, $r25, $r29, $r31, $r35, $r44;
        java.lang.Number $r11, $r13, $r15, $r17, $r19, $r21, $r26, $r30, $r32, $r36, $r45;
        java.lang.Float $r23, $r27, $r33, $r46;
        double $d0;
        java.lang.IllegalArgumentException $r41, $r47, $r48, $r49;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "x");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "y");

        if i0 >= 1 goto label01;

        $r49 = new java.lang.IllegalArgumentException;

        specialinvoke $r49.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The degree must be at positive integer");

        throw $r49;

     label01:
        $i2 = interfaceinvoke r0.<java.util.List: int size()>();

        $i3 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i2 == $i3 goto label02;

        $r48 = new java.lang.IllegalArgumentException;

        specialinvoke $r48.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("x and y must be the same length");

        throw $r48;

     label02:
        $z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label03;

        $r47 = new java.lang.IllegalArgumentException;

        specialinvoke $r47.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("At least one point must be provided");

        throw $r47;

     label03:
        $i4 = interfaceinvoke r0.<java.util.List: int size()>();

        if i0 < $i4 goto label04;

        $i10 = interfaceinvoke r0.<java.util.List: int size()>();

        $i11 = $i10 - 1;

        goto label05;

     label04:
        $i11 = i0;

     label05:
        i1 = $i11;

        i12 = i0 + 1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(i12);

        r50 = $r4;

        i13 = 0;

     label06:
        if i13 >= i12 goto label07;

        i14 = i13;

        i15 = i14;

        r3 = r50;

        $r46 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r46);

        i13 = i13 + 1;

        goto label06;

     label07:
        r2 = (java.util.List) r50;

        i16 = interfaceinvoke r0.<java.util.List: int size()>();

        i17 = i1 + 1;

        $r5 = new androidx.compose.ui.input.pointer.util.Matrix;

        specialinvoke $r5.<androidx.compose.ui.input.pointer.util.Matrix: void <init>(int,int)>(i17, i16);

        r51 = $r5;

        i18 = 0;

     label08:
        if i18 >= i16 goto label11;

        virtualinvoke r51.<androidx.compose.ui.input.pointer.util.Matrix: void set(int,int,float)>(0, i18, 1.0F);

        i19 = 1;

     label09:
        if i19 >= i17 goto label10;

        $i9 = i19 - 1;

        $f31 = virtualinvoke r51.<androidx.compose.ui.input.pointer.util.Matrix: float get(int,int)>($i9, i18);

        $r44 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i18);

        $r45 = (java.lang.Number) $r44;

        $f32 = virtualinvoke $r45.<java.lang.Number: float floatValue()>();

        $f33 = $f31 * $f32;

        virtualinvoke r51.<androidx.compose.ui.input.pointer.util.Matrix: void set(int,int,float)>(i19, i18, $f33);

        i19 = i19 + 1;

        goto label09;

     label10:
        i18 = i18 + 1;

        goto label08;

     label11:
        $r6 = new androidx.compose.ui.input.pointer.util.Matrix;

        specialinvoke $r6.<androidx.compose.ui.input.pointer.util.Matrix: void <init>(int,int)>(i17, i16);

        r52 = $r6;

        $r7 = new androidx.compose.ui.input.pointer.util.Matrix;

        specialinvoke $r7.<androidx.compose.ui.input.pointer.util.Matrix: void <init>(int,int)>(i17, i17);

        r53 = $r7;

        $i20 = 0;

     label12:
        if $i20 >= i17 goto label26;

        i21 = 0;

     label13:
        if i21 >= i16 goto label14;

        $f30 = virtualinvoke r51.<androidx.compose.ui.input.pointer.util.Matrix: float get(int,int)>($i20, i21);

        virtualinvoke r52.<androidx.compose.ui.input.pointer.util.Matrix: void set(int,int,float)>($i20, i21, $f30);

        i21 = i21 + 1;

        goto label13;

     label14:
        i22 = 0;

     label15:
        if i22 >= $i20 goto label18;

        $r42 = virtualinvoke r52.<androidx.compose.ui.input.pointer.util.Matrix: androidx.compose.ui.input.pointer.util.Vector getRow(int)>($i20);

        $r43 = virtualinvoke r52.<androidx.compose.ui.input.pointer.util.Matrix: androidx.compose.ui.input.pointer.util.Vector getRow(int)>(i22);

        f34 = virtualinvoke $r42.<androidx.compose.ui.input.pointer.util.Vector: float times(androidx.compose.ui.input.pointer.util.Vector)>($r43);

        i23 = 0;

     label16:
        if i23 >= i16 goto label17;

        $f26 = virtualinvoke r52.<androidx.compose.ui.input.pointer.util.Matrix: float get(int,int)>($i20, i23);

        $f27 = virtualinvoke r52.<androidx.compose.ui.input.pointer.util.Matrix: float get(int,int)>(i22, i23);

        $f28 = f34 * $f27;

        $f29 = $f26 - $f28;

        virtualinvoke r52.<androidx.compose.ui.input.pointer.util.Matrix: void set(int,int,float)>($i20, i23, $f29);

        i23 = i23 + 1;

        goto label16;

     label17:
        i22 = i22 + 1;

        goto label15;

     label18:
        $r37 = virtualinvoke r52.<androidx.compose.ui.input.pointer.util.Matrix: androidx.compose.ui.input.pointer.util.Vector getRow(int)>($i20);

        f35 = virtualinvoke $r37.<androidx.compose.ui.input.pointer.util.Vector: float norm()>();

        $d0 = (double) f35;

        $b6 = $d0 cmpg 1.0E-6;

        if $b6 >= 0 goto label19;

        $r41 = new java.lang.IllegalArgumentException;

        specialinvoke $r41.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Vectors are linearly dependent or zero so no solution. TODO(shepshapard), actually determine what this means");

        throw $r41;

     label19:
        f36 = 1.0F / f35;

        i24 = 0;

     label20:
        if i24 >= i16 goto label21;

        $f24 = virtualinvoke r52.<androidx.compose.ui.input.pointer.util.Matrix: float get(int,int)>($i20, i24);

        $f25 = $f24 * f36;

        virtualinvoke r52.<androidx.compose.ui.input.pointer.util.Matrix: void set(int,int,float)>($i20, i24, $f25);

        i24 = i24 + 1;

        goto label20;

     label21:
        i25 = 0;

     label22:
        if i25 >= i17 goto label25;

        $i7 = $i20;

        $i8 = i25;

        if i25 >= $i20 goto label23;

        $f37 = 0.0F;

        goto label24;

     label23:
        $r38 = virtualinvoke r52.<androidx.compose.ui.input.pointer.util.Matrix: androidx.compose.ui.input.pointer.util.Vector getRow(int)>($i20);

        $r39 = virtualinvoke r51.<androidx.compose.ui.input.pointer.util.Matrix: androidx.compose.ui.input.pointer.util.Vector getRow(int)>(i25);

        $f37 = virtualinvoke $r38.<androidx.compose.ui.input.pointer.util.Vector: float times(androidx.compose.ui.input.pointer.util.Vector)>($r39);

     label24:
        virtualinvoke r53.<androidx.compose.ui.input.pointer.util.Matrix: void set(int,int,float)>($i7, $i8, $f37);

        i25 = i25 + 1;

        goto label22;

     label25:
        $i20 = $i20 + 1;

        goto label12;

     label26:
        $r8 = new androidx.compose.ui.input.pointer.util.Vector;

        specialinvoke $r8.<androidx.compose.ui.input.pointer.util.Vector: void <init>(int)>(i16);

        i26 = 0;

     label27:
        if i26 >= i16 goto label28;

        $r35 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i26);

        $r36 = (java.lang.Number) $r35;

        $f22 = virtualinvoke $r36.<java.lang.Number: float floatValue()>();

        $f23 = $f22 * 1.0F;

        virtualinvoke $r8.<androidx.compose.ui.input.pointer.util.Vector: void set(int,float)>(i26, $f23);

        i26 = i26 + 1;

        goto label27;

     label28:
        i27 = i17 - 1;

     label29:
        if -1 >= i27 goto label32;

        $r22 = virtualinvoke r52.<androidx.compose.ui.input.pointer.util.Matrix: androidx.compose.ui.input.pointer.util.Vector getRow(int)>(i27);

        $f13 = virtualinvoke $r22.<androidx.compose.ui.input.pointer.util.Vector: float times(androidx.compose.ui.input.pointer.util.Vector)>($r8);

        $r23 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f13);

        interfaceinvoke r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i27, $r23);

        i28 = i17 - 1;

        i29 = i27 + 1;

        if i29 > i28 goto label31;

     label30:
        i30 = i27;

        $r29 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i30);

        $r30 = (java.lang.Number) $r29;

        $f17 = virtualinvoke $r30.<java.lang.Number: float floatValue()>();

        $f18 = virtualinvoke r53.<androidx.compose.ui.input.pointer.util.Matrix: float get(int,int)>(i27, i28);

        $r31 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i28);

        $r32 = (java.lang.Number) $r31;

        $f19 = virtualinvoke $r32.<java.lang.Number: float floatValue()>();

        $f20 = $f18 * $f19;

        $f21 = $f17 - $f20;

        $r33 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f21);

        interfaceinvoke r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i30, $r33);

        if i28 == i29 goto label31;

        i28 = i28 + -1;

        goto label30;

     label31:
        i31 = i27;

        $r25 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i31);

        $r26 = (java.lang.Number) $r25;

        $f14 = virtualinvoke $r26.<java.lang.Number: float floatValue()>();

        $f15 = virtualinvoke r53.<androidx.compose.ui.input.pointer.util.Matrix: float get(int,int)>(i27, i27);

        $f16 = $f14 / $f15;

        $r27 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f16);

        interfaceinvoke r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i31, $r27);

        i27 = i27 + -1;

        goto label29;

     label32:
        f38 = 0.0F;

        i32 = 0;

     label33:
        if i32 >= i16 goto label34;

        $r20 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i32);

        $r21 = (java.lang.Number) $r20;

        $f12 = virtualinvoke $r21.<java.lang.Number: float floatValue()>();

        f38 = f38 + $f12;

        i32 = i32 + 1;

        goto label33;

     label34:
        $f0 = (float) i16;

        f39 = f38 / $f0;

        f40 = 0.0F;

        f41 = 0.0F;

        i33 = 0;

     label35:
        if i33 >= i16 goto label38;

        f42 = 1.0F;

        $r10 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i33);

        $r11 = (java.lang.Number) $r10;

        $f2 = virtualinvoke $r11.<java.lang.Number: float floatValue()>();

        $r12 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $r13 = (java.lang.Number) $r12;

        $f3 = virtualinvoke $r13.<java.lang.Number: float floatValue()>();

        f43 = $f2 - $f3;

        i34 = 1;

     label36:
        if i34 >= i17 goto label37;

        $r16 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i33);

        $r17 = (java.lang.Number) $r16;

        $f9 = virtualinvoke $r17.<java.lang.Number: float floatValue()>();

        f42 = f42 * $f9;

        $r18 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i34);

        $r19 = (java.lang.Number) $r18;

        $f10 = virtualinvoke $r19.<java.lang.Number: float floatValue()>();

        $f11 = f42 * $f10;

        f43 = f43 - $f11;

        i34 = i34 + 1;

        goto label36;

     label37:
        $f4 = 1.0F * f43;

        $f5 = $f4 * f43;

        f40 = f40 + $f5;

        $r14 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i33);

        $r15 = (java.lang.Number) $r14;

        $f6 = virtualinvoke $r15.<java.lang.Number: float floatValue()>();

        f44 = $f6 - f39;

        $f7 = 1.0F * f44;

        $f8 = $f7 * f44;

        f41 = f41 + $f8;

        i33 = i33 + 1;

        goto label35;

     label38:
        $b5 = f41 cmpg 1.0E-6F;

        if $b5 > 0 goto label39;

        $f45 = 1.0F;

        goto label40;

     label39:
        $f1 = f40 / f41;

        $f45 = 1.0F - $f1;

     label40:
        f46 = $f45;

        $r9 = new androidx.compose.ui.input.pointer.util.PolynomialFit;

        specialinvoke $r9.<androidx.compose.ui.input.pointer.util.PolynomialFit: void <init>(java.util.List,float)>(r2, f46);

        return $r9;
    }

