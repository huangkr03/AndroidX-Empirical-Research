io.grpc.internal.LogExceptionRunnable
<io.grpc.internal.LogExceptionRunnable: java.util.logging.Logger log>
<io.grpc.internal.LogExceptionRunnable: java.lang.Runnable task>
    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "Lio/grpc/internal/LogExceptionRunnable;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <io.grpc.internal.LogExceptionRunnable: java.util.logging.Logger log> = $r2;

        return;
    }

    public void <init>(java.lang.Runnable)
    {
        io.grpc.internal.LogExceptionRunnable $r0;
        java.lang.Object $r1;
        java.lang.Runnable $r2;

        $r0 := @this: io.grpc.internal.LogExceptionRunnable;

        $r2 := @parameter0: java.lang.Runnable;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r2, "task");

        $r2 = (java.lang.Runnable) $r1;

        $r0.<io.grpc.internal.LogExceptionRunnable: java.lang.Runnable task> = $r2;

        return;
    }

    public void run()
    {
        io.grpc.internal.LogExceptionRunnable $r0;
        java.util.logging.Level $r1;
        java.lang.Runnable $r2;
        java.lang.Throwable $r3;
        java.util.logging.Logger $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        java.lang.AssertionError $r7;

        $r0 := @this: io.grpc.internal.LogExceptionRunnable;

        $r2 = $r0.<io.grpc.internal.LogExceptionRunnable: java.lang.Runnable task>;

     label1:
        interfaceinvoke $r2.<java.lang.Runnable: void run()>();

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = <io.grpc.internal.LogExceptionRunnable: java.util.logging.Logger log>;

        $r1 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception while executing runnable ");

        $r2 = $r0.<io.grpc.internal.LogExceptionRunnable: java.lang.Runnable task>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.util.logging.Logger: void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>($r1, "io.grpc.internal.LogExceptionRunnable", "run", $r6, $r3);

        staticinvoke <com.google.common.base.Throwables: void throwIfUnchecked(java.lang.Throwable)>($r3);

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>($r3);

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String toString()
    {
        io.grpc.internal.LogExceptionRunnable $r0;
        java.lang.StringBuilder $r1;
        java.lang.Runnable $r2;
        java.lang.String $r3;

        $r0 := @this: io.grpc.internal.LogExceptionRunnable;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LogExceptionRunnable(");

        $r2 = $r0.<io.grpc.internal.LogExceptionRunnable: java.lang.Runnable task>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

