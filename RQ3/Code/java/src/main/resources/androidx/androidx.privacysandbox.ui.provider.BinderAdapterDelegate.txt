androidx.privacysandbox.ui.provider.BinderAdapterDelegate
<androidx.privacysandbox.ui.provider.BinderAdapterDelegate: android.content.Context sandboxContext>
<androidx.privacysandbox.ui.provider.BinderAdapterDelegate: androidx.privacysandbox.ui.core.SandboxedUiAdapter adapter>
    public void <init>(android.content.Context, androidx.privacysandbox.ui.core.SandboxedUiAdapter)
    {
        androidx.privacysandbox.ui.provider.BinderAdapterDelegate r0;
        android.content.Context r1;
        androidx.privacysandbox.ui.core.SandboxedUiAdapter r2;

        r0 := @this: androidx.privacysandbox.ui.provider.BinderAdapterDelegate;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.privacysandbox.ui.core.SandboxedUiAdapter;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "sandboxContext");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "adapter");

        specialinvoke r0.<androidx.privacysandbox.ui.core.ISandboxedUiAdapter$Stub: void <init>()>();

        r0.<androidx.privacysandbox.ui.provider.BinderAdapterDelegate: android.content.Context sandboxContext> = r1;

        r0.<androidx.privacysandbox.ui.provider.BinderAdapterDelegate: androidx.privacysandbox.ui.core.SandboxedUiAdapter adapter> = r2;

        return;
    }

    public final void openSession(android.content.Context, int, int, boolean, java.util.concurrent.Executor, androidx.privacysandbox.ui.core.SandboxedUiAdapter$SessionClient)
    {
        androidx.privacysandbox.ui.provider.BinderAdapterDelegate r0;
        android.content.Context r1;
        int i0, i1;
        boolean z0;
        java.util.concurrent.Executor r2;
        androidx.privacysandbox.ui.core.SandboxedUiAdapter$SessionClient r3;
        androidx.privacysandbox.ui.core.SandboxedUiAdapter $r4;

        r0 := @this: androidx.privacysandbox.ui.provider.BinderAdapterDelegate;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        r2 := @parameter4: java.util.concurrent.Executor;

        r3 := @parameter5: androidx.privacysandbox.ui.core.SandboxedUiAdapter$SessionClient;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "clientExecutor");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "client");

        $r4 = r0.<androidx.privacysandbox.ui.provider.BinderAdapterDelegate: androidx.privacysandbox.ui.core.SandboxedUiAdapter adapter>;

        interfaceinvoke $r4.<androidx.privacysandbox.ui.core.SandboxedUiAdapter: void openSession(android.content.Context,int,int,boolean,java.util.concurrent.Executor,androidx.privacysandbox.ui.core.SandboxedUiAdapter$SessionClient)>(r1, i0, i1, z0, r2, r3);

        return;
    }

    public void openRemoteSession(android.os.IBinder, int, int, int, boolean, androidx.privacysandbox.ui.core.IRemoteSessionClient)
    {
        androidx.privacysandbox.ui.provider.BinderAdapterDelegate r0;
        android.os.IBinder r1;
        int i0, i1, i2;
        boolean z0;
        androidx.privacysandbox.ui.core.IRemoteSessionClient r2;
        android.os.Handler r3, $r4;
        android.os.Looper $r5;
        java.lang.Runnable $r6;

        r0 := @this: androidx.privacysandbox.ui.provider.BinderAdapterDelegate;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        z0 := @parameter4: boolean;

        r2 := @parameter5: androidx.privacysandbox.ui.core.IRemoteSessionClient;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "hostToken");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "remoteSessionClient");

        $r4 = new android.os.Handler;

        $r5 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r4.<android.os.Handler: void <init>(android.os.Looper)>($r5);

        r3 = $r4;

        $r6 = dynamicinvoke "run" <java.lang.Runnable (androidx.privacysandbox.ui.provider.BinderAdapterDelegate,int,android.os.IBinder,int,int,androidx.privacysandbox.ui.core.IRemoteSessionClient,boolean)>(r0, i0, r1, i1, i2, r2, z0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.privacysandbox.ui.provider.BinderAdapterDelegate: void openRemoteSession$lambda$0(androidx.privacysandbox.ui.provider.BinderAdapterDelegate,int,android.os.IBinder,int,int,androidx.privacysandbox.ui.core.IRemoteSessionClient,boolean)>, methodtype: void __METHODTYPE__());

        virtualinvoke r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r6);

        return;
    }

    private static final void openRemoteSession$lambda$0(androidx.privacysandbox.ui.provider.BinderAdapterDelegate, int, android.os.IBinder, int, int, androidx.privacysandbox.ui.core.IRemoteSessionClient, boolean)
    {
        androidx.privacysandbox.ui.provider.BinderAdapterDelegate r0;
        int $i0, $i1, $i2;
        android.os.IBinder $r1;
        androidx.privacysandbox.ui.core.IRemoteSessionClient $r2;
        boolean $z0;
        android.content.Context r3, $r6, $r8;
        android.view.SurfaceControlViewHost r4, $r10;
        androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy r5, $r12;
        java.lang.Object $r7;
        android.view.Display $r9, $r11;
        java.util.concurrent.Executor $r13;
        androidx.privacysandbox.ui.core.SandboxedUiAdapter$SessionClient $r14;
        java.lang.Throwable $r15, r18;
        java.lang.String $r16;
        android.hardware.display.DisplayManager r17;

        r0 := @parameter0: androidx.privacysandbox.ui.provider.BinderAdapterDelegate;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.os.IBinder;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $r2 := @parameter5: androidx.privacysandbox.ui.core.IRemoteSessionClient;

        $z0 := @parameter6: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$hostToken");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "$remoteSessionClient");

     label1:
        $r6 = r0.<androidx.privacysandbox.ui.provider.BinderAdapterDelegate: android.content.Context sandboxContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("display");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r7, "null cannot be cast to non-null type android.hardware.display.DisplayManager");

        r17 = (android.hardware.display.DisplayManager) $r7;

        $r8 = r0.<androidx.privacysandbox.ui.provider.BinderAdapterDelegate: android.content.Context sandboxContext>;

        $r9 = virtualinvoke r17.<android.hardware.display.DisplayManager: android.view.Display getDisplay(int)>($i0);

        r3 = virtualinvoke $r8.<android.content.Context: android.content.Context createDisplayContext(android.view.Display)>($r9);

        $r10 = new android.view.SurfaceControlViewHost;

        $r11 = virtualinvoke r17.<android.hardware.display.DisplayManager: android.view.Display getDisplay(int)>($i0);

        specialinvoke $r10.<android.view.SurfaceControlViewHost: void <init>(android.content.Context,android.view.Display,android.os.IBinder)>(r3, $r11, $r1);

        r4 = $r10;

        $r12 = new androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy;

        specialinvoke $r12.<androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy: void <init>(androidx.privacysandbox.ui.provider.BinderAdapterDelegate,android.view.SurfaceControlViewHost,int,int,androidx.privacysandbox.ui.core.IRemoteSessionClient)>(r0, r4, $i1, $i2, $r2);

        r5 = $r12;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "windowContext");

        $r13 = dynamicinvoke "execute" <java.util.concurrent.Executor ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Runnable), methodhandle: "REF_INVOKE_INTERFACE" <java.lang.Runnable: void run()>, methodtype: void __METHODTYPE__(java.lang.Runnable));

        $r14 = (androidx.privacysandbox.ui.core.SandboxedUiAdapter$SessionClient) r5;

        virtualinvoke r0.<androidx.privacysandbox.ui.provider.BinderAdapterDelegate: void openSession(android.content.Context,int,int,boolean,java.util.concurrent.Executor,androidx.privacysandbox.ui.core.SandboxedUiAdapter$SessionClient)>(r3, $i1, $i2, $z0, $r13, $r14);

     label2:
        goto label4;

     label3:
        $r15 := @caughtexception;

        r18 = $r15;

        $r16 = virtualinvoke r18.<java.lang.Throwable: java.lang.String getMessage()>();

        interfaceinvoke $r2.<androidx.privacysandbox.ui.core.IRemoteSessionClient: void onRemoteSessionError(java.lang.String)>($r16);

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy$RemoteSessionController
<androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy$RemoteSessionController: android.view.SurfaceControlViewHost surfaceControlViewHost>
<androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy$RemoteSessionController: androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session session>
<androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy$RemoteSessionController: androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy this$0>
    public void <init>(androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy, android.view.SurfaceControlViewHost, androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session)
    {
        androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy$RemoteSessionController r0;
        androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy r1;
        android.view.SurfaceControlViewHost r2;
        androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session r3;

        r0 := @this: androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy$RemoteSessionController;

        r1 := @parameter0: androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy;

        r2 := @parameter1: android.view.SurfaceControlViewHost;

        r3 := @parameter2: androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "surfaceControlViewHost");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "session");

        r0.<androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy$RemoteSessionController: androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy this$0> = r1;

        specialinvoke r0.<androidx.privacysandbox.ui.core.IRemoteSessionController$Stub: void <init>()>();

        r0.<androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy$RemoteSessionController: android.view.SurfaceControlViewHost surfaceControlViewHost> = r2;

        r0.<androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy$RemoteSessionController: androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session session> = r3;

        return;
    }

    public final android.view.SurfaceControlViewHost getSurfaceControlViewHost()
    {
        androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy$RemoteSessionController r0;
        android.view.SurfaceControlViewHost $r1;

        r0 := @this: androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy$RemoteSessionController;

        $r1 = r0.<androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy$RemoteSessionController: android.view.SurfaceControlViewHost surfaceControlViewHost>;

        return $r1;
    }

    public final androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session getSession()
    {
        androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy$RemoteSessionController r0;
        androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session $r1;

        r0 := @this: androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy$RemoteSessionController;

        $r1 = r0.<androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy$RemoteSessionController: androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session session>;

        return $r1;
    }

    public void notifyConfigurationChanged(android.content.res.Configuration)
    {
        androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy$RemoteSessionController r0;
        android.content.res.Configuration r1;
        android.view.SurfaceControlViewHost $r2;
        android.view.SurfaceControlViewHost$SurfacePackage $r3;
        androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session $r4;

        r0 := @this: androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy$RemoteSessionController;

        r1 := @parameter0: android.content.res.Configuration;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "configuration");

        $r2 = r0.<androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy$RemoteSessionController: android.view.SurfaceControlViewHost surfaceControlViewHost>;

        $r3 = virtualinvoke $r2.<android.view.SurfaceControlViewHost: android.view.SurfaceControlViewHost$SurfacePackage getSurfacePackage()>();

        if $r3 == null goto label1;

        virtualinvoke $r3.<android.view.SurfaceControlViewHost$SurfacePackage: void notifyConfigurationChanged(android.content.res.Configuration)>(r1);

        goto label1;

     label1:
        $r4 = r0.<androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy$RemoteSessionController: androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session session>;

        interfaceinvoke $r4.<androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session: void notifyConfigurationChanged(android.content.res.Configuration)>(r1);

        return;
    }

    public void notifyResized(int, int)
    {
        androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy$RemoteSessionController r0;
        int i0, i1;
        android.view.SurfaceControlViewHost $r1;
        androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session $r2;

        r0 := @this: androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy$RemoteSessionController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy$RemoteSessionController: android.view.SurfaceControlViewHost surfaceControlViewHost>;

        virtualinvoke $r1.<android.view.SurfaceControlViewHost: void relayout(int,int)>(i0, i1);

        $r2 = r0.<androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy$RemoteSessionController: androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session session>;

        interfaceinvoke $r2.<androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session: void notifyResized(int,int)>(i0, i1);

        return;
    }

    public void close()
    {
        androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy$RemoteSessionController r0;
        androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session $r1;
        android.view.SurfaceControlViewHost $r2;

        r0 := @this: androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy$RemoteSessionController;

        $r1 = r0.<androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy$RemoteSessionController: androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session session>;

        interfaceinvoke $r1.<androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session: void close()>();

        $r2 = r0.<androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy$RemoteSessionController: android.view.SurfaceControlViewHost surfaceControlViewHost>;

        virtualinvoke $r2.<android.view.SurfaceControlViewHost: void release()>();

        return;
    }

androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy
<androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy: android.view.SurfaceControlViewHost surfaceControlViewHost>
<androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy: int initialWidth>
<androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy: int initialHeight>
<androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy: androidx.privacysandbox.ui.core.IRemoteSessionClient remoteSessionClient>
<androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy: androidx.privacysandbox.ui.provider.BinderAdapterDelegate this$0>
    public void <init>(androidx.privacysandbox.ui.provider.BinderAdapterDelegate, android.view.SurfaceControlViewHost, int, int, androidx.privacysandbox.ui.core.IRemoteSessionClient)
    {
        androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy r0;
        androidx.privacysandbox.ui.provider.BinderAdapterDelegate r1;
        android.view.SurfaceControlViewHost r2;
        int i0, i1;
        androidx.privacysandbox.ui.core.IRemoteSessionClient r3;

        r0 := @this: androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy;

        r1 := @parameter0: androidx.privacysandbox.ui.provider.BinderAdapterDelegate;

        r2 := @parameter1: android.view.SurfaceControlViewHost;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: androidx.privacysandbox.ui.core.IRemoteSessionClient;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "surfaceControlViewHost");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "remoteSessionClient");

        r0.<androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy: androidx.privacysandbox.ui.provider.BinderAdapterDelegate this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy: android.view.SurfaceControlViewHost surfaceControlViewHost> = r2;

        r0.<androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy: int initialWidth> = i0;

        r0.<androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy: int initialHeight> = i1;

        r0.<androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy: androidx.privacysandbox.ui.core.IRemoteSessionClient remoteSessionClient> = r3;

        return;
    }

    public void onSessionOpened(androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session)
    {
        androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy r0;
        androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session r1;
        android.view.View r2;
        android.view.SurfaceControlViewHost$SurfacePackage r3;
        androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy$RemoteSessionController r4, $r7;
        int $i0, $i1;
        android.view.SurfaceControlViewHost $r5, $r6, $r8;
        androidx.privacysandbox.ui.core.IRemoteSessionController $r9;
        androidx.privacysandbox.ui.core.IRemoteSessionClient $r10;

        r0 := @this: androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy;

        r1 := @parameter0: androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "session");

        r2 = interfaceinvoke r1.<androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session: android.view.View getView()>();

        $r5 = r0.<androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy: android.view.SurfaceControlViewHost surfaceControlViewHost>;

        $i1 = r0.<androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy: int initialWidth>;

        $i0 = r0.<androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy: int initialHeight>;

        virtualinvoke $r5.<android.view.SurfaceControlViewHost: void setView(android.view.View,int,int)>(r2, $i1, $i0);

        $r6 = r0.<androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy: android.view.SurfaceControlViewHost surfaceControlViewHost>;

        r3 = virtualinvoke $r6.<android.view.SurfaceControlViewHost: android.view.SurfaceControlViewHost$SurfacePackage getSurfacePackage()>();

        $r7 = new androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy$RemoteSessionController;

        $r8 = r0.<androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy: android.view.SurfaceControlViewHost surfaceControlViewHost>;

        specialinvoke $r7.<androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy$RemoteSessionController: void <init>(androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy,android.view.SurfaceControlViewHost,androidx.privacysandbox.ui.core.SandboxedUiAdapter$Session)>(r0, $r8, r1);

        r4 = $r7;

        $r10 = r0.<androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy: androidx.privacysandbox.ui.core.IRemoteSessionClient remoteSessionClient>;

        $r9 = (androidx.privacysandbox.ui.core.IRemoteSessionController) r4;

        interfaceinvoke $r10.<androidx.privacysandbox.ui.core.IRemoteSessionClient: void onRemoteSessionOpened(android.view.SurfaceControlViewHost$SurfacePackage,androidx.privacysandbox.ui.core.IRemoteSessionController,boolean)>(r3, $r9, 1);

        return;
    }

    public void onSessionError(java.lang.Throwable)
    {
        androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy r0;
        java.lang.Throwable r1;
        androidx.privacysandbox.ui.core.IRemoteSessionClient $r2;
        java.lang.String $r3;

        r0 := @this: androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy;

        r1 := @parameter0: java.lang.Throwable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "throwable");

        $r2 = r0.<androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy: androidx.privacysandbox.ui.core.IRemoteSessionClient remoteSessionClient>;

        $r3 = virtualinvoke r1.<java.lang.Throwable: java.lang.String getMessage()>();

        interfaceinvoke $r2.<androidx.privacysandbox.ui.core.IRemoteSessionClient: void onRemoteSessionError(java.lang.String)>($r3);

        return;
    }

    public void onResizeRequested(int, int)
    {
        androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy r0;
        int i0, i1;
        androidx.privacysandbox.ui.core.IRemoteSessionClient $r1;

        r0 := @this: androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.privacysandbox.ui.provider.BinderAdapterDelegate$SessionClientProxy: androidx.privacysandbox.ui.core.IRemoteSessionClient remoteSessionClient>;

        interfaceinvoke $r1.<androidx.privacysandbox.ui.core.IRemoteSessionClient: void onResizeRequested(int,int)>(i0, i1);

        return;
    }

