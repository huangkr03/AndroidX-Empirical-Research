androidx.test.espresso.remote.internal.deps.protobuf.ByteString
<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: androidx.test.espresso.remote.internal.deps.protobuf.ByteString EMPTY>
<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$ByteArrayCopier byteArrayCopier>
<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: java.util.Comparator UNSIGNED_LEXICOGRAPHICAL_COMPARATOR>
<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: int hash>
<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: byte byteAt(int)>
<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: byte internalByteAt(int)>
    static volatile int '-$$Nest$smtoInt'(byte)
    {
        byte b0;
        int $i1;

        b0 := @parameter0: byte;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.ByteString: int toInt(byte)>(b0);

        return $i1;
    }

    static int checkRange(int, int, int)
    {
        int $i0, $i1, $i2, $i3, i4, i5, i6, i7;
        java.lang.StringBuilder $r0, $r1, $r2, $r3, $r5, $r6, $r7, $r8, $r10, $r11, $r12, r15, r17, r19;
        java.lang.String $r4, $r9, $r13;
        java.lang.IndexOutOfBoundsException r14, r16, r18;

        i4 := @parameter0: int;

        i5 := @parameter1: int;

        i6 := @parameter2: int;

        i7 = i5 - i4;

        $i0 = i4 | i5;

        $i2 = $i0 | i7;

        $i1 = i6 - i5;

        $i3 = $i2 | $i1;

        if $i3 >= 0 goto label1;

        if i4 >= 0 goto label4;

        r14 = new java.lang.IndexOutOfBoundsException;

        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Beginning index: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" < 0");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r14.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r13);

        throw r14;

     label1:
        return i7;

     label2:
        r16 = new java.lang.IndexOutOfBoundsException;

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        $r0 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("End index: ");

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" >= ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r16.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r4);

        throw r16;

     label3:
        r18 = new java.lang.IndexOutOfBoundsException;

        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Beginning index larger than ending index: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r18.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r9);

        throw r18;

     label4:
        if i5 >= i4 goto label2;

        goto label3;
    }

    public final int hashCode()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString r0;
        int i0, i1, i2, i3;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString;

        i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: int hash>;

        if i0 != 0 goto label3;

        i1 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: int size()>();

        i2 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: int partialHash(int,int,int)>(i1, 0, i1);

        if i2 != 0 goto label1;

        i2 = 1;

     label1:
        r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: int hash> = i2;

        i3 = i2;

     label2:
        return i3;

     label3:
        i3 = i0;

        goto label2;
    }

<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: int partialHash(int,int,int)>
    protected final int peekCachedHashCode()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString r0;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString;

        $i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: int hash>;

        return $i0;
    }

<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: int size()>
    private static int toInt(byte)
    {
        byte b0;
        short $s1;

        b0 := @parameter0: byte;

        $s1 = b0 & 255;

        return $s1;
    }

    public androidx.test.espresso.remote.internal.deps.protobuf.ByteString$ByteIterator iterator()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString r0;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$1 r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString;

        r1 = new androidx.test.espresso.remote.internal.deps.protobuf.ByteString$1;

        specialinvoke r1.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$1: void <init>(androidx.test.espresso.remote.internal.deps.protobuf.ByteString)>(r0);

        return r1;
    }

    static androidx.test.espresso.remote.internal.deps.protobuf.ByteString$CodedBuilder newCodedBuilder(int)
    {
        int i0;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$CodedBuilder r0;

        i0 := @parameter0: int;

        r0 = new androidx.test.espresso.remote.internal.deps.protobuf.ByteString$CodedBuilder;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$CodedBuilder: void <init>(int,androidx.test.espresso.remote.internal.deps.protobuf.ByteString$CodedBuilder-IA)>(i0, null);

        return r0;
    }

    public static androidx.test.espresso.remote.internal.deps.protobuf.ByteString copyFrom(java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r0;
        int $i0;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString $r1;

        r0 := @parameter0: java.nio.ByteBuffer;

        $i0 = virtualinvoke r0.<java.nio.ByteBuffer: int remaining()>();

        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.ByteString: androidx.test.espresso.remote.internal.deps.protobuf.ByteString copyFrom(java.nio.ByteBuffer,int)>(r0, $i0);

        return $r1;
    }

    public static androidx.test.espresso.remote.internal.deps.protobuf.ByteString copyFrom(byte[])
    {
        byte[] r0;
        int $i0;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString $r1;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.ByteString: androidx.test.espresso.remote.internal.deps.protobuf.ByteString copyFrom(byte[],int,int)>(r0, 0, $i0);

        return $r1;
    }

    public static androidx.test.espresso.remote.internal.deps.protobuf.ByteString copyFrom(java.nio.ByteBuffer, int)
    {
        int $i0, i2;
        java.nio.ByteBuffer r1;
        byte[] r2;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString r3;

        r1 := @parameter0: java.nio.ByteBuffer;

        i2 := @parameter1: int;

        $i0 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>();

        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.ByteString: int checkRange(int,int,int)>(0, i2, $i0);

        r2 = newarray (byte)[i2];

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r2);

        r3 = new androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString;

        specialinvoke r3.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: void <init>(byte[])>(r2);

        return r3;
    }

    public static androidx.test.espresso.remote.internal.deps.protobuf.ByteString copyFrom(byte[], int, int)
    {
        byte[] r0, $r3;
        int i0, i1, $i2, $i3;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString r1;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$ByteArrayCopier $r2;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i3 = i0 + i1;

        $i2 = lengthof r0;

        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.ByteString: int checkRange(int,int,int)>(i0, $i3, $i2);

        r1 = new androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString;

        $r2 = <androidx.test.espresso.remote.internal.deps.protobuf.ByteString: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$ByteArrayCopier byteArrayCopier>;

        $r3 = interfaceinvoke $r2.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$ByteArrayCopier: byte[] copyFrom(byte[],int,int)>(r0, i0, i1);

        specialinvoke r1.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: void <init>(byte[])>($r3);

        return r1;
    }

    public static androidx.test.espresso.remote.internal.deps.protobuf.ByteString copyFromUtf8(java.lang.String)
    {
        java.lang.String r0;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString r1;
        java.nio.charset.Charset $r2;
        byte[] $r3;

        r0 := @parameter0: java.lang.String;

        r1 = new androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString;

        $r2 = <androidx.test.espresso.remote.internal.deps.protobuf.Internal: java.nio.charset.Charset UTF_8>;

        $r3 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

        specialinvoke r1.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: void <init>(byte[])>($r3);

        return r1;
    }

<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: androidx.test.espresso.remote.internal.deps.protobuf.ByteString substring(int,int)>
    static androidx.test.espresso.remote.internal.deps.protobuf.ByteString wrap(java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r0;
        boolean $z0;
        byte[] $r1;
        int $i0, $i1, $i2, i3;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString $r2;
        androidx.test.espresso.remote.internal.deps.protobuf.NioByteString r3;

        r0 := @parameter0: java.nio.ByteBuffer;

        $z0 = virtualinvoke r0.<java.nio.ByteBuffer: boolean hasArray()>();

        if $z0 == 0 goto label1;

        i3 = virtualinvoke r0.<java.nio.ByteBuffer: int arrayOffset()>();

        $r1 = virtualinvoke r0.<java.nio.ByteBuffer: byte[] array()>();

        $i0 = virtualinvoke r0.<java.nio.ByteBuffer: int position()>();

        $i1 = i3 + $i0;

        $i2 = virtualinvoke r0.<java.nio.ByteBuffer: int remaining()>();

        $r2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.ByteString: androidx.test.espresso.remote.internal.deps.protobuf.ByteString wrap(byte[],int,int)>($r1, $i1, $i2);

        return $r2;

     label1:
        r3 = new androidx.test.espresso.remote.internal.deps.protobuf.NioByteString;

        specialinvoke r3.<androidx.test.espresso.remote.internal.deps.protobuf.NioByteString: void <init>(java.nio.ByteBuffer)>(r0);

        return r3;
    }

    static androidx.test.espresso.remote.internal.deps.protobuf.ByteString wrap(byte[])
    {
        byte[] r0;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString r1;

        r0 := @parameter0: byte[];

        r1 = new androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString;

        specialinvoke r1.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: void <init>(byte[])>(r0);

        return r1;
    }

    static androidx.test.espresso.remote.internal.deps.protobuf.ByteString wrap(byte[], int, int)
    {
        byte[] r0;
        int i0, i1;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString r1;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = new androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString;

        specialinvoke r1.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString: void <init>(byte[],int,int)>(r0, i0, i1);

        return r1;
    }

<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream newCodedInput()>
    public final java.lang.String toString()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString r0;
        java.util.Locale r1;
        java.lang.Object[] r2;
        int $i0, $i1;
        java.lang.String $r3, $r5, $r6;
        java.lang.Integer $r4;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString;

        r1 = <java.util.Locale: java.util.Locale ROOT>;

        r2 = newarray (java.lang.Object)[3];

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        r2[0] = $r3;

        $i1 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: int size()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        r2[1] = $r4;

        $r5 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: java.lang.String truncateAndEscapeForDisplay()>();

        r2[2] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r1, "<ByteString@%s size=%d contents=\"%s\">", r2);

        return $r6;
    }

    public final java.lang.String toString(java.nio.charset.Charset)
    {
        java.nio.charset.Charset r0;
        int $i0;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString r1;
        java.lang.String r2;

        r1 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString;

        r0 := @parameter0: java.nio.charset.Charset;

        $i0 = virtualinvoke r1.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: int size()>();

        if $i0 != 0 goto label2;

        r2 = "";

     label1:
        return r2;

     label2:
        r2 = virtualinvoke r1.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: java.lang.String toStringInternal(java.nio.charset.Charset)>(r0);

        goto label1;
    }

<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: java.lang.String toStringInternal(java.nio.charset.Charset)>
    public final java.lang.String toStringUtf8()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString r0;
        java.nio.charset.Charset $r1;
        java.lang.String $r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString;

        $r1 = <androidx.test.espresso.remote.internal.deps.protobuf.Internal: java.nio.charset.Charset UTF_8>;

        $r2 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: java.lang.String toString(java.nio.charset.Charset)>($r1);

        return $r2;
    }

    private java.lang.String truncateAndEscapeForDisplay()
    {
        java.lang.StringBuilder r0, $r1, $r2;
        int $i0;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString r3, r5;
        java.lang.String r4, r6;

        r3 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString;

        $i0 = virtualinvoke r3.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: int size()>();

        if $i0 > 50 goto label2;

        r4 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.TextFormatEscaper: java.lang.String escapeBytes(androidx.test.espresso.remote.internal.deps.protobuf.ByteString)>(r3);

     label1:
        return r4;

     label2:
        r5 = virtualinvoke r3.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: androidx.test.espresso.remote.internal.deps.protobuf.ByteString substring(int,int)>(0, 47);

        r6 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.TextFormatEscaper: java.lang.String escapeBytes(androidx.test.espresso.remote.internal.deps.protobuf.ByteString)>(r5);

        r0 = new java.lang.StringBuilder;

        specialinvoke r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...");

        r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;
    }

<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: java.nio.ByteBuffer asReadOnlyByteBuffer()>
    public volatile java.util.Iterator iterator()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString r0;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$ByteIterator $r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString;

        $r1 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$ByteIterator iterator()>();

        return $r1;
    }

    static void <clinit>()
    {
        byte[] $r0;
        boolean $z0;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString r1, r4;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$ByteArrayCopier r2;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$2 r3, r6;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$SystemByteArrayCopier r5;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$ArraysByteArrayCopier r7;

        r4 = new androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString;

        r1 = r4;

        $r0 = <androidx.test.espresso.remote.internal.deps.protobuf.Internal: byte[] EMPTY_BYTE_ARRAY>;

        specialinvoke r4.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: void <init>(byte[])>($r0);

        <androidx.test.espresso.remote.internal.deps.protobuf.ByteString: androidx.test.espresso.remote.internal.deps.protobuf.ByteString EMPTY> = r1;

        $z0 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.Android: boolean isOnAndroidDevice()>();

        if $z0 == 0 goto label2;

        r5 = new androidx.test.espresso.remote.internal.deps.protobuf.ByteString$SystemByteArrayCopier;

        r2 = r5;

        specialinvoke r5.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$SystemByteArrayCopier: void <init>(androidx.test.espresso.remote.internal.deps.protobuf.ByteString$SystemByteArrayCopier-IA)>(null);

     label1:
        <androidx.test.espresso.remote.internal.deps.protobuf.ByteString: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$ByteArrayCopier byteArrayCopier> = r2;

        r6 = new androidx.test.espresso.remote.internal.deps.protobuf.ByteString$2;

        r3 = r6;

        specialinvoke r6.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$2: void <init>()>();

        <androidx.test.espresso.remote.internal.deps.protobuf.ByteString: java.util.Comparator UNSIGNED_LEXICOGRAPHICAL_COMPARATOR> = r3;

        return;

     label2:
        r7 = new androidx.test.espresso.remote.internal.deps.protobuf.ByteString$ArraysByteArrayCopier;

        r2 = r7;

        specialinvoke r7.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$ArraysByteArrayCopier: void <init>(androidx.test.espresso.remote.internal.deps.protobuf.ByteString$ArraysByteArrayCopier-IA)>(null);

        goto label1;
    }

    void <init>()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString r0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: int hash> = 0;

        return;
    }

    static void checkIndex(int, int)
    {
        int i0, $i1, $i2, $i3, i4;
        java.lang.StringBuilder r0, $r1, $r2, $r3, $r4, $r6, $r7, r10;
        java.lang.String $r5, $r8;
        java.lang.ArrayIndexOutOfBoundsException r9, r11;

        i0 := @parameter0: int;

        i4 := @parameter1: int;

        $i1 = i0 + 1;

        $i2 = i4 - $i1;

        $i3 = i0 | $i2;

        if $i3 >= 0 goto label2;

        if i0 >= 0 goto label1;

        r9 = new java.lang.ArrayIndexOutOfBoundsException;

        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index < 0: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r9.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>($r8);

        throw r9;

     label1:
        r11 = new java.lang.ArrayIndexOutOfBoundsException;

        r0 = new java.lang.StringBuilder;

        specialinvoke r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index > length: ");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r11.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>($r5);

        throw r11;

     label2:
        return;
    }

<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: void copyToInternal(byte[],int,int,int)>
<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: void writeTo(androidx.test.espresso.remote.internal.deps.protobuf.ByteOutput)>
<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: boolean equals(java.lang.Object)>
<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: boolean isValidUtf8()>
    public final byte[] toByteArray()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString r0;
        int i0;
        byte[] r1, $r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString;

        i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: int size()>();

        if i0 != 0 goto label1;

        $r2 = <androidx.test.espresso.remote.internal.deps.protobuf.Internal: byte[] EMPTY_BYTE_ARRAY>;

        return $r2;

     label1:
        r1 = newarray (byte)[i0];

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: void copyToInternal(byte[],int,int,int)>(r1, 0, 0, i0);

        return r1;
    }

androidx.test.espresso.remote.internal.deps.protobuf.ByteString$1
<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$1: int position>
<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$1: int limit>
<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$1: androidx.test.espresso.remote.internal.deps.protobuf.ByteString this$0>
    public byte nextByte()
    {
        int i0, $i1, $i2;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString $r0;
        byte $b3;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$1 r1;
        java.util.NoSuchElementException r2;

        r1 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$1;

        i0 = r1.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$1: int position>;

        $i1 = r1.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$1: int limit>;

        if i0 < $i1 goto label1;

        r2 = new java.util.NoSuchElementException;

        specialinvoke r2.<java.util.NoSuchElementException: void <init>()>();

        throw r2;

     label1:
        $i2 = i0 + 1;

        r1.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$1: int position> = $i2;

        $r0 = r1.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$1: androidx.test.espresso.remote.internal.deps.protobuf.ByteString this$0>;

        $b3 = virtualinvoke $r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: byte internalByteAt(int)>(i0);

        return $b3;
    }

    void <init>(androidx.test.espresso.remote.internal.deps.protobuf.ByteString)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$1 r0;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString r1, $r2;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$1;

        r1 := @parameter0: androidx.test.espresso.remote.internal.deps.protobuf.ByteString;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$1: androidx.test.espresso.remote.internal.deps.protobuf.ByteString this$0> = r1;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$AbstractByteIterator: void <init>()>();

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$1: int position> = 0;

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$1: androidx.test.espresso.remote.internal.deps.protobuf.ByteString this$0>;

        $i0 = virtualinvoke $r2.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: int size()>();

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$1: int limit> = $i0;

        return;
    }

    public boolean hasNext()
    {
        int $i0, $i1;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$1 r0;
        boolean z0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$1;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$1: int position>;

        $i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$1: int limit>;

        if $i1 >= $i0 goto label2;

        z0 = 1;

     label1:
        return z0;

     label2:
        z0 = 0;

        goto label1;
    }

androidx.test.espresso.remote.internal.deps.protobuf.ByteString$2
    public int compare(androidx.test.espresso.remote.internal.deps.protobuf.ByteString, androidx.test.espresso.remote.internal.deps.protobuf.ByteString)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString r0, r1;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$ByteIterator r2, r8;
        int i0, $i1, $i2, $i3, $i5, $i7;
        boolean $z0, $z1;
        java.lang.Integer $r3, $r4, $r5, $r6;
        byte $b4, $b6;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$2 r7;

        r7 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$2;

        r0 := @parameter0: androidx.test.espresso.remote.internal.deps.protobuf.ByteString;

        r1 := @parameter1: androidx.test.espresso.remote.internal.deps.protobuf.ByteString;

        r8 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$ByteIterator iterator()>();

        r2 = virtualinvoke r1.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$ByteIterator iterator()>();

     label1:
        $z0 = interfaceinvoke r8.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$ByteIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $z1 = interfaceinvoke r2.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$ByteIterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $b4 = interfaceinvoke r8.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$ByteIterator: byte nextByte()>();

        $i5 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.ByteString: int '-$$Nest$smtoInt'(byte)>($b4);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $b6 = interfaceinvoke r2.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$ByteIterator: byte nextByte()>();

        $i7 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.ByteString: int '-$$Nest$smtoInt'(byte)>($b6);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        i0 = virtualinvoke $r5.<java.lang.Integer: int compareTo(java.lang.Integer)>($r6);

        if i0 == 0 goto label1;

        return i0;

     label2:
        $i1 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: int size()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $i2 = virtualinvoke r1.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: int size()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $i3 = virtualinvoke $r3.<java.lang.Integer: int compareTo(java.lang.Integer)>($r4);

        return $i3;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$2 r0;
        java.lang.Object r1, r2;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString $r3, $r4;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.test.espresso.remote.internal.deps.protobuf.ByteString) r1;

        $r3 = (androidx.test.espresso.remote.internal.deps.protobuf.ByteString) r2;

        $i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$2: int compare(androidx.test.espresso.remote.internal.deps.protobuf.ByteString,androidx.test.espresso.remote.internal.deps.protobuf.ByteString)>($r4, $r3);

        return $i0;
    }

    void <init>()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$2 r0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.test.espresso.remote.internal.deps.protobuf.ByteString$AbstractByteIterator
    public final java.lang.Byte next()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$AbstractByteIterator r0;
        byte $b0;
        java.lang.Byte $r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$AbstractByteIterator;

        $b0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$AbstractByteIterator: byte nextByte()>();

        $r1 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

        return $r1;
    }

    public volatile java.lang.Object next()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$AbstractByteIterator r0;
        java.lang.Byte $r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$AbstractByteIterator;

        $r1 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$AbstractByteIterator: java.lang.Byte next()>();

        return $r1;
    }

    void <init>()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$AbstractByteIterator r0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$AbstractByteIterator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final void remove()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$AbstractByteIterator r0;
        java.lang.UnsupportedOperationException r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$AbstractByteIterator;

        r1 = new java.lang.UnsupportedOperationException;

        specialinvoke r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw r1;
    }

androidx.test.espresso.remote.internal.deps.protobuf.ByteString$ArraysByteArrayCopier-IA
androidx.test.espresso.remote.internal.deps.protobuf.ByteString$ArraysByteArrayCopier
    private void <init>()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$ArraysByteArrayCopier r0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$ArraysByteArrayCopier;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(androidx.test.espresso.remote.internal.deps.protobuf.ByteString$ArraysByteArrayCopier-IA)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$ArraysByteArrayCopier r0;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$ArraysByteArrayCopier-IA r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$ArraysByteArrayCopier;

        r1 := @parameter0: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$ArraysByteArrayCopier-IA;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$ArraysByteArrayCopier: void <init>()>();

        return;
    }

    public byte[] copyFrom(byte[], int, int)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$ArraysByteArrayCopier r0;
        byte[] r1, $r2;
        int i0, i1, $i2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$ArraysByteArrayCopier;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = i0 + i1;

        $r2 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>(r1, i0, $i2);

        return $r2;
    }

androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString
<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString: long serialVersionUID>
<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString: int bytesOffset>
<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString: int bytesLength>
    public byte byteAt(int)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString r0;
        int i0, $i1, $i2, $i3;
        byte[] $r1;
        byte $b4;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString: int size()>();

        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString: void checkIndex(int,int)>(i0, $i1);

        $r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString: byte[] bytes>;

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString: int bytesOffset>;

        $i3 = $i2 + i0;

        $b4 = $r1[$i3];

        return $b4;
    }

    byte internalByteAt(int)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString r0;
        int i0, $i1, $i2;
        byte[] $r1;
        byte $b3;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString: byte[] bytes>;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString: int bytesOffset>;

        $i2 = $i1 + i0;

        $b3 = $r1[$i2];

        return $b3;
    }

    protected int getOffsetIntoBytes()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString r0;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString;

        $i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString: int bytesOffset>;

        return $i0;
    }

    public int size()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString r0;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString;

        $i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString: int bytesLength>;

        return $i0;
    }

    java.lang.Object writeReplace()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString r0;
        byte[] $r1;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString $r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString;

        $r1 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString: byte[] toByteArray()>();

        $r2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.ByteString: androidx.test.espresso.remote.internal.deps.protobuf.ByteString wrap(byte[])>($r1);

        return $r2;
    }

    void <init>(byte[], int, int)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString r0;
        byte[] r1;
        int i0, i1, $i2, $i3;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: void <init>(byte[])>(r1);

        $i3 = i0 + i1;

        $i2 = lengthof r1;

        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString: int checkRange(int,int,int)>(i0, $i3, $i2);

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString: int bytesOffset> = i0;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString: int bytesLength> = i1;

        return;
    }

    protected void copyToInternal(byte[], int, int, int)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString r0;
        byte[] r1, $r2;
        int i0, i1, i2, $i3, $i4;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString: byte[] bytes>;

        $i3 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString: int getOffsetIntoBytes()>();

        $i4 = $i3 + i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i4, r1, i1, i2);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException
    {
        java.io.ObjectInputStream r0;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString r1;
        java.io.InvalidObjectException r2;

        r1 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString;

        r0 := @parameter0: java.io.ObjectInputStream;

        r2 = new java.io.InvalidObjectException;

        specialinvoke r2.<java.io.InvalidObjectException: void <init>(java.lang.String)>("BoundedByteStream instances are not to be serialized directly");

        throw r2;
    }

androidx.test.espresso.remote.internal.deps.protobuf.ByteString$ByteArrayCopier
<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$ByteArrayCopier: byte[] copyFrom(byte[],int,int)>
androidx.test.espresso.remote.internal.deps.protobuf.ByteString$ByteIterator
<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$ByteIterator: byte nextByte()>
androidx.test.espresso.remote.internal.deps.protobuf.ByteString$CodedBuilder-IA
androidx.test.espresso.remote.internal.deps.protobuf.ByteString$CodedBuilder
<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$CodedBuilder: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream output>
<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$CodedBuilder: byte[] buffer>
    public androidx.test.espresso.remote.internal.deps.protobuf.ByteString build()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$CodedBuilder r0;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString r1;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream $r2;
        byte[] $r3;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$CodedBuilder;

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$CodedBuilder: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream output>;

        virtualinvoke $r2.<androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: void checkNoSpaceLeft()>();

        r1 = new androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString;

        $r3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$CodedBuilder: byte[] buffer>;

        specialinvoke r1.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: void <init>(byte[])>($r3);

        return r1;
    }

    public androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream getCodedOutput()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$CodedBuilder r0;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream $r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$CodedBuilder;

        $r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$CodedBuilder: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream output>;

        return $r1;
    }

    private void <init>(int)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$CodedBuilder r0;
        int i0;
        byte[] $r1, $r2;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream $r3;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$CodedBuilder;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte)[i0];

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$CodedBuilder: byte[] buffer> = $r1;

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$CodedBuilder: byte[] buffer>;

        $r3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream newInstance(byte[])>($r2);

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$CodedBuilder: androidx.test.espresso.remote.internal.deps.protobuf.CodedOutputStream output> = $r3;

        return;
    }

    void <init>(int, androidx.test.espresso.remote.internal.deps.protobuf.ByteString$CodedBuilder-IA)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$CodedBuilder r0;
        int i0;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$CodedBuilder-IA r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$CodedBuilder;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$CodedBuilder-IA;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$CodedBuilder: void <init>(int)>(i0);

        return;
    }

androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LeafByteString
    void <init>()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LeafByteString r0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LeafByteString;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: void <init>()>();

        return;
    }

androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString
<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: long serialVersionUID>
<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: byte[] bytes>
    public byte byteAt(int)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString r0;
        int i0;
        byte[] $r1;
        byte $b1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $b1 = $r1[i0];

        return $b1;
    }

    byte internalByteAt(int)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString r0;
        int i0;
        byte[] $r1;
        byte $b1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $b1 = $r1[i0];

        return $b1;
    }

    protected int getOffsetIntoBytes()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString r0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString;

        return 0;
    }

    protected final int partialHash(int, int, int)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString r0;
        int i0, i1, i2, $i3, $i4, $i5;
        byte[] $r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i3 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i4 = $i3 + i1;

        $i5 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.Internal: int partialHash(int,byte[],int,int)>(i0, $r1, $i4, i2);

        return $i5;
    }

    public int size()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString r0;
        byte[] $r1;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString;

        $r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public final androidx.test.espresso.remote.internal.deps.protobuf.ByteString substring(int, int)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString r0;
        int i0, $i1, $i2, $i3, i4, i5;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString r1;
        byte[] $r2;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString $r3;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString;

        i0 := @parameter0: int;

        i4 := @parameter1: int;

        $i1 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: int size()>();

        i5 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: int checkRange(int,int,int)>(i0, i4, $i1);

        if i5 != 0 goto label1;

        $r3 = <androidx.test.espresso.remote.internal.deps.protobuf.ByteString: androidx.test.espresso.remote.internal.deps.protobuf.ByteString EMPTY>;

        return $r3;

     label1:
        r1 = new androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString;

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i2 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i3 = $i2 + i0;

        specialinvoke r1.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$BoundedByteString: void <init>(byte[],int,int)>($r2, $i3, i5);

        return r1;
    }

    public final androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream newCodedInput()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString r0;
        byte[] $r1;
        int $i0, $i1;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream $r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString;

        $r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i1 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: int size()>();

        $r2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream newInstance(byte[],int,int,boolean)>($r1, $i0, $i1, 1);

        return $r2;
    }

    protected final java.lang.String toStringInternal(java.nio.charset.Charset)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString r0;
        java.nio.charset.Charset r1;
        java.lang.String r2;
        byte[] $r3;
        int $i0, $i1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString;

        r1 := @parameter0: java.nio.charset.Charset;

        r2 = new java.lang.String;

        $r3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i1 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: int size()>();

        specialinvoke r2.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>($r3, $i0, $i1, r1);

        return r2;
    }

    public final java.nio.ByteBuffer asReadOnlyByteBuffer()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString r0;
        byte[] $r1;
        int $i0, $i1;
        java.nio.ByteBuffer $r2, $r3;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString;

        $r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i1 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: int size()>();

        $r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>($r1, $i0, $i1);

        $r3 = virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>();

        return $r3;
    }

    void <init>(byte[])
    {
        byte[] r0;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString r1;
        java.lang.NullPointerException r2;

        r1 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString;

        r0 := @parameter0: byte[];

        specialinvoke r1.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LeafByteString: void <init>()>();

        if r0 != null goto label1;

        r2 = new java.lang.NullPointerException;

        specialinvoke r2.<java.lang.NullPointerException: void <init>()>();

        throw r2;

     label1:
        r1.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: byte[] bytes> = r0;

        return;
    }

    protected void copyToInternal(byte[], int, int, int)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString r0;
        byte[] r1, $r2;
        int i0, i1, i2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, i0, r1, i1, i2);

        return;
    }

    final void writeTo(androidx.test.espresso.remote.internal.deps.protobuf.ByteOutput) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString r0;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteOutput r1;
        byte[] $r2;
        int $i0, $i1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString;

        r1 := @parameter0: androidx.test.espresso.remote.internal.deps.protobuf.ByteOutput;

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i1 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: int size()>();

        virtualinvoke r1.<androidx.test.espresso.remote.internal.deps.protobuf.ByteOutput: void writeLazy(byte[],int,int)>($r2, $i0, $i1);

        return;
    }

    public final boolean equals(java.lang.Object)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString r0, r3, $r4;
        java.lang.Object r1;
        int i0, $i1, $i2, $i3, i4, $i5;
        boolean $z0, $z1, $z2, $z3;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString $r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.test.espresso.remote.internal.deps.protobuf.ByteString;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $i1 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: int size()>();

        $r2 = (androidx.test.espresso.remote.internal.deps.protobuf.ByteString) r1;

        $i2 = virtualinvoke $r2.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: int size()>();

        if $i1 == $i2 goto label3;

        return 0;

     label3:
        $i3 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: int size()>();

        if $i3 != 0 goto label4;

        return 1;

     label4:
        $z1 = r1 instanceof androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString;

        if $z1 == 0 goto label6;

        r3 = (androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString) r1;

        i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: int peekCachedHashCode()>();

        i4 = virtualinvoke r3.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: int peekCachedHashCode()>();

        if i0 == 0 goto label5;

        if i4 == 0 goto label5;

        if i0 == i4 goto label5;

        return 0;

     label5:
        $r4 = (androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString) r1;

        $i5 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: int size()>();

        $z3 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: boolean equalsRange(androidx.test.espresso.remote.internal.deps.protobuf.ByteString,int,int)>($r4, 0, $i5);

        return $z3;

     label6:
        $z2 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        return $z2;
    }

    final boolean equalsRange(androidx.test.espresso.remote.internal.deps.protobuf.ByteString, int, int)
    {
        byte[] r0, r21;
        int $i0, $i1, $i2, $i3, $i4, $i5, i8, i9, i10, i11, i12, i13, i14;
        boolean $z0, $z1;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString $r1, $r2, r15;
        byte $b6, $b7;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r12, r17, r19;
        java.lang.String $r9, $r13;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString r14, r20;
        java.lang.IllegalArgumentException r16, r18;

        r14 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString;

        r15 := @parameter0: androidx.test.espresso.remote.internal.deps.protobuf.ByteString;

        i8 := @parameter1: int;

        i9 := @parameter2: int;

        $i0 = virtualinvoke r15.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: int size()>();

        if i9 <= $i0 goto label1;

        r16 = new java.lang.IllegalArgumentException;

        i10 = virtualinvoke r14.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: int size()>();

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Length too large: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw r16;

     label1:
        $i1 = i8 + i9;

        $i2 = virtualinvoke r15.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: int size()>();

        if $i1 <= $i2 goto label2;

        r18 = new java.lang.IllegalArgumentException;

        i11 = virtualinvoke r15.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: int size()>();

        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ran off end of other: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw r18;

     label2:
        $z0 = r15 instanceof androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString;

        if $z0 == 0 goto label6;

        r20 = (androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString) r15;

        r21 = r14.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        r0 = r20.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i4 = virtualinvoke r14.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        i12 = $i4 + i9;

        i13 = virtualinvoke r14.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $i5 = virtualinvoke r20.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        i14 = $i5 + i8;

     label3:
        if i13 >= i12 goto label5;

        $b7 = r21[i13];

        $b6 = r0[i14];

        if $b7 == $b6 goto label4;

        return 0;

     label4:
        i13 = i13 + 1;

        i14 = i14 + 1;

        goto label3;

     label5:
        return 1;

     label6:
        $i3 = i8 + i9;

        $r1 = virtualinvoke r15.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: androidx.test.espresso.remote.internal.deps.protobuf.ByteString substring(int,int)>(i8, $i3);

        $r2 = virtualinvoke r14.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: androidx.test.espresso.remote.internal.deps.protobuf.ByteString substring(int,int)>(0, i9);

        $z1 = virtualinvoke $r1.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString: boolean equals(java.lang.Object)>($r2);

        return $z1;
    }

    public final boolean isValidUtf8()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString r0;
        int i0, $i1, $i2;
        byte[] $r1;
        boolean $z0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString;

        i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: int getOffsetIntoBytes()>();

        $r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: byte[] bytes>;

        $i1 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$LiteralByteString: int size()>();

        $i2 = i0 + $i1;

        $z0 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.Utf8: boolean isValidUtf8(byte[],int,int)>($r1, i0, $i2);

        return $z0;
    }

androidx.test.espresso.remote.internal.deps.protobuf.ByteString$SystemByteArrayCopier-IA
androidx.test.espresso.remote.internal.deps.protobuf.ByteString$SystemByteArrayCopier
    private void <init>()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$SystemByteArrayCopier r0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$SystemByteArrayCopier;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(androidx.test.espresso.remote.internal.deps.protobuf.ByteString$SystemByteArrayCopier-IA)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$SystemByteArrayCopier r0;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$SystemByteArrayCopier-IA r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$SystemByteArrayCopier;

        r1 := @parameter0: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$SystemByteArrayCopier-IA;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.ByteString$SystemByteArrayCopier: void <init>()>();

        return;
    }

    public byte[] copyFrom(byte[], int, int)
    {
        byte[] r0, r2;
        int i0, i1;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString$SystemByteArrayCopier r1;

        r1 := @this: androidx.test.espresso.remote.internal.deps.protobuf.ByteString$SystemByteArrayCopier;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = newarray (byte)[i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, i0, r2, 0, i1);

        return r2;
    }

