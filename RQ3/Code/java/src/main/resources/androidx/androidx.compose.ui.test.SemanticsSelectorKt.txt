androidx.compose.ui.test.SemanticsSelectorKt
    public static final androidx.compose.ui.test.SemanticsSelector SemanticsSelector(androidx.compose.ui.test.SemanticsMatcher)
    {
        androidx.compose.ui.test.SemanticsMatcher r0;
        androidx.compose.ui.test.SemanticsSelector $r1;
        java.lang.String $r2;
        androidx.compose.ui.test.SemanticsSelectorKt$SemanticsSelector$1 $r3;
        kotlin.jvm.functions.Function1 $r4;

        r0 := @parameter0: androidx.compose.ui.test.SemanticsMatcher;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "matcher");

        $r1 = new androidx.compose.ui.test.SemanticsSelector;

        $r2 = virtualinvoke r0.<androidx.compose.ui.test.SemanticsMatcher: java.lang.String getDescription()>();

        $r3 = new androidx.compose.ui.test.SemanticsSelectorKt$SemanticsSelector$1;

        specialinvoke $r3.<androidx.compose.ui.test.SemanticsSelectorKt$SemanticsSelector$1: void <init>(androidx.compose.ui.test.SemanticsMatcher)>(r0);

        $r4 = (kotlin.jvm.functions.Function1) $r3;

        specialinvoke $r1.<androidx.compose.ui.test.SemanticsSelector: void <init>(java.lang.String,boolean,androidx.compose.ui.test.SemanticsSelector,kotlin.jvm.functions.Function1)>($r2, 0, null, $r4);

        return $r1;
    }

    public static final androidx.compose.ui.test.SemanticsSelector addSelectionFromSingleNode(androidx.compose.ui.test.SemanticsSelector, java.lang.String, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.test.SemanticsSelector $r0, $r3;
        java.lang.String r1, $r6, $r10;
        kotlin.jvm.functions.Function1 r2, $r12;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r9;
        androidx.compose.ui.test.SemanticsSelectorKt$addSelectionFromSingleNode$1 $r11;

        $r0 := @parameter0: androidx.compose.ui.test.SemanticsSelector;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "description");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "selector");

        $r3 = new androidx.compose.ui.test.SemanticsSelector;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $r6 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsSelector: java.lang.String getDescription()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = new androidx.compose.ui.test.SemanticsSelectorKt$addSelectionFromSingleNode$1;

        specialinvoke $r11.<androidx.compose.ui.test.SemanticsSelectorKt$addSelectionFromSingleNode$1: void <init>(kotlin.jvm.functions.Function1)>(r2);

        $r12 = (kotlin.jvm.functions.Function1) $r11;

        specialinvoke $r3.<androidx.compose.ui.test.SemanticsSelector: void <init>(java.lang.String,boolean,androidx.compose.ui.test.SemanticsSelector,kotlin.jvm.functions.Function1)>($r10, 1, $r0, $r12);

        return $r3;
    }

    public static final androidx.compose.ui.test.SemanticsSelector addIndexSelector(androidx.compose.ui.test.SemanticsSelector, int)
    {
        androidx.compose.ui.test.SemanticsSelector $r0, $r1;
        int i0;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r7, $r8;
        java.lang.String $r4, $r9;
        androidx.compose.ui.test.SemanticsSelectorKt$addIndexSelector$1 $r10;
        kotlin.jvm.functions.Function1 $r11;

        $r0 := @parameter0: androidx.compose.ui.test.SemanticsSelector;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = new androidx.compose.ui.test.SemanticsSelector;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $r4 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsSelector: java.lang.String getDescription()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")[");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = new androidx.compose.ui.test.SemanticsSelectorKt$addIndexSelector$1;

        specialinvoke $r10.<androidx.compose.ui.test.SemanticsSelectorKt$addIndexSelector$1: void <init>(int,androidx.compose.ui.test.SemanticsSelector)>(i0, $r0);

        $r11 = (kotlin.jvm.functions.Function1) $r10;

        specialinvoke $r1.<androidx.compose.ui.test.SemanticsSelector: void <init>(java.lang.String,boolean,androidx.compose.ui.test.SemanticsSelector,kotlin.jvm.functions.Function1)>($r9, 0, $r0, $r11);

        return $r1;
    }

    public static final androidx.compose.ui.test.SemanticsSelector addLastNodeSelector(androidx.compose.ui.test.SemanticsSelector)
    {
        androidx.compose.ui.test.SemanticsSelector $r0, $r1;
        java.lang.StringBuilder $r2, $r3, $r5, $r6;
        java.lang.String $r4, $r7;
        androidx.compose.ui.test.SemanticsSelectorKt$addLastNodeSelector$1 $r8;
        kotlin.jvm.functions.Function1 $r9;

        $r0 := @parameter0: androidx.compose.ui.test.SemanticsSelector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = new androidx.compose.ui.test.SemanticsSelector;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $r4 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsSelector: java.lang.String getDescription()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").last");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = <androidx.compose.ui.test.SemanticsSelectorKt$addLastNodeSelector$1: androidx.compose.ui.test.SemanticsSelectorKt$addLastNodeSelector$1 INSTANCE>;

        $r9 = (kotlin.jvm.functions.Function1) $r8;

        specialinvoke $r1.<androidx.compose.ui.test.SemanticsSelector: void <init>(java.lang.String,boolean,androidx.compose.ui.test.SemanticsSelector,kotlin.jvm.functions.Function1)>($r7, 0, $r0, $r9);

        return $r1;
    }

    public static final androidx.compose.ui.test.SemanticsSelector addSelectorViaMatcher(androidx.compose.ui.test.SemanticsSelector, java.lang.String, androidx.compose.ui.test.SemanticsMatcher)
    {
        androidx.compose.ui.test.SemanticsSelector $r0, $r3;
        java.lang.String r1, $r6, $r11, $r14;
        androidx.compose.ui.test.SemanticsMatcher r2;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r9, $r10, $r12, $r13;
        androidx.compose.ui.test.SemanticsSelectorKt$addSelectorViaMatcher$1 $r15;
        kotlin.jvm.functions.Function1 $r16;

        $r0 := @parameter0: androidx.compose.ui.test.SemanticsSelector;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: androidx.compose.ui.test.SemanticsMatcher;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "selectorName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "matcher");

        $r3 = new androidx.compose.ui.test.SemanticsSelector;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $r6 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsSelector: java.lang.String getDescription()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $r11 = virtualinvoke r2.<androidx.compose.ui.test.SemanticsMatcher: java.lang.String getDescription()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = new androidx.compose.ui.test.SemanticsSelectorKt$addSelectorViaMatcher$1;

        specialinvoke $r15.<androidx.compose.ui.test.SemanticsSelectorKt$addSelectorViaMatcher$1: void <init>(androidx.compose.ui.test.SemanticsMatcher)>(r2);

        $r16 = (kotlin.jvm.functions.Function1) $r15;

        specialinvoke $r3.<androidx.compose.ui.test.SemanticsSelector: void <init>(java.lang.String,boolean,androidx.compose.ui.test.SemanticsSelector,kotlin.jvm.functions.Function1)>($r14, 0, $r0, $r16);

        return $r3;
    }

