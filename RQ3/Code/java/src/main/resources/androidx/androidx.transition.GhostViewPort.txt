androidx.transition.GhostViewPort
<androidx.transition.GhostViewPort: android.view.ViewGroup mStartParent>
<androidx.transition.GhostViewPort: android.view.View mStartView>
<androidx.transition.GhostViewPort: android.view.View mView>
<androidx.transition.GhostViewPort: int mReferences>
<androidx.transition.GhostViewPort: android.graphics.Matrix mMatrix>
<androidx.transition.GhostViewPort: android.view.ViewTreeObserver$OnPreDrawListener mOnPreDrawListener>
    void <init>(android.view.View)
    {
        androidx.transition.GhostViewPort r0;
        android.view.View r1;
        android.content.Context $r2;
        androidx.transition.GhostViewPort$1 $r3;

        r0 := @this: androidx.transition.GhostViewPort;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.content.Context getContext()>();

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context)>($r2);

        $r3 = new androidx.transition.GhostViewPort$1;

        specialinvoke $r3.<androidx.transition.GhostViewPort$1: void <init>(androidx.transition.GhostViewPort)>(r0);

        r0.<androidx.transition.GhostViewPort: android.view.ViewTreeObserver$OnPreDrawListener mOnPreDrawListener> = $r3;

        r0.<androidx.transition.GhostViewPort: android.view.View mView> = r1;

        virtualinvoke r0.<androidx.transition.GhostViewPort: void setWillNotDraw(boolean)>(0);

        virtualinvoke r0.<androidx.transition.GhostViewPort: void setClipChildren(boolean)>(0);

        virtualinvoke r0.<androidx.transition.GhostViewPort: void setLayerType(int,android.graphics.Paint)>(2, null);

        return;
    }

    public void setVisibility(int)
    {
        androidx.transition.GhostViewPort r0, $r2;
        int i0;
        byte b1, $b2;
        android.view.View $r1, $r3;

        r0 := @this: androidx.transition.GhostViewPort;

        i0 := @parameter0: int;

        specialinvoke r0.<android.view.ViewGroup: void setVisibility(int)>(i0);

        $r1 = r0.<androidx.transition.GhostViewPort: android.view.View mView>;

        $r2 = staticinvoke <androidx.transition.GhostViewPort: androidx.transition.GhostViewPort getGhostView(android.view.View)>($r1);

        if $r2 != r0 goto label3;

        if i0 != 0 goto label1;

        $b2 = 4;

        goto label2;

     label1:
        $b2 = 0;

     label2:
        b1 = $b2;

        $r3 = r0.<androidx.transition.GhostViewPort: android.view.View mView>;

        staticinvoke <androidx.transition.ViewUtils: void setTransitionVisibility(android.view.View,int)>($r3, b1);

     label3:
        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        androidx.transition.GhostViewPort r0;
        boolean z0;
        int i0, i1, i2, i3;

        r0 := @this: androidx.transition.GhostViewPort;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        return;
    }

    void setMatrix(android.graphics.Matrix)
    {
        androidx.transition.GhostViewPort r0;
        android.graphics.Matrix r1;

        r0 := @this: androidx.transition.GhostViewPort;

        r1 := @parameter0: android.graphics.Matrix;

        r0.<androidx.transition.GhostViewPort: android.graphics.Matrix mMatrix> = r1;

        return;
    }

    public void reserveEndViewTransition(android.view.ViewGroup, android.view.View)
    {
        androidx.transition.GhostViewPort r0;
        android.view.ViewGroup r1;
        android.view.View r2;

        r0 := @this: androidx.transition.GhostViewPort;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.view.View;

        r0.<androidx.transition.GhostViewPort: android.view.ViewGroup mStartParent> = r1;

        r0.<androidx.transition.GhostViewPort: android.view.View mStartView> = r2;

        return;
    }

    protected void onAttachedToWindow()
    {
        androidx.transition.GhostViewPort r0;
        android.view.View $r1, $r2, $r5, $r6, $r8, $r10;
        android.view.ViewTreeObserver $r3;
        android.view.ViewTreeObserver$OnPreDrawListener $r4;
        android.view.ViewParent $r7, $r9;

        r0 := @this: androidx.transition.GhostViewPort;

        specialinvoke r0.<android.view.ViewGroup: void onAttachedToWindow()>();

        $r1 = r0.<androidx.transition.GhostViewPort: android.view.View mView>;

        staticinvoke <androidx.transition.GhostViewPort: void setGhostView(android.view.View,androidx.transition.GhostViewPort)>($r1, r0);

        $r2 = r0.<androidx.transition.GhostViewPort: android.view.View mView>;

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r4 = r0.<androidx.transition.GhostViewPort: android.view.ViewTreeObserver$OnPreDrawListener mOnPreDrawListener>;

        virtualinvoke $r3.<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r4);

        $r5 = r0.<androidx.transition.GhostViewPort: android.view.View mView>;

        staticinvoke <androidx.transition.ViewUtils: void setTransitionVisibility(android.view.View,int)>($r5, 4);

        $r6 = r0.<androidx.transition.GhostViewPort: android.view.View mView>;

        $r7 = virtualinvoke $r6.<android.view.View: android.view.ViewParent getParent()>();

        if $r7 == null goto label1;

        $r8 = r0.<androidx.transition.GhostViewPort: android.view.View mView>;

        $r9 = virtualinvoke $r8.<android.view.View: android.view.ViewParent getParent()>();

        $r10 = (android.view.View) $r9;

        virtualinvoke $r10.<android.view.View: void invalidate()>();

     label1:
        return;
    }

    protected void onDetachedFromWindow()
    {
        androidx.transition.GhostViewPort r0;
        android.view.View $r1, $r4, $r5, $r6, $r8, $r10;
        android.view.ViewTreeObserver $r2;
        android.view.ViewTreeObserver$OnPreDrawListener $r3;
        android.view.ViewParent $r7, $r9;

        r0 := @this: androidx.transition.GhostViewPort;

        $r1 = r0.<androidx.transition.GhostViewPort: android.view.View mView>;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r3 = r0.<androidx.transition.GhostViewPort: android.view.ViewTreeObserver$OnPreDrawListener mOnPreDrawListener>;

        virtualinvoke $r2.<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r3);

        $r4 = r0.<androidx.transition.GhostViewPort: android.view.View mView>;

        staticinvoke <androidx.transition.ViewUtils: void setTransitionVisibility(android.view.View,int)>($r4, 0);

        $r5 = r0.<androidx.transition.GhostViewPort: android.view.View mView>;

        staticinvoke <androidx.transition.GhostViewPort: void setGhostView(android.view.View,androidx.transition.GhostViewPort)>($r5, null);

        $r6 = r0.<androidx.transition.GhostViewPort: android.view.View mView>;

        $r7 = virtualinvoke $r6.<android.view.View: android.view.ViewParent getParent()>();

        if $r7 == null goto label1;

        $r8 = r0.<androidx.transition.GhostViewPort: android.view.View mView>;

        $r9 = virtualinvoke $r8.<android.view.View: android.view.ViewParent getParent()>();

        $r10 = (android.view.View) $r9;

        virtualinvoke $r10.<android.view.View: void invalidate()>();

     label1:
        specialinvoke r0.<android.view.ViewGroup: void onDetachedFromWindow()>();

        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        androidx.transition.GhostViewPort r0;
        android.graphics.Canvas r1;
        android.graphics.Matrix $r2;
        android.view.View $r3, $r4, $r5, $r6;
        long $l0;

        r0 := @this: androidx.transition.GhostViewPort;

        r1 := @parameter0: android.graphics.Canvas;

        staticinvoke <androidx.transition.CanvasUtils: void enableZ(android.graphics.Canvas,boolean)>(r1, 1);

        $r2 = r0.<androidx.transition.GhostViewPort: android.graphics.Matrix mMatrix>;

        virtualinvoke r1.<android.graphics.Canvas: void setMatrix(android.graphics.Matrix)>($r2);

        $r3 = r0.<androidx.transition.GhostViewPort: android.view.View mView>;

        staticinvoke <androidx.transition.ViewUtils: void setTransitionVisibility(android.view.View,int)>($r3, 0);

        $r4 = r0.<androidx.transition.GhostViewPort: android.view.View mView>;

        virtualinvoke $r4.<android.view.View: void invalidate()>();

        $r5 = r0.<androidx.transition.GhostViewPort: android.view.View mView>;

        staticinvoke <androidx.transition.ViewUtils: void setTransitionVisibility(android.view.View,int)>($r5, 4);

        $r6 = r0.<androidx.transition.GhostViewPort: android.view.View mView>;

        $l0 = virtualinvoke r0.<androidx.transition.GhostViewPort: long getDrawingTime()>();

        virtualinvoke r0.<androidx.transition.GhostViewPort: boolean drawChild(android.graphics.Canvas,android.view.View,long)>(r1, $r6, $l0);

        staticinvoke <androidx.transition.CanvasUtils: void enableZ(android.graphics.Canvas,boolean)>(r1, 0);

        return;
    }

    static void copySize(android.view.View, android.view.View)
    {
        android.view.View r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.view.View;

        $i0 = virtualinvoke r1.<android.view.View: int getLeft()>();

        $i1 = virtualinvoke r1.<android.view.View: int getTop()>();

        $i2 = virtualinvoke r1.<android.view.View: int getLeft()>();

        $i3 = virtualinvoke r0.<android.view.View: int getWidth()>();

        $i4 = $i2 + $i3;

        $i5 = virtualinvoke r1.<android.view.View: int getTop()>();

        $i6 = virtualinvoke r0.<android.view.View: int getHeight()>();

        $i7 = $i5 + $i6;

        staticinvoke <androidx.transition.ViewUtils: void setLeftTopRightBottom(android.view.View,int,int,int,int)>(r1, $i0, $i1, $i4, $i7);

        return;
    }

    static androidx.transition.GhostViewPort getGhostView(android.view.View)
    {
        android.view.View r0;
        int $i0;
        java.lang.Object $r1;
        androidx.transition.GhostViewPort $r2;

        r0 := @parameter0: android.view.View;

        $i0 = <androidx.transition.R$id: int ghost_view>;

        $r1 = virtualinvoke r0.<android.view.View: java.lang.Object getTag(int)>($i0);

        $r2 = (androidx.transition.GhostViewPort) $r1;

        return $r2;
    }

    static void setGhostView(android.view.View, androidx.transition.GhostViewPort)
    {
        android.view.View r0;
        androidx.transition.GhostViewPort r1;
        int $i0;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: androidx.transition.GhostViewPort;

        $i0 = <androidx.transition.R$id: int ghost_view>;

        virtualinvoke r0.<android.view.View: void setTag(int,java.lang.Object)>($i0, r1);

        return;
    }

    static void calculateMatrix(android.view.View, android.view.ViewGroup, android.graphics.Matrix)
    {
        android.view.View r0, r5, r6;
        android.view.ViewGroup r1, r3;
        android.graphics.Matrix r2;
        android.view.ViewParent $r4;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.view.ViewGroup;

        r2 := @parameter2: android.graphics.Matrix;

        $r4 = virtualinvoke r0.<android.view.View: android.view.ViewParent getParent()>();

        r3 = (android.view.ViewGroup) $r4;

        virtualinvoke r2.<android.graphics.Matrix: void reset()>();

        r5 = (android.view.View) r3;

        staticinvoke <androidx.transition.ViewUtils: void transformMatrixToGlobal(android.view.View,android.graphics.Matrix)>(r5, r2);

        $i0 = virtualinvoke r3.<android.view.ViewGroup: int getScrollX()>();

        $i1 = neg $i0;

        $f0 = (float) $i1;

        $i2 = virtualinvoke r3.<android.view.ViewGroup: int getScrollY()>();

        $i3 = neg $i2;

        $f1 = (float) $i3;

        virtualinvoke r2.<android.graphics.Matrix: boolean preTranslate(float,float)>($f0, $f1);

        r6 = (android.view.View) r1;

        staticinvoke <androidx.transition.ViewUtils: void transformMatrixToLocal(android.view.View,android.graphics.Matrix)>(r6, r2);

        return;
    }

    static androidx.transition.GhostViewPort addGhost(android.view.View, android.view.ViewGroup, android.graphics.Matrix)
    {
        android.view.View r0, r17, r18, r19, r20, r21;
        android.view.ViewGroup r1;
        androidx.transition.GhostViewHolder r2, r10, r16;
        android.view.ViewParent $r3, $r7;
        boolean $z0;
        android.graphics.Matrix r9, r14;
        androidx.transition.GhostViewPort r11, r15;
        int i0, $i1, $i2;
        java.lang.IllegalArgumentException r13;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.view.ViewGroup;

        r9 := @parameter2: android.graphics.Matrix;

        $r3 = virtualinvoke r0.<android.view.View: android.view.ViewParent getParent()>();

        $z0 = $r3 instanceof android.view.ViewGroup;

        if $z0 != 0 goto label1;

        r13 = new java.lang.IllegalArgumentException;

        specialinvoke r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Ghosted views must be parented by a ViewGroup");

        throw r13;

     label1:
        r10 = staticinvoke <androidx.transition.GhostViewHolder: androidx.transition.GhostViewHolder getHolder(android.view.ViewGroup)>(r1);

        r11 = staticinvoke <androidx.transition.GhostViewPort: androidx.transition.GhostViewPort getGhostView(android.view.View)>(r0);

        i0 = 0;

        if r11 == null goto label2;

        $r7 = virtualinvoke r11.<androidx.transition.GhostViewPort: android.view.ViewParent getParent()>();

        r2 = (androidx.transition.GhostViewHolder) $r7;

        if r2 == r10 goto label2;

        i0 = r11.<androidx.transition.GhostViewPort: int mReferences>;

        r17 = (android.view.View) r11;

        virtualinvoke r2.<androidx.transition.GhostViewHolder: void removeView(android.view.View)>(r17);

        r11 = null;

     label2:
        if r11 != null goto label6;

        if r9 != null goto label3;

        r14 = new android.graphics.Matrix;

        specialinvoke r14.<android.graphics.Matrix: void <init>()>();

        r9 = r14;

        staticinvoke <androidx.transition.GhostViewPort: void calculateMatrix(android.view.View,android.view.ViewGroup,android.graphics.Matrix)>(r0, r1, r9);

     label3:
        r15 = new androidx.transition.GhostViewPort;

        specialinvoke r15.<androidx.transition.GhostViewPort: void <init>(android.view.View)>(r0);

        r11 = r15;

        virtualinvoke r11.<androidx.transition.GhostViewPort: void setMatrix(android.graphics.Matrix)>(r9);

        if r10 != null goto label4;

        r16 = new androidx.transition.GhostViewHolder;

        specialinvoke r16.<androidx.transition.GhostViewHolder: void <init>(android.view.ViewGroup)>(r1);

        r10 = r16;

        goto label5;

     label4:
        virtualinvoke r10.<androidx.transition.GhostViewHolder: void popToOverlayTop()>();

     label5:
        r18 = (android.view.View) r1;

        r19 = (android.view.View) r10;

        staticinvoke <androidx.transition.GhostViewPort: void copySize(android.view.View,android.view.View)>(r18, r19);

        r20 = (android.view.View) r1;

        r21 = (android.view.View) r11;

        staticinvoke <androidx.transition.GhostViewPort: void copySize(android.view.View,android.view.View)>(r20, r21);

        virtualinvoke r10.<androidx.transition.GhostViewHolder: void addGhostView(androidx.transition.GhostViewPort)>(r11);

        r11.<androidx.transition.GhostViewPort: int mReferences> = i0;

        goto label7;

     label6:
        if r9 == null goto label7;

        virtualinvoke r11.<androidx.transition.GhostViewPort: void setMatrix(android.graphics.Matrix)>(r9);

     label7:
        $i1 = r11.<androidx.transition.GhostViewPort: int mReferences>;

        $i2 = $i1 + 1;

        r11.<androidx.transition.GhostViewPort: int mReferences> = $i2;

        return r11;
    }

    static void removeGhost(android.view.View)
    {
        android.view.View r0, r4;
        androidx.transition.GhostViewPort r1;
        androidx.transition.GhostViewHolder r2;
        int $i0, $i1, $i2;
        android.view.ViewParent $r3;

        r0 := @parameter0: android.view.View;

        r1 = staticinvoke <androidx.transition.GhostViewPort: androidx.transition.GhostViewPort getGhostView(android.view.View)>(r0);

        if r1 == null goto label1;

        $i0 = r1.<androidx.transition.GhostViewPort: int mReferences>;

        $i1 = $i0 - 1;

        r1.<androidx.transition.GhostViewPort: int mReferences> = $i1;

        $i2 = r1.<androidx.transition.GhostViewPort: int mReferences>;

        if $i2 > 0 goto label1;

        $r3 = virtualinvoke r1.<androidx.transition.GhostViewPort: android.view.ViewParent getParent()>();

        r2 = (androidx.transition.GhostViewHolder) $r3;

        r4 = (android.view.View) r1;

        virtualinvoke r2.<androidx.transition.GhostViewHolder: void removeView(android.view.View)>(r4);

     label1:
        return;
    }

