androidx.test.espresso.remote.internal.deps.guava.base.Absent
<androidx.test.espresso.remote.internal.deps.guava.base.Absent: androidx.test.espresso.remote.internal.deps.guava.base.Absent INSTANCE>
<androidx.test.espresso.remote.internal.deps.guava.base.Absent: long serialVersionUID>
    public int hashCode()
    {
        androidx.test.espresso.remote.internal.deps.guava.base.Absent r0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.base.Absent;

        return 2040732332;
    }

    public androidx.test.espresso.core.internal.deps.guava.base.Optional or(androidx.test.espresso.core.internal.deps.guava.base.Optional)
    {
        androidx.test.espresso.remote.internal.deps.guava.base.Absent r0;
        androidx.test.espresso.core.internal.deps.guava.base.Optional r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.base.Absent;

        r1 := @parameter0: androidx.test.espresso.core.internal.deps.guava.base.Optional;

        $r2 = staticinvoke <androidx.test.espresso.remote.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (androidx.test.espresso.core.internal.deps.guava.base.Optional) $r2;

        return $r3;
    }

    public androidx.test.espresso.core.internal.deps.guava.base.Optional transform(androidx.test.espresso.remote.internal.deps.guava.base.Function)
    {
        androidx.test.espresso.remote.internal.deps.guava.base.Absent r0;
        androidx.test.espresso.remote.internal.deps.guava.base.Function r1;
        androidx.test.espresso.core.internal.deps.guava.base.Optional $r3;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.base.Absent;

        r1 := @parameter0: androidx.test.espresso.remote.internal.deps.guava.base.Function;

        staticinvoke <androidx.test.espresso.remote.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Optional: androidx.test.espresso.core.internal.deps.guava.base.Optional absent()>();

        return $r3;
    }

    static androidx.test.espresso.core.internal.deps.guava.base.Optional withType()
    {
        androidx.test.espresso.remote.internal.deps.guava.base.Absent $r0;

        $r0 = <androidx.test.espresso.remote.internal.deps.guava.base.Absent: androidx.test.espresso.remote.internal.deps.guava.base.Absent INSTANCE>;

        return $r0;
    }

    public java.lang.Object get()
    {
        androidx.test.espresso.remote.internal.deps.guava.base.Absent r0;
        java.lang.IllegalStateException r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.base.Absent;

        r1 = new java.lang.IllegalStateException;

        specialinvoke r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Optional.get() cannot be called on an absent value");

        throw r1;
    }

    public java.lang.Object or(androidx.test.espresso.remote.internal.deps.guava.base.Supplier)
    {
        androidx.test.espresso.remote.internal.deps.guava.base.Absent r0;
        androidx.test.espresso.remote.internal.deps.guava.base.Supplier r1;
        java.lang.Object $r2, $r3;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.base.Absent;

        r1 := @parameter0: androidx.test.espresso.remote.internal.deps.guava.base.Supplier;

        $r2 = interfaceinvoke r1.<androidx.test.espresso.remote.internal.deps.guava.base.Supplier: java.lang.Object get()>();

        $r3 = staticinvoke <androidx.test.espresso.remote.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r2, "use Optional.orNull() instead of a Supplier that returns null");

        return $r3;
    }

    public java.lang.Object or(java.lang.Object)
    {
        androidx.test.espresso.remote.internal.deps.guava.base.Absent r0;
        java.lang.Object r1, $r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.base.Absent;

        r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <androidx.test.espresso.remote.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "use Optional.orNull() instead of Optional.or(null)");

        return $r2;
    }

    public java.lang.Object orNull()
    {
        androidx.test.espresso.remote.internal.deps.guava.base.Absent r0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.base.Absent;

        return null;
    }

    private java.lang.Object readResolve()
    {
        androidx.test.espresso.remote.internal.deps.guava.base.Absent r0, $r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.base.Absent;

        $r1 = <androidx.test.espresso.remote.internal.deps.guava.base.Absent: androidx.test.espresso.remote.internal.deps.guava.base.Absent INSTANCE>;

        return $r1;
    }

    public java.lang.String toString()
    {
        androidx.test.espresso.remote.internal.deps.guava.base.Absent r0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.base.Absent;

        return "Optional.absent()";
    }

    public java.util.Set asSet()
    {
        androidx.test.espresso.remote.internal.deps.guava.base.Absent r0;
        java.util.Set $r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.base.Absent;

        $r1 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        return $r1;
    }

    static void <clinit>()
    {
        androidx.test.espresso.remote.internal.deps.guava.base.Absent r0;

        r0 = new androidx.test.espresso.remote.internal.deps.guava.base.Absent;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.base.Absent: void <init>()>();

        <androidx.test.espresso.remote.internal.deps.guava.base.Absent: androidx.test.espresso.remote.internal.deps.guava.base.Absent INSTANCE> = r0;

        return;
    }

    private void <init>()
    {
        androidx.test.espresso.remote.internal.deps.guava.base.Absent r0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.base.Absent;

        specialinvoke r0.<androidx.test.espresso.core.internal.deps.guava.base.Optional: void <init>()>();

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0;
        androidx.test.espresso.remote.internal.deps.guava.base.Absent r1;
        boolean z0;

        r1 := @this: androidx.test.espresso.remote.internal.deps.guava.base.Absent;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label2;

        z0 = 1;

     label1:
        return z0;

     label2:
        z0 = 0;

        goto label1;
    }

    public boolean isPresent()
    {
        androidx.test.espresso.remote.internal.deps.guava.base.Absent r0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.base.Absent;

        return 0;
    }

