androidx.health.connect.client.units.Temperature
<androidx.health.connect.client.units.Temperature: androidx.health.connect.client.units.Temperature$Companion Companion>
<androidx.health.connect.client.units.Temperature: double value>
<androidx.health.connect.client.units.Temperature: androidx.health.connect.client.units.Temperature$Type type>
    private void <init>(double, androidx.health.connect.client.units.Temperature$Type)
    {
        androidx.health.connect.client.units.Temperature r0;
        double d0;
        androidx.health.connect.client.units.Temperature$Type r1;

        r0 := @this: androidx.health.connect.client.units.Temperature;

        d0 := @parameter0: double;

        r1 := @parameter1: androidx.health.connect.client.units.Temperature$Type;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.health.connect.client.units.Temperature: double value> = d0;

        r0.<androidx.health.connect.client.units.Temperature: androidx.health.connect.client.units.Temperature$Type type> = r1;

        return;
    }

    public final double getCelsius()
    {
        androidx.health.connect.client.units.Temperature r0;
        int[] $r1;
        androidx.health.connect.client.units.Temperature$Type $r2;
        int $i0, $i1;
        double $d0, $d1, $d2;
        kotlin.NoWhenBranchMatchedException $r3;

        r0 := @this: androidx.health.connect.client.units.Temperature;

        $r2 = r0.<androidx.health.connect.client.units.Temperature: androidx.health.connect.client.units.Temperature$Type type>;

        $r1 = <androidx.health.connect.client.units.Temperature$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke $r2.<androidx.health.connect.client.units.Temperature$Type: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $d2 = r0.<androidx.health.connect.client.units.Temperature: double value>;

        goto label4;

     label2:
        $d0 = r0.<androidx.health.connect.client.units.Temperature: double value>;

        $d1 = $d0 - 32.0;

        $d2 = $d1 / 1.8;

        goto label4;

     label3:
        $r3 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r3.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r3;

     label4:
        return $d2;
    }

    public final double getFahrenheit()
    {
        androidx.health.connect.client.units.Temperature r0;
        int[] $r1;
        androidx.health.connect.client.units.Temperature$Type $r2;
        int $i0, $i1;
        double $d0, $d1, $d2;
        kotlin.NoWhenBranchMatchedException $r3;

        r0 := @this: androidx.health.connect.client.units.Temperature;

        $r2 = r0.<androidx.health.connect.client.units.Temperature: androidx.health.connect.client.units.Temperature$Type type>;

        $r1 = <androidx.health.connect.client.units.Temperature$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke $r2.<androidx.health.connect.client.units.Temperature$Type: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $d0 = r0.<androidx.health.connect.client.units.Temperature: double value>;

        $d1 = $d0 * 1.8;

        $d2 = $d1 + 32.0;

        goto label4;

     label2:
        $d2 = r0.<androidx.health.connect.client.units.Temperature: double value>;

        goto label4;

     label3:
        $r3 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r3.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r3;

     label4:
        return $d2;
    }

    public int compareTo(androidx.health.connect.client.units.Temperature)
    {
        androidx.health.connect.client.units.Temperature r0, r1;
        androidx.health.connect.client.units.Temperature$Type $r2, $r3;
        double $d0, $d1, $d2, $d3;
        int $i0;

        r0 := @this: androidx.health.connect.client.units.Temperature;

        r1 := @parameter0: androidx.health.connect.client.units.Temperature;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "other");

        $r3 = r0.<androidx.health.connect.client.units.Temperature: androidx.health.connect.client.units.Temperature$Type type>;

        $r2 = r1.<androidx.health.connect.client.units.Temperature: androidx.health.connect.client.units.Temperature$Type type>;

        if $r3 != $r2 goto label1;

        $d3 = r0.<androidx.health.connect.client.units.Temperature: double value>;

        $d2 = r1.<androidx.health.connect.client.units.Temperature: double value>;

        $i0 = staticinvoke <java.lang.Double: int compare(double,double)>($d3, $d2);

        goto label2;

     label1:
        $d0 = virtualinvoke r0.<androidx.health.connect.client.units.Temperature: double getCelsius()>();

        $d1 = virtualinvoke r1.<androidx.health.connect.client.units.Temperature: double getCelsius()>();

        $i0 = staticinvoke <java.lang.Double: int compare(double,double)>($d0, $d1);

     label2:
        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.health.connect.client.units.Temperature r0, $r2, $r3;
        java.lang.Object r1;
        boolean $z0, $z1;
        double $d0, $d1;
        byte $b0;
        androidx.health.connect.client.units.Temperature$Type $r4, $r5;

        r0 := @this: androidx.health.connect.client.units.Temperature;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.health.connect.client.units.Temperature;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $d1 = r0.<androidx.health.connect.client.units.Temperature: double value>;

        $r2 = (androidx.health.connect.client.units.Temperature) r1;

        $d0 = $r2.<androidx.health.connect.client.units.Temperature: double value>;

        $b0 = $d1 cmpg $d0;

        if $b0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        if $z1 != 0 goto label5;

        return 0;

     label5:
        $r5 = r0.<androidx.health.connect.client.units.Temperature: androidx.health.connect.client.units.Temperature$Type type>;

        $r3 = (androidx.health.connect.client.units.Temperature) r1;

        $r4 = $r3.<androidx.health.connect.client.units.Temperature: androidx.health.connect.client.units.Temperature$Type type>;

        if $r5 == $r4 goto label6;

        return 0;

     label6:
        return 1;
    }

    public int hashCode()
    {
        androidx.health.connect.client.units.Temperature r0;
        double $d0;
        androidx.health.connect.client.units.Temperature$Type $r1;
        int $i0, $i1, i2, i3;

        r0 := @this: androidx.health.connect.client.units.Temperature;

        $d0 = r0.<androidx.health.connect.client.units.Temperature: double value>;

        i2 = staticinvoke <java.lang.Double: int hashCode(double)>($d0);

        $i0 = 31 * i2;

        $r1 = r0.<androidx.health.connect.client.units.Temperature: androidx.health.connect.client.units.Temperature$Type type>;

        $i1 = virtualinvoke $r1.<androidx.health.connect.client.units.Temperature$Type: int hashCode()>();

        i3 = $i0 + $i1;

        return i3;
    }

    public java.lang.String toString()
    {
        androidx.health.connect.client.units.Temperature r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r6;
        double $d0;
        androidx.health.connect.client.units.Temperature$Type $r4;
        java.lang.String $r5, $r7;

        r0 := @this: androidx.health.connect.client.units.Temperature;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $d0 = r0.<androidx.health.connect.client.units.Temperature: double value>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r4 = r0.<androidx.health.connect.client.units.Temperature: androidx.health.connect.client.units.Temperature$Type type>;

        $r5 = virtualinvoke $r4.<androidx.health.connect.client.units.Temperature$Type: java.lang.String getTitle()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public static final androidx.health.connect.client.units.Temperature celsius(double)
    {
        double d0;
        androidx.health.connect.client.units.Temperature$Companion $r0;
        androidx.health.connect.client.units.Temperature $r1;

        d0 := @parameter0: double;

        $r0 = <androidx.health.connect.client.units.Temperature: androidx.health.connect.client.units.Temperature$Companion Companion>;

        $r1 = virtualinvoke $r0.<androidx.health.connect.client.units.Temperature$Companion: androidx.health.connect.client.units.Temperature celsius(double)>(d0);

        return $r1;
    }

    public static final androidx.health.connect.client.units.Temperature fahrenheit(double)
    {
        double d0;
        androidx.health.connect.client.units.Temperature$Companion $r0;
        androidx.health.connect.client.units.Temperature $r1;

        d0 := @parameter0: double;

        $r0 = <androidx.health.connect.client.units.Temperature: androidx.health.connect.client.units.Temperature$Companion Companion>;

        $r1 = virtualinvoke $r0.<androidx.health.connect.client.units.Temperature$Companion: androidx.health.connect.client.units.Temperature fahrenheit(double)>(d0);

        return $r1;
    }

    public volatile int compareTo(java.lang.Object)
    {
        androidx.health.connect.client.units.Temperature r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: androidx.health.connect.client.units.Temperature;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.health.connect.client.units.Temperature) r1;

        $i0 = virtualinvoke r0.<androidx.health.connect.client.units.Temperature: int compareTo(androidx.health.connect.client.units.Temperature)>($r2);

        return $i0;
    }

    public void <init>(double, androidx.health.connect.client.units.Temperature$Type, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.health.connect.client.units.Temperature r0;
        double d0;
        androidx.health.connect.client.units.Temperature$Type r1;
        kotlin.jvm.internal.DefaultConstructorMarker $r2;

        r0 := @this: androidx.health.connect.client.units.Temperature;

        d0 := @parameter0: double;

        r1 := @parameter1: androidx.health.connect.client.units.Temperature$Type;

        $r2 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.health.connect.client.units.Temperature: void <init>(double,androidx.health.connect.client.units.Temperature$Type)>(d0, r1);

        return;
    }

    static void <clinit>()
    {
        androidx.health.connect.client.units.Temperature$Companion $r0;

        $r0 = new androidx.health.connect.client.units.Temperature$Companion;

        specialinvoke $r0.<androidx.health.connect.client.units.Temperature$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.health.connect.client.units.Temperature: androidx.health.connect.client.units.Temperature$Companion Companion> = $r0;

        return;
    }

androidx.health.connect.client.units.Temperature$Companion
    private void <init>()
    {
        androidx.health.connect.client.units.Temperature$Companion r0;

        r0 := @this: androidx.health.connect.client.units.Temperature$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.health.connect.client.units.Temperature celsius(double)
    {
        androidx.health.connect.client.units.Temperature$Companion r0;
        double d0;
        androidx.health.connect.client.units.Temperature $r1;
        androidx.health.connect.client.units.Temperature$Type $r2;

        r0 := @this: androidx.health.connect.client.units.Temperature$Companion;

        d0 := @parameter0: double;

        $r1 = new androidx.health.connect.client.units.Temperature;

        $r2 = <androidx.health.connect.client.units.Temperature$Type: androidx.health.connect.client.units.Temperature$Type CELSIUS>;

        specialinvoke $r1.<androidx.health.connect.client.units.Temperature: void <init>(double,androidx.health.connect.client.units.Temperature$Type,kotlin.jvm.internal.DefaultConstructorMarker)>(d0, $r2, null);

        return $r1;
    }

    public final androidx.health.connect.client.units.Temperature fahrenheit(double)
    {
        androidx.health.connect.client.units.Temperature$Companion r0;
        double d0;
        androidx.health.connect.client.units.Temperature $r1;
        androidx.health.connect.client.units.Temperature$Type $r2;

        r0 := @this: androidx.health.connect.client.units.Temperature$Companion;

        d0 := @parameter0: double;

        $r1 = new androidx.health.connect.client.units.Temperature;

        $r2 = <androidx.health.connect.client.units.Temperature$Type: androidx.health.connect.client.units.Temperature$Type FAHRENHEIT>;

        specialinvoke $r1.<androidx.health.connect.client.units.Temperature: void <init>(double,androidx.health.connect.client.units.Temperature$Type,kotlin.jvm.internal.DefaultConstructorMarker)>(d0, $r2, null);

        return $r1;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.health.connect.client.units.Temperature$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.health.connect.client.units.Temperature$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.health.connect.client.units.Temperature$Companion: void <init>()>();

        return;
    }

androidx.health.connect.client.units.Temperature$Type$CELSIUS
<androidx.health.connect.client.units.Temperature$Type$CELSIUS: java.lang.String title>
    void <init>(java.lang.String, int)
    {
        androidx.health.connect.client.units.Temperature$Type$CELSIUS r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: androidx.health.connect.client.units.Temperature$Type$CELSIUS;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<androidx.health.connect.client.units.Temperature$Type: void <init>(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r1, $i0, null);

        r0.<androidx.health.connect.client.units.Temperature$Type$CELSIUS: java.lang.String title> = "Celsius";

        return;
    }

    public java.lang.String getTitle()
    {
        androidx.health.connect.client.units.Temperature$Type$CELSIUS r0;
        java.lang.String $r1;

        r0 := @this: androidx.health.connect.client.units.Temperature$Type$CELSIUS;

        $r1 = r0.<androidx.health.connect.client.units.Temperature$Type$CELSIUS: java.lang.String title>;

        return $r1;
    }

androidx.health.connect.client.units.Temperature$Type$FAHRENHEIT
<androidx.health.connect.client.units.Temperature$Type$FAHRENHEIT: java.lang.String title>
    void <init>(java.lang.String, int)
    {
        androidx.health.connect.client.units.Temperature$Type$FAHRENHEIT r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: androidx.health.connect.client.units.Temperature$Type$FAHRENHEIT;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<androidx.health.connect.client.units.Temperature$Type: void <init>(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r1, $i0, null);

        r0.<androidx.health.connect.client.units.Temperature$Type$FAHRENHEIT: java.lang.String title> = "Fahrenheit";

        return;
    }

    public java.lang.String getTitle()
    {
        androidx.health.connect.client.units.Temperature$Type$FAHRENHEIT r0;
        java.lang.String $r1;

        r0 := @this: androidx.health.connect.client.units.Temperature$Type$FAHRENHEIT;

        $r1 = r0.<androidx.health.connect.client.units.Temperature$Type$FAHRENHEIT: java.lang.String title>;

        return $r1;
    }

androidx.health.connect.client.units.Temperature$Type
<androidx.health.connect.client.units.Temperature$Type: androidx.health.connect.client.units.Temperature$Type CELSIUS>
<androidx.health.connect.client.units.Temperature$Type: androidx.health.connect.client.units.Temperature$Type FAHRENHEIT>
<androidx.health.connect.client.units.Temperature$Type: androidx.health.connect.client.units.Temperature$Type[] $VALUES>
    private void <init>(java.lang.String, int)
    {
        androidx.health.connect.client.units.Temperature$Type r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: androidx.health.connect.client.units.Temperature$Type;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

<androidx.health.connect.client.units.Temperature$Type: java.lang.String getTitle()>
    public static androidx.health.connect.client.units.Temperature$Type[] values()
    {
        androidx.health.connect.client.units.Temperature$Type[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <androidx.health.connect.client.units.Temperature$Type: androidx.health.connect.client.units.Temperature$Type[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (androidx.health.connect.client.units.Temperature$Type[]) $r1;

        return $r2;
    }

    public static androidx.health.connect.client.units.Temperature$Type valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.health.connect.client.units.Temperature$Type $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/health/connect/client/units/Temperature$Type;", r0);

        $r2 = (androidx.health.connect.client.units.Temperature$Type) $r1;

        return $r2;
    }

    private static final androidx.health.connect.client.units.Temperature$Type[] $values()
    {
        androidx.health.connect.client.units.Temperature$Type[] r0;
        androidx.health.connect.client.units.Temperature$Type $r1, $r2;

        r0 = newarray (androidx.health.connect.client.units.Temperature$Type)[2];

        $r1 = <androidx.health.connect.client.units.Temperature$Type: androidx.health.connect.client.units.Temperature$Type CELSIUS>;

        r0[0] = $r1;

        $r2 = <androidx.health.connect.client.units.Temperature$Type: androidx.health.connect.client.units.Temperature$Type FAHRENHEIT>;

        r0[1] = $r2;

        return r0;
    }

    public void <init>(java.lang.String, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.health.connect.client.units.Temperature$Type r0;
        java.lang.String $r1;
        int $i0;
        kotlin.jvm.internal.DefaultConstructorMarker $r2;

        r0 := @this: androidx.health.connect.client.units.Temperature$Type;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.health.connect.client.units.Temperature$Type: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    static void <clinit>()
    {
        androidx.health.connect.client.units.Temperature$Type$CELSIUS $r0;
        androidx.health.connect.client.units.Temperature$Type$FAHRENHEIT $r1;
        androidx.health.connect.client.units.Temperature$Type[] $r2;

        $r0 = new androidx.health.connect.client.units.Temperature$Type$CELSIUS;

        specialinvoke $r0.<androidx.health.connect.client.units.Temperature$Type$CELSIUS: void <init>(java.lang.String,int)>("CELSIUS", 0);

        <androidx.health.connect.client.units.Temperature$Type: androidx.health.connect.client.units.Temperature$Type CELSIUS> = $r0;

        $r1 = new androidx.health.connect.client.units.Temperature$Type$FAHRENHEIT;

        specialinvoke $r1.<androidx.health.connect.client.units.Temperature$Type$FAHRENHEIT: void <init>(java.lang.String,int)>("FAHRENHEIT", 1);

        <androidx.health.connect.client.units.Temperature$Type: androidx.health.connect.client.units.Temperature$Type FAHRENHEIT> = $r1;

        $r2 = staticinvoke <androidx.health.connect.client.units.Temperature$Type: androidx.health.connect.client.units.Temperature$Type[] $values()>();

        <androidx.health.connect.client.units.Temperature$Type: androidx.health.connect.client.units.Temperature$Type[] $VALUES> = $r2;

        return;
    }

androidx.health.connect.client.units.Temperature$WhenMappings
<androidx.health.connect.client.units.Temperature$WhenMappings: int[] $EnumSwitchMapping$0>
    static void <clinit>()
    {
        int[] r0;
        androidx.health.connect.client.units.Temperature$Type[] $r1;
        int $i0, $i1, $i2;
        androidx.health.connect.client.units.Temperature$Type $r2, $r3;

        $r1 = staticinvoke <androidx.health.connect.client.units.Temperature$Type: androidx.health.connect.client.units.Temperature$Type[] values()>();

        $i0 = lengthof $r1;

        r0 = newarray (int)[$i0];

        $r2 = <androidx.health.connect.client.units.Temperature$Type: androidx.health.connect.client.units.Temperature$Type CELSIUS>;

        $i1 = virtualinvoke $r2.<androidx.health.connect.client.units.Temperature$Type: int ordinal()>();

        r0[$i1] = 1;

        $r3 = <androidx.health.connect.client.units.Temperature$Type: androidx.health.connect.client.units.Temperature$Type FAHRENHEIT>;

        $i2 = virtualinvoke $r3.<androidx.health.connect.client.units.Temperature$Type: int ordinal()>();

        r0[$i2] = 2;

        <androidx.health.connect.client.units.Temperature$WhenMappings: int[] $EnumSwitchMapping$0> = r0;

        return;
    }

