androidx.ui.core.LayerWrapper
<androidx.ui.core.LayerWrapper: androidx.ui.core.OwnedLayer _layer>
<androidx.ui.core.LayerWrapper: boolean layerDestroyed>
<androidx.ui.core.LayerWrapper: kotlin.jvm.functions.Function0 invalidateParentLayer>
<androidx.ui.core.LayerWrapper: float[] positionCache>
<androidx.ui.core.LayerWrapper: android.graphics.Matrix inverseMatrixCache>
    public void <init>(androidx.ui.core.LayoutNodeWrapper, androidx.ui.core.DrawLayerModifier)
    {
        androidx.ui.core.LayerWrapper r0;
        androidx.ui.core.LayoutNodeWrapper r1;
        androidx.ui.core.DrawLayerModifier r2;
        androidx.ui.core.Modifier$Element $r3;
        androidx.ui.core.LayerWrapper$invalidateParentLayer$1 $r4;
        kotlin.jvm.functions.Function0 $r5;

        r0 := @this: androidx.ui.core.LayerWrapper;

        r1 := @parameter0: androidx.ui.core.LayoutNodeWrapper;

        r2 := @parameter1: androidx.ui.core.DrawLayerModifier;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "wrapped");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "modifier");

        $r3 = (androidx.ui.core.Modifier$Element) r2;

        specialinvoke r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: void <init>(androidx.ui.core.LayoutNodeWrapper,androidx.ui.core.Modifier$Element)>(r1, $r3);

        $r4 = new androidx.ui.core.LayerWrapper$invalidateParentLayer$1;

        specialinvoke $r4.<androidx.ui.core.LayerWrapper$invalidateParentLayer$1: void <init>(androidx.ui.core.LayerWrapper)>(r0);

        $r5 = (kotlin.jvm.functions.Function0) $r4;

        r0.<androidx.ui.core.LayerWrapper: kotlin.jvm.functions.Function0 invalidateParentLayer> = $r5;

        return;
    }

    public boolean getInvalidateLayerOnBoundsChange()
    {
        androidx.ui.core.LayerWrapper r0;

        r0 := @this: androidx.ui.core.LayerWrapper;

        return 0;
    }

    public final androidx.ui.core.OwnedLayer getLayer()
    {
        androidx.ui.core.LayerWrapper r0;
        androidx.ui.core.OwnedLayer r1, r2, r3, $r15;
        boolean z0, z1;
        androidx.ui.core.LayoutNode $r4;
        androidx.ui.core.ComponentNode $r5;
        androidx.ui.core.Owner $r6;
        androidx.ui.core.Modifier$Element $r7;
        androidx.ui.core.LayerWrapper$layer$1 $r8;
        androidx.ui.core.DrawLayerModifier $r9;
        androidx.ui.core.LayoutNodeWrapper $r10;
        kotlin.jvm.functions.Function0 $r11, $r13;
        kotlin.jvm.functions.Function1 $r12;

        r0 := @this: androidx.ui.core.LayerWrapper;

        r1 = r0.<androidx.ui.core.LayerWrapper: androidx.ui.core.OwnedLayer _layer>;

        if r1 != null goto label1;

        $r4 = virtualinvoke r0.<androidx.ui.core.LayerWrapper: androidx.ui.core.LayoutNode getLayoutNode$ui_platform_release()>();

        $r5 = (androidx.ui.core.ComponentNode) $r4;

        $r6 = staticinvoke <androidx.ui.core.ComponentNodesKt: androidx.ui.core.Owner requireOwner(androidx.ui.core.ComponentNode)>($r5);

        $r7 = virtualinvoke r0.<androidx.ui.core.LayerWrapper: androidx.ui.core.Modifier$Element getModifier()>();

        $r9 = (androidx.ui.core.DrawLayerModifier) $r7;

        $r8 = new androidx.ui.core.LayerWrapper$layer$1;

        $r10 = virtualinvoke r0.<androidx.ui.core.LayerWrapper: androidx.ui.core.LayoutNodeWrapper getWrapped$ui_platform_release()>();

        specialinvoke $r8.<androidx.ui.core.LayerWrapper$layer$1: void <init>(androidx.ui.core.LayoutNodeWrapper)>($r10);

        $r12 = (kotlin.jvm.functions.Function1) $r8;

        $r11 = r0.<androidx.ui.core.LayerWrapper: kotlin.jvm.functions.Function0 invalidateParentLayer>;

        r2 = interfaceinvoke $r6.<androidx.ui.core.Owner: androidx.ui.core.OwnedLayer createLayer(androidx.ui.core.DrawLayerModifier,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0)>($r9, $r12, $r11);

        z0 = 0;

        z1 = 0;

        r3 = r2;

        r0.<androidx.ui.core.LayerWrapper: androidx.ui.core.OwnedLayer _layer> = r3;

        $r13 = r0.<androidx.ui.core.LayerWrapper: kotlin.jvm.functions.Function0 invalidateParentLayer>;

        interfaceinvoke $r13.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r15 = r2;

        goto label2;

     label1:
        $r15 = r1;

     label2:
        return $r15;
    }

    public androidx.ui.core.Placeable performMeasure(androidx.ui.core.Constraints, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.core.LayerWrapper r0;
        androidx.ui.core.Constraints r1;
        androidx.ui.core.LayoutDirection r2;
        androidx.ui.core.Placeable r3;
        androidx.ui.core.OwnedLayer $r4;
        androidx.ui.unit.IntPxSize $r5;

        r0 := @this: androidx.ui.core.LayerWrapper;

        r1 := @parameter0: androidx.ui.core.Constraints;

        r2 := @parameter1: androidx.ui.core.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "constraints");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "layoutDirection");

        r3 = specialinvoke r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: androidx.ui.core.Placeable performMeasure(androidx.ui.core.Constraints,androidx.ui.core.LayoutDirection)>(r1, r2);

        $r4 = virtualinvoke r0.<androidx.ui.core.LayerWrapper: androidx.ui.core.OwnedLayer getLayer()>();

        $r5 = virtualinvoke r0.<androidx.ui.core.LayerWrapper: androidx.ui.unit.IntPxSize getMeasuredSize()>();

        interfaceinvoke $r4.<androidx.ui.core.OwnedLayer: void resize(androidx.ui.unit.IntPxSize)>($r5);

        return r3;
    }

    protected void place(androidx.ui.unit.IntPxPosition)
    {
        androidx.ui.core.LayerWrapper r0;
        androidx.ui.unit.IntPxPosition r1;
        androidx.ui.core.OwnedLayer $r2;

        r0 := @this: androidx.ui.core.LayerWrapper;

        r1 := @parameter0: androidx.ui.unit.IntPxPosition;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "position");

        specialinvoke r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: void place(androidx.ui.unit.IntPxPosition)>(r1);

        $r2 = virtualinvoke r0.<androidx.ui.core.LayerWrapper: androidx.ui.core.OwnedLayer getLayer()>();

        interfaceinvoke $r2.<androidx.ui.core.OwnedLayer: void move(androidx.ui.unit.IntPxPosition)>(r1);

        return;
    }

    public void draw(androidx.ui.graphics.Canvas)
    {
        androidx.ui.core.LayerWrapper r0;
        androidx.ui.graphics.Canvas r1;
        androidx.ui.core.OwnedLayer $r2;

        r0 := @this: androidx.ui.core.LayerWrapper;

        r1 := @parameter0: androidx.ui.graphics.Canvas;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "canvas");

        $r2 = virtualinvoke r0.<androidx.ui.core.LayerWrapper: androidx.ui.core.OwnedLayer getLayer()>();

        interfaceinvoke $r2.<androidx.ui.core.OwnedLayer: void drawLayer(androidx.ui.graphics.Canvas)>(r1);

        return;
    }

    public void detach()
    {
        androidx.ui.core.LayerWrapper r0;
        androidx.ui.core.OwnedLayer r1;

        r0 := @this: androidx.ui.core.LayerWrapper;

        specialinvoke r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: void detach()>();

        r1 = r0.<androidx.ui.core.LayerWrapper: androidx.ui.core.OwnedLayer _layer>;

        if r1 != null goto label1;

        goto label2;

     label1:
        interfaceinvoke r1.<androidx.ui.core.OwnedLayer: void destroy()>();

     label2:
        return;
    }

    public androidx.ui.core.OwnedLayer findLayer()
    {
        androidx.ui.core.LayerWrapper r0;
        androidx.ui.core.OwnedLayer $r1;

        r0 := @this: androidx.ui.core.LayerWrapper;

        $r1 = virtualinvoke r0.<androidx.ui.core.LayerWrapper: androidx.ui.core.OwnedLayer getLayer()>();

        return $r1;
    }

    public androidx.ui.unit.PxPosition fromParentPosition(androidx.ui.unit.PxPosition)
    {
        androidx.ui.core.LayerWrapper r0;
        androidx.ui.unit.PxPosition r1, r3, $r9, $r12;
        android.graphics.Matrix r2, r4, r5, r6, r7, $r10, $r11;
        boolean z0, z1, $z3;
        androidx.ui.core.OwnedLayer $r8;

        r0 := @this: androidx.ui.core.LayerWrapper;

        r1 := @parameter0: androidx.ui.unit.PxPosition;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "position");

        $r8 = virtualinvoke r0.<androidx.ui.core.LayerWrapper: androidx.ui.core.OwnedLayer getLayer()>();

        r2 = interfaceinvoke $r8.<androidx.ui.core.OwnedLayer: android.graphics.Matrix getMatrix()>();

        $z3 = virtualinvoke r2.<android.graphics.Matrix: boolean isIdentity()>();

        if $z3 != 0 goto label3;

        r5 = r0.<androidx.ui.core.LayerWrapper: android.graphics.Matrix inverseMatrixCache>;

        if r5 != null goto label1;

        $r10 = new android.graphics.Matrix;

        specialinvoke $r10.<android.graphics.Matrix: void <init>()>();

        r6 = $r10;

        z0 = 0;

        z1 = 0;

        r7 = r6;

        r0.<androidx.ui.core.LayerWrapper: android.graphics.Matrix inverseMatrixCache> = r7;

        $r11 = r6;

        goto label2;

     label1:
        $r11 = r5;

     label2:
        r4 = $r11;

        virtualinvoke r2.<android.graphics.Matrix: boolean invert(android.graphics.Matrix)>(r4);

        $r12 = specialinvoke r0.<androidx.ui.core.LayerWrapper: androidx.ui.unit.PxPosition mapPointsFromMatrix(android.graphics.Matrix,androidx.ui.unit.PxPosition)>(r4, r1);

        goto label4;

     label3:
        $r12 = r1;

     label4:
        r3 = $r12;

        $r9 = specialinvoke r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: androidx.ui.unit.PxPosition fromParentPosition(androidx.ui.unit.PxPosition)>(r3);

        return $r9;
    }

    public androidx.ui.unit.PxPosition toParentPosition(androidx.ui.unit.PxPosition)
    {
        androidx.ui.core.LayerWrapper r0;
        androidx.ui.unit.PxPosition r1, r3, $r5, $r6;
        android.graphics.Matrix r2;
        androidx.ui.core.OwnedLayer $r4;
        boolean $z0;

        r0 := @this: androidx.ui.core.LayerWrapper;

        r1 := @parameter0: androidx.ui.unit.PxPosition;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "position");

        $r4 = virtualinvoke r0.<androidx.ui.core.LayerWrapper: androidx.ui.core.OwnedLayer getLayer()>();

        r2 = interfaceinvoke $r4.<androidx.ui.core.OwnedLayer: android.graphics.Matrix getMatrix()>();

        $z0 = virtualinvoke r2.<android.graphics.Matrix: boolean isIdentity()>();

        if $z0 != 0 goto label1;

        $r6 = specialinvoke r0.<androidx.ui.core.LayerWrapper: androidx.ui.unit.PxPosition mapPointsFromMatrix(android.graphics.Matrix,androidx.ui.unit.PxPosition)>(r2, r1);

        goto label2;

     label1:
        $r6 = r1;

     label2:
        r3 = $r6;

        $r5 = specialinvoke r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: androidx.ui.unit.PxPosition toParentPosition(androidx.ui.unit.PxPosition)>(r3);

        return $r5;
    }

    private final androidx.ui.unit.PxPosition mapPointsFromMatrix(android.graphics.Matrix, androidx.ui.unit.PxPosition)
    {
        androidx.ui.core.LayerWrapper r0;
        android.graphics.Matrix r1;
        androidx.ui.unit.PxPosition r2, $r3, r4;
        float f0, f1, $f2, $f3, $f4, f5, f6, f7, f8, $f9;
        long l0, l1, l2, l3, $l4, $l5, $l8, $l9, l10, l12;
        boolean z0, z5;
        int $i6, $i7, i11, $i13;
        kotlin.jvm.internal.FloatCompanionObject $r5, r6;
        float[] $r7, $r8, r9, r10, r11, r12;

        r0 := @this: androidx.ui.core.LayerWrapper;

        r1 := @parameter0: android.graphics.Matrix;

        r2 := @parameter1: androidx.ui.unit.PxPosition;

        r4 = r2;

        l10 = virtualinvoke r4.<androidx.ui.unit.PxPosition: long getValue()>();

        $r5 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l4 = l10 >> 32;

        i11 = (int) $l4;

        $f3 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>(i11);

        f0 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f3);

        z5 = 0;

        l12 = virtualinvoke r2.<androidx.ui.unit.PxPosition: long getValue()>();

        r6 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l5 = l12 & 4294967295L;

        $i13 = (int) $l5;

        $f4 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i13);

        f5 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f4);

        $r7 = r0.<androidx.ui.core.LayerWrapper: float[] positionCache>;

        if $r7 == null goto label1;

        $r7[0] = f0;

        $r7[1] = f5;

        $r8 = $r7;

        goto label2;

     label1:
        r9 = newarray (float)[2];

        r9[0] = f0;

        r9[1] = f5;

        r10 = r9;

        r11 = r10;

        r0.<androidx.ui.core.LayerWrapper: float[] positionCache> = r11;

        $r8 = r10;

     label2:
        r12 = $r8;

        virtualinvoke r1.<android.graphics.Matrix: void mapPoints(float[])>(r12);

        f6 = r12[0];

        f7 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>(f6);

        $f2 = r12[1];

        f8 = f7;

        $f9 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f2);

        $i6 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f8);

        l0 = (long) $i6;

        f1 = $f9;

        z0 = 0;

        $i7 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f1);

        l1 = (long) $i7;

        $l9 = l0 << 32;

        $l8 = l1 & 4294967295L;

        l2 = $l9 | $l8;

        l3 = l2;

        $r3 = new androidx.ui.unit.PxPosition;

        specialinvoke $r3.<androidx.ui.unit.PxPosition: void <init>(long)>(l3);

        return $r3;
    }

    protected void rectInParent(android.graphics.RectF)
    {
        androidx.ui.core.LayerWrapper r0;
        android.graphics.RectF r1, r10, r12;
        int i0, $i3, $i4, i6;
        androidx.ui.core.Modifier$Element $r2, $r4, $r6;
        androidx.ui.core.DrawLayerModifier $r3, $r5, $r7;
        boolean $z0, $z1, $z3;
        long $l1, $l2, l5, l7;
        float $f0, f1, f2, f3, f4, f5;
        androidx.ui.graphics.Shape $r8;
        androidx.ui.unit.IntPxSize r9, r11;
        androidx.ui.core.OwnedLayer $r13;
        android.graphics.Matrix r14;

        r0 := @this: androidx.ui.core.LayerWrapper;

        r1 := @parameter0: android.graphics.RectF;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "bounds");

        $r2 = virtualinvoke r0.<androidx.ui.core.LayerWrapper: androidx.ui.core.Modifier$Element getModifier()>();

        $r3 = (androidx.ui.core.DrawLayerModifier) $r2;

        $z0 = interfaceinvoke $r3.<androidx.ui.core.DrawLayerModifier: boolean getClipToBounds()>();

        if $z0 != 0 goto label1;

        $r4 = virtualinvoke r0.<androidx.ui.core.LayerWrapper: androidx.ui.core.Modifier$Element getModifier()>();

        $r5 = (androidx.ui.core.DrawLayerModifier) $r4;

        $z3 = interfaceinvoke $r5.<androidx.ui.core.DrawLayerModifier: boolean getClipToOutline()>();

        if $z3 == 0 goto label2;

        $r6 = virtualinvoke r0.<androidx.ui.core.LayerWrapper: androidx.ui.core.Modifier$Element getModifier()>();

        $r7 = (androidx.ui.core.DrawLayerModifier) $r6;

        $r8 = interfaceinvoke $r7.<androidx.ui.core.DrawLayerModifier: androidx.ui.graphics.Shape getOutlineShape()>();

        if $r8 == null goto label2;

     label1:
        r9 = virtualinvoke r0.<androidx.ui.core.LayerWrapper: androidx.ui.unit.IntPxSize getSize()>();

        f1 = 0.0F;

        f2 = 0.0F;

        r10 = r1;

        l5 = virtualinvoke r9.<androidx.ui.unit.IntPxSize: long getValue()>();

        $l1 = l5 >> 32;

        $i3 = (int) $l1;

        i6 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i3);

        r11 = virtualinvoke r0.<androidx.ui.core.LayerWrapper: androidx.ui.unit.IntPxSize getSize()>();

        f3 = (float) i6;

        f4 = f1;

        f5 = f2;

        r12 = r10;

        l7 = virtualinvoke r11.<androidx.ui.unit.IntPxSize: long getValue()>();

        $l2 = l7 & 4294967295L;

        $i4 = (int) $l2;

        i0 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i4);

        $f0 = (float) i0;

        $z1 = virtualinvoke r12.<android.graphics.RectF: boolean intersect(float,float,float,float)>(f5, f4, f3, $f0);

        if $z1 != 0 goto label2;

        virtualinvoke r1.<android.graphics.RectF: void setEmpty()>();

     label2:
        $r13 = virtualinvoke r0.<androidx.ui.core.LayerWrapper: androidx.ui.core.OwnedLayer getLayer()>();

        r14 = interfaceinvoke $r13.<androidx.ui.core.OwnedLayer: android.graphics.Matrix getMatrix()>();

        virtualinvoke r14.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>(r1);

        specialinvoke r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: void rectInParent(android.graphics.RectF)>(r1);

        return;
    }

androidx.ui.core.LayerWrapper$invalidateParentLayer$1
<androidx.ui.core.LayerWrapper$invalidateParentLayer$1: androidx.ui.core.LayerWrapper $this>
    void <init>(androidx.ui.core.LayerWrapper)
    {
        androidx.ui.core.LayerWrapper$invalidateParentLayer$1 r0;
        androidx.ui.core.LayerWrapper $r1;

        r0 := @this: androidx.ui.core.LayerWrapper$invalidateParentLayer$1;

        $r1 := @parameter0: androidx.ui.core.LayerWrapper;

        r0.<androidx.ui.core.LayerWrapper$invalidateParentLayer$1: androidx.ui.core.LayerWrapper $this> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.ui.core.LayerWrapper$invalidateParentLayer$1 r0;
        androidx.ui.core.OwnedLayer r1, $r4;
        androidx.ui.core.LayoutNodeWrapper r2;
        androidx.ui.core.LayerWrapper $r3;

        r0 := @this: androidx.ui.core.LayerWrapper$invalidateParentLayer$1;

        $r3 = r0.<androidx.ui.core.LayerWrapper$invalidateParentLayer$1: androidx.ui.core.LayerWrapper $this>;

        r2 = virtualinvoke $r3.<androidx.ui.core.LayerWrapper: androidx.ui.core.LayoutNodeWrapper getWrappedBy$ui_platform_release()>();

        if r2 != null goto label1;

        $r4 = (androidx.ui.core.OwnedLayer) null;

        goto label2;

     label1:
        $r4 = virtualinvoke r2.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.core.OwnedLayer findLayer()>();

     label2:
        r1 = $r4;

        if r1 != null goto label3;

        goto label4;

     label3:
        interfaceinvoke r1.<androidx.ui.core.OwnedLayer: void invalidate()>();

     label4:
        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.ui.core.LayerWrapper$invalidateParentLayer$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.ui.core.LayerWrapper$invalidateParentLayer$1;

        virtualinvoke r0.<androidx.ui.core.LayerWrapper$invalidateParentLayer$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.ui.core.LayerWrapper$layer$1
    void <init>(androidx.ui.core.LayoutNodeWrapper)
    {
        androidx.ui.core.LayerWrapper$layer$1 r0;
        androidx.ui.core.LayoutNodeWrapper r1;

        r0 := @this: androidx.ui.core.LayerWrapper$layer$1;

        r1 := @parameter0: androidx.ui.core.LayoutNodeWrapper;

        specialinvoke r0.<kotlin.jvm.internal.FunctionReference: void <init>(int,java.lang.Object)>(1, r1);

        return;
    }

    public final void invoke(androidx.ui.graphics.Canvas)
    {
        androidx.ui.core.LayerWrapper$layer$1 r0;
        androidx.ui.graphics.Canvas r1;
        java.lang.Object $r2;
        androidx.ui.core.LayoutNodeWrapper $r3;

        r0 := @this: androidx.ui.core.LayerWrapper$layer$1;

        r1 := @parameter0: androidx.ui.graphics.Canvas;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "p0");

        $r2 = r0.<androidx.ui.core.LayerWrapper$layer$1: java.lang.Object receiver>;

        $r3 = (androidx.ui.core.LayoutNodeWrapper) $r2;

        virtualinvoke $r3.<androidx.ui.core.LayoutNodeWrapper: void draw(androidx.ui.graphics.Canvas)>(r1);

        return;
    }

    public final java.lang.String getSignature()
    {
        androidx.ui.core.LayerWrapper$layer$1 r0;

        r0 := @this: androidx.ui.core.LayerWrapper$layer$1;

        return "draw(Landroidx/ui/graphics/Canvas;)V";
    }

    public final java.lang.String getName()
    {
        androidx.ui.core.LayerWrapper$layer$1 r0;

        r0 := @this: androidx.ui.core.LayerWrapper$layer$1;

        return "draw";
    }

    public final kotlin.reflect.KDeclarationContainer getOwner()
    {
        androidx.ui.core.LayerWrapper$layer$1 r0;
        kotlin.reflect.KClass $r1;
        kotlin.reflect.KDeclarationContainer $r2;

        r0 := @this: androidx.ui.core.LayerWrapper$layer$1;

        $r1 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroidx/ui/core/LayoutNodeWrapper;");

        $r2 = (kotlin.reflect.KDeclarationContainer) $r1;

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.ui.core.LayerWrapper$layer$1 r0;
        java.lang.Object r1;
        androidx.ui.graphics.Canvas $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.ui.core.LayerWrapper$layer$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.ui.graphics.Canvas) r1;

        virtualinvoke r0.<androidx.ui.core.LayerWrapper$layer$1: void invoke(androidx.ui.graphics.Canvas)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

