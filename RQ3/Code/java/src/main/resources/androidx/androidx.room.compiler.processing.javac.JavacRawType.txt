androidx.room.compiler.processing.javac.JavacRawType
<androidx.room.compiler.processing.javac.JavacRawType: javax.lang.model.type.TypeMirror erased>
<androidx.room.compiler.processing.javac.JavacRawType: javax.lang.model.util.Types typeUtils>
<androidx.room.compiler.processing.javac.JavacRawType: kotlin.Lazy typeName$delegate>
<androidx.room.compiler.processing.javac.JavacRawType: kotlin.Lazy xTypeName$delegate>
    public void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv, androidx.room.compiler.processing.javac.JavacType)
    {
        androidx.room.compiler.processing.javac.JavacRawType r0;
        androidx.room.compiler.processing.javac.JavacProcessingEnv r1;
        androidx.room.compiler.processing.javac.JavacType r2;
        javax.lang.model.util.Types $r3, $r7;
        javax.lang.model.type.TypeMirror $r4, $r5;
        javax.'annotation'.processing.ProcessingEnvironment $r6;
        androidx.room.compiler.processing.javac.JavacRawType$typeName$2 $r8;
        kotlin.jvm.functions.Function0 $r9, $r12;
        kotlin.Lazy $r10, $r13;
        androidx.room.compiler.processing.javac.JavacRawType$xTypeName$2 $r11;

        r0 := @this: androidx.room.compiler.processing.javac.JavacRawType;

        r1 := @parameter0: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        r2 := @parameter1: androidx.room.compiler.processing.javac.JavacType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "original");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = virtualinvoke r1.<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.lang.model.util.Types getTypeUtils()>();

        $r4 = virtualinvoke r2.<androidx.room.compiler.processing.javac.JavacType: javax.lang.model.type.TypeMirror getTypeMirror()>();

        $r5 = interfaceinvoke $r3.<javax.lang.model.util.Types: javax.lang.model.type.TypeMirror erasure(javax.lang.model.type.TypeMirror)>($r4);

        r0.<androidx.room.compiler.processing.javac.JavacRawType: javax.lang.model.type.TypeMirror erased> = $r5;

        $r6 = virtualinvoke r1.<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.'annotation'.processing.ProcessingEnvironment getDelegate()>();

        $r7 = interfaceinvoke $r6.<javax.'annotation'.processing.ProcessingEnvironment: javax.lang.model.util.Types getTypeUtils()>();

        r0.<androidx.room.compiler.processing.javac.JavacRawType: javax.lang.model.util.Types typeUtils> = $r7;

        $r8 = new androidx.room.compiler.processing.javac.JavacRawType$typeName$2;

        specialinvoke $r8.<androidx.room.compiler.processing.javac.JavacRawType$typeName$2: void <init>(androidx.room.compiler.processing.javac.JavacRawType)>(r0);

        $r9 = (kotlin.jvm.functions.Function0) $r8;

        $r10 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r9);

        r0.<androidx.room.compiler.processing.javac.JavacRawType: kotlin.Lazy typeName$delegate> = $r10;

        $r11 = new androidx.room.compiler.processing.javac.JavacRawType$xTypeName$2;

        specialinvoke $r11.<androidx.room.compiler.processing.javac.JavacRawType$xTypeName$2: void <init>(androidx.room.compiler.processing.javac.JavacRawType,androidx.room.compiler.processing.javac.JavacType)>(r0, r2);

        $r12 = (kotlin.jvm.functions.Function0) $r11;

        $r13 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r12);

        r0.<androidx.room.compiler.processing.javac.JavacRawType: kotlin.Lazy xTypeName$delegate> = $r13;

        return;
    }

    public com.squareup.javapoet.TypeName getTypeName()
    {
        androidx.room.compiler.processing.javac.JavacRawType r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        com.squareup.javapoet.TypeName $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacRawType;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacRawType: kotlin.Lazy typeName$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (com.squareup.javapoet.TypeName) $r2;

        return $r3;
    }

    private final androidx.room.compiler.codegen.XTypeName getXTypeName()
    {
        androidx.room.compiler.processing.javac.JavacRawType r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.codegen.XTypeName $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacRawType;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacRawType: kotlin.Lazy xTypeName$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.codegen.XTypeName) $r2;

        return $r3;
    }

    public androidx.room.compiler.codegen.XTypeName asTypeName()
    {
        androidx.room.compiler.processing.javac.JavacRawType r0;
        androidx.room.compiler.codegen.XTypeName $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacRawType;

        $r1 = specialinvoke r0.<androidx.room.compiler.processing.javac.JavacRawType: androidx.room.compiler.codegen.XTypeName getXTypeName()>();

        return $r1;
    }

    public boolean isAssignableFrom(androidx.room.compiler.processing.XRawType)
    {
        androidx.room.compiler.processing.javac.JavacRawType r0, $r2;
        androidx.room.compiler.processing.XRawType r1;
        boolean $z0, $z1, $z2;
        javax.lang.model.type.TypeMirror $r3, $r4;
        javax.lang.model.util.Types $r5;

        r0 := @this: androidx.room.compiler.processing.javac.JavacRawType;

        r1 := @parameter0: androidx.room.compiler.processing.XRawType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "other");

        $z0 = r1 instanceof androidx.room.compiler.processing.javac.JavacRawType;

        if $z0 == 0 goto label1;

        $r5 = r0.<androidx.room.compiler.processing.javac.JavacRawType: javax.lang.model.util.Types typeUtils>;

        $r2 = (androidx.room.compiler.processing.javac.JavacRawType) r1;

        $r4 = $r2.<androidx.room.compiler.processing.javac.JavacRawType: javax.lang.model.type.TypeMirror erased>;

        $r3 = r0.<androidx.room.compiler.processing.javac.JavacRawType: javax.lang.model.type.TypeMirror erased>;

        $z1 = interfaceinvoke $r5.<javax.lang.model.util.Types: boolean isAssignable(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror)>($r4, $r3);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.room.compiler.processing.javac.JavacRawType r0;
        java.lang.Object r1;
        androidx.room.compiler.codegen.XTypeName $r2, $r4;
        boolean $z0, $z1, $z2;
        androidx.room.compiler.processing.XRawType $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacRawType;

        r1 := @parameter0: java.lang.Object;

        if r0 == r1 goto label5;

        $r2 = specialinvoke r0.<androidx.room.compiler.processing.javac.JavacRawType: androidx.room.compiler.codegen.XTypeName getXTypeName()>();

        $z0 = r1 instanceof androidx.room.compiler.processing.XRawType;

        if $z0 == 0 goto label1;

        $r3 = (androidx.room.compiler.processing.XRawType) r1;

        goto label2;

     label1:
        $r3 = null;

     label2:
        if $r3 == null goto label3;

        $r4 = interfaceinvoke $r3.<androidx.room.compiler.processing.XRawType: androidx.room.compiler.codegen.XTypeName asTypeName()>();

        goto label4;

     label3:
        $r4 = null;

     label4:
        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r4);

        if $z1 == 0 goto label6;

     label5:
        $z2 = 1;

        goto label7;

     label6:
        $z2 = 0;

     label7:
        return $z2;
    }

    public int hashCode()
    {
        androidx.room.compiler.processing.javac.JavacRawType r0;
        androidx.room.compiler.codegen.XTypeName $r1;
        int $i0;

        r0 := @this: androidx.room.compiler.processing.javac.JavacRawType;

        $r1 = specialinvoke r0.<androidx.room.compiler.processing.javac.JavacRawType: androidx.room.compiler.codegen.XTypeName getXTypeName()>();

        $i0 = virtualinvoke $r1.<androidx.room.compiler.codegen.XTypeName: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        androidx.room.compiler.processing.javac.JavacRawType r0;
        androidx.room.compiler.codegen.XTypeName $r1;
        com.squareup.javapoet.TypeName $r2;
        java.lang.String $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacRawType;

        $r1 = specialinvoke r0.<androidx.room.compiler.processing.javac.JavacRawType: androidx.room.compiler.codegen.XTypeName getXTypeName()>();

        $r2 = virtualinvoke $r1.<androidx.room.compiler.codegen.XTypeName: com.squareup.javapoet.TypeName getJava$room_compiler_processing()>();

        $r3 = virtualinvoke $r2.<com.squareup.javapoet.TypeName: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "xTypeName.java.toString()");

        return $r3;
    }

    public static final androidx.room.compiler.codegen.XTypeName access$getXTypeName(androidx.room.compiler.processing.javac.JavacRawType)
    {
        androidx.room.compiler.processing.javac.JavacRawType $r0;
        androidx.room.compiler.codegen.XTypeName $r1;

        $r0 := @parameter0: androidx.room.compiler.processing.javac.JavacRawType;

        $r1 = specialinvoke $r0.<androidx.room.compiler.processing.javac.JavacRawType: androidx.room.compiler.codegen.XTypeName getXTypeName()>();

        return $r1;
    }

    public static final javax.lang.model.type.TypeMirror access$getErased$p(androidx.room.compiler.processing.javac.JavacRawType)
    {
        androidx.room.compiler.processing.javac.JavacRawType $r0;
        javax.lang.model.type.TypeMirror $r1;

        $r0 := @parameter0: androidx.room.compiler.processing.javac.JavacRawType;

        $r1 = $r0.<androidx.room.compiler.processing.javac.JavacRawType: javax.lang.model.type.TypeMirror erased>;

        return $r1;
    }

androidx.room.compiler.processing.javac.JavacRawType$typeName$2
<androidx.room.compiler.processing.javac.JavacRawType$typeName$2: androidx.room.compiler.processing.javac.JavacRawType this$0>
    void <init>(androidx.room.compiler.processing.javac.JavacRawType)
    {
        androidx.room.compiler.processing.javac.JavacRawType$typeName$2 r0;
        androidx.room.compiler.processing.javac.JavacRawType $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacRawType$typeName$2;

        $r1 := @parameter0: androidx.room.compiler.processing.javac.JavacRawType;

        r0.<androidx.room.compiler.processing.javac.JavacRawType$typeName$2: androidx.room.compiler.processing.javac.JavacRawType this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final com.squareup.javapoet.TypeName invoke()
    {
        androidx.room.compiler.processing.javac.JavacRawType$typeName$2 r0;
        androidx.room.compiler.processing.javac.JavacRawType $r1;
        androidx.room.compiler.codegen.XTypeName $r2;
        com.squareup.javapoet.TypeName $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacRawType$typeName$2;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacRawType$typeName$2: androidx.room.compiler.processing.javac.JavacRawType this$0>;

        $r2 = staticinvoke <androidx.room.compiler.processing.javac.JavacRawType: androidx.room.compiler.codegen.XTypeName access$getXTypeName(androidx.room.compiler.processing.javac.JavacRawType)>($r1);

        $r3 = virtualinvoke $r2.<androidx.room.compiler.codegen.XTypeName: com.squareup.javapoet.TypeName getJava$room_compiler_processing()>();

        return $r3;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.room.compiler.processing.javac.JavacRawType$typeName$2 r0;
        com.squareup.javapoet.TypeName $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacRawType$typeName$2;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacRawType$typeName$2: com.squareup.javapoet.TypeName invoke()>();

        return $r1;
    }

androidx.room.compiler.processing.javac.JavacRawType$xTypeName$2
<androidx.room.compiler.processing.javac.JavacRawType$xTypeName$2: androidx.room.compiler.processing.javac.JavacRawType this$0>
<androidx.room.compiler.processing.javac.JavacRawType$xTypeName$2: androidx.room.compiler.processing.javac.JavacType $original>
    void <init>(androidx.room.compiler.processing.javac.JavacRawType, androidx.room.compiler.processing.javac.JavacType)
    {
        androidx.room.compiler.processing.javac.JavacRawType$xTypeName$2 r0;
        androidx.room.compiler.processing.javac.JavacRawType $r1;
        androidx.room.compiler.processing.javac.JavacType $r2;

        r0 := @this: androidx.room.compiler.processing.javac.JavacRawType$xTypeName$2;

        $r1 := @parameter0: androidx.room.compiler.processing.javac.JavacRawType;

        $r2 := @parameter1: androidx.room.compiler.processing.javac.JavacType;

        r0.<androidx.room.compiler.processing.javac.JavacRawType$xTypeName$2: androidx.room.compiler.processing.javac.JavacRawType this$0> = $r1;

        r0.<androidx.room.compiler.processing.javac.JavacRawType$xTypeName$2: androidx.room.compiler.processing.javac.JavacType $original> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final androidx.room.compiler.codegen.XTypeName invoke()
    {
        androidx.room.compiler.processing.javac.JavacRawType$xTypeName$2 r0;
        androidx.room.compiler.processing.javac.JavacRawType $r1;
        androidx.room.compiler.codegen.XTypeName$Companion $r2, $r5;
        javax.lang.model.type.TypeMirror $r3;
        com.squareup.javapoet.TypeName $r4;
        com.squareup.kotlinpoet.ClassName $r6;
        androidx.room.compiler.processing.javac.JavacType $r7;
        com.squareup.kotlinpoet.TypeName $r8;
        androidx.room.compiler.codegen.XTypeName $r9;
        androidx.room.compiler.processing.XNullability $r10;

        r0 := @this: androidx.room.compiler.processing.javac.JavacRawType$xTypeName$2;

        $r2 = <androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName$Companion Companion>;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacRawType$xTypeName$2: androidx.room.compiler.processing.javac.JavacRawType this$0>;

        $r3 = staticinvoke <androidx.room.compiler.processing.javac.JavacRawType: javax.lang.model.type.TypeMirror access$getErased$p(androidx.room.compiler.processing.javac.JavacRawType)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "erased");

        $r4 = staticinvoke <androidx.room.compiler.processing.JavaPoetExtKt: com.squareup.javapoet.TypeName safeTypeName(javax.lang.model.type.TypeMirror)>($r3);

        $r5 = <androidx.room.compiler.codegen.XTypeName: androidx.room.compiler.codegen.XTypeName$Companion Companion>;

        $r6 = virtualinvoke $r5.<androidx.room.compiler.codegen.XTypeName$Companion: com.squareup.kotlinpoet.ClassName getUNAVAILABLE_KTYPE_NAME$room_compiler_processing()>();

        $r8 = (com.squareup.kotlinpoet.TypeName) $r6;

        $r7 = r0.<androidx.room.compiler.processing.javac.JavacRawType$xTypeName$2: androidx.room.compiler.processing.javac.JavacType $original>;

        $r10 = virtualinvoke $r7.<androidx.room.compiler.processing.javac.JavacType: androidx.room.compiler.processing.XNullability getMaybeNullability$room_compiler_processing()>();

        if $r10 != null goto label1;

        $r10 = <androidx.room.compiler.processing.XNullability: androidx.room.compiler.processing.XNullability UNKNOWN>;

     label1:
        $r9 = virtualinvoke $r2.<androidx.room.compiler.codegen.XTypeName$Companion: androidx.room.compiler.codegen.XTypeName invoke(com.squareup.javapoet.TypeName,com.squareup.kotlinpoet.TypeName,androidx.room.compiler.processing.XNullability)>($r4, $r8, $r10);

        return $r9;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.room.compiler.processing.javac.JavacRawType$xTypeName$2 r0;
        androidx.room.compiler.codegen.XTypeName $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacRawType$xTypeName$2;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacRawType$xTypeName$2: androidx.room.compiler.codegen.XTypeName invoke()>();

        return $r1;
    }

