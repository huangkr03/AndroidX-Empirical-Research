androidx.test.internal.runner.junit3.DelegatingFilterableTestSuite
    private static org.junit.runner.Description makeDescription(junit.framework.Test)
    {
        junit.framework.Test r0;
        org.junit.runner.Description $r1;

        r0 := @parameter0: junit.framework.Test;

        $r1 = staticinvoke <androidx.test.internal.runner.junit3.JUnit38ClassRunner: org.junit.runner.Description makeDescription(junit.framework.Test)>(r0);

        return $r1;
    }

    public void <init>(junit.framework.TestSuite)
    {
        androidx.test.internal.runner.junit3.DelegatingFilterableTestSuite r0;
        junit.framework.TestSuite r1;

        r0 := @this: androidx.test.internal.runner.junit3.DelegatingFilterableTestSuite;

        r1 := @parameter0: junit.framework.TestSuite;

        specialinvoke r0.<androidx.test.internal.runner.junit3.DelegatingTestSuite: void <init>(junit.framework.TestSuite)>(r1);

        return;
    }

    public void filter(org.junit.runner.manipulation.Filter) throws org.junit.runner.manipulation.NoTestsRemainException
    {
        androidx.test.internal.runner.junit3.DelegatingFilterableTestSuite r0;
        org.junit.runner.manipulation.Filter r1;
        junit.framework.TestSuite r2, r3, $r5;
        int i0, $i1, i2;
        junit.framework.Test r4;
        java.lang.String $r6;
        org.junit.runner.manipulation.NoTestsRemainException $r7;
        org.junit.runner.Description $r8;
        boolean $z0;

        r0 := @this: androidx.test.internal.runner.junit3.DelegatingFilterableTestSuite;

        r1 := @parameter0: org.junit.runner.manipulation.Filter;

        r2 = virtualinvoke r0.<androidx.test.internal.runner.junit3.DelegatingFilterableTestSuite: junit.framework.TestSuite getDelegateSuite()>();

        $r5 = new junit.framework.TestSuite;

        $r6 = virtualinvoke r2.<junit.framework.TestSuite: java.lang.String getName()>();

        specialinvoke $r5.<junit.framework.TestSuite: void <init>(java.lang.String)>($r6);

        r3 = $r5;

        i0 = virtualinvoke r2.<junit.framework.TestSuite: int testCount()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        r4 = virtualinvoke r2.<junit.framework.TestSuite: junit.framework.Test testAt(int)>(i2);

        $r8 = staticinvoke <androidx.test.internal.runner.junit3.DelegatingFilterableTestSuite: org.junit.runner.Description makeDescription(junit.framework.Test)>(r4);

        $z0 = virtualinvoke r1.<org.junit.runner.manipulation.Filter: boolean shouldRun(org.junit.runner.Description)>($r8);

        if $z0 == 0 goto label2;

        virtualinvoke r3.<junit.framework.TestSuite: void addTest(junit.framework.Test)>(r4);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        virtualinvoke r0.<androidx.test.internal.runner.junit3.DelegatingFilterableTestSuite: void setDelegateSuite(junit.framework.TestSuite)>(r3);

        $i1 = virtualinvoke r3.<junit.framework.TestSuite: int testCount()>();

        if $i1 != 0 goto label4;

        $r7 = new org.junit.runner.manipulation.NoTestsRemainException;

        specialinvoke $r7.<org.junit.runner.manipulation.NoTestsRemainException: void <init>()>();

        throw $r7;

     label4:
        return;
    }

