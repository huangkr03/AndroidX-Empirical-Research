androidx.media3.transformer.ExoPlayerAssetLoader
<androidx.media3.transformer.ExoPlayerAssetLoader: android.content.Context context>
<androidx.media3.transformer.ExoPlayerAssetLoader: androidx.media3.transformer.TransformationRequest transformationRequest>
<androidx.media3.transformer.ExoPlayerAssetLoader: com.google.common.collect.ImmutableList videoEffects>
<androidx.media3.transformer.ExoPlayerAssetLoader: boolean removeAudio>
<androidx.media3.transformer.ExoPlayerAssetLoader: boolean removeVideo>
<androidx.media3.transformer.ExoPlayerAssetLoader: androidx.media3.exoplayer.source.MediaSource$Factory mediaSourceFactory>
<androidx.media3.transformer.ExoPlayerAssetLoader: androidx.media3.transformer.Codec$DecoderFactory decoderFactory>
<androidx.media3.transformer.ExoPlayerAssetLoader: androidx.media3.transformer.Codec$EncoderFactory encoderFactory>
<androidx.media3.transformer.ExoPlayerAssetLoader: androidx.media3.common.FrameProcessor$Factory frameProcessorFactory>
<androidx.media3.transformer.ExoPlayerAssetLoader: android.os.Looper looper>
<androidx.media3.transformer.ExoPlayerAssetLoader: androidx.media3.common.DebugViewProvider debugViewProvider>
<androidx.media3.transformer.ExoPlayerAssetLoader: androidx.media3.common.util.Clock clock>
<androidx.media3.transformer.ExoPlayerAssetLoader: androidx.media3.transformer.MuxerWrapper muxerWrapper>
<androidx.media3.transformer.ExoPlayerAssetLoader: androidx.media3.exoplayer.ExoPlayer player>
<androidx.media3.transformer.ExoPlayerAssetLoader: int progressState>
    public void <init>(android.content.Context, androidx.media3.transformer.TransformationRequest, com.google.common.collect.ImmutableList, boolean, boolean, androidx.media3.exoplayer.source.MediaSource$Factory, androidx.media3.transformer.Codec$DecoderFactory, androidx.media3.transformer.Codec$EncoderFactory, androidx.media3.common.FrameProcessor$Factory, android.os.Looper, androidx.media3.common.DebugViewProvider, androidx.media3.common.util.Clock)
    {
        androidx.media3.transformer.ExoPlayerAssetLoader r0;
        android.content.Context r1;
        androidx.media3.transformer.TransformationRequest r2;
        com.google.common.collect.ImmutableList r3;
        boolean z0, z1;
        androidx.media3.exoplayer.source.MediaSource$Factory r4;
        androidx.media3.transformer.Codec$DecoderFactory r5;
        androidx.media3.transformer.Codec$EncoderFactory r6;
        androidx.media3.common.FrameProcessor$Factory r7;
        android.os.Looper r8;
        androidx.media3.common.DebugViewProvider r9;
        androidx.media3.common.util.Clock r10;

        r0 := @this: androidx.media3.transformer.ExoPlayerAssetLoader;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media3.transformer.TransformationRequest;

        r3 := @parameter2: com.google.common.collect.ImmutableList;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        r4 := @parameter5: androidx.media3.exoplayer.source.MediaSource$Factory;

        r5 := @parameter6: androidx.media3.transformer.Codec$DecoderFactory;

        r6 := @parameter7: androidx.media3.transformer.Codec$EncoderFactory;

        r7 := @parameter8: androidx.media3.common.FrameProcessor$Factory;

        r8 := @parameter9: android.os.Looper;

        r9 := @parameter10: androidx.media3.common.DebugViewProvider;

        r10 := @parameter11: androidx.media3.common.util.Clock;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.transformer.ExoPlayerAssetLoader: android.content.Context context> = r1;

        r0.<androidx.media3.transformer.ExoPlayerAssetLoader: androidx.media3.transformer.TransformationRequest transformationRequest> = r2;

        r0.<androidx.media3.transformer.ExoPlayerAssetLoader: com.google.common.collect.ImmutableList videoEffects> = r3;

        r0.<androidx.media3.transformer.ExoPlayerAssetLoader: boolean removeAudio> = z0;

        r0.<androidx.media3.transformer.ExoPlayerAssetLoader: boolean removeVideo> = z1;

        r0.<androidx.media3.transformer.ExoPlayerAssetLoader: androidx.media3.exoplayer.source.MediaSource$Factory mediaSourceFactory> = r4;

        r0.<androidx.media3.transformer.ExoPlayerAssetLoader: androidx.media3.transformer.Codec$DecoderFactory decoderFactory> = r5;

        r0.<androidx.media3.transformer.ExoPlayerAssetLoader: androidx.media3.transformer.Codec$EncoderFactory encoderFactory> = r6;

        r0.<androidx.media3.transformer.ExoPlayerAssetLoader: androidx.media3.common.FrameProcessor$Factory frameProcessorFactory> = r7;

        r0.<androidx.media3.transformer.ExoPlayerAssetLoader: android.os.Looper looper> = r8;

        r0.<androidx.media3.transformer.ExoPlayerAssetLoader: androidx.media3.common.DebugViewProvider debugViewProvider> = r9;

        r0.<androidx.media3.transformer.ExoPlayerAssetLoader: androidx.media3.common.util.Clock clock> = r10;

        r0.<androidx.media3.transformer.ExoPlayerAssetLoader: int progressState> = 4;

        return;
    }

    public void start(androidx.media3.common.MediaItem, androidx.media3.transformer.MuxerWrapper, androidx.media3.transformer.ExoPlayerAssetLoader$Listener, androidx.media3.transformer.FallbackListener, androidx.media3.transformer.Transformer$AsyncErrorListener)
    {
        androidx.media3.transformer.ExoPlayerAssetLoader r0;
        androidx.media3.common.MediaItem r1;
        androidx.media3.transformer.MuxerWrapper r2;
        androidx.media3.transformer.ExoPlayerAssetLoader$Listener r3;
        androidx.media3.transformer.FallbackListener r4;
        androidx.media3.transformer.Transformer$AsyncErrorListener r5;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector r6, $r10;
        androidx.media3.exoplayer.DefaultLoadControl r7;
        androidx.media3.exoplayer.ExoPlayer$Builder r8, $r18, $r30, $r31, $r32;
        android.content.Context $r11, $r13, $r27, $r28;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder $r12, $r14;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters $r15;
        androidx.media3.exoplayer.DefaultLoadControl$Builder $r16, $r17;
        androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl $r19;
        androidx.media3.common.MediaItem$ClippingConfiguration $r20;
        androidx.media3.common.DebugViewProvider $r21;
        androidx.media3.transformer.Codec$DecoderFactory $r22;
        androidx.media3.transformer.Codec$EncoderFactory $r23;
        androidx.media3.common.FrameProcessor$Factory $r24;
        com.google.common.collect.ImmutableList $r25;
        boolean $z0, $z1, $z2;
        androidx.media3.transformer.TransformationRequest $r26;
        androidx.media3.exoplayer.source.MediaSource$Factory $r29;
        android.os.Looper $r33;
        androidx.media3.common.util.Clock $r34, $r35, $r41;
        androidx.media3.exoplayer.ExoPlayer $r36, $r37, $r39, $r40;
        androidx.media3.transformer.ExoPlayerAssetLoader$PlayerListener $r38;

        r0 := @this: androidx.media3.transformer.ExoPlayerAssetLoader;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        r2 := @parameter1: androidx.media3.transformer.MuxerWrapper;

        r3 := @parameter2: androidx.media3.transformer.ExoPlayerAssetLoader$Listener;

        r4 := @parameter3: androidx.media3.transformer.FallbackListener;

        r5 := @parameter4: androidx.media3.transformer.Transformer$AsyncErrorListener;

        r0.<androidx.media3.transformer.ExoPlayerAssetLoader: androidx.media3.transformer.MuxerWrapper muxerWrapper> = r2;

        $r10 = new androidx.media3.exoplayer.trackselection.DefaultTrackSelector;

        $r11 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader: android.content.Context context>;

        specialinvoke $r10.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: void <init>(android.content.Context)>($r11);

        r6 = $r10;

        $r12 = new androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder;

        $r13 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader: android.content.Context context>;

        specialinvoke $r12.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: void <init>(android.content.Context)>($r13);

        $r14 = virtualinvoke $r12.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setForceHighestSupportedBitrate(boolean)>(1);

        $r15 = virtualinvoke $r14.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters build()>();

        virtualinvoke r6.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: void setParameters(androidx.media3.common.TrackSelectionParameters)>($r15);

        $r16 = new androidx.media3.exoplayer.DefaultLoadControl$Builder;

        specialinvoke $r16.<androidx.media3.exoplayer.DefaultLoadControl$Builder: void <init>()>();

        $r17 = virtualinvoke $r16.<androidx.media3.exoplayer.DefaultLoadControl$Builder: androidx.media3.exoplayer.DefaultLoadControl$Builder setBufferDurationsMs(int,int,int,int)>(50000, 50000, 250, 500);

        r7 = virtualinvoke $r17.<androidx.media3.exoplayer.DefaultLoadControl$Builder: androidx.media3.exoplayer.DefaultLoadControl build()>();

        $r18 = new androidx.media3.exoplayer.ExoPlayer$Builder;

        $r28 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader: android.content.Context context>;

        $r19 = new androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl;

        $r27 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader: android.content.Context context>;

        $z2 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader: boolean removeAudio>;

        $z1 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader: boolean removeVideo>;

        $r26 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader: androidx.media3.transformer.TransformationRequest transformationRequest>;

        $r20 = r1.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$ClippingConfiguration clippingConfiguration>;

        $z0 = $r20.<androidx.media3.common.MediaItem$ClippingConfiguration: boolean startsAtKeyFrame>;

        $r25 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader: com.google.common.collect.ImmutableList videoEffects>;

        $r24 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader: androidx.media3.common.FrameProcessor$Factory frameProcessorFactory>;

        $r23 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader: androidx.media3.transformer.Codec$EncoderFactory encoderFactory>;

        $r22 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader: androidx.media3.transformer.Codec$DecoderFactory decoderFactory>;

        $r21 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader: androidx.media3.common.DebugViewProvider debugViewProvider>;

        specialinvoke $r19.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: void <init>(android.content.Context,androidx.media3.transformer.MuxerWrapper,boolean,boolean,androidx.media3.transformer.TransformationRequest,boolean,com.google.common.collect.ImmutableList,androidx.media3.common.FrameProcessor$Factory,androidx.media3.transformer.Codec$EncoderFactory,androidx.media3.transformer.Codec$DecoderFactory,androidx.media3.transformer.FallbackListener,androidx.media3.transformer.Transformer$AsyncErrorListener,androidx.media3.common.DebugViewProvider)>($r27, r2, $z2, $z1, $r26, $z0, $r25, $r24, $r23, $r22, r4, r5, $r21);

        specialinvoke $r18.<androidx.media3.exoplayer.ExoPlayer$Builder: void <init>(android.content.Context,androidx.media3.exoplayer.RenderersFactory)>($r28, $r19);

        $r29 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader: androidx.media3.exoplayer.source.MediaSource$Factory mediaSourceFactory>;

        $r30 = virtualinvoke $r18.<androidx.media3.exoplayer.ExoPlayer$Builder: androidx.media3.exoplayer.ExoPlayer$Builder setMediaSourceFactory(androidx.media3.exoplayer.source.MediaSource$Factory)>($r29);

        $r31 = virtualinvoke $r30.<androidx.media3.exoplayer.ExoPlayer$Builder: androidx.media3.exoplayer.ExoPlayer$Builder setTrackSelector(androidx.media3.exoplayer.trackselection.TrackSelector)>(r6);

        $r32 = virtualinvoke $r31.<androidx.media3.exoplayer.ExoPlayer$Builder: androidx.media3.exoplayer.ExoPlayer$Builder setLoadControl(androidx.media3.exoplayer.LoadControl)>(r7);

        $r33 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader: android.os.Looper looper>;

        r8 = virtualinvoke $r32.<androidx.media3.exoplayer.ExoPlayer$Builder: androidx.media3.exoplayer.ExoPlayer$Builder setLooper(android.os.Looper)>($r33);

        $r35 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader: androidx.media3.common.util.Clock clock>;

        $r34 = <androidx.media3.common.util.Clock: androidx.media3.common.util.Clock DEFAULT>;

        if $r35 == $r34 goto label1;

        $r41 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader: androidx.media3.common.util.Clock clock>;

        virtualinvoke r8.<androidx.media3.exoplayer.ExoPlayer$Builder: androidx.media3.exoplayer.ExoPlayer$Builder setClock(androidx.media3.common.util.Clock)>($r41);

     label1:
        $r36 = virtualinvoke r8.<androidx.media3.exoplayer.ExoPlayer$Builder: androidx.media3.exoplayer.ExoPlayer build()>();

        r0.<androidx.media3.transformer.ExoPlayerAssetLoader: androidx.media3.exoplayer.ExoPlayer player> = $r36;

        $r37 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader: androidx.media3.exoplayer.ExoPlayer player>;

        interfaceinvoke $r37.<androidx.media3.exoplayer.ExoPlayer: void setMediaItem(androidx.media3.common.MediaItem)>(r1);

        $r39 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader: androidx.media3.exoplayer.ExoPlayer player>;

        $r38 = new androidx.media3.transformer.ExoPlayerAssetLoader$PlayerListener;

        specialinvoke $r38.<androidx.media3.transformer.ExoPlayerAssetLoader$PlayerListener: void <init>(androidx.media3.transformer.ExoPlayerAssetLoader,androidx.media3.transformer.ExoPlayerAssetLoader$Listener)>(r0, r3);

        interfaceinvoke $r39.<androidx.media3.exoplayer.ExoPlayer: void addListener(androidx.media3.common.Player$Listener)>($r38);

        $r40 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader: androidx.media3.exoplayer.ExoPlayer player>;

        interfaceinvoke $r40.<androidx.media3.exoplayer.ExoPlayer: void prepare()>();

        r0.<androidx.media3.transformer.ExoPlayerAssetLoader: int progressState> = 0;

        return;
    }

    public int getProgress(androidx.media3.transformer.ProgressHolder)
    {
        androidx.media3.transformer.ExoPlayerAssetLoader r0;
        androidx.media3.transformer.ProgressHolder r1;
        androidx.media3.common.Player r2;
        long l0, l1, $l4, $l5;
        int $i2, $i3, $i6, $i7;
        androidx.media3.exoplayer.ExoPlayer $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.media3.transformer.ExoPlayerAssetLoader;

        r1 := @parameter0: androidx.media3.transformer.ProgressHolder;

        $i2 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader: int progressState>;

        if $i2 != 1 goto label1;

        $r3 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader: androidx.media3.exoplayer.ExoPlayer player>;

        $r4 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        r2 = (androidx.media3.common.Player) $r4;

        l0 = interfaceinvoke r2.<androidx.media3.common.Player: long getDuration()>();

        l1 = interfaceinvoke r2.<androidx.media3.common.Player: long getCurrentPosition()>();

        $l4 = l1 * 100L;

        $l5 = $l4 / l0;

        $i6 = (int) $l5;

        $i7 = staticinvoke <java.lang.Math: int min(int,int)>($i6, 99);

        r1.<androidx.media3.transformer.ProgressHolder: int progress> = $i7;

     label1:
        $i3 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader: int progressState>;

        return $i3;
    }

    public void release()
    {
        androidx.media3.transformer.ExoPlayerAssetLoader r0;
        androidx.media3.exoplayer.ExoPlayer $r1, $r2;

        r0 := @this: androidx.media3.transformer.ExoPlayerAssetLoader;

        r0.<androidx.media3.transformer.ExoPlayerAssetLoader: int progressState> = 4;

        $r1 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader: androidx.media3.exoplayer.ExoPlayer player>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader: androidx.media3.exoplayer.ExoPlayer player>;

        interfaceinvoke $r2.<androidx.media3.exoplayer.ExoPlayer: void release()>();

        r0.<androidx.media3.transformer.ExoPlayerAssetLoader: androidx.media3.exoplayer.ExoPlayer player> = null;

     label1:
        return;
    }

    static int access$000(androidx.media3.transformer.ExoPlayerAssetLoader)
    {
        androidx.media3.transformer.ExoPlayerAssetLoader r0;
        int $i0;

        r0 := @parameter0: androidx.media3.transformer.ExoPlayerAssetLoader;

        $i0 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader: int progressState>;

        return $i0;
    }

    static int access$002(androidx.media3.transformer.ExoPlayerAssetLoader, int)
    {
        androidx.media3.transformer.ExoPlayerAssetLoader r0;
        int i0;

        r0 := @parameter0: androidx.media3.transformer.ExoPlayerAssetLoader;

        i0 := @parameter1: int;

        r0.<androidx.media3.transformer.ExoPlayerAssetLoader: int progressState> = i0;

        return i0;
    }

    static androidx.media3.exoplayer.ExoPlayer access$100(androidx.media3.transformer.ExoPlayerAssetLoader)
    {
        androidx.media3.transformer.ExoPlayerAssetLoader r0;
        androidx.media3.exoplayer.ExoPlayer $r1;

        r0 := @parameter0: androidx.media3.transformer.ExoPlayerAssetLoader;

        $r1 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader: androidx.media3.exoplayer.ExoPlayer player>;

        return $r1;
    }

    static androidx.media3.transformer.MuxerWrapper access$200(androidx.media3.transformer.ExoPlayerAssetLoader)
    {
        androidx.media3.transformer.ExoPlayerAssetLoader r0;
        androidx.media3.transformer.MuxerWrapper $r1;

        r0 := @parameter0: androidx.media3.transformer.ExoPlayerAssetLoader;

        $r1 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader: androidx.media3.transformer.MuxerWrapper muxerWrapper>;

        return $r1;
    }

androidx.media3.transformer.ExoPlayerAssetLoader$Listener
<androidx.media3.transformer.ExoPlayerAssetLoader$Listener: void onEnded()>
<androidx.media3.transformer.ExoPlayerAssetLoader$Listener: void onError(java.lang.Exception)>
androidx.media3.transformer.ExoPlayerAssetLoader$PlayerListener
<androidx.media3.transformer.ExoPlayerAssetLoader$PlayerListener: androidx.media3.transformer.ExoPlayerAssetLoader$Listener listener>
<androidx.media3.transformer.ExoPlayerAssetLoader$PlayerListener: androidx.media3.transformer.ExoPlayerAssetLoader this$0>
    public void <init>(androidx.media3.transformer.ExoPlayerAssetLoader, androidx.media3.transformer.ExoPlayerAssetLoader$Listener)
    {
        androidx.media3.transformer.ExoPlayerAssetLoader$PlayerListener r0;
        androidx.media3.transformer.ExoPlayerAssetLoader r1;
        androidx.media3.transformer.ExoPlayerAssetLoader$Listener r2;

        r0 := @this: androidx.media3.transformer.ExoPlayerAssetLoader$PlayerListener;

        r1 := @parameter0: androidx.media3.transformer.ExoPlayerAssetLoader;

        r2 := @parameter1: androidx.media3.transformer.ExoPlayerAssetLoader$Listener;

        r0.<androidx.media3.transformer.ExoPlayerAssetLoader$PlayerListener: androidx.media3.transformer.ExoPlayerAssetLoader this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.transformer.ExoPlayerAssetLoader$PlayerListener: androidx.media3.transformer.ExoPlayerAssetLoader$Listener listener> = r2;

        return;
    }

    public void onPlaybackStateChanged(int)
    {
        androidx.media3.transformer.ExoPlayerAssetLoader$PlayerListener r0;
        int i0;
        androidx.media3.transformer.ExoPlayerAssetLoader$Listener $r1;

        r0 := @this: androidx.media3.transformer.ExoPlayerAssetLoader$PlayerListener;

        i0 := @parameter0: int;

        if i0 != 4 goto label1;

        $r1 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader$PlayerListener: androidx.media3.transformer.ExoPlayerAssetLoader$Listener listener>;

        interfaceinvoke $r1.<androidx.media3.transformer.ExoPlayerAssetLoader$Listener: void onEnded()>();

     label1:
        return;
    }

    public void onTimelineChanged(androidx.media3.common.Timeline, int)
    {
        androidx.media3.transformer.ExoPlayerAssetLoader$PlayerListener r0;
        androidx.media3.common.Timeline r1;
        int i0, $i2;
        androidx.media3.common.Timeline$Window r2, $r4;
        long l1;
        androidx.media3.transformer.ExoPlayerAssetLoader $r3, $r6, $r7;
        boolean $z0;
        byte $b3, $b5, $b6;
        androidx.media3.exoplayer.ExoPlayer $r8, $r10;
        java.lang.Object $r9;

        r0 := @this: androidx.media3.transformer.ExoPlayerAssetLoader$PlayerListener;

        r1 := @parameter0: androidx.media3.common.Timeline;

        i0 := @parameter1: int;

        $r3 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader$PlayerListener: androidx.media3.transformer.ExoPlayerAssetLoader this$0>;

        $i2 = staticinvoke <androidx.media3.transformer.ExoPlayerAssetLoader: int access$000(androidx.media3.transformer.ExoPlayerAssetLoader)>($r3);

        if $i2 == 0 goto label1;

        return;

     label1:
        $r4 = new androidx.media3.common.Timeline$Window;

        specialinvoke $r4.<androidx.media3.common.Timeline$Window: void <init>()>();

        r2 = $r4;

        virtualinvoke r1.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window)>(0, r2);

        $z0 = r2.<androidx.media3.common.Timeline$Window: boolean isPlaceholder>;

        if $z0 != 0 goto label5;

        l1 = r2.<androidx.media3.common.Timeline$Window: long durationUs>;

        $r6 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader$PlayerListener: androidx.media3.transformer.ExoPlayerAssetLoader this$0>;

        $b3 = l1 cmp 0L;

        if $b3 <= 0 goto label2;

        $b5 = l1 cmp -9223372036854775807L;

        if $b5 != 0 goto label3;

     label2:
        $b6 = 2;

        goto label4;

     label3:
        $b6 = 1;

     label4:
        staticinvoke <androidx.media3.transformer.ExoPlayerAssetLoader: int access$002(androidx.media3.transformer.ExoPlayerAssetLoader,int)>($r6, $b6);

        $r7 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader$PlayerListener: androidx.media3.transformer.ExoPlayerAssetLoader this$0>;

        $r8 = staticinvoke <androidx.media3.transformer.ExoPlayerAssetLoader: androidx.media3.exoplayer.ExoPlayer access$100(androidx.media3.transformer.ExoPlayerAssetLoader)>($r7);

        $r9 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r8);

        $r10 = (androidx.media3.exoplayer.ExoPlayer) $r9;

        interfaceinvoke $r10.<androidx.media3.exoplayer.ExoPlayer: void play()>();

     label5:
        return;
    }

    public void onTracksChanged(androidx.media3.common.Tracks)
    {
        androidx.media3.transformer.ExoPlayerAssetLoader$PlayerListener r0;
        androidx.media3.common.Tracks r1;
        androidx.media3.transformer.ExoPlayerAssetLoader $r2;
        androidx.media3.transformer.MuxerWrapper $r3, $r5;
        java.lang.Object $r4;
        int $i0;
        java.lang.IllegalStateException $r6;
        androidx.media3.transformer.ExoPlayerAssetLoader$Listener $r7;

        r0 := @this: androidx.media3.transformer.ExoPlayerAssetLoader$PlayerListener;

        r1 := @parameter0: androidx.media3.common.Tracks;

        $r2 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader$PlayerListener: androidx.media3.transformer.ExoPlayerAssetLoader this$0>;

        $r3 = staticinvoke <androidx.media3.transformer.ExoPlayerAssetLoader: androidx.media3.transformer.MuxerWrapper access$200(androidx.media3.transformer.ExoPlayerAssetLoader)>($r2);

        $r4 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        $r5 = (androidx.media3.transformer.MuxerWrapper) $r4;

        $i0 = virtualinvoke $r5.<androidx.media3.transformer.MuxerWrapper: int getTrackCount()>();

        if $i0 != 0 goto label1;

        $r7 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader$PlayerListener: androidx.media3.transformer.ExoPlayerAssetLoader$Listener listener>;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The output does not contain any tracks.");

        interfaceinvoke $r7.<androidx.media3.transformer.ExoPlayerAssetLoader$Listener: void onError(java.lang.Exception)>($r6);

     label1:
        return;
    }

    public void onPlayerError(androidx.media3.common.PlaybackException)
    {
        androidx.media3.transformer.ExoPlayerAssetLoader$PlayerListener r0;
        androidx.media3.common.PlaybackException r1;
        androidx.media3.transformer.ExoPlayerAssetLoader$Listener $r2;

        r0 := @this: androidx.media3.transformer.ExoPlayerAssetLoader$PlayerListener;

        r1 := @parameter0: androidx.media3.common.PlaybackException;

        $r2 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader$PlayerListener: androidx.media3.transformer.ExoPlayerAssetLoader$Listener listener>;

        interfaceinvoke $r2.<androidx.media3.transformer.ExoPlayerAssetLoader$Listener: void onError(java.lang.Exception)>(r1);

        return;
    }

androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl
<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: android.content.Context context>
<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: androidx.media3.transformer.MuxerWrapper muxerWrapper>
<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: androidx.media3.transformer.TransformerMediaClock mediaClock>
<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: boolean removeAudio>
<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: boolean removeVideo>
<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: androidx.media3.transformer.TransformationRequest transformationRequest>
<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: boolean clippingStartsAtKeyFrame>
<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: com.google.common.collect.ImmutableList videoEffects>
<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: androidx.media3.common.FrameProcessor$Factory frameProcessorFactory>
<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: androidx.media3.transformer.Codec$EncoderFactory encoderFactory>
<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: androidx.media3.transformer.Codec$DecoderFactory decoderFactory>
<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: androidx.media3.transformer.FallbackListener fallbackListener>
<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: androidx.media3.transformer.Transformer$AsyncErrorListener asyncErrorListener>
<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: androidx.media3.common.DebugViewProvider debugViewProvider>
    public void <init>(android.content.Context, androidx.media3.transformer.MuxerWrapper, boolean, boolean, androidx.media3.transformer.TransformationRequest, boolean, com.google.common.collect.ImmutableList, androidx.media3.common.FrameProcessor$Factory, androidx.media3.transformer.Codec$EncoderFactory, androidx.media3.transformer.Codec$DecoderFactory, androidx.media3.transformer.FallbackListener, androidx.media3.transformer.Transformer$AsyncErrorListener, androidx.media3.common.DebugViewProvider)
    {
        androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl r0;
        android.content.Context r1;
        androidx.media3.transformer.MuxerWrapper r2;
        boolean z0, z1, z2;
        androidx.media3.transformer.TransformationRequest r3;
        com.google.common.collect.ImmutableList r4;
        androidx.media3.common.FrameProcessor$Factory r5;
        androidx.media3.transformer.Codec$EncoderFactory r6;
        androidx.media3.transformer.Codec$DecoderFactory r7;
        androidx.media3.transformer.FallbackListener r8;
        androidx.media3.transformer.Transformer$AsyncErrorListener r9;
        androidx.media3.common.DebugViewProvider r10;
        androidx.media3.transformer.TransformerMediaClock $r11;

        r0 := @this: androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media3.transformer.MuxerWrapper;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r3 := @parameter4: androidx.media3.transformer.TransformationRequest;

        z2 := @parameter5: boolean;

        r4 := @parameter6: com.google.common.collect.ImmutableList;

        r5 := @parameter7: androidx.media3.common.FrameProcessor$Factory;

        r6 := @parameter8: androidx.media3.transformer.Codec$EncoderFactory;

        r7 := @parameter9: androidx.media3.transformer.Codec$DecoderFactory;

        r8 := @parameter10: androidx.media3.transformer.FallbackListener;

        r9 := @parameter11: androidx.media3.transformer.Transformer$AsyncErrorListener;

        r10 := @parameter12: androidx.media3.common.DebugViewProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: android.content.Context context> = r1;

        r0.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: androidx.media3.transformer.MuxerWrapper muxerWrapper> = r2;

        r0.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: boolean removeAudio> = z0;

        r0.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: boolean removeVideo> = z1;

        r0.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: androidx.media3.transformer.TransformationRequest transformationRequest> = r3;

        r0.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: boolean clippingStartsAtKeyFrame> = z2;

        r0.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: com.google.common.collect.ImmutableList videoEffects> = r4;

        r0.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: androidx.media3.common.FrameProcessor$Factory frameProcessorFactory> = r5;

        r0.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: androidx.media3.transformer.Codec$EncoderFactory encoderFactory> = r6;

        r0.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: androidx.media3.transformer.Codec$DecoderFactory decoderFactory> = r7;

        r0.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: androidx.media3.transformer.FallbackListener fallbackListener> = r8;

        r0.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: androidx.media3.transformer.Transformer$AsyncErrorListener asyncErrorListener> = r9;

        r0.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: androidx.media3.common.DebugViewProvider debugViewProvider> = r10;

        $r11 = new androidx.media3.transformer.TransformerMediaClock;

        specialinvoke $r11.<androidx.media3.transformer.TransformerMediaClock: void <init>()>();

        r0.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: androidx.media3.transformer.TransformerMediaClock mediaClock> = $r11;

        return;
    }

    public androidx.media3.exoplayer.Renderer[] createRenderers(android.os.Handler, androidx.media3.exoplayer.video.VideoRendererEventListener, androidx.media3.exoplayer.audio.AudioRendererEventListener, androidx.media3.exoplayer.text.TextOutput, androidx.media3.exoplayer.metadata.MetadataOutput)
    {
        androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl r0;
        android.os.Handler r1;
        androidx.media3.exoplayer.video.VideoRendererEventListener r2;
        androidx.media3.exoplayer.audio.AudioRendererEventListener r3;
        androidx.media3.exoplayer.text.TextOutput r4;
        androidx.media3.exoplayer.metadata.MetadataOutput r5;
        byte b0, $b1;
        java.lang.Object[] r6;
        boolean $z0, $z1, $z2, $z3, $z4;
        androidx.media3.common.DebugViewProvider $r8;
        androidx.media3.transformer.FallbackListener $r9, $r20;
        androidx.media3.transformer.Transformer$AsyncErrorListener $r10, $r21;
        androidx.media3.transformer.Codec$DecoderFactory $r11, $r22;
        androidx.media3.transformer.Codec$EncoderFactory $r12, $r23;
        androidx.media3.common.FrameProcessor$Factory $r13;
        com.google.common.collect.ImmutableList $r14;
        androidx.media3.transformer.TransformationRequest $r15, $r24;
        androidx.media3.transformer.TransformerMediaClock $r16, $r25;
        androidx.media3.transformer.MuxerWrapper $r17, $r26;
        android.content.Context $r18;
        int i2, i3;
        androidx.media3.transformer.TransformerAudioRenderer r27;
        androidx.media3.transformer.TransformerVideoRenderer r28;
        androidx.media3.exoplayer.Renderer[] r29;

        r0 := @this: androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl;

        r1 := @parameter0: android.os.Handler;

        r2 := @parameter1: androidx.media3.exoplayer.video.VideoRendererEventListener;

        r3 := @parameter2: androidx.media3.exoplayer.audio.AudioRendererEventListener;

        r4 := @parameter3: androidx.media3.exoplayer.text.TextOutput;

        r5 := @parameter4: androidx.media3.exoplayer.metadata.MetadataOutput;

        $z0 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: boolean removeAudio>;

        if $z0 != 0 goto label1;

        $z4 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: boolean removeVideo>;

        if $z4 == 0 goto label2;

     label1:
        $b1 = 1;

        goto label3;

     label2:
        $b1 = 2;

     label3:
        b0 = $b1;

        r6 = newarray (androidx.media3.exoplayer.Renderer)[b0];

        i2 = 0;

        $z1 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: boolean removeAudio>;

        if $z1 != 0 goto label4;

        r27 = new androidx.media3.transformer.TransformerAudioRenderer;

        $r26 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: androidx.media3.transformer.MuxerWrapper muxerWrapper>;

        $r25 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: androidx.media3.transformer.TransformerMediaClock mediaClock>;

        $r24 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: androidx.media3.transformer.TransformationRequest transformationRequest>;

        $r23 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: androidx.media3.transformer.Codec$EncoderFactory encoderFactory>;

        $r22 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: androidx.media3.transformer.Codec$DecoderFactory decoderFactory>;

        $r21 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: androidx.media3.transformer.Transformer$AsyncErrorListener asyncErrorListener>;

        $r20 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: androidx.media3.transformer.FallbackListener fallbackListener>;

        specialinvoke r27.<androidx.media3.transformer.TransformerAudioRenderer: void <init>(androidx.media3.transformer.MuxerWrapper,androidx.media3.transformer.TransformerMediaClock,androidx.media3.transformer.TransformationRequest,androidx.media3.transformer.Codec$EncoderFactory,androidx.media3.transformer.Codec$DecoderFactory,androidx.media3.transformer.Transformer$AsyncErrorListener,androidx.media3.transformer.FallbackListener)>($r26, $r25, $r24, $r23, $r22, $r21, $r20);

        r6[i2] = r27;

        i2 = i2 + 1;

     label4:
        $z2 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: boolean removeVideo>;

        if $z2 != 0 goto label5;

        r28 = new androidx.media3.transformer.TransformerVideoRenderer;

        $r18 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: android.content.Context context>;

        $r17 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: androidx.media3.transformer.MuxerWrapper muxerWrapper>;

        $r16 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: androidx.media3.transformer.TransformerMediaClock mediaClock>;

        $r15 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: androidx.media3.transformer.TransformationRequest transformationRequest>;

        $z3 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: boolean clippingStartsAtKeyFrame>;

        $r14 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: com.google.common.collect.ImmutableList videoEffects>;

        $r13 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: androidx.media3.common.FrameProcessor$Factory frameProcessorFactory>;

        $r12 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: androidx.media3.transformer.Codec$EncoderFactory encoderFactory>;

        $r11 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: androidx.media3.transformer.Codec$DecoderFactory decoderFactory>;

        $r10 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: androidx.media3.transformer.Transformer$AsyncErrorListener asyncErrorListener>;

        $r9 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: androidx.media3.transformer.FallbackListener fallbackListener>;

        $r8 = r0.<androidx.media3.transformer.ExoPlayerAssetLoader$RenderersFactoryImpl: androidx.media3.common.DebugViewProvider debugViewProvider>;

        specialinvoke r28.<androidx.media3.transformer.TransformerVideoRenderer: void <init>(android.content.Context,androidx.media3.transformer.MuxerWrapper,androidx.media3.transformer.TransformerMediaClock,androidx.media3.transformer.TransformationRequest,boolean,com.google.common.collect.ImmutableList,androidx.media3.common.FrameProcessor$Factory,androidx.media3.transformer.Codec$EncoderFactory,androidx.media3.transformer.Codec$DecoderFactory,androidx.media3.transformer.Transformer$AsyncErrorListener,androidx.media3.transformer.FallbackListener,androidx.media3.common.DebugViewProvider)>($r18, $r17, $r16, $r15, $z3, $r14, $r13, $r12, $r11, $r10, $r9, $r8);

        r6[i2] = r28;

        i3 = i2 + 1;

     label5:
        r29 = (androidx.media3.exoplayer.Renderer[]) r6;

        return r29;
    }

