androidx.tracing.Trace
<androidx.tracing.Trace: java.lang.String TAG>
<androidx.tracing.Trace: long sTraceTagApp>
<androidx.tracing.Trace: java.lang.reflect.Method sIsTagEnabledMethod>
<androidx.tracing.Trace: java.lang.reflect.Method sAsyncTraceBeginMethod>
<androidx.tracing.Trace: java.lang.reflect.Method sAsyncTraceEndMethod>
<androidx.tracing.Trace: java.lang.reflect.Method sTraceCounterMethod>
<androidx.tracing.Trace: boolean sHasAppTracingEnabled>
    public static boolean isEnabled()
    {
        int $i0;
        boolean $z0, $z1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 29 goto label1;

        $z1 = staticinvoke <androidx.tracing.TraceApi29Impl: boolean isEnabled()>();

        return $z1;

     label1:
        $z0 = staticinvoke <androidx.tracing.Trace: boolean isEnabledFallback()>();

        return $z0;
    }

    public static void forceEnableAppTracing()
    {
        int $i0, $i1;
        boolean $z0;
        java.lang.Class[] $r0;
        java.lang.Class $r1, $r2;
        java.lang.Object[] $r3;
        java.lang.Boolean $r4;
        java.lang.Throwable $r6, r8;
        java.lang.reflect.Method r7;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 18 goto label4;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 >= 31 goto label4;

     label1:
        $z0 = <androidx.tracing.Trace: boolean sHasAppTracingEnabled>;

        if $z0 != 0 goto label2;

        <androidx.tracing.Trace: boolean sHasAppTracingEnabled> = 1;

        $r2 = class "Landroid/os/Trace;";

        $r0 = newarray (java.lang.Class)[1];

        $r1 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r0[0] = $r1;

        r7 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setAppTracingAllowed", $r0);

        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r3[0] = $r4;

        virtualinvoke r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r3);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r8 = $r6;

        staticinvoke <androidx.tracing.Trace: void handleException(java.lang.String,java.lang.Exception)>("setAppTracingAllowed", r8);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static void beginSection(java.lang.String)
    {
        java.lang.String r0;
        int $i0;

        r0 := @parameter0: java.lang.String;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 18 goto label1;

        staticinvoke <androidx.tracing.TraceApi18Impl: void beginSection(java.lang.String)>(r0);

     label1:
        return;
    }

    public static void endSection()
    {
        int $i0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 18 goto label1;

        staticinvoke <androidx.tracing.TraceApi18Impl: void endSection()>();

     label1:
        return;
    }

    public static void beginAsyncSection(java.lang.String, int)
    {
        java.lang.String r0;
        int i0, $i1;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 29 goto label1;

        staticinvoke <androidx.tracing.TraceApi29Impl: void beginAsyncSection(java.lang.String,int)>(r0, i0);

        goto label2;

     label1:
        staticinvoke <androidx.tracing.Trace: void beginAsyncSectionFallback(java.lang.String,int)>(r0, i0);

     label2:
        return;
    }

    public static void endAsyncSection(java.lang.String, int)
    {
        java.lang.String r0;
        int i0, $i1;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 29 goto label1;

        staticinvoke <androidx.tracing.TraceApi29Impl: void endAsyncSection(java.lang.String,int)>(r0, i0);

        goto label2;

     label1:
        staticinvoke <androidx.tracing.Trace: void endAsyncSectionFallback(java.lang.String,int)>(r0, i0);

     label2:
        return;
    }

    public static void setCounter(java.lang.String, int)
    {
        java.lang.String r0;
        int i0, $i1;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 29 goto label1;

        staticinvoke <androidx.tracing.TraceApi29Impl: void setCounter(java.lang.String,int)>(r0, i0);

        goto label2;

     label1:
        staticinvoke <androidx.tracing.Trace: void setCounterFallback(java.lang.String,int)>(r0, i0);

     label2:
        return;
    }

    private static boolean isEnabledFallback()
    {
        int $i0;
        java.lang.reflect.Method $r0, $r2, $r10;
        java.lang.Object[] $r1;
        long $l1, $l2;
        java.lang.Long $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;
        java.lang.Class $r6, $r8, $r9;
        java.lang.Class[] $r7;
        java.lang.Throwable $r11, r13;
        java.lang.reflect.Field r12;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 18 goto label5;

     label1:
        $r0 = <androidx.tracing.Trace: java.lang.reflect.Method sIsTagEnabledMethod>;

        if $r0 != null goto label2;

        $r6 = class "Landroid/os/Trace;";

        r12 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("TRACE_TAG_APP");

        $l2 = virtualinvoke r12.<java.lang.reflect.Field: long getLong(java.lang.Object)>(null);

        <androidx.tracing.Trace: long sTraceTagApp> = $l2;

        $r9 = class "Landroid/os/Trace;";

        $r7 = newarray (java.lang.Class)[1];

        $r8 = <java.lang.Long: java.lang.Class TYPE>;

        $r7[0] = $r8;

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("isTagEnabled", $r7);

        <androidx.tracing.Trace: java.lang.reflect.Method sIsTagEnabledMethod> = $r10;

     label2:
        $r2 = <androidx.tracing.Trace: java.lang.reflect.Method sIsTagEnabledMethod>;

        $r1 = newarray (java.lang.Object)[1];

        $l1 = <androidx.tracing.Trace: long sTraceTagApp>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r1[0] = $r3;

        $r4 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r1);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

     label3:
        return $z0;

     label4:
        $r11 := @caughtexception;

        r13 = $r11;

        staticinvoke <androidx.tracing.Trace: void handleException(java.lang.String,java.lang.Exception)>("isTagEnabled", r13);

     label5:
        return 0;

        catch java.lang.Exception from label1 to label3 with label4;
    }

    private static void beginAsyncSectionFallback(java.lang.String, int)
    {
        java.lang.String r0;
        int i0, $i1;
        java.lang.Throwable r1, $r13;
        java.lang.reflect.Method $r2, $r4, $r12;
        java.lang.Object[] $r3;
        long $l2;
        java.lang.Long $r5;
        java.lang.Integer $r6;
        java.lang.Class[] $r8;
        java.lang.Class $r9, $r10, $r11;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 18 goto label5;

     label1:
        $r2 = <androidx.tracing.Trace: java.lang.reflect.Method sAsyncTraceBeginMethod>;

        if $r2 != null goto label2;

        $r11 = class "Landroid/os/Trace;";

        $r8 = newarray (java.lang.Class)[3];

        $r9 = <java.lang.Long: java.lang.Class TYPE>;

        $r8[0] = $r9;

        $r8[1] = class "Ljava/lang/String;";

        $r10 = <java.lang.Integer: java.lang.Class TYPE>;

        $r8[2] = $r10;

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("asyncTraceBegin", $r8);

        <androidx.tracing.Trace: java.lang.reflect.Method sAsyncTraceBeginMethod> = $r12;

     label2:
        $r4 = <androidx.tracing.Trace: java.lang.reflect.Method sAsyncTraceBeginMethod>;

        $r3 = newarray (java.lang.Object)[3];

        $l2 = <androidx.tracing.Trace: long sTraceTagApp>;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r3[0] = $r5;

        $r3[1] = r0;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3[2] = $r6;

        virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r3);

     label3:
        goto label5;

     label4:
        $r13 := @caughtexception;

        r1 = $r13;

        staticinvoke <androidx.tracing.Trace: void handleException(java.lang.String,java.lang.Exception)>("asyncTraceBegin", r1);

     label5:
        return;

        catch java.lang.Exception from label1 to label3 with label4;
    }

    private static void endAsyncSectionFallback(java.lang.String, int)
    {
        java.lang.String r0;
        int i0, $i1;
        java.lang.Throwable r1, $r13;
        java.lang.reflect.Method $r2, $r4, $r12;
        java.lang.Object[] $r3;
        long $l2;
        java.lang.Long $r5;
        java.lang.Integer $r6;
        java.lang.Class[] $r8;
        java.lang.Class $r9, $r10, $r11;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 18 goto label5;

     label1:
        $r2 = <androidx.tracing.Trace: java.lang.reflect.Method sAsyncTraceEndMethod>;

        if $r2 != null goto label2;

        $r11 = class "Landroid/os/Trace;";

        $r8 = newarray (java.lang.Class)[3];

        $r9 = <java.lang.Long: java.lang.Class TYPE>;

        $r8[0] = $r9;

        $r8[1] = class "Ljava/lang/String;";

        $r10 = <java.lang.Integer: java.lang.Class TYPE>;

        $r8[2] = $r10;

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("asyncTraceEnd", $r8);

        <androidx.tracing.Trace: java.lang.reflect.Method sAsyncTraceEndMethod> = $r12;

     label2:
        $r4 = <androidx.tracing.Trace: java.lang.reflect.Method sAsyncTraceEndMethod>;

        $r3 = newarray (java.lang.Object)[3];

        $l2 = <androidx.tracing.Trace: long sTraceTagApp>;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r3[0] = $r5;

        $r3[1] = r0;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3[2] = $r6;

        virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r3);

     label3:
        goto label5;

     label4:
        $r13 := @caughtexception;

        r1 = $r13;

        staticinvoke <androidx.tracing.Trace: void handleException(java.lang.String,java.lang.Exception)>("asyncTraceEnd", r1);

     label5:
        return;

        catch java.lang.Exception from label1 to label3 with label4;
    }

    private static void setCounterFallback(java.lang.String, int)
    {
        java.lang.String r0;
        int i0, $i1;
        java.lang.Throwable r1, $r13;
        java.lang.reflect.Method $r2, $r4, $r12;
        java.lang.Object[] $r3;
        long $l2;
        java.lang.Long $r5;
        java.lang.Integer $r6;
        java.lang.Class[] $r8;
        java.lang.Class $r9, $r10, $r11;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 18 goto label5;

     label1:
        $r2 = <androidx.tracing.Trace: java.lang.reflect.Method sTraceCounterMethod>;

        if $r2 != null goto label2;

        $r11 = class "Landroid/os/Trace;";

        $r8 = newarray (java.lang.Class)[3];

        $r9 = <java.lang.Long: java.lang.Class TYPE>;

        $r8[0] = $r9;

        $r8[1] = class "Ljava/lang/String;";

        $r10 = <java.lang.Integer: java.lang.Class TYPE>;

        $r8[2] = $r10;

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("traceCounter", $r8);

        <androidx.tracing.Trace: java.lang.reflect.Method sTraceCounterMethod> = $r12;

     label2:
        $r4 = <androidx.tracing.Trace: java.lang.reflect.Method sTraceCounterMethod>;

        $r3 = newarray (java.lang.Object)[3];

        $l2 = <androidx.tracing.Trace: long sTraceTagApp>;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r3[0] = $r5;

        $r3[1] = r0;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3[2] = $r6;

        virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r3);

     label3:
        goto label5;

     label4:
        $r13 := @caughtexception;

        r1 = $r13;

        staticinvoke <androidx.tracing.Trace: void handleException(java.lang.String,java.lang.Exception)>("traceCounter", r1);

     label5:
        return;

        catch java.lang.Exception from label1 to label3 with label4;
    }

    private static void handleException(java.lang.String, java.lang.Exception)
    {
        java.lang.String r0, $r7;
        java.lang.Exception r1;
        java.lang.Throwable r2;
        boolean $z0, $z1;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.RuntimeException $r8, $r9;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Exception;

        $z0 = r1 instanceof java.lang.reflect.InvocationTargetException;

        if $z0 == 0 goto label2;

        r2 = virtualinvoke r1.<java.lang.Exception: java.lang.Throwable getCause()>();

        $z1 = r2 instanceof java.lang.RuntimeException;

        if $z1 == 0 goto label1;

        $r9 = (java.lang.RuntimeException) r2;

        throw $r9;

     label1:
        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);

        throw $r8;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to call ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" via reflection");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("Trace", $r7, r1);

        return;
    }

    private void <init>()
    {
        androidx.tracing.Trace r0;

        r0 := @this: androidx.tracing.Trace;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

