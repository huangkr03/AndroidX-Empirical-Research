kotlin.time.TimeSourceKt
    private static final int compareTo(kotlin.time.TimeMark, kotlin.time.TimeMark)
    {
        kotlin.time.TimeMark $r0, $r1;
        java.lang.Error r2;
        java.lang.Throwable r3;

        $r0 := @parameter0: kotlin.time.TimeMark;

        $r1 := @parameter1: kotlin.time.TimeMark;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        r2 = new java.lang.Error;

        specialinvoke r2.<java.lang.Error: void <init>(java.lang.String)>("Operation is disallowed.");

        r3 = (java.lang.Throwable) r2;

        throw r3;
    }

    private static final long minus(kotlin.time.TimeMark, kotlin.time.TimeMark)
    {
        kotlin.time.TimeMark $r0, $r1;
        java.lang.Error r2;
        java.lang.Throwable r3;

        $r0 := @parameter0: kotlin.time.TimeMark;

        $r1 := @parameter1: kotlin.time.TimeMark;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        r2 = new java.lang.Error;

        specialinvoke r2.<java.lang.Error: void <init>(java.lang.String)>("Operation is disallowed.");

        r3 = (java.lang.Throwable) r2;

        throw r3;
    }

