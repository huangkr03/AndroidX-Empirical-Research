androidx.compose.ui.focus.FocusTraversalKt
<androidx.compose.ui.focus.FocusTraversalKt: java.lang.String invalidFocusDirection>
    public static final boolean focusSearch-sMXa3k8(androidx.compose.ui.focus.FocusModifier, int, androidx.compose.ui.unit.LayoutDirection, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.focus.FocusModifier $r0, r3, $r15, $r20, $r23;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        androidx.compose.ui.unit.LayoutDirection r1;
        kotlin.jvm.functions.Function1 r2;
        androidx.compose.ui.focus.FocusDirection$Companion $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r19, $r21;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.lang.IllegalStateException $r12;
        java.lang.String $r13, $r14;
        java.lang.Object $r16;
        java.lang.Boolean $r17;
        int[] $r18;
        kotlin.NoWhenBranchMatchedException $r22;

        $r0 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        i0 := @parameter1: int;

        r1 := @parameter2: androidx.compose.ui.unit.LayoutDirection;

        r2 := @parameter3: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$focusSearch");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "layoutDirection");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "onFound");

        i1 = i0;

        $r4 = <androidx.compose.ui.focus.FocusDirection: androidx.compose.ui.focus.FocusDirection$Companion Companion>;

        $i3 = virtualinvoke $r4.<androidx.compose.ui.focus.FocusDirection$Companion: int getNext-dhqQ-8s()>();

        $z1 = staticinvoke <androidx.compose.ui.focus.FocusDirection: boolean equals-impl0(int,int)>(i1, $i3);

        if $z1 == 0 goto label01;

        $z6 = 1;

        goto label02;

     label01:
        $r5 = <androidx.compose.ui.focus.FocusDirection: androidx.compose.ui.focus.FocusDirection$Companion Companion>;

        $i4 = virtualinvoke $r5.<androidx.compose.ui.focus.FocusDirection$Companion: int getPrevious-dhqQ-8s()>();

        $z6 = staticinvoke <androidx.compose.ui.focus.FocusDirection: boolean equals-impl0(int,int)>(i1, $i4);

     label02:
        if $z6 == 0 goto label03;

        $z7 = staticinvoke <androidx.compose.ui.focus.OneDimensionalFocusSearchKt: boolean oneDimensionalFocusSearch--OM-vw8(androidx.compose.ui.focus.FocusModifier,int,kotlin.jvm.functions.Function1)>($r0, i0, r2);

        goto label23;

     label03:
        $r6 = <androidx.compose.ui.focus.FocusDirection: androidx.compose.ui.focus.FocusDirection$Companion Companion>;

        $i5 = virtualinvoke $r6.<androidx.compose.ui.focus.FocusDirection$Companion: int getLeft-dhqQ-8s()>();

        $z2 = staticinvoke <androidx.compose.ui.focus.FocusDirection: boolean equals-impl0(int,int)>(i1, $i5);

        if $z2 == 0 goto label04;

        $z8 = 1;

        goto label05;

     label04:
        $r7 = <androidx.compose.ui.focus.FocusDirection: androidx.compose.ui.focus.FocusDirection$Companion Companion>;

        $i6 = virtualinvoke $r7.<androidx.compose.ui.focus.FocusDirection$Companion: int getRight-dhqQ-8s()>();

        $z8 = staticinvoke <androidx.compose.ui.focus.FocusDirection: boolean equals-impl0(int,int)>(i1, $i6);

     label05:
        if $z8 == 0 goto label06;

        $z9 = 1;

        goto label07;

     label06:
        $r8 = <androidx.compose.ui.focus.FocusDirection: androidx.compose.ui.focus.FocusDirection$Companion Companion>;

        $i7 = virtualinvoke $r8.<androidx.compose.ui.focus.FocusDirection$Companion: int getUp-dhqQ-8s()>();

        $z9 = staticinvoke <androidx.compose.ui.focus.FocusDirection: boolean equals-impl0(int,int)>(i1, $i7);

     label07:
        if $z9 == 0 goto label08;

        $z10 = 1;

        goto label09;

     label08:
        $r9 = <androidx.compose.ui.focus.FocusDirection: androidx.compose.ui.focus.FocusDirection$Companion Companion>;

        $i8 = virtualinvoke $r9.<androidx.compose.ui.focus.FocusDirection$Companion: int getDown-dhqQ-8s()>();

        $z10 = staticinvoke <androidx.compose.ui.focus.FocusDirection: boolean equals-impl0(int,int)>(i1, $i8);

     label09:
        if $z10 == 0 goto label10;

        $z7 = staticinvoke <androidx.compose.ui.focus.TwoDimensionalFocusSearchKt: boolean twoDimensionalFocusSearch--OM-vw8(androidx.compose.ui.focus.FocusModifier,int,kotlin.jvm.functions.Function1)>($r0, i0, r2);

        goto label23;

     label10:
        $r10 = <androidx.compose.ui.focus.FocusDirection: androidx.compose.ui.focus.FocusDirection$Companion Companion>;

        $i9 = virtualinvoke $r10.<androidx.compose.ui.focus.FocusDirection$Companion: int getEnter-dhqQ-8s()>();

        $z3 = staticinvoke <androidx.compose.ui.focus.FocusDirection: boolean equals-impl0(int,int)>(i1, $i9);

        if $z3 == 0 goto label16;

        $r18 = <androidx.compose.ui.focus.FocusTraversalKt$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i11 = virtualinvoke r1.<androidx.compose.ui.unit.LayoutDirection: int ordinal()>();

        $i12 = $r18[$i11];

        tableswitch($i12)
        {
            case 1: goto label11;
            case 2: goto label12;
            default: goto label13;
        };

     label11:
        $r21 = <androidx.compose.ui.focus.FocusDirection: androidx.compose.ui.focus.FocusDirection$Companion Companion>;

        $i13 = virtualinvoke $r21.<androidx.compose.ui.focus.FocusDirection$Companion: int getLeft-dhqQ-8s()>();

        goto label14;

     label12:
        $r19 = <androidx.compose.ui.focus.FocusDirection: androidx.compose.ui.focus.FocusDirection$Companion Companion>;

        $i13 = virtualinvoke $r19.<androidx.compose.ui.focus.FocusDirection$Companion: int getRight-dhqQ-8s()>();

        goto label14;

     label13:
        $r22 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r22.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r22;

     label14:
        i2 = $i13;

        $r20 = staticinvoke <androidx.compose.ui.focus.FocusTraversalKt: androidx.compose.ui.focus.FocusModifier findActiveFocusNode(androidx.compose.ui.focus.FocusModifier)>($r0);

        if $r20 == null goto label15;

        $z7 = staticinvoke <androidx.compose.ui.focus.TwoDimensionalFocusSearchKt: boolean twoDimensionalFocusSearch--OM-vw8(androidx.compose.ui.focus.FocusModifier,int,kotlin.jvm.functions.Function1)>($r20, i2, r2);

        goto label23;

     label15:
        $z7 = 0;

        goto label23;

     label16:
        $r11 = <androidx.compose.ui.focus.FocusDirection: androidx.compose.ui.focus.FocusDirection$Companion Companion>;

        $i10 = virtualinvoke $r11.<androidx.compose.ui.focus.FocusDirection$Companion: int getExit-dhqQ-8s()>();

        $z4 = staticinvoke <androidx.compose.ui.focus.FocusDirection: boolean equals-impl0(int,int)>(i1, $i10);

        if $z4 == 0 goto label22;

        $r15 = staticinvoke <androidx.compose.ui.focus.FocusTraversalKt: androidx.compose.ui.focus.FocusModifier findActiveFocusNode(androidx.compose.ui.focus.FocusModifier)>($r0);

        if $r15 == null goto label17;

        $r23 = staticinvoke <androidx.compose.ui.focus.FocusTraversalKt: androidx.compose.ui.focus.FocusModifier findActiveParent(androidx.compose.ui.focus.FocusModifier)>($r15);

        goto label18;

     label17:
        $r23 = null;

     label18:
        r3 = $r23;

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r3, $r0);

        if $z5 != 0 goto label19;

        if r3 != null goto label20;

     label19:
        $z7 = 0;

        goto label21;

     label20:
        $r16 = interfaceinvoke r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r3);

        $r17 = (java.lang.Boolean) $r16;

        $z7 = virtualinvoke $r17.<java.lang.Boolean: boolean booleanValue()>();

     label21:
        goto label23;

     label22:
        $r12 = new java.lang.IllegalStateException;

        $r13 = "Invalid FocusDirection";

        $r14 = virtualinvoke $r13.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r14);

        throw $r12;

     label23:
        return $z7;
    }

    public static final androidx.compose.ui.focus.FocusModifier findActiveFocusNode(androidx.compose.ui.focus.FocusModifier)
    {
        androidx.compose.ui.focus.FocusModifier $r0, $r3, $r5;
        androidx.compose.ui.focus.FocusStateImpl $r1;
        int[] $r2;
        int $i0, $i1;
        kotlin.NoWhenBranchMatchedException $r4;

        $r0 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusStateImpl getFocusState()>();

        $r2 = <androidx.compose.ui.focus.FocusTraversalKt$WhenMappings: int[] $EnumSwitchMapping$1>;

        $i0 = virtualinvoke $r1.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label2;
            case 4: goto label2;
            case 5: goto label4;
            case 6: goto label4;
            default: goto label5;
        };

     label1:
        $r5 = $r0;

        goto label6;

     label2:
        $r3 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusModifier getFocusedChild()>();

        if $r3 == null goto label3;

        $r5 = staticinvoke <androidx.compose.ui.focus.FocusTraversalKt: androidx.compose.ui.focus.FocusModifier findActiveFocusNode(androidx.compose.ui.focus.FocusModifier)>($r3);

        goto label6;

     label3:
        $r5 = null;

        goto label6;

     label4:
        $r5 = null;

        goto label6;

     label5:
        $r4 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r4.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r4;

     label6:
        return $r5;
    }

    public static final androidx.compose.ui.focus.FocusModifier findActiveParent(androidx.compose.ui.focus.FocusModifier)
    {
        androidx.compose.ui.focus.FocusModifier $r0, r1, $r2, $r6;
        androidx.compose.ui.focus.FocusStateImpl $r3;
        int[] $r4;
        int $i0, $i1;
        kotlin.NoWhenBranchMatchedException $r5;

        $r0 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r2 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusModifier getParent()>();

        if $r2 == null goto label5;

        r1 = $r2;

        $r3 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusStateImpl getFocusState()>();

        $r4 = <androidx.compose.ui.focus.FocusTraversalKt$WhenMappings: int[] $EnumSwitchMapping$1>;

        $i0 = virtualinvoke $r3.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        $i1 = $r4[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label2;
            case 4: goto label1;
            case 5: goto label1;
            case 6: goto label1;
            default: goto label3;
        };

     label1:
        $r6 = staticinvoke <androidx.compose.ui.focus.FocusTraversalKt: androidx.compose.ui.focus.FocusModifier findActiveParent(androidx.compose.ui.focus.FocusModifier)>(r1);

        goto label4;

     label2:
        $r6 = $r0;

        goto label4;

     label3:
        $r5 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r5.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r5;

     label4:
        goto label6;

     label5:
        $r6 = null;

     label6:
        return $r6;
    }

    public static final androidx.compose.ui.geometry.Rect focusRect(androidx.compose.ui.focus.FocusModifier)
    {
        androidx.compose.ui.focus.FocusModifier $r0;
        androidx.compose.ui.node.NodeCoordinator r1, $r2;
        androidx.compose.ui.geometry.Rect$Companion $r3;
        androidx.compose.ui.layout.LayoutCoordinates $r4, $r5, $r6;
        androidx.compose.ui.geometry.Rect $r7;

        $r0 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r2 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.node.NodeCoordinator getCoordinator()>();

        if $r2 == null goto label1;

        r1 = $r2;

        $r4 = (androidx.compose.ui.layout.LayoutCoordinates) r1;

        $r5 = staticinvoke <androidx.compose.ui.layout.LayoutCoordinatesKt: androidx.compose.ui.layout.LayoutCoordinates findRootCoordinates(androidx.compose.ui.layout.LayoutCoordinates)>($r4);

        $r6 = (androidx.compose.ui.layout.LayoutCoordinates) r1;

        $r7 = interfaceinvoke $r5.<androidx.compose.ui.layout.LayoutCoordinates: androidx.compose.ui.geometry.Rect localBoundingBoxOf(androidx.compose.ui.layout.LayoutCoordinates,boolean)>($r6, 0);

        if $r7 != null goto label2;

     label1:
        $r3 = <androidx.compose.ui.geometry.Rect: androidx.compose.ui.geometry.Rect$Companion Companion>;

        $r7 = virtualinvoke $r3.<androidx.compose.ui.geometry.Rect$Companion: androidx.compose.ui.geometry.Rect getZero()>();

     label2:
        return $r7;
    }

    public static final androidx.compose.runtime.collection.MutableVector activatedChildren(androidx.compose.ui.focus.FocusModifier)
    {
        androidx.compose.ui.focus.FocusModifier $r0, r3, $r20, r29, $r33;
        java.lang.Object[] r1, $r6, $r18, $r24, r28, r32;
        androidx.compose.ui.focus.FocusRequesterModifierLocal r2;
        androidx.compose.runtime.collection.MutableVector $r4, $r21, $r23, r27, r30, $r31, r34, r37, $r38;
        androidx.compose.ui.focus.FocusModifier[] $r5, $r22;
        java.lang.Object $r7, $r13, $r19, $r25;
        androidx.compose.ui.focus.FocusStateImpl $r8, $r26;
        boolean $z3, $z4, $z5, $z9, $z12, z14, z15, z20;
        androidx.compose.ui.focus.FocusProperties $r9;
        kotlin.jvm.functions.Function1 $r10;
        androidx.compose.ui.focus.FocusDirection$Companion $r11;
        int $i0, $i1, i2, i3, i5, i6, $i8, i9;
        androidx.compose.ui.focus.FocusDirection $r12;
        androidx.compose.ui.focus.FocusRequester$Companion $r14, $r16;
        androidx.compose.ui.focus.FocusRequester $r15, $r17, r35;
        byte b4, b7;

        $r0 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r27 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.runtime.collection.MutableVector getChildren()>();

        i2 = virtualinvoke r27.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if i2 <= 0 goto label03;

        i3 = 0;

        $r24 = virtualinvoke r27.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r24, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r28 = $r24;

     label01:
        $r25 = r28[i3];

        r29 = (androidx.compose.ui.focus.FocusModifier) $r25;

        $r26 = virtualinvoke r29.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusStateImpl getFocusState()>();

        $z9 = virtualinvoke $r26.<androidx.compose.ui.focus.FocusStateImpl: boolean isDeactivated()>();

        if $z9 == 0 goto label02;

        $z12 = 1;

        goto label04;

     label02:
        i3 = i3 + 1;

        if i3 < i2 goto label01;

     label03:
        $z12 = 0;

     label04:
        if $z12 != 0 goto label05;

        $r23 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.runtime.collection.MutableVector getChildren()>();

        return $r23;

     label05:
        b4 = 16;

        z14 = 0;

        $r4 = new androidx.compose.runtime.collection.MutableVector;

        $r5 = newarray (androidx.compose.ui.focus.FocusModifier)[b4];

        specialinvoke $r4.<androidx.compose.runtime.collection.MutableVector: void <init>(java.lang.Object[],int)>($r5, 0);

        r30 = $r4;

        $r31 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.runtime.collection.MutableVector getChildren()>();

        z15 = 0;

        i5 = virtualinvoke $r31.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if i5 <= 0 goto label13;

        i6 = 0;

        $r6 = virtualinvoke $r31.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r6, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r32 = $r6;

     label06:
        $r7 = r32[i6];

        $r33 = (androidx.compose.ui.focus.FocusModifier) $r7;

        $r8 = virtualinvoke $r33.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusStateImpl getFocusState()>();

        $z3 = virtualinvoke $r8.<androidx.compose.ui.focus.FocusStateImpl: boolean isDeactivated()>();

        if $z3 != 0 goto label07;

        r34 = r30;

        virtualinvoke r34.<androidx.compose.runtime.collection.MutableVector: boolean add(java.lang.Object)>($r33);

        goto label12;

     label07:
        $r9 = virtualinvoke $r33.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusProperties getFocusProperties()>();

        $r10 = interfaceinvoke $r9.<androidx.compose.ui.focus.FocusProperties: kotlin.jvm.functions.Function1 getEnter()>();

        $r11 = <androidx.compose.ui.focus.FocusDirection: androidx.compose.ui.focus.FocusDirection$Companion Companion>;

        $i0 = virtualinvoke $r11.<androidx.compose.ui.focus.FocusDirection$Companion: int getEnter-dhqQ-8s()>();

        $r12 = staticinvoke <androidx.compose.ui.focus.FocusDirection: androidx.compose.ui.focus.FocusDirection box-impl(int)>($i0);

        $r13 = interfaceinvoke $r10.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r12);

        r35 = (androidx.compose.ui.focus.FocusRequester) $r13;

        $r14 = <androidx.compose.ui.focus.FocusRequester: androidx.compose.ui.focus.FocusRequester$Companion Companion>;

        $r15 = virtualinvoke $r14.<androidx.compose.ui.focus.FocusRequester$Companion: androidx.compose.ui.focus.FocusRequester getCancel()>();

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r35, $r15);

        if $z4 == 0 goto label08;

        b7 = 16;

        $r21 = new androidx.compose.runtime.collection.MutableVector;

        $r22 = newarray (androidx.compose.ui.focus.FocusModifier)[b7];

        specialinvoke $r21.<androidx.compose.runtime.collection.MutableVector: void <init>(java.lang.Object[],int)>($r22, 0);

        return $r21;

     label08:
        $r16 = <androidx.compose.ui.focus.FocusRequester: androidx.compose.ui.focus.FocusRequester$Companion Companion>;

        $r17 = virtualinvoke $r16.<androidx.compose.ui.focus.FocusRequester$Companion: androidx.compose.ui.focus.FocusRequester getDefault()>();

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r35, $r17);

        if $z5 == 0 goto label09;

        r37 = staticinvoke <androidx.compose.ui.focus.FocusTraversalKt: androidx.compose.runtime.collection.MutableVector activatedChildren(androidx.compose.ui.focus.FocusModifier)>($r33);

        $i1 = virtualinvoke r30.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        virtualinvoke r30.<androidx.compose.runtime.collection.MutableVector: boolean addAll(int,androidx.compose.runtime.collection.MutableVector)>($i1, r37);

        goto label12;

     label09:
        $r38 = virtualinvoke r35.<androidx.compose.ui.focus.FocusRequester: androidx.compose.runtime.collection.MutableVector getFocusRequesterModifierLocals$ui_release()>();

        z20 = 0;

        $i8 = virtualinvoke $r38.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if $i8 <= 0 goto label12;

        i9 = 0;

        $r18 = virtualinvoke $r38.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r18, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r1 = $r18;

     label10:
        $r19 = r1[i9];

        r2 = (androidx.compose.ui.focus.FocusRequesterModifierLocal) $r19;

        $r20 = virtualinvoke r2.<androidx.compose.ui.focus.FocusRequesterModifierLocal: androidx.compose.ui.focus.FocusModifier findFocusNode()>();

        if $r20 == null goto label11;

        r3 = $r20;

        virtualinvoke r30.<androidx.compose.runtime.collection.MutableVector: boolean add(java.lang.Object)>(r3);

        goto label11;

     label11:
        i9 = i9 + 1;

        if i9 < $i8 goto label10;

     label12:
        i6 = i6 + 1;

        if i6 < i5 goto label06;

     label13:
        return r30;
    }

    public static final androidx.compose.ui.input.key.KeyInputModifier findLastKeyInputModifier(androidx.compose.ui.focus.FocusModifier)
    {
        androidx.compose.ui.focus.FocusModifier $r0;
        androidx.compose.ui.node.LayoutNode r1, $r6, $r10;
        androidx.compose.runtime.collection.MutableVector r2;
        int i0, i1;
        java.lang.Object[] r3, $r8;
        androidx.compose.ui.input.key.KeyInputModifier r4, $r7, r11;
        androidx.compose.ui.node.NodeCoordinator $r5;
        java.lang.Object $r9;
        boolean $z2;

        $r0 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r5 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.node.NodeCoordinator getCoordinator()>();

        if $r5 == null goto label1;

        $r6 = virtualinvoke $r5.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.LayoutNode getLayoutNode()>();

        if $r6 != null goto label2;

     label1:
        return null;

     label2:
        r1 = $r6;

        r11 = null;

        r2 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.runtime.collection.MutableVector getKeyInputChildren()>();

        i0 = virtualinvoke r2.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if i0 <= 0 goto label5;

        i1 = 0;

        $r8 = virtualinvoke r2.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r8, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r3 = $r8;

     label3:
        $r9 = r3[i1];

        r4 = (androidx.compose.ui.input.key.KeyInputModifier) $r9;

        $r10 = virtualinvoke r4.<androidx.compose.ui.input.key.KeyInputModifier: androidx.compose.ui.node.LayoutNode getLayoutNode()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r10, r1);

        if $z2 == 0 goto label4;

        r11 = staticinvoke <androidx.compose.ui.focus.FocusTraversalKt: androidx.compose.ui.input.key.KeyInputModifier lastOf(androidx.compose.ui.input.key.KeyInputModifier,androidx.compose.ui.input.key.KeyInputModifier)>(r4, r11);

     label4:
        i1 = i1 + 1;

        if i1 < i0 goto label3;

     label5:
        if r11 == null goto label6;

        return r11;

     label6:
        $r7 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.input.key.KeyInputModifier getKeyInputModifier()>();

        return $r7;
    }

    public static final boolean isEligibleForFocusSearch(androidx.compose.ui.focus.FocusModifier)
    {
        androidx.compose.ui.focus.FocusModifier $r0;
        androidx.compose.ui.node.NodeCoordinator $r1, $r2;
        androidx.compose.ui.node.LayoutNode $r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4;

        $r0 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.node.NodeCoordinator getCoordinator()>();

        if $r1 == null goto label2;

        $r4 = virtualinvoke $r1.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.LayoutNode getLayoutNode()>();

        if $r4 == null goto label2;

        $z1 = virtualinvoke $r4.<androidx.compose.ui.node.LayoutNode: boolean isPlaced()>();

        if $z1 != 1 goto label1;

        $z2 = 1;

        goto label3;

     label1:
        $z2 = 0;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        if $z2 == 0 goto label7;

        $r2 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.node.NodeCoordinator getCoordinator()>();

        if $r2 == null goto label5;

        $r3 = virtualinvoke $r2.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.LayoutNode getLayoutNode()>();

        if $r3 == null goto label5;

        $z0 = virtualinvoke $r3.<androidx.compose.ui.node.LayoutNode: boolean isAttached()>();

        if $z0 != 1 goto label4;

        $z3 = 1;

        goto label6;

     label4:
        $z3 = 0;

        goto label6;

     label5:
        $z3 = 0;

     label6:
        if $z3 == 0 goto label7;

        $z4 = 1;

        goto label8;

     label7:
        $z4 = 0;

     label8:
        return $z4;
    }

    private static final androidx.compose.ui.input.key.KeyInputModifier lastOf(androidx.compose.ui.input.key.KeyInputModifier, androidx.compose.ui.input.key.KeyInputModifier)
    {
        androidx.compose.ui.input.key.KeyInputModifier r0, r1, r3, r5;
        androidx.compose.ui.node.LayoutNode r2, $r4;
        boolean $z0, $z1;

        r0 := @parameter0: androidx.compose.ui.input.key.KeyInputModifier;

        r1 := @parameter1: androidx.compose.ui.input.key.KeyInputModifier;

        if r1 != null goto label1;

        return r0;

     label1:
        r5 = r1;

        r2 = virtualinvoke r0.<androidx.compose.ui.input.key.KeyInputModifier: androidx.compose.ui.node.LayoutNode getLayoutNode()>();

     label2:
        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r5, r0);

        if $z0 != 0 goto label5;

        r3 = virtualinvoke r5.<androidx.compose.ui.input.key.KeyInputModifier: androidx.compose.ui.input.key.KeyInputModifier getParent()>();

        if r3 == null goto label3;

        $r4 = virtualinvoke r3.<androidx.compose.ui.input.key.KeyInputModifier: androidx.compose.ui.node.LayoutNode getLayoutNode()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, r2);

        if $z1 != 0 goto label4;

     label3:
        return r0;

     label4:
        r5 = r3;

        goto label2;

     label5:
        return r1;
    }

