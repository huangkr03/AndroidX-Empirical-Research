androidx.ui.graphics.AndroidPaintKt
    public static final android.graphics.Paint makeNativePaint()
    {
        android.graphics.Paint $r0;

        $r0 = new android.graphics.Paint;

        specialinvoke $r0.<android.graphics.Paint: void <init>(int)>(1);

        return $r0;
    }

    public static final void setNativeBlendMode(android.graphics.Paint, androidx.ui.graphics.BlendMode)
    {
        android.graphics.Paint $r0;
        androidx.ui.graphics.BlendMode r1;
        android.graphics.PorterDuffXfermode $r2;
        android.graphics.PorterDuff$Mode $r3;
        android.graphics.Xfermode $r4;

        $r0 := @parameter0: android.graphics.Paint;

        r1 := @parameter1: androidx.ui.graphics.BlendMode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = new android.graphics.PorterDuffXfermode;

        $r3 = staticinvoke <androidx.ui.graphics.AndroidBlendModeKt: android.graphics.PorterDuff$Mode toPorterDuffMode(androidx.ui.graphics.BlendMode)>(r1);

        specialinvoke $r2.<android.graphics.PorterDuffXfermode: void <init>(android.graphics.PorterDuff$Mode)>($r3);

        $r4 = (android.graphics.Xfermode) $r2;

        virtualinvoke $r0.<android.graphics.Paint: android.graphics.Xfermode setXfermode(android.graphics.Xfermode)>($r4);

        return;
    }

    public static final void setNativeColorFilter(android.graphics.Paint, androidx.ui.graphics.ColorFilter)
    {
        android.graphics.Paint $r0;
        androidx.ui.graphics.ColorFilter r1;
        android.graphics.ColorFilter $r2, $r7;
        android.graphics.PorterDuffColorFilter $r4;
        long $l0;
        int $i1;
        androidx.ui.graphics.BlendMode $r5;
        android.graphics.PorterDuff$Mode $r6;

        $r0 := @parameter0: android.graphics.Paint;

        r1 := @parameter1: androidx.ui.graphics.ColorFilter;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if r1 == null goto label1;

        $r4 = new android.graphics.PorterDuffColorFilter;

        $l0 = virtualinvoke r1.<androidx.ui.graphics.ColorFilter: long getColor()>();

        $i1 = staticinvoke <androidx.ui.graphics.ColorKt: int toArgb-QEYXlZo(long)>($l0);

        $r5 = virtualinvoke r1.<androidx.ui.graphics.ColorFilter: androidx.ui.graphics.BlendMode getBlendMode()>();

        $r6 = staticinvoke <androidx.ui.graphics.AndroidBlendModeKt: android.graphics.PorterDuff$Mode toPorterDuffMode(androidx.ui.graphics.BlendMode)>($r5);

        specialinvoke $r4.<android.graphics.PorterDuffColorFilter: void <init>(int,android.graphics.PorterDuff$Mode)>($i1, $r6);

        $r7 = (android.graphics.ColorFilter) $r4;

        virtualinvoke $r0.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r7);

        goto label2;

     label1:
        $r2 = (android.graphics.ColorFilter) null;

        virtualinvoke $r0.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r2);

     label2:
        return;
    }

    public static final float getNativeAlpha(android.graphics.Paint)
    {
        android.graphics.Paint $r0;
        int $i0;
        float $f0, $f1;

        $r0 := @parameter0: android.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = virtualinvoke $r0.<android.graphics.Paint: int getAlpha()>();

        $f0 = (float) $i0;

        $f1 = $f0 / 255.0F;

        return $f1;
    }

    public static final void setNativeAlpha(android.graphics.Paint, float)
    {
        android.graphics.Paint $r0, r1;
        float f0, f1, f2;
        boolean z0;
        double $d0, $d1;
        int $i0;

        $r0 := @parameter0: android.graphics.Paint;

        f0 := @parameter1: float;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        f1 = f0 * 255.0F;

        r1 = $r0;

        z0 = 0;

        $d0 = (double) f1;

        $d1 = staticinvoke <java.lang.Math: double rint(double)>($d0);

        f2 = (float) $d1;

        $i0 = (int) f2;

        virtualinvoke r1.<android.graphics.Paint: void setAlpha(int)>($i0);

        return;
    }

    public static final boolean getNativeAntiAlias(android.graphics.Paint)
    {
        android.graphics.Paint $r0;
        boolean $z0;

        $r0 := @parameter0: android.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = virtualinvoke $r0.<android.graphics.Paint: boolean isAntiAlias()>();

        return $z0;
    }

    public static final void setNativeAntiAlias(android.graphics.Paint, boolean)
    {
        android.graphics.Paint $r0;
        boolean z0;

        $r0 := @parameter0: android.graphics.Paint;

        z0 := @parameter1: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        virtualinvoke $r0.<android.graphics.Paint: void setAntiAlias(boolean)>(z0);

        return;
    }

    public static final long getNativeColor(android.graphics.Paint)
    {
        android.graphics.Paint $r0;
        int $i0;
        long $l1;

        $r0 := @parameter0: android.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = virtualinvoke $r0.<android.graphics.Paint: int getColor()>();

        $l1 = staticinvoke <androidx.ui.graphics.ColorKt: long Color(int)>($i0);

        return $l1;
    }

    public static final void setNativeColor-6CSLprE(android.graphics.Paint, long)
    {
        android.graphics.Paint $r0;
        long l0;
        int $i1;

        $r0 := @parameter0: android.graphics.Paint;

        l0 := @parameter1: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$receiver");

        $i1 = staticinvoke <androidx.ui.graphics.ColorKt: int toArgb-QEYXlZo(long)>(l0);

        virtualinvoke $r0.<android.graphics.Paint: void setColor(int)>($i1);

        return;
    }

    public static final void setNativeStyle(android.graphics.Paint, androidx.ui.graphics.PaintingStyle)
    {
        android.graphics.Paint $r0;
        androidx.ui.graphics.PaintingStyle r1, r2;
        int i0, $i1;
        int[] $r3;
        android.graphics.Paint$Style $r5;

        $r0 := @parameter0: android.graphics.Paint;

        r1 := @parameter1: androidx.ui.graphics.PaintingStyle;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        r2 = r1;

        $r3 = <androidx.ui.graphics.AndroidPaintKt$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i1 = virtualinvoke r2.<androidx.ui.graphics.PaintingStyle: int ordinal()>();

        i0 = $r3[$i1];

        if i0 != 1 goto label1;

        $r5 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        goto label2;

     label1:
        $r5 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

     label2:
        virtualinvoke $r0.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r5);

        return;
    }

    public static final androidx.ui.graphics.PaintingStyle getNativeStyle(android.graphics.Paint)
    {
        android.graphics.Paint $r0;
        android.graphics.Paint$Style r1;
        int i0, $i1, $i2;
        int[] $r2;
        androidx.ui.graphics.PaintingStyle $r3;

        $r0 := @parameter0: android.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r1 = virtualinvoke $r0.<android.graphics.Paint: android.graphics.Paint$Style getStyle()>();

        if r1 != null goto label1;

        $i2 = -1;

        goto label2;

     label1:
        $r2 = <androidx.ui.graphics.AndroidPaintKt$WhenMappings: int[] $EnumSwitchMapping$1>;

        $i1 = virtualinvoke r1.<android.graphics.Paint$Style: int ordinal()>();

        $i2 = $r2[$i1];

     label2:
        i0 = $i2;

        if i0 != 1 goto label3;

        $r3 = <androidx.ui.graphics.PaintingStyle: androidx.ui.graphics.PaintingStyle stroke>;

        goto label4;

     label3:
        $r3 = <androidx.ui.graphics.PaintingStyle: androidx.ui.graphics.PaintingStyle fill>;

     label4:
        return $r3;
    }

    public static final float getNativeStrokeWidth(android.graphics.Paint)
    {
        android.graphics.Paint $r0;
        float $f0;

        $r0 := @parameter0: android.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $f0 = virtualinvoke $r0.<android.graphics.Paint: float getStrokeWidth()>();

        return $f0;
    }

    public static final void setNativeStrokeWidth(android.graphics.Paint, float)
    {
        android.graphics.Paint $r0;
        float f0;

        $r0 := @parameter0: android.graphics.Paint;

        f0 := @parameter1: float;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        virtualinvoke $r0.<android.graphics.Paint: void setStrokeWidth(float)>(f0);

        return;
    }

    public static final androidx.ui.graphics.StrokeCap getNativeStrokeCap(android.graphics.Paint)
    {
        android.graphics.Paint $r0;
        android.graphics.Paint$Cap r1;
        int i0, $i1, $i2;
        int[] $r2;
        androidx.ui.graphics.StrokeCap $r3;

        $r0 := @parameter0: android.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r1 = virtualinvoke $r0.<android.graphics.Paint: android.graphics.Paint$Cap getStrokeCap()>();

        if r1 != null goto label1;

        $i2 = -1;

        goto label2;

     label1:
        $r2 = <androidx.ui.graphics.AndroidPaintKt$WhenMappings: int[] $EnumSwitchMapping$2>;

        $i1 = virtualinvoke r1.<android.graphics.Paint$Cap: int ordinal()>();

        $i2 = $r2[$i1];

     label2:
        i0 = $i2;

        tableswitch(i0)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label6;
        };

     label3:
        $r3 = <androidx.ui.graphics.StrokeCap: androidx.ui.graphics.StrokeCap butt>;

        goto label7;

     label4:
        $r3 = <androidx.ui.graphics.StrokeCap: androidx.ui.graphics.StrokeCap round>;

        goto label7;

     label5:
        $r3 = <androidx.ui.graphics.StrokeCap: androidx.ui.graphics.StrokeCap square>;

        goto label7;

     label6:
        $r3 = <androidx.ui.graphics.StrokeCap: androidx.ui.graphics.StrokeCap butt>;

     label7:
        return $r3;
    }

    public static final void setNativeStrokeCap(android.graphics.Paint, androidx.ui.graphics.StrokeCap)
    {
        android.graphics.Paint $r0;
        androidx.ui.graphics.StrokeCap r1, r2;
        int i0, $i1;
        int[] $r3;
        kotlin.NoWhenBranchMatchedException $r4;
        android.graphics.Paint$Cap $r6;

        $r0 := @parameter0: android.graphics.Paint;

        r1 := @parameter1: androidx.ui.graphics.StrokeCap;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        r2 = r1;

        $r3 = <androidx.ui.graphics.AndroidPaintKt$WhenMappings: int[] $EnumSwitchMapping$3>;

        $i1 = virtualinvoke r2.<androidx.ui.graphics.StrokeCap: int ordinal()>();

        i0 = $r3[$i1];

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        $r6 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap SQUARE>;

        goto label5;

     label2:
        $r6 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap ROUND>;

        goto label5;

     label3:
        $r6 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap BUTT>;

        goto label5;

     label4:
        $r4 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r4.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r4;

     label5:
        virtualinvoke $r0.<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>($r6);

        return;
    }

    public static final androidx.ui.graphics.StrokeJoin getNativeStrokeJoin(android.graphics.Paint)
    {
        android.graphics.Paint $r0;
        android.graphics.Paint$Join r1;
        int i0, $i1, $i2;
        int[] $r2;
        androidx.ui.graphics.StrokeJoin $r3;

        $r0 := @parameter0: android.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r1 = virtualinvoke $r0.<android.graphics.Paint: android.graphics.Paint$Join getStrokeJoin()>();

        if r1 != null goto label1;

        $i2 = -1;

        goto label2;

     label1:
        $r2 = <androidx.ui.graphics.AndroidPaintKt$WhenMappings: int[] $EnumSwitchMapping$4>;

        $i1 = virtualinvoke r1.<android.graphics.Paint$Join: int ordinal()>();

        $i2 = $r2[$i1];

     label2:
        i0 = $i2;

        tableswitch(i0)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label6;
        };

     label3:
        $r3 = <androidx.ui.graphics.StrokeJoin: androidx.ui.graphics.StrokeJoin miter>;

        goto label7;

     label4:
        $r3 = <androidx.ui.graphics.StrokeJoin: androidx.ui.graphics.StrokeJoin bevel>;

        goto label7;

     label5:
        $r3 = <androidx.ui.graphics.StrokeJoin: androidx.ui.graphics.StrokeJoin round>;

        goto label7;

     label6:
        $r3 = <androidx.ui.graphics.StrokeJoin: androidx.ui.graphics.StrokeJoin miter>;

     label7:
        return $r3;
    }

    public static final void setNativeStrokeJoin(android.graphics.Paint, androidx.ui.graphics.StrokeJoin)
    {
        android.graphics.Paint $r0;
        androidx.ui.graphics.StrokeJoin r1, r2;
        int i0, $i1;
        int[] $r3;
        kotlin.NoWhenBranchMatchedException $r4;
        android.graphics.Paint$Join $r6;

        $r0 := @parameter0: android.graphics.Paint;

        r1 := @parameter1: androidx.ui.graphics.StrokeJoin;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        r2 = r1;

        $r3 = <androidx.ui.graphics.AndroidPaintKt$WhenMappings: int[] $EnumSwitchMapping$5>;

        $i1 = virtualinvoke r2.<androidx.ui.graphics.StrokeJoin: int ordinal()>();

        i0 = $r3[$i1];

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        $r6 = <android.graphics.Paint$Join: android.graphics.Paint$Join MITER>;

        goto label5;

     label2:
        $r6 = <android.graphics.Paint$Join: android.graphics.Paint$Join BEVEL>;

        goto label5;

     label3:
        $r6 = <android.graphics.Paint$Join: android.graphics.Paint$Join ROUND>;

        goto label5;

     label4:
        $r4 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r4.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r4;

     label5:
        virtualinvoke $r0.<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint$Join)>($r6);

        return;
    }

    public static final float getNativeStrokeMiterLimit(android.graphics.Paint)
    {
        android.graphics.Paint $r0;
        float $f0;

        $r0 := @parameter0: android.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $f0 = virtualinvoke $r0.<android.graphics.Paint: float getStrokeMiter()>();

        return $f0;
    }

    public static final void setNativeStrokeMiterLimit(android.graphics.Paint, float)
    {
        android.graphics.Paint $r0;
        float f0;

        $r0 := @parameter0: android.graphics.Paint;

        f0 := @parameter1: float;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        virtualinvoke $r0.<android.graphics.Paint: void setStrokeMiter(float)>(f0);

        return;
    }

    public static final androidx.ui.graphics.FilterQuality getNativeFilterQuality(android.graphics.Paint)
    {
        android.graphics.Paint $r0;
        boolean $z0;
        androidx.ui.graphics.FilterQuality $r1;

        $r0 := @parameter0: android.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = virtualinvoke $r0.<android.graphics.Paint: boolean isFilterBitmap()>();

        if $z0 != 0 goto label1;

        $r1 = <androidx.ui.graphics.FilterQuality: androidx.ui.graphics.FilterQuality none>;

        goto label2;

     label1:
        $r1 = <androidx.ui.graphics.FilterQuality: androidx.ui.graphics.FilterQuality low>;

     label2:
        return $r1;
    }

    public static final void setNativeFilterQuality(android.graphics.Paint, androidx.ui.graphics.FilterQuality)
    {
        android.graphics.Paint $r0;
        androidx.ui.graphics.FilterQuality r1, $r2;
        boolean $z0, $z1;

        $r0 := @parameter0: android.graphics.Paint;

        r1 := @parameter1: androidx.ui.graphics.FilterQuality;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = <androidx.ui.graphics.FilterQuality: androidx.ui.graphics.FilterQuality none>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, $r2);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        virtualinvoke $r0.<android.graphics.Paint: void setFilterBitmap(boolean)>($z1);

        return;
    }

    public static final void setNativeShader(android.graphics.Paint, android.graphics.Shader)
    {
        android.graphics.Paint $r0;
        android.graphics.Shader r1;

        $r0 := @parameter0: android.graphics.Paint;

        r1 := @parameter1: android.graphics.Shader;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        virtualinvoke $r0.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>(r1);

        return;
    }

    public static final void setNativePathEffect(android.graphics.Paint, android.graphics.PathEffect)
    {
        android.graphics.Paint $r0;
        android.graphics.PathEffect r1;

        $r0 := @parameter0: android.graphics.Paint;

        r1 := @parameter1: android.graphics.PathEffect;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        virtualinvoke $r0.<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)>(r1);

        return;
    }

