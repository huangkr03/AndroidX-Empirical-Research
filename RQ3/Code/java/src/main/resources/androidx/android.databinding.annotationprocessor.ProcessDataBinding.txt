android.databinding.annotationprocessor.ProcessDataBinding
<android.databinding.annotationprocessor.ProcessDataBinding: java.util.List mProcessingSteps>
<android.databinding.annotationprocessor.ProcessDataBinding: android.databinding.tool.DataBindingCompilerArgs mCompilerArgs>
    public void <init>()
    {
        android.databinding.annotationprocessor.ProcessDataBinding r0;

        r0 := @this: android.databinding.annotationprocessor.ProcessDataBinding;

        specialinvoke r0.<javax.'annotation'.processing.AbstractProcessor: void <init>()>();

        return;
    }

    public boolean process(java.util.Set, javax.'annotation'.processing.RoundEnvironment)
    {
        android.databinding.annotationprocessor.ProcessDataBinding r0;
        java.util.Set r1;
        javax.'annotation'.processing.RoundEnvironment r2;
        boolean z0, $z1, $z2;
        java.lang.Throwable r3, $r5;
        javax.'annotation'.processing.ProcessingEnvironment $r4, $r6;

        r0 := @this: android.databinding.annotationprocessor.ProcessDataBinding;

        r1 := @parameter0: java.util.Set;

        r2 := @parameter1: javax.'annotation'.processing.RoundEnvironment;

     label1:
        z0 = specialinvoke r0.<android.databinding.annotationprocessor.ProcessDataBinding: boolean doProcess(javax.'annotation'.processing.RoundEnvironment)>(r2);

     label2:
        $z1 = interfaceinvoke r2.<javax.'annotation'.processing.RoundEnvironment: boolean processingOver()>();

        if $z1 == 0 goto label3;

        $r4 = r0.<android.databinding.annotationprocessor.ProcessDataBinding: javax.'annotation'.processing.ProcessingEnvironment processingEnv>;

        staticinvoke <android.databinding.tool.Context: void fullClear(javax.'annotation'.processing.ProcessingEnvironment)>($r4);

     label3:
        return z0;

     label4:
        $r5 := @caughtexception;

        r3 = $r5;

     label5:
        $z2 = interfaceinvoke r2.<javax.'annotation'.processing.RoundEnvironment: boolean processingOver()>();

        if $z2 == 0 goto label6;

        $r6 = r0.<android.databinding.annotationprocessor.ProcessDataBinding: javax.'annotation'.processing.ProcessingEnvironment processingEnv>;

        staticinvoke <android.databinding.tool.Context: void fullClear(javax.'annotation'.processing.ProcessingEnvironment)>($r6);

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private boolean doProcess(javax.'annotation'.processing.RoundEnvironment)
    {
        android.databinding.annotationprocessor.ProcessDataBinding r0;
        javax.'annotation'.processing.RoundEnvironment r1;
        java.lang.Throwable r2, $r17;
        java.util.List $r3, $r6, $r21;
        android.databinding.tool.DataBindingCompilerArgs $r4, $r5, $r8, $r11, $r13, $r14, $r20;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, $z8, $z9;
        java.lang.Object $r7, $r10;
        javax.'annotation'.processing.ProcessingEnvironment $r9, $r12, $r16, $r19;
        java.lang.Object[] $r15, $r18;
        java.util.Iterator r22, r24;
        android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep r23, r25;

        r0 := @this: android.databinding.annotationprocessor.ProcessDataBinding;

        r1 := @parameter0: javax.'annotation'.processing.RoundEnvironment;

        $r3 = r0.<android.databinding.annotationprocessor.ProcessDataBinding: java.util.List mProcessingSteps>;

        if $r3 != null goto label01;

        specialinvoke r0.<android.databinding.annotationprocessor.ProcessDataBinding: void readArguments()>();

        $r16 = r0.<android.databinding.annotationprocessor.ProcessDataBinding: javax.'annotation'.processing.ProcessingEnvironment processingEnv>;

        specialinvoke r0.<android.databinding.annotationprocessor.ProcessDataBinding: void initProcessingSteps(javax.'annotation'.processing.ProcessingEnvironment)>($r16);

     label01:
        $r4 = r0.<android.databinding.annotationprocessor.ProcessDataBinding: android.databinding.tool.DataBindingCompilerArgs mCompilerArgs>;

        if $r4 != null goto label02;

        return 0;

     label02:
        $r5 = r0.<android.databinding.annotationprocessor.ProcessDataBinding: android.databinding.tool.DataBindingCompilerArgs mCompilerArgs>;

        $z0 = virtualinvoke $r5.<android.databinding.tool.DataBindingCompilerArgs: boolean isTestVariant()>();

        if $z0 == 0 goto label03;

        $r13 = r0.<android.databinding.annotationprocessor.ProcessDataBinding: android.databinding.tool.DataBindingCompilerArgs mCompilerArgs>;

        $z5 = virtualinvoke $r13.<android.databinding.tool.DataBindingCompilerArgs: boolean isEnabledForTests()>();

        if $z5 != 0 goto label03;

        $r14 = r0.<android.databinding.annotationprocessor.ProcessDataBinding: android.databinding.tool.DataBindingCompilerArgs mCompilerArgs>;

        $z6 = virtualinvoke $r14.<android.databinding.tool.DataBindingCompilerArgs: boolean isLibrary()>();

        if $z6 != 0 goto label03;

        $r15 = newarray (java.lang.Object)[0];

        staticinvoke <android.databinding.tool.util.L: void d(java.lang.String,java.lang.Object[])>("data binding processor is invoked but not enabled, skipping...", $r15);

        return 0;

     label03:
        z7 = 1;

        $r19 = r0.<android.databinding.annotationprocessor.ProcessDataBinding: javax.'annotation'.processing.ProcessingEnvironment processingEnv>;

        $r20 = r0.<android.databinding.annotationprocessor.ProcessDataBinding: android.databinding.tool.DataBindingCompilerArgs mCompilerArgs>;

        staticinvoke <android.databinding.tool.Context: void init(javax.'annotation'.processing.ProcessingEnvironment,android.databinding.tool.DataBindingCompilerArgs)>($r19, $r20);

        $r21 = r0.<android.databinding.annotationprocessor.ProcessDataBinding: java.util.List mProcessingSteps>;

        r22 = interfaceinvoke $r21.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z8 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label11;

        $r10 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();

        r23 = (android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep) $r10;

     label05:
        $r12 = r0.<android.databinding.annotationprocessor.ProcessDataBinding: javax.'annotation'.processing.ProcessingEnvironment processingEnv>;

        $r11 = r0.<android.databinding.annotationprocessor.ProcessDataBinding: android.databinding.tool.DataBindingCompilerArgs mCompilerArgs>;

        $z4 = staticinvoke <android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep: boolean access$000(android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep,javax.'annotation'.processing.RoundEnvironment,javax.'annotation'.processing.ProcessingEnvironment,android.databinding.tool.DataBindingCompilerArgs)>(r23, r1, $r12, $r11);

        if $z4 == 0 goto label06;

        if z7 == 0 goto label06;

        $z9 = 1;

        goto label07;

     label06:
        $z9 = 0;

     label07:
        z7 = $z9;

     label08:
        goto label10;

     label09:
        $r17 := @caughtexception;

        r2 = $r17;

        $r18 = newarray (java.lang.Object)[1];

        $r18[0] = r23;

        staticinvoke <android.databinding.tool.util.L: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r2, "Exception while handling step %s", $r18);

     label10:
        goto label04;

     label11:
        $z1 = interfaceinvoke r1.<javax.'annotation'.processing.RoundEnvironment: boolean processingOver()>();

        if $z1 == 0 goto label13;

        $r6 = r0.<android.databinding.annotationprocessor.ProcessDataBinding: java.util.List mProcessingSteps>;

        r24 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $z3 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label13;

        $r7 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();

        r25 = (android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep) $r7;

        $r9 = r0.<android.databinding.annotationprocessor.ProcessDataBinding: javax.'annotation'.processing.ProcessingEnvironment processingEnv>;

        $r8 = r0.<android.databinding.annotationprocessor.ProcessDataBinding: android.databinding.tool.DataBindingCompilerArgs mCompilerArgs>;

        virtualinvoke r25.<android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep: void onProcessingOver(javax.'annotation'.processing.RoundEnvironment,javax.'annotation'.processing.ProcessingEnvironment,android.databinding.tool.DataBindingCompilerArgs)>(r1, $r9, $r8);

        goto label12;

     label13:
        $z2 = interfaceinvoke r1.<javax.'annotation'.processing.RoundEnvironment: boolean processingOver()>();

        if $z2 == 0 goto label14;

        staticinvoke <android.databinding.tool.processing.Scope: void assertNoError()>();

     label14:
        return z7;

        catch javax.xml.bind.JAXBException from label05 to label08 with label09;
    }

    public javax.lang.model.SourceVersion getSupportedSourceVersion()
    {
        android.databinding.annotationprocessor.ProcessDataBinding r0;
        javax.lang.model.SourceVersion $r1;

        r0 := @this: android.databinding.annotationprocessor.ProcessDataBinding;

        $r1 = staticinvoke <javax.lang.model.SourceVersion: javax.lang.model.SourceVersion latest()>();

        return $r1;
    }

    private void initProcessingSteps(javax.'annotation'.processing.ProcessingEnvironment)
    {
        android.databinding.annotationprocessor.ProcessDataBinding r0;
        javax.'annotation'.processing.ProcessingEnvironment r1;
        android.databinding.annotationprocessor.ProcessBindable r2, $r7;
        android.databinding.annotationprocessor.ProcessDataBinding$1 r3, $r12;
        android.databinding.tool.writer.AnnotationJavaFileWriter r4, $r13;
        java.util.Iterator r5;
        android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep r6;
        android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep[] $r8;
        android.databinding.annotationprocessor.ProcessMethodAdapters $r9;
        android.databinding.annotationprocessor.ProcessExpressions $r10;
        java.util.List $r11, $r14;
        boolean $z0;
        java.lang.Object $r15;

        r0 := @this: android.databinding.annotationprocessor.ProcessDataBinding;

        r1 := @parameter0: javax.'annotation'.processing.ProcessingEnvironment;

        $r7 = new android.databinding.annotationprocessor.ProcessBindable;

        specialinvoke $r7.<android.databinding.annotationprocessor.ProcessBindable: void <init>()>();

        r2 = $r7;

        $r8 = newarray (android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep)[3];

        $r9 = new android.databinding.annotationprocessor.ProcessMethodAdapters;

        specialinvoke $r9.<android.databinding.annotationprocessor.ProcessMethodAdapters: void <init>()>();

        $r8[0] = $r9;

        $r10 = new android.databinding.annotationprocessor.ProcessExpressions;

        specialinvoke $r10.<android.databinding.annotationprocessor.ProcessExpressions: void <init>()>();

        $r8[1] = $r10;

        $r8[2] = r2;

        $r11 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r8);

        r0.<android.databinding.annotationprocessor.ProcessDataBinding: java.util.List mProcessingSteps> = $r11;

        $r12 = new android.databinding.annotationprocessor.ProcessDataBinding$1;

        specialinvoke $r12.<android.databinding.annotationprocessor.ProcessDataBinding$1: void <init>(android.databinding.annotationprocessor.ProcessDataBinding,android.databinding.annotationprocessor.ProcessBindable,javax.'annotation'.processing.ProcessingEnvironment)>(r0, r2, r1);

        r3 = $r12;

        $r13 = new android.databinding.tool.writer.AnnotationJavaFileWriter;

        specialinvoke $r13.<android.databinding.tool.writer.AnnotationJavaFileWriter: void <init>(javax.'annotation'.processing.ProcessingEnvironment)>(r1);

        r4 = $r13;

        $r14 = r0.<android.databinding.annotationprocessor.ProcessDataBinding: java.util.List mProcessingSteps>;

        r5 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r15 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep) $r15;

        staticinvoke <android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep: android.databinding.tool.writer.JavaFileWriter access$202(android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep,android.databinding.tool.writer.JavaFileWriter)>(r6, r4);

        r6.<android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep: android.databinding.annotationprocessor.ProcessDataBinding$Callback mCallback> = r3;

        goto label1;

     label2:
        return;
    }

    private synchronized void readArguments()
    {
        android.databinding.annotationprocessor.ProcessDataBinding r0;
        java.lang.Throwable r1, $r8;
        java.lang.String r2, $r21;
        javax.'annotation'.processing.ProcessingEnvironment $r3, $r9;
        java.util.Map $r4, $r10;
        android.databinding.tool.DataBindingCompilerArgs $r5, $r6, $r7;
        boolean $z0, $z1;
        java.util.Set $r11;
        java.util.stream.Stream $r12, $r14;
        java.util.function.Function $r13;
        java.util.stream.Collector $r15;
        java.lang.Object $r16;
        java.lang.RuntimeException $r17;
        java.lang.StringBuilder $r18, $r19, $r20;

        r0 := @this: android.databinding.annotationprocessor.ProcessDataBinding;

     label1:
        $r3 = r0.<android.databinding.annotationprocessor.ProcessDataBinding: javax.'annotation'.processing.ProcessingEnvironment processingEnv>;

        $r4 = interfaceinvoke $r3.<javax.'annotation'.processing.ProcessingEnvironment: java.util.Map getOptions()>();

        $r5 = staticinvoke <android.databinding.tool.DataBindingCompilerArgs: android.databinding.tool.DataBindingCompilerArgs readFromOptions(java.util.Map)>($r4);

        r0.<android.databinding.annotationprocessor.ProcessDataBinding: android.databinding.tool.DataBindingCompilerArgs mCompilerArgs> = $r5;

        $r6 = r0.<android.databinding.annotationprocessor.ProcessDataBinding: android.databinding.tool.DataBindingCompilerArgs mCompilerArgs>;

        $z0 = virtualinvoke $r6.<android.databinding.tool.DataBindingCompilerArgs: boolean enableDebugLogs()>();

        staticinvoke <android.databinding.tool.util.L: void setDebugLog(boolean)>($z0);

        $r7 = r0.<android.databinding.annotationprocessor.ProcessDataBinding: android.databinding.tool.DataBindingCompilerArgs mCompilerArgs>;

        $z1 = virtualinvoke $r7.<android.databinding.tool.DataBindingCompilerArgs: boolean shouldPrintEncodedErrorLogs()>();

        staticinvoke <android.databinding.tool.processing.ScopedException: void encodeOutput(boolean)>($z1);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r1 = $r8;

        $r9 = r0.<android.databinding.annotationprocessor.ProcessDataBinding: javax.'annotation'.processing.ProcessingEnvironment processingEnv>;

        $r10 = interfaceinvoke $r9.<javax.'annotation'.processing.ProcessingEnvironment: java.util.Map getOptions()>();

        $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Set entrySet()>();

        $r12 = interfaceinvoke $r11.<java.util.Set: java.util.stream.Stream stream()>();

        $r13 = dynamicinvoke "apply" <java.util.function.Function ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <android.databinding.annotationprocessor.ProcessDataBinding: java.lang.String lambda$readArguments$0(java.util.Map$Entry)>, methodtype: java.lang.String __METHODTYPE__(java.util.Map$Entry));

        $r14 = interfaceinvoke $r12.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>($r13);

        $r15 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector joining(java.lang.CharSequence)>("\n");

        $r16 = interfaceinvoke $r14.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r15);

        r2 = (java.lang.String) $r16;

        $r17 = new java.lang.RuntimeException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to parse data binding compiler options. Params:\n");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r21, r1);

        throw $r17;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.util.Set getSupportedOptions()
    {
        android.databinding.annotationprocessor.ProcessDataBinding r0;
        java.util.Set $r1;

        r0 := @this: android.databinding.annotationprocessor.ProcessDataBinding;

        $r1 = <android.databinding.tool.DataBindingCompilerArgs: java.util.Set ALL_PARAMS>;

        return $r1;
    }

    private static java.lang.String lambda$readArguments$0(java.util.Map$Entry)
    {
        java.util.Map$Entry r0;
        java.lang.StringBuilder $r1, $r4, $r5, $r8;
        java.lang.Object $r2, $r6;
        java.lang.String $r3, $r7, $r9;

        r0 := @parameter0: java.util.Map$Entry;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = (java.lang.String) $r2;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r6 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = (java.lang.String) $r6;

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    static android.databinding.tool.DataBindingCompilerArgs access$100(android.databinding.annotationprocessor.ProcessDataBinding)
    {
        android.databinding.annotationprocessor.ProcessDataBinding r0;
        android.databinding.tool.DataBindingCompilerArgs $r1;

        r0 := @parameter0: android.databinding.annotationprocessor.ProcessDataBinding;

        $r1 = r0.<android.databinding.annotationprocessor.ProcessDataBinding: android.databinding.tool.DataBindingCompilerArgs mCompilerArgs>;

        return $r1;
    }

android.databinding.annotationprocessor.ProcessDataBinding$1
<android.databinding.annotationprocessor.ProcessDataBinding$1: android.databinding.tool.CompilerChef mChef>
<android.databinding.annotationprocessor.ProcessDataBinding$1: java.util.List mModulePackages>
<android.databinding.annotationprocessor.ProcessDataBinding$1: java.util.Map mBRVariableLookup>
<android.databinding.annotationprocessor.ProcessDataBinding$1: boolean mWrittenMapper>
<android.databinding.annotationprocessor.ProcessDataBinding$1: android.databinding.annotationprocessor.ProcessBindable val$processBindable>
<android.databinding.annotationprocessor.ProcessDataBinding$1: javax.'annotation'.processing.ProcessingEnvironment val$processingEnv>
<android.databinding.annotationprocessor.ProcessDataBinding$1: android.databinding.annotationprocessor.ProcessDataBinding this$0>
    void <init>(android.databinding.annotationprocessor.ProcessDataBinding, android.databinding.annotationprocessor.ProcessBindable, javax.'annotation'.processing.ProcessingEnvironment)
    {
        android.databinding.annotationprocessor.ProcessDataBinding$1 r0;
        android.databinding.annotationprocessor.ProcessDataBinding r1;
        android.databinding.annotationprocessor.ProcessBindable r2;
        javax.'annotation'.processing.ProcessingEnvironment r3;

        r0 := @this: android.databinding.annotationprocessor.ProcessDataBinding$1;

        r1 := @parameter0: android.databinding.annotationprocessor.ProcessDataBinding;

        r2 := @parameter1: android.databinding.annotationprocessor.ProcessBindable;

        r3 := @parameter2: javax.'annotation'.processing.ProcessingEnvironment;

        r0.<android.databinding.annotationprocessor.ProcessDataBinding$1: android.databinding.annotationprocessor.ProcessDataBinding this$0> = r1;

        r0.<android.databinding.annotationprocessor.ProcessDataBinding$1: android.databinding.annotationprocessor.ProcessBindable val$processBindable> = r2;

        r0.<android.databinding.annotationprocessor.ProcessDataBinding$1: javax.'annotation'.processing.ProcessingEnvironment val$processingEnv> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.databinding.annotationprocessor.ProcessDataBinding$1: boolean mWrittenMapper> = 0;

        return;
    }

    public void onChefReady(android.databinding.tool.CompilerChef, android.databinding.tool.store.GenClassInfoLog)
    {
        android.databinding.annotationprocessor.ProcessDataBinding$1 r0;
        android.databinding.tool.CompilerChef r1, $r4;
        android.databinding.tool.store.GenClassInfoLog r2;
        java.lang.Object[] $r3;
        android.databinding.annotationprocessor.ProcessBindable $r5;

        r0 := @this: android.databinding.annotationprocessor.ProcessDataBinding$1;

        r1 := @parameter0: android.databinding.tool.CompilerChef;

        r2 := @parameter1: android.databinding.tool.store.GenClassInfoLog;

        $r4 = r0.<android.databinding.annotationprocessor.ProcessDataBinding$1: android.databinding.tool.CompilerChef mChef>;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <android.databinding.tool.util.Preconditions: void checkNull(java.lang.Object,java.lang.String,java.lang.Object[])>($r4, "Cannot set compiler chef twice", $r3);

        $r5 = r0.<android.databinding.annotationprocessor.ProcessDataBinding$1: android.databinding.annotationprocessor.ProcessBindable val$processBindable>;

        virtualinvoke r1.<android.databinding.tool.CompilerChef: void addBRVariables(android.databinding.tool.CompilerChef$BindableHolder)>($r5);

        r0.<android.databinding.annotationprocessor.ProcessDataBinding$1: android.databinding.tool.CompilerChef mChef> = r1;

        specialinvoke r0.<android.databinding.annotationprocessor.ProcessDataBinding$1: void considerWritingMapper()>();

        return;
    }

    private void considerWritingMapper()
    {
        android.databinding.annotationprocessor.ProcessDataBinding$1 r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        android.databinding.tool.CompilerChef $r1, $r6;
        java.util.Map $r2, $r10;
        android.databinding.annotationprocessor.ProcessDataBinding $r3, $r5, $r11, $r13;
        android.databinding.tool.DataBindingCompilerArgs $r4, $r8, $r12, $r14;
        javax.'annotation'.processing.ProcessingEnvironment $r7;
        java.util.List $r9;

        r0 := @this: android.databinding.annotationprocessor.ProcessDataBinding$1;

        $z1 = r0.<android.databinding.annotationprocessor.ProcessDataBinding$1: boolean mWrittenMapper>;

        if $z1 != 0 goto label1;

        $r1 = r0.<android.databinding.annotationprocessor.ProcessDataBinding$1: android.databinding.tool.CompilerChef mChef>;

        if $r1 == null goto label1;

        $r2 = r0.<android.databinding.annotationprocessor.ProcessDataBinding$1: java.util.Map mBRVariableLookup>;

        if $r2 != null goto label2;

     label1:
        return;

     label2:
        $r3 = r0.<android.databinding.annotationprocessor.ProcessDataBinding$1: android.databinding.annotationprocessor.ProcessDataBinding this$0>;

        $r4 = staticinvoke <android.databinding.annotationprocessor.ProcessDataBinding: android.databinding.tool.DataBindingCompilerArgs access$100(android.databinding.annotationprocessor.ProcessDataBinding)>($r3);

        $z2 = virtualinvoke $r4.<android.databinding.tool.DataBindingCompilerArgs: boolean isLibrary()>();

        if $z2 == 0 goto label3;

        $r13 = r0.<android.databinding.annotationprocessor.ProcessDataBinding$1: android.databinding.annotationprocessor.ProcessDataBinding this$0>;

        $r14 = staticinvoke <android.databinding.annotationprocessor.ProcessDataBinding: android.databinding.tool.DataBindingCompilerArgs access$100(android.databinding.annotationprocessor.ProcessDataBinding)>($r13);

        $z4 = virtualinvoke $r14.<android.databinding.tool.DataBindingCompilerArgs: boolean isTestVariant()>();

        if $z4 != 0 goto label3;

        $z5 = 1;

        goto label4;

     label3:
        $z5 = 0;

     label4:
        z0 = $z5;

        if z0 == 0 goto label5;

        $r11 = r0.<android.databinding.annotationprocessor.ProcessDataBinding$1: android.databinding.annotationprocessor.ProcessDataBinding this$0>;

        $r12 = staticinvoke <android.databinding.annotationprocessor.ProcessDataBinding: android.databinding.tool.DataBindingCompilerArgs access$100(android.databinding.annotationprocessor.ProcessDataBinding)>($r11);

        $z3 = virtualinvoke $r12.<android.databinding.tool.DataBindingCompilerArgs: boolean isEnableV2()>();

        if $z3 != 0 goto label5;

        return;

     label5:
        r0.<android.databinding.annotationprocessor.ProcessDataBinding$1: boolean mWrittenMapper> = 1;

        $r6 = r0.<android.databinding.annotationprocessor.ProcessDataBinding$1: android.databinding.tool.CompilerChef mChef>;

        $r7 = r0.<android.databinding.annotationprocessor.ProcessDataBinding$1: javax.'annotation'.processing.ProcessingEnvironment val$processingEnv>;

        $r5 = r0.<android.databinding.annotationprocessor.ProcessDataBinding$1: android.databinding.annotationprocessor.ProcessDataBinding this$0>;

        $r8 = staticinvoke <android.databinding.annotationprocessor.ProcessDataBinding: android.databinding.tool.DataBindingCompilerArgs access$100(android.databinding.annotationprocessor.ProcessDataBinding)>($r5);

        $r10 = r0.<android.databinding.annotationprocessor.ProcessDataBinding$1: java.util.Map mBRVariableLookup>;

        $r9 = r0.<android.databinding.annotationprocessor.ProcessDataBinding$1: java.util.List mModulePackages>;

        virtualinvoke $r6.<android.databinding.tool.CompilerChef: void writeDataBinderMapper(javax.'annotation'.processing.ProcessingEnvironment,android.databinding.tool.DataBindingCompilerArgs,java.util.Map,java.util.List)>($r7, $r8, $r10, $r9);

        return;
    }

    public void onBrWriterReady(java.util.Map, java.util.List)
    {
        android.databinding.annotationprocessor.ProcessDataBinding$1 r0;
        java.util.Map r1, $r4;
        java.util.List r2;
        java.lang.Object[] $r3;

        r0 := @this: android.databinding.annotationprocessor.ProcessDataBinding$1;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.util.List;

        $r4 = r0.<android.databinding.annotationprocessor.ProcessDataBinding$1: java.util.Map mBRVariableLookup>;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <android.databinding.tool.util.Preconditions: void checkNull(java.lang.Object,java.lang.String,java.lang.Object[])>($r4, "Cannot set br writer twice", $r3);

        r0.<android.databinding.annotationprocessor.ProcessDataBinding$1: java.util.Map mBRVariableLookup> = r1;

        r0.<android.databinding.annotationprocessor.ProcessDataBinding$1: java.util.List mModulePackages> = r2;

        specialinvoke r0.<android.databinding.annotationprocessor.ProcessDataBinding$1: void considerWritingMapper()>();

        return;
    }

android.databinding.annotationprocessor.ProcessDataBinding$Callback
<android.databinding.annotationprocessor.ProcessDataBinding$Callback: void onChefReady(android.databinding.tool.CompilerChef,android.databinding.tool.store.GenClassInfoLog)>
<android.databinding.annotationprocessor.ProcessDataBinding$Callback: void onBrWriterReady(java.util.Map,java.util.List)>
android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep
<android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep: boolean mDone>
<android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep: android.databinding.tool.writer.JavaFileWriter mJavaFileWriter>
<android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep: android.databinding.annotationprocessor.ProcessDataBinding$Callback mCallback>
    public void <init>()
    {
        android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep r0;

        r0 := @this: android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected android.databinding.tool.writer.JavaFileWriter getWriter()
    {
        android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep r0;
        android.databinding.tool.writer.JavaFileWriter $r1;

        r0 := @this: android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep;

        $r1 = r0.<android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep: android.databinding.tool.writer.JavaFileWriter mJavaFileWriter>;

        return $r1;
    }

    private boolean runStep(javax.'annotation'.processing.RoundEnvironment, javax.'annotation'.processing.ProcessingEnvironment, android.databinding.tool.DataBindingCompilerArgs) throws javax.xml.bind.JAXBException
    {
        android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep r0;
        javax.'annotation'.processing.RoundEnvironment r1;
        javax.'annotation'.processing.ProcessingEnvironment r2;
        android.databinding.tool.DataBindingCompilerArgs r3;
        boolean $z0, $z1, $z2;

        r0 := @this: android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep;

        r1 := @parameter0: javax.'annotation'.processing.RoundEnvironment;

        r2 := @parameter1: javax.'annotation'.processing.ProcessingEnvironment;

        r3 := @parameter2: android.databinding.tool.DataBindingCompilerArgs;

        $z0 = r0.<android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep: boolean mDone>;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = virtualinvoke r0.<android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep: boolean onHandleStep(javax.'annotation'.processing.RoundEnvironment,javax.'annotation'.processing.ProcessingEnvironment,android.databinding.tool.DataBindingCompilerArgs)>(r1, r2, r3);

        r0.<android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep: boolean mDone> = $z1;

        $z2 = r0.<android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep: boolean mDone>;

        return $z2;
    }

<android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep: boolean onHandleStep(javax.'annotation'.processing.RoundEnvironment,javax.'annotation'.processing.ProcessingEnvironment,android.databinding.tool.DataBindingCompilerArgs)>
<android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep: void onProcessingOver(javax.'annotation'.processing.RoundEnvironment,javax.'annotation'.processing.ProcessingEnvironment,android.databinding.tool.DataBindingCompilerArgs)>
    static boolean access$000(android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep, javax.'annotation'.processing.RoundEnvironment, javax.'annotation'.processing.ProcessingEnvironment, android.databinding.tool.DataBindingCompilerArgs) throws javax.xml.bind.JAXBException
    {
        android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep r0;
        javax.'annotation'.processing.RoundEnvironment r1;
        javax.'annotation'.processing.ProcessingEnvironment r2;
        android.databinding.tool.DataBindingCompilerArgs r3;
        boolean $z0;

        r0 := @parameter0: android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep;

        r1 := @parameter1: javax.'annotation'.processing.RoundEnvironment;

        r2 := @parameter2: javax.'annotation'.processing.ProcessingEnvironment;

        r3 := @parameter3: android.databinding.tool.DataBindingCompilerArgs;

        $z0 = specialinvoke r0.<android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep: boolean runStep(javax.'annotation'.processing.RoundEnvironment,javax.'annotation'.processing.ProcessingEnvironment,android.databinding.tool.DataBindingCompilerArgs)>(r1, r2, r3);

        return $z0;
    }

    static android.databinding.tool.writer.JavaFileWriter access$202(android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep, android.databinding.tool.writer.JavaFileWriter)
    {
        android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep r0;
        android.databinding.tool.writer.JavaFileWriter r1;

        r0 := @parameter0: android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep;

        r1 := @parameter1: android.databinding.tool.writer.JavaFileWriter;

        r0.<android.databinding.annotationprocessor.ProcessDataBinding$ProcessingStep: android.databinding.tool.writer.JavaFileWriter mJavaFileWriter> = r1;

        return r1;
    }

