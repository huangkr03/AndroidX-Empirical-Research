androidx.transition.GhostViewPlatform
<androidx.transition.GhostViewPlatform: java.lang.String TAG>
<androidx.transition.GhostViewPlatform: java.lang.Class sGhostViewClass>
<androidx.transition.GhostViewPlatform: boolean sGhostViewClassFetched>
<androidx.transition.GhostViewPlatform: java.lang.reflect.Method sAddGhostMethod>
<androidx.transition.GhostViewPlatform: boolean sAddGhostMethodFetched>
<androidx.transition.GhostViewPlatform: java.lang.reflect.Method sRemoveGhostMethod>
<androidx.transition.GhostViewPlatform: boolean sRemoveGhostMethodFetched>
<androidx.transition.GhostViewPlatform: android.view.View mGhostView>
    static androidx.transition.GhostView addGhost(android.view.View, android.view.ViewGroup, android.graphics.Matrix)
    {
        android.view.View r0, $r8;
        android.view.ViewGroup r1;
        android.graphics.Matrix r2;
        java.lang.reflect.Method $r3, $r6;
        androidx.transition.GhostViewPlatform $r4;
        java.lang.Object[] $r5;
        java.lang.Object $r7;
        java.lang.Throwable $r9, $r10, $r12, r13, r14;
        java.lang.RuntimeException $r11;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.view.ViewGroup;

        r2 := @parameter2: android.graphics.Matrix;

        staticinvoke <androidx.transition.GhostViewPlatform: void fetchAddGhostMethod()>();

        $r3 = <androidx.transition.GhostViewPlatform: java.lang.reflect.Method sAddGhostMethod>;

        if $r3 == null goto label5;

     label1:
        $r4 = new androidx.transition.GhostViewPlatform;

        $r6 = <androidx.transition.GhostViewPlatform: java.lang.reflect.Method sAddGhostMethod>;

        $r5 = newarray (java.lang.Object)[3];

        $r5[0] = r0;

        $r5[1] = r1;

        $r5[2] = r2;

        $r7 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r5);

        $r8 = (android.view.View) $r7;

        specialinvoke $r4.<androidx.transition.GhostViewPlatform: void <init>(android.view.View)>($r8);

     label2:
        return $r4;

     label3:
        $r9 := @caughtexception;

        r13 = $r9;

        goto label5;

     label4:
        $r10 := @caughtexception;

        r14 = $r10;

        $r11 = new java.lang.RuntimeException;

        $r12 = virtualinvoke r14.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r12);

        throw $r11;

     label5:
        return null;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label4;
    }

    static void removeGhost(android.view.View)
    {
        android.view.View r0;
        java.lang.reflect.Method $r1, $r3;
        java.lang.Object[] $r2;
        java.lang.Throwable $r5, $r7, $r8, r9, r10;
        java.lang.RuntimeException $r6;

        r0 := @parameter0: android.view.View;

        staticinvoke <androidx.transition.GhostViewPlatform: void fetchRemoveGhostMethod()>();

        $r1 = <androidx.transition.GhostViewPlatform: java.lang.reflect.Method sRemoveGhostMethod>;

        if $r1 == null goto label5;

     label1:
        $r3 = <androidx.transition.GhostViewPlatform: java.lang.reflect.Method sRemoveGhostMethod>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r0;

        virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r2);

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        r9 = $r8;

        goto label5;

     label4:
        $r5 := @caughtexception;

        r10 = $r5;

        $r6 = new java.lang.RuntimeException;

        $r7 = virtualinvoke r10.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r7);

        throw $r6;

     label5:
        return;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label4;
    }

    private void <init>(android.view.View)
    {
        androidx.transition.GhostViewPlatform r0;
        android.view.View r1;

        r0 := @this: androidx.transition.GhostViewPlatform;

        r1 := @parameter0: android.view.View;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.transition.GhostViewPlatform: android.view.View mGhostView> = r1;

        return;
    }

    public void setVisibility(int)
    {
        androidx.transition.GhostViewPlatform r0;
        int i0;
        android.view.View $r1;

        r0 := @this: androidx.transition.GhostViewPlatform;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.transition.GhostViewPlatform: android.view.View mGhostView>;

        virtualinvoke $r1.<android.view.View: void setVisibility(int)>(i0);

        return;
    }

    public void reserveEndViewTransition(android.view.ViewGroup, android.view.View)
    {
        androidx.transition.GhostViewPlatform r0;
        android.view.ViewGroup r1;
        android.view.View r2;

        r0 := @this: androidx.transition.GhostViewPlatform;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.view.View;

        return;
    }

    private static void fetchGhostViewClass()
    {
        java.lang.Throwable r0, $r2;
        boolean $z0;
        java.lang.Class $r1;

        $z0 = <androidx.transition.GhostViewPlatform: boolean sGhostViewClassFetched>;

        if $z0 != 0 goto label5;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.view.GhostView");

        <androidx.transition.GhostViewPlatform: java.lang.Class sGhostViewClass> = $r1;

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        r0 = $r2;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("GhostViewApi21", "Failed to retrieve GhostView class", r0);

     label4:
        <androidx.transition.GhostViewPlatform: boolean sGhostViewClassFetched> = 1;

     label5:
        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    private static void fetchAddGhostMethod()
    {
        java.lang.Throwable r0, $r5;
        boolean $z0;
        java.lang.Class[] $r1;
        java.lang.Class $r2;
        java.lang.reflect.Method $r3, $r4;

        $z0 = <androidx.transition.GhostViewPlatform: boolean sAddGhostMethodFetched>;

        if $z0 != 0 goto label5;

     label1:
        staticinvoke <androidx.transition.GhostViewPlatform: void fetchGhostViewClass()>();

        $r2 = <androidx.transition.GhostViewPlatform: java.lang.Class sGhostViewClass>;

        $r1 = newarray (java.lang.Class)[3];

        $r1[0] = class "Landroid/view/View;";

        $r1[1] = class "Landroid/view/ViewGroup;";

        $r1[2] = class "Landroid/graphics/Matrix;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("addGhost", $r1);

        <androidx.transition.GhostViewPlatform: java.lang.reflect.Method sAddGhostMethod> = $r3;

        $r4 = <androidx.transition.GhostViewPlatform: java.lang.reflect.Method sAddGhostMethod>;

        virtualinvoke $r4.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r0 = $r5;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("GhostViewApi21", "Failed to retrieve addGhost method", r0);

     label4:
        <androidx.transition.GhostViewPlatform: boolean sAddGhostMethodFetched> = 1;

     label5:
        return;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
    }

    private static void fetchRemoveGhostMethod()
    {
        java.lang.Throwable r0, $r5;
        boolean $z0;
        java.lang.Class[] $r1;
        java.lang.Class $r2;
        java.lang.reflect.Method $r3, $r4;

        $z0 = <androidx.transition.GhostViewPlatform: boolean sRemoveGhostMethodFetched>;

        if $z0 != 0 goto label5;

     label1:
        staticinvoke <androidx.transition.GhostViewPlatform: void fetchGhostViewClass()>();

        $r2 = <androidx.transition.GhostViewPlatform: java.lang.Class sGhostViewClass>;

        $r1 = newarray (java.lang.Class)[1];

        $r1[0] = class "Landroid/view/View;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("removeGhost", $r1);

        <androidx.transition.GhostViewPlatform: java.lang.reflect.Method sRemoveGhostMethod> = $r3;

        $r4 = <androidx.transition.GhostViewPlatform: java.lang.reflect.Method sRemoveGhostMethod>;

        virtualinvoke $r4.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r0 = $r5;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("GhostViewApi21", "Failed to retrieve removeGhost method", r0);

     label4:
        <androidx.transition.GhostViewPlatform: boolean sRemoveGhostMethodFetched> = 1;

     label5:
        return;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
    }

