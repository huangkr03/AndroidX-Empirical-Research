androidx.compose.animation.core.Animatable
<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.TwoWayConverter typeConverter>
<androidx.compose.animation.core.Animatable: java.lang.Object visibilityThreshold>
<androidx.compose.animation.core.Animatable: java.lang.String label>
<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationState internalState>
<androidx.compose.animation.core.Animatable: androidx.compose.runtime.MutableState isRunning$delegate>
<androidx.compose.animation.core.Animatable: androidx.compose.runtime.MutableState targetValue$delegate>
<androidx.compose.animation.core.Animatable: java.lang.Object lowerBound>
<androidx.compose.animation.core.Animatable: java.lang.Object upperBound>
<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.MutatorMutex mutatorMutex>
<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.SpringSpec defaultSpringSpec>
<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationVector negativeInfinityBounds>
<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationVector positiveInfinityBounds>
<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationVector lowerBoundVector>
<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationVector upperBoundVector>
<androidx.compose.animation.core.Animatable: int $stable>
    public void <init>(java.lang.Object, androidx.compose.animation.core.TwoWayConverter, java.lang.Object, java.lang.String)
    {
        androidx.compose.animation.core.Animatable r0;
        java.lang.Object r1, r3, $r12;
        androidx.compose.animation.core.TwoWayConverter r2, $r6;
        java.lang.String r4;
        androidx.compose.animation.core.AnimationState $r5;
        java.lang.Boolean $r7;
        androidx.compose.runtime.MutableState $r8, $r9;
        androidx.compose.animation.core.MutatorMutex $r10;
        androidx.compose.animation.core.SpringSpec $r11;
        androidx.compose.animation.core.AnimationVector $r13, $r14, $r15, $r16;

        r0 := @this: androidx.compose.animation.core.Animatable;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: androidx.compose.animation.core.TwoWayConverter;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "typeConverter");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "label");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.TwoWayConverter typeConverter> = r2;

        r0.<androidx.compose.animation.core.Animatable: java.lang.Object visibilityThreshold> = r3;

        r0.<androidx.compose.animation.core.Animatable: java.lang.String label> = r4;

        $r5 = new androidx.compose.animation.core.AnimationState;

        $r6 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.TwoWayConverter typeConverter>;

        specialinvoke $r5.<androidx.compose.animation.core.AnimationState: void <init>(androidx.compose.animation.core.TwoWayConverter,java.lang.Object,androidx.compose.animation.core.AnimationVector,long,long,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r6, r1, null, 0L, 0L, 0, 60, null);

        r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationState internalState> = $r5;

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r8 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r7, null, 2, null);

        r0.<androidx.compose.animation.core.Animatable: androidx.compose.runtime.MutableState isRunning$delegate> = $r8;

        $r9 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>(r1, null, 2, null);

        r0.<androidx.compose.animation.core.Animatable: androidx.compose.runtime.MutableState targetValue$delegate> = $r9;

        $r10 = new androidx.compose.animation.core.MutatorMutex;

        specialinvoke $r10.<androidx.compose.animation.core.MutatorMutex: void <init>()>();

        r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.MutatorMutex mutatorMutex> = $r10;

        $r11 = new androidx.compose.animation.core.SpringSpec;

        $r12 = r0.<androidx.compose.animation.core.Animatable: java.lang.Object visibilityThreshold>;

        specialinvoke $r11.<androidx.compose.animation.core.SpringSpec: void <init>(float,float,java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0.0F, 0.0F, $r12, 3, null);

        r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.SpringSpec defaultSpringSpec> = $r11;

        $r13 = specialinvoke r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationVector createVector(java.lang.Object,float)>(r1, #-InfinityF);

        r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationVector negativeInfinityBounds> = $r13;

        $r14 = specialinvoke r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationVector createVector(java.lang.Object,float)>(r1, #InfinityF);

        r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationVector positiveInfinityBounds> = $r14;

        $r15 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationVector negativeInfinityBounds>;

        r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationVector lowerBoundVector> = $r15;

        $r16 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationVector positiveInfinityBounds>;

        r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationVector upperBoundVector> = $r16;

        return;
    }

    public void <init>(java.lang.Object, androidx.compose.animation.core.TwoWayConverter, java.lang.Object, java.lang.String, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.animation.core.Animatable r0;
        java.lang.Object r1, r4;
        androidx.compose.animation.core.TwoWayConverter r2;
        int i0, $i1, $i2;
        kotlin.jvm.internal.DefaultConstructorMarker r3;
        java.lang.String r5;

        r0 := @this: androidx.compose.animation.core.Animatable;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: androidx.compose.animation.core.TwoWayConverter;

        r4 := @parameter2: java.lang.Object;

        r5 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        r3 := @parameter5: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        r4 = null;

     label1:
        $i2 = i0 & 8;

        if $i2 == 0 goto label2;

        r5 = "Animatable";

     label2:
        specialinvoke r0.<androidx.compose.animation.core.Animatable: void <init>(java.lang.Object,androidx.compose.animation.core.TwoWayConverter,java.lang.Object,java.lang.String)>(r1, r2, r4, r5);

        return;
    }

    public final androidx.compose.animation.core.TwoWayConverter getTypeConverter()
    {
        androidx.compose.animation.core.Animatable r0;
        androidx.compose.animation.core.TwoWayConverter $r1;

        r0 := @this: androidx.compose.animation.core.Animatable;

        $r1 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.TwoWayConverter typeConverter>;

        return $r1;
    }

    public final java.lang.String getLabel()
    {
        androidx.compose.animation.core.Animatable r0;
        java.lang.String $r1;

        r0 := @this: androidx.compose.animation.core.Animatable;

        $r1 = r0.<androidx.compose.animation.core.Animatable: java.lang.String label>;

        return $r1;
    }

    public void <init>(java.lang.Object, androidx.compose.animation.core.TwoWayConverter, java.lang.Object)
    {
        androidx.compose.animation.core.Animatable r0;
        java.lang.Object r1, r3;
        androidx.compose.animation.core.TwoWayConverter r2;

        r0 := @this: androidx.compose.animation.core.Animatable;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: androidx.compose.animation.core.TwoWayConverter;

        r3 := @parameter2: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "typeConverter");

        specialinvoke r0.<androidx.compose.animation.core.Animatable: void <init>(java.lang.Object,androidx.compose.animation.core.TwoWayConverter,java.lang.Object,java.lang.String)>(r1, r2, r3, "Animatable");

        return;
    }

    public void <init>(java.lang.Object, androidx.compose.animation.core.TwoWayConverter, java.lang.Object, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.animation.core.Animatable r0;
        java.lang.Object r1, r4;
        androidx.compose.animation.core.TwoWayConverter r2;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r3;

        r0 := @this: androidx.compose.animation.core.Animatable;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: androidx.compose.animation.core.TwoWayConverter;

        r4 := @parameter2: java.lang.Object;

        i0 := @parameter3: int;

        r3 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        r4 = null;

     label1:
        specialinvoke r0.<androidx.compose.animation.core.Animatable: void <init>(java.lang.Object,androidx.compose.animation.core.TwoWayConverter,java.lang.Object)>(r1, r2, r4);

        return;
    }

    public final androidx.compose.animation.core.AnimationState getInternalState$animation_core_release()
    {
        androidx.compose.animation.core.Animatable r0;
        androidx.compose.animation.core.AnimationState $r1;

        r0 := @this: androidx.compose.animation.core.Animatable;

        $r1 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationState internalState>;

        return $r1;
    }

    public final java.lang.Object getValue()
    {
        androidx.compose.animation.core.Animatable r0;
        androidx.compose.animation.core.AnimationState $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.compose.animation.core.Animatable;

        $r1 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationState internalState>;

        $r2 = virtualinvoke $r1.<androidx.compose.animation.core.AnimationState: java.lang.Object getValue()>();

        return $r2;
    }

    public final androidx.compose.animation.core.AnimationVector getVelocityVector()
    {
        androidx.compose.animation.core.Animatable r0;
        androidx.compose.animation.core.AnimationState $r1;
        androidx.compose.animation.core.AnimationVector $r2;

        r0 := @this: androidx.compose.animation.core.Animatable;

        $r1 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationState internalState>;

        $r2 = virtualinvoke $r1.<androidx.compose.animation.core.AnimationState: androidx.compose.animation.core.AnimationVector getVelocityVector()>();

        return $r2;
    }

    public final java.lang.Object getVelocity()
    {
        androidx.compose.animation.core.Animatable r0;
        androidx.compose.animation.core.TwoWayConverter $r1;
        kotlin.jvm.functions.Function1 $r2;
        androidx.compose.animation.core.AnimationVector $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.compose.animation.core.Animatable;

        $r1 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.TwoWayConverter typeConverter>;

        $r2 = interfaceinvoke $r1.<androidx.compose.animation.core.TwoWayConverter: kotlin.jvm.functions.Function1 getConvertFromVector()>();

        $r3 = virtualinvoke r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationVector getVelocityVector()>();

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        return $r4;
    }

    public final boolean isRunning()
    {
        androidx.compose.animation.core.Animatable r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        r0 := @this: androidx.compose.animation.core.Animatable;

        $r2 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.runtime.MutableState isRunning$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    private final void setRunning(boolean)
    {
        androidx.compose.animation.core.Animatable r0;
        boolean z0;
        androidx.compose.runtime.MutableState $r1;
        java.lang.Boolean r2;

        r0 := @this: androidx.compose.animation.core.Animatable;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.runtime.MutableState isRunning$delegate>;

        r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        interfaceinvoke $r1.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r2);

        return;
    }

    public final java.lang.Object getTargetValue()
    {
        androidx.compose.animation.core.Animatable r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.compose.animation.core.Animatable;

        $r2 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.runtime.MutableState targetValue$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        return $r3;
    }

    private final void setTargetValue(java.lang.Object)
    {
        androidx.compose.animation.core.Animatable r0;
        java.lang.Object r1;
        androidx.compose.runtime.MutableState $r2;

        r0 := @this: androidx.compose.animation.core.Animatable;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.runtime.MutableState targetValue$delegate>;

        interfaceinvoke $r2.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r1);

        return;
    }

    public final java.lang.Object getLowerBound()
    {
        androidx.compose.animation.core.Animatable r0;
        java.lang.Object $r1;

        r0 := @this: androidx.compose.animation.core.Animatable;

        $r1 = r0.<androidx.compose.animation.core.Animatable: java.lang.Object lowerBound>;

        return $r1;
    }

    public final java.lang.Object getUpperBound()
    {
        androidx.compose.animation.core.Animatable r0;
        java.lang.Object $r1;

        r0 := @this: androidx.compose.animation.core.Animatable;

        $r1 = r0.<androidx.compose.animation.core.Animatable: java.lang.Object upperBound>;

        return $r1;
    }

    public final androidx.compose.animation.core.SpringSpec getDefaultSpringSpec$animation_core_release()
    {
        androidx.compose.animation.core.Animatable r0;
        androidx.compose.animation.core.SpringSpec $r1;

        r0 := @this: androidx.compose.animation.core.Animatable;

        $r1 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.SpringSpec defaultSpringSpec>;

        return $r1;
    }

    private final androidx.compose.animation.core.AnimationVector createVector(java.lang.Object, float)
    {
        androidx.compose.animation.core.Animatable r0;
        java.lang.Object $r1, $r5;
        float f0;
        androidx.compose.animation.core.AnimationVector r2;
        int i0, i1;
        androidx.compose.animation.core.TwoWayConverter $r3;
        kotlin.jvm.functions.Function1 $r4;

        r0 := @this: androidx.compose.animation.core.Animatable;

        $r1 := @parameter0: java.lang.Object;

        f0 := @parameter1: float;

        $r3 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.TwoWayConverter typeConverter>;

        $r4 = interfaceinvoke $r3.<androidx.compose.animation.core.TwoWayConverter: kotlin.jvm.functions.Function1 getConvertToVector()>();

        $r5 = interfaceinvoke $r4.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r1);

        r2 = (androidx.compose.animation.core.AnimationVector) $r5;

        i1 = 0;

        i0 = virtualinvoke r2.<androidx.compose.animation.core.AnimationVector: int getSize$animation_core_release()>();

     label1:
        if i1 >= i0 goto label2;

        virtualinvoke r2.<androidx.compose.animation.core.AnimationVector: void set$animation_core_release(int,float)>(i1, f0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r2;
    }

    public final void updateBounds(java.lang.Object, java.lang.Object)
    {
        androidx.compose.animation.core.Animatable r0;
        java.lang.Object r1, r2, $r5, $r6, $r19, $r22, r27;
        androidx.compose.animation.core.AnimationVector r3, r4, $r23, $r25;
        boolean $z0, $z1, $z4;
        androidx.compose.animation.core.AnimationState $r7;
        float $f0, $f1;
        byte $b0;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        java.lang.IllegalStateException $r15;
        java.lang.String $r16, $r26;
        androidx.compose.animation.core.TwoWayConverter $r17, $r20;
        kotlin.jvm.functions.Function1 $r18, $r21;
        int i1, $i2;

        r0 := @this: androidx.compose.animation.core.Animatable;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        if r1 == null goto label01;

        $r20 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.TwoWayConverter typeConverter>;

        $r21 = interfaceinvoke $r20.<androidx.compose.animation.core.TwoWayConverter: kotlin.jvm.functions.Function1 getConvertToVector()>();

        $r22 = interfaceinvoke $r21.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        $r23 = (androidx.compose.animation.core.AnimationVector) $r22;

        if $r23 != null goto label02;

     label01:
        $r23 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationVector negativeInfinityBounds>;

     label02:
        r3 = $r23;

        if r2 == null goto label03;

        $r17 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.TwoWayConverter typeConverter>;

        $r18 = interfaceinvoke $r17.<androidx.compose.animation.core.TwoWayConverter: kotlin.jvm.functions.Function1 getConvertToVector()>();

        $r19 = interfaceinvoke $r18.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r2);

        $r25 = (androidx.compose.animation.core.AnimationVector) $r19;

        if $r25 != null goto label04;

     label03:
        $r25 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationVector positiveInfinityBounds>;

     label04:
        r4 = $r25;

        i1 = 0;

        $i2 = virtualinvoke r3.<androidx.compose.animation.core.AnimationVector: int getSize$animation_core_release()>();

     label05:
        if i1 >= $i2 goto label09;

        $f0 = virtualinvoke r3.<androidx.compose.animation.core.AnimationVector: float get$animation_core_release(int)>(i1);

        $f1 = virtualinvoke r4.<androidx.compose.animation.core.AnimationVector: float get$animation_core_release(int)>(i1);

        $b0 = $f0 cmpg $f1;

        if $b0 > 0 goto label06;

        $z4 = 1;

        goto label07;

     label06:
        $z4 = 0;

     label07:
        if $z4 != 0 goto label08;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Lower bound must be no greater than upper bound on *all* dimensions. The provided lower bound: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is greater than upper bound ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on index ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r26 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = new java.lang.IllegalStateException;

        $r16 = virtualinvoke $r26.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label08:
        i1 = i1 + 1;

        goto label05;

     label09:
        r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationVector lowerBoundVector> = r3;

        r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationVector upperBoundVector> = r4;

        r0.<androidx.compose.animation.core.Animatable: java.lang.Object upperBound> = r2;

        r0.<androidx.compose.animation.core.Animatable: java.lang.Object lowerBound> = r1;

        $z0 = virtualinvoke r0.<androidx.compose.animation.core.Animatable: boolean isRunning()>();

        if $z0 != 0 goto label10;

        $r5 = virtualinvoke r0.<androidx.compose.animation.core.Animatable: java.lang.Object getValue()>();

        r27 = specialinvoke r0.<androidx.compose.animation.core.Animatable: java.lang.Object clampToBounds(java.lang.Object)>($r5);

        $r6 = virtualinvoke r0.<androidx.compose.animation.core.Animatable: java.lang.Object getValue()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r27, $r6);

        if $z1 != 0 goto label10;

        $r7 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationState internalState>;

        virtualinvoke $r7.<androidx.compose.animation.core.AnimationState: void setValue$animation_core_release(java.lang.Object)>(r27);

     label10:
        return;
    }

    public static void updateBounds$default(androidx.compose.animation.core.Animatable, java.lang.Object, java.lang.Object, int, java.lang.Object)
    {
        androidx.compose.animation.core.Animatable r0;
        int i0, $i1, $i2;
        java.lang.Object r1, r2, r3;

        r0 := @parameter0: androidx.compose.animation.core.Animatable;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        i0 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r2 = r0.<androidx.compose.animation.core.Animatable: java.lang.Object lowerBound>;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r3 = r0.<androidx.compose.animation.core.Animatable: java.lang.Object upperBound>;

     label2:
        virtualinvoke r0.<androidx.compose.animation.core.Animatable: void updateBounds(java.lang.Object,java.lang.Object)>(r2, r3);

        return;
    }

    public final java.lang.Object animateTo(java.lang.Object, androidx.compose.animation.core.AnimationSpec, java.lang.Object, kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation)
    {
        androidx.compose.animation.core.Animatable r0;
        java.lang.Object r1, r3, r7, $r10;
        androidx.compose.animation.core.AnimationSpec r2;
        kotlin.jvm.functions.Function1 r4;
        kotlin.coroutines.Continuation $r5;
        androidx.compose.animation.core.TargetBasedAnimation r6;
        androidx.compose.animation.core.TwoWayConverter r8;
        androidx.compose.animation.core.Animation $r9;

        r0 := @this: androidx.compose.animation.core.Animatable;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: androidx.compose.animation.core.AnimationSpec;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: kotlin.jvm.functions.Function1;

        $r5 := @parameter4: kotlin.coroutines.Continuation;

        r7 = virtualinvoke r0.<androidx.compose.animation.core.Animatable: java.lang.Object getValue()>();

        r8 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.TwoWayConverter typeConverter>;

        r6 = staticinvoke <androidx.compose.animation.core.AnimationKt: androidx.compose.animation.core.TargetBasedAnimation TargetBasedAnimation(androidx.compose.animation.core.AnimationSpec,androidx.compose.animation.core.TwoWayConverter,java.lang.Object,java.lang.Object,java.lang.Object)>(r2, r8, r7, r1, r3);

        $r9 = (androidx.compose.animation.core.Animation) r6;

        $r10 = specialinvoke r0.<androidx.compose.animation.core.Animatable: java.lang.Object runAnimation(androidx.compose.animation.core.Animation,java.lang.Object,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>($r9, r3, r4, $r5);

        return $r10;
    }

    public static java.lang.Object animateTo$default(androidx.compose.animation.core.Animatable, java.lang.Object, androidx.compose.animation.core.AnimationSpec, java.lang.Object, kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation, int, java.lang.Object)
    {
        androidx.compose.animation.core.Animatable r0;
        java.lang.Object r1, r3, $r4, r7;
        kotlin.coroutines.Continuation r2;
        int i0, $i1, $i2, $i3;
        androidx.compose.animation.core.SpringSpec $r5;
        androidx.compose.animation.core.AnimationSpec r6;
        kotlin.jvm.functions.Function1 r8;

        r0 := @parameter0: androidx.compose.animation.core.Animatable;

        r1 := @parameter1: java.lang.Object;

        r6 := @parameter2: androidx.compose.animation.core.AnimationSpec;

        r7 := @parameter3: java.lang.Object;

        r8 := @parameter4: kotlin.jvm.functions.Function1;

        r2 := @parameter5: kotlin.coroutines.Continuation;

        i0 := @parameter6: int;

        r3 := @parameter7: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        $r5 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.SpringSpec defaultSpringSpec>;

        r6 = (androidx.compose.animation.core.AnimationSpec) $r5;

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        r7 = virtualinvoke r0.<androidx.compose.animation.core.Animatable: java.lang.Object getVelocity()>();

     label2:
        $i3 = i0 & 8;

        if $i3 == 0 goto label3;

        r8 = null;

     label3:
        $r4 = virtualinvoke r0.<androidx.compose.animation.core.Animatable: java.lang.Object animateTo(java.lang.Object,androidx.compose.animation.core.AnimationSpec,java.lang.Object,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>(r1, r6, r7, r8, r2);

        return $r4;
    }

    public final java.lang.Object animateDecay(java.lang.Object, androidx.compose.animation.core.DecayAnimationSpec, kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation)
    {
        androidx.compose.animation.core.Animatable r0;
        java.lang.Object r1, r6, $r11, $r14;
        androidx.compose.animation.core.DecayAnimationSpec r2;
        kotlin.jvm.functions.Function1 r3, $r10;
        kotlin.coroutines.Continuation $r4;
        androidx.compose.animation.core.DecayAnimation r5, $r12;
        androidx.compose.animation.core.AnimationVector r7;
        androidx.compose.animation.core.TwoWayConverter r8, $r9;
        androidx.compose.animation.core.Animation $r13;

        r0 := @this: androidx.compose.animation.core.Animatable;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: androidx.compose.animation.core.DecayAnimationSpec;

        r3 := @parameter2: kotlin.jvm.functions.Function1;

        $r4 := @parameter3: kotlin.coroutines.Continuation;

        r6 = virtualinvoke r0.<androidx.compose.animation.core.Animatable: java.lang.Object getValue()>();

        $r9 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.TwoWayConverter typeConverter>;

        $r10 = interfaceinvoke $r9.<androidx.compose.animation.core.TwoWayConverter: kotlin.jvm.functions.Function1 getConvertToVector()>();

        $r11 = interfaceinvoke $r10.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        r7 = (androidx.compose.animation.core.AnimationVector) $r11;

        r8 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.TwoWayConverter typeConverter>;

        $r12 = new androidx.compose.animation.core.DecayAnimation;

        specialinvoke $r12.<androidx.compose.animation.core.DecayAnimation: void <init>(androidx.compose.animation.core.DecayAnimationSpec,androidx.compose.animation.core.TwoWayConverter,java.lang.Object,androidx.compose.animation.core.AnimationVector)>(r2, r8, r6, r7);

        r5 = $r12;

        $r13 = (androidx.compose.animation.core.Animation) r5;

        $r14 = specialinvoke r0.<androidx.compose.animation.core.Animatable: java.lang.Object runAnimation(androidx.compose.animation.core.Animation,java.lang.Object,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>($r13, r1, r3, $r4);

        return $r14;
    }

    public static java.lang.Object animateDecay$default(androidx.compose.animation.core.Animatable, java.lang.Object, androidx.compose.animation.core.DecayAnimationSpec, kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation, int, java.lang.Object)
    {
        androidx.compose.animation.core.Animatable r0;
        java.lang.Object r1, r4, $r5;
        androidx.compose.animation.core.DecayAnimationSpec r2;
        kotlin.coroutines.Continuation r3;
        int i0, $i1;
        kotlin.jvm.functions.Function1 r6;

        r0 := @parameter0: androidx.compose.animation.core.Animatable;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: androidx.compose.animation.core.DecayAnimationSpec;

        r6 := @parameter3: kotlin.jvm.functions.Function1;

        r3 := @parameter4: kotlin.coroutines.Continuation;

        i0 := @parameter5: int;

        r4 := @parameter6: java.lang.Object;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        r6 = null;

     label1:
        $r5 = virtualinvoke r0.<androidx.compose.animation.core.Animatable: java.lang.Object animateDecay(java.lang.Object,androidx.compose.animation.core.DecayAnimationSpec,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>(r1, r2, r6, r3);

        return $r5;
    }

    private final java.lang.Object runAnimation(androidx.compose.animation.core.Animation, java.lang.Object, kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation)
    {
        androidx.compose.animation.core.Animatable r0;
        androidx.compose.animation.core.Animation r1;
        java.lang.Object r2, $r9;
        kotlin.jvm.functions.Function1 r3, $r8;
        kotlin.coroutines.Continuation $r4;
        long l0;
        androidx.compose.animation.core.AnimationState $r5;
        androidx.compose.animation.core.Animatable$runAnimation$2 $r6;
        androidx.compose.animation.core.MutatorMutex $r7;

        r0 := @this: androidx.compose.animation.core.Animatable;

        r1 := @parameter0: androidx.compose.animation.core.Animation;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: kotlin.jvm.functions.Function1;

        $r4 := @parameter3: kotlin.coroutines.Continuation;

        $r5 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationState internalState>;

        l0 = virtualinvoke $r5.<androidx.compose.animation.core.AnimationState: long getLastFrameTimeNanos()>();

        $r7 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.MutatorMutex mutatorMutex>;

        $r6 = new androidx.compose.animation.core.Animatable$runAnimation$2;

        specialinvoke $r6.<androidx.compose.animation.core.Animatable$runAnimation$2: void <init>(androidx.compose.animation.core.Animatable,java.lang.Object,androidx.compose.animation.core.Animation,long,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>(r0, r2, r1, l0, r3, null);

        $r8 = (kotlin.jvm.functions.Function1) $r6;

        $r9 = staticinvoke <androidx.compose.animation.core.MutatorMutex: java.lang.Object mutate$default(androidx.compose.animation.core.MutatorMutex,androidx.compose.animation.core.MutatePriority,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation,int,java.lang.Object)>($r7, null, $r8, $r4, 1, null);

        return $r9;
    }

    private final java.lang.Object clampToBounds(java.lang.Object)
    {
        androidx.compose.animation.core.Animatable r0;
        java.lang.Object r1, $r7, $r10;
        androidx.compose.animation.core.AnimationVector r2, $r3, $r4, $r11, $r12, $r13, $r14, $r15, $r16;
        int i0, i3;
        boolean $z0, $z1, z2;
        androidx.compose.animation.core.TwoWayConverter $r5, $r8;
        kotlin.jvm.functions.Function1 $r6, $r9;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        byte $b1, $b2;

        r0 := @this: androidx.compose.animation.core.Animatable;

        r1 := @parameter0: java.lang.Object;

        $r4 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationVector lowerBoundVector>;

        $r3 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationVector negativeInfinityBounds>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z0 == 0 goto label1;

        $r16 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationVector upperBoundVector>;

        $r15 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationVector positiveInfinityBounds>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r16, $r15);

        if $z1 == 0 goto label1;

        return r1;

     label1:
        $r5 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.TwoWayConverter typeConverter>;

        $r6 = interfaceinvoke $r5.<androidx.compose.animation.core.TwoWayConverter: kotlin.jvm.functions.Function1 getConvertToVector()>();

        $r7 = interfaceinvoke $r6.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        r2 = (androidx.compose.animation.core.AnimationVector) $r7;

        z2 = 0;

        i3 = 0;

        i0 = virtualinvoke r2.<androidx.compose.animation.core.AnimationVector: int getSize$animation_core_release()>();

     label2:
        if i3 >= i0 goto label5;

        $f0 = virtualinvoke r2.<androidx.compose.animation.core.AnimationVector: float get$animation_core_release(int)>(i3);

        $r11 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationVector lowerBoundVector>;

        $f1 = virtualinvoke $r11.<androidx.compose.animation.core.AnimationVector: float get$animation_core_release(int)>(i3);

        $b1 = $f0 cmpg $f1;

        if $b1 < 0 goto label3;

        $f6 = virtualinvoke r2.<androidx.compose.animation.core.AnimationVector: float get$animation_core_release(int)>(i3);

        $r14 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationVector upperBoundVector>;

        $f7 = virtualinvoke $r14.<androidx.compose.animation.core.AnimationVector: float get$animation_core_release(int)>(i3);

        $b2 = $f6 cmpl $f7;

        if $b2 <= 0 goto label4;

     label3:
        z2 = 1;

        $f2 = virtualinvoke r2.<androidx.compose.animation.core.AnimationVector: float get$animation_core_release(int)>(i3);

        $r12 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationVector lowerBoundVector>;

        $f3 = virtualinvoke $r12.<androidx.compose.animation.core.AnimationVector: float get$animation_core_release(int)>(i3);

        $r13 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationVector upperBoundVector>;

        $f4 = virtualinvoke $r13.<androidx.compose.animation.core.AnimationVector: float get$animation_core_release(int)>(i3);

        $f5 = staticinvoke <kotlin.ranges.RangesKt: float coerceIn(float,float,float)>($f2, $f3, $f4);

        virtualinvoke r2.<androidx.compose.animation.core.AnimationVector: void set$animation_core_release(int,float)>(i3, $f5);

     label4:
        i3 = i3 + 1;

        goto label2;

     label5:
        if z2 == 0 goto label6;

        $r8 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.TwoWayConverter typeConverter>;

        $r9 = interfaceinvoke $r8.<androidx.compose.animation.core.TwoWayConverter: kotlin.jvm.functions.Function1 getConvertFromVector()>();

        $r10 = interfaceinvoke $r9.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r2);

        return $r10;

     label6:
        return r1;
    }

    private final void endAnimation()
    {
        androidx.compose.animation.core.Animatable r0;
        androidx.compose.animation.core.AnimationState r1;
        androidx.compose.animation.core.AnimationVector $r3;

        r0 := @this: androidx.compose.animation.core.Animatable;

        r1 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationState internalState>;

        $r3 = virtualinvoke r1.<androidx.compose.animation.core.AnimationState: androidx.compose.animation.core.AnimationVector getVelocityVector()>();

        virtualinvoke $r3.<androidx.compose.animation.core.AnimationVector: void reset$animation_core_release()>();

        virtualinvoke r1.<androidx.compose.animation.core.AnimationState: void setLastFrameTimeNanos$animation_core_release(long)>(-9223372036854775808L);

        specialinvoke r0.<androidx.compose.animation.core.Animatable: void setRunning(boolean)>(0);

        return;
    }

    public final java.lang.Object snapTo(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.compose.animation.core.Animatable r0;
        java.lang.Object r1, $r6, $r7;
        kotlin.coroutines.Continuation $r2;
        androidx.compose.animation.core.Animatable$snapTo$2 $r3;
        androidx.compose.animation.core.MutatorMutex $r4;
        kotlin.jvm.functions.Function1 $r5;
        kotlin.Unit $r8;

        r0 := @this: androidx.compose.animation.core.Animatable;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.MutatorMutex mutatorMutex>;

        $r3 = new androidx.compose.animation.core.Animatable$snapTo$2;

        specialinvoke $r3.<androidx.compose.animation.core.Animatable$snapTo$2: void <init>(androidx.compose.animation.core.Animatable,java.lang.Object,kotlin.coroutines.Continuation)>(r0, r1, null);

        $r5 = (kotlin.jvm.functions.Function1) $r3;

        $r6 = staticinvoke <androidx.compose.animation.core.MutatorMutex: java.lang.Object mutate$default(androidx.compose.animation.core.MutatorMutex,androidx.compose.animation.core.MutatePriority,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation,int,java.lang.Object)>($r4, null, $r5, $r2, 1, null);

        $r7 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r6 != $r7 goto label1;

        return $r6;

     label1:
        $r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r8;
    }

    public final java.lang.Object stop(kotlin.coroutines.Continuation)
    {
        androidx.compose.animation.core.Animatable r0;
        kotlin.coroutines.Continuation $r1;
        androidx.compose.animation.core.Animatable$stop$2 $r2;
        androidx.compose.animation.core.MutatorMutex $r3;
        kotlin.jvm.functions.Function1 $r4;
        java.lang.Object $r5, $r6;
        kotlin.Unit $r7;

        r0 := @this: androidx.compose.animation.core.Animatable;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

        $r3 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.MutatorMutex mutatorMutex>;

        $r2 = new androidx.compose.animation.core.Animatable$stop$2;

        specialinvoke $r2.<androidx.compose.animation.core.Animatable$stop$2: void <init>(androidx.compose.animation.core.Animatable,kotlin.coroutines.Continuation)>(r0, null);

        $r4 = (kotlin.jvm.functions.Function1) $r2;

        $r5 = staticinvoke <androidx.compose.animation.core.MutatorMutex: java.lang.Object mutate$default(androidx.compose.animation.core.MutatorMutex,androidx.compose.animation.core.MutatePriority,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation,int,java.lang.Object)>($r3, null, $r4, $r1, 1, null);

        $r6 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r5 != $r6 goto label1;

        return $r5;

     label1:
        $r7 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r7;
    }

    public final androidx.compose.runtime.State asState()
    {
        androidx.compose.animation.core.Animatable r0;
        androidx.compose.animation.core.AnimationState $r1;
        androidx.compose.runtime.State $r2;

        r0 := @this: androidx.compose.animation.core.Animatable;

        $r1 = r0.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationState internalState>;

        $r2 = (androidx.compose.runtime.State) $r1;

        return $r2;
    }

    public static final java.lang.Object access$runAnimation(androidx.compose.animation.core.Animatable, androidx.compose.animation.core.Animation, java.lang.Object, kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation)
    {
        androidx.compose.animation.core.Animatable $r0;
        androidx.compose.animation.core.Animation r1;
        java.lang.Object r2, $r5;
        kotlin.jvm.functions.Function1 r3;
        kotlin.coroutines.Continuation $r4;

        $r0 := @parameter0: androidx.compose.animation.core.Animatable;

        r1 := @parameter1: androidx.compose.animation.core.Animation;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: kotlin.jvm.functions.Function1;

        $r4 := @parameter4: kotlin.coroutines.Continuation;

        $r5 = specialinvoke $r0.<androidx.compose.animation.core.Animatable: java.lang.Object runAnimation(androidx.compose.animation.core.Animation,java.lang.Object,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>(r1, r2, r3, $r4);

        return $r5;
    }

    public static final void access$setTargetValue(androidx.compose.animation.core.Animatable, java.lang.Object)
    {
        androidx.compose.animation.core.Animatable $r0;
        java.lang.Object r1;

        $r0 := @parameter0: androidx.compose.animation.core.Animatable;

        r1 := @parameter1: java.lang.Object;

        specialinvoke $r0.<androidx.compose.animation.core.Animatable: void setTargetValue(java.lang.Object)>(r1);

        return;
    }

    public static final void access$setRunning(androidx.compose.animation.core.Animatable, boolean)
    {
        androidx.compose.animation.core.Animatable $r0;
        boolean z0;

        $r0 := @parameter0: androidx.compose.animation.core.Animatable;

        z0 := @parameter1: boolean;

        specialinvoke $r0.<androidx.compose.animation.core.Animatable: void setRunning(boolean)>(z0);

        return;
    }

    public static final java.lang.Object access$clampToBounds(androidx.compose.animation.core.Animatable, java.lang.Object)
    {
        androidx.compose.animation.core.Animatable $r0;
        java.lang.Object r1, $r2;

        $r0 := @parameter0: androidx.compose.animation.core.Animatable;

        r1 := @parameter1: java.lang.Object;

        $r2 = specialinvoke $r0.<androidx.compose.animation.core.Animatable: java.lang.Object clampToBounds(java.lang.Object)>(r1);

        return $r2;
    }

    public static final void access$endAnimation(androidx.compose.animation.core.Animatable)
    {
        androidx.compose.animation.core.Animatable $r0;

        $r0 := @parameter0: androidx.compose.animation.core.Animatable;

        specialinvoke $r0.<androidx.compose.animation.core.Animatable: void endAnimation()>();

        return;
    }

    static void <clinit>()
    {
        <androidx.compose.animation.core.Animatable: int $stable> = 8;

        return;
    }

androidx.compose.animation.core.Animatable$runAnimation$2$1
<androidx.compose.animation.core.Animatable$runAnimation$2$1: androidx.compose.animation.core.Animatable this$0>
<androidx.compose.animation.core.Animatable$runAnimation$2$1: androidx.compose.animation.core.AnimationState $endState>
<androidx.compose.animation.core.Animatable$runAnimation$2$1: kotlin.jvm.functions.Function1 $block>
<androidx.compose.animation.core.Animatable$runAnimation$2$1: kotlin.jvm.internal.Ref$BooleanRef $clampingNeeded>
    void <init>(androidx.compose.animation.core.Animatable, androidx.compose.animation.core.AnimationState, kotlin.jvm.functions.Function1, kotlin.jvm.internal.Ref$BooleanRef)
    {
        androidx.compose.animation.core.Animatable$runAnimation$2$1 r0;
        androidx.compose.animation.core.Animatable $r1;
        androidx.compose.animation.core.AnimationState $r2;
        kotlin.jvm.functions.Function1 $r3;
        kotlin.jvm.internal.Ref$BooleanRef $r4;

        r0 := @this: androidx.compose.animation.core.Animatable$runAnimation$2$1;

        $r1 := @parameter0: androidx.compose.animation.core.Animatable;

        $r2 := @parameter1: androidx.compose.animation.core.AnimationState;

        $r3 := @parameter2: kotlin.jvm.functions.Function1;

        $r4 := @parameter3: kotlin.jvm.internal.Ref$BooleanRef;

        r0.<androidx.compose.animation.core.Animatable$runAnimation$2$1: androidx.compose.animation.core.Animatable this$0> = $r1;

        r0.<androidx.compose.animation.core.Animatable$runAnimation$2$1: androidx.compose.animation.core.AnimationState $endState> = $r2;

        r0.<androidx.compose.animation.core.Animatable$runAnimation$2$1: kotlin.jvm.functions.Function1 $block> = $r3;

        r0.<androidx.compose.animation.core.Animatable$runAnimation$2$1: kotlin.jvm.internal.Ref$BooleanRef $clampingNeeded> = $r4;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.compose.animation.core.AnimationScope)
    {
        androidx.compose.animation.core.Animatable$runAnimation$2$1 r0;
        androidx.compose.animation.core.AnimationScope $r1;
        java.lang.Object r2, $r6, $r7;
        androidx.compose.animation.core.Animatable $r3, $r5, $r9, $r11, $r16;
        androidx.compose.animation.core.AnimationState $r4, $r12, $r13;
        boolean $z0;
        kotlin.jvm.functions.Function1 $r8, $r14;
        kotlin.jvm.internal.Ref$BooleanRef $r15;

        r0 := @this: androidx.compose.animation.core.Animatable$runAnimation$2$1;

        $r1 := @parameter0: androidx.compose.animation.core.AnimationScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$animate");

        $r3 = r0.<androidx.compose.animation.core.Animatable$runAnimation$2$1: androidx.compose.animation.core.Animatable this$0>;

        $r4 = virtualinvoke $r3.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationState getInternalState$animation_core_release()>();

        staticinvoke <androidx.compose.animation.core.SuspendAnimationKt: void updateState(androidx.compose.animation.core.AnimationScope,androidx.compose.animation.core.AnimationState)>($r1, $r4);

        $r5 = r0.<androidx.compose.animation.core.Animatable$runAnimation$2$1: androidx.compose.animation.core.Animatable this$0>;

        $r6 = virtualinvoke $r1.<androidx.compose.animation.core.AnimationScope: java.lang.Object getValue()>();

        r2 = staticinvoke <androidx.compose.animation.core.Animatable: java.lang.Object access$clampToBounds(androidx.compose.animation.core.Animatable,java.lang.Object)>($r5, $r6);

        $r7 = virtualinvoke $r1.<androidx.compose.animation.core.AnimationScope: java.lang.Object getValue()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r7);

        if $z0 != 0 goto label2;

        $r11 = r0.<androidx.compose.animation.core.Animatable$runAnimation$2$1: androidx.compose.animation.core.Animatable this$0>;

        $r12 = virtualinvoke $r11.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationState getInternalState$animation_core_release()>();

        virtualinvoke $r12.<androidx.compose.animation.core.AnimationState: void setValue$animation_core_release(java.lang.Object)>(r2);

        $r13 = r0.<androidx.compose.animation.core.Animatable$runAnimation$2$1: androidx.compose.animation.core.AnimationState $endState>;

        virtualinvoke $r13.<androidx.compose.animation.core.AnimationState: void setValue$animation_core_release(java.lang.Object)>(r2);

        $r14 = r0.<androidx.compose.animation.core.Animatable$runAnimation$2$1: kotlin.jvm.functions.Function1 $block>;

        if $r14 == null goto label1;

        $r16 = r0.<androidx.compose.animation.core.Animatable$runAnimation$2$1: androidx.compose.animation.core.Animatable this$0>;

        interfaceinvoke $r14.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r16);

        goto label1;

     label1:
        virtualinvoke $r1.<androidx.compose.animation.core.AnimationScope: void cancelAnimation()>();

        $r15 = r0.<androidx.compose.animation.core.Animatable$runAnimation$2$1: kotlin.jvm.internal.Ref$BooleanRef $clampingNeeded>;

        $r15.<kotlin.jvm.internal.Ref$BooleanRef: boolean element> = 1;

        goto label3;

     label2:
        $r8 = r0.<androidx.compose.animation.core.Animatable$runAnimation$2$1: kotlin.jvm.functions.Function1 $block>;

        if $r8 == null goto label3;

        $r9 = r0.<androidx.compose.animation.core.Animatable$runAnimation$2$1: androidx.compose.animation.core.Animatable this$0>;

        interfaceinvoke $r8.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r9);

        goto label3;

     label3:
        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.animation.core.Animatable$runAnimation$2$1 r0;
        java.lang.Object r1;
        androidx.compose.animation.core.AnimationScope $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.compose.animation.core.Animatable$runAnimation$2$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.animation.core.AnimationScope) r1;

        virtualinvoke r0.<androidx.compose.animation.core.Animatable$runAnimation$2$1: void invoke(androidx.compose.animation.core.AnimationScope)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.compose.animation.core.Animatable$runAnimation$2
<androidx.compose.animation.core.Animatable$runAnimation$2: java.lang.Object L$0>
<androidx.compose.animation.core.Animatable$runAnimation$2: java.lang.Object L$1>
<androidx.compose.animation.core.Animatable$runAnimation$2: int label>
<androidx.compose.animation.core.Animatable$runAnimation$2: androidx.compose.animation.core.Animatable this$0>
<androidx.compose.animation.core.Animatable$runAnimation$2: java.lang.Object $initialVelocity>
<androidx.compose.animation.core.Animatable$runAnimation$2: androidx.compose.animation.core.Animation $animation>
<androidx.compose.animation.core.Animatable$runAnimation$2: long $startTime>
<androidx.compose.animation.core.Animatable$runAnimation$2: kotlin.jvm.functions.Function1 $block>
    void <init>(androidx.compose.animation.core.Animatable, java.lang.Object, androidx.compose.animation.core.Animation, long, kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation)
    {
        androidx.compose.animation.core.Animatable$runAnimation$2 r0;
        androidx.compose.animation.core.Animatable $r1;
        java.lang.Object $r2;
        androidx.compose.animation.core.Animation $r3;
        long $l0;
        kotlin.jvm.functions.Function1 $r4;
        kotlin.coroutines.Continuation $r5;

        r0 := @this: androidx.compose.animation.core.Animatable$runAnimation$2;

        $r1 := @parameter0: androidx.compose.animation.core.Animatable;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: androidx.compose.animation.core.Animation;

        $l0 := @parameter3: long;

        $r4 := @parameter4: kotlin.jvm.functions.Function1;

        $r5 := @parameter5: kotlin.coroutines.Continuation;

        r0.<androidx.compose.animation.core.Animatable$runAnimation$2: androidx.compose.animation.core.Animatable this$0> = $r1;

        r0.<androidx.compose.animation.core.Animatable$runAnimation$2: java.lang.Object $initialVelocity> = $r2;

        r0.<androidx.compose.animation.core.Animatable$runAnimation$2: androidx.compose.animation.core.Animation $animation> = $r3;

        r0.<androidx.compose.animation.core.Animatable$runAnimation$2: long $startTime> = $l0;

        r0.<androidx.compose.animation.core.Animatable$runAnimation$2: kotlin.jvm.functions.Function1 $block> = $r4;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(1, $r5);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.compose.animation.core.Animatable$runAnimation$2 r0;
        java.lang.Object $r1, r3, $r4, $r5, $r13, $r14, $r18, $r29;
        androidx.compose.animation.core.AnimationEndReason r2, $r35;
        int $i0;
        boolean $z0;
        androidx.compose.animation.core.Animatable $r6, $r8, $r10, $r17, $r19, $r20, $r25, $r32;
        androidx.compose.animation.core.AnimationResult $r7, r36;
        androidx.compose.animation.core.AnimationState $r9, $r21, r33;
        androidx.compose.animation.core.TwoWayConverter $r11;
        kotlin.jvm.functions.Function1 $r12, $r24, $r27;
        androidx.compose.animation.core.AnimationVector $r15;
        androidx.compose.animation.core.Animation $r16, $r26;
        kotlin.jvm.internal.Ref$BooleanRef $r22, r34;
        androidx.compose.animation.core.Animatable$runAnimation$2$1 $r23;
        long $l1;
        kotlin.coroutines.Continuation $r28;
        java.lang.IllegalStateException $r30;
        java.lang.Throwable $r31, r37;

        r0 := @this: androidx.compose.animation.core.Animatable$runAnimation$2;

        $r1 := @parameter0: java.lang.Object;

        r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.compose.animation.core.Animatable$runAnimation$2: int label>;

        tableswitch($i0)
        {
            case 0: goto label01;
            case 1: goto label04;
            default: goto label12;
        };

     label01:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label02:
        $r8 = r0.<androidx.compose.animation.core.Animatable$runAnimation$2: androidx.compose.animation.core.Animatable this$0>;

        $r9 = virtualinvoke $r8.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationState getInternalState$animation_core_release()>();

        $r10 = r0.<androidx.compose.animation.core.Animatable$runAnimation$2: androidx.compose.animation.core.Animatable this$0>;

        $r11 = virtualinvoke $r10.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.TwoWayConverter getTypeConverter()>();

        $r12 = interfaceinvoke $r11.<androidx.compose.animation.core.TwoWayConverter: kotlin.jvm.functions.Function1 getConvertToVector()>();

        $r13 = r0.<androidx.compose.animation.core.Animatable$runAnimation$2: java.lang.Object $initialVelocity>;

        $r14 = interfaceinvoke $r12.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r13);

        $r15 = (androidx.compose.animation.core.AnimationVector) $r14;

        virtualinvoke $r9.<androidx.compose.animation.core.AnimationState: void setVelocityVector$animation_core_release(androidx.compose.animation.core.AnimationVector)>($r15);

        $r17 = r0.<androidx.compose.animation.core.Animatable$runAnimation$2: androidx.compose.animation.core.Animatable this$0>;

        $r16 = r0.<androidx.compose.animation.core.Animatable$runAnimation$2: androidx.compose.animation.core.Animation $animation>;

        $r18 = interfaceinvoke $r16.<androidx.compose.animation.core.Animation: java.lang.Object getTargetValue()>();

        staticinvoke <androidx.compose.animation.core.Animatable: void access$setTargetValue(androidx.compose.animation.core.Animatable,java.lang.Object)>($r17, $r18);

        $r19 = r0.<androidx.compose.animation.core.Animatable$runAnimation$2: androidx.compose.animation.core.Animatable this$0>;

        staticinvoke <androidx.compose.animation.core.Animatable: void access$setRunning(androidx.compose.animation.core.Animatable,boolean)>($r19, 1);

        $r20 = r0.<androidx.compose.animation.core.Animatable$runAnimation$2: androidx.compose.animation.core.Animatable this$0>;

        $r21 = virtualinvoke $r20.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationState getInternalState$animation_core_release()>();

        r33 = staticinvoke <androidx.compose.animation.core.AnimationStateKt: androidx.compose.animation.core.AnimationState copy$default(androidx.compose.animation.core.AnimationState,java.lang.Object,androidx.compose.animation.core.AnimationVector,long,long,boolean,int,java.lang.Object)>($r21, null, null, 0L, -9223372036854775808L, 0, 23, null);

        $r22 = new kotlin.jvm.internal.Ref$BooleanRef;

        specialinvoke $r22.<kotlin.jvm.internal.Ref$BooleanRef: void <init>()>();

        r34 = $r22;

        $r26 = r0.<androidx.compose.animation.core.Animatable$runAnimation$2: androidx.compose.animation.core.Animation $animation>;

        $l1 = r0.<androidx.compose.animation.core.Animatable$runAnimation$2: long $startTime>;

        $r23 = new androidx.compose.animation.core.Animatable$runAnimation$2$1;

        $r25 = r0.<androidx.compose.animation.core.Animatable$runAnimation$2: androidx.compose.animation.core.Animatable this$0>;

        $r24 = r0.<androidx.compose.animation.core.Animatable$runAnimation$2: kotlin.jvm.functions.Function1 $block>;

        specialinvoke $r23.<androidx.compose.animation.core.Animatable$runAnimation$2$1: void <init>(androidx.compose.animation.core.Animatable,androidx.compose.animation.core.AnimationState,kotlin.jvm.functions.Function1,kotlin.jvm.internal.Ref$BooleanRef)>($r25, r33, $r24, r34);

        $r27 = (kotlin.jvm.functions.Function1) $r23;

        $r28 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.compose.animation.core.Animatable$runAnimation$2: java.lang.Object L$0> = r33;

        r0.<androidx.compose.animation.core.Animatable$runAnimation$2: java.lang.Object L$1> = r34;

        r0.<androidx.compose.animation.core.Animatable$runAnimation$2: int label> = 1;

        $r29 = staticinvoke <androidx.compose.animation.core.SuspendAnimationKt: java.lang.Object animate(androidx.compose.animation.core.AnimationState,androidx.compose.animation.core.Animation,long,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>(r33, $r26, $l1, $r27, $r28);

     label03:
        if $r29 != r3 goto label06;

        return r3;

     label04:
        $r4 = r0.<androidx.compose.animation.core.Animatable$runAnimation$2: java.lang.Object L$1>;

        r34 = (kotlin.jvm.internal.Ref$BooleanRef) $r4;

        $r5 = r0.<androidx.compose.animation.core.Animatable$runAnimation$2: java.lang.Object L$0>;

        r33 = (androidx.compose.animation.core.AnimationState) $r5;

     label05:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label06:
        $z0 = r34.<kotlin.jvm.internal.Ref$BooleanRef: boolean element>;

        if $z0 == 0 goto label07;

        $r35 = <androidx.compose.animation.core.AnimationEndReason: androidx.compose.animation.core.AnimationEndReason BoundReached>;

        goto label08;

     label07:
        $r35 = <androidx.compose.animation.core.AnimationEndReason: androidx.compose.animation.core.AnimationEndReason Finished>;

     label08:
        r2 = $r35;

        $r6 = r0.<androidx.compose.animation.core.Animatable$runAnimation$2: androidx.compose.animation.core.Animatable this$0>;

        staticinvoke <androidx.compose.animation.core.Animatable: void access$endAnimation(androidx.compose.animation.core.Animatable)>($r6);

        $r7 = new androidx.compose.animation.core.AnimationResult;

        specialinvoke $r7.<androidx.compose.animation.core.AnimationResult: void <init>(androidx.compose.animation.core.AnimationState,androidx.compose.animation.core.AnimationEndReason)>(r33, r2);

        r36 = $r7;

     label09:
        goto label11;

     label10:
        $r31 := @caughtexception;

        r37 = $r31;

        $r32 = r0.<androidx.compose.animation.core.Animatable$runAnimation$2: androidx.compose.animation.core.Animatable this$0>;

        staticinvoke <androidx.compose.animation.core.Animatable: void access$endAnimation(androidx.compose.animation.core.Animatable)>($r32);

        throw r37;

     label11:
        return r36;

     label12:
        $r30 = new java.lang.IllegalStateException;

        specialinvoke $r30.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r30;

        catch java.util.concurrent.CancellationException from label02 to label03 with label10;
        catch java.util.concurrent.CancellationException from label05 to label09 with label10;
    }

    public final kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
    {
        androidx.compose.animation.core.Animatable$runAnimation$2 r0, $r2;
        kotlin.coroutines.Continuation $r1, $r7;
        kotlin.jvm.functions.Function1 $r3;
        long $l0;
        androidx.compose.animation.core.Animation $r4;
        java.lang.Object $r5;
        androidx.compose.animation.core.Animatable $r6;

        r0 := @this: androidx.compose.animation.core.Animatable$runAnimation$2;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

        $r2 = new androidx.compose.animation.core.Animatable$runAnimation$2;

        $r6 = r0.<androidx.compose.animation.core.Animatable$runAnimation$2: androidx.compose.animation.core.Animatable this$0>;

        $r5 = r0.<androidx.compose.animation.core.Animatable$runAnimation$2: java.lang.Object $initialVelocity>;

        $r4 = r0.<androidx.compose.animation.core.Animatable$runAnimation$2: androidx.compose.animation.core.Animation $animation>;

        $l0 = r0.<androidx.compose.animation.core.Animatable$runAnimation$2: long $startTime>;

        $r3 = r0.<androidx.compose.animation.core.Animatable$runAnimation$2: kotlin.jvm.functions.Function1 $block>;

        specialinvoke $r2.<androidx.compose.animation.core.Animatable$runAnimation$2: void <init>(androidx.compose.animation.core.Animatable,java.lang.Object,androidx.compose.animation.core.Animation,long,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>($r6, $r5, $r4, $l0, $r3, $r1);

        $r7 = (kotlin.coroutines.Continuation) $r2;

        return $r7;
    }

    public final java.lang.Object invoke(kotlin.coroutines.Continuation)
    {
        androidx.compose.animation.core.Animatable$runAnimation$2 r0, $r4;
        kotlin.coroutines.Continuation r1, $r2;
        kotlin.Unit $r3;
        java.lang.Object $r5;

        r0 := @this: androidx.compose.animation.core.Animatable$runAnimation$2;

        r1 := @parameter0: kotlin.coroutines.Continuation;

        $r2 = virtualinvoke r0.<androidx.compose.animation.core.Animatable$runAnimation$2: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)>(r1);

        $r4 = (androidx.compose.animation.core.Animatable$runAnimation$2) $r2;

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r5 = virtualinvoke $r4.<androidx.compose.animation.core.Animatable$runAnimation$2: java.lang.Object invokeSuspend(java.lang.Object)>($r3);

        return $r5;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.animation.core.Animatable$runAnimation$2 r0;
        java.lang.Object r1, $r3;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.compose.animation.core.Animatable$runAnimation$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (kotlin.coroutines.Continuation) r1;

        $r3 = virtualinvoke r0.<androidx.compose.animation.core.Animatable$runAnimation$2: java.lang.Object invoke(kotlin.coroutines.Continuation)>($r2);

        return $r3;
    }

androidx.compose.animation.core.Animatable$snapTo$2
<androidx.compose.animation.core.Animatable$snapTo$2: int label>
<androidx.compose.animation.core.Animatable$snapTo$2: androidx.compose.animation.core.Animatable this$0>
<androidx.compose.animation.core.Animatable$snapTo$2: java.lang.Object $targetValue>
    void <init>(androidx.compose.animation.core.Animatable, java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.compose.animation.core.Animatable$snapTo$2 r0;
        androidx.compose.animation.core.Animatable $r1;
        java.lang.Object $r2;
        kotlin.coroutines.Continuation $r3;

        r0 := @this: androidx.compose.animation.core.Animatable$snapTo$2;

        $r1 := @parameter0: androidx.compose.animation.core.Animatable;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        r0.<androidx.compose.animation.core.Animatable$snapTo$2: androidx.compose.animation.core.Animatable this$0> = $r1;

        r0.<androidx.compose.animation.core.Animatable$snapTo$2: java.lang.Object $targetValue> = $r2;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(1, $r3);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.compose.animation.core.Animatable$snapTo$2 r0;
        java.lang.Object $r1, r2, $r5;
        int $i0;
        androidx.compose.animation.core.Animatable $r4, $r6, $r7, $r9;
        androidx.compose.animation.core.AnimationState $r8;
        kotlin.Unit $r10;
        java.lang.IllegalStateException $r11;

        r0 := @this: androidx.compose.animation.core.Animatable$snapTo$2;

        $r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.compose.animation.core.Animatable$snapTo$2: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            default: goto label2;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.compose.animation.core.Animatable$snapTo$2: androidx.compose.animation.core.Animatable this$0>;

        staticinvoke <androidx.compose.animation.core.Animatable: void access$endAnimation(androidx.compose.animation.core.Animatable)>($r4);

        $r6 = r0.<androidx.compose.animation.core.Animatable$snapTo$2: androidx.compose.animation.core.Animatable this$0>;

        $r5 = r0.<androidx.compose.animation.core.Animatable$snapTo$2: java.lang.Object $targetValue>;

        r2 = staticinvoke <androidx.compose.animation.core.Animatable: java.lang.Object access$clampToBounds(androidx.compose.animation.core.Animatable,java.lang.Object)>($r6, $r5);

        $r7 = r0.<androidx.compose.animation.core.Animatable$snapTo$2: androidx.compose.animation.core.Animatable this$0>;

        $r8 = virtualinvoke $r7.<androidx.compose.animation.core.Animatable: androidx.compose.animation.core.AnimationState getInternalState$animation_core_release()>();

        virtualinvoke $r8.<androidx.compose.animation.core.AnimationState: void setValue$animation_core_release(java.lang.Object)>(r2);

        $r9 = r0.<androidx.compose.animation.core.Animatable$snapTo$2: androidx.compose.animation.core.Animatable this$0>;

        staticinvoke <androidx.compose.animation.core.Animatable: void access$setTargetValue(androidx.compose.animation.core.Animatable,java.lang.Object)>($r9, r2);

        $r10 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r10;

     label2:
        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r11;
    }

    public final kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
    {
        androidx.compose.animation.core.Animatable$snapTo$2 r0, $r2;
        kotlin.coroutines.Continuation $r1, $r5;
        java.lang.Object $r3;
        androidx.compose.animation.core.Animatable $r4;

        r0 := @this: androidx.compose.animation.core.Animatable$snapTo$2;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

        $r2 = new androidx.compose.animation.core.Animatable$snapTo$2;

        $r4 = r0.<androidx.compose.animation.core.Animatable$snapTo$2: androidx.compose.animation.core.Animatable this$0>;

        $r3 = r0.<androidx.compose.animation.core.Animatable$snapTo$2: java.lang.Object $targetValue>;

        specialinvoke $r2.<androidx.compose.animation.core.Animatable$snapTo$2: void <init>(androidx.compose.animation.core.Animatable,java.lang.Object,kotlin.coroutines.Continuation)>($r4, $r3, $r1);

        $r5 = (kotlin.coroutines.Continuation) $r2;

        return $r5;
    }

    public final java.lang.Object invoke(kotlin.coroutines.Continuation)
    {
        androidx.compose.animation.core.Animatable$snapTo$2 r0, $r4;
        kotlin.coroutines.Continuation r1, $r2;
        kotlin.Unit $r3;
        java.lang.Object $r5;

        r0 := @this: androidx.compose.animation.core.Animatable$snapTo$2;

        r1 := @parameter0: kotlin.coroutines.Continuation;

        $r2 = virtualinvoke r0.<androidx.compose.animation.core.Animatable$snapTo$2: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)>(r1);

        $r4 = (androidx.compose.animation.core.Animatable$snapTo$2) $r2;

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r5 = virtualinvoke $r4.<androidx.compose.animation.core.Animatable$snapTo$2: java.lang.Object invokeSuspend(java.lang.Object)>($r3);

        return $r5;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.animation.core.Animatable$snapTo$2 r0;
        java.lang.Object r1, $r3;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.compose.animation.core.Animatable$snapTo$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (kotlin.coroutines.Continuation) r1;

        $r3 = virtualinvoke r0.<androidx.compose.animation.core.Animatable$snapTo$2: java.lang.Object invoke(kotlin.coroutines.Continuation)>($r2);

        return $r3;
    }

androidx.compose.animation.core.Animatable$stop$2
<androidx.compose.animation.core.Animatable$stop$2: int label>
<androidx.compose.animation.core.Animatable$stop$2: androidx.compose.animation.core.Animatable this$0>
    void <init>(androidx.compose.animation.core.Animatable, kotlin.coroutines.Continuation)
    {
        androidx.compose.animation.core.Animatable$stop$2 r0;
        androidx.compose.animation.core.Animatable $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.compose.animation.core.Animatable$stop$2;

        $r1 := @parameter0: androidx.compose.animation.core.Animatable;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.compose.animation.core.Animatable$stop$2: androidx.compose.animation.core.Animatable this$0> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(1, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.compose.animation.core.Animatable$stop$2 r0;
        java.lang.Object $r1;
        int $i0;
        androidx.compose.animation.core.Animatable $r3;
        kotlin.Unit $r4;
        java.lang.IllegalStateException $r5;

        r0 := @this: androidx.compose.animation.core.Animatable$stop$2;

        $r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.compose.animation.core.Animatable$stop$2: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            default: goto label2;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r3 = r0.<androidx.compose.animation.core.Animatable$stop$2: androidx.compose.animation.core.Animatable this$0>;

        staticinvoke <androidx.compose.animation.core.Animatable: void access$endAnimation(androidx.compose.animation.core.Animatable)>($r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;

     label2:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r5;
    }

    public final kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
    {
        androidx.compose.animation.core.Animatable$stop$2 r0, $r2;
        kotlin.coroutines.Continuation $r1, $r4;
        androidx.compose.animation.core.Animatable $r3;

        r0 := @this: androidx.compose.animation.core.Animatable$stop$2;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

        $r2 = new androidx.compose.animation.core.Animatable$stop$2;

        $r3 = r0.<androidx.compose.animation.core.Animatable$stop$2: androidx.compose.animation.core.Animatable this$0>;

        specialinvoke $r2.<androidx.compose.animation.core.Animatable$stop$2: void <init>(androidx.compose.animation.core.Animatable,kotlin.coroutines.Continuation)>($r3, $r1);

        $r4 = (kotlin.coroutines.Continuation) $r2;

        return $r4;
    }

    public final java.lang.Object invoke(kotlin.coroutines.Continuation)
    {
        androidx.compose.animation.core.Animatable$stop$2 r0, $r4;
        kotlin.coroutines.Continuation r1, $r2;
        kotlin.Unit $r3;
        java.lang.Object $r5;

        r0 := @this: androidx.compose.animation.core.Animatable$stop$2;

        r1 := @parameter0: kotlin.coroutines.Continuation;

        $r2 = virtualinvoke r0.<androidx.compose.animation.core.Animatable$stop$2: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)>(r1);

        $r4 = (androidx.compose.animation.core.Animatable$stop$2) $r2;

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r5 = virtualinvoke $r4.<androidx.compose.animation.core.Animatable$stop$2: java.lang.Object invokeSuspend(java.lang.Object)>($r3);

        return $r5;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.animation.core.Animatable$stop$2 r0;
        java.lang.Object r1, $r3;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.compose.animation.core.Animatable$stop$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (kotlin.coroutines.Continuation) r1;

        $r3 = virtualinvoke r0.<androidx.compose.animation.core.Animatable$stop$2: java.lang.Object invoke(kotlin.coroutines.Continuation)>($r2);

        return $r3;
    }

