androidx.media3.exoplayer.drm.FrameworkMediaDrm
<androidx.media3.exoplayer.drm.FrameworkMediaDrm: java.lang.String TAG>
<androidx.media3.exoplayer.drm.FrameworkMediaDrm: androidx.media3.exoplayer.drm.ExoMediaDrm$Provider DEFAULT_PROVIDER>
<androidx.media3.exoplayer.drm.FrameworkMediaDrm: java.lang.String CENC_SCHEME_MIME_TYPE>
<androidx.media3.exoplayer.drm.FrameworkMediaDrm: java.lang.String MOCK_LA_URL_VALUE>
<androidx.media3.exoplayer.drm.FrameworkMediaDrm: java.lang.String MOCK_LA_URL>
<androidx.media3.exoplayer.drm.FrameworkMediaDrm: int UTF_16_BYTES_PER_CHARACTER>
<androidx.media3.exoplayer.drm.FrameworkMediaDrm: java.util.UUID uuid>
<androidx.media3.exoplayer.drm.FrameworkMediaDrm: android.media.MediaDrm mediaDrm>
<androidx.media3.exoplayer.drm.FrameworkMediaDrm: int referenceCount>
    public static boolean isCryptoSchemeSupported(java.util.UUID)
    {
        java.util.UUID r0, $r1;
        boolean $z0;

        r0 := @parameter0: java.util.UUID;

        $r1 = staticinvoke <androidx.media3.exoplayer.drm.FrameworkMediaDrm: java.util.UUID adjustUuid(java.util.UUID)>(r0);

        $z0 = staticinvoke <android.media.MediaDrm: boolean isCryptoSchemeSupported(java.util.UUID)>($r1);

        return $z0;
    }

    public static androidx.media3.exoplayer.drm.FrameworkMediaDrm newInstance(java.util.UUID) throws androidx.media3.exoplayer.drm.UnsupportedDrmException
    {
        java.util.UUID r0;
        java.lang.Throwable $r2, $r4, r6, r7, r11, r12;
        androidx.media3.exoplayer.drm.FrameworkMediaDrm r8;
        androidx.media3.exoplayer.drm.UnsupportedDrmException r9, r10;

        r0 := @parameter0: java.util.UUID;

     label1:
        r8 = new androidx.media3.exoplayer.drm.FrameworkMediaDrm;

        specialinvoke r8.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: void <init>(java.util.UUID)>(r0);

     label2:
        return r8;

     label3:
        $r2 := @caughtexception;

        r6 = $r2;

        r9 = new androidx.media3.exoplayer.drm.UnsupportedDrmException;

        specialinvoke r9.<androidx.media3.exoplayer.drm.UnsupportedDrmException: void <init>(int,java.lang.Exception)>(1, r6);

        r11 = (java.lang.Throwable) r9;

        throw r11;

     label4:
        $r4 := @caughtexception;

        r7 = $r4;

        r10 = new androidx.media3.exoplayer.drm.UnsupportedDrmException;

        specialinvoke r10.<androidx.media3.exoplayer.drm.UnsupportedDrmException: void <init>(int,java.lang.Exception)>(2, r7);

        r12 = (java.lang.Throwable) r10;

        throw r12;

        catch android.media.UnsupportedSchemeException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    private void <init>(java.util.UUID) throws android.media.UnsupportedSchemeException
    {
        androidx.media3.exoplayer.drm.FrameworkMediaDrm r0;
        java.util.UUID r1, $r3, $r5, $r6;
        boolean $z0, $z1, $z2, $z3;
        android.media.MediaDrm $r4, $r7;

        r0 := @this: androidx.media3.exoplayer.drm.FrameworkMediaDrm;

        r1 := @parameter0: java.util.UUID;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = <androidx.media3.common.C: java.util.UUID COMMON_PSSH_UUID>;

        $z0 = virtualinvoke $r3.<java.util.UUID: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean,java.lang.Object)>($z3, "Use C.CLEARKEY_UUID instead");

        r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: java.util.UUID uuid> = r1;

        $r4 = new android.media.MediaDrm;

        $r5 = staticinvoke <androidx.media3.exoplayer.drm.FrameworkMediaDrm: java.util.UUID adjustUuid(java.util.UUID)>(r1);

        specialinvoke $r4.<android.media.MediaDrm: void <init>(java.util.UUID)>($r5);

        r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: android.media.MediaDrm mediaDrm> = $r4;

        r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: int referenceCount> = 1;

        $r6 = <androidx.media3.common.C: java.util.UUID WIDEVINE_UUID>;

        $z1 = virtualinvoke $r6.<java.util.UUID: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label3;

        $z2 = staticinvoke <androidx.media3.exoplayer.drm.FrameworkMediaDrm: boolean needsForceWidevineL3Workaround()>();

        if $z2 == 0 goto label3;

        $r7 = r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: android.media.MediaDrm mediaDrm>;

        staticinvoke <androidx.media3.exoplayer.drm.FrameworkMediaDrm: void forceWidevineL3(android.media.MediaDrm)>($r7);

     label3:
        return;
    }

    public void setOnEventListener(androidx.media3.exoplayer.drm.ExoMediaDrm$OnEventListener)
    {
        androidx.media3.exoplayer.drm.FrameworkMediaDrm r0;
        androidx.media3.exoplayer.drm.ExoMediaDrm$OnEventListener r1;
        android.media.MediaDrm $r2;
        android.media.MediaDrm$OnEventListener $r3;

        r0 := @this: androidx.media3.exoplayer.drm.FrameworkMediaDrm;

        r1 := @parameter0: androidx.media3.exoplayer.drm.ExoMediaDrm$OnEventListener;

        $r2 = r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: android.media.MediaDrm mediaDrm>;

        if r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = dynamicinvoke "onEvent" <android.media.MediaDrm$OnEventListener (androidx.media3.exoplayer.drm.FrameworkMediaDrm,androidx.media3.exoplayer.drm.ExoMediaDrm$OnEventListener)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(android.media.MediaDrm,byte[],int,int,byte[]), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.exoplayer.drm.FrameworkMediaDrm: void lambda$setOnEventListener$1(androidx.media3.exoplayer.drm.ExoMediaDrm$OnEventListener,android.media.MediaDrm,byte[],int,int,byte[])>, methodtype: void __METHODTYPE__(android.media.MediaDrm,byte[],int,int,byte[]));

     label2:
        virtualinvoke $r2.<android.media.MediaDrm: void setOnEventListener(android.media.MediaDrm$OnEventListener)>($r3);

        return;
    }

    public void setOnKeyStatusChangeListener(androidx.media3.exoplayer.drm.ExoMediaDrm$OnKeyStatusChangeListener)
    {
        androidx.media3.exoplayer.drm.FrameworkMediaDrm r0;
        androidx.media3.exoplayer.drm.ExoMediaDrm$OnKeyStatusChangeListener r1;
        int $i0;
        android.media.MediaDrm $r2;
        java.lang.UnsupportedOperationException $r3;
        android.media.MediaDrm$OnKeyStatusChangeListener $r4;

        r0 := @this: androidx.media3.exoplayer.drm.FrameworkMediaDrm;

        r1 := @parameter0: androidx.media3.exoplayer.drm.ExoMediaDrm$OnKeyStatusChangeListener;

        $i0 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i0 >= 23 goto label1;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;

     label1:
        $r2 = r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: android.media.MediaDrm mediaDrm>;

        if r1 != null goto label2;

        $r4 = null;

        goto label3;

     label2:
        $r4 = dynamicinvoke "onKeyStatusChange" <android.media.MediaDrm$OnKeyStatusChangeListener (androidx.media3.exoplayer.drm.FrameworkMediaDrm,androidx.media3.exoplayer.drm.ExoMediaDrm$OnKeyStatusChangeListener)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(android.media.MediaDrm,byte[],java.util.List,boolean), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.exoplayer.drm.FrameworkMediaDrm: void lambda$setOnKeyStatusChangeListener$2(androidx.media3.exoplayer.drm.ExoMediaDrm$OnKeyStatusChangeListener,android.media.MediaDrm,byte[],java.util.List,boolean)>, methodtype: void __METHODTYPE__(android.media.MediaDrm,byte[],java.util.List,boolean));

     label3:
        virtualinvoke $r2.<android.media.MediaDrm: void setOnKeyStatusChangeListener(android.media.MediaDrm$OnKeyStatusChangeListener,android.os.Handler)>($r4, null);

        return;
    }

    public void setOnExpirationUpdateListener(androidx.media3.exoplayer.drm.ExoMediaDrm$OnExpirationUpdateListener)
    {
        androidx.media3.exoplayer.drm.FrameworkMediaDrm r0;
        androidx.media3.exoplayer.drm.ExoMediaDrm$OnExpirationUpdateListener r1;
        int $i0;
        android.media.MediaDrm $r2;
        java.lang.UnsupportedOperationException $r3;
        android.media.MediaDrm$OnExpirationUpdateListener $r4;

        r0 := @this: androidx.media3.exoplayer.drm.FrameworkMediaDrm;

        r1 := @parameter0: androidx.media3.exoplayer.drm.ExoMediaDrm$OnExpirationUpdateListener;

        $i0 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i0 >= 23 goto label1;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;

     label1:
        $r2 = r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: android.media.MediaDrm mediaDrm>;

        if r1 != null goto label2;

        $r4 = null;

        goto label3;

     label2:
        $r4 = dynamicinvoke "onExpirationUpdate" <android.media.MediaDrm$OnExpirationUpdateListener (androidx.media3.exoplayer.drm.FrameworkMediaDrm,androidx.media3.exoplayer.drm.ExoMediaDrm$OnExpirationUpdateListener)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(android.media.MediaDrm,byte[],long), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.exoplayer.drm.FrameworkMediaDrm: void lambda$setOnExpirationUpdateListener$3(androidx.media3.exoplayer.drm.ExoMediaDrm$OnExpirationUpdateListener,android.media.MediaDrm,byte[],long)>, methodtype: void __METHODTYPE__(android.media.MediaDrm,byte[],long));

     label3:
        virtualinvoke $r2.<android.media.MediaDrm: void setOnExpirationUpdateListener(android.media.MediaDrm$OnExpirationUpdateListener,android.os.Handler)>($r4, null);

        return;
    }

    public byte[] openSession() throws android.media.MediaDrmException
    {
        androidx.media3.exoplayer.drm.FrameworkMediaDrm r0;
        android.media.MediaDrm $r1;
        byte[] $r2;

        r0 := @this: androidx.media3.exoplayer.drm.FrameworkMediaDrm;

        $r1 = r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: android.media.MediaDrm mediaDrm>;

        $r2 = virtualinvoke $r1.<android.media.MediaDrm: byte[] openSession()>();

        return $r2;
    }

    public void closeSession(byte[])
    {
        androidx.media3.exoplayer.drm.FrameworkMediaDrm r0;
        byte[] r1;
        android.media.MediaDrm $r2;

        r0 := @this: androidx.media3.exoplayer.drm.FrameworkMediaDrm;

        r1 := @parameter0: byte[];

        $r2 = r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: android.media.MediaDrm mediaDrm>;

        virtualinvoke $r2.<android.media.MediaDrm: void closeSession(byte[])>(r1);

        return;
    }

    public void setPlayerIdForSession(byte[], androidx.media3.exoplayer.analytics.PlayerId)
    {
        androidx.media3.exoplayer.drm.FrameworkMediaDrm r0;
        byte[] r1;
        androidx.media3.exoplayer.analytics.PlayerId r2;
        java.lang.Throwable r3, $r5;
        int $i0;
        android.media.MediaDrm $r4;

        r0 := @this: androidx.media3.exoplayer.drm.FrameworkMediaDrm;

        r1 := @parameter0: byte[];

        r2 := @parameter1: androidx.media3.exoplayer.analytics.PlayerId;

        $i0 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i0 < 31 goto label4;

     label1:
        $r4 = r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: android.media.MediaDrm mediaDrm>;

        staticinvoke <androidx.media3.exoplayer.drm.FrameworkMediaDrm$Api31: void setLogSessionIdOnMediaDrmSession(android.media.MediaDrm,byte[],androidx.media3.exoplayer.analytics.PlayerId)>($r4, r1, r2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("FrameworkMediaDrm", "setLogSessionId failed.");

     label4:
        return;

        catch java.lang.UnsupportedOperationException from label1 to label2 with label3;
    }

    public androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest getKeyRequest(byte[], java.util.List, int, java.util.HashMap) throws android.media.NotProvisionedException
    {
        androidx.media3.exoplayer.drm.FrameworkMediaDrm r0;
        byte[] r1, r5, $r8, $r13, $r16, r20;
        java.util.List r2;
        int i0, i1, $i2, $i3;
        java.util.HashMap r3;
        android.media.MediaDrm$KeyRequest r4;
        android.media.MediaDrm $r6;
        java.util.UUID $r7, $r12, $r14, $r18;
        java.lang.String $r9, $r11, $r17, r21, r22;
        boolean $z0, $z1;
        androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest $r10;
        java.lang.Object $r15;
        androidx.media3.common.DrmInitData$SchemeData r19;

        r0 := @this: androidx.media3.exoplayer.drm.FrameworkMediaDrm;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        r3 := @parameter3: java.util.HashMap;

        r19 = null;

        r20 = null;

        r21 = null;

        if r2 == null goto label1;

        $r12 = r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: java.util.UUID uuid>;

        r19 = staticinvoke <androidx.media3.exoplayer.drm.FrameworkMediaDrm: androidx.media3.common.DrmInitData$SchemeData getSchemeData(java.util.UUID,java.util.List)>($r12, r2);

        $r14 = r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: java.util.UUID uuid>;

        $r13 = r19.<androidx.media3.common.DrmInitData$SchemeData: byte[] data>;

        $r15 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r13);

        $r16 = (byte[]) $r15;

        r20 = staticinvoke <androidx.media3.exoplayer.drm.FrameworkMediaDrm: byte[] adjustRequestInitData(java.util.UUID,byte[])>($r14, $r16);

        $r18 = r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: java.util.UUID uuid>;

        $r17 = r19.<androidx.media3.common.DrmInitData$SchemeData: java.lang.String mimeType>;

        r21 = staticinvoke <androidx.media3.exoplayer.drm.FrameworkMediaDrm: java.lang.String adjustRequestMimeType(java.util.UUID,java.lang.String)>($r18, $r17);

     label1:
        $r6 = r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: android.media.MediaDrm mediaDrm>;

        r4 = virtualinvoke $r6.<android.media.MediaDrm: android.media.MediaDrm$KeyRequest getKeyRequest(byte[],byte[],java.lang.String,int,java.util.HashMap)>(r1, r20, r21, i0, r3);

        $r7 = r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: java.util.UUID uuid>;

        $r8 = virtualinvoke r4.<android.media.MediaDrm$KeyRequest: byte[] getData()>();

        r5 = staticinvoke <androidx.media3.exoplayer.drm.FrameworkMediaDrm: byte[] adjustRequestData(java.util.UUID,byte[])>($r7, $r8);

        $r9 = virtualinvoke r4.<android.media.MediaDrm$KeyRequest: java.lang.String getDefaultUrl()>();

        r22 = staticinvoke <androidx.media3.exoplayer.drm.FrameworkMediaDrm: java.lang.String adjustLicenseServerUrl(java.lang.String)>($r9);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r22);

        if $z0 == 0 goto label2;

        if r19 == null goto label2;

        $r11 = r19.<androidx.media3.common.DrmInitData$SchemeData: java.lang.String licenseServerUrl>;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r11);

        if $z1 != 0 goto label2;

        r22 = r19.<androidx.media3.common.DrmInitData$SchemeData: java.lang.String licenseServerUrl>;

     label2:
        $i2 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i2 < 23 goto label3;

        $i3 = virtualinvoke r4.<android.media.MediaDrm$KeyRequest: int getRequestType()>();

        goto label4;

     label3:
        $i3 = -2147483648;

     label4:
        i1 = $i3;

        $r10 = new androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest;

        specialinvoke $r10.<androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest: void <init>(byte[],java.lang.String,int)>(r5, r22, i1);

        return $r10;
    }

    private static java.lang.String adjustLicenseServerUrl(java.lang.String)
    {
        java.lang.String r0, $r1, $r2;
        boolean $z0, $z1;
        int $i0;

        r0 := @parameter0: java.lang.String;

        $r1 = "<LA_URL>https://x</LA_URL>";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        return "";

     label1:
        $i0 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i0 != 33 goto label2;

        $r2 = "https://default.url";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

        return "";

     label2:
        return r0;
    }

    public byte[] provideKeyResponse(byte[], byte[]) throws android.media.NotProvisionedException, android.media.DeniedByServerException
    {
        androidx.media3.exoplayer.drm.FrameworkMediaDrm r0;
        byte[] r1, $r5, r6;
        java.util.UUID $r2, $r3;
        boolean $z0;
        android.media.MediaDrm $r4;

        r0 := @this: androidx.media3.exoplayer.drm.FrameworkMediaDrm;

        r1 := @parameter0: byte[];

        r6 := @parameter1: byte[];

        $r3 = <androidx.media3.common.C: java.util.UUID CLEARKEY_UUID>;

        $r2 = r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: java.util.UUID uuid>;

        $z0 = virtualinvoke $r3.<java.util.UUID: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        r6 = staticinvoke <androidx.media3.exoplayer.drm.ClearKeyUtil: byte[] adjustResponseData(byte[])>(r6);

     label1:
        $r4 = r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: android.media.MediaDrm mediaDrm>;

        $r5 = virtualinvoke $r4.<android.media.MediaDrm: byte[] provideKeyResponse(byte[],byte[])>(r1, r6);

        return $r5;
    }

    public androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest getProvisionRequest()
    {
        androidx.media3.exoplayer.drm.FrameworkMediaDrm r0;
        android.media.MediaDrm$ProvisionRequest r1;
        android.media.MediaDrm $r2;
        androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest $r3;
        byte[] $r4;
        java.lang.String $r5;

        r0 := @this: androidx.media3.exoplayer.drm.FrameworkMediaDrm;

        $r2 = r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: android.media.MediaDrm mediaDrm>;

        r1 = virtualinvoke $r2.<android.media.MediaDrm: android.media.MediaDrm$ProvisionRequest getProvisionRequest()>();

        $r3 = new androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest;

        $r4 = virtualinvoke r1.<android.media.MediaDrm$ProvisionRequest: byte[] getData()>();

        $r5 = virtualinvoke r1.<android.media.MediaDrm$ProvisionRequest: java.lang.String getDefaultUrl()>();

        specialinvoke $r3.<androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest: void <init>(byte[],java.lang.String)>($r4, $r5);

        return $r3;
    }

    public void provideProvisionResponse(byte[]) throws android.media.DeniedByServerException
    {
        androidx.media3.exoplayer.drm.FrameworkMediaDrm r0;
        byte[] r1;
        android.media.MediaDrm $r2;

        r0 := @this: androidx.media3.exoplayer.drm.FrameworkMediaDrm;

        r1 := @parameter0: byte[];

        $r2 = r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: android.media.MediaDrm mediaDrm>;

        virtualinvoke $r2.<android.media.MediaDrm: void provideProvisionResponse(byte[])>(r1);

        return;
    }

    public java.util.Map queryKeyStatus(byte[])
    {
        androidx.media3.exoplayer.drm.FrameworkMediaDrm r0;
        byte[] r1;
        android.media.MediaDrm $r2;
        java.util.HashMap $r3;

        r0 := @this: androidx.media3.exoplayer.drm.FrameworkMediaDrm;

        r1 := @parameter0: byte[];

        $r2 = r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: android.media.MediaDrm mediaDrm>;

        $r3 = virtualinvoke $r2.<android.media.MediaDrm: java.util.HashMap queryKeyStatus(byte[])>(r1);

        return $r3;
    }

    public boolean requiresSecureDecoder(byte[], java.lang.String)
    {
        androidx.media3.exoplayer.drm.FrameworkMediaDrm r0;
        byte[] r1;
        java.lang.String r2;
        android.media.MediaCrypto r3, $r5;
        java.lang.Throwable r4, $r8, $r9, r10;
        int $i0;
        java.util.UUID $r6;
        android.media.MediaDrm $r7;
        boolean $z0, z1;

        r0 := @this: androidx.media3.exoplayer.drm.FrameworkMediaDrm;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.lang.String;

        $i0 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i0 < 31 goto label1;

        $r7 = r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: android.media.MediaDrm mediaDrm>;

        $z0 = staticinvoke <androidx.media3.exoplayer.drm.FrameworkMediaDrm$Api31: boolean requiresSecureDecoder(android.media.MediaDrm,java.lang.String)>($r7, r2);

        return $z0;

     label1:
        $r5 = new android.media.MediaCrypto;

        $r6 = r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: java.util.UUID uuid>;

        specialinvoke $r5.<android.media.MediaCrypto: void <init>(java.util.UUID,byte[])>($r6, r1);

        r3 = $r5;

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r10 = $r8;

        return 1;

     label4:
        z1 = virtualinvoke r3.<android.media.MediaCrypto: boolean requiresSecureDecoderComponent(java.lang.String)>(r2);

     label5:
        virtualinvoke r3.<android.media.MediaCrypto: void release()>();

        return z1;

     label6:
        $r9 := @caughtexception;

        r4 = $r9;

     label7:
        virtualinvoke r3.<android.media.MediaCrypto: void release()>();

        throw r4;

        catch android.media.MediaCryptoException from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public synchronized void acquire()
    {
        androidx.media3.exoplayer.drm.FrameworkMediaDrm r0;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.drm.FrameworkMediaDrm;

        $i0 = r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: int referenceCount>;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z0);

        $i1 = r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: int referenceCount>;

        $i2 = $i1 + 1;

        r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: int referenceCount> = $i2;

        return;
    }

    public synchronized void release()
    {
        androidx.media3.exoplayer.drm.FrameworkMediaDrm r0;
        int $i0, $i1;
        android.media.MediaDrm $r1;

        r0 := @this: androidx.media3.exoplayer.drm.FrameworkMediaDrm;

        $i0 = r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: int referenceCount>;

        $i1 = $i0 - 1;

        r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: int referenceCount> = $i1;

        if $i1 != 0 goto label1;

        $r1 = r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: android.media.MediaDrm mediaDrm>;

        virtualinvoke $r1.<android.media.MediaDrm: void release()>();

     label1:
        return;
    }

    public void restoreKeys(byte[], byte[])
    {
        androidx.media3.exoplayer.drm.FrameworkMediaDrm r0;
        byte[] r1, r2;
        android.media.MediaDrm $r3;

        r0 := @this: androidx.media3.exoplayer.drm.FrameworkMediaDrm;

        r1 := @parameter0: byte[];

        r2 := @parameter1: byte[];

        $r3 = r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: android.media.MediaDrm mediaDrm>;

        virtualinvoke $r3.<android.media.MediaDrm: void restoreKeys(byte[],byte[])>(r1, r2);

        return;
    }

    public android.os.PersistableBundle getMetrics()
    {
        androidx.media3.exoplayer.drm.FrameworkMediaDrm r0;
        int $i0;
        android.media.MediaDrm $r1;
        android.os.PersistableBundle $r2;

        r0 := @this: androidx.media3.exoplayer.drm.FrameworkMediaDrm;

        $i0 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i0 >= 28 goto label1;

        return null;

     label1:
        $r1 = r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: android.media.MediaDrm mediaDrm>;

        $r2 = virtualinvoke $r1.<android.media.MediaDrm: android.os.PersistableBundle getMetrics()>();

        return $r2;
    }

    public java.lang.String getPropertyString(java.lang.String)
    {
        androidx.media3.exoplayer.drm.FrameworkMediaDrm r0;
        java.lang.String r1, $r3;
        android.media.MediaDrm $r2;

        r0 := @this: androidx.media3.exoplayer.drm.FrameworkMediaDrm;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: android.media.MediaDrm mediaDrm>;

        $r3 = virtualinvoke $r2.<android.media.MediaDrm: java.lang.String getPropertyString(java.lang.String)>(r1);

        return $r3;
    }

    public byte[] getPropertyByteArray(java.lang.String)
    {
        androidx.media3.exoplayer.drm.FrameworkMediaDrm r0;
        java.lang.String r1;
        android.media.MediaDrm $r2;
        byte[] $r3;

        r0 := @this: androidx.media3.exoplayer.drm.FrameworkMediaDrm;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: android.media.MediaDrm mediaDrm>;

        $r3 = virtualinvoke $r2.<android.media.MediaDrm: byte[] getPropertyByteArray(java.lang.String)>(r1);

        return $r3;
    }

    public void setPropertyString(java.lang.String, java.lang.String)
    {
        androidx.media3.exoplayer.drm.FrameworkMediaDrm r0;
        java.lang.String r1, r2;
        android.media.MediaDrm $r3;

        r0 := @this: androidx.media3.exoplayer.drm.FrameworkMediaDrm;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: android.media.MediaDrm mediaDrm>;

        virtualinvoke $r3.<android.media.MediaDrm: void setPropertyString(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void setPropertyByteArray(java.lang.String, byte[])
    {
        androidx.media3.exoplayer.drm.FrameworkMediaDrm r0;
        java.lang.String r1;
        byte[] r2;
        android.media.MediaDrm $r3;

        r0 := @this: androidx.media3.exoplayer.drm.FrameworkMediaDrm;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        $r3 = r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: android.media.MediaDrm mediaDrm>;

        virtualinvoke $r3.<android.media.MediaDrm: void setPropertyByteArray(java.lang.String,byte[])>(r1, r2);

        return;
    }

    public androidx.media3.exoplayer.drm.FrameworkCryptoConfig createCryptoConfig(byte[]) throws android.media.MediaCryptoException
    {
        androidx.media3.exoplayer.drm.FrameworkMediaDrm r0;
        byte[] r1;
        boolean z0, $z1, $z2, $z3;
        int $i0;
        java.util.UUID $r2, $r3, $r7, $r8;
        java.lang.String $r4, $r5;
        androidx.media3.exoplayer.drm.FrameworkCryptoConfig $r6;

        r0 := @this: androidx.media3.exoplayer.drm.FrameworkMediaDrm;

        r1 := @parameter0: byte[];

        $i0 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i0 >= 21 goto label1;

        $r3 = <androidx.media3.common.C: java.util.UUID WIDEVINE_UUID>;

        $r2 = r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: java.util.UUID uuid>;

        $z1 = virtualinvoke $r3.<java.util.UUID: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label1;

        $r4 = "L3";

        $r5 = virtualinvoke r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: java.lang.String getPropertyString(java.lang.String)>("securityLevel");

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        z0 = $z3;

        $r6 = new androidx.media3.exoplayer.drm.FrameworkCryptoConfig;

        $r7 = r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: java.util.UUID uuid>;

        $r8 = staticinvoke <androidx.media3.exoplayer.drm.FrameworkMediaDrm: java.util.UUID adjustUuid(java.util.UUID)>($r7);

        specialinvoke $r6.<androidx.media3.exoplayer.drm.FrameworkCryptoConfig: void <init>(java.util.UUID,byte[],boolean)>($r8, r1, z0);

        return $r6;
    }

    public int getCryptoType()
    {
        androidx.media3.exoplayer.drm.FrameworkMediaDrm r0;

        r0 := @this: androidx.media3.exoplayer.drm.FrameworkMediaDrm;

        return 2;
    }

    private static androidx.media3.common.DrmInitData$SchemeData getSchemeData(java.util.UUID, java.util.List)
    {
        java.util.UUID r0, $r4;
        java.util.List r1;
        androidx.media3.common.DrmInitData$SchemeData r2, $r6, $r12, $r24, r25, r26, r29;
        byte[] r3, $r8, $r10, $r14, $r17, r27, r28;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, i12, $i13, i14;
        boolean $z0, $z1, $z2, $z3, z4;
        java.lang.Object $r5, $r7, $r9, $r11, $r13, $r15, $r16, $r18, $r23;
        java.lang.String $r19, $r20, $r21, $r22;

        r0 := @parameter0: java.util.UUID;

        r1 := @parameter1: java.util.List;

        $r4 = <androidx.media3.common.C: java.util.UUID WIDEVINE_UUID>;

        $z0 = virtualinvoke $r4.<java.util.UUID: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label01;

        $r23 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r24 = (androidx.media3.common.DrmInitData$SchemeData) $r23;

        return $r24;

     label01:
        $i1 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i1 < 28 goto label08;

        $i4 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i4 <= 1 goto label08;

        $r11 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        r25 = (androidx.media3.common.DrmInitData$SchemeData) $r11;

        i8 = 0;

        z4 = 1;

        i9 = 0;

     label02:
        $i5 = interfaceinvoke r1.<java.util.List: int size()>();

        if i9 >= $i5 goto label05;

        $r16 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i9);

        r26 = (androidx.media3.common.DrmInitData$SchemeData) $r16;

        $r17 = r26.<androidx.media3.common.DrmInitData$SchemeData: byte[] data>;

        $r18 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r17);

        r27 = (byte[]) $r18;

        $r20 = r26.<androidx.media3.common.DrmInitData$SchemeData: java.lang.String mimeType>;

        $r19 = r25.<androidx.media3.common.DrmInitData$SchemeData: java.lang.String mimeType>;

        $z1 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r20, $r19);

        if $z1 == 0 goto label03;

        $r22 = r26.<androidx.media3.common.DrmInitData$SchemeData: java.lang.String licenseServerUrl>;

        $r21 = r25.<androidx.media3.common.DrmInitData$SchemeData: java.lang.String licenseServerUrl>;

        $z2 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r22, $r21);

        if $z2 == 0 goto label03;

        $z3 = staticinvoke <androidx.media3.extractor.mp4.PsshAtomUtil: boolean isPsshAtom(byte[])>(r27);

        if $z3 == 0 goto label03;

        $i7 = lengthof r27;

        i8 = i8 + $i7;

        goto label04;

     label03:
        z4 = 0;

        goto label05;

     label04:
        i9 = i9 + 1;

        goto label02;

     label05:
        if z4 == 0 goto label08;

        r28 = newarray (byte)[i8];

        i10 = 0;

        i11 = 0;

     label06:
        $i6 = interfaceinvoke r1.<java.util.List: int size()>();

        if i11 >= $i6 goto label07;

        $r13 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i11);

        r2 = (androidx.media3.common.DrmInitData$SchemeData) $r13;

        $r14 = r2.<androidx.media3.common.DrmInitData$SchemeData: byte[] data>;

        $r15 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r14);

        r3 = (byte[]) $r15;

        i0 = lengthof r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r28, i10, i0);

        i10 = i10 + i0;

        i11 = i11 + 1;

        goto label06;

     label07:
        $r12 = virtualinvoke r25.<androidx.media3.common.DrmInitData$SchemeData: androidx.media3.common.DrmInitData$SchemeData copyWithData(byte[])>(r28);

        return $r12;

     label08:
        i12 = 0;

     label09:
        $i13 = interfaceinvoke r1.<java.util.List: int size()>();

        if i12 >= $i13 goto label12;

        $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i12);

        r29 = (androidx.media3.common.DrmInitData$SchemeData) $r7;

        $r8 = r29.<androidx.media3.common.DrmInitData$SchemeData: byte[] data>;

        $r9 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r8);

        $r10 = (byte[]) $r9;

        i14 = staticinvoke <androidx.media3.extractor.mp4.PsshAtomUtil: int parseVersion(byte[])>($r10);

        $i2 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i2 >= 23 goto label10;

        if i14 != 0 goto label10;

        return r29;

     label10:
        $i3 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i3 < 23 goto label11;

        if i14 != 1 goto label11;

        return r29;

     label11:
        i12 = i12 + 1;

        goto label09;

     label12:
        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (androidx.media3.common.DrmInitData$SchemeData) $r5;

        return $r6;
    }

    private static java.util.UUID adjustUuid(java.util.UUID)
    {
        java.util.UUID r0, $r1, $r2;
        int $i0;
        boolean $z0;

        r0 := @parameter0: java.util.UUID;

        $i0 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i0 >= 27 goto label1;

        $r1 = <androidx.media3.common.C: java.util.UUID CLEARKEY_UUID>;

        $z0 = virtualinvoke $r1.<java.util.UUID: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r2 = <androidx.media3.common.C: java.util.UUID COMMON_PSSH_UUID>;

        goto label2;

     label1:
        $r2 = r0;

     label2:
        return $r2;
    }

    private static byte[] adjustRequestInitData(java.util.UUID, byte[])
    {
        java.util.UUID r0, $r1, $r2, $r13, $r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        byte[] $r15, r16, r17, r18;
        int $i0;

        r0 := @parameter0: java.util.UUID;

        r16 := @parameter1: byte[];

        $r1 = <androidx.media3.common.C: java.util.UUID PLAYREADY_UUID>;

        $z0 = virtualinvoke $r1.<java.util.UUID: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        r17 = staticinvoke <androidx.media3.extractor.mp4.PsshAtomUtil: byte[] parseSchemeSpecificData(byte[],java.util.UUID)>(r16, r0);

        if r17 != null goto label1;

        r17 = r16;

     label1:
        $r14 = <androidx.media3.common.C: java.util.UUID PLAYREADY_UUID>;

        $r15 = staticinvoke <androidx.media3.exoplayer.drm.FrameworkMediaDrm: byte[] addLaUrlAttributeIfMissing(byte[])>(r17);

        r16 = staticinvoke <androidx.media3.extractor.mp4.PsshAtomUtil: byte[] buildPsshAtom(java.util.UUID,byte[])>($r14, $r15);

     label2:
        $i0 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i0 >= 23 goto label3;

        $r13 = <androidx.media3.common.C: java.util.UUID WIDEVINE_UUID>;

        $z7 = virtualinvoke $r13.<java.util.UUID: boolean equals(java.lang.Object)>(r0);

        if $z7 != 0 goto label4;

     label3:
        $r2 = <androidx.media3.common.C: java.util.UUID PLAYREADY_UUID>;

        $z1 = virtualinvoke $r2.<java.util.UUID: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label5;

        $r4 = "Amazon";

        $r3 = <androidx.media3.common.util.Util: java.lang.String MANUFACTURER>;

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z2 == 0 goto label5;

        $r6 = "AFTB";

        $r5 = <androidx.media3.common.util.Util: java.lang.String MODEL>;

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z3 != 0 goto label4;

        $r8 = "AFTS";

        $r7 = <androidx.media3.common.util.Util: java.lang.String MODEL>;

        $z4 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z4 != 0 goto label4;

        $r10 = "AFTM";

        $r9 = <androidx.media3.common.util.Util: java.lang.String MODEL>;

        $z5 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z5 != 0 goto label4;

        $r12 = "AFTT";

        $r11 = <androidx.media3.common.util.Util: java.lang.String MODEL>;

        $z6 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z6 == 0 goto label5;

     label4:
        r18 = staticinvoke <androidx.media3.extractor.mp4.PsshAtomUtil: byte[] parseSchemeSpecificData(byte[],java.util.UUID)>(r16, r0);

        if r18 == null goto label5;

        return r18;

     label5:
        return r16;
    }

    private static java.lang.String adjustRequestMimeType(java.util.UUID, java.lang.String)
    {
        java.util.UUID r0, $r2;
        java.lang.String r1, $r3, $r4;
        int $i0;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.util.UUID;

        r1 := @parameter1: java.lang.String;

        $i0 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i0 >= 26 goto label2;

        $r2 = <androidx.media3.common.C: java.util.UUID CLEARKEY_UUID>;

        $z0 = virtualinvoke $r2.<java.util.UUID: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        $r3 = "video/mp4";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 != 0 goto label1;

        $r4 = "audio/mp4";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label2;

     label1:
        return "cenc";

     label2:
        return r1;
    }

    private static byte[] adjustRequestData(java.util.UUID, byte[])
    {
        java.util.UUID r0, $r2;
        byte[] r1, $r3;
        boolean $z0;

        r0 := @parameter0: java.util.UUID;

        r1 := @parameter1: byte[];

        $r2 = <androidx.media3.common.C: java.util.UUID CLEARKEY_UUID>;

        $z0 = virtualinvoke $r2.<java.util.UUID: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <androidx.media3.exoplayer.drm.ClearKeyUtil: byte[] adjustRequestData(byte[])>(r1);

        return $r3;

     label1:
        return r1;
    }

    private static void forceWidevineL3(android.media.MediaDrm)
    {
        android.media.MediaDrm r0;

        r0 := @parameter0: android.media.MediaDrm;

        virtualinvoke r0.<android.media.MediaDrm: void setPropertyString(java.lang.String,java.lang.String)>("securityLevel", "L3");

        return;
    }

    private static boolean needsForceWidevineL3Workaround()
    {
        java.lang.String $r0, $r1;
        boolean $z0;

        $r1 = "ASUS_Z00AD";

        $r0 = <androidx.media3.common.util.Util: java.lang.String MODEL>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        return $z0;
    }

    private static byte[] addLaUrlAttributeIfMissing(byte[])
    {
        byte[] r0, $r21, $r23;
        androidx.media3.common.util.ParsableByteArray r1, $r5;
        int i0, i4, i5, $i6, $i7, $i8, $i11, $i12;
        short s1, s2, s3, $s9, $s10, $s13;
        java.lang.String r2, r3, $r8, $r11, $r13;
        java.nio.ByteBuffer r4;
        java.nio.charset.Charset $r6, $r20;
        boolean $z0;
        java.lang.StringBuilder $r7, $r9, $r10, $r12;
        java.nio.ByteOrder $r14;

        r0 := @parameter0: byte[];

        $r5 = new androidx.media3.common.util.ParsableByteArray;

        specialinvoke $r5.<androidx.media3.common.util.ParsableByteArray: void <init>(byte[])>(r0);

        r1 = $r5;

        i0 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int readLittleEndianInt()>();

        s1 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: short readLittleEndianShort()>();

        s2 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: short readLittleEndianShort()>();

        if s1 != 1 goto label1;

        if s2 == 1 goto label2;

     label1:
        staticinvoke <androidx.media3.common.util.Log: void i(java.lang.String,java.lang.String)>("FrameworkMediaDrm", "Unexpected record count or type. Skipping LA_URL workaround.");

        return r0;

     label2:
        s3 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: short readLittleEndianShort()>();

        $r6 = <com.google.common.base.Charsets: java.nio.charset.Charset UTF_16LE>;

        r2 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: java.lang.String readString(int,java.nio.charset.Charset)>(s3, $r6);

        $z0 = virtualinvoke r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("<LA_URL>");

        if $z0 == 0 goto label3;

        return r0;

     label3:
        i4 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>("</DATA>");

        if i4 != -1 goto label4;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("FrameworkMediaDrm", "Could not find the </DATA> tag. Skipping LA_URL workaround.");

     label4:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i4);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<LA_URL>https://x</LA_URL>");

        $r11 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(i4);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        r3 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = "<LA_URL>https://x</LA_URL>";

        $i6 = virtualinvoke $r13.<java.lang.String: int length()>();

        i5 = $i6 * 2;

        $i7 = i0 + i5;

        r4 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i7);

        $r14 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        virtualinvoke r4.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r14);

        $i8 = i0 + i5;

        virtualinvoke r4.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i8);

        $s9 = (short) s1;

        virtualinvoke r4.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>($s9);

        $s10 = (short) s2;

        virtualinvoke r4.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>($s10);

        $i11 = virtualinvoke r3.<java.lang.String: int length()>();

        $i12 = $i11 * 2;

        $s13 = (short) $i12;

        virtualinvoke r4.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>($s13);

        $r20 = <com.google.common.base.Charsets: java.nio.charset.Charset UTF_16LE>;

        $r21 = virtualinvoke r3.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r20);

        virtualinvoke r4.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r21);

        $r23 = virtualinvoke r4.<java.nio.ByteBuffer: byte[] array()>();

        return $r23;
    }

    public volatile androidx.media3.decoder.CryptoConfig createCryptoConfig(byte[]) throws android.media.MediaCryptoException
    {
        androidx.media3.exoplayer.drm.FrameworkMediaDrm r0;
        byte[] r1;
        androidx.media3.exoplayer.drm.FrameworkCryptoConfig $r2;

        r0 := @this: androidx.media3.exoplayer.drm.FrameworkMediaDrm;

        r1 := @parameter0: byte[];

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.drm.FrameworkMediaDrm: androidx.media3.exoplayer.drm.FrameworkCryptoConfig createCryptoConfig(byte[])>(r1);

        return $r2;
    }

    private void lambda$setOnExpirationUpdateListener$3(androidx.media3.exoplayer.drm.ExoMediaDrm$OnExpirationUpdateListener, android.media.MediaDrm, byte[], long)
    {
        androidx.media3.exoplayer.drm.FrameworkMediaDrm r0;
        androidx.media3.exoplayer.drm.ExoMediaDrm$OnExpirationUpdateListener r1;
        android.media.MediaDrm r2;
        byte[] r3;
        long l0;

        r0 := @this: androidx.media3.exoplayer.drm.FrameworkMediaDrm;

        r1 := @parameter0: androidx.media3.exoplayer.drm.ExoMediaDrm$OnExpirationUpdateListener;

        r2 := @parameter1: android.media.MediaDrm;

        r3 := @parameter2: byte[];

        l0 := @parameter3: long;

        interfaceinvoke r1.<androidx.media3.exoplayer.drm.ExoMediaDrm$OnExpirationUpdateListener: void onExpirationUpdate(androidx.media3.exoplayer.drm.ExoMediaDrm,byte[],long)>(r0, r3, l0);

        return;
    }

    private void lambda$setOnKeyStatusChangeListener$2(androidx.media3.exoplayer.drm.ExoMediaDrm$OnKeyStatusChangeListener, android.media.MediaDrm, byte[], java.util.List, boolean)
    {
        androidx.media3.exoplayer.drm.FrameworkMediaDrm r0;
        androidx.media3.exoplayer.drm.ExoMediaDrm$OnKeyStatusChangeListener r1;
        android.media.MediaDrm r2;
        byte[] r3, $r11;
        java.util.List r4;
        boolean z0, $z1;
        java.util.ArrayList r5, $r8;
        java.util.Iterator r6;
        android.media.MediaDrm$KeyStatus r7;
        java.lang.Object $r9;
        androidx.media3.exoplayer.drm.ExoMediaDrm$KeyStatus $r10;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.drm.FrameworkMediaDrm;

        r1 := @parameter0: androidx.media3.exoplayer.drm.ExoMediaDrm$OnKeyStatusChangeListener;

        r2 := @parameter1: android.media.MediaDrm;

        r3 := @parameter2: byte[];

        r4 := @parameter3: java.util.List;

        z0 := @parameter4: boolean;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r5 = $r8;

        r6 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r9 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (android.media.MediaDrm$KeyStatus) $r9;

        $r10 = new androidx.media3.exoplayer.drm.ExoMediaDrm$KeyStatus;

        $i0 = virtualinvoke r7.<android.media.MediaDrm$KeyStatus: int getStatusCode()>();

        $r11 = virtualinvoke r7.<android.media.MediaDrm$KeyStatus: byte[] getKeyId()>();

        specialinvoke $r10.<androidx.media3.exoplayer.drm.ExoMediaDrm$KeyStatus: void <init>(int,byte[])>($i0, $r11);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label1;

     label2:
        interfaceinvoke r1.<androidx.media3.exoplayer.drm.ExoMediaDrm$OnKeyStatusChangeListener: void onKeyStatusChange(androidx.media3.exoplayer.drm.ExoMediaDrm,byte[],java.util.List,boolean)>(r0, r3, r5, z0);

        return;
    }

    private void lambda$setOnEventListener$1(androidx.media3.exoplayer.drm.ExoMediaDrm$OnEventListener, android.media.MediaDrm, byte[], int, int, byte[])
    {
        androidx.media3.exoplayer.drm.FrameworkMediaDrm r0;
        androidx.media3.exoplayer.drm.ExoMediaDrm$OnEventListener r1;
        android.media.MediaDrm r2;
        byte[] r3, r4;
        int i0, i1;

        r0 := @this: androidx.media3.exoplayer.drm.FrameworkMediaDrm;

        r1 := @parameter0: androidx.media3.exoplayer.drm.ExoMediaDrm$OnEventListener;

        r2 := @parameter1: android.media.MediaDrm;

        r3 := @parameter2: byte[];

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r4 := @parameter5: byte[];

        interfaceinvoke r1.<androidx.media3.exoplayer.drm.ExoMediaDrm$OnEventListener: void onEvent(androidx.media3.exoplayer.drm.ExoMediaDrm,byte[],int,int,byte[])>(r0, r3, i0, i1, r4);

        return;
    }

    private static androidx.media3.exoplayer.drm.ExoMediaDrm lambda$static$0(java.util.UUID)
    {
        java.util.UUID r0;
        androidx.media3.exoplayer.drm.FrameworkMediaDrm $r1;

        r0 := @parameter0: java.util.UUID;

        $r1 = staticinvoke <androidx.media3.exoplayer.drm.FrameworkMediaDrm: androidx.media3.exoplayer.drm.FrameworkMediaDrm newInstance(java.util.UUID)>(r0);

        return $r1;
    }

    static void <clinit>()
    {
        androidx.media3.exoplayer.drm.ExoMediaDrm$Provider $r0;

        $r0 = dynamicinvoke "acquireExoMediaDrm" <androidx.media3.exoplayer.drm.ExoMediaDrm$Provider ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: androidx.media3.exoplayer.drm.ExoMediaDrm __METHODTYPE__(java.util.UUID), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.exoplayer.drm.FrameworkMediaDrm: androidx.media3.exoplayer.drm.ExoMediaDrm lambda$static$0(java.util.UUID)>, methodtype: androidx.media3.exoplayer.drm.ExoMediaDrm __METHODTYPE__(java.util.UUID));

        <androidx.media3.exoplayer.drm.FrameworkMediaDrm: androidx.media3.exoplayer.drm.ExoMediaDrm$Provider DEFAULT_PROVIDER> = $r0;

        return;
    }

androidx.media3.exoplayer.drm.FrameworkMediaDrm$Api31
    private void <init>()
    {
        androidx.media3.exoplayer.drm.FrameworkMediaDrm$Api31 r0;

        r0 := @this: androidx.media3.exoplayer.drm.FrameworkMediaDrm$Api31;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean requiresSecureDecoder(android.media.MediaDrm, java.lang.String)
    {
        android.media.MediaDrm r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @parameter0: android.media.MediaDrm;

        r1 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<android.media.MediaDrm: boolean requiresSecureDecoder(java.lang.String)>(r1);

        return $z0;
    }

    public static void setLogSessionIdOnMediaDrmSession(android.media.MediaDrm, byte[], androidx.media3.exoplayer.analytics.PlayerId)
    {
        android.media.MediaDrm r0;
        byte[] r1;
        androidx.media3.exoplayer.analytics.PlayerId r2;
        android.media.metrics.LogSessionId r3, $r5;
        android.media.MediaDrm$PlaybackComponent r4, $r6;
        boolean $z0;
        java.lang.Object $r7;

        r0 := @parameter0: android.media.MediaDrm;

        r1 := @parameter1: byte[];

        r2 := @parameter2: androidx.media3.exoplayer.analytics.PlayerId;

        r3 = virtualinvoke r2.<androidx.media3.exoplayer.analytics.PlayerId: android.media.metrics.LogSessionId getLogSessionId()>();

        $r5 = <android.media.metrics.LogSessionId: android.media.metrics.LogSessionId LOG_SESSION_ID_NONE>;

        $z0 = virtualinvoke r3.<android.media.metrics.LogSessionId: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        $r6 = virtualinvoke r0.<android.media.MediaDrm: android.media.MediaDrm$PlaybackComponent getPlaybackComponent(byte[])>(r1);

        $r7 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r6);

        r4 = (android.media.MediaDrm$PlaybackComponent) $r7;

        virtualinvoke r4.<android.media.MediaDrm$PlaybackComponent: void setLogSessionId(android.media.metrics.LogSessionId)>(r3);

     label1:
        return;
    }

