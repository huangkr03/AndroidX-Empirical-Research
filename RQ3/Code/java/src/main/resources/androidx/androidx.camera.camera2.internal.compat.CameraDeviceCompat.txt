androidx.camera.camera2.internal.compat.CameraDeviceCompat
<androidx.camera.camera2.internal.compat.CameraDeviceCompat: int SESSION_OPERATION_MODE_NORMAL>
<androidx.camera.camera2.internal.compat.CameraDeviceCompat: int SESSION_OPERATION_MODE_CONSTRAINED_HIGH_SPEED>
<androidx.camera.camera2.internal.compat.CameraDeviceCompat: androidx.camera.camera2.internal.compat.CameraDeviceCompat$CameraDeviceCompatImpl mImpl>
    private void <init>(android.hardware.camera2.CameraDevice, android.os.Handler)
    {
        androidx.camera.camera2.internal.compat.CameraDeviceCompat r0;
        android.hardware.camera2.CameraDevice r1;
        android.os.Handler r2;
        int $i0, $i1, $i2;
        androidx.camera.camera2.internal.compat.CameraDeviceCompatBaseImpl $r3;
        androidx.camera.camera2.internal.compat.CameraDeviceCompatApi23Impl $r4;
        androidx.camera.camera2.internal.compat.CameraDeviceCompatApi24Impl $r5;
        androidx.camera.camera2.internal.compat.CameraDeviceCompatApi28Impl $r6;

        r0 := @this: androidx.camera.camera2.internal.compat.CameraDeviceCompat;

        r1 := @parameter0: android.hardware.camera2.CameraDevice;

        r2 := @parameter1: android.os.Handler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 28 goto label1;

        $r6 = new androidx.camera.camera2.internal.compat.CameraDeviceCompatApi28Impl;

        specialinvoke $r6.<androidx.camera.camera2.internal.compat.CameraDeviceCompatApi28Impl: void <init>(android.hardware.camera2.CameraDevice)>(r1);

        r0.<androidx.camera.camera2.internal.compat.CameraDeviceCompat: androidx.camera.camera2.internal.compat.CameraDeviceCompat$CameraDeviceCompatImpl mImpl> = $r6;

        goto label4;

     label1:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 24 goto label2;

        $r5 = staticinvoke <androidx.camera.camera2.internal.compat.CameraDeviceCompatApi24Impl: androidx.camera.camera2.internal.compat.CameraDeviceCompatApi24Impl create(android.hardware.camera2.CameraDevice,android.os.Handler)>(r1, r2);

        r0.<androidx.camera.camera2.internal.compat.CameraDeviceCompat: androidx.camera.camera2.internal.compat.CameraDeviceCompat$CameraDeviceCompatImpl mImpl> = $r5;

        goto label4;

     label2:
        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 23 goto label3;

        $r4 = staticinvoke <androidx.camera.camera2.internal.compat.CameraDeviceCompatApi23Impl: androidx.camera.camera2.internal.compat.CameraDeviceCompatApi23Impl create(android.hardware.camera2.CameraDevice,android.os.Handler)>(r1, r2);

        r0.<androidx.camera.camera2.internal.compat.CameraDeviceCompat: androidx.camera.camera2.internal.compat.CameraDeviceCompat$CameraDeviceCompatImpl mImpl> = $r4;

        goto label4;

     label3:
        $r3 = staticinvoke <androidx.camera.camera2.internal.compat.CameraDeviceCompatBaseImpl: androidx.camera.camera2.internal.compat.CameraDeviceCompatBaseImpl create(android.hardware.camera2.CameraDevice,android.os.Handler)>(r1, r2);

        r0.<androidx.camera.camera2.internal.compat.CameraDeviceCompat: androidx.camera.camera2.internal.compat.CameraDeviceCompat$CameraDeviceCompatImpl mImpl> = $r3;

     label4:
        return;
    }

    public static androidx.camera.camera2.internal.compat.CameraDeviceCompat toCameraDeviceCompat(android.hardware.camera2.CameraDevice)
    {
        android.hardware.camera2.CameraDevice r0;
        android.os.Handler $r1;
        androidx.camera.camera2.internal.compat.CameraDeviceCompat $r2;

        r0 := @parameter0: android.hardware.camera2.CameraDevice;

        $r1 = staticinvoke <androidx.camera.core.impl.utils.MainThreadAsyncHandler: android.os.Handler getInstance()>();

        $r2 = staticinvoke <androidx.camera.camera2.internal.compat.CameraDeviceCompat: androidx.camera.camera2.internal.compat.CameraDeviceCompat toCameraDeviceCompat(android.hardware.camera2.CameraDevice,android.os.Handler)>(r0, $r1);

        return $r2;
    }

    public static androidx.camera.camera2.internal.compat.CameraDeviceCompat toCameraDeviceCompat(android.hardware.camera2.CameraDevice, android.os.Handler)
    {
        android.hardware.camera2.CameraDevice r0;
        android.os.Handler r1;
        androidx.camera.camera2.internal.compat.CameraDeviceCompat $r2;

        r0 := @parameter0: android.hardware.camera2.CameraDevice;

        r1 := @parameter1: android.os.Handler;

        $r2 = new androidx.camera.camera2.internal.compat.CameraDeviceCompat;

        specialinvoke $r2.<androidx.camera.camera2.internal.compat.CameraDeviceCompat: void <init>(android.hardware.camera2.CameraDevice,android.os.Handler)>(r0, r1);

        return $r2;
    }

    public android.hardware.camera2.CameraDevice toCameraDevice()
    {
        androidx.camera.camera2.internal.compat.CameraDeviceCompat r0;
        androidx.camera.camera2.internal.compat.CameraDeviceCompat$CameraDeviceCompatImpl $r1;
        android.hardware.camera2.CameraDevice $r2;

        r0 := @this: androidx.camera.camera2.internal.compat.CameraDeviceCompat;

        $r1 = r0.<androidx.camera.camera2.internal.compat.CameraDeviceCompat: androidx.camera.camera2.internal.compat.CameraDeviceCompat$CameraDeviceCompatImpl mImpl>;

        $r2 = interfaceinvoke $r1.<androidx.camera.camera2.internal.compat.CameraDeviceCompat$CameraDeviceCompatImpl: android.hardware.camera2.CameraDevice unwrap()>();

        return $r2;
    }

    public void createCaptureSession(androidx.camera.camera2.internal.compat.params.SessionConfigurationCompat) throws androidx.camera.camera2.internal.compat.CameraAccessExceptionCompat
    {
        androidx.camera.camera2.internal.compat.CameraDeviceCompat r0;
        androidx.camera.camera2.internal.compat.params.SessionConfigurationCompat r1;
        androidx.camera.camera2.internal.compat.CameraDeviceCompat$CameraDeviceCompatImpl $r2;

        r0 := @this: androidx.camera.camera2.internal.compat.CameraDeviceCompat;

        r1 := @parameter0: androidx.camera.camera2.internal.compat.params.SessionConfigurationCompat;

        $r2 = r0.<androidx.camera.camera2.internal.compat.CameraDeviceCompat: androidx.camera.camera2.internal.compat.CameraDeviceCompat$CameraDeviceCompatImpl mImpl>;

        interfaceinvoke $r2.<androidx.camera.camera2.internal.compat.CameraDeviceCompat$CameraDeviceCompatImpl: void createCaptureSession(androidx.camera.camera2.internal.compat.params.SessionConfigurationCompat)>(r1);

        return;
    }

