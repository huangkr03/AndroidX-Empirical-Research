androidx.camera.camera2.internal.compat.quirk.ExtraSupportedSurfaceCombinationsQuirk
<androidx.camera.camera2.internal.compat.quirk.ExtraSupportedSurfaceCombinationsQuirk: java.lang.String TAG>
<androidx.camera.camera2.internal.compat.quirk.ExtraSupportedSurfaceCombinationsQuirk: androidx.camera.core.impl.SurfaceCombination FULL_LEVEL_YUV_PRIV_YUV_CONFIGURATION>
<androidx.camera.camera2.internal.compat.quirk.ExtraSupportedSurfaceCombinationsQuirk: androidx.camera.core.impl.SurfaceCombination FULL_LEVEL_YUV_YUV_YUV_CONFIGURATION>
<androidx.camera.camera2.internal.compat.quirk.ExtraSupportedSurfaceCombinationsQuirk: java.util.Set SUPPORT_EXTRA_FULL_CONFIGURATIONS_SAMSUNG_MODELS>
    public void <init>()
    {
        androidx.camera.camera2.internal.compat.quirk.ExtraSupportedSurfaceCombinationsQuirk r0;

        r0 := @this: androidx.camera.camera2.internal.compat.quirk.ExtraSupportedSurfaceCombinationsQuirk;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static boolean load()
    {
        boolean $z0, $z1, $z2;

        $z0 = staticinvoke <androidx.camera.camera2.internal.compat.quirk.ExtraSupportedSurfaceCombinationsQuirk: boolean isSamsungS7()>();

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <androidx.camera.camera2.internal.compat.quirk.ExtraSupportedSurfaceCombinationsQuirk: boolean supportExtraFullConfigurationsSamsungDevice()>();

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    private static boolean isSamsungS7()
    {
        java.lang.String $r0, $r1, $r2, $r3;
        boolean $z0, $z1, $z2;

        $r1 = "heroqltevzw";

        $r0 = <android.os.Build: java.lang.String DEVICE>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r0);

        if $z0 != 0 goto label1;

        $r3 = "heroqltetmo";

        $r2 = <android.os.Build: java.lang.String DEVICE>;

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    private static boolean supportExtraFullConfigurationsSamsungDevice()
    {
        java.lang.String r0, $r1, $r2, $r4;
        boolean $z0, $z1;
        java.util.Locale $r3;
        java.util.Set $r5;

        $r2 = "samsung";

        $r1 = <android.os.Build: java.lang.String BRAND>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r4 = <android.os.Build: java.lang.String MODEL>;

        $r3 = <java.util.Locale: java.util.Locale US>;

        r0 = virtualinvoke $r4.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r3);

        $r5 = <androidx.camera.camera2.internal.compat.quirk.ExtraSupportedSurfaceCombinationsQuirk: java.util.Set SUPPORT_EXTRA_FULL_CONFIGURATIONS_SAMSUNG_MODELS>;

        $z1 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>(r0);

        return $z1;
    }

    public java.util.List getExtraSupportedSurfaceCombinations(java.lang.String, int)
    {
        androidx.camera.camera2.internal.compat.quirk.ExtraSupportedSurfaceCombinationsQuirk r0;
        java.lang.String r1;
        int i0;
        boolean $z0, $z1;
        java.util.List $r2, $r3, $r4;

        r0 := @this: androidx.camera.camera2.internal.compat.quirk.ExtraSupportedSurfaceCombinationsQuirk;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z0 = staticinvoke <androidx.camera.camera2.internal.compat.quirk.ExtraSupportedSurfaceCombinationsQuirk: boolean isSamsungS7()>();

        if $z0 == 0 goto label1;

        $r4 = specialinvoke r0.<androidx.camera.camera2.internal.compat.quirk.ExtraSupportedSurfaceCombinationsQuirk: java.util.List getSamsungS7ExtraCombinations(java.lang.String)>(r1);

        return $r4;

     label1:
        $z1 = staticinvoke <androidx.camera.camera2.internal.compat.quirk.ExtraSupportedSurfaceCombinationsQuirk: boolean supportExtraFullConfigurationsSamsungDevice()>();

        if $z1 == 0 goto label2;

        $r3 = specialinvoke r0.<androidx.camera.camera2.internal.compat.quirk.ExtraSupportedSurfaceCombinationsQuirk: java.util.List getLimitedDeviceExtraSupportedFullConfigurations(int)>(i0);

        return $r3;

     label2:
        $r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r2;
    }

    private java.util.List getSamsungS7ExtraCombinations(java.lang.String)
    {
        androidx.camera.camera2.internal.compat.quirk.ExtraSupportedSurfaceCombinationsQuirk r0;
        java.lang.String r1;
        java.util.ArrayList r2, $r3;
        boolean $z0;
        androidx.camera.core.impl.SurfaceCombination $r4;

        r0 := @this: androidx.camera.camera2.internal.compat.quirk.ExtraSupportedSurfaceCombinationsQuirk;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r2 = $r3;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("1");

        if $z0 == 0 goto label1;

        $r4 = <androidx.camera.camera2.internal.compat.quirk.ExtraSupportedSurfaceCombinationsQuirk: androidx.camera.core.impl.SurfaceCombination FULL_LEVEL_YUV_PRIV_YUV_CONFIGURATION>;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r4);

     label1:
        return r2;
    }

    private java.util.List getLimitedDeviceExtraSupportedFullConfigurations(int)
    {
        androidx.camera.camera2.internal.compat.quirk.ExtraSupportedSurfaceCombinationsQuirk r0;
        int i0;
        java.util.ArrayList r1, $r2;
        androidx.camera.core.impl.SurfaceCombination $r3, $r4;

        r0 := @this: androidx.camera.camera2.internal.compat.quirk.ExtraSupportedSurfaceCombinationsQuirk;

        i0 := @parameter0: int;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r1 = $r2;

        if i0 != 0 goto label1;

        $r3 = <androidx.camera.camera2.internal.compat.quirk.ExtraSupportedSurfaceCombinationsQuirk: androidx.camera.core.impl.SurfaceCombination FULL_LEVEL_YUV_PRIV_YUV_CONFIGURATION>;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r3);

        $r4 = <androidx.camera.camera2.internal.compat.quirk.ExtraSupportedSurfaceCombinationsQuirk: androidx.camera.core.impl.SurfaceCombination FULL_LEVEL_YUV_YUV_YUV_CONFIGURATION>;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r4);

     label1:
        return r1;
    }

    private static androidx.camera.core.impl.SurfaceCombination createFullYuvPrivYuvConfiguration()
    {
        androidx.camera.core.impl.SurfaceCombination r0, $r1;
        androidx.camera.core.impl.SurfaceConfig$ConfigSize $r2, $r5, $r8;
        androidx.camera.core.impl.SurfaceConfig$ConfigType $r3, $r6, $r9;
        androidx.camera.core.impl.SurfaceConfig $r4, $r7, $r10;

        $r1 = new androidx.camera.core.impl.SurfaceCombination;

        specialinvoke $r1.<androidx.camera.core.impl.SurfaceCombination: void <init>()>();

        r0 = $r1;

        $r3 = <androidx.camera.core.impl.SurfaceConfig$ConfigType: androidx.camera.core.impl.SurfaceConfig$ConfigType YUV>;

        $r2 = <androidx.camera.core.impl.SurfaceConfig$ConfigSize: androidx.camera.core.impl.SurfaceConfig$ConfigSize VGA>;

        $r4 = staticinvoke <androidx.camera.core.impl.SurfaceConfig: androidx.camera.core.impl.SurfaceConfig create(androidx.camera.core.impl.SurfaceConfig$ConfigType,androidx.camera.core.impl.SurfaceConfig$ConfigSize)>($r3, $r2);

        virtualinvoke r0.<androidx.camera.core.impl.SurfaceCombination: boolean addSurfaceConfig(androidx.camera.core.impl.SurfaceConfig)>($r4);

        $r6 = <androidx.camera.core.impl.SurfaceConfig$ConfigType: androidx.camera.core.impl.SurfaceConfig$ConfigType PRIV>;

        $r5 = <androidx.camera.core.impl.SurfaceConfig$ConfigSize: androidx.camera.core.impl.SurfaceConfig$ConfigSize PREVIEW>;

        $r7 = staticinvoke <androidx.camera.core.impl.SurfaceConfig: androidx.camera.core.impl.SurfaceConfig create(androidx.camera.core.impl.SurfaceConfig$ConfigType,androidx.camera.core.impl.SurfaceConfig$ConfigSize)>($r6, $r5);

        virtualinvoke r0.<androidx.camera.core.impl.SurfaceCombination: boolean addSurfaceConfig(androidx.camera.core.impl.SurfaceConfig)>($r7);

        $r9 = <androidx.camera.core.impl.SurfaceConfig$ConfigType: androidx.camera.core.impl.SurfaceConfig$ConfigType YUV>;

        $r8 = <androidx.camera.core.impl.SurfaceConfig$ConfigSize: androidx.camera.core.impl.SurfaceConfig$ConfigSize MAXIMUM>;

        $r10 = staticinvoke <androidx.camera.core.impl.SurfaceConfig: androidx.camera.core.impl.SurfaceConfig create(androidx.camera.core.impl.SurfaceConfig$ConfigType,androidx.camera.core.impl.SurfaceConfig$ConfigSize)>($r9, $r8);

        virtualinvoke r0.<androidx.camera.core.impl.SurfaceCombination: boolean addSurfaceConfig(androidx.camera.core.impl.SurfaceConfig)>($r10);

        return r0;
    }

    private static androidx.camera.core.impl.SurfaceCombination createFullYuvYuvYuvConfiguration()
    {
        androidx.camera.core.impl.SurfaceCombination r0, $r1;
        androidx.camera.core.impl.SurfaceConfig$ConfigSize $r2, $r5, $r8;
        androidx.camera.core.impl.SurfaceConfig$ConfigType $r3, $r6, $r9;
        androidx.camera.core.impl.SurfaceConfig $r4, $r7, $r10;

        $r1 = new androidx.camera.core.impl.SurfaceCombination;

        specialinvoke $r1.<androidx.camera.core.impl.SurfaceCombination: void <init>()>();

        r0 = $r1;

        $r3 = <androidx.camera.core.impl.SurfaceConfig$ConfigType: androidx.camera.core.impl.SurfaceConfig$ConfigType YUV>;

        $r2 = <androidx.camera.core.impl.SurfaceConfig$ConfigSize: androidx.camera.core.impl.SurfaceConfig$ConfigSize VGA>;

        $r4 = staticinvoke <androidx.camera.core.impl.SurfaceConfig: androidx.camera.core.impl.SurfaceConfig create(androidx.camera.core.impl.SurfaceConfig$ConfigType,androidx.camera.core.impl.SurfaceConfig$ConfigSize)>($r3, $r2);

        virtualinvoke r0.<androidx.camera.core.impl.SurfaceCombination: boolean addSurfaceConfig(androidx.camera.core.impl.SurfaceConfig)>($r4);

        $r6 = <androidx.camera.core.impl.SurfaceConfig$ConfigType: androidx.camera.core.impl.SurfaceConfig$ConfigType YUV>;

        $r5 = <androidx.camera.core.impl.SurfaceConfig$ConfigSize: androidx.camera.core.impl.SurfaceConfig$ConfigSize PREVIEW>;

        $r7 = staticinvoke <androidx.camera.core.impl.SurfaceConfig: androidx.camera.core.impl.SurfaceConfig create(androidx.camera.core.impl.SurfaceConfig$ConfigType,androidx.camera.core.impl.SurfaceConfig$ConfigSize)>($r6, $r5);

        virtualinvoke r0.<androidx.camera.core.impl.SurfaceCombination: boolean addSurfaceConfig(androidx.camera.core.impl.SurfaceConfig)>($r7);

        $r9 = <androidx.camera.core.impl.SurfaceConfig$ConfigType: androidx.camera.core.impl.SurfaceConfig$ConfigType YUV>;

        $r8 = <androidx.camera.core.impl.SurfaceConfig$ConfigSize: androidx.camera.core.impl.SurfaceConfig$ConfigSize MAXIMUM>;

        $r10 = staticinvoke <androidx.camera.core.impl.SurfaceConfig: androidx.camera.core.impl.SurfaceConfig create(androidx.camera.core.impl.SurfaceConfig$ConfigType,androidx.camera.core.impl.SurfaceConfig$ConfigSize)>($r9, $r8);

        virtualinvoke r0.<androidx.camera.core.impl.SurfaceCombination: boolean addSurfaceConfig(androidx.camera.core.impl.SurfaceConfig)>($r10);

        return r0;
    }

    static void <clinit>()
    {
        androidx.camera.core.impl.SurfaceCombination $r0, $r1;
        java.util.HashSet $r2;
        java.lang.String[] $r3;
        java.util.List $r4;

        $r0 = staticinvoke <androidx.camera.camera2.internal.compat.quirk.ExtraSupportedSurfaceCombinationsQuirk: androidx.camera.core.impl.SurfaceCombination createFullYuvPrivYuvConfiguration()>();

        <androidx.camera.camera2.internal.compat.quirk.ExtraSupportedSurfaceCombinationsQuirk: androidx.camera.core.impl.SurfaceCombination FULL_LEVEL_YUV_PRIV_YUV_CONFIGURATION> = $r0;

        $r1 = staticinvoke <androidx.camera.camera2.internal.compat.quirk.ExtraSupportedSurfaceCombinationsQuirk: androidx.camera.core.impl.SurfaceCombination createFullYuvYuvYuvConfiguration()>();

        <androidx.camera.camera2.internal.compat.quirk.ExtraSupportedSurfaceCombinationsQuirk: androidx.camera.core.impl.SurfaceCombination FULL_LEVEL_YUV_YUV_YUV_CONFIGURATION> = $r1;

        $r2 = new java.util.HashSet;

        $r3 = newarray (java.lang.String)[147];

        $r3[0] = "SM-A515F";

        $r3[1] = "SM-A515U";

        $r3[2] = "SM-A515U1";

        $r3[3] = "SM-A515W";

        $r3[4] = "SM-S515DL";

        $r3[5] = "SC-54A";

        $r3[6] = "SCG07";

        $r3[7] = "SM-A5160";

        $r3[8] = "SM-A516B";

        $r3[9] = "SM-A516N";

        $r3[10] = "SM-A516U";

        $r3[11] = "SM-A516U1";

        $r3[12] = "SM-A516V";

        $r3[13] = "SM-A715F";

        $r3[14] = "SM-A715W";

        $r3[15] = "SM-A7160";

        $r3[16] = "SM-A716B";

        $r3[17] = "SM-A716U";

        $r3[18] = "SM-A716U1";

        $r3[19] = "SM-A716V";

        $r3[20] = "SM-A8050";

        $r3[21] = "SM-A805F";

        $r3[22] = "SM-A805N";

        $r3[23] = "SCV44";

        $r3[24] = "SM-F9000";

        $r3[25] = "SM-F900F";

        $r3[26] = "SM-F900U";

        $r3[27] = "SM-F900U1";

        $r3[28] = "SM-F900W";

        $r3[29] = "SM-F907B";

        $r3[30] = "SM-F907N";

        $r3[31] = "SM-N970F";

        $r3[32] = "SM-N9700";

        $r3[33] = "SM-N970U";

        $r3[34] = "SM-N970U1";

        $r3[35] = "SM-N970W";

        $r3[36] = "SM-N971N";

        $r3[37] = "SM-N770F";

        $r3[38] = "SC-01M";

        $r3[39] = "SCV45";

        $r3[40] = "SM-N9750";

        $r3[41] = "SM-N975C";

        $r3[42] = "SM-N975U";

        $r3[43] = "SM-N975U1";

        $r3[44] = "SM-N975W";

        $r3[45] = "SM-N975F";

        $r3[46] = "SM-N976B";

        $r3[47] = "SM-N976N";

        $r3[48] = "SM-N9760";

        $r3[49] = "SM-N976Q";

        $r3[50] = "SM-N976V";

        $r3[51] = "SM-N976U";

        $r3[52] = "SM-N9810";

        $r3[53] = "SM-N981N";

        $r3[54] = "SM-N981U";

        $r3[55] = "SM-N981U1";

        $r3[56] = "SM-N981W";

        $r3[57] = "SM-N981B";

        $r3[58] = "SC-53A";

        $r3[59] = "SCG06";

        $r3[60] = "SM-N9860";

        $r3[61] = "SM-N986N";

        $r3[62] = "SM-N986U";

        $r3[63] = "SM-N986U1";

        $r3[64] = "SM-N986W";

        $r3[65] = "SM-N986B";

        $r3[66] = "SC-03L";

        $r3[67] = "SCV41";

        $r3[68] = "SM-G973F";

        $r3[69] = "SM-G973N";

        $r3[70] = "SM-G9730";

        $r3[71] = "SM-G9738";

        $r3[72] = "SM-G973C";

        $r3[73] = "SM-G973U";

        $r3[74] = "SM-G973U1";

        $r3[75] = "SM-G973W";

        $r3[76] = "SM-G977B";

        $r3[77] = "SM-G977N";

        $r3[78] = "SM-G977P";

        $r3[79] = "SM-G977T";

        $r3[80] = "SM-G977U";

        $r3[81] = "SM-G770F";

        $r3[82] = "SM-G770U1";

        $r3[83] = "SC-04L";

        $r3[84] = "SCV42";

        $r3[85] = "SM-G975F";

        $r3[86] = "SM-G975N";

        $r3[87] = "SM-G9750";

        $r3[88] = "SM-G9758";

        $r3[89] = "SM-G975U";

        $r3[90] = "SM-G975U1";

        $r3[91] = "SM-G975W";

        $r3[92] = "SC-05L";

        $r3[93] = "SM-G970F";

        $r3[94] = "SM-G970N";

        $r3[95] = "SM-G9700";

        $r3[96] = "SM-G9708";

        $r3[97] = "SM-G970U";

        $r3[98] = "SM-G970U1";

        $r3[99] = "SM-G970W";

        $r3[100] = "SC-51A";

        $r3[101] = "SC51Aa";

        $r3[102] = "SCG01";

        $r3[103] = "SM-G9810";

        $r3[104] = "SM-G981N";

        $r3[105] = "SM-G981U";

        $r3[106] = "SM-G981U1";

        $r3[107] = "SM-G981V";

        $r3[108] = "SM-G981W";

        $r3[109] = "SM-G981B";

        $r3[110] = "SCG03";

        $r3[111] = "SM-G9880";

        $r3[112] = "SM-G988N";

        $r3[113] = "SM-G988Q";

        $r3[114] = "SM-G988U";

        $r3[115] = "SM-G988U1";

        $r3[116] = "SM-G988W";

        $r3[117] = "SM-G988B";

        $r3[118] = "SC-52A";

        $r3[119] = "SCG02";

        $r3[120] = "SM-G9860";

        $r3[121] = "SM-G986N";

        $r3[122] = "SM-G986U";

        $r3[123] = "SM-G986U1";

        $r3[124] = "SM-G986W";

        $r3[125] = "SM-G986B";

        $r3[126] = "SCV47";

        $r3[127] = "SM-F7000";

        $r3[128] = "SM-F700F";

        $r3[129] = "SM-F700N";

        $r3[130] = "SM-F700U";

        $r3[131] = "SM-F700U1";

        $r3[132] = "SM-F700W";

        $r3[133] = "SCG04";

        $r3[134] = "SM-F7070";

        $r3[135] = "SM-F707B";

        $r3[136] = "SM-F707N";

        $r3[137] = "SM-F707U";

        $r3[138] = "SM-F707U1";

        $r3[139] = "SM-F707W";

        $r3[140] = "SM-F9160";

        $r3[141] = "SM-F916B";

        $r3[142] = "SM-F916N";

        $r3[143] = "SM-F916Q";

        $r3[144] = "SM-F916U";

        $r3[145] = "SM-F916U1";

        $r3[146] = "SM-F916W";

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        specialinvoke $r2.<java.util.HashSet: void <init>(java.util.Collection)>($r4);

        <androidx.camera.camera2.internal.compat.quirk.ExtraSupportedSurfaceCombinationsQuirk: java.util.Set SUPPORT_EXTRA_FULL_CONFIGURATIONS_SAMSUNG_MODELS> = $r2;

        return;
    }

