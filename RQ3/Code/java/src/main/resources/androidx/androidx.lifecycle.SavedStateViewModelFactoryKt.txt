androidx.lifecycle.SavedStateViewModelFactoryKt
<androidx.lifecycle.SavedStateViewModelFactoryKt: java.util.List ANDROID_VIEWMODEL_SIGNATURE>
<androidx.lifecycle.SavedStateViewModelFactoryKt: java.util.List VIEWMODEL_SIGNATURE>
    public static final transient androidx.lifecycle.ViewModel newInstance(java.lang.Class, java.lang.reflect.Constructor, java.lang.Object[])
    {
        java.lang.Class r0;
        java.lang.reflect.Constructor r1;
        java.lang.Object[] r2, $r4;
        androidx.lifecycle.ViewModel r3;
        int $i0;
        java.lang.Object $r5;
        java.lang.Throwable $r6, $r13, $r14, $r20, $r21, $r27, r28, r29, r30;
        java.lang.RuntimeException $r7, $r15, $r22;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r16, $r17, $r18, $r23, $r24, $r25;
        java.lang.String $r12, $r19, $r26;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.reflect.Constructor;

        r2 := @parameter2: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "modelClass");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "constructor");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "params");

     label1:
        $i0 = lengthof r2;

        $r4 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r2, $i0);

        $r5 = virtualinvoke r1.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r4);

        r3 = (androidx.lifecycle.ViewModel) $r5;

     label2:
        goto label6;

     label3:
        $r21 := @caughtexception;

        r28 = $r21;

        $r22 = new java.lang.RuntimeException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to access ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        $r27 = (java.lang.Throwable) r28;

        specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r26, $r27);

        throw $r22;

     label4:
        $r6 := @caughtexception;

        r29 = $r6;

        $r7 = new java.lang.RuntimeException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("A ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be instantiated.");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = (java.lang.Throwable) r29;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r12, $r13);

        throw $r7;

     label5:
        $r14 := @caughtexception;

        r30 = $r14;

        $r15 = new java.lang.RuntimeException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("An exception happened in constructor of ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = virtualinvoke r30.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r19, $r20);

        throw $r15;

     label6:
        return r3;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.InstantiationException from label1 to label2 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label5;
    }

    public static final java.lang.reflect.Constructor findMatchingConstructor(java.lang.Class, java.util.List)
    {
        java.lang.Class r0;
        java.util.List r1, r4;
        java.lang.reflect.Constructor[] r2, $r5;
        int i0, $i1, $i2, i3;
        java.lang.reflect.Constructor r3;
        java.lang.Class[] $r6;
        java.lang.Object[] $r7;
        boolean $z0, $z1;
        java.util.Collection $r8;
        java.lang.UnsupportedOperationException $r9;
        java.lang.StringBuilder $r10, $r11, $r13, $r14, $r15;
        java.lang.String $r12, $r16;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "modelClass");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "signature");

        $r5 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "modelClass.constructors");

        r2 = $r5;

        i3 = 0;

        i0 = lengthof r2;

     label1:
        if i3 >= i0 goto label4;

        r3 = r2[i3];

        $r6 = virtualinvoke r3.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "constructor.parameterTypes");

        $r7 = (java.lang.Object[]) $r6;

        r4 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toList(java.lang.Object[])>($r7);

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, r4);

        if $z0 == 0 goto label2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r3, "null cannot be cast to non-null type java.lang.reflect.Constructor<T of androidx.lifecycle.SavedStateViewModelFactoryKt.findMatchingConstructor>");

        return r3;

     label2:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        $i2 = interfaceinvoke r4.<java.util.List: int size()>();

        if $i1 != $i2 goto label3;

        $r8 = (java.util.Collection) r1;

        $z1 = interfaceinvoke r4.<java.util.List: boolean containsAll(java.util.Collection)>($r8);

        if $z1 == 0 goto label3;

        $r9 = new java.lang.UnsupportedOperationException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Class ");

        $r12 = virtualinvoke r0.<java.lang.Class: java.lang.String getSimpleName()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must have parameters in the proper order: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r16);

        throw $r9;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        return null;
    }

    public static final java.util.List access$getANDROID_VIEWMODEL_SIGNATURE$p()
    {
        java.util.List $r0;

        $r0 = <androidx.lifecycle.SavedStateViewModelFactoryKt: java.util.List ANDROID_VIEWMODEL_SIGNATURE>;

        return $r0;
    }

    public static final java.util.List access$getVIEWMODEL_SIGNATURE$p()
    {
        java.util.List $r0;

        $r0 = <androidx.lifecycle.SavedStateViewModelFactoryKt: java.util.List VIEWMODEL_SIGNATURE>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Class[] r0;
        java.util.List $r1, $r2;

        r0 = newarray (java.lang.Class)[2];

        r0[0] = class "Landroid/app/Application;";

        r0[1] = class "Landroidx/lifecycle/SavedStateHandle;";

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object[])>(r0);

        <androidx.lifecycle.SavedStateViewModelFactoryKt: java.util.List ANDROID_VIEWMODEL_SIGNATURE> = $r1;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>(class "Landroidx/lifecycle/SavedStateHandle;");

        <androidx.lifecycle.SavedStateViewModelFactoryKt: java.util.List VIEWMODEL_SIGNATURE> = $r2;

        return;
    }

