androidx.navigation.safeargs.gradle.SafeArgsPlugin
<androidx.navigation.safeargs.gradle.SafeArgsPlugin: org.gradle.api.provider.ProviderFactory providerFactory>
    protected void <init>(org.gradle.api.provider.ProviderFactory)
    {
        androidx.navigation.safeargs.gradle.SafeArgsPlugin r0;
        org.gradle.api.provider.ProviderFactory r1;

        r0 := @this: androidx.navigation.safeargs.gradle.SafeArgsPlugin;

        r1 := @parameter0: org.gradle.api.provider.ProviderFactory;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "providerFactory");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.navigation.safeargs.gradle.SafeArgsPlugin: org.gradle.api.provider.ProviderFactory providerFactory> = r1;

        return;
    }

    public final org.gradle.api.provider.ProviderFactory getProviderFactory()
    {
        androidx.navigation.safeargs.gradle.SafeArgsPlugin r0;
        org.gradle.api.provider.ProviderFactory $r1;

        r0 := @this: androidx.navigation.safeargs.gradle.SafeArgsPlugin;

        $r1 = r0.<androidx.navigation.safeargs.gradle.SafeArgsPlugin: org.gradle.api.provider.ProviderFactory providerFactory>;

        return $r1;
    }

<androidx.navigation.safeargs.gradle.SafeArgsPlugin: boolean getGenerateKotlin()>
    private final void forEachVariant(com.android.build.gradle.BaseExtension, kotlin.jvm.functions.Function1)
    {
        androidx.navigation.safeargs.gradle.SafeArgsPlugin r0;
        com.android.build.gradle.BaseExtension r1;
        kotlin.jvm.functions.Function1 r2;
        boolean $z0, $z1;
        org.gradle.api.GradleException $r3;
        com.android.build.gradle.LibraryExtension $r4;
        org.gradle.api.internal.DefaultDomainObjectSet $r5;
        org.gradle.api.Action $r6, $r9;
        com.android.build.gradle.AppExtension $r7;
        org.gradle.api.DomainObjectSet $r8;

        r0 := @this: androidx.navigation.safeargs.gradle.SafeArgsPlugin;

        r1 := @parameter0: com.android.build.gradle.BaseExtension;

        r2 := @parameter1: kotlin.jvm.functions.Function1;

        $z0 = r1 instanceof com.android.build.gradle.AppExtension;

        if $z0 == 0 goto label1;

        $r7 = (com.android.build.gradle.AppExtension) r1;

        $r8 = virtualinvoke $r7.<com.android.build.gradle.AppExtension: org.gradle.api.DomainObjectSet getApplicationVariants()>();

        $r9 = dynamicinvoke "execute" <org.gradle.api.Action (kotlin.jvm.functions.Function1)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.navigation.safeargs.gradle.SafeArgsPlugin: void forEachVariant$lambda-0(kotlin.jvm.functions.Function1,com.android.build.gradle.api.ApplicationVariant)>, methodtype: void __METHODTYPE__(com.android.build.gradle.api.ApplicationVariant));

        interfaceinvoke $r8.<org.gradle.api.DomainObjectSet: void all(org.gradle.api.Action)>($r9);

        goto label3;

     label1:
        $z1 = r1 instanceof com.android.build.gradle.LibraryExtension;

        if $z1 == 0 goto label2;

        $r4 = (com.android.build.gradle.LibraryExtension) r1;

        $r5 = virtualinvoke $r4.<com.android.build.gradle.LibraryExtension: org.gradle.api.internal.DefaultDomainObjectSet getLibraryVariants()>();

        $r6 = dynamicinvoke "execute" <org.gradle.api.Action (kotlin.jvm.functions.Function1)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.navigation.safeargs.gradle.SafeArgsPlugin: void forEachVariant$lambda-1(kotlin.jvm.functions.Function1,com.android.build.gradle.api.LibraryVariant)>, methodtype: void __METHODTYPE__(com.android.build.gradle.api.LibraryVariant));

        virtualinvoke $r5.<org.gradle.api.internal.DefaultDomainObjectSet: void all(org.gradle.api.Action)>($r6);

        goto label3;

     label2:
        $r3 = new org.gradle.api.GradleException;

        specialinvoke $r3.<org.gradle.api.GradleException: void <init>(java.lang.String)>("safeargs plugin must be used with android app,library or feature plugin");

        throw $r3;

     label3:
        return;
    }

    public void apply(org.gradle.api.Project)
    {
        androidx.navigation.safeargs.gradle.SafeArgsPlugin r0;
        org.gradle.api.Project r1;
        com.android.build.gradle.BaseExtension r2, $r8;
        boolean z0, $z1, $z2;
        java.util.Map r3, r4;
        com.android.build.api.variant.AndroidComponentsExtension r5, $r15;
        org.gradle.api.plugins.ExtensionContainer $r6, $r9, $r13;
        java.lang.Object $r7, $r10, $r14;
        java.util.LinkedHashMap $r11, $r12;
        androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$1 $r16;
        kotlin.jvm.functions.Function1 $r17, $r19;
        androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$2 $r18;
        org.gradle.api.GradleException $r20, $r21, $r22;

        r0 := @this: androidx.navigation.safeargs.gradle.SafeArgsPlugin;

        r1 := @parameter0: org.gradle.api.Project;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "project");

        $r6 = interfaceinvoke r1.<org.gradle.api.Project: org.gradle.api.plugins.ExtensionContainer getExtensions()>();

        $r7 = interfaceinvoke $r6.<org.gradle.api.plugins.ExtensionContainer: java.lang.Object findByType(java.lang.Class)>(class "Lcom/android/build/gradle/BaseExtension;");

        $r8 = (com.android.build.gradle.BaseExtension) $r7;

        if $r8 != null goto label1;

        $r22 = new org.gradle.api.GradleException;

        specialinvoke $r22.<org.gradle.api.GradleException: void <init>(java.lang.String)>("safeargs plugin must be used with android plugin");

        throw $r22;

     label1:
        r2 = $r8;

        $r9 = interfaceinvoke r1.<org.gradle.api.Project: org.gradle.api.plugins.ExtensionContainer getExtensions()>();

        $r10 = interfaceinvoke $r9.<org.gradle.api.plugins.ExtensionContainer: java.lang.Object findByType(java.lang.Class)>(class "Lorg/jetbrains/kotlin/gradle/dsl/KotlinProjectExtension;");

        if $r10 == null goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        z0 = $z2;

        if z0 != 0 goto label4;

        $z1 = virtualinvoke r0.<androidx.navigation.safeargs.gradle.SafeArgsPlugin: boolean getGenerateKotlin()>();

        if $z1 == 0 goto label4;

        $r21 = new org.gradle.api.GradleException;

        specialinvoke $r21.<org.gradle.api.GradleException: void <init>(java.lang.String)>("androidx.navigation.safeargs.kotlin plugin must be used with kotlin plugin");

        throw $r21;

     label4:
        $r11 = new java.util.LinkedHashMap;

        specialinvoke $r11.<java.util.LinkedHashMap: void <init>()>();

        r3 = (java.util.Map) $r11;

        $r12 = new java.util.LinkedHashMap;

        specialinvoke $r12.<java.util.LinkedHashMap: void <init>()>();

        r4 = (java.util.Map) $r12;

        $r13 = interfaceinvoke r1.<org.gradle.api.Project: org.gradle.api.plugins.ExtensionContainer getExtensions()>();

        $r14 = interfaceinvoke $r13.<org.gradle.api.plugins.ExtensionContainer: java.lang.Object findByType(java.lang.Class)>(class "Lcom/android/build/api/variant/AndroidComponentsExtension;");

        $r15 = (com.android.build.api.variant.AndroidComponentsExtension) $r14;

        if $r15 != null goto label5;

        $r20 = new org.gradle.api.GradleException;

        specialinvoke $r20.<org.gradle.api.GradleException: void <init>(java.lang.String)>("safeargs plugin must be used with android plugin");

        throw $r20;

     label5:
        r5 = $r15;

        $r16 = new androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$1;

        specialinvoke $r16.<androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$1: void <init>(java.util.Map,java.util.Map)>(r3, r4);

        $r17 = (kotlin.jvm.functions.Function1) $r16;

        staticinvoke <com.android.build.api.variant.AndroidComponentsExtension$DefaultImpls: void onVariants$default(com.android.build.api.variant.AndroidComponentsExtension,com.android.build.api.variant.VariantSelector,kotlin.jvm.functions.Function1,int,java.lang.Object)>(r5, null, $r17, 1, null);

        $r18 = new androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$2;

        specialinvoke $r18.<androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$2: void <init>(org.gradle.api.Project,java.util.Map,java.util.Map,androidx.navigation.safeargs.gradle.SafeArgsPlugin)>(r1, r3, r4, r0);

        $r19 = (kotlin.jvm.functions.Function1) $r18;

        specialinvoke r0.<androidx.navigation.safeargs.gradle.SafeArgsPlugin: void forEachVariant(com.android.build.gradle.BaseExtension,kotlin.jvm.functions.Function1)>(r2, $r19);

        return;
    }

    private final org.gradle.api.file.ConfigurableFileCollection navigationFiles(com.android.build.gradle.api.BaseVariant, org.gradle.api.Project)
    {
        androidx.navigation.safeargs.gradle.SafeArgsPlugin r0;
        com.android.build.gradle.api.BaseVariant r1;
        org.gradle.api.Project r2;
        org.gradle.api.provider.Provider r3;
        java.lang.Object[] r4;
        org.gradle.api.provider.ProviderFactory $r5;
        java.util.concurrent.Callable $r6;
        org.gradle.api.file.ConfigurableFileCollection $r7;

        r0 := @this: androidx.navigation.safeargs.gradle.SafeArgsPlugin;

        r1 := @parameter0: com.android.build.gradle.api.BaseVariant;

        r2 := @parameter1: org.gradle.api.Project;

        $r5 = r0.<androidx.navigation.safeargs.gradle.SafeArgsPlugin: org.gradle.api.provider.ProviderFactory providerFactory>;

        $r6 = dynamicinvoke "call" <java.util.concurrent.Callable (com.android.build.gradle.api.BaseVariant)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.navigation.safeargs.gradle.SafeArgsPlugin: java.util.List navigationFiles$lambda-9(com.android.build.gradle.api.BaseVariant)>, methodtype: java.util.List __METHODTYPE__());

        r3 = interfaceinvoke $r5.<org.gradle.api.provider.ProviderFactory: org.gradle.api.provider.Provider provider(java.util.concurrent.Callable)>($r6);

        r4 = newarray (java.lang.Object)[1];

        r4[0] = r3;

        $r7 = interfaceinvoke r2.<org.gradle.api.Project: org.gradle.api.file.ConfigurableFileCollection files(java.lang.Object[])>(r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r7, "project.files(fileProvider)");

        return $r7;
    }

    private static final void forEachVariant$lambda-0(kotlin.jvm.functions.Function1, com.android.build.gradle.api.ApplicationVariant)
    {
        kotlin.jvm.functions.Function1 $r0;
        com.android.build.gradle.api.ApplicationVariant r1;

        $r0 := @parameter0: kotlin.jvm.functions.Function1;

        r1 := @parameter1: com.android.build.gradle.api.ApplicationVariant;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$tmp0");

        interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        return;
    }

    private static final void forEachVariant$lambda-1(kotlin.jvm.functions.Function1, com.android.build.gradle.api.LibraryVariant)
    {
        kotlin.jvm.functions.Function1 $r0;
        com.android.build.gradle.api.LibraryVariant r1;

        $r0 := @parameter0: kotlin.jvm.functions.Function1;

        r1 := @parameter1: com.android.build.gradle.api.LibraryVariant;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$tmp0");

        interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        return;
    }

    private static final java.util.List navigationFiles$lambda-9(com.android.build.gradle.api.BaseVariant)
    {
        com.android.build.gradle.api.BaseVariant $r0;
        java.io.File r1, $r20, $r25, r37, r38, $r39, r44, r50, r55;
        java.util.Collection r2, $r26, r28, r33, r41, r47, r63;
        java.util.List $r3, $r5, $r7, $r9, $r11, $r15, $r18, r59, r61;
        java.util.ArrayList $r4, $r6, $r8, $r10, $r13, $r21;
        boolean $z2, $z3, $z4, $z5, $z8, $z11, $z13, z20, $z21, $z29, z34, z35;
        java.util.LinkedHashMap $r12;
        int $i0;
        java.util.Set $r14;
        java.lang.Object $r16, $r17, $r19, r30, r36, r43, r49, r54, $r58, $r60;
        java.io.File[] $r23;
        java.lang.Object[] $r24;
        java.lang.Iterable $r27, r32, $r34, $r40, r45, $r46, $r51;
        java.util.Iterator $r29, r35, $r42, $r48, $r53, $r64;
        com.android.builder.model.SourceProvider r31;
        java.util.Map r52;
        java.lang.String r56;
        java.util.Map$Entry r65, r66;

        $r0 := @parameter0: com.android.build.gradle.api.BaseVariant;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$variant");

        $r3 = interfaceinvoke $r0.<com.android.build.gradle.api.BaseVariant: java.util.List getSourceSets()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "variant.sourceSets");

        $r27 = (java.lang.Iterable) $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r28 = (java.util.Collection) $r4;

        $r29 = interfaceinvoke $r27.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z2 = interfaceinvoke $r29.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label02;

        r30 = interfaceinvoke $r29.<java.util.Iterator: java.lang.Object next()>();

        r31 = (com.android.builder.model.SourceProvider) r30;

        $r26 = interfaceinvoke r31.<com.android.builder.model.SourceProvider: java.util.Collection getResDirectories()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r26, "it.resDirectories");

        r32 = (java.lang.Iterable) $r26;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r28, r32);

        goto label01;

     label02:
        $r5 = (java.util.List) r28;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r33 = (java.util.Collection) $r6;

        $r34 = (java.lang.Iterable) $r5;

        z20 = 0;

        r35 = interfaceinvoke $r34.<java.lang.Iterable: java.util.Iterator iterator()>();

     label03:
        $z21 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>();

        if $z21 == 0 goto label07;

        r36 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>();

        r37 = (java.io.File) r36;

        $r25 = new java.io.File;

        specialinvoke $r25.<java.io.File: void <init>(java.io.File,java.lang.String)>(r37, "navigation");

        r38 = $r25;

        $z11 = virtualinvoke r38.<java.io.File: boolean exists()>();

        if $z11 == 0 goto label04;

        $z13 = virtualinvoke r38.<java.io.File: boolean isDirectory()>();

        if $z13 == 0 goto label04;

        $r39 = r38;

        goto label05;

     label04:
        $r39 = null;

     label05:
        if $r39 == null goto label06;

        r1 = $r39;

        interfaceinvoke r33.<java.util.Collection: boolean add(java.lang.Object)>(r1);

        goto label03;

     label06:
        goto label03;

     label07:
        $r7 = (java.util.List) r33;

        $r40 = (java.lang.Iterable) $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r41 = (java.util.Collection) $r8;

        $r42 = interfaceinvoke $r40.<java.lang.Iterable: java.util.Iterator iterator()>();

     label08:
        $z3 = interfaceinvoke $r42.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label09;

        r43 = interfaceinvoke $r42.<java.util.Iterator: java.lang.Object next()>();

        r44 = (java.io.File) r43;

        $r23 = virtualinvoke r44.<java.io.File: java.io.File[] listFiles()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r23, "navFolder.listFiles()");

        $r24 = (java.lang.Object[]) $r23;

        r45 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Iterable asIterable(java.lang.Object[])>($r24);

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r41, r45);

        goto label08;

     label09:
        $r9 = (java.util.List) r41;

        $r46 = (java.lang.Iterable) $r9;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r47 = (java.util.Collection) $r10;

        $r48 = interfaceinvoke $r46.<java.lang.Iterable: java.util.Iterator iterator()>();

     label10:
        $z29 = interfaceinvoke $r48.<java.util.Iterator: boolean hasNext()>();

        if $z29 == 0 goto label11;

        r49 = interfaceinvoke $r48.<java.util.Iterator: java.lang.Object next()>();

        r50 = (java.io.File) r49;

        $z8 = virtualinvoke r50.<java.io.File: boolean isFile()>();

        if $z8 == 0 goto label10;

        interfaceinvoke r47.<java.util.Collection: boolean add(java.lang.Object)>(r49);

        goto label10;

     label11:
        $r11 = (java.util.List) r47;

        $r51 = (java.lang.Iterable) $r11;

        $r12 = new java.util.LinkedHashMap;

        specialinvoke $r12.<java.util.LinkedHashMap: void <init>()>();

        r52 = (java.util.Map) $r12;

        $r53 = interfaceinvoke $r51.<java.lang.Iterable: java.util.Iterator iterator()>();

     label12:
        $z4 = interfaceinvoke $r53.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label15;

        r54 = interfaceinvoke $r53.<java.util.Iterator: java.lang.Object next()>();

        r55 = (java.io.File) r54;

        r56 = virtualinvoke r55.<java.io.File: java.lang.String getName()>();

        z34 = 0;

        $r58 = interfaceinvoke r52.<java.util.Map: java.lang.Object get(java.lang.Object)>(r56);

        if $r58 != null goto label13;

        z35 = 0;

        $r21 = new java.util.ArrayList;

        specialinvoke $r21.<java.util.ArrayList: void <init>()>();

        r59 = (java.util.List) $r21;

        interfaceinvoke r52.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r56, r59);

        $r60 = r59;

        goto label14;

     label13:
        $r60 = $r58;

     label14:
        r61 = (java.util.List) $r60;

        interfaceinvoke r61.<java.util.List: boolean add(java.lang.Object)>(r54);

        goto label12;

     label15:
        $r13 = new java.util.ArrayList;

        $i0 = interfaceinvoke r52.<java.util.Map: int size()>();

        specialinvoke $r13.<java.util.ArrayList: void <init>(int)>($i0);

        r63 = (java.util.Collection) $r13;

        $r14 = interfaceinvoke r52.<java.util.Map: java.util.Set entrySet()>();

        $r64 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label16:
        $z5 = interfaceinvoke $r64.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label17;

        $r16 = interfaceinvoke $r64.<java.util.Iterator: java.lang.Object next()>();

        r65 = (java.util.Map$Entry) $r16;

        r66 = r65;

        r2 = r63;

        $r17 = interfaceinvoke r66.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r18 = (java.util.List) $r17;

        $r19 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object last(java.util.List)>($r18);

        $r20 = (java.io.File) $r19;

        interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r20);

        goto label16;

     label17:
        $r15 = (java.util.List) r63;

        return $r15;
    }

    public volatile void apply(java.lang.Object)
    {
        androidx.navigation.safeargs.gradle.SafeArgsPlugin r0;
        java.lang.Object r1;
        org.gradle.api.Project $r2;

        r0 := @this: androidx.navigation.safeargs.gradle.SafeArgsPlugin;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.gradle.api.Project) r1;

        virtualinvoke r0.<androidx.navigation.safeargs.gradle.SafeArgsPlugin: void apply(org.gradle.api.Project)>($r2);

        return;
    }

    public static final org.gradle.api.file.ConfigurableFileCollection access$navigationFiles(androidx.navigation.safeargs.gradle.SafeArgsPlugin, com.android.build.gradle.api.BaseVariant, org.gradle.api.Project)
    {
        androidx.navigation.safeargs.gradle.SafeArgsPlugin $r0;
        com.android.build.gradle.api.BaseVariant r1;
        org.gradle.api.Project r2;
        org.gradle.api.file.ConfigurableFileCollection $r3;

        $r0 := @parameter0: androidx.navigation.safeargs.gradle.SafeArgsPlugin;

        r1 := @parameter1: com.android.build.gradle.api.BaseVariant;

        r2 := @parameter2: org.gradle.api.Project;

        $r3 = specialinvoke $r0.<androidx.navigation.safeargs.gradle.SafeArgsPlugin: org.gradle.api.file.ConfigurableFileCollection navigationFiles(com.android.build.gradle.api.BaseVariant,org.gradle.api.Project)>(r1, r2);

        return $r3;
    }

androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$1
<androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$1: java.util.Map $applicationIds>
<androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$1: java.util.Map $namespaces>
    void <init>(java.util.Map, java.util.Map)
    {
        androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$1 r0;
        java.util.Map $r1, $r2;

        r0 := @this: androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$1;

        $r1 := @parameter0: java.util.Map;

        $r2 := @parameter1: java.util.Map;

        r0.<androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$1: java.util.Map $applicationIds> = $r1;

        r0.<androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$1: java.util.Map $namespaces> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(com.android.build.api.variant.Variant)
    {
        androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$1 r0;
        com.android.build.api.variant.Variant r1, r2;
        boolean $z0, $z1, $z2;
        com.android.build.api.variant.DynamicFeatureVariant $r5;
        com.android.build.api.variant.ApplicationVariant $r8;
        org.gradle.api.provider.Property $r9;
        java.util.Map $r11, $r15, $r19, $r23, $r27;
        java.lang.String r12, r16, r20, r24, r28;
        java.lang.Object r13, r17, r21, r25, r29;
        org.gradle.api.provider.Provider $r14, $r18, $r22, $r26, $r30;

        r0 := @this: androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$1;

        r1 := @parameter0: com.android.build.api.variant.Variant;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "variant");

        r2 = r1;

        $z0 = r2 instanceof com.android.build.api.variant.ApplicationVariant;

        if $z0 == 0 goto label3;

        $r11 = r0.<androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$1: java.util.Map $applicationIds>;

        r12 = interfaceinvoke r1.<com.android.build.api.variant.Variant: java.lang.String getName()>();

        r13 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r12);

        if r13 != null goto label1;

        $r8 = (com.android.build.api.variant.ApplicationVariant) r1;

        $r9 = interfaceinvoke $r8.<com.android.build.api.variant.ApplicationVariant: org.gradle.api.provider.Property getApplicationId()>();

        $r14 = (org.gradle.api.provider.Provider) $r9;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r12, $r14);

        goto label1;

     label1:
        $r15 = r0.<androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$1: java.util.Map $namespaces>;

        r16 = interfaceinvoke r1.<com.android.build.api.variant.Variant: java.lang.String getName()>();

        r17 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(r16);

        if r17 != null goto label2;

        $r18 = interfaceinvoke r1.<com.android.build.api.variant.Variant: org.gradle.api.provider.Provider getNamespace()>();

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r16, $r18);

        goto label2;

     label2:
        goto label7;

     label3:
        $z1 = r2 instanceof com.android.build.api.variant.DynamicFeatureVariant;

        if $z1 == 0 goto label6;

        $r19 = r0.<androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$1: java.util.Map $applicationIds>;

        r20 = interfaceinvoke r1.<com.android.build.api.variant.Variant: java.lang.String getName()>();

        r21 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>(r20);

        if r21 != null goto label4;

        $r5 = (com.android.build.api.variant.DynamicFeatureVariant) r1;

        $r22 = interfaceinvoke $r5.<com.android.build.api.variant.DynamicFeatureVariant: org.gradle.api.provider.Provider getApplicationId()>();

        interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r20, $r22);

        goto label4;

     label4:
        $r23 = r0.<androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$1: java.util.Map $namespaces>;

        r24 = interfaceinvoke r1.<com.android.build.api.variant.Variant: java.lang.String getName()>();

        r25 = interfaceinvoke $r23.<java.util.Map: java.lang.Object get(java.lang.Object)>(r24);

        if r25 != null goto label5;

        $r26 = interfaceinvoke r1.<com.android.build.api.variant.Variant: org.gradle.api.provider.Provider getNamespace()>();

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r24, $r26);

        goto label5;

     label5:
        goto label7;

     label6:
        $z2 = r2 instanceof com.android.build.api.variant.LibraryVariant;

        if $z2 == 0 goto label7;

        $r27 = r0.<androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$1: java.util.Map $applicationIds>;

        r28 = interfaceinvoke r1.<com.android.build.api.variant.Variant: java.lang.String getName()>();

        r29 = interfaceinvoke $r27.<java.util.Map: java.lang.Object get(java.lang.Object)>(r28);

        if r29 != null goto label7;

        $r30 = interfaceinvoke r1.<com.android.build.api.variant.Variant: org.gradle.api.provider.Provider getNamespace()>();

        interfaceinvoke $r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r28, $r30);

        goto label7;

     label7:
        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$1 r0;
        java.lang.Object r1;
        com.android.build.api.variant.Variant $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.android.build.api.variant.Variant) r1;

        virtualinvoke r0.<androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$1: void invoke(com.android.build.api.variant.Variant)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$2
<androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$2: org.gradle.api.Project $project>
<androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$2: java.util.Map $applicationIds>
<androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$2: java.util.Map $namespaces>
<androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$2: androidx.navigation.safeargs.gradle.SafeArgsPlugin this$0>
    void <init>(org.gradle.api.Project, java.util.Map, java.util.Map, androidx.navigation.safeargs.gradle.SafeArgsPlugin)
    {
        androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$2 r0;
        org.gradle.api.Project $r1;
        java.util.Map $r2, $r3;
        androidx.navigation.safeargs.gradle.SafeArgsPlugin $r4;

        r0 := @this: androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$2;

        $r1 := @parameter0: org.gradle.api.Project;

        $r2 := @parameter1: java.util.Map;

        $r3 := @parameter2: java.util.Map;

        $r4 := @parameter3: androidx.navigation.safeargs.gradle.SafeArgsPlugin;

        r0.<androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$2: org.gradle.api.Project $project> = $r1;

        r0.<androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$2: java.util.Map $applicationIds> = $r2;

        r0.<androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$2: java.util.Map $namespaces> = $r3;

        r0.<androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$2: androidx.navigation.safeargs.gradle.SafeArgsPlugin this$0> = $r4;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(com.android.build.gradle.api.BaseVariant)
    {
        androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$2 r0;
        com.android.build.gradle.api.BaseVariant r1;
        androidx.navigation.safeargs.gradle.ArgumentsGenerationTask r2;
        org.gradle.api.tasks.TaskContainer r3, $r29;
        java.lang.StringBuilder r4, r5, $r8, $r11, $r24, $r25, $r27, $r30;
        java.lang.String r6, $r9, $r12, $r26, r31, $r32, r33, $r34;
        org.gradle.api.Project $r7, $r13;
        java.lang.CharSequence $r10;
        int $i0;
        androidx.navigation.safeargs.gradle.SafeArgsPlugin $r14;
        java.util.Map $r15, $r16;
        org.gradle.api.Action $r17;
        org.gradle.api.Task $r18, $r19;
        org.gradle.api.file.DirectoryProperty $r20;
        org.gradle.api.provider.Provider $r21;
        java.lang.Object $r22;
        java.io.File $r23;
        boolean $z0, $z1;
        java.util.Locale $r28;
        char c1;
        java.io.File[] r35;

        r0 := @this: androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$2;

        r1 := @parameter0: com.android.build.gradle.api.BaseVariant;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "variant");

        $r7 = r0.<androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$2: org.gradle.api.Project $project>;

        $r29 = interfaceinvoke $r7.<org.gradle.api.Project: org.gradle.api.tasks.TaskContainer getTasks()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("generateSafeArgs");

        $r9 = interfaceinvoke r1.<com.android.build.gradle.api.BaseVariant: java.lang.String getName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r9, "variant.name");

        r31 = $r9;

        $r10 = (java.lang.CharSequence) r31;

        $i0 = interfaceinvoke $r10.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 == 0 goto label5;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        c1 = virtualinvoke r31.<java.lang.String: char charAt(int)>(0);

        r5 = $r24;

        r4 = $r30;

        r3 = $r29;

        $z0 = staticinvoke <java.lang.Character: boolean isLowerCase(char)>(c1);

        if $z0 == 0 goto label3;

        $r28 = <java.util.Locale: java.util.Locale US>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r28, "US");

        $r32 = staticinvoke <kotlin.text.CharsKt: java.lang.String titlecase(char,java.util.Locale)>(c1, $r28);

        goto label4;

     label3:
        $r32 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c1);

     label4:
        r6 = $r32;

        $r29 = r3;

        $r30 = r4;

        $r25 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        r33 = r31;

        $r26 = virtualinvoke r33.<java.lang.String: java.lang.String substring(int)>(1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r26, "this as java.lang.String).substring(startIndex)");

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r34 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label6;

     label5:
        $r34 = r31;

     label6:
        $r11 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = r0.<androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$2: java.util.Map $applicationIds>;

        $r15 = r0.<androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$2: java.util.Map $namespaces>;

        $r14 = r0.<androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$2: androidx.navigation.safeargs.gradle.SafeArgsPlugin this$0>;

        $r13 = r0.<androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$2: org.gradle.api.Project $project>;

        $r17 = dynamicinvoke "execute" <org.gradle.api.Action (java.util.Map,com.android.build.gradle.api.BaseVariant,java.util.Map,androidx.navigation.safeargs.gradle.SafeArgsPlugin,org.gradle.api.Project)>($r16, r1, $r15, $r14, $r13) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$2: void invoke$lambda-4(java.util.Map,com.android.build.gradle.api.BaseVariant,java.util.Map,androidx.navigation.safeargs.gradle.SafeArgsPlugin,org.gradle.api.Project,androidx.navigation.safeargs.gradle.ArgumentsGenerationTask)>, methodtype: void __METHODTYPE__(androidx.navigation.safeargs.gradle.ArgumentsGenerationTask));

        $r18 = interfaceinvoke $r29.<org.gradle.api.tasks.TaskContainer: org.gradle.api.Task create(java.lang.String,java.lang.Class,org.gradle.api.Action)>($r12, class "Landroidx/navigation/safeargs/gradle/ArgumentsGenerationTask;", $r17);

        r2 = (androidx.navigation.safeargs.gradle.ArgumentsGenerationTask) $r18;

        $r19 = (org.gradle.api.Task) r2;

        r35 = newarray (java.io.File)[1];

        $r20 = virtualinvoke r2.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: org.gradle.api.file.DirectoryProperty getOutputDir()>();

        $r21 = interfaceinvoke $r20.<org.gradle.api.file.DirectoryProperty: org.gradle.api.provider.Provider getAsFile()>();

        $r22 = interfaceinvoke $r21.<org.gradle.api.provider.Provider: java.lang.Object get()>();

        $r23 = (java.io.File) $r22;

        r35[0] = $r23;

        interfaceinvoke r1.<com.android.build.gradle.api.BaseVariant: void registerJavaGeneratingTask(org.gradle.api.Task,java.io.File[])>($r19, r35);

        return;
    }

    private static final java.lang.String invoke$lambda-4$lambda-2$lambda-1(com.android.build.gradle.api.BaseVariant)
    {
        com.android.build.gradle.api.BaseVariant $r0;
        java.lang.String $r1;

        $r0 := @parameter0: com.android.build.gradle.api.BaseVariant;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$variant");

        $r1 = interfaceinvoke $r0.<com.android.build.gradle.api.BaseVariant: java.lang.String getApplicationId()>();

        return $r1;
    }

    private static final void invoke$lambda-4(java.util.Map, com.android.build.gradle.api.BaseVariant, java.util.Map, androidx.navigation.safeargs.gradle.SafeArgsPlugin, org.gradle.api.Project, androidx.navigation.safeargs.gradle.ArgumentsGenerationTask)
    {
        java.util.Map $r0, $r2;
        com.android.build.gradle.api.BaseVariant $r1;
        androidx.navigation.safeargs.gradle.SafeArgsPlugin r3;
        org.gradle.api.Project $r4;
        androidx.navigation.safeargs.gradle.ArgumentsGenerationTask r5;
        java.lang.Object r6, $r12, $r33, $r46;
        org.gradle.api.provider.Provider r7, $r9, $r40, $r47;
        java.lang.String $r8, $r11, $r21, $r23, $r29, $r31, r44;
        org.gradle.api.provider.Property $r10, $r32, $r34, $r37, $r42, r45, r49;
        org.gradle.api.file.ConfigurableFileCollection $r13, $r14;
        java.lang.Iterable $r15;
        org.gradle.api.file.DirectoryProperty $r16, $r24;
        java.io.File $r17, $r18, $r25, $r26;
        java.lang.StringBuilder $r19, $r20, $r22, $r27, $r28, $r30;
        boolean $z1, $z2, z4;
        java.lang.Boolean $r35, $r48;
        org.gradle.api.GradleException $r36;
        org.gradle.api.provider.ProviderFactory $r38;
        java.util.concurrent.Callable $r39;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: com.android.build.gradle.api.BaseVariant;

        $r2 := @parameter2: java.util.Map;

        r3 := @parameter3: androidx.navigation.safeargs.gradle.SafeArgsPlugin;

        $r4 := @parameter4: org.gradle.api.Project;

        r5 := @parameter5: androidx.navigation.safeargs.gradle.ArgumentsGenerationTask;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$applicationIds");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$variant");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "$namespaces");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "this$0");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r4, "$project");

        $r42 = virtualinvoke r5.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: org.gradle.api.provider.Property getApplicationId()>();

        $r8 = interfaceinvoke $r1.<com.android.build.gradle.api.BaseVariant: java.lang.String getName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "variant.name");

        r44 = $r8;

        r6 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r44);

        if r6 != null goto label1;

        r45 = $r42;

        $r38 = virtualinvoke r3.<androidx.navigation.safeargs.gradle.SafeArgsPlugin: org.gradle.api.provider.ProviderFactory getProviderFactory()>();

        $r39 = dynamicinvoke "call" <java.util.concurrent.Callable (com.android.build.gradle.api.BaseVariant)>($r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$2: java.lang.String invoke$lambda-4$lambda-2$lambda-1(com.android.build.gradle.api.BaseVariant)>, methodtype: java.lang.String __METHODTYPE__());

        $r40 = interfaceinvoke $r38.<org.gradle.api.provider.ProviderFactory: org.gradle.api.provider.Provider provider(java.util.concurrent.Callable)>($r39);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r40, "providerFactory.provider { variant.applicationId }");

        $r42 = r45;

        r7 = $r40;

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r44, r7);

        $r46 = r7;

        goto label2;

     label1:
        $r46 = r6;

     label2:
        $r9 = (org.gradle.api.provider.Provider) $r46;

        interfaceinvoke $r42.<org.gradle.api.provider.Property: void set(org.gradle.api.provider.Provider)>($r9);

        $r10 = virtualinvoke r5.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: org.gradle.api.provider.Property getRFilePackage()>();

        $r11 = interfaceinvoke $r1.<com.android.build.gradle.api.BaseVariant: java.lang.String getName()>();

        $r12 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11);

        $r47 = (org.gradle.api.provider.Provider) $r12;

        if $r47 != null goto label3;

        $r37 = virtualinvoke r5.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: org.gradle.api.provider.Property getApplicationId()>();

        $r47 = (org.gradle.api.provider.Provider) $r37;

     label3:
        interfaceinvoke $r10.<org.gradle.api.provider.Property: void set(org.gradle.api.provider.Provider)>($r47);

        $r13 = virtualinvoke r5.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: org.gradle.api.file.ConfigurableFileCollection getNavigationFiles()>();

        $r14 = staticinvoke <androidx.navigation.safeargs.gradle.SafeArgsPlugin: org.gradle.api.file.ConfigurableFileCollection access$navigationFiles(androidx.navigation.safeargs.gradle.SafeArgsPlugin,com.android.build.gradle.api.BaseVariant,org.gradle.api.Project)>(r3, $r1, $r4);

        $r15 = (java.lang.Iterable) $r14;

        interfaceinvoke $r13.<org.gradle.api.file.ConfigurableFileCollection: void setFrom(java.lang.Iterable)>($r15);

        $r16 = virtualinvoke r5.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: org.gradle.api.file.DirectoryProperty getOutputDir()>();

        $r17 = new java.io.File;

        $r18 = interfaceinvoke $r4.<org.gradle.api.Project: java.io.File getBuildDir()>();

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("generated/source/navigation-args/");

        $r21 = interfaceinvoke $r1.<com.android.build.gradle.api.BaseVariant: java.lang.String getDirName()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.io.File: void <init>(java.io.File,java.lang.String)>($r18, $r23);

        interfaceinvoke $r16.<org.gradle.api.file.DirectoryProperty: void set(java.io.File)>($r17);

        $r24 = virtualinvoke r5.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: org.gradle.api.file.DirectoryProperty getIncrementalFolder()>();

        $r25 = new java.io.File;

        $r26 = interfaceinvoke $r4.<org.gradle.api.Project: java.io.File getBuildDir()>();

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("intermediates/incremental/");

        $r29 = virtualinvoke r5.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: java.lang.String getName()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<java.io.File: void <init>(java.io.File,java.lang.String)>($r26, $r31);

        interfaceinvoke $r24.<org.gradle.api.file.DirectoryProperty: void set(java.io.File)>($r25);

        $r32 = virtualinvoke r5.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: org.gradle.api.provider.Property getUseAndroidX()>();

        $r33 = interfaceinvoke $r4.<org.gradle.api.Project: java.lang.Object findProperty(java.lang.String)>("android.useAndroidX");

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r33, "true");

        $r48 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        z4 = virtualinvoke $r48.<java.lang.Boolean: boolean booleanValue()>();

        r49 = $r32;

        if z4 != 0 goto label4;

        $r36 = new org.gradle.api.GradleException;

        specialinvoke $r36.<org.gradle.api.GradleException: void <init>(java.lang.String)>("androidx.navigation.safeargs can only be used with an androidx project");

        throw $r36;

     label4:
        interfaceinvoke r49.<org.gradle.api.provider.Property: void set(java.lang.Object)>($r48);

        $r34 = virtualinvoke r5.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: org.gradle.api.provider.Property getGenerateKotlin()>();

        $z2 = virtualinvoke r3.<androidx.navigation.safeargs.gradle.SafeArgsPlugin: boolean getGenerateKotlin()>();

        $r35 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        interfaceinvoke $r34.<org.gradle.api.provider.Property: void set(java.lang.Object)>($r35);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$2 r0;
        java.lang.Object r1;
        com.android.build.gradle.api.BaseVariant $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.android.build.gradle.api.BaseVariant) r1;

        virtualinvoke r0.<androidx.navigation.safeargs.gradle.SafeArgsPlugin$apply$2: void invoke(com.android.build.gradle.api.BaseVariant)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

