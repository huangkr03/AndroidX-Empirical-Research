androidx.car.app.hardware.ICarHardwareResultTypes
<androidx.car.app.hardware.ICarHardwareResultTypes: int TYPE_UNKNOWN>
<androidx.car.app.hardware.ICarHardwareResultTypes: int TYPE_INFO_MODEL>
<androidx.car.app.hardware.ICarHardwareResultTypes: int TYPE_INFO_ENERGY_PROFILE>
<androidx.car.app.hardware.ICarHardwareResultTypes: int TYPE_INFO_TOLL>
<androidx.car.app.hardware.ICarHardwareResultTypes: int TYPE_INFO_ENERGY_LEVEL>
<androidx.car.app.hardware.ICarHardwareResultTypes: int TYPE_INFO_SPEED>
<androidx.car.app.hardware.ICarHardwareResultTypes: int TYPE_INFO_MILEAGE>
<androidx.car.app.hardware.ICarHardwareResultTypes: int TYPE_INFO_EV_STATUS>
<androidx.car.app.hardware.ICarHardwareResultTypes: int TYPE_SENSOR_ACCELEROMETER>
<androidx.car.app.hardware.ICarHardwareResultTypes: int TYPE_SENSOR_COMPASS>
<androidx.car.app.hardware.ICarHardwareResultTypes: int TYPE_SENSOR_GYROSCOPE>
<androidx.car.app.hardware.ICarHardwareResultTypes: int TYPE_SENSOR_CAR_LOCATION>
androidx.car.app.hardware.ICarHardwareResultTypes$Default
    public void <init>()
    {
        androidx.car.app.hardware.ICarHardwareResultTypes$Default r0;

        r0 := @this: androidx.car.app.hardware.ICarHardwareResultTypes$Default;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.os.IBinder asBinder()
    {
        androidx.car.app.hardware.ICarHardwareResultTypes$Default r0;

        r0 := @this: androidx.car.app.hardware.ICarHardwareResultTypes$Default;

        return null;
    }

androidx.car.app.hardware.ICarHardwareResultTypes$Stub$Proxy
<androidx.car.app.hardware.ICarHardwareResultTypes$Stub$Proxy: android.os.IBinder mRemote>
<androidx.car.app.hardware.ICarHardwareResultTypes$Stub$Proxy: androidx.car.app.hardware.ICarHardwareResultTypes sDefaultImpl>
    void <init>(android.os.IBinder)
    {
        androidx.car.app.hardware.ICarHardwareResultTypes$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: androidx.car.app.hardware.ICarHardwareResultTypes$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.car.app.hardware.ICarHardwareResultTypes$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        androidx.car.app.hardware.ICarHardwareResultTypes$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: androidx.car.app.hardware.ICarHardwareResultTypes$Stub$Proxy;

        $r1 = r0.<androidx.car.app.hardware.ICarHardwareResultTypes$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        androidx.car.app.hardware.ICarHardwareResultTypes$Stub$Proxy r0;

        r0 := @this: androidx.car.app.hardware.ICarHardwareResultTypes$Stub$Proxy;

        return "androidx.car.app.hardware.ICarHardwareResultTypes";
    }

androidx.car.app.hardware.ICarHardwareResultTypes$Stub
<androidx.car.app.hardware.ICarHardwareResultTypes$Stub: java.lang.String DESCRIPTOR>
    public void <init>()
    {
        androidx.car.app.hardware.ICarHardwareResultTypes$Stub r0;

        r0 := @this: androidx.car.app.hardware.ICarHardwareResultTypes$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<androidx.car.app.hardware.ICarHardwareResultTypes$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "androidx.car.app.hardware.ICarHardwareResultTypes");

        return;
    }

    public static androidx.car.app.hardware.ICarHardwareResultTypes asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        androidx.car.app.hardware.ICarHardwareResultTypes$Stub$Proxy $r2;
        boolean $z0;
        androidx.car.app.hardware.ICarHardwareResultTypes $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("androidx.car.app.hardware.ICarHardwareResultTypes");

        if r1 == null goto label2;

        $z0 = r1 instanceof androidx.car.app.hardware.ICarHardwareResultTypes;

        if $z0 == 0 goto label2;

        $r3 = (androidx.car.app.hardware.ICarHardwareResultTypes) r1;

        return $r3;

     label2:
        $r2 = new androidx.car.app.hardware.ICarHardwareResultTypes$Stub$Proxy;

        specialinvoke $r2.<androidx.car.app.hardware.ICarHardwareResultTypes$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public android.os.IBinder asBinder()
    {
        androidx.car.app.hardware.ICarHardwareResultTypes$Stub r0;
        android.os.IBinder r1;

        r0 := @this: androidx.car.app.hardware.ICarHardwareResultTypes$Stub;

        r1 = (android.os.IBinder) r0;

        return r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        androidx.car.app.hardware.ICarHardwareResultTypes$Stub r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        java.lang.String r3;
        boolean $z0;

        r0 := @this: androidx.car.app.hardware.ICarHardwareResultTypes$Stub;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Parcel;

        r2 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

        r3 = "androidx.car.app.hardware.ICarHardwareResultTypes";

        lookupswitch(i0)
        {
            case 1598968902: goto label1;
            default: goto label2;
        };

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        return 1;

     label2:
        $z0 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r1, r2, i1);

        return $z0;
    }

    public static boolean setDefaultImpl(androidx.car.app.hardware.ICarHardwareResultTypes)
    {
        androidx.car.app.hardware.ICarHardwareResultTypes r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: androidx.car.app.hardware.ICarHardwareResultTypes;

        $r1 = <androidx.car.app.hardware.ICarHardwareResultTypes$Stub$Proxy: androidx.car.app.hardware.ICarHardwareResultTypes sDefaultImpl>;

        if $r1 == null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;

     label1:
        if r0 == null goto label2;

        <androidx.car.app.hardware.ICarHardwareResultTypes$Stub$Proxy: androidx.car.app.hardware.ICarHardwareResultTypes sDefaultImpl> = r0;

        return 1;

     label2:
        return 0;
    }

    public static androidx.car.app.hardware.ICarHardwareResultTypes getDefaultImpl()
    {
        androidx.car.app.hardware.ICarHardwareResultTypes $r0;

        $r0 = <androidx.car.app.hardware.ICarHardwareResultTypes$Stub$Proxy: androidx.car.app.hardware.ICarHardwareResultTypes sDefaultImpl>;

        return $r0;
    }

