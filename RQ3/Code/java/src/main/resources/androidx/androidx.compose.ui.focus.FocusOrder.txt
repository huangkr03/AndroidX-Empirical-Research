androidx.compose.ui.focus.FocusOrder
<androidx.compose.ui.focus.FocusOrder: androidx.compose.ui.focus.FocusProperties focusProperties>
<androidx.compose.ui.focus.FocusOrder: int $stable>
    public void <init>(androidx.compose.ui.focus.FocusProperties)
    {
        androidx.compose.ui.focus.FocusOrder r0;
        androidx.compose.ui.focus.FocusProperties r1;

        r0 := @this: androidx.compose.ui.focus.FocusOrder;

        r1 := @parameter0: androidx.compose.ui.focus.FocusProperties;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "focusProperties");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.focus.FocusOrder: androidx.compose.ui.focus.FocusProperties focusProperties> = r1;

        return;
    }

    public void <init>()
    {
        androidx.compose.ui.focus.FocusOrder r0;
        androidx.compose.ui.focus.FocusPropertiesImpl $r1;
        androidx.compose.ui.focus.FocusProperties $r2;

        r0 := @this: androidx.compose.ui.focus.FocusOrder;

        $r1 = new androidx.compose.ui.focus.FocusPropertiesImpl;

        specialinvoke $r1.<androidx.compose.ui.focus.FocusPropertiesImpl: void <init>()>();

        $r2 = (androidx.compose.ui.focus.FocusProperties) $r1;

        specialinvoke r0.<androidx.compose.ui.focus.FocusOrder: void <init>(androidx.compose.ui.focus.FocusProperties)>($r2);

        return;
    }

    public final androidx.compose.ui.focus.FocusRequester getNext()
    {
        androidx.compose.ui.focus.FocusOrder r0;
        androidx.compose.ui.focus.FocusProperties $r1;
        androidx.compose.ui.focus.FocusRequester $r2;

        r0 := @this: androidx.compose.ui.focus.FocusOrder;

        $r1 = r0.<androidx.compose.ui.focus.FocusOrder: androidx.compose.ui.focus.FocusProperties focusProperties>;

        $r2 = interfaceinvoke $r1.<androidx.compose.ui.focus.FocusProperties: androidx.compose.ui.focus.FocusRequester getNext()>();

        return $r2;
    }

    public final void setNext(androidx.compose.ui.focus.FocusRequester)
    {
        androidx.compose.ui.focus.FocusOrder r0;
        androidx.compose.ui.focus.FocusRequester r1;
        androidx.compose.ui.focus.FocusProperties $r2;

        r0 := @this: androidx.compose.ui.focus.FocusOrder;

        r1 := @parameter0: androidx.compose.ui.focus.FocusRequester;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "next");

        $r2 = r0.<androidx.compose.ui.focus.FocusOrder: androidx.compose.ui.focus.FocusProperties focusProperties>;

        interfaceinvoke $r2.<androidx.compose.ui.focus.FocusProperties: void setNext(androidx.compose.ui.focus.FocusRequester)>(r1);

        return;
    }

    public final androidx.compose.ui.focus.FocusRequester getPrevious()
    {
        androidx.compose.ui.focus.FocusOrder r0;
        androidx.compose.ui.focus.FocusProperties $r1;
        androidx.compose.ui.focus.FocusRequester $r2;

        r0 := @this: androidx.compose.ui.focus.FocusOrder;

        $r1 = r0.<androidx.compose.ui.focus.FocusOrder: androidx.compose.ui.focus.FocusProperties focusProperties>;

        $r2 = interfaceinvoke $r1.<androidx.compose.ui.focus.FocusProperties: androidx.compose.ui.focus.FocusRequester getPrevious()>();

        return $r2;
    }

    public final void setPrevious(androidx.compose.ui.focus.FocusRequester)
    {
        androidx.compose.ui.focus.FocusOrder r0;
        androidx.compose.ui.focus.FocusRequester r1;
        androidx.compose.ui.focus.FocusProperties $r2;

        r0 := @this: androidx.compose.ui.focus.FocusOrder;

        r1 := @parameter0: androidx.compose.ui.focus.FocusRequester;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "previous");

        $r2 = r0.<androidx.compose.ui.focus.FocusOrder: androidx.compose.ui.focus.FocusProperties focusProperties>;

        interfaceinvoke $r2.<androidx.compose.ui.focus.FocusProperties: void setPrevious(androidx.compose.ui.focus.FocusRequester)>(r1);

        return;
    }

    public final androidx.compose.ui.focus.FocusRequester getUp()
    {
        androidx.compose.ui.focus.FocusOrder r0;
        androidx.compose.ui.focus.FocusProperties $r1;
        androidx.compose.ui.focus.FocusRequester $r2;

        r0 := @this: androidx.compose.ui.focus.FocusOrder;

        $r1 = r0.<androidx.compose.ui.focus.FocusOrder: androidx.compose.ui.focus.FocusProperties focusProperties>;

        $r2 = interfaceinvoke $r1.<androidx.compose.ui.focus.FocusProperties: androidx.compose.ui.focus.FocusRequester getUp()>();

        return $r2;
    }

    public final void setUp(androidx.compose.ui.focus.FocusRequester)
    {
        androidx.compose.ui.focus.FocusOrder r0;
        androidx.compose.ui.focus.FocusRequester r1;
        androidx.compose.ui.focus.FocusProperties $r2;

        r0 := @this: androidx.compose.ui.focus.FocusOrder;

        r1 := @parameter0: androidx.compose.ui.focus.FocusRequester;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "up");

        $r2 = r0.<androidx.compose.ui.focus.FocusOrder: androidx.compose.ui.focus.FocusProperties focusProperties>;

        interfaceinvoke $r2.<androidx.compose.ui.focus.FocusProperties: void setUp(androidx.compose.ui.focus.FocusRequester)>(r1);

        return;
    }

    public final androidx.compose.ui.focus.FocusRequester getDown()
    {
        androidx.compose.ui.focus.FocusOrder r0;
        androidx.compose.ui.focus.FocusProperties $r1;
        androidx.compose.ui.focus.FocusRequester $r2;

        r0 := @this: androidx.compose.ui.focus.FocusOrder;

        $r1 = r0.<androidx.compose.ui.focus.FocusOrder: androidx.compose.ui.focus.FocusProperties focusProperties>;

        $r2 = interfaceinvoke $r1.<androidx.compose.ui.focus.FocusProperties: androidx.compose.ui.focus.FocusRequester getDown()>();

        return $r2;
    }

    public final void setDown(androidx.compose.ui.focus.FocusRequester)
    {
        androidx.compose.ui.focus.FocusOrder r0;
        androidx.compose.ui.focus.FocusRequester r1;
        androidx.compose.ui.focus.FocusProperties $r2;

        r0 := @this: androidx.compose.ui.focus.FocusOrder;

        r1 := @parameter0: androidx.compose.ui.focus.FocusRequester;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "down");

        $r2 = r0.<androidx.compose.ui.focus.FocusOrder: androidx.compose.ui.focus.FocusProperties focusProperties>;

        interfaceinvoke $r2.<androidx.compose.ui.focus.FocusProperties: void setDown(androidx.compose.ui.focus.FocusRequester)>(r1);

        return;
    }

    public final androidx.compose.ui.focus.FocusRequester getLeft()
    {
        androidx.compose.ui.focus.FocusOrder r0;
        androidx.compose.ui.focus.FocusProperties $r1;
        androidx.compose.ui.focus.FocusRequester $r2;

        r0 := @this: androidx.compose.ui.focus.FocusOrder;

        $r1 = r0.<androidx.compose.ui.focus.FocusOrder: androidx.compose.ui.focus.FocusProperties focusProperties>;

        $r2 = interfaceinvoke $r1.<androidx.compose.ui.focus.FocusProperties: androidx.compose.ui.focus.FocusRequester getLeft()>();

        return $r2;
    }

    public final void setLeft(androidx.compose.ui.focus.FocusRequester)
    {
        androidx.compose.ui.focus.FocusOrder r0;
        androidx.compose.ui.focus.FocusRequester r1;
        androidx.compose.ui.focus.FocusProperties $r2;

        r0 := @this: androidx.compose.ui.focus.FocusOrder;

        r1 := @parameter0: androidx.compose.ui.focus.FocusRequester;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "left");

        $r2 = r0.<androidx.compose.ui.focus.FocusOrder: androidx.compose.ui.focus.FocusProperties focusProperties>;

        interfaceinvoke $r2.<androidx.compose.ui.focus.FocusProperties: void setLeft(androidx.compose.ui.focus.FocusRequester)>(r1);

        return;
    }

    public final androidx.compose.ui.focus.FocusRequester getRight()
    {
        androidx.compose.ui.focus.FocusOrder r0;
        androidx.compose.ui.focus.FocusProperties $r1;
        androidx.compose.ui.focus.FocusRequester $r2;

        r0 := @this: androidx.compose.ui.focus.FocusOrder;

        $r1 = r0.<androidx.compose.ui.focus.FocusOrder: androidx.compose.ui.focus.FocusProperties focusProperties>;

        $r2 = interfaceinvoke $r1.<androidx.compose.ui.focus.FocusProperties: androidx.compose.ui.focus.FocusRequester getRight()>();

        return $r2;
    }

    public final void setRight(androidx.compose.ui.focus.FocusRequester)
    {
        androidx.compose.ui.focus.FocusOrder r0;
        androidx.compose.ui.focus.FocusRequester r1;
        androidx.compose.ui.focus.FocusProperties $r2;

        r0 := @this: androidx.compose.ui.focus.FocusOrder;

        r1 := @parameter0: androidx.compose.ui.focus.FocusRequester;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "right");

        $r2 = r0.<androidx.compose.ui.focus.FocusOrder: androidx.compose.ui.focus.FocusProperties focusProperties>;

        interfaceinvoke $r2.<androidx.compose.ui.focus.FocusProperties: void setRight(androidx.compose.ui.focus.FocusRequester)>(r1);

        return;
    }

    public final androidx.compose.ui.focus.FocusRequester getStart()
    {
        androidx.compose.ui.focus.FocusOrder r0;
        androidx.compose.ui.focus.FocusProperties $r1;
        androidx.compose.ui.focus.FocusRequester $r2;

        r0 := @this: androidx.compose.ui.focus.FocusOrder;

        $r1 = r0.<androidx.compose.ui.focus.FocusOrder: androidx.compose.ui.focus.FocusProperties focusProperties>;

        $r2 = interfaceinvoke $r1.<androidx.compose.ui.focus.FocusProperties: androidx.compose.ui.focus.FocusRequester getStart()>();

        return $r2;
    }

    public final void setStart(androidx.compose.ui.focus.FocusRequester)
    {
        androidx.compose.ui.focus.FocusOrder r0;
        androidx.compose.ui.focus.FocusRequester r1;
        androidx.compose.ui.focus.FocusProperties $r2;

        r0 := @this: androidx.compose.ui.focus.FocusOrder;

        r1 := @parameter0: androidx.compose.ui.focus.FocusRequester;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "start");

        $r2 = r0.<androidx.compose.ui.focus.FocusOrder: androidx.compose.ui.focus.FocusProperties focusProperties>;

        interfaceinvoke $r2.<androidx.compose.ui.focus.FocusProperties: void setStart(androidx.compose.ui.focus.FocusRequester)>(r1);

        return;
    }

    public final androidx.compose.ui.focus.FocusRequester getEnd()
    {
        androidx.compose.ui.focus.FocusOrder r0;
        androidx.compose.ui.focus.FocusProperties $r1;
        androidx.compose.ui.focus.FocusRequester $r2;

        r0 := @this: androidx.compose.ui.focus.FocusOrder;

        $r1 = r0.<androidx.compose.ui.focus.FocusOrder: androidx.compose.ui.focus.FocusProperties focusProperties>;

        $r2 = interfaceinvoke $r1.<androidx.compose.ui.focus.FocusProperties: androidx.compose.ui.focus.FocusRequester getEnd()>();

        return $r2;
    }

    public final void setEnd(androidx.compose.ui.focus.FocusRequester)
    {
        androidx.compose.ui.focus.FocusOrder r0;
        androidx.compose.ui.focus.FocusRequester r1;
        androidx.compose.ui.focus.FocusProperties $r2;

        r0 := @this: androidx.compose.ui.focus.FocusOrder;

        r1 := @parameter0: androidx.compose.ui.focus.FocusRequester;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "end");

        $r2 = r0.<androidx.compose.ui.focus.FocusOrder: androidx.compose.ui.focus.FocusProperties focusProperties>;

        interfaceinvoke $r2.<androidx.compose.ui.focus.FocusProperties: void setEnd(androidx.compose.ui.focus.FocusRequester)>(r1);

        return;
    }

    static void <clinit>()
    {
        <androidx.compose.ui.focus.FocusOrder: int $stable> = 8;

        return;
    }

