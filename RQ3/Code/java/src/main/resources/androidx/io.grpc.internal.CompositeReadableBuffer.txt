io.grpc.internal.CompositeReadableBuffer
<io.grpc.internal.CompositeReadableBuffer: io.grpc.internal.CompositeReadableBuffer$NoThrowReadOperation BYTE_ARRAY_OP>
<io.grpc.internal.CompositeReadableBuffer: io.grpc.internal.CompositeReadableBuffer$NoThrowReadOperation BYTE_BUF_OP>
<io.grpc.internal.CompositeReadableBuffer: io.grpc.internal.CompositeReadableBuffer$NoThrowReadOperation SKIP_OP>
<io.grpc.internal.CompositeReadableBuffer: io.grpc.internal.CompositeReadableBuffer$ReadOperation STREAM_OP>
<io.grpc.internal.CompositeReadableBuffer: io.grpc.internal.CompositeReadableBuffer$NoThrowReadOperation UBYTE_OP>
<io.grpc.internal.CompositeReadableBuffer: boolean marked>
<io.grpc.internal.CompositeReadableBuffer: java.util.Deque readableBuffers>
<io.grpc.internal.CompositeReadableBuffer: int readableBytes>
<io.grpc.internal.CompositeReadableBuffer: java.util.Deque rewindableBuffers>
    static void <clinit>()
    {
        io.grpc.internal.CompositeReadableBuffer$1 $r0;
        io.grpc.internal.CompositeReadableBuffer$2 $r1;
        io.grpc.internal.CompositeReadableBuffer$3 $r2;
        io.grpc.internal.CompositeReadableBuffer$4 $r3;
        io.grpc.internal.CompositeReadableBuffer$5 $r4;

        $r0 = new io.grpc.internal.CompositeReadableBuffer$1;

        specialinvoke $r0.<io.grpc.internal.CompositeReadableBuffer$1: void <init>()>();

        <io.grpc.internal.CompositeReadableBuffer: io.grpc.internal.CompositeReadableBuffer$NoThrowReadOperation UBYTE_OP> = $r0;

        $r1 = new io.grpc.internal.CompositeReadableBuffer$2;

        specialinvoke $r1.<io.grpc.internal.CompositeReadableBuffer$2: void <init>()>();

        <io.grpc.internal.CompositeReadableBuffer: io.grpc.internal.CompositeReadableBuffer$NoThrowReadOperation SKIP_OP> = $r1;

        $r2 = new io.grpc.internal.CompositeReadableBuffer$3;

        specialinvoke $r2.<io.grpc.internal.CompositeReadableBuffer$3: void <init>()>();

        <io.grpc.internal.CompositeReadableBuffer: io.grpc.internal.CompositeReadableBuffer$NoThrowReadOperation BYTE_ARRAY_OP> = $r2;

        $r3 = new io.grpc.internal.CompositeReadableBuffer$4;

        specialinvoke $r3.<io.grpc.internal.CompositeReadableBuffer$4: void <init>()>();

        <io.grpc.internal.CompositeReadableBuffer: io.grpc.internal.CompositeReadableBuffer$NoThrowReadOperation BYTE_BUF_OP> = $r3;

        $r4 = new io.grpc.internal.CompositeReadableBuffer$5;

        specialinvoke $r4.<io.grpc.internal.CompositeReadableBuffer$5: void <init>()>();

        <io.grpc.internal.CompositeReadableBuffer: io.grpc.internal.CompositeReadableBuffer$ReadOperation STREAM_OP> = $r4;

        return;
    }

    public void <init>()
    {
        io.grpc.internal.CompositeReadableBuffer $r0;
        java.util.ArrayDeque r1;
        java.util.Deque r2;

        $r0 := @this: io.grpc.internal.CompositeReadableBuffer;

        specialinvoke $r0.<io.grpc.internal.AbstractReadableBuffer: void <init>()>();

        r1 = new java.util.ArrayDeque;

        specialinvoke r1.<java.util.ArrayDeque: void <init>()>();

        r2 = (java.util.Deque) r1;

        $r0.<io.grpc.internal.CompositeReadableBuffer: java.util.Deque readableBuffers> = r2;

        return;
    }

    public void <init>(int)
    {
        io.grpc.internal.CompositeReadableBuffer $r0;
        int $i0;
        java.util.ArrayDeque r1;
        java.util.Deque r2;

        $r0 := @this: io.grpc.internal.CompositeReadableBuffer;

        $i0 := @parameter0: int;

        specialinvoke $r0.<io.grpc.internal.AbstractReadableBuffer: void <init>()>();

        r1 = new java.util.ArrayDeque;

        specialinvoke r1.<java.util.ArrayDeque: void <init>(int)>($i0);

        r2 = (java.util.Deque) r1;

        $r0.<io.grpc.internal.CompositeReadableBuffer: java.util.Deque readableBuffers> = r2;

        return;
    }

    private void advanceBuffer()
    {
        io.grpc.internal.CompositeReadableBuffer $r0;
        boolean $z0;
        java.util.Deque $r1, $r2;
        java.lang.Object $r3;
        io.grpc.internal.ReadableBuffer $r4;

        $r0 := @this: io.grpc.internal.CompositeReadableBuffer;

        $z0 = $r0.<io.grpc.internal.CompositeReadableBuffer: boolean marked>;

        if $z0 == 0 goto label1;

        $r1 = $r0.<io.grpc.internal.CompositeReadableBuffer: java.util.Deque rewindableBuffers>;

        $r2 = $r0.<io.grpc.internal.CompositeReadableBuffer: java.util.Deque readableBuffers>;

        $r3 = interfaceinvoke $r2.<java.util.Deque: java.lang.Object remove()>();

        $r4 = (io.grpc.internal.ReadableBuffer) $r3;

        interfaceinvoke $r1.<java.util.Deque: boolean add(java.lang.Object)>($r4);

        $r1 = $r0.<io.grpc.internal.CompositeReadableBuffer: java.util.Deque readableBuffers>;

        $r3 = interfaceinvoke $r1.<java.util.Deque: java.lang.Object peek()>();

        $r4 = (io.grpc.internal.ReadableBuffer) $r3;

        if $r4 == null goto label2;

        interfaceinvoke $r4.<io.grpc.internal.ReadableBuffer: void mark()>();

        return;

     label1:
        $r1 = $r0.<io.grpc.internal.CompositeReadableBuffer: java.util.Deque readableBuffers>;

        $r3 = interfaceinvoke $r1.<java.util.Deque: java.lang.Object remove()>();

        $r4 = (io.grpc.internal.ReadableBuffer) $r3;

        interfaceinvoke $r4.<io.grpc.internal.ReadableBuffer: void close()>();

     label2:
        return;
    }

    private void advanceBufferIfNecessary()
    {
        io.grpc.internal.CompositeReadableBuffer $r0;
        java.util.Deque $r1;
        java.lang.Object $r2;
        io.grpc.internal.ReadableBuffer $r3;
        int $i0;

        $r0 := @this: io.grpc.internal.CompositeReadableBuffer;

        $r1 = $r0.<io.grpc.internal.CompositeReadableBuffer: java.util.Deque readableBuffers>;

        $r2 = interfaceinvoke $r1.<java.util.Deque: java.lang.Object peek()>();

        $r3 = (io.grpc.internal.ReadableBuffer) $r2;

        $i0 = interfaceinvoke $r3.<io.grpc.internal.ReadableBuffer: int readableBytes()>();

        if $i0 != 0 goto label1;

        specialinvoke $r0.<io.grpc.internal.CompositeReadableBuffer: void advanceBuffer()>();

     label1:
        return;
    }

    private void enqueueBuffer(io.grpc.internal.ReadableBuffer)
    {
        io.grpc.internal.CompositeReadableBuffer $r0, $r3;
        io.grpc.internal.ReadableBuffer $r1;
        boolean $z0;
        java.util.Deque $r2;
        int $i0, $i1;
        java.lang.Object $r4;

        $r0 := @this: io.grpc.internal.CompositeReadableBuffer;

        $r1 := @parameter0: io.grpc.internal.ReadableBuffer;

        $z0 = $r1 instanceof io.grpc.internal.CompositeReadableBuffer;

        if $z0 != 0 goto label1;

        $r2 = $r0.<io.grpc.internal.CompositeReadableBuffer: java.util.Deque readableBuffers>;

        interfaceinvoke $r2.<java.util.Deque: boolean add(java.lang.Object)>($r1);

        $i0 = $r0.<io.grpc.internal.CompositeReadableBuffer: int readableBytes>;

        $i1 = interfaceinvoke $r1.<io.grpc.internal.ReadableBuffer: int readableBytes()>();

        $i0 = $i0 + $i1;

        $r0.<io.grpc.internal.CompositeReadableBuffer: int readableBytes> = $i0;

        return;

     label1:
        $r3 = (io.grpc.internal.CompositeReadableBuffer) $r1;

     label2:
        $r2 = $r3.<io.grpc.internal.CompositeReadableBuffer: java.util.Deque readableBuffers>;

        $z0 = interfaceinvoke $r2.<java.util.Deque: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $r2 = $r3.<io.grpc.internal.CompositeReadableBuffer: java.util.Deque readableBuffers>;

        $r4 = interfaceinvoke $r2.<java.util.Deque: java.lang.Object remove()>();

        $r1 = (io.grpc.internal.ReadableBuffer) $r4;

        $r2 = $r0.<io.grpc.internal.CompositeReadableBuffer: java.util.Deque readableBuffers>;

        interfaceinvoke $r2.<java.util.Deque: boolean add(java.lang.Object)>($r1);

        goto label2;

     label3:
        $i0 = $r0.<io.grpc.internal.CompositeReadableBuffer: int readableBytes>;

        $i1 = $r3.<io.grpc.internal.CompositeReadableBuffer: int readableBytes>;

        $i0 = $i0 + $i1;

        $r0.<io.grpc.internal.CompositeReadableBuffer: int readableBytes> = $i0;

        $r3.<io.grpc.internal.CompositeReadableBuffer: int readableBytes> = 0;

        virtualinvoke $r3.<io.grpc.internal.CompositeReadableBuffer: void close()>();

        return;
    }

    private int execute(io.grpc.internal.CompositeReadableBuffer$ReadOperation, int, java.lang.Object, int) throws java.io.IOException
    {
        io.grpc.internal.CompositeReadableBuffer $r0;
        java.lang.Object $r1, $r4;
        io.grpc.internal.CompositeReadableBuffer$ReadOperation $r2;
        int $i0, $i1, $i2, $i3;
        java.util.Deque $r3;
        boolean $z0;
        io.grpc.internal.ReadableBuffer $r5;
        java.lang.AssertionError $r6;

        $r0 := @this: io.grpc.internal.CompositeReadableBuffer;

        $r2 := @parameter0: io.grpc.internal.CompositeReadableBuffer$ReadOperation;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.lang.Object;

        $i1 := @parameter3: int;

        virtualinvoke $r0.<io.grpc.internal.CompositeReadableBuffer: void checkReadable(int)>($i0);

        $r3 = $r0.<io.grpc.internal.CompositeReadableBuffer: java.util.Deque readableBuffers>;

        $z0 = interfaceinvoke $r3.<java.util.Deque: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        specialinvoke $r0.<io.grpc.internal.CompositeReadableBuffer: void advanceBufferIfNecessary()>();

     label1:
        if $i0 <= 0 goto label2;

        $r3 = $r0.<io.grpc.internal.CompositeReadableBuffer: java.util.Deque readableBuffers>;

        $z0 = interfaceinvoke $r3.<java.util.Deque: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r3 = $r0.<io.grpc.internal.CompositeReadableBuffer: java.util.Deque readableBuffers>;

        $r4 = interfaceinvoke $r3.<java.util.Deque: java.lang.Object peek()>();

        $r5 = (io.grpc.internal.ReadableBuffer) $r4;

        $i2 = interfaceinvoke $r5.<io.grpc.internal.ReadableBuffer: int readableBytes()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i2);

        $i1 = interfaceinvoke $r2.<io.grpc.internal.CompositeReadableBuffer$ReadOperation: int read(io.grpc.internal.ReadableBuffer,int,java.lang.Object,int)>($r5, $i2, $r1, $i1);

        $i0 = $i0 - $i2;

        $i3 = $r0.<io.grpc.internal.CompositeReadableBuffer: int readableBytes>;

        $i2 = $i3 - $i2;

        $r0.<io.grpc.internal.CompositeReadableBuffer: int readableBytes> = $i2;

        specialinvoke $r0.<io.grpc.internal.CompositeReadableBuffer: void advanceBufferIfNecessary()>();

        goto label1;

     label2:
        if $i0 > 0 goto label3;

        return $i1;

     label3:
        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>("Failed executing read operation");

        goto label4;

     label4:
        throw $r6;
    }

    private int executeNoThrow(io.grpc.internal.CompositeReadableBuffer$NoThrowReadOperation, int, java.lang.Object, int)
    {
        io.grpc.internal.CompositeReadableBuffer $r0;
        java.lang.Object $r1;
        int $i0, $i1;
        io.grpc.internal.CompositeReadableBuffer$NoThrowReadOperation $r2;
        java.lang.Throwable $r3;
        java.lang.AssertionError $r4;

        $r0 := @this: io.grpc.internal.CompositeReadableBuffer;

        $r2 := @parameter0: io.grpc.internal.CompositeReadableBuffer$NoThrowReadOperation;

        $i1 := @parameter1: int;

        $r1 := @parameter2: java.lang.Object;

        $i0 := @parameter3: int;

     label1:
        $i1 = specialinvoke $r0.<io.grpc.internal.CompositeReadableBuffer: int execute(io.grpc.internal.CompositeReadableBuffer$ReadOperation,int,java.lang.Object,int)>($r2, $i1, $r1, $i0);

     label2:
        return $i1;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>($r3);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void addBuffer(io.grpc.internal.ReadableBuffer)
    {
        io.grpc.internal.CompositeReadableBuffer $r0;
        io.grpc.internal.ReadableBuffer $r1;
        boolean $z0;
        java.util.Deque $r2;
        java.lang.Object $r3;

        $r0 := @this: io.grpc.internal.CompositeReadableBuffer;

        $r1 := @parameter0: io.grpc.internal.ReadableBuffer;

        $z0 = $r0.<io.grpc.internal.CompositeReadableBuffer: boolean marked>;

        if $z0 == 0 goto label1;

        $r2 = $r0.<io.grpc.internal.CompositeReadableBuffer: java.util.Deque readableBuffers>;

        $z0 = interfaceinvoke $r2.<java.util.Deque: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        specialinvoke $r0.<io.grpc.internal.CompositeReadableBuffer: void enqueueBuffer(io.grpc.internal.ReadableBuffer)>($r1);

        if $z0 == 0 goto label3;

        $r2 = $r0.<io.grpc.internal.CompositeReadableBuffer: java.util.Deque readableBuffers>;

        $r3 = interfaceinvoke $r2.<java.util.Deque: java.lang.Object peek()>();

        $r1 = (io.grpc.internal.ReadableBuffer) $r3;

        interfaceinvoke $r1.<io.grpc.internal.ReadableBuffer: void mark()>();

     label3:
        return;
    }

    public void close()
    {
        io.grpc.internal.CompositeReadableBuffer $r0;
        java.util.Deque $r1;
        boolean $z0;
        java.lang.Object $r2;
        io.grpc.internal.ReadableBuffer $r3;

        $r0 := @this: io.grpc.internal.CompositeReadableBuffer;

     label1:
        $r1 = $r0.<io.grpc.internal.CompositeReadableBuffer: java.util.Deque readableBuffers>;

        $z0 = interfaceinvoke $r1.<java.util.Deque: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r1 = $r0.<io.grpc.internal.CompositeReadableBuffer: java.util.Deque readableBuffers>;

        $r2 = interfaceinvoke $r1.<java.util.Deque: java.lang.Object remove()>();

        $r3 = (io.grpc.internal.ReadableBuffer) $r2;

        interfaceinvoke $r3.<io.grpc.internal.ReadableBuffer: void close()>();

        goto label1;

     label2:
        $r1 = $r0.<io.grpc.internal.CompositeReadableBuffer: java.util.Deque rewindableBuffers>;

        if $r1 == null goto label4;

     label3:
        $r1 = $r0.<io.grpc.internal.CompositeReadableBuffer: java.util.Deque rewindableBuffers>;

        $z0 = interfaceinvoke $r1.<java.util.Deque: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        $r1 = $r0.<io.grpc.internal.CompositeReadableBuffer: java.util.Deque rewindableBuffers>;

        $r2 = interfaceinvoke $r1.<java.util.Deque: java.lang.Object remove()>();

        $r3 = (io.grpc.internal.ReadableBuffer) $r2;

        interfaceinvoke $r3.<io.grpc.internal.ReadableBuffer: void close()>();

        goto label3;

     label4:
        return;
    }

    public void mark()
    {
        io.grpc.internal.CompositeReadableBuffer $r0;
        java.util.Deque $r1;
        int $i0;
        boolean $z0;
        java.lang.Object $r2;
        io.grpc.internal.ReadableBuffer $r3;
        java.util.ArrayDeque r4;

        $r0 := @this: io.grpc.internal.CompositeReadableBuffer;

        $r1 = $r0.<io.grpc.internal.CompositeReadableBuffer: java.util.Deque rewindableBuffers>;

        if $r1 == null goto label1;

        goto label2;

     label1:
        r4 = new java.util.ArrayDeque;

        $r1 = $r0.<io.grpc.internal.CompositeReadableBuffer: java.util.Deque readableBuffers>;

        $i0 = interfaceinvoke $r1.<java.util.Deque: int size()>();

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, 16);

        specialinvoke r4.<java.util.ArrayDeque: void <init>(int)>($i0);

        $r1 = (java.util.Deque) r4;

        $r0.<io.grpc.internal.CompositeReadableBuffer: java.util.Deque rewindableBuffers> = $r1;

     label2:
        $r1 = $r0.<io.grpc.internal.CompositeReadableBuffer: java.util.Deque rewindableBuffers>;

        $z0 = interfaceinvoke $r1.<java.util.Deque: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $r1 = $r0.<io.grpc.internal.CompositeReadableBuffer: java.util.Deque rewindableBuffers>;

        $r2 = interfaceinvoke $r1.<java.util.Deque: java.lang.Object remove()>();

        $r3 = (io.grpc.internal.ReadableBuffer) $r2;

        interfaceinvoke $r3.<io.grpc.internal.ReadableBuffer: void close()>();

        goto label2;

     label3:
        $r0.<io.grpc.internal.CompositeReadableBuffer: boolean marked> = 1;

        $r1 = $r0.<io.grpc.internal.CompositeReadableBuffer: java.util.Deque readableBuffers>;

        $r2 = interfaceinvoke $r1.<java.util.Deque: java.lang.Object peek()>();

        $r3 = (io.grpc.internal.ReadableBuffer) $r2;

        if $r3 == null goto label4;

        interfaceinvoke $r3.<io.grpc.internal.ReadableBuffer: void mark()>();

     label4:
        return;
    }

    public boolean markSupported()
    {
        io.grpc.internal.CompositeReadableBuffer $r0;
        java.util.Deque $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        io.grpc.internal.ReadableBuffer $r4;

        $r0 := @this: io.grpc.internal.CompositeReadableBuffer;

        $r1 = $r0.<io.grpc.internal.CompositeReadableBuffer: java.util.Deque readableBuffers>;

        $r2 = interfaceinvoke $r1.<java.util.Deque: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (io.grpc.internal.ReadableBuffer) $r3;

        $z0 = interfaceinvoke $r4.<io.grpc.internal.ReadableBuffer: boolean markSupported()>();

        if $z0 != 0 goto label1;

        return 0;

     label2:
        return 1;
    }

    public io.grpc.internal.ReadableBuffer readBytes(int)
    {
        io.grpc.internal.CompositeReadableBuffer $r0, $r3, r6;
        int $i0, $i1;
        io.grpc.internal.ReadableBuffer $r1, r7;
        java.lang.Object $r2, $r5;
        java.util.Deque $r4;
        boolean $z0;

        $r0 := @this: io.grpc.internal.CompositeReadableBuffer;

        $i0 := @parameter0: int;

        if $i0 > 0 goto label01;

        $r1 = staticinvoke <io.grpc.internal.ReadableBuffers: io.grpc.internal.ReadableBuffer empty()>();

        return $r1;

     label01:
        virtualinvoke $r0.<io.grpc.internal.CompositeReadableBuffer: void checkReadable(int)>($i0);

        $i1 = $r0.<io.grpc.internal.CompositeReadableBuffer: int readableBytes>;

        $i1 = $i1 - $i0;

        $r0.<io.grpc.internal.CompositeReadableBuffer: int readableBytes> = $i1;

        $r2 = null;

        $r3 = null;

     label02:
        $r4 = $r0.<io.grpc.internal.CompositeReadableBuffer: java.util.Deque readableBuffers>;

        $r5 = interfaceinvoke $r4.<java.util.Deque: java.lang.Object peek()>();

        $r1 = (io.grpc.internal.ReadableBuffer) $r5;

        $i1 = interfaceinvoke $r1.<io.grpc.internal.ReadableBuffer: int readableBytes()>();

        if $i1 <= $i0 goto label03;

        $r1 = interfaceinvoke $r1.<io.grpc.internal.ReadableBuffer: io.grpc.internal.ReadableBuffer readBytes(int)>($i0);

        $i0 = 0;

        goto label06;

     label03:
        $z0 = $r0.<io.grpc.internal.CompositeReadableBuffer: boolean marked>;

        if $z0 == 0 goto label04;

        $r1 = interfaceinvoke $r1.<io.grpc.internal.ReadableBuffer: io.grpc.internal.ReadableBuffer readBytes(int)>($i1);

        specialinvoke $r0.<io.grpc.internal.CompositeReadableBuffer: void advanceBuffer()>();

        goto label05;

     label04:
        $r4 = $r0.<io.grpc.internal.CompositeReadableBuffer: java.util.Deque readableBuffers>;

        $r5 = interfaceinvoke $r4.<java.util.Deque: java.lang.Object poll()>();

        $r1 = (io.grpc.internal.ReadableBuffer) $r5;

     label05:
        $i0 = $i0 - $i1;

     label06:
        if $r2 != null goto label07;

        $r2 = $r1;

        goto label11;

     label07:
        if $r3 != null goto label10;

        r6 = new io.grpc.internal.CompositeReadableBuffer;

        $r3 = r6;

        $i1 = 2;

        if $i0 != 0 goto label08;

        goto label09;

     label08:
        $r4 = $r0.<io.grpc.internal.CompositeReadableBuffer: java.util.Deque readableBuffers>;

        $i1 = interfaceinvoke $r4.<java.util.Deque: int size()>();

        $i1 = $i1 + 2;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, 16);

     label09:
        specialinvoke r6.<io.grpc.internal.CompositeReadableBuffer: void <init>(int)>($i1);

        r7 = (io.grpc.internal.ReadableBuffer) $r2;

        virtualinvoke $r3.<io.grpc.internal.CompositeReadableBuffer: void addBuffer(io.grpc.internal.ReadableBuffer)>(r7);

        $r2 = $r3;

        goto label10;

     label10:
        virtualinvoke $r3.<io.grpc.internal.CompositeReadableBuffer: void addBuffer(io.grpc.internal.ReadableBuffer)>($r1);

     label11:
        if $i0 <= 0 goto label12;

        goto label02;

     label12:
        $r1 = (io.grpc.internal.ReadableBuffer) $r2;

        return $r1;
    }

    public void readBytes(java.io.OutputStream, int) throws java.io.IOException
    {
        io.grpc.internal.CompositeReadableBuffer $r0;
        java.io.OutputStream $r1;
        int $i0;
        io.grpc.internal.CompositeReadableBuffer$ReadOperation $r2;

        $r0 := @this: io.grpc.internal.CompositeReadableBuffer;

        $r1 := @parameter0: java.io.OutputStream;

        $i0 := @parameter1: int;

        $r2 = <io.grpc.internal.CompositeReadableBuffer: io.grpc.internal.CompositeReadableBuffer$ReadOperation STREAM_OP>;

        specialinvoke $r0.<io.grpc.internal.CompositeReadableBuffer: int execute(io.grpc.internal.CompositeReadableBuffer$ReadOperation,int,java.lang.Object,int)>($r2, $i0, $r1, 0);

        return;
    }

    public void readBytes(java.nio.ByteBuffer)
    {
        io.grpc.internal.CompositeReadableBuffer $r0;
        java.nio.ByteBuffer $r1;
        io.grpc.internal.CompositeReadableBuffer$NoThrowReadOperation $r2;
        int $i0;

        $r0 := @this: io.grpc.internal.CompositeReadableBuffer;

        $r1 := @parameter0: java.nio.ByteBuffer;

        $r2 = <io.grpc.internal.CompositeReadableBuffer: io.grpc.internal.CompositeReadableBuffer$NoThrowReadOperation BYTE_BUF_OP>;

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int remaining()>();

        specialinvoke $r0.<io.grpc.internal.CompositeReadableBuffer: int executeNoThrow(io.grpc.internal.CompositeReadableBuffer$NoThrowReadOperation,int,java.lang.Object,int)>($r2, $i0, $r1, 0);

        return;
    }

    public void readBytes(byte[], int, int)
    {
        io.grpc.internal.CompositeReadableBuffer $r0;
        byte[] $r1;
        int $i0, $i1;
        io.grpc.internal.CompositeReadableBuffer$NoThrowReadOperation $r2;

        $r0 := @this: io.grpc.internal.CompositeReadableBuffer;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = <io.grpc.internal.CompositeReadableBuffer: io.grpc.internal.CompositeReadableBuffer$NoThrowReadOperation BYTE_ARRAY_OP>;

        specialinvoke $r0.<io.grpc.internal.CompositeReadableBuffer: int executeNoThrow(io.grpc.internal.CompositeReadableBuffer$NoThrowReadOperation,int,java.lang.Object,int)>($r2, $i1, $r1, $i0);

        return;
    }

    public int readUnsignedByte()
    {
        io.grpc.internal.CompositeReadableBuffer $r0;
        int $i0;
        io.grpc.internal.CompositeReadableBuffer$NoThrowReadOperation $r1;

        $r0 := @this: io.grpc.internal.CompositeReadableBuffer;

        $r1 = <io.grpc.internal.CompositeReadableBuffer: io.grpc.internal.CompositeReadableBuffer$NoThrowReadOperation UBYTE_OP>;

        $i0 = specialinvoke $r0.<io.grpc.internal.CompositeReadableBuffer: int executeNoThrow(io.grpc.internal.CompositeReadableBuffer$NoThrowReadOperation,int,java.lang.Object,int)>($r1, 1, null, 0);

        return $i0;
    }

    public int readableBytes()
    {
        io.grpc.internal.CompositeReadableBuffer $r0;
        int i0;

        $r0 := @this: io.grpc.internal.CompositeReadableBuffer;

        i0 = $r0.<io.grpc.internal.CompositeReadableBuffer: int readableBytes>;

        return i0;
    }

    public void reset()
    {
        io.grpc.internal.CompositeReadableBuffer $r0;
        boolean $z0;
        java.util.Deque $r1;
        java.lang.Object $r2;
        io.grpc.internal.ReadableBuffer $r3;
        int $i0, $i1, $i2;
        java.nio.InvalidMarkException $r4;

        $r0 := @this: io.grpc.internal.CompositeReadableBuffer;

        $z0 = $r0.<io.grpc.internal.CompositeReadableBuffer: boolean marked>;

        if $z0 == 0 goto label4;

        $r1 = $r0.<io.grpc.internal.CompositeReadableBuffer: java.util.Deque readableBuffers>;

        $r2 = interfaceinvoke $r1.<java.util.Deque: java.lang.Object peek()>();

        $r3 = (io.grpc.internal.ReadableBuffer) $r2;

        if $r3 != null goto label1;

        goto label2;

     label1:
        $i0 = interfaceinvoke $r3.<io.grpc.internal.ReadableBuffer: int readableBytes()>();

        interfaceinvoke $r3.<io.grpc.internal.ReadableBuffer: void reset()>();

        $i1 = $r0.<io.grpc.internal.CompositeReadableBuffer: int readableBytes>;

        $i2 = interfaceinvoke $r3.<io.grpc.internal.ReadableBuffer: int readableBytes()>();

        $i0 = $i2 - $i0;

        $i1 = $i1 + $i0;

        $r0.<io.grpc.internal.CompositeReadableBuffer: int readableBytes> = $i1;

     label2:
        $r1 = $r0.<io.grpc.internal.CompositeReadableBuffer: java.util.Deque rewindableBuffers>;

        $r2 = interfaceinvoke $r1.<java.util.Deque: java.lang.Object pollLast()>();

        $r3 = (io.grpc.internal.ReadableBuffer) $r2;

        if $r3 == null goto label3;

        interfaceinvoke $r3.<io.grpc.internal.ReadableBuffer: void reset()>();

        $r1 = $r0.<io.grpc.internal.CompositeReadableBuffer: java.util.Deque readableBuffers>;

        interfaceinvoke $r1.<java.util.Deque: void addFirst(java.lang.Object)>($r3);

        $i1 = $r0.<io.grpc.internal.CompositeReadableBuffer: int readableBytes>;

        $i0 = interfaceinvoke $r3.<io.grpc.internal.ReadableBuffer: int readableBytes()>();

        $i1 = $i1 + $i0;

        $r0.<io.grpc.internal.CompositeReadableBuffer: int readableBytes> = $i1;

        goto label2;

     label3:
        return;

     label4:
        $r4 = new java.nio.InvalidMarkException;

        specialinvoke $r4.<java.nio.InvalidMarkException: void <init>()>();

        goto label5;

     label5:
        throw $r4;
    }

    public void skipBytes(int)
    {
        io.grpc.internal.CompositeReadableBuffer $r0;
        int $i0;
        io.grpc.internal.CompositeReadableBuffer$NoThrowReadOperation $r1;

        $r0 := @this: io.grpc.internal.CompositeReadableBuffer;

        $i0 := @parameter0: int;

        $r1 = <io.grpc.internal.CompositeReadableBuffer: io.grpc.internal.CompositeReadableBuffer$NoThrowReadOperation SKIP_OP>;

        specialinvoke $r0.<io.grpc.internal.CompositeReadableBuffer: int executeNoThrow(io.grpc.internal.CompositeReadableBuffer$NoThrowReadOperation,int,java.lang.Object,int)>($r1, $i0, null, 0);

        return;
    }

io.grpc.internal.CompositeReadableBuffer$1
    void <init>()
    {
        io.grpc.internal.CompositeReadableBuffer$1 $r0;

        $r0 := @this: io.grpc.internal.CompositeReadableBuffer$1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public volatile int read(io.grpc.internal.ReadableBuffer, int, java.lang.Object, int)
    {
        io.grpc.internal.CompositeReadableBuffer$1 $r0;
        int $i0, $i1;
        io.grpc.internal.ReadableBuffer $r1;
        java.lang.Object $r2;
        java.lang.Void $r3;

        $r0 := @this: io.grpc.internal.CompositeReadableBuffer$1;

        $r1 := @parameter0: io.grpc.internal.ReadableBuffer;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        $i1 := @parameter3: int;

        $r3 = (java.lang.Void) $r2;

        $i0 = virtualinvoke $r0.<io.grpc.internal.CompositeReadableBuffer$1: int read(io.grpc.internal.ReadableBuffer,int,java.lang.Void,int)>($r1, $i0, $r3, $i1);

        return $i0;
    }

    public int read(io.grpc.internal.ReadableBuffer, int, java.lang.Void, int)
    {
        io.grpc.internal.CompositeReadableBuffer$1 $r0;
        int $i0, $i1;
        java.lang.Void $r1;
        io.grpc.internal.ReadableBuffer $r2;

        $r0 := @this: io.grpc.internal.CompositeReadableBuffer$1;

        $r2 := @parameter0: io.grpc.internal.ReadableBuffer;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.lang.Void;

        $i1 := @parameter3: int;

        $i0 = interfaceinvoke $r2.<io.grpc.internal.ReadableBuffer: int readUnsignedByte()>();

        return $i0;
    }

io.grpc.internal.CompositeReadableBuffer$2
    void <init>()
    {
        io.grpc.internal.CompositeReadableBuffer$2 $r0;

        $r0 := @this: io.grpc.internal.CompositeReadableBuffer$2;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public volatile int read(io.grpc.internal.ReadableBuffer, int, java.lang.Object, int)
    {
        io.grpc.internal.CompositeReadableBuffer$2 $r0;
        int $i0, $i1;
        io.grpc.internal.ReadableBuffer $r1;
        java.lang.Object $r2;
        java.lang.Void $r3;

        $r0 := @this: io.grpc.internal.CompositeReadableBuffer$2;

        $r1 := @parameter0: io.grpc.internal.ReadableBuffer;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        $i1 := @parameter3: int;

        $r3 = (java.lang.Void) $r2;

        $i0 = virtualinvoke $r0.<io.grpc.internal.CompositeReadableBuffer$2: int read(io.grpc.internal.ReadableBuffer,int,java.lang.Void,int)>($r1, $i0, $r3, $i1);

        return $i0;
    }

    public int read(io.grpc.internal.ReadableBuffer, int, java.lang.Void, int)
    {
        io.grpc.internal.CompositeReadableBuffer$2 $r0;
        int $i0, $i1;
        java.lang.Void $r1;
        io.grpc.internal.ReadableBuffer $r2;

        $r0 := @this: io.grpc.internal.CompositeReadableBuffer$2;

        $r2 := @parameter0: io.grpc.internal.ReadableBuffer;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.lang.Void;

        $i1 := @parameter3: int;

        interfaceinvoke $r2.<io.grpc.internal.ReadableBuffer: void skipBytes(int)>($i0);

        return 0;
    }

io.grpc.internal.CompositeReadableBuffer$3
    void <init>()
    {
        io.grpc.internal.CompositeReadableBuffer$3 $r0;

        $r0 := @this: io.grpc.internal.CompositeReadableBuffer$3;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public volatile int read(io.grpc.internal.ReadableBuffer, int, java.lang.Object, int)
    {
        io.grpc.internal.CompositeReadableBuffer$3 $r0;
        int $i0, $i1;
        io.grpc.internal.ReadableBuffer $r1;
        java.lang.Object $r2;
        byte[] $r3;

        $r0 := @this: io.grpc.internal.CompositeReadableBuffer$3;

        $r1 := @parameter0: io.grpc.internal.ReadableBuffer;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        $i1 := @parameter3: int;

        $r3 = (byte[]) $r2;

        $i0 = virtualinvoke $r0.<io.grpc.internal.CompositeReadableBuffer$3: int read(io.grpc.internal.ReadableBuffer,int,byte[],int)>($r1, $i0, $r3, $i1);

        return $i0;
    }

    public int read(io.grpc.internal.ReadableBuffer, int, byte[], int)
    {
        io.grpc.internal.CompositeReadableBuffer$3 $r0;
        io.grpc.internal.ReadableBuffer $r1;
        int $i0, $i1;
        byte[] $r2;

        $r0 := @this: io.grpc.internal.CompositeReadableBuffer$3;

        $r1 := @parameter0: io.grpc.internal.ReadableBuffer;

        $i0 := @parameter1: int;

        $r2 := @parameter2: byte[];

        $i1 := @parameter3: int;

        interfaceinvoke $r1.<io.grpc.internal.ReadableBuffer: void readBytes(byte[],int,int)>($r2, $i1, $i0);

        $i0 = $i1 + $i0;

        return $i0;
    }

io.grpc.internal.CompositeReadableBuffer$4
    void <init>()
    {
        io.grpc.internal.CompositeReadableBuffer$4 $r0;

        $r0 := @this: io.grpc.internal.CompositeReadableBuffer$4;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public volatile int read(io.grpc.internal.ReadableBuffer, int, java.lang.Object, int)
    {
        io.grpc.internal.CompositeReadableBuffer$4 $r0;
        int $i0, $i1;
        io.grpc.internal.ReadableBuffer $r1;
        java.lang.Object $r2;
        java.nio.ByteBuffer $r3;

        $r0 := @this: io.grpc.internal.CompositeReadableBuffer$4;

        $r1 := @parameter0: io.grpc.internal.ReadableBuffer;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        $i1 := @parameter3: int;

        $r3 = (java.nio.ByteBuffer) $r2;

        $i0 = virtualinvoke $r0.<io.grpc.internal.CompositeReadableBuffer$4: int read(io.grpc.internal.ReadableBuffer,int,java.nio.ByteBuffer,int)>($r1, $i0, $r3, $i1);

        return $i0;
    }

    public int read(io.grpc.internal.ReadableBuffer, int, java.nio.ByteBuffer, int)
    {
        io.grpc.internal.CompositeReadableBuffer$4 $r0;
        int $i0, $i1, $i2;
        java.nio.ByteBuffer $r1;
        io.grpc.internal.ReadableBuffer $r2;

        $r0 := @this: io.grpc.internal.CompositeReadableBuffer$4;

        $r2 := @parameter0: io.grpc.internal.ReadableBuffer;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.nio.ByteBuffer;

        $i1 := @parameter3: int;

        $i1 = virtualinvoke $r1.<java.nio.ByteBuffer: int limit()>();

        $i2 = virtualinvoke $r1.<java.nio.ByteBuffer: int position()>();

        $i0 = $i2 + $i0;

        virtualinvoke $r1.<java.nio.Buffer: java.nio.Buffer limit(int)>($i0);

        interfaceinvoke $r2.<io.grpc.internal.ReadableBuffer: void readBytes(java.nio.ByteBuffer)>($r1);

        virtualinvoke $r1.<java.nio.Buffer: java.nio.Buffer limit(int)>($i1);

        return 0;
    }

io.grpc.internal.CompositeReadableBuffer$5
    void <init>()
    {
        io.grpc.internal.CompositeReadableBuffer$5 $r0;

        $r0 := @this: io.grpc.internal.CompositeReadableBuffer$5;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int read(io.grpc.internal.ReadableBuffer, int, java.io.OutputStream, int) throws java.io.IOException
    {
        io.grpc.internal.CompositeReadableBuffer$5 $r0;
        int $i0, $i1;
        java.io.OutputStream $r1;
        io.grpc.internal.ReadableBuffer $r2;

        $r0 := @this: io.grpc.internal.CompositeReadableBuffer$5;

        $r2 := @parameter0: io.grpc.internal.ReadableBuffer;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.io.OutputStream;

        $i1 := @parameter3: int;

        interfaceinvoke $r2.<io.grpc.internal.ReadableBuffer: void readBytes(java.io.OutputStream,int)>($r1, $i0);

        return 0;
    }

    public volatile int read(io.grpc.internal.ReadableBuffer, int, java.lang.Object, int) throws java.io.IOException
    {
        io.grpc.internal.CompositeReadableBuffer$5 $r0;
        int $i0, $i1;
        io.grpc.internal.ReadableBuffer $r1;
        java.lang.Object $r2;
        java.io.OutputStream $r3;

        $r0 := @this: io.grpc.internal.CompositeReadableBuffer$5;

        $r1 := @parameter0: io.grpc.internal.ReadableBuffer;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.Object;

        $i1 := @parameter3: int;

        $r3 = (java.io.OutputStream) $r2;

        $i0 = virtualinvoke $r0.<io.grpc.internal.CompositeReadableBuffer$5: int read(io.grpc.internal.ReadableBuffer,int,java.io.OutputStream,int)>($r1, $i0, $r3, $i1);

        return $i0;
    }

io.grpc.internal.CompositeReadableBuffer$NoThrowReadOperation
io.grpc.internal.CompositeReadableBuffer$ReadOperation
<io.grpc.internal.CompositeReadableBuffer$ReadOperation: int read(io.grpc.internal.ReadableBuffer,int,java.lang.Object,int)>
