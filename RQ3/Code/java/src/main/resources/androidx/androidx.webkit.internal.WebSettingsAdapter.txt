androidx.webkit.internal.WebSettingsAdapter
<androidx.webkit.internal.WebSettingsAdapter: org.chromium.support_lib_boundary.WebSettingsBoundaryInterface mBoundaryInterface>
    public void <init>(org.chromium.support_lib_boundary.WebSettingsBoundaryInterface)
    {
        androidx.webkit.internal.WebSettingsAdapter r0;
        org.chromium.support_lib_boundary.WebSettingsBoundaryInterface r1;

        r0 := @this: androidx.webkit.internal.WebSettingsAdapter;

        r1 := @parameter0: org.chromium.support_lib_boundary.WebSettingsBoundaryInterface;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.webkit.internal.WebSettingsAdapter: org.chromium.support_lib_boundary.WebSettingsBoundaryInterface mBoundaryInterface> = r1;

        return;
    }

    public void setOffscreenPreRaster(boolean)
    {
        androidx.webkit.internal.WebSettingsAdapter r0;
        boolean z0;
        org.chromium.support_lib_boundary.WebSettingsBoundaryInterface $r1;

        r0 := @this: androidx.webkit.internal.WebSettingsAdapter;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.webkit.internal.WebSettingsAdapter: org.chromium.support_lib_boundary.WebSettingsBoundaryInterface mBoundaryInterface>;

        interfaceinvoke $r1.<org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setOffscreenPreRaster(boolean)>(z0);

        return;
    }

    public boolean getOffscreenPreRaster()
    {
        androidx.webkit.internal.WebSettingsAdapter r0;
        org.chromium.support_lib_boundary.WebSettingsBoundaryInterface $r1;
        boolean $z0;

        r0 := @this: androidx.webkit.internal.WebSettingsAdapter;

        $r1 = r0.<androidx.webkit.internal.WebSettingsAdapter: org.chromium.support_lib_boundary.WebSettingsBoundaryInterface mBoundaryInterface>;

        $z0 = interfaceinvoke $r1.<org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getOffscreenPreRaster()>();

        return $z0;
    }

    public void setSafeBrowsingEnabled(boolean)
    {
        androidx.webkit.internal.WebSettingsAdapter r0;
        boolean z0;
        org.chromium.support_lib_boundary.WebSettingsBoundaryInterface $r1;

        r0 := @this: androidx.webkit.internal.WebSettingsAdapter;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.webkit.internal.WebSettingsAdapter: org.chromium.support_lib_boundary.WebSettingsBoundaryInterface mBoundaryInterface>;

        interfaceinvoke $r1.<org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setSafeBrowsingEnabled(boolean)>(z0);

        return;
    }

    public boolean getSafeBrowsingEnabled()
    {
        androidx.webkit.internal.WebSettingsAdapter r0;
        org.chromium.support_lib_boundary.WebSettingsBoundaryInterface $r1;
        boolean $z0;

        r0 := @this: androidx.webkit.internal.WebSettingsAdapter;

        $r1 = r0.<androidx.webkit.internal.WebSettingsAdapter: org.chromium.support_lib_boundary.WebSettingsBoundaryInterface mBoundaryInterface>;

        $z0 = interfaceinvoke $r1.<org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getSafeBrowsingEnabled()>();

        return $z0;
    }

    public void setDisabledActionModeMenuItems(int)
    {
        androidx.webkit.internal.WebSettingsAdapter r0;
        int i0;
        org.chromium.support_lib_boundary.WebSettingsBoundaryInterface $r1;

        r0 := @this: androidx.webkit.internal.WebSettingsAdapter;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.webkit.internal.WebSettingsAdapter: org.chromium.support_lib_boundary.WebSettingsBoundaryInterface mBoundaryInterface>;

        interfaceinvoke $r1.<org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setDisabledActionModeMenuItems(int)>(i0);

        return;
    }

    public int getDisabledActionModeMenuItems()
    {
        androidx.webkit.internal.WebSettingsAdapter r0;
        org.chromium.support_lib_boundary.WebSettingsBoundaryInterface $r1;
        int $i0;

        r0 := @this: androidx.webkit.internal.WebSettingsAdapter;

        $r1 = r0.<androidx.webkit.internal.WebSettingsAdapter: org.chromium.support_lib_boundary.WebSettingsBoundaryInterface mBoundaryInterface>;

        $i0 = interfaceinvoke $r1.<org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getDisabledActionModeMenuItems()>();

        return $i0;
    }

