androidx.room.compiler.processing.util.ProcessorTestExtKt
    private static final androidx.room.compiler.processing.XProcessingEnvConfig defaultTestConfig(java.util.Map)
    {
        java.util.Map r0;
        androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion $r1;
        androidx.room.compiler.processing.XProcessingEnvConfig $r2;

        r0 := @parameter0: java.util.Map;

        $r1 = <androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider: androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.room.compiler.processing.XProcessingEnvironmentTestConfigProvider$Companion: androidx.room.compiler.processing.XProcessingEnvConfig createConfig$room_compiler_processing_testing(java.util.Map)>(r0);

        return $r2;
    }

    private static final transient void runTests(androidx.room.compiler.processing.util.runner.TestCompilationParameters, androidx.room.compiler.processing.util.runner.CompilationTestRunner[])
    {
        androidx.room.compiler.processing.util.runner.TestCompilationParameters r0;
        androidx.room.compiler.processing.util.runner.CompilationTestRunner[] r1;
        int i0, i1, i2, i3, i4, i5, i6;
        java.io.File r2, r3;
        androidx.room.compiler.processing.util.CompilationResult r4;
        androidx.room.compiler.processing.util.CompilationResultSubject r5;
        java.lang.Iterable $r6, $r22;
        java.util.Iterator r7;
        java.lang.Object r8;
        androidx.room.compiler.processing.util.XTestInvocation r9;
        java.lang.Throwable r10, $r24;
        androidx.room.compiler.processing.util.CompilationTestCapabilities $r11;
        boolean $z3, $z4, $z5, $z6, $z12, z13, $z15;
        java.lang.Integer $r12, $r14;
        com.google.common.truth.IntegerSubject $r13;
        java.lang.Comparable $r15;
        androidx.room.compiler.processing.util.CompilationResultSubject$Companion $r16;
        androidx.room.compiler.processing.SyntheticProcessor $r17, $r20;
        java.util.List $r18, $r21;
        com.google.common.truth.StandardSubjectBuilder $r19;
        com.google.common.truth.IterableSubject $r23;
        androidx.room.compiler.processing.util.runner.CompilationTestRunner r26, r27, r29;
        byte $b7;

        r0 := @parameter0: androidx.room.compiler.processing.util.runner.TestCompilationParameters;

        r1 := @parameter1: androidx.room.compiler.processing.util.runner.CompilationTestRunner[];

        i1 = 0;

        i2 = 0;

        i3 = lengthof r1;

     label01:
        if i2 >= i3 goto label12;

        r26 = r1[i2];

        r27 = r26;

        $z5 = interfaceinvoke r27.<androidx.room.compiler.processing.util.runner.CompilationTestRunner: boolean canRun(androidx.room.compiler.processing.util.runner.TestCompilationParameters)>(r0);

        if $z5 == 0 goto label09;

        r2 = staticinvoke <com.google.common.io.Files: java.io.File createTempDir()>();

     label02:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "tmpDir");

        r3 = r2;

        r4 = interfaceinvoke r27.<androidx.room.compiler.processing.util.runner.CompilationTestRunner: androidx.room.compiler.processing.util.CompilationResult compile(java.io.File,androidx.room.compiler.processing.util.runner.TestCompilationParameters)>(r3, r0);

        $r16 = <androidx.room.compiler.processing.util.CompilationResultSubject: androidx.room.compiler.processing.util.CompilationResultSubject$Companion Companion>;

        r5 = virtualinvoke $r16.<androidx.room.compiler.processing.util.CompilationResultSubject$Companion: androidx.room.compiler.processing.util.CompilationResultSubject assertThat(androidx.room.compiler.processing.util.CompilationResult)>(r4);

        virtualinvoke r5.<androidx.room.compiler.processing.util.CompilationResultSubject: void assertNoProcessorAssertionErrors$room_compiler_processing_testing()>();

        $r17 = virtualinvoke r4.<androidx.room.compiler.processing.util.CompilationResult: androidx.room.compiler.processing.SyntheticProcessor getProcessor$room_compiler_processing_testing()>();

        $r18 = interfaceinvoke $r17.<androidx.room.compiler.processing.SyntheticProcessor: java.util.List getInvocationInstances()>();

        $r6 = (java.lang.Iterable) $r18;

        r7 = interfaceinvoke $r6.<java.lang.Iterable: java.util.Iterator iterator()>();

     label03:
        $z6 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label04;

        r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (androidx.room.compiler.processing.util.XTestInvocation) r8;

        virtualinvoke r9.<androidx.room.compiler.processing.util.XTestInvocation: void runPostCompilationChecks$room_compiler_processing_testing(androidx.room.compiler.processing.util.CompilationResultSubject)>(r5);

        goto label03;

     label04:
        $r19 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.StandardSubjectBuilder assertWithMessage(java.lang.String)>("compilation should\'ve run the processor callback at least once");

        $r20 = virtualinvoke r4.<androidx.room.compiler.processing.util.CompilationResult: androidx.room.compiler.processing.SyntheticProcessor getProcessor$room_compiler_processing_testing()>();

        $r21 = interfaceinvoke $r20.<androidx.room.compiler.processing.SyntheticProcessor: java.util.List getInvocationInstances()>();

        $r22 = (java.lang.Iterable) $r21;

        $r23 = virtualinvoke $r19.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.IterableSubject that(java.lang.Iterable)>($r22);

        virtualinvoke $r23.<com.google.common.truth.IterableSubject: void isNotEmpty()>();

        virtualinvoke r5.<androidx.room.compiler.processing.util.CompilationResultSubject: void assertCompilationResult$room_compiler_processing_testing()>();

        virtualinvoke r5.<androidx.room.compiler.processing.util.CompilationResultSubject: void assertAllExpectedRoundsAreCompleted$room_compiler_processing_testing()>();

     label05:
        staticinvoke <kotlin.io.FilesKt: boolean deleteRecursively(java.io.File)>(r2);

        goto label08;

     label06:
        $r24 := @caughtexception;

        r10 = $r24;

     label07:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "tmpDir");

        staticinvoke <kotlin.io.FilesKt: boolean deleteRecursively(java.io.File)>(r2);

        throw r10;

     label08:
        $z12 = 1;

        goto label10;

     label09:
        $z12 = 0;

     label10:
        if $z12 == 0 goto label11;

        i1 = i1 + 1;

     label11:
        i2 = i2 + 1;

        goto label01;

     label12:
        i0 = i1;

        $r11 = <androidx.room.compiler.processing.util.CompilationTestCapabilities: androidx.room.compiler.processing.util.CompilationTestCapabilities INSTANCE>;

        $z3 = virtualinvoke $r11.<androidx.room.compiler.processing.util.CompilationTestCapabilities: boolean getCanTestWithKsp()>();

        if $z3 != 0 goto label18;

        z13 = 0;

        i4 = 0;

        i5 = 0;

        i6 = lengthof r1;

     label13:
        if i5 >= i6 goto label17;

        r29 = r1[i5];

        $z4 = r29 instanceof androidx.room.compiler.processing.util.runner.KspCompilationTestRunner;

        if $z4 != 0 goto label14;

        $z15 = 1;

        goto label15;

     label14:
        $z15 = 0;

     label15:
        if $z15 == 0 goto label16;

        i4 = i4 + 1;

     label16:
        i5 = i5 + 1;

        goto label13;

     label17:
        if i4 <= 0 goto label19;

     label18:
        $b7 = 1;

        goto label20;

     label19:
        $b7 = 0;

     label20:
        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r13 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.IntegerSubject assertThat(java.lang.Integer)>($r12);

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b7);

        $r15 = (java.lang.Comparable) $r14;

        virtualinvoke $r13.<com.google.common.truth.IntegerSubject: void isAtLeast(java.lang.Comparable)>($r15);

        return;

        catch java.lang.Throwable from label02 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
    }

    public static final void runProcessorTestWithoutKsp(java.util.List, java.util.List, java.util.Map, java.util.List, java.util.List, androidx.room.compiler.processing.XProcessingEnvConfig, kotlin.jvm.functions.Function1)
    {
        java.util.List r0, r1, r3, r4, $r9;
        java.util.Map r2;
        androidx.room.compiler.processing.XProcessingEnvConfig r5;
        kotlin.jvm.functions.Function1 r6;
        androidx.room.compiler.processing.util.runner.CompilationTestRunner[] r7;
        androidx.room.compiler.processing.util.runner.TestCompilationParameters $r8;
        androidx.room.compiler.processing.util.runner.JavacCompilationTestRunner $r10;
        androidx.room.compiler.processing.util.runner.CompilationTestRunner $r11, $r13;
        androidx.room.compiler.processing.util.runner.KaptCompilationTestRunner $r12;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.util.Map;

        r3 := @parameter3: java.util.List;

        r4 := @parameter4: java.util.List;

        r5 := @parameter5: androidx.room.compiler.processing.XProcessingEnvConfig;

        r6 := @parameter6: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "sources");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "classpath");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "options");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "javacArguments");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "kotlincArguments");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "config");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r6, "handler");

        $r8 = new androidx.room.compiler.processing.util.runner.TestCompilationParameters;

        $r9 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>(r6);

        specialinvoke $r8.<androidx.room.compiler.processing.util.runner.TestCompilationParameters: void <init>(java.util.List,java.util.List,java.util.Map,java.util.List,java.util.List,androidx.room.compiler.processing.XProcessingEnvConfig,java.util.List)>(r0, r1, r2, r3, r4, r5, $r9);

        r7 = newarray (androidx.room.compiler.processing.util.runner.CompilationTestRunner)[2];

        $r10 = new androidx.room.compiler.processing.util.runner.JavacCompilationTestRunner;

        specialinvoke $r10.<androidx.room.compiler.processing.util.runner.JavacCompilationTestRunner: void <init>(java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, 1, null);

        $r11 = (androidx.room.compiler.processing.util.runner.CompilationTestRunner) $r10;

        r7[0] = $r11;

        $r12 = new androidx.room.compiler.processing.util.runner.KaptCompilationTestRunner;

        specialinvoke $r12.<androidx.room.compiler.processing.util.runner.KaptCompilationTestRunner: void <init>(java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, 1, null);

        $r13 = (androidx.room.compiler.processing.util.runner.CompilationTestRunner) $r12;

        r7[1] = $r13;

        staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: void runTests(androidx.room.compiler.processing.util.runner.TestCompilationParameters,androidx.room.compiler.processing.util.runner.CompilationTestRunner[])>($r8, r7);

        return;
    }

    public static void runProcessorTestWithoutKsp$default(java.util.List, java.util.List, java.util.Map, java.util.List, java.util.List, androidx.room.compiler.processing.XProcessingEnvConfig, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        kotlin.jvm.functions.Function1 r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Object r1;
        java.util.List r2, r3, r5, r6;
        java.util.Map r4;
        androidx.room.compiler.processing.XProcessingEnvConfig r7;

        r2 := @parameter0: java.util.List;

        r3 := @parameter1: java.util.List;

        r4 := @parameter2: java.util.Map;

        r5 := @parameter3: java.util.List;

        r6 := @parameter4: java.util.List;

        r7 := @parameter5: androidx.room.compiler.processing.XProcessingEnvConfig;

        r0 := @parameter6: kotlin.jvm.functions.Function1;

        i0 := @parameter7: int;

        r1 := @parameter8: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        r4 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

     label3:
        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        r5 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label4:
        $i5 = i0 & 16;

        if $i5 == 0 goto label5;

        r6 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label5:
        $i6 = i0 & 32;

        if $i6 == 0 goto label6;

        r7 = staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: androidx.room.compiler.processing.XProcessingEnvConfig defaultTestConfig(java.util.Map)>(r4);

     label6:
        staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: void runProcessorTestWithoutKsp(java.util.List,java.util.List,java.util.Map,java.util.List,java.util.List,androidx.room.compiler.processing.XProcessingEnvConfig,kotlin.jvm.functions.Function1)>(r2, r3, r4, r5, r6, r7, r0);

        return;
    }

    public static final void runProcessorTest(java.util.List, java.util.List, java.util.Map, java.util.List, java.util.List, androidx.room.compiler.processing.XProcessingEnvConfig, kotlin.jvm.functions.Function1)
    {
        java.util.List r0, r1, r3, r4, $r7;
        java.util.Map r2;
        androidx.room.compiler.processing.XProcessingEnvConfig r5;
        kotlin.jvm.functions.Function1 r6;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.util.Map;

        r3 := @parameter3: java.util.List;

        r4 := @parameter4: java.util.List;

        r5 := @parameter5: androidx.room.compiler.processing.XProcessingEnvConfig;

        r6 := @parameter6: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "sources");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "classpath");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "options");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "javacArguments");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "kotlincArguments");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "config");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r6, "handler");

        $r7 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>(r6);

        staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: void runProcessorTest(java.util.List,java.util.List,java.util.Map,java.util.List,java.util.List,androidx.room.compiler.processing.XProcessingEnvConfig,java.util.List)>(r0, r1, r2, r3, r4, r5, $r7);

        return;
    }

    public static void runProcessorTest$default(java.util.List, java.util.List, java.util.Map, java.util.List, java.util.List, androidx.room.compiler.processing.XProcessingEnvConfig, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        kotlin.jvm.functions.Function1 r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Object r1;
        java.util.List r2, r3, r5, r6;
        java.util.Map r4;
        androidx.room.compiler.processing.XProcessingEnvConfig r7;

        r2 := @parameter0: java.util.List;

        r3 := @parameter1: java.util.List;

        r4 := @parameter2: java.util.Map;

        r5 := @parameter3: java.util.List;

        r6 := @parameter4: java.util.List;

        r7 := @parameter5: androidx.room.compiler.processing.XProcessingEnvConfig;

        r0 := @parameter6: kotlin.jvm.functions.Function1;

        i0 := @parameter7: int;

        r1 := @parameter8: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        r4 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

     label3:
        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        r5 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label4:
        $i5 = i0 & 16;

        if $i5 == 0 goto label5;

        r6 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label5:
        $i6 = i0 & 32;

        if $i6 == 0 goto label6;

        r7 = staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: androidx.room.compiler.processing.XProcessingEnvConfig defaultTestConfig(java.util.Map)>(r4);

     label6:
        staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: void runProcessorTest(java.util.List,java.util.List,java.util.Map,java.util.List,java.util.List,androidx.room.compiler.processing.XProcessingEnvConfig,kotlin.jvm.functions.Function1)>(r2, r3, r4, r5, r6, r7, r0);

        return;
    }

    public static final void runProcessorTest(java.util.List, java.util.List, java.util.Map, java.util.List, java.util.List, androidx.room.compiler.processing.XProcessingEnvConfig, kotlin.jvm.functions.Function0, kotlin.jvm.functions.Function1)
    {
        java.util.List r0, r1, r3, r4;
        java.util.Map r2;
        androidx.room.compiler.processing.XProcessingEnvConfig r5;
        kotlin.jvm.functions.Function0 r6;
        kotlin.jvm.functions.Function1 r7, $r9;
        androidx.room.compiler.processing.util.ProcessorTestExtKt$runProcessorTest$1 $r8;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.util.Map;

        r3 := @parameter3: java.util.List;

        r4 := @parameter4: java.util.List;

        r5 := @parameter5: androidx.room.compiler.processing.XProcessingEnvConfig;

        r6 := @parameter6: kotlin.jvm.functions.Function0;

        r7 := @parameter7: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "sources");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "classpath");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "options");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "javacArguments");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "kotlincArguments");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "config");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r6, "createProcessingStep");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r7, "onCompilationResult");

        $r8 = new androidx.room.compiler.processing.util.ProcessorTestExtKt$runProcessorTest$1;

        specialinvoke $r8.<androidx.room.compiler.processing.util.ProcessorTestExtKt$runProcessorTest$1: void <init>(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1)>(r6, r7);

        $r9 = (kotlin.jvm.functions.Function1) $r8;

        staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: void runProcessorTest(java.util.List,java.util.List,java.util.Map,java.util.List,java.util.List,androidx.room.compiler.processing.XProcessingEnvConfig,kotlin.jvm.functions.Function1)>(r0, r1, r2, r3, r4, r5, $r9);

        return;
    }

    public static void runProcessorTest$default(java.util.List, java.util.List, java.util.Map, java.util.List, java.util.List, androidx.room.compiler.processing.XProcessingEnvConfig, kotlin.jvm.functions.Function0, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        kotlin.jvm.functions.Function0 r0;
        kotlin.jvm.functions.Function1 r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Object r2;
        java.util.List r3, r4, r6, r7;
        java.util.Map r5;
        androidx.room.compiler.processing.XProcessingEnvConfig r8;

        r3 := @parameter0: java.util.List;

        r4 := @parameter1: java.util.List;

        r5 := @parameter2: java.util.Map;

        r6 := @parameter3: java.util.List;

        r7 := @parameter4: java.util.List;

        r8 := @parameter5: androidx.room.compiler.processing.XProcessingEnvConfig;

        r0 := @parameter6: kotlin.jvm.functions.Function0;

        r1 := @parameter7: kotlin.jvm.functions.Function1;

        i0 := @parameter8: int;

        r2 := @parameter9: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r4 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        r5 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

     label3:
        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        r6 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label4:
        $i5 = i0 & 16;

        if $i5 == 0 goto label5;

        r7 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label5:
        $i6 = i0 & 32;

        if $i6 == 0 goto label6;

        r8 = staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: androidx.room.compiler.processing.XProcessingEnvConfig defaultTestConfig(java.util.Map)>(r5);

     label6:
        staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: void runProcessorTest(java.util.List,java.util.List,java.util.Map,java.util.List,java.util.List,androidx.room.compiler.processing.XProcessingEnvConfig,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1)>(r3, r4, r5, r6, r7, r8, r0, r1);

        return;
    }

    public static final void runProcessorTest(java.util.List, java.util.List, java.util.Map, java.util.List, java.util.List, androidx.room.compiler.processing.XProcessingEnvConfig, java.util.List, java.util.List, kotlin.jvm.functions.Function1)
    {
        java.util.List r0, r1, r3, r4, r6, r7, $r24, r25;
        java.util.Map r2;
        androidx.room.compiler.processing.XProcessingEnvConfig r5;
        kotlin.jvm.functions.Function1 r8, $r19;
        androidx.room.compiler.processing.util.runner.CompilationTestRunner r9, $r17, $r23;
        java.lang.Object r10;
        androidx.room.compiler.processing.util.Source r11;
        boolean $z1, $z2, $z3, $z5, $z6;
        androidx.room.compiler.processing.util.runner.JavacCompilationTestRunner $r12;
        androidx.room.compiler.processing.util.ProcessorTestExtKt$runProcessorTest$handler$1 $r13;
        java.lang.Iterable $r14, $r21;
        androidx.room.compiler.processing.util.runner.TestCompilationParameters $r15;
        androidx.room.compiler.processing.util.runner.KspCompilationTestRunner $r16;
        androidx.room.compiler.processing.util.runner.KaptCompilationTestRunner $r18;
        java.util.Collection $r20;
        java.util.Iterator r22;
        androidx.room.compiler.processing.util.runner.CompilationTestRunner[] $r26;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.util.Map;

        r3 := @parameter3: java.util.List;

        r4 := @parameter4: java.util.List;

        r5 := @parameter5: androidx.room.compiler.processing.XProcessingEnvConfig;

        r6 := @parameter6: java.util.List;

        r7 := @parameter7: java.util.List;

        r8 := @parameter8: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "sources");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "classpath");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "options");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "javacArguments");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "kotlincArguments");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "config");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r6, "javacProcessors");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r7, "symbolProcessorProviders");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r8, "onCompilationResult");

        $r21 = (java.lang.Iterable) r0;

        $z1 = $r21 instanceof java.util.Collection;

        if $z1 == 0 goto label1;

        $r20 = (java.util.Collection) $r21;

        $z3 = interfaceinvoke $r20.<java.util.Collection: boolean isEmpty()>();

        if $z3 == 0 goto label1;

        $z5 = 0;

        goto label4;

     label1:
        r22 = interfaceinvoke $r21.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z6 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label3;

        r10 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();

        r11 = (androidx.room.compiler.processing.util.Source) r10;

        $z2 = r11 instanceof androidx.room.compiler.processing.util.Source$KotlinSource;

        if $z2 == 0 goto label2;

        $z5 = 1;

        goto label4;

     label3:
        $z5 = 0;

     label4:
        if $z5 == 0 goto label5;

        $r18 = new androidx.room.compiler.processing.util.runner.KaptCompilationTestRunner;

        specialinvoke $r18.<androidx.room.compiler.processing.util.runner.KaptCompilationTestRunner: void <init>(java.util.List)>(r6);

        $r23 = (androidx.room.compiler.processing.util.runner.CompilationTestRunner) $r18;

        goto label6;

     label5:
        $r12 = new androidx.room.compiler.processing.util.runner.JavacCompilationTestRunner;

        specialinvoke $r12.<androidx.room.compiler.processing.util.runner.JavacCompilationTestRunner: void <init>(java.util.List)>(r6);

        $r23 = (androidx.room.compiler.processing.util.runner.CompilationTestRunner) $r12;

     label6:
        r9 = $r23;

        $r13 = new androidx.room.compiler.processing.util.ProcessorTestExtKt$runProcessorTest$handler$1;

        specialinvoke $r13.<androidx.room.compiler.processing.util.ProcessorTestExtKt$runProcessorTest$handler$1: void <init>(kotlin.jvm.functions.Function1)>(r8);

        $r14 = (java.lang.Iterable) r1;

        $r24 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List distinct(java.lang.Iterable)>($r14);

        $r19 = (kotlin.jvm.functions.Function1) $r13;

        r25 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r19);

        $r15 = new androidx.room.compiler.processing.util.runner.TestCompilationParameters;

        specialinvoke $r15.<androidx.room.compiler.processing.util.runner.TestCompilationParameters: void <init>(java.util.List,java.util.List,java.util.Map,java.util.List,java.util.List,androidx.room.compiler.processing.XProcessingEnvConfig,java.util.List)>(r0, $r24, r2, r3, r4, r5, r25);

        $r26 = newarray (androidx.room.compiler.processing.util.runner.CompilationTestRunner)[2];

        $r26[0] = r9;

        $r16 = new androidx.room.compiler.processing.util.runner.KspCompilationTestRunner;

        specialinvoke $r16.<androidx.room.compiler.processing.util.runner.KspCompilationTestRunner: void <init>(java.util.List)>(r7);

        $r17 = (androidx.room.compiler.processing.util.runner.CompilationTestRunner) $r16;

        $r26[1] = $r17;

        staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: void runTests(androidx.room.compiler.processing.util.runner.TestCompilationParameters,androidx.room.compiler.processing.util.runner.CompilationTestRunner[])>($r15, $r26);

        return;
    }

    public static void runProcessorTest$default(java.util.List, java.util.List, java.util.Map, java.util.List, java.util.List, androidx.room.compiler.processing.XProcessingEnvConfig, java.util.List, java.util.List, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        java.util.List r0, r1, r4, r5, r7, r8;
        kotlin.jvm.functions.Function1 r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Object r3;
        java.util.Map r6;
        androidx.room.compiler.processing.XProcessingEnvConfig r9;

        r4 := @parameter0: java.util.List;

        r5 := @parameter1: java.util.List;

        r6 := @parameter2: java.util.Map;

        r7 := @parameter3: java.util.List;

        r8 := @parameter4: java.util.List;

        r9 := @parameter5: androidx.room.compiler.processing.XProcessingEnvConfig;

        r0 := @parameter6: java.util.List;

        r1 := @parameter7: java.util.List;

        r2 := @parameter8: kotlin.jvm.functions.Function1;

        i0 := @parameter9: int;

        r3 := @parameter10: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r4 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r5 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        r6 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

     label3:
        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        r7 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label4:
        $i5 = i0 & 16;

        if $i5 == 0 goto label5;

        r8 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label5:
        $i6 = i0 & 32;

        if $i6 == 0 goto label6;

        r9 = staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: androidx.room.compiler.processing.XProcessingEnvConfig defaultTestConfig(java.util.Map)>(r6);

     label6:
        staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: void runProcessorTest(java.util.List,java.util.List,java.util.Map,java.util.List,java.util.List,androidx.room.compiler.processing.XProcessingEnvConfig,java.util.List,java.util.List,kotlin.jvm.functions.Function1)>(r4, r5, r6, r7, r8, r9, r0, r1, r2);

        return;
    }

    public static final void runProcessorTest(java.util.List, java.util.List, java.util.Map, java.util.List, java.util.List, androidx.room.compiler.processing.XProcessingEnvConfig, java.util.List)
    {
        java.util.List r0, r1, r3, r4, r6, $r17;
        java.util.Map r2;
        androidx.room.compiler.processing.XProcessingEnvConfig r5;
        androidx.room.compiler.processing.util.runner.CompilationTestRunner r7, $r15, $r20;
        java.util.Iterator r8;
        java.lang.Object r9;
        androidx.room.compiler.processing.util.Source r10;
        boolean $z2, $z3, $z4, $z5, $z6;
        androidx.room.compiler.processing.util.runner.JavacCompilationTestRunner $r11;
        java.lang.Iterable $r12, $r19;
        androidx.room.compiler.processing.util.runner.TestCompilationParameters $r13;
        androidx.room.compiler.processing.util.runner.KspCompilationTestRunner $r14;
        androidx.room.compiler.processing.util.runner.KaptCompilationTestRunner $r16;
        java.util.Collection $r18;
        androidx.room.compiler.processing.util.runner.CompilationTestRunner[] $r21;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.util.Map;

        r3 := @parameter3: java.util.List;

        r4 := @parameter4: java.util.List;

        r5 := @parameter5: androidx.room.compiler.processing.XProcessingEnvConfig;

        r6 := @parameter6: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "sources");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "classpath");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "options");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "javacArguments");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "kotlincArguments");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "config");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r6, "handlers");

        $r19 = (java.lang.Iterable) r0;

        $z2 = $r19 instanceof java.util.Collection;

        if $z2 == 0 goto label1;

        $r18 = (java.util.Collection) $r19;

        $z4 = interfaceinvoke $r18.<java.util.Collection: boolean isEmpty()>();

        if $z4 == 0 goto label1;

        $z5 = 0;

        goto label4;

     label1:
        r8 = interfaceinvoke $r19.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z6 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label3;

        r9 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (androidx.room.compiler.processing.util.Source) r9;

        $z3 = r10 instanceof androidx.room.compiler.processing.util.Source$KotlinSource;

        if $z3 == 0 goto label2;

        $z5 = 1;

        goto label4;

     label3:
        $z5 = 0;

     label4:
        if $z5 == 0 goto label5;

        $r16 = new androidx.room.compiler.processing.util.runner.KaptCompilationTestRunner;

        specialinvoke $r16.<androidx.room.compiler.processing.util.runner.KaptCompilationTestRunner: void <init>(java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, 1, null);

        $r20 = (androidx.room.compiler.processing.util.runner.CompilationTestRunner) $r16;

        goto label6;

     label5:
        $r11 = new androidx.room.compiler.processing.util.runner.JavacCompilationTestRunner;

        specialinvoke $r11.<androidx.room.compiler.processing.util.runner.JavacCompilationTestRunner: void <init>(java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, 1, null);

        $r20 = (androidx.room.compiler.processing.util.runner.CompilationTestRunner) $r11;

     label6:
        r7 = $r20;

        $r12 = (java.lang.Iterable) r1;

        $r13 = new androidx.room.compiler.processing.util.runner.TestCompilationParameters;

        $r17 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List distinct(java.lang.Iterable)>($r12);

        specialinvoke $r13.<androidx.room.compiler.processing.util.runner.TestCompilationParameters: void <init>(java.util.List,java.util.List,java.util.Map,java.util.List,java.util.List,androidx.room.compiler.processing.XProcessingEnvConfig,java.util.List)>(r0, $r17, r2, r3, r4, r5, r6);

        $r21 = newarray (androidx.room.compiler.processing.util.runner.CompilationTestRunner)[2];

        $r21[0] = r7;

        $r14 = new androidx.room.compiler.processing.util.runner.KspCompilationTestRunner;

        specialinvoke $r14.<androidx.room.compiler.processing.util.runner.KspCompilationTestRunner: void <init>(java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, 1, null);

        $r15 = (androidx.room.compiler.processing.util.runner.CompilationTestRunner) $r14;

        $r21[1] = $r15;

        staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: void runTests(androidx.room.compiler.processing.util.runner.TestCompilationParameters,androidx.room.compiler.processing.util.runner.CompilationTestRunner[])>($r13, $r21);

        return;
    }

    public static void runProcessorTest$default(java.util.List, java.util.List, java.util.Map, java.util.List, java.util.List, androidx.room.compiler.processing.XProcessingEnvConfig, java.util.List, int, java.lang.Object)
    {
        java.util.List r0, r2, r3, r5, r6;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Object r1;
        java.util.Map r4;
        androidx.room.compiler.processing.XProcessingEnvConfig r7;

        r2 := @parameter0: java.util.List;

        r3 := @parameter1: java.util.List;

        r4 := @parameter2: java.util.Map;

        r5 := @parameter3: java.util.List;

        r6 := @parameter4: java.util.List;

        r7 := @parameter5: androidx.room.compiler.processing.XProcessingEnvConfig;

        r0 := @parameter6: java.util.List;

        i0 := @parameter7: int;

        r1 := @parameter8: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        r4 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

     label3:
        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        r5 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label4:
        $i5 = i0 & 16;

        if $i5 == 0 goto label5;

        r6 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label5:
        $i6 = i0 & 32;

        if $i6 == 0 goto label6;

        r7 = staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: androidx.room.compiler.processing.XProcessingEnvConfig defaultTestConfig(java.util.Map)>(r4);

     label6:
        staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: void runProcessorTest(java.util.List,java.util.List,java.util.Map,java.util.List,java.util.List,androidx.room.compiler.processing.XProcessingEnvConfig,java.util.List)>(r2, r3, r4, r5, r6, r7, r0);

        return;
    }

    public static final void runJavaProcessorTest(java.util.List, java.util.List, java.util.Map, androidx.room.compiler.processing.XProcessingEnvConfig, kotlin.jvm.functions.Function1)
    {
        java.util.List r0, r1, $r5;
        java.util.Map r2;
        androidx.room.compiler.processing.XProcessingEnvConfig r3;
        kotlin.jvm.functions.Function1 r4;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.util.Map;

        r3 := @parameter3: androidx.room.compiler.processing.XProcessingEnvConfig;

        r4 := @parameter4: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "sources");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "classpath");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "options");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "config");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "handler");

        $r5 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>(r4);

        staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: void runJavaProcessorTest(java.util.List,java.util.List,java.util.Map,androidx.room.compiler.processing.XProcessingEnvConfig,java.util.List)>(r0, r1, r2, r3, $r5);

        return;
    }

    public static void runJavaProcessorTest$default(java.util.List, java.util.List, java.util.Map, androidx.room.compiler.processing.XProcessingEnvConfig, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        java.util.List r0, r3;
        kotlin.jvm.functions.Function1 r1;
        int i0, $i1, $i2, $i3;
        java.lang.Object r2;
        java.util.Map r4;
        androidx.room.compiler.processing.XProcessingEnvConfig r5;

        r0 := @parameter0: java.util.List;

        r3 := @parameter1: java.util.List;

        r4 := @parameter2: java.util.Map;

        r5 := @parameter3: androidx.room.compiler.processing.XProcessingEnvConfig;

        r1 := @parameter4: kotlin.jvm.functions.Function1;

        i0 := @parameter5: int;

        r2 := @parameter6: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        r4 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

     label2:
        $i3 = i0 & 8;

        if $i3 == 0 goto label3;

        r5 = staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: androidx.room.compiler.processing.XProcessingEnvConfig defaultTestConfig(java.util.Map)>(r4);

     label3:
        staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: void runJavaProcessorTest(java.util.List,java.util.List,java.util.Map,androidx.room.compiler.processing.XProcessingEnvConfig,kotlin.jvm.functions.Function1)>(r0, r3, r4, r5, r1);

        return;
    }

    public static final void runJavaProcessorTest(java.util.List, java.util.List, java.util.Map, androidx.room.compiler.processing.XProcessingEnvConfig, java.util.List)
    {
        java.util.List r0, r1, r4;
        java.util.Map r2;
        androidx.room.compiler.processing.XProcessingEnvConfig r3;
        androidx.room.compiler.processing.util.runner.CompilationTestRunner[] r5;
        androidx.room.compiler.processing.util.runner.TestCompilationParameters $r6;
        androidx.room.compiler.processing.util.runner.JavacCompilationTestRunner $r7;
        androidx.room.compiler.processing.util.runner.CompilationTestRunner $r8;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.util.Map;

        r3 := @parameter3: androidx.room.compiler.processing.XProcessingEnvConfig;

        r4 := @parameter4: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "sources");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "classpath");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "options");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "config");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "handlers");

        $r6 = new androidx.room.compiler.processing.util.runner.TestCompilationParameters;

        specialinvoke $r6.<androidx.room.compiler.processing.util.runner.TestCompilationParameters: void <init>(java.util.List,java.util.List,java.util.Map,java.util.List,java.util.List,androidx.room.compiler.processing.XProcessingEnvConfig,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r0, r1, r2, null, null, r3, r4, 24, null);

        r5 = newarray (androidx.room.compiler.processing.util.runner.CompilationTestRunner)[1];

        $r7 = new androidx.room.compiler.processing.util.runner.JavacCompilationTestRunner;

        specialinvoke $r7.<androidx.room.compiler.processing.util.runner.JavacCompilationTestRunner: void <init>(java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, 1, null);

        $r8 = (androidx.room.compiler.processing.util.runner.CompilationTestRunner) $r7;

        r5[0] = $r8;

        staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: void runTests(androidx.room.compiler.processing.util.runner.TestCompilationParameters,androidx.room.compiler.processing.util.runner.CompilationTestRunner[])>($r6, r5);

        return;
    }

    public static void runJavaProcessorTest$default(java.util.List, java.util.List, java.util.Map, androidx.room.compiler.processing.XProcessingEnvConfig, java.util.List, int, java.lang.Object)
    {
        java.util.List r0, r1, r3;
        int i0, $i1, $i2, $i3;
        java.lang.Object r2;
        java.util.Map r4;
        androidx.room.compiler.processing.XProcessingEnvConfig r5;

        r0 := @parameter0: java.util.List;

        r3 := @parameter1: java.util.List;

        r4 := @parameter2: java.util.Map;

        r5 := @parameter3: androidx.room.compiler.processing.XProcessingEnvConfig;

        r1 := @parameter4: java.util.List;

        i0 := @parameter5: int;

        r2 := @parameter6: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        r4 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

     label2:
        $i3 = i0 & 8;

        if $i3 == 0 goto label3;

        r5 = staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: androidx.room.compiler.processing.XProcessingEnvConfig defaultTestConfig(java.util.Map)>(r4);

     label3:
        staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: void runJavaProcessorTest(java.util.List,java.util.List,java.util.Map,androidx.room.compiler.processing.XProcessingEnvConfig,java.util.List)>(r0, r3, r4, r5, r1);

        return;
    }

    public static final void runKaptTest(java.util.List, java.util.List, java.util.Map, java.util.List, java.util.List, androidx.room.compiler.processing.XProcessingEnvConfig, kotlin.jvm.functions.Function1)
    {
        java.util.List r0, r1, r3, r4, $r7;
        java.util.Map r2;
        androidx.room.compiler.processing.XProcessingEnvConfig r5;
        kotlin.jvm.functions.Function1 r6;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.util.Map;

        r3 := @parameter3: java.util.List;

        r4 := @parameter4: java.util.List;

        r5 := @parameter5: androidx.room.compiler.processing.XProcessingEnvConfig;

        r6 := @parameter6: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "sources");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "classpath");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "options");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "javacArguments");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "kotlincArguments");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "config");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r6, "handler");

        $r7 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>(r6);

        staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: void runKaptTest(java.util.List,java.util.List,java.util.Map,java.util.List,java.util.List,androidx.room.compiler.processing.XProcessingEnvConfig,java.util.List)>(r0, r1, r2, r3, r4, r5, $r7);

        return;
    }

    public static void runKaptTest$default(java.util.List, java.util.List, java.util.Map, java.util.List, java.util.List, androidx.room.compiler.processing.XProcessingEnvConfig, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        java.util.List r0, r3, r5, r6;
        kotlin.jvm.functions.Function1 r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object r2;
        java.util.Map r4;
        androidx.room.compiler.processing.XProcessingEnvConfig r7;

        r0 := @parameter0: java.util.List;

        r3 := @parameter1: java.util.List;

        r4 := @parameter2: java.util.Map;

        r5 := @parameter3: java.util.List;

        r6 := @parameter4: java.util.List;

        r7 := @parameter5: androidx.room.compiler.processing.XProcessingEnvConfig;

        r1 := @parameter6: kotlin.jvm.functions.Function1;

        i0 := @parameter7: int;

        r2 := @parameter8: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        r4 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

     label2:
        $i3 = i0 & 8;

        if $i3 == 0 goto label3;

        r5 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label3:
        $i4 = i0 & 16;

        if $i4 == 0 goto label4;

        r6 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label4:
        $i5 = i0 & 32;

        if $i5 == 0 goto label5;

        r7 = staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: androidx.room.compiler.processing.XProcessingEnvConfig defaultTestConfig(java.util.Map)>(r4);

     label5:
        staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: void runKaptTest(java.util.List,java.util.List,java.util.Map,java.util.List,java.util.List,androidx.room.compiler.processing.XProcessingEnvConfig,kotlin.jvm.functions.Function1)>(r0, r3, r4, r5, r6, r7, r1);

        return;
    }

    public static final void runKaptTest(java.util.List, java.util.List, java.util.Map, java.util.List, java.util.List, androidx.room.compiler.processing.XProcessingEnvConfig, java.util.List)
    {
        java.util.List r0, r1, r3, r4, r6;
        java.util.Map r2;
        androidx.room.compiler.processing.XProcessingEnvConfig r5;
        androidx.room.compiler.processing.util.runner.CompilationTestRunner[] r7;
        androidx.room.compiler.processing.util.runner.TestCompilationParameters $r8;
        androidx.room.compiler.processing.util.runner.KaptCompilationTestRunner $r9;
        androidx.room.compiler.processing.util.runner.CompilationTestRunner $r10;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.util.Map;

        r3 := @parameter3: java.util.List;

        r4 := @parameter4: java.util.List;

        r5 := @parameter5: androidx.room.compiler.processing.XProcessingEnvConfig;

        r6 := @parameter6: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "sources");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "classpath");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "options");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "javacArguments");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "kotlincArguments");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "config");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r6, "handlers");

        $r8 = new androidx.room.compiler.processing.util.runner.TestCompilationParameters;

        specialinvoke $r8.<androidx.room.compiler.processing.util.runner.TestCompilationParameters: void <init>(java.util.List,java.util.List,java.util.Map,java.util.List,java.util.List,androidx.room.compiler.processing.XProcessingEnvConfig,java.util.List)>(r0, r1, r2, r3, r4, r5, r6);

        r7 = newarray (androidx.room.compiler.processing.util.runner.CompilationTestRunner)[1];

        $r9 = new androidx.room.compiler.processing.util.runner.KaptCompilationTestRunner;

        specialinvoke $r9.<androidx.room.compiler.processing.util.runner.KaptCompilationTestRunner: void <init>(java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, 1, null);

        $r10 = (androidx.room.compiler.processing.util.runner.CompilationTestRunner) $r9;

        r7[0] = $r10;

        staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: void runTests(androidx.room.compiler.processing.util.runner.TestCompilationParameters,androidx.room.compiler.processing.util.runner.CompilationTestRunner[])>($r8, r7);

        return;
    }

    public static void runKaptTest$default(java.util.List, java.util.List, java.util.Map, java.util.List, java.util.List, androidx.room.compiler.processing.XProcessingEnvConfig, java.util.List, int, java.lang.Object)
    {
        java.util.List r0, r1, r3, r5, r6;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object r2;
        java.util.Map r4;
        androidx.room.compiler.processing.XProcessingEnvConfig r7;

        r0 := @parameter0: java.util.List;

        r3 := @parameter1: java.util.List;

        r4 := @parameter2: java.util.Map;

        r5 := @parameter3: java.util.List;

        r6 := @parameter4: java.util.List;

        r7 := @parameter5: androidx.room.compiler.processing.XProcessingEnvConfig;

        r1 := @parameter6: java.util.List;

        i0 := @parameter7: int;

        r2 := @parameter8: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        r4 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

     label2:
        $i3 = i0 & 8;

        if $i3 == 0 goto label3;

        r5 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label3:
        $i4 = i0 & 16;

        if $i4 == 0 goto label4;

        r6 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label4:
        $i5 = i0 & 32;

        if $i5 == 0 goto label5;

        r7 = staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: androidx.room.compiler.processing.XProcessingEnvConfig defaultTestConfig(java.util.Map)>(r4);

     label5:
        staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: void runKaptTest(java.util.List,java.util.List,java.util.Map,java.util.List,java.util.List,androidx.room.compiler.processing.XProcessingEnvConfig,java.util.List)>(r0, r3, r4, r5, r6, r7, r1);

        return;
    }

    public static final void runKspTest(java.util.List, java.util.List, java.util.Map, java.util.List, java.util.List, androidx.room.compiler.processing.XProcessingEnvConfig, kotlin.jvm.functions.Function1)
    {
        java.util.List r0, r1, r3, r4, $r7;
        java.util.Map r2;
        androidx.room.compiler.processing.XProcessingEnvConfig r5;
        kotlin.jvm.functions.Function1 r6;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.util.Map;

        r3 := @parameter3: java.util.List;

        r4 := @parameter4: java.util.List;

        r5 := @parameter5: androidx.room.compiler.processing.XProcessingEnvConfig;

        r6 := @parameter6: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "sources");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "classpath");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "options");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "javacArguments");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "kotlincArguments");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "config");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r6, "handler");

        $r7 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>(r6);

        staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: void runKspTest(java.util.List,java.util.List,java.util.Map,java.util.List,java.util.List,androidx.room.compiler.processing.XProcessingEnvConfig,java.util.List)>(r0, r1, r2, r3, r4, r5, $r7);

        return;
    }

    public static void runKspTest$default(java.util.List, java.util.List, java.util.Map, java.util.List, java.util.List, androidx.room.compiler.processing.XProcessingEnvConfig, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        java.util.List r0, r3, r5, r6;
        kotlin.jvm.functions.Function1 r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object r2;
        java.util.Map r4;
        androidx.room.compiler.processing.XProcessingEnvConfig r7;

        r0 := @parameter0: java.util.List;

        r3 := @parameter1: java.util.List;

        r4 := @parameter2: java.util.Map;

        r5 := @parameter3: java.util.List;

        r6 := @parameter4: java.util.List;

        r7 := @parameter5: androidx.room.compiler.processing.XProcessingEnvConfig;

        r1 := @parameter6: kotlin.jvm.functions.Function1;

        i0 := @parameter7: int;

        r2 := @parameter8: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        r4 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

     label2:
        $i3 = i0 & 8;

        if $i3 == 0 goto label3;

        r5 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label3:
        $i4 = i0 & 16;

        if $i4 == 0 goto label4;

        r6 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label4:
        $i5 = i0 & 32;

        if $i5 == 0 goto label5;

        r7 = staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: androidx.room.compiler.processing.XProcessingEnvConfig defaultTestConfig(java.util.Map)>(r4);

     label5:
        staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: void runKspTest(java.util.List,java.util.List,java.util.Map,java.util.List,java.util.List,androidx.room.compiler.processing.XProcessingEnvConfig,kotlin.jvm.functions.Function1)>(r0, r3, r4, r5, r6, r7, r1);

        return;
    }

    public static final void runKspTest(java.util.List, java.util.List, java.util.Map, java.util.List, java.util.List, androidx.room.compiler.processing.XProcessingEnvConfig, java.util.List)
    {
        java.util.List r0, r1, r3, r4, r6;
        java.util.Map r2;
        androidx.room.compiler.processing.XProcessingEnvConfig r5;
        androidx.room.compiler.processing.util.runner.CompilationTestRunner[] r7;
        androidx.room.compiler.processing.util.runner.TestCompilationParameters $r8;
        androidx.room.compiler.processing.util.runner.KspCompilationTestRunner $r9;
        androidx.room.compiler.processing.util.runner.CompilationTestRunner $r10;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.util.Map;

        r3 := @parameter3: java.util.List;

        r4 := @parameter4: java.util.List;

        r5 := @parameter5: androidx.room.compiler.processing.XProcessingEnvConfig;

        r6 := @parameter6: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "sources");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "classpath");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "options");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "javacArguments");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "kotlincArguments");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "config");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r6, "handlers");

        $r8 = new androidx.room.compiler.processing.util.runner.TestCompilationParameters;

        specialinvoke $r8.<androidx.room.compiler.processing.util.runner.TestCompilationParameters: void <init>(java.util.List,java.util.List,java.util.Map,java.util.List,java.util.List,androidx.room.compiler.processing.XProcessingEnvConfig,java.util.List)>(r0, r1, r2, r3, r4, r5, r6);

        r7 = newarray (androidx.room.compiler.processing.util.runner.CompilationTestRunner)[1];

        $r9 = new androidx.room.compiler.processing.util.runner.KspCompilationTestRunner;

        specialinvoke $r9.<androidx.room.compiler.processing.util.runner.KspCompilationTestRunner: void <init>(java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, 1, null);

        $r10 = (androidx.room.compiler.processing.util.runner.CompilationTestRunner) $r9;

        r7[0] = $r10;

        staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: void runTests(androidx.room.compiler.processing.util.runner.TestCompilationParameters,androidx.room.compiler.processing.util.runner.CompilationTestRunner[])>($r8, r7);

        return;
    }

    public static void runKspTest$default(java.util.List, java.util.List, java.util.Map, java.util.List, java.util.List, androidx.room.compiler.processing.XProcessingEnvConfig, java.util.List, int, java.lang.Object)
    {
        java.util.List r0, r1, r3, r5, r6;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object r2;
        java.util.Map r4;
        androidx.room.compiler.processing.XProcessingEnvConfig r7;

        r0 := @parameter0: java.util.List;

        r3 := @parameter1: java.util.List;

        r4 := @parameter2: java.util.Map;

        r5 := @parameter3: java.util.List;

        r6 := @parameter4: java.util.List;

        r7 := @parameter5: androidx.room.compiler.processing.XProcessingEnvConfig;

        r1 := @parameter6: java.util.List;

        i0 := @parameter7: int;

        r2 := @parameter8: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        r4 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

     label2:
        $i3 = i0 & 8;

        if $i3 == 0 goto label3;

        r5 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label3:
        $i4 = i0 & 16;

        if $i4 == 0 goto label4;

        r6 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label4:
        $i5 = i0 & 32;

        if $i5 == 0 goto label5;

        r7 = staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: androidx.room.compiler.processing.XProcessingEnvConfig defaultTestConfig(java.util.Map)>(r4);

     label5:
        staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: void runKspTest(java.util.List,java.util.List,java.util.Map,java.util.List,java.util.List,androidx.room.compiler.processing.XProcessingEnvConfig,java.util.List)>(r0, r3, r4, r5, r6, r7, r1);

        return;
    }

    public static final java.util.List compileFiles(java.util.List, java.util.Map, java.util.List, java.util.List, java.util.List, java.util.List, boolean)
    {
        java.util.List r0, r2, r3, r4, r5, r8, $r20;
        java.util.Map r1;
        boolean z0, $z2;
        java.io.File r6;
        androidx.room.compiler.processing.util.compiler.TestCompilationResult r7;
        java.util.Collection $r10;
        java.util.Set $r11;
        java.lang.Iterable $r12;
        java.lang.StringBuilder $r15, $r16, $r17, r22;
        java.lang.String $r18, $r19;
        androidx.room.compiler.processing.util.compiler.TestCompilationArguments r21;
        java.lang.AssertionError r23;
        java.lang.Throwable r24;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.Map;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: java.util.List;

        r4 := @parameter4: java.util.List;

        r5 := @parameter5: java.util.List;

        z0 := @parameter6: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "sources");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "options");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "annotationProcessors");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "symbolProcessorProviders");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "javacArguments");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "kotlincArguments");

        r6 = staticinvoke <com.google.common.io.Files: java.io.File createTempDir()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r6, "workingDir");

        r21 = new androidx.room.compiler.processing.util.compiler.TestCompilationArguments;

        specialinvoke r21.<androidx.room.compiler.processing.util.compiler.TestCompilationArguments: void <init>(java.util.List,java.util.List,boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.Map,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r0, null, 0, r4, r5, r2, r3, r1, 6, null);

        r7 = staticinvoke <androidx.room.compiler.processing.util.compiler.TestKotlinCompilerKt: androidx.room.compiler.processing.util.compiler.TestCompilationResult compile(java.io.File,androidx.room.compiler.processing.util.compiler.TestCompilationArguments)>(r6, r21);

        $z2 = virtualinvoke r7.<androidx.room.compiler.processing.util.compiler.TestCompilationResult: boolean getSuccess()>();

        if $z2 != 0 goto label1;

        r23 = new java.lang.AssertionError;

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n            Compilation failed:\n            ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n            ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = staticinvoke <kotlin.text.StringsKt: java.lang.String trimIndent(java.lang.String)>($r18);

        specialinvoke r23.<java.lang.AssertionError: void <init>(java.lang.Object)>($r19);

        r24 = (java.lang.Throwable) r23;

        throw r24;

     label1:
        r8 = virtualinvoke r7.<androidx.room.compiler.processing.util.compiler.TestCompilationResult: java.util.List getOutputClasspath()>();

        if z0 == 0 goto label2;

        $r10 = (java.util.Collection) r8;

        $r11 = staticinvoke <androidx.room.compiler.processing.util.TestUiltsKt: java.util.Set getSystemClasspathFiles()>();

        $r12 = (java.lang.Iterable) $r11;

        $r20 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Iterable)>($r10, $r12);

        goto label3;

     label2:
        $r20 = r8;

     label3:
        return $r20;
    }

    public static java.util.List compileFiles$default(java.util.List, java.util.Map, java.util.List, java.util.List, java.util.List, java.util.List, boolean, int, java.lang.Object)
    {
        java.util.List r0, $r2, r4, r5, r6, r7;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Object r1;
        java.util.Map r3;
        boolean z0;

        r0 := @parameter0: java.util.List;

        r3 := @parameter1: java.util.Map;

        r4 := @parameter2: java.util.List;

        r5 := @parameter3: java.util.List;

        r6 := @parameter4: java.util.List;

        r7 := @parameter5: java.util.List;

        z0 := @parameter6: boolean;

        i0 := @parameter7: int;

        r1 := @parameter8: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r3 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        r4 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label2:
        $i3 = i0 & 8;

        if $i3 == 0 goto label3;

        r5 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label3:
        $i4 = i0 & 16;

        if $i4 == 0 goto label4;

        r6 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label4:
        $i5 = i0 & 32;

        if $i5 == 0 goto label5;

        r7 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label5:
        $i6 = i0 & 64;

        if $i6 == 0 goto label6;

        z0 = 1;

     label6:
        $r2 = staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: java.util.List compileFiles(java.util.List,java.util.Map,java.util.List,java.util.List,java.util.List,java.util.List,boolean)>(r0, r3, r4, r5, r6, r7, z0);

        return $r2;
    }

    public static final java.io.File compileFilesIntoJar(java.io.File, java.util.List, java.util.Map, java.util.List, java.util.List, java.util.List)
    {
        java.io.File r0, r7;
        java.util.List r1, r3, r4, r5, r6;
        java.util.Map r2;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.util.Map;

        r3 := @parameter3: java.util.List;

        r4 := @parameter4: java.util.List;

        r5 := @parameter5: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "outputDirectory");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "sources");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "options");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "annotationProcessors");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "symbolProcessorProviders");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "javacArguments");

        r6 = staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: java.util.List compileFiles$default(java.util.List,java.util.Map,java.util.List,java.util.List,java.util.List,java.util.List,boolean,int,java.lang.Object)>(r1, r2, r3, r4, r5, null, 0, 32, null);

        r7 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>("compiled_", ".jar", r0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r7, "outputFile");

        staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: void createJar(java.util.List,java.io.File)>(r6, r7);

        return r7;
    }

    public static java.io.File compileFilesIntoJar$default(java.io.File, java.util.List, java.util.Map, java.util.List, java.util.List, java.util.List, int, java.lang.Object)
    {
        java.io.File r0, $r3;
        java.util.List r1, r5, r6, r7;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Object r2;
        java.util.Map r4;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.util.List;

        r4 := @parameter2: java.util.Map;

        r5 := @parameter3: java.util.List;

        r6 := @parameter4: java.util.List;

        r7 := @parameter5: java.util.List;

        i0 := @parameter6: int;

        r2 := @parameter7: java.lang.Object;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        r4 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

     label1:
        $i2 = i0 & 8;

        if $i2 == 0 goto label2;

        r5 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label2:
        $i3 = i0 & 16;

        if $i3 == 0 goto label3;

        r6 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label3:
        $i4 = i0 & 32;

        if $i4 == 0 goto label4;

        r7 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label4:
        $r3 = staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: java.io.File compileFilesIntoJar(java.io.File,java.util.List,java.util.Map,java.util.List,java.util.List,java.util.List)>(r0, r1, r4, r5, r6, r7);

        return $r3;
    }

    private static final void createJar(java.util.List, java.io.File)
    {
        java.util.List r0;
        java.io.File r1, r6;
        java.io.Closeable r2;
        java.lang.Iterable $r3;
        java.util.Iterator r4;
        java.lang.Object r5;
        java.util.jar.JarOutputStream $r7, r13;
        java.io.FileOutputStream $r8;
        java.io.OutputStream $r9;
        boolean $z0, $z1;
        java.lang.Throwable $r11, $r12, r16, r17, r18;
        java.lang.String $r14;
        kotlin.Unit r15;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.io.File;

        $r7 = new java.util.jar.JarOutputStream;

        $r8 = new java.io.FileOutputStream;

        specialinvoke $r8.<java.io.FileOutputStream: void <init>(java.io.File)>(r1);

        $r9 = (java.io.OutputStream) $r8;

        specialinvoke $r7.<java.util.jar.JarOutputStream: void <init>(java.io.OutputStream)>($r9);

        r2 = (java.io.Closeable) $r7;

     label01:
        r13 = (java.util.jar.JarOutputStream) r2;

        $r3 = (java.lang.Iterable) r0;

        r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.io.File) r5;

        $z1 = virtualinvoke r6.<java.io.File: boolean isFile()>();

        if $z1 == 0 goto label03;

        $r14 = virtualinvoke r6.<java.io.File: java.lang.String getParent()>();

        goto label04;

     label03:
        $r14 = virtualinvoke r6.<java.io.File: java.lang.String getAbsolutePath()>();

     label04:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r14, "if (input.isFile) input.\u2026t else input.absolutePath");

        staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: void addJarEntry(java.io.File,java.lang.String,java.util.jar.JarOutputStream)>(r6, $r14, r13);

        goto label02;

     label05:
        r15 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label06:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r2, null);

        goto label10;

     label07:
        $r11 := @caughtexception;

        r16 = $r11;

        r17 = r16;

        throw r16;

     label08:
        $r12 := @caughtexception;

        r18 = $r12;

     label09:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r2, r17);

        throw r18;

     label10:
        return;

        catch java.lang.Throwable from label01 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private static final void addJarEntry(java.io.File, java.lang.String, java.util.jar.JarOutputStream)
    {
        java.io.File r0, r3, r4;
        java.lang.String r1, $r6, $r7, $r12, $r15, $r16, r24, r28;
        java.util.jar.JarOutputStream r2;
        boolean $z1, $z2, $z3, $z4, $z5;
        java.util.jar.JarEntry $r5, $r14, r25, r29;
        int $i0, $i2, $i3, $i4, $i6, i7, $i8, $i9;
        long $l1, $l5;
        java.util.zip.ZipEntry $r8, $r18;
        java.io.FileInputStream $r9, r31;
        java.io.OutputStream $r10;
        java.io.InputStream $r11;
        java.lang.CharSequence $r13, $r17;
        java.lang.StringBuilder $r19, $r20, $r21;
        java.lang.Throwable $r22, $r23, r32, r34;
        java.io.File[] $r26, r27;
        java.io.Closeable r30;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.jar.JarOutputStream;

        $z1 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();

        if $z1 == 0 goto label09;

        $r12 = virtualinvoke r0.<java.io.File: java.lang.String getPath()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r12, "source.path");

        r24 = staticinvoke <kotlin.text.StringsKt: java.lang.String replace$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object)>($r12, "\\", "/", 0, 4, null);

        $r13 = (java.lang.CharSequence) r24;

        $i2 = interfaceinvoke $r13.<java.lang.CharSequence: int length()>();

        if $i2 <= 0 goto label01;

        $z4 = 1;

        goto label02;

     label01:
        $z4 = 0;

     label02:
        if $z4 == 0 goto label06;

        $z3 = staticinvoke <kotlin.text.StringsKt: boolean endsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)>(r24, "/", 0, 2, null);

        if $z3 != 0 goto label03;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

     label03:
        $r14 = new java.util.jar.JarEntry;

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        $i4 = $i3 + 1;

        $r15 = virtualinvoke r24.<java.lang.String: java.lang.String substring(int)>($i4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r15, "this as java.lang.String).substring(startIndex)");

        specialinvoke $r14.<java.util.jar.JarEntry: void <init>(java.lang.String)>($r15);

        r25 = $r14;

        $l5 = virtualinvoke r0.<java.io.File: long lastModified()>();

        virtualinvoke r25.<java.util.jar.JarEntry: void setTime(long)>($l5);

        $r16 = virtualinvoke r25.<java.util.jar.JarEntry: java.lang.String getName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r16, "entry.name");

        $r17 = (java.lang.CharSequence) $r16;

        $i6 = interfaceinvoke $r17.<java.lang.CharSequence: int length()>();

        if $i6 <= 0 goto label04;

        $z5 = 1;

        goto label05;

     label04:
        $z5 = 0;

     label05:
        if $z5 == 0 goto label06;

        $r18 = (java.util.zip.ZipEntry) r25;

        virtualinvoke r2.<java.util.jar.JarOutputStream: void putNextEntry(java.util.zip.ZipEntry)>($r18);

        virtualinvoke r2.<java.util.jar.JarOutputStream: void closeEntry()>();

     label06:
        $r26 = virtualinvoke r0.<java.io.File: java.io.File[] listFiles()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r26);

        r27 = $r26;

        i7 = 0;

        $i8 = lengthof r27;

     label07:
        if i7 >= $i8 goto label08;

        r3 = r27[i7];

        r4 = r3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r4, "nestedFile");

        staticinvoke <androidx.room.compiler.processing.util.ProcessorTestExtKt: void addJarEntry(java.io.File,java.lang.String,java.util.jar.JarOutputStream)>(r4, r1, r2);

        i7 = i7 + 1;

        goto label07;

     label08:
        goto label16;

     label09:
        $z2 = virtualinvoke r0.<java.io.File: boolean isFile()>();

        if $z2 == 0 goto label16;

        $r5 = new java.util.jar.JarEntry;

        $r6 = virtualinvoke r0.<java.io.File: java.lang.String getPath()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "source.path");

        r28 = staticinvoke <kotlin.text.StringsKt: java.lang.String replace$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object)>($r6, "\\", "/", 0, 4, null);

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i9 = $i0 + 1;

        $r7 = virtualinvoke r28.<java.lang.String: java.lang.String substring(int)>($i9);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r7, "this as java.lang.String).substring(startIndex)");

        specialinvoke $r5.<java.util.jar.JarEntry: void <init>(java.lang.String)>($r7);

        r29 = $r5;

        $l1 = virtualinvoke r0.<java.io.File: long lastModified()>();

        virtualinvoke r29.<java.util.jar.JarEntry: void setTime(long)>($l1);

        $r8 = (java.util.zip.ZipEntry) r29;

        virtualinvoke r2.<java.util.jar.JarOutputStream: void putNextEntry(java.util.zip.ZipEntry)>($r8);

        $r9 = new java.io.FileInputStream;

        specialinvoke $r9.<java.io.FileInputStream: void <init>(java.io.File)>(r0);

        r30 = (java.io.Closeable) $r9;

     label10:
        r31 = (java.io.FileInputStream) r30;

        $r11 = (java.io.InputStream) r31;

        $r10 = (java.io.OutputStream) r2;

        staticinvoke <kotlin.io.ByteStreamsKt: long copyTo$default(java.io.InputStream,java.io.OutputStream,int,int,java.lang.Object)>($r11, $r10, 0, 2, null);

     label11:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r30, null);

        goto label15;

     label12:
        $r23 := @caughtexception;

        r32 = $r23;

        throw r32;

     label13:
        $r22 := @caughtexception;

        r34 = $r22;

     label14:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r30, r32);

        throw r34;

     label15:
        virtualinvoke r2.<java.util.jar.JarOutputStream: void closeEntry()>();

     label16:
        return;

        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    private static final void withTempDir(kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 r0;
        java.io.File r1;
        java.lang.Throwable r2, $r4;

        r0 := @parameter0: kotlin.jvm.functions.Function1;

        r1 = staticinvoke <com.google.common.io.Files: java.io.File createTempDir()>();

     label1:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "tmpDir");

        interfaceinvoke r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

     label2:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        staticinvoke <kotlin.io.FilesKt: boolean deleteRecursively(java.io.File)>(r1);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "tmpDir");

        staticinvoke <kotlin.io.FilesKt: boolean deleteRecursively(java.io.File)>(r1);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

