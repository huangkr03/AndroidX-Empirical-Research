androidx.camera.camera2.internal.ZoomControl
<androidx.camera.camera2.internal.ZoomControl: java.lang.String TAG>
<androidx.camera.camera2.internal.ZoomControl: float DEFAULT_ZOOM_RATIO>
<androidx.camera.camera2.internal.ZoomControl: androidx.camera.camera2.internal.Camera2CameraControlImpl mCamera2CameraControlImpl>
<androidx.camera.camera2.internal.ZoomControl: java.util.concurrent.Executor mExecutor>
<androidx.camera.camera2.internal.ZoomControl: androidx.camera.camera2.internal.ZoomStateImpl mCurrentZoomState>
<androidx.camera.camera2.internal.ZoomControl: androidx.lifecycle.MutableLiveData mZoomStateLiveData>
<androidx.camera.camera2.internal.ZoomControl: androidx.camera.camera2.internal.ZoomControl$ZoomImpl mZoomImpl>
<androidx.camera.camera2.internal.ZoomControl: boolean mIsActive>
<androidx.camera.camera2.internal.ZoomControl: androidx.camera.camera2.internal.Camera2CameraControlImpl$CaptureResultListener mCaptureResultListener>
    void <init>(androidx.camera.camera2.internal.Camera2CameraControlImpl, androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat, java.util.concurrent.Executor)
    {
        androidx.camera.camera2.internal.ZoomControl r0;
        androidx.camera.camera2.internal.Camera2CameraControlImpl r1;
        androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat r2;
        java.util.concurrent.Executor r3;
        androidx.camera.camera2.internal.ZoomControl$1 $r4;
        androidx.camera.camera2.internal.ZoomControl$ZoomImpl $r5, $r7, $r8;
        androidx.camera.camera2.internal.ZoomStateImpl $r6, $r9, $r11;
        float $f0, $f1;
        androidx.lifecycle.MutableLiveData $r10;
        androidx.camera.core.ZoomState $r12;
        androidx.camera.camera2.internal.Camera2CameraControlImpl$CaptureResultListener $r13;

        r0 := @this: androidx.camera.camera2.internal.ZoomControl;

        r1 := @parameter0: androidx.camera.camera2.internal.Camera2CameraControlImpl;

        r2 := @parameter1: androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat;

        r3 := @parameter2: java.util.concurrent.Executor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.camera2.internal.ZoomControl: boolean mIsActive> = 0;

        $r4 = new androidx.camera.camera2.internal.ZoomControl$1;

        specialinvoke $r4.<androidx.camera.camera2.internal.ZoomControl$1: void <init>(androidx.camera.camera2.internal.ZoomControl)>(r0);

        r0.<androidx.camera.camera2.internal.ZoomControl: androidx.camera.camera2.internal.Camera2CameraControlImpl$CaptureResultListener mCaptureResultListener> = $r4;

        r0.<androidx.camera.camera2.internal.ZoomControl: androidx.camera.camera2.internal.Camera2CameraControlImpl mCamera2CameraControlImpl> = r1;

        r0.<androidx.camera.camera2.internal.ZoomControl: java.util.concurrent.Executor mExecutor> = r3;

        $r5 = staticinvoke <androidx.camera.camera2.internal.ZoomControl: androidx.camera.camera2.internal.ZoomControl$ZoomImpl createZoomImpl(androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat)>(r2);

        r0.<androidx.camera.camera2.internal.ZoomControl: androidx.camera.camera2.internal.ZoomControl$ZoomImpl mZoomImpl> = $r5;

        $r6 = new androidx.camera.camera2.internal.ZoomStateImpl;

        $r7 = r0.<androidx.camera.camera2.internal.ZoomControl: androidx.camera.camera2.internal.ZoomControl$ZoomImpl mZoomImpl>;

        $f0 = interfaceinvoke $r7.<androidx.camera.camera2.internal.ZoomControl$ZoomImpl: float getMaxZoom()>();

        $r8 = r0.<androidx.camera.camera2.internal.ZoomControl: androidx.camera.camera2.internal.ZoomControl$ZoomImpl mZoomImpl>;

        $f1 = interfaceinvoke $r8.<androidx.camera.camera2.internal.ZoomControl$ZoomImpl: float getMinZoom()>();

        specialinvoke $r6.<androidx.camera.camera2.internal.ZoomStateImpl: void <init>(float,float)>($f0, $f1);

        r0.<androidx.camera.camera2.internal.ZoomControl: androidx.camera.camera2.internal.ZoomStateImpl mCurrentZoomState> = $r6;

        $r9 = r0.<androidx.camera.camera2.internal.ZoomControl: androidx.camera.camera2.internal.ZoomStateImpl mCurrentZoomState>;

        virtualinvoke $r9.<androidx.camera.camera2.internal.ZoomStateImpl: void setZoomRatio(float)>(1.0F);

        $r10 = new androidx.lifecycle.MutableLiveData;

        $r11 = r0.<androidx.camera.camera2.internal.ZoomControl: androidx.camera.camera2.internal.ZoomStateImpl mCurrentZoomState>;

        $r12 = staticinvoke <androidx.camera.core.internal.ImmutableZoomState: androidx.camera.core.ZoomState create(androidx.camera.core.ZoomState)>($r11);

        specialinvoke $r10.<androidx.lifecycle.MutableLiveData: void <init>(java.lang.Object)>($r12);

        r0.<androidx.camera.camera2.internal.ZoomControl: androidx.lifecycle.MutableLiveData mZoomStateLiveData> = $r10;

        $r13 = r0.<androidx.camera.camera2.internal.ZoomControl: androidx.camera.camera2.internal.Camera2CameraControlImpl$CaptureResultListener mCaptureResultListener>;

        virtualinvoke r1.<androidx.camera.camera2.internal.Camera2CameraControlImpl: void addCaptureResultListener(androidx.camera.camera2.internal.Camera2CameraControlImpl$CaptureResultListener)>($r13);

        return;
    }

    static androidx.camera.core.ZoomState getDefaultZoomState(androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat)
    {
        androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat r0;
        androidx.camera.camera2.internal.ZoomControl$ZoomImpl r1;
        androidx.camera.camera2.internal.ZoomStateImpl r2, $r3;
        float $f0, $f1;
        androidx.camera.core.ZoomState $r4;

        r0 := @parameter0: androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat;

        r1 = staticinvoke <androidx.camera.camera2.internal.ZoomControl: androidx.camera.camera2.internal.ZoomControl$ZoomImpl createZoomImpl(androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat)>(r0);

        $r3 = new androidx.camera.camera2.internal.ZoomStateImpl;

        $f0 = interfaceinvoke r1.<androidx.camera.camera2.internal.ZoomControl$ZoomImpl: float getMaxZoom()>();

        $f1 = interfaceinvoke r1.<androidx.camera.camera2.internal.ZoomControl$ZoomImpl: float getMinZoom()>();

        specialinvoke $r3.<androidx.camera.camera2.internal.ZoomStateImpl: void <init>(float,float)>($f0, $f1);

        r2 = $r3;

        virtualinvoke r2.<androidx.camera.camera2.internal.ZoomStateImpl: void setZoomRatio(float)>(1.0F);

        $r4 = staticinvoke <androidx.camera.core.internal.ImmutableZoomState: androidx.camera.core.ZoomState create(androidx.camera.core.ZoomState)>(r2);

        return $r4;
    }

    private static androidx.camera.camera2.internal.ZoomControl$ZoomImpl createZoomImpl(androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat)
    {
        androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat r0;
        boolean $z0;
        androidx.camera.camera2.internal.CropRegionZoomImpl $r1;
        androidx.camera.camera2.internal.AndroidRZoomImpl $r2;

        r0 := @parameter0: androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat;

        $z0 = staticinvoke <androidx.camera.camera2.internal.ZoomControl: boolean isAndroidRZoomSupported(androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat)>(r0);

        if $z0 == 0 goto label1;

        $r2 = new androidx.camera.camera2.internal.AndroidRZoomImpl;

        specialinvoke $r2.<androidx.camera.camera2.internal.AndroidRZoomImpl: void <init>(androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat)>(r0);

        return $r2;

     label1:
        $r1 = new androidx.camera.camera2.internal.CropRegionZoomImpl;

        specialinvoke $r1.<androidx.camera.camera2.internal.CropRegionZoomImpl: void <init>(androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat)>(r0);

        return $r1;
    }

    static boolean isAndroidRZoomSupported(androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat)
    {
        androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat r0;
        int $i0;
        android.util.Range $r1;
        boolean $z0;

        r0 := @parameter0: androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 30 goto label1;

        $r1 = staticinvoke <androidx.camera.camera2.internal.ZoomControl: android.util.Range getZoomRatioRange(androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat)>(r0);

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static android.util.Range getZoomRatioRange(androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat)
    {
        androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat r0;
        java.lang.Throwable r1, $r5;
        android.hardware.camera2.CameraCharacteristics$Key $r2;
        java.lang.Object $r3;
        android.util.Range $r4;

        r0 := @parameter0: androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat;

     label1:
        $r2 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_ZOOM_RATIO_RANGE>;

        $r3 = virtualinvoke r0.<androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r2);

        $r4 = (android.util.Range) $r3;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

        staticinvoke <androidx.camera.core.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("ZoomControl", "AssertionError, fail to get camera characteristic.", r1);

        return null;

        catch java.lang.AssertionError from label1 to label2 with label3;
    }

    void addZoomOption(androidx.camera.camera2.impl.Camera2ImplConfig$Builder)
    {
        androidx.camera.camera2.internal.ZoomControl r0;
        androidx.camera.camera2.impl.Camera2ImplConfig$Builder r1;
        androidx.camera.camera2.internal.ZoomControl$ZoomImpl $r2;

        r0 := @this: androidx.camera.camera2.internal.ZoomControl;

        r1 := @parameter0: androidx.camera.camera2.impl.Camera2ImplConfig$Builder;

        $r2 = r0.<androidx.camera.camera2.internal.ZoomControl: androidx.camera.camera2.internal.ZoomControl$ZoomImpl mZoomImpl>;

        interfaceinvoke $r2.<androidx.camera.camera2.internal.ZoomControl$ZoomImpl: void addRequestOption(androidx.camera.camera2.impl.Camera2ImplConfig$Builder)>(r1);

        return;
    }

    android.graphics.Rect getCropSensorRegion()
    {
        androidx.camera.camera2.internal.ZoomControl r0;
        androidx.camera.camera2.internal.ZoomControl$ZoomImpl $r1;
        android.graphics.Rect $r2;

        r0 := @this: androidx.camera.camera2.internal.ZoomControl;

        $r1 = r0.<androidx.camera.camera2.internal.ZoomControl: androidx.camera.camera2.internal.ZoomControl$ZoomImpl mZoomImpl>;

        $r2 = interfaceinvoke $r1.<androidx.camera.camera2.internal.ZoomControl$ZoomImpl: android.graphics.Rect getCropSensorRegion()>();

        return $r2;
    }

    void setActive(boolean)
    {
        androidx.camera.camera2.internal.ZoomControl r0;
        boolean z0, $z1, $z2;
        androidx.camera.core.ZoomState r1;
        androidx.camera.camera2.internal.ZoomStateImpl r2, $r4, $r5, $r6;
        java.lang.Throwable r3, $r9;
        androidx.camera.camera2.internal.ZoomControl$ZoomImpl $r7;
        androidx.camera.camera2.internal.Camera2CameraControlImpl $r8;

        r0 := @this: androidx.camera.camera2.internal.ZoomControl;

        z0 := @parameter0: boolean;

        $z1 = r0.<androidx.camera.camera2.internal.ZoomControl: boolean mIsActive>;

        if $z1 != z0 goto label1;

        return;

     label1:
        r0.<androidx.camera.camera2.internal.ZoomControl: boolean mIsActive> = z0;

        $z2 = r0.<androidx.camera.camera2.internal.ZoomControl: boolean mIsActive>;

        if $z2 != 0 goto label7;

        $r4 = r0.<androidx.camera.camera2.internal.ZoomControl: androidx.camera.camera2.internal.ZoomStateImpl mCurrentZoomState>;

        r2 = $r4;

        entermonitor $r4;

     label2:
        $r5 = r0.<androidx.camera.camera2.internal.ZoomControl: androidx.camera.camera2.internal.ZoomStateImpl mCurrentZoomState>;

        virtualinvoke $r5.<androidx.camera.camera2.internal.ZoomStateImpl: void setZoomRatio(float)>(1.0F);

        $r6 = r0.<androidx.camera.camera2.internal.ZoomControl: androidx.camera.camera2.internal.ZoomStateImpl mCurrentZoomState>;

        r1 = staticinvoke <androidx.camera.core.internal.ImmutableZoomState: androidx.camera.core.ZoomState create(androidx.camera.core.ZoomState)>($r6);

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        specialinvoke r0.<androidx.camera.camera2.internal.ZoomControl: void updateLiveData(androidx.camera.core.ZoomState)>(r1);

        $r7 = r0.<androidx.camera.camera2.internal.ZoomControl: androidx.camera.camera2.internal.ZoomControl$ZoomImpl mZoomImpl>;

        interfaceinvoke $r7.<androidx.camera.camera2.internal.ZoomControl$ZoomImpl: void resetZoom()>();

        $r8 = r0.<androidx.camera.camera2.internal.ZoomControl: androidx.camera.camera2.internal.Camera2CameraControlImpl mCamera2CameraControlImpl>;

        virtualinvoke $r8.<androidx.camera.camera2.internal.Camera2CameraControlImpl: long updateSessionConfigSynchronous()>();

     label7:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    com.google.common.util.concurrent.ListenableFuture setZoomRatio(float)
    {
        androidx.camera.camera2.internal.ZoomControl r0;
        float f0;
        androidx.camera.core.ZoomState r1;
        androidx.camera.camera2.internal.ZoomStateImpl r2, $r5, $r6, $r7;
        java.lang.Throwable r3, r4, $r10, $r12;
        androidx.concurrent.futures.CallbackToFutureAdapter$Resolver $r8;
        com.google.common.util.concurrent.ListenableFuture $r9, $r11;

        r0 := @this: androidx.camera.camera2.internal.ZoomControl;

        f0 := @parameter0: float;

        $r5 = r0.<androidx.camera.camera2.internal.ZoomControl: androidx.camera.camera2.internal.ZoomStateImpl mCurrentZoomState>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<androidx.camera.camera2.internal.ZoomControl: androidx.camera.camera2.internal.ZoomStateImpl mCurrentZoomState>;

        virtualinvoke $r6.<androidx.camera.camera2.internal.ZoomStateImpl: void setZoomRatio(float)>(f0);

        $r7 = r0.<androidx.camera.camera2.internal.ZoomControl: androidx.camera.camera2.internal.ZoomStateImpl mCurrentZoomState>;

        r1 = staticinvoke <androidx.camera.core.internal.ImmutableZoomState: androidx.camera.core.ZoomState create(androidx.camera.core.ZoomState)>($r7);

     label2:
        goto label5;

     label3:
        $r10 := @caughtexception;

        r3 = $r10;

        $r11 = staticinvoke <androidx.camera.core.impl.utils.futures.Futures: com.google.common.util.concurrent.ListenableFuture immediateFailedFuture(java.lang.Throwable)>(r3);

        exitmonitor r2;

     label4:
        return $r11;

     label5:
        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r12 := @caughtexception;

        r4 = $r12;

        exitmonitor r2;

     label8:
        throw r4;

     label9:
        specialinvoke r0.<androidx.camera.camera2.internal.ZoomControl: void updateLiveData(androidx.camera.core.ZoomState)>(r1);

        $r8 = dynamicinvoke "attachCompleter" <androidx.concurrent.futures.CallbackToFutureAdapter$Resolver (androidx.camera.camera2.internal.ZoomControl,androidx.camera.core.ZoomState)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.concurrent.futures.CallbackToFutureAdapter$Completer), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.camera2.internal.ZoomControl: java.lang.Object lambda$setZoomRatio$1(androidx.camera.core.ZoomState,androidx.concurrent.futures.CallbackToFutureAdapter$Completer)>, methodtype: java.lang.Object __METHODTYPE__(androidx.concurrent.futures.CallbackToFutureAdapter$Completer));

        $r9 = staticinvoke <androidx.concurrent.futures.CallbackToFutureAdapter: com.google.common.util.concurrent.ListenableFuture getFuture(androidx.concurrent.futures.CallbackToFutureAdapter$Resolver)>($r8);

        return $r9;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private void submitCameraZoomRatio(androidx.concurrent.futures.CallbackToFutureAdapter$Completer, androidx.camera.core.ZoomState)
    {
        androidx.camera.camera2.internal.ZoomControl r0;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r1;
        androidx.camera.camera2.internal.ZoomStateImpl r2, $r6, $r7, $r8;
        java.lang.Throwable r3, $r10;
        boolean $z0;
        androidx.camera.camera2.internal.ZoomControl$ZoomImpl $r4;
        float $f0;
        androidx.camera.camera2.internal.Camera2CameraControlImpl $r5;
        androidx.camera.core.CameraControl$OperationCanceledException $r9;
        androidx.camera.core.ZoomState r11, r12;

        r0 := @this: androidx.camera.camera2.internal.ZoomControl;

        r1 := @parameter0: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        r11 := @parameter1: androidx.camera.core.ZoomState;

        $z0 = r0.<androidx.camera.camera2.internal.ZoomControl: boolean mIsActive>;

        if $z0 != 0 goto label6;

        $r6 = r0.<androidx.camera.camera2.internal.ZoomControl: androidx.camera.camera2.internal.ZoomStateImpl mCurrentZoomState>;

        r2 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<androidx.camera.camera2.internal.ZoomControl: androidx.camera.camera2.internal.ZoomStateImpl mCurrentZoomState>;

        virtualinvoke $r7.<androidx.camera.camera2.internal.ZoomStateImpl: void setZoomRatio(float)>(1.0F);

        $r8 = r0.<androidx.camera.camera2.internal.ZoomControl: androidx.camera.camera2.internal.ZoomStateImpl mCurrentZoomState>;

        r12 = staticinvoke <androidx.camera.core.internal.ImmutableZoomState: androidx.camera.core.ZoomState create(androidx.camera.core.ZoomState)>($r8);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r10 := @caughtexception;

        r3 = $r10;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        specialinvoke r0.<androidx.camera.camera2.internal.ZoomControl: void updateLiveData(androidx.camera.core.ZoomState)>(r12);

        $r9 = new androidx.camera.core.CameraControl$OperationCanceledException;

        specialinvoke $r9.<androidx.camera.core.CameraControl$OperationCanceledException: void <init>(java.lang.String)>("Camera is not active.");

        virtualinvoke r1.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean setException(java.lang.Throwable)>($r9);

        return;

     label6:
        specialinvoke r0.<androidx.camera.camera2.internal.ZoomControl: void updateLiveData(androidx.camera.core.ZoomState)>(r11);

        $r4 = r0.<androidx.camera.camera2.internal.ZoomControl: androidx.camera.camera2.internal.ZoomControl$ZoomImpl mZoomImpl>;

        $f0 = interfaceinvoke r11.<androidx.camera.core.ZoomState: float getZoomRatio()>();

        interfaceinvoke $r4.<androidx.camera.camera2.internal.ZoomControl$ZoomImpl: void setZoomRatio(float,androidx.concurrent.futures.CallbackToFutureAdapter$Completer)>($f0, r1);

        $r5 = r0.<androidx.camera.camera2.internal.ZoomControl: androidx.camera.camera2.internal.Camera2CameraControlImpl mCamera2CameraControlImpl>;

        virtualinvoke $r5.<androidx.camera.camera2.internal.Camera2CameraControlImpl: long updateSessionConfigSynchronous()>();

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    com.google.common.util.concurrent.ListenableFuture setLinearZoom(float)
    {
        androidx.camera.camera2.internal.ZoomControl r0;
        float f0;
        androidx.camera.core.ZoomState r1;
        androidx.camera.camera2.internal.ZoomStateImpl r2, $r5, $r6, $r7;
        java.lang.Throwable r3, r4, $r10, $r12;
        androidx.concurrent.futures.CallbackToFutureAdapter$Resolver $r8;
        com.google.common.util.concurrent.ListenableFuture $r9, $r11;

        r0 := @this: androidx.camera.camera2.internal.ZoomControl;

        f0 := @parameter0: float;

        $r5 = r0.<androidx.camera.camera2.internal.ZoomControl: androidx.camera.camera2.internal.ZoomStateImpl mCurrentZoomState>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<androidx.camera.camera2.internal.ZoomControl: androidx.camera.camera2.internal.ZoomStateImpl mCurrentZoomState>;

        virtualinvoke $r6.<androidx.camera.camera2.internal.ZoomStateImpl: void setLinearZoom(float)>(f0);

        $r7 = r0.<androidx.camera.camera2.internal.ZoomControl: androidx.camera.camera2.internal.ZoomStateImpl mCurrentZoomState>;

        r1 = staticinvoke <androidx.camera.core.internal.ImmutableZoomState: androidx.camera.core.ZoomState create(androidx.camera.core.ZoomState)>($r7);

     label2:
        goto label5;

     label3:
        $r10 := @caughtexception;

        r3 = $r10;

        $r11 = staticinvoke <androidx.camera.core.impl.utils.futures.Futures: com.google.common.util.concurrent.ListenableFuture immediateFailedFuture(java.lang.Throwable)>(r3);

        exitmonitor r2;

     label4:
        return $r11;

     label5:
        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r12 := @caughtexception;

        r4 = $r12;

        exitmonitor r2;

     label8:
        throw r4;

     label9:
        specialinvoke r0.<androidx.camera.camera2.internal.ZoomControl: void updateLiveData(androidx.camera.core.ZoomState)>(r1);

        $r8 = dynamicinvoke "attachCompleter" <androidx.concurrent.futures.CallbackToFutureAdapter$Resolver (androidx.camera.camera2.internal.ZoomControl,androidx.camera.core.ZoomState)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.concurrent.futures.CallbackToFutureAdapter$Completer), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.camera2.internal.ZoomControl: java.lang.Object lambda$setLinearZoom$3(androidx.camera.core.ZoomState,androidx.concurrent.futures.CallbackToFutureAdapter$Completer)>, methodtype: java.lang.Object __METHODTYPE__(androidx.concurrent.futures.CallbackToFutureAdapter$Completer));

        $r9 = staticinvoke <androidx.concurrent.futures.CallbackToFutureAdapter: com.google.common.util.concurrent.ListenableFuture getFuture(androidx.concurrent.futures.CallbackToFutureAdapter$Resolver)>($r8);

        return $r9;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private void updateLiveData(androidx.camera.core.ZoomState)
    {
        androidx.camera.camera2.internal.ZoomControl r0;
        androidx.camera.core.ZoomState r1;
        android.os.Looper $r2, $r3;
        androidx.lifecycle.MutableLiveData $r4, $r5;

        r0 := @this: androidx.camera.camera2.internal.ZoomControl;

        r1 := @parameter0: androidx.camera.core.ZoomState;

        $r2 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r3 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        if $r2 != $r3 goto label1;

        $r5 = r0.<androidx.camera.camera2.internal.ZoomControl: androidx.lifecycle.MutableLiveData mZoomStateLiveData>;

        virtualinvoke $r5.<androidx.lifecycle.MutableLiveData: void setValue(java.lang.Object)>(r1);

        goto label2;

     label1:
        $r4 = r0.<androidx.camera.camera2.internal.ZoomControl: androidx.lifecycle.MutableLiveData mZoomStateLiveData>;

        virtualinvoke $r4.<androidx.lifecycle.MutableLiveData: void postValue(java.lang.Object)>(r1);

     label2:
        return;
    }

    androidx.lifecycle.LiveData getZoomState()
    {
        androidx.camera.camera2.internal.ZoomControl r0;
        androidx.lifecycle.MutableLiveData $r1;

        r0 := @this: androidx.camera.camera2.internal.ZoomControl;

        $r1 = r0.<androidx.camera.camera2.internal.ZoomControl: androidx.lifecycle.MutableLiveData mZoomStateLiveData>;

        return $r1;
    }

    private java.lang.Object lambda$setLinearZoom$3(androidx.camera.core.ZoomState, androidx.concurrent.futures.CallbackToFutureAdapter$Completer) throws java.lang.Exception
    {
        androidx.camera.camera2.internal.ZoomControl r0;
        androidx.camera.core.ZoomState r1;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r2;
        java.util.concurrent.Executor $r3;
        java.lang.Runnable $r4;

        r0 := @this: androidx.camera.camera2.internal.ZoomControl;

        r1 := @parameter0: androidx.camera.core.ZoomState;

        r2 := @parameter1: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        $r3 = r0.<androidx.camera.camera2.internal.ZoomControl: java.util.concurrent.Executor mExecutor>;

        $r4 = dynamicinvoke "run" <java.lang.Runnable (androidx.camera.camera2.internal.ZoomControl,androidx.concurrent.futures.CallbackToFutureAdapter$Completer,androidx.camera.core.ZoomState)>(r0, r2, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.camera2.internal.ZoomControl: void lambda$setLinearZoom$2(androidx.concurrent.futures.CallbackToFutureAdapter$Completer,androidx.camera.core.ZoomState)>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

        return "setLinearZoom";
    }

    private void lambda$setLinearZoom$2(androidx.concurrent.futures.CallbackToFutureAdapter$Completer, androidx.camera.core.ZoomState)
    {
        androidx.camera.camera2.internal.ZoomControl r0;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r1;
        androidx.camera.core.ZoomState r2;

        r0 := @this: androidx.camera.camera2.internal.ZoomControl;

        r1 := @parameter0: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        r2 := @parameter1: androidx.camera.core.ZoomState;

        specialinvoke r0.<androidx.camera.camera2.internal.ZoomControl: void submitCameraZoomRatio(androidx.concurrent.futures.CallbackToFutureAdapter$Completer,androidx.camera.core.ZoomState)>(r1, r2);

        return;
    }

    private java.lang.Object lambda$setZoomRatio$1(androidx.camera.core.ZoomState, androidx.concurrent.futures.CallbackToFutureAdapter$Completer) throws java.lang.Exception
    {
        androidx.camera.camera2.internal.ZoomControl r0;
        androidx.camera.core.ZoomState r1;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r2;
        java.util.concurrent.Executor $r3;
        java.lang.Runnable $r4;

        r0 := @this: androidx.camera.camera2.internal.ZoomControl;

        r1 := @parameter0: androidx.camera.core.ZoomState;

        r2 := @parameter1: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        $r3 = r0.<androidx.camera.camera2.internal.ZoomControl: java.util.concurrent.Executor mExecutor>;

        $r4 = dynamicinvoke "run" <java.lang.Runnable (androidx.camera.camera2.internal.ZoomControl,androidx.concurrent.futures.CallbackToFutureAdapter$Completer,androidx.camera.core.ZoomState)>(r0, r2, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.camera2.internal.ZoomControl: void lambda$setZoomRatio$0(androidx.concurrent.futures.CallbackToFutureAdapter$Completer,androidx.camera.core.ZoomState)>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

        return "setZoomRatio";
    }

    private void lambda$setZoomRatio$0(androidx.concurrent.futures.CallbackToFutureAdapter$Completer, androidx.camera.core.ZoomState)
    {
        androidx.camera.camera2.internal.ZoomControl r0;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r1;
        androidx.camera.core.ZoomState r2;

        r0 := @this: androidx.camera.camera2.internal.ZoomControl;

        r1 := @parameter0: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        r2 := @parameter1: androidx.camera.core.ZoomState;

        specialinvoke r0.<androidx.camera.camera2.internal.ZoomControl: void submitCameraZoomRatio(androidx.concurrent.futures.CallbackToFutureAdapter$Completer,androidx.camera.core.ZoomState)>(r1, r2);

        return;
    }

androidx.camera.camera2.internal.ZoomControl$1
<androidx.camera.camera2.internal.ZoomControl$1: androidx.camera.camera2.internal.ZoomControl this$0>
    void <init>(androidx.camera.camera2.internal.ZoomControl)
    {
        androidx.camera.camera2.internal.ZoomControl$1 r0;
        androidx.camera.camera2.internal.ZoomControl r1;

        r0 := @this: androidx.camera.camera2.internal.ZoomControl$1;

        r1 := @parameter0: androidx.camera.camera2.internal.ZoomControl;

        r0.<androidx.camera.camera2.internal.ZoomControl$1: androidx.camera.camera2.internal.ZoomControl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean onCaptureResult(android.hardware.camera2.TotalCaptureResult)
    {
        androidx.camera.camera2.internal.ZoomControl$1 r0;
        android.hardware.camera2.TotalCaptureResult r1;
        androidx.camera.camera2.internal.ZoomControl $r2;
        androidx.camera.camera2.internal.ZoomControl$ZoomImpl $r3;

        r0 := @this: androidx.camera.camera2.internal.ZoomControl$1;

        r1 := @parameter0: android.hardware.camera2.TotalCaptureResult;

        $r2 = r0.<androidx.camera.camera2.internal.ZoomControl$1: androidx.camera.camera2.internal.ZoomControl this$0>;

        $r3 = $r2.<androidx.camera.camera2.internal.ZoomControl: androidx.camera.camera2.internal.ZoomControl$ZoomImpl mZoomImpl>;

        interfaceinvoke $r3.<androidx.camera.camera2.internal.ZoomControl$ZoomImpl: void onCaptureResult(android.hardware.camera2.TotalCaptureResult)>(r1);

        return 0;
    }

androidx.camera.camera2.internal.ZoomControl$ZoomImpl
<androidx.camera.camera2.internal.ZoomControl$ZoomImpl: float getMinZoom()>
<androidx.camera.camera2.internal.ZoomControl$ZoomImpl: float getMaxZoom()>
<androidx.camera.camera2.internal.ZoomControl$ZoomImpl: void addRequestOption(androidx.camera.camera2.impl.Camera2ImplConfig$Builder)>
<androidx.camera.camera2.internal.ZoomControl$ZoomImpl: void resetZoom()>
<androidx.camera.camera2.internal.ZoomControl$ZoomImpl: void setZoomRatio(float,androidx.concurrent.futures.CallbackToFutureAdapter$Completer)>
<androidx.camera.camera2.internal.ZoomControl$ZoomImpl: void onCaptureResult(android.hardware.camera2.TotalCaptureResult)>
<androidx.camera.camera2.internal.ZoomControl$ZoomImpl: android.graphics.Rect getCropSensorRegion()>
