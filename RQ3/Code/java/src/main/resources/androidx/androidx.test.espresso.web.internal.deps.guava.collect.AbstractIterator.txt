androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator
<androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State state>
<androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator: java.lang.Object next>
<androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator: java.lang.Object computeNext()>
    protected final java.lang.Object endOfData()
    {
        androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator r0;
        androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State $r1;

        r0 := @this: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator;

        $r1 = <androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State DONE>;

        r0.<androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State state> = $r1;

        return null;
    }

    public final java.lang.Object next()
    {
        boolean $z0;
        androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State $r0;
        androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator r1;
        java.util.NoSuchElementException r2;
        java.lang.Object r3, r4;

        r1 := @this: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator;

        $z0 = virtualinvoke r1.<androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        r2 = new java.util.NoSuchElementException;

        specialinvoke r2.<java.util.NoSuchElementException: void <init>()>();

        throw r2;

     label1:
        $r0 = <androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State NOT_READY>;

        r1.<androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State state> = $r0;

        r3 = r1.<androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator: java.lang.Object next>;

        r4 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.collect.NullnessCasts: java.lang.Object uncheckedCastNullableTToT(java.lang.Object)>(r3);

        r1.<androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator: java.lang.Object next> = null;

        return r4;
    }

    public final java.lang.Object peek()
    {
        boolean $z0;
        java.lang.Object $r0, $r1;
        androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator r2;
        java.util.NoSuchElementException r3;

        r2 := @this: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator;

        $z0 = virtualinvoke r2.<androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        r3 = new java.util.NoSuchElementException;

        specialinvoke r3.<java.util.NoSuchElementException: void <init>()>();

        throw r3;

     label1:
        $r0 = r2.<androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator: java.lang.Object next>;

        $r1 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.collect.NullnessCasts: java.lang.Object uncheckedCastNullableTToT(java.lang.Object)>($r0);

        return $r1;
    }

    protected void <init>()
    {
        androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator r0;
        androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State $r1;

        r0 := @this: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator;

        specialinvoke r0.<androidx.test.espresso.web.internal.deps.guava.collect.UnmodifiableIterator: void <init>()>();

        $r1 = <androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State NOT_READY>;

        r0.<androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State state> = $r1;

        return;
    }

    public final boolean hasNext()
    {
        androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator r0;
        androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State $r1, $r2, $r3;
        int[] $r4;
        int $i0, $i1;
        boolean $z0, z1;

        r0 := @this: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator;

        $r2 = r0.<androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State state>;

        $r1 = <androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State FAILED>;

        if $r2 == $r1 goto label5;

        z1 = 1;

     label1:
        staticinvoke <androidx.test.espresso.web.internal.deps.guava.base.Preconditions: void checkState(boolean)>(z1);

        $r4 = <androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$1: int[] $SwitchMap$com$google$common$collect$AbstractIterator$State>;

        $r3 = r0.<androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State state>;

        $i0 = virtualinvoke $r3.<androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: int ordinal()>();

        $i1 = $r4[$i0];

        tableswitch($i1)
        {
            case 1: goto label4;
            case 2: goto label3;
            default: goto label2;
        };

     label2:
        $z0 = specialinvoke r0.<androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator: boolean tryToComputeNext()>();

        return $z0;

     label3:
        return 1;

     label4:
        return 0;

     label5:
        z1 = 0;

        goto label1;
    }

    private boolean tryToComputeNext()
    {
        androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator r0;
        androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State $r1, $r3, $r4, $r5;
        java.lang.Object $r2;

        r0 := @this: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator;

        $r1 = <androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State FAILED>;

        r0.<androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State state> = $r1;

        $r2 = virtualinvoke r0.<androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator: java.lang.Object computeNext()>();

        r0.<androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator: java.lang.Object next> = $r2;

        $r4 = r0.<androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State state>;

        $r3 = <androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State DONE>;

        if $r4 == $r3 goto label1;

        $r5 = <androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State READY>;

        r0.<androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State state> = $r5;

        return 1;

     label1:
        return 0;
    }

androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$1
<androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$1: int[] $SwitchMap$com$google$common$collect$AbstractIterator$State>
    static void <clinit>()
    {
        androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State[] $r0;
        int $i0, $i1, $i2;
        int[] $r1, $r3, $r5;
        androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State $r2, $r4;
        java.lang.Throwable $r6, $r7;

        $r0 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$1: int[] $SwitchMap$com$google$common$collect$AbstractIterator$State> = $r1;

     label1:
        $r3 = <androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$1: int[] $SwitchMap$com$google$common$collect$AbstractIterator$State>;

        $r2 = <androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State DONE>;

        $i1 = virtualinvoke $r2.<androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: int ordinal()>();

        $r3[$i1] = 1;

     label2:
        $r5 = <androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$1: int[] $SwitchMap$com$google$common$collect$AbstractIterator$State>;

        $r4 = <androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State READY>;

        $i2 = virtualinvoke $r4.<androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: int ordinal()>();

        $r5[$i2] = 2;

     label3:
        return;

     label4:
        $r7 := @caughtexception;

        goto label2;

     label5:
        $r6 := @caughtexception;

        return;

        catch java.lang.NoSuchFieldError from label1 to label2 with label4;
        catch java.lang.NoSuchFieldError from label2 to label3 with label5;
    }

androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State
<androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State READY>
<androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State NOT_READY>
<androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State DONE>
<androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State FAILED>
<androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State[] $VALUES>
    static void <clinit>()
    {
        androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State[] $r0;
        androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State r1, r2, r3, r4;

        r1 = new androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State;

        specialinvoke r1.<androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: void <init>(java.lang.String,int)>("READY", 0);

        <androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State READY> = r1;

        r2 = new androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State;

        specialinvoke r2.<androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: void <init>(java.lang.String,int)>("NOT_READY", 1);

        <androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State NOT_READY> = r2;

        r3 = new androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State;

        specialinvoke r3.<androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: void <init>(java.lang.String,int)>("DONE", 2);

        <androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State DONE> = r3;

        r4 = new androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State;

        specialinvoke r4.<androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: void <init>(java.lang.String,int)>("FAILED", 3);

        <androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State FAILED> = r4;

        $r0 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State[] $values()>();

        <androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State[] $VALUES> = $r0;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State r0;
        java.lang.String r1;
        int i0;

        r0 := @this: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    private static androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State[] $values()
    {
        androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State[] r0;
        androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State $r1, $r2, $r3, $r4;

        r0 = newarray (androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State)[4];

        $r1 = <androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State READY>;

        r0[0] = $r1;

        $r2 = <androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State NOT_READY>;

        r0[1] = $r2;

        $r3 = <androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State DONE>;

        r0[2] = $r3;

        $r4 = <androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State FAILED>;

        r0[3] = $r4;

        return r0;
    }

    public static androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State[] values()
    {
        androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State: androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (androidx.test.espresso.web.internal.deps.guava.collect.AbstractIterator$State[]) $r1;

        return $r2;
    }

