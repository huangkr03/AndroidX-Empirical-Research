androidx.camera.camera2.internal.ZoomStateImpl
<androidx.camera.camera2.internal.ZoomStateImpl: float mZoomRatio>
<androidx.camera.camera2.internal.ZoomStateImpl: float mMaxZoomRatio>
<androidx.camera.camera2.internal.ZoomStateImpl: float mMinZoomRatio>
<androidx.camera.camera2.internal.ZoomStateImpl: float mLinearZoom>
    void <init>(float, float)
    {
        androidx.camera.camera2.internal.ZoomStateImpl r0;
        float f0, f1;

        r0 := @this: androidx.camera.camera2.internal.ZoomStateImpl;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.camera2.internal.ZoomStateImpl: float mMaxZoomRatio> = f0;

        r0.<androidx.camera.camera2.internal.ZoomStateImpl: float mMinZoomRatio> = f1;

        return;
    }

    void setZoomRatio(float) throws java.lang.IllegalArgumentException
    {
        androidx.camera.camera2.internal.ZoomStateImpl r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6;
        java.lang.String r1;
        byte $b0, $b1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        java.lang.IllegalArgumentException $r10;

        r0 := @this: androidx.camera.camera2.internal.ZoomStateImpl;

        f0 := @parameter0: float;

        $f1 = r0.<androidx.camera.camera2.internal.ZoomStateImpl: float mMaxZoomRatio>;

        $b0 = f0 cmpl $f1;

        if $b0 > 0 goto label1;

        $f4 = r0.<androidx.camera.camera2.internal.ZoomStateImpl: float mMinZoomRatio>;

        $b1 = f0 cmpg $f4;

        if $b1 >= 0 goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested zoomRatio ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not within valid range [");

        $f2 = r0.<androidx.camera.camera2.internal.ZoomStateImpl: float mMinZoomRatio>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , ");

        $f3 = r0.<androidx.camera.camera2.internal.ZoomStateImpl: float mMaxZoomRatio>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r1);

        throw $r10;

     label2:
        r0.<androidx.camera.camera2.internal.ZoomStateImpl: float mZoomRatio> = f0;

        $f5 = r0.<androidx.camera.camera2.internal.ZoomStateImpl: float mZoomRatio>;

        $f6 = specialinvoke r0.<androidx.camera.camera2.internal.ZoomStateImpl: float getPercentageByRatio(float)>($f5);

        r0.<androidx.camera.camera2.internal.ZoomStateImpl: float mLinearZoom> = $f6;

        return;
    }

    void setLinearZoom(float) throws java.lang.IllegalArgumentException
    {
        androidx.camera.camera2.internal.ZoomStateImpl r0;
        float f0, $f1, $f2;
        java.lang.String r1;
        byte $b0, $b1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: androidx.camera.camera2.internal.ZoomStateImpl;

        f0 := @parameter0: float;

        $b0 = f0 cmpl 1.0F;

        if $b0 > 0 goto label1;

        $b1 = f0 cmpg 0.0F;

        if $b1 >= 0 goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested linearZoom ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not within valid range [0..1]");

        r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r1);

        throw $r6;

     label2:
        r0.<androidx.camera.camera2.internal.ZoomStateImpl: float mLinearZoom> = f0;

        $f1 = r0.<androidx.camera.camera2.internal.ZoomStateImpl: float mLinearZoom>;

        $f2 = specialinvoke r0.<androidx.camera.camera2.internal.ZoomStateImpl: float getRatioByPercentage(float)>($f1);

        r0.<androidx.camera.camera2.internal.ZoomStateImpl: float mZoomRatio> = $f2;

        return;
    }

    public float getZoomRatio()
    {
        androidx.camera.camera2.internal.ZoomStateImpl r0;
        float $f0;

        r0 := @this: androidx.camera.camera2.internal.ZoomStateImpl;

        $f0 = r0.<androidx.camera.camera2.internal.ZoomStateImpl: float mZoomRatio>;

        return $f0;
    }

    public float getMaxZoomRatio()
    {
        androidx.camera.camera2.internal.ZoomStateImpl r0;
        float $f0;

        r0 := @this: androidx.camera.camera2.internal.ZoomStateImpl;

        $f0 = r0.<androidx.camera.camera2.internal.ZoomStateImpl: float mMaxZoomRatio>;

        return $f0;
    }

    public float getMinZoomRatio()
    {
        androidx.camera.camera2.internal.ZoomStateImpl r0;
        float $f0;

        r0 := @this: androidx.camera.camera2.internal.ZoomStateImpl;

        $f0 = r0.<androidx.camera.camera2.internal.ZoomStateImpl: float mMinZoomRatio>;

        return $f0;
    }

    public float getLinearZoom()
    {
        androidx.camera.camera2.internal.ZoomStateImpl r0;
        float $f0;

        r0 := @this: androidx.camera.camera2.internal.ZoomStateImpl;

        $f0 = r0.<androidx.camera.camera2.internal.ZoomStateImpl: float mLinearZoom>;

        return $f0;
    }

    private float getRatioByPercentage(float)
    {
        androidx.camera.camera2.internal.ZoomStateImpl r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9;
        byte $b0, $b1;

        r0 := @this: androidx.camera.camera2.internal.ZoomStateImpl;

        f0 := @parameter0: float;

        $b0 = f0 cmpl 1.0F;

        if $b0 != 0 goto label1;

        $f9 = r0.<androidx.camera.camera2.internal.ZoomStateImpl: float mMaxZoomRatio>;

        return $f9;

     label1:
        $b1 = f0 cmpl 0.0F;

        if $b1 != 0 goto label2;

        $f8 = r0.<androidx.camera.camera2.internal.ZoomStateImpl: float mMinZoomRatio>;

        return $f8;

     label2:
        $f1 = r0.<androidx.camera.camera2.internal.ZoomStateImpl: float mMaxZoomRatio>;

        $f2 = 1.0F / $f1;

        d0 = (double) $f2;

        $f3 = r0.<androidx.camera.camera2.internal.ZoomStateImpl: float mMinZoomRatio>;

        $f4 = 1.0F / $f3;

        d1 = (double) $f4;

        $d5 = d0 - d1;

        $d4 = (double) f0;

        $d6 = $d5 * $d4;

        d2 = d1 + $d6;

        d3 = 1.0 / d2;

        $f5 = r0.<androidx.camera.camera2.internal.ZoomStateImpl: float mMinZoomRatio>;

        $d8 = (double) $f5;

        $f6 = r0.<androidx.camera.camera2.internal.ZoomStateImpl: float mMaxZoomRatio>;

        $d7 = (double) $f6;

        $d9 = staticinvoke <androidx.core.math.MathUtils: double clamp(double,double,double)>(d3, $d8, $d7);

        $f7 = (float) $d9;

        return $f7;
    }

    private float getPercentageByRatio(float)
    {
        androidx.camera.camera2.internal.ZoomStateImpl r0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;
        byte $b0, $b1, $b2;

        r0 := @this: androidx.camera.camera2.internal.ZoomStateImpl;

        f0 := @parameter0: float;

        $f5 = r0.<androidx.camera.camera2.internal.ZoomStateImpl: float mMaxZoomRatio>;

        $f4 = r0.<androidx.camera.camera2.internal.ZoomStateImpl: float mMinZoomRatio>;

        $b0 = $f5 cmpl $f4;

        if $b0 != 0 goto label1;

        return 0.0F;

     label1:
        $f6 = r0.<androidx.camera.camera2.internal.ZoomStateImpl: float mMaxZoomRatio>;

        $b1 = f0 cmpl $f6;

        if $b1 != 0 goto label2;

        return 1.0F;

     label2:
        $f7 = r0.<androidx.camera.camera2.internal.ZoomStateImpl: float mMinZoomRatio>;

        $b2 = f0 cmpl $f7;

        if $b2 != 0 goto label3;

        return 0.0F;

     label3:
        f1 = 1.0F / f0;

        $f8 = r0.<androidx.camera.camera2.internal.ZoomStateImpl: float mMaxZoomRatio>;

        f2 = 1.0F / $f8;

        $f9 = r0.<androidx.camera.camera2.internal.ZoomStateImpl: float mMinZoomRatio>;

        f3 = 1.0F / $f9;

        $f11 = f1 - f3;

        $f10 = f2 - f3;

        $f12 = $f11 / $f10;

        return $f12;
    }

