androidx.webkit.internal.ApiHelperForN
    private void <init>()
    {
        androidx.webkit.internal.ApiHelperForN r0;

        r0 := @this: androidx.webkit.internal.ApiHelperForN;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.io.File getDataDir(android.content.Context)
    {
        android.content.Context r0;
        java.io.File $r1;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: java.io.File getDataDir()>();

        return $r1;
    }

    public static android.webkit.ServiceWorkerController getServiceWorkerControllerInstance()
    {
        android.webkit.ServiceWorkerController $r0;

        $r0 = staticinvoke <android.webkit.ServiceWorkerController: android.webkit.ServiceWorkerController getInstance()>();

        return $r0;
    }

    public static android.webkit.ServiceWorkerWebSettings getServiceWorkerWebSettings(android.webkit.ServiceWorkerController)
    {
        android.webkit.ServiceWorkerController r0;
        android.webkit.ServiceWorkerWebSettings $r1;

        r0 := @parameter0: android.webkit.ServiceWorkerController;

        $r1 = virtualinvoke r0.<android.webkit.ServiceWorkerController: android.webkit.ServiceWorkerWebSettings getServiceWorkerWebSettings()>();

        return $r1;
    }

    public static androidx.webkit.internal.ServiceWorkerWebSettingsImpl getServiceWorkerWebSettingsImpl(android.webkit.ServiceWorkerController)
    {
        android.webkit.ServiceWorkerController r0;
        androidx.webkit.internal.ServiceWorkerWebSettingsImpl $r1;
        android.webkit.ServiceWorkerWebSettings $r2;

        r0 := @parameter0: android.webkit.ServiceWorkerController;

        $r1 = new androidx.webkit.internal.ServiceWorkerWebSettingsImpl;

        $r2 = staticinvoke <androidx.webkit.internal.ApiHelperForN: android.webkit.ServiceWorkerWebSettings getServiceWorkerWebSettings(android.webkit.ServiceWorkerController)>(r0);

        specialinvoke $r1.<androidx.webkit.internal.ServiceWorkerWebSettingsImpl: void <init>(android.webkit.ServiceWorkerWebSettings)>($r2);

        return $r1;
    }

    public static void setServiceWorkerClient(android.webkit.ServiceWorkerController, android.webkit.ServiceWorkerClient)
    {
        android.webkit.ServiceWorkerController r0;
        android.webkit.ServiceWorkerClient r1;

        r0 := @parameter0: android.webkit.ServiceWorkerController;

        r1 := @parameter1: android.webkit.ServiceWorkerClient;

        virtualinvoke r0.<android.webkit.ServiceWorkerController: void setServiceWorkerClient(android.webkit.ServiceWorkerClient)>(r1);

        return;
    }

    public static void setServiceWorkerClientCompat(android.webkit.ServiceWorkerController, androidx.webkit.ServiceWorkerClientCompat)
    {
        android.webkit.ServiceWorkerController r0;
        androidx.webkit.ServiceWorkerClientCompat r1;
        androidx.webkit.internal.FrameworkServiceWorkerClient $r2;

        r0 := @parameter0: android.webkit.ServiceWorkerController;

        r1 := @parameter1: androidx.webkit.ServiceWorkerClientCompat;

        $r2 = new androidx.webkit.internal.FrameworkServiceWorkerClient;

        specialinvoke $r2.<androidx.webkit.internal.FrameworkServiceWorkerClient: void <init>(androidx.webkit.ServiceWorkerClientCompat)>(r1);

        virtualinvoke r0.<android.webkit.ServiceWorkerController: void setServiceWorkerClient(android.webkit.ServiceWorkerClient)>($r2);

        return;
    }

    public static void setCacheMode(android.webkit.ServiceWorkerWebSettings, int)
    {
        android.webkit.ServiceWorkerWebSettings r0;
        int i0;

        r0 := @parameter0: android.webkit.ServiceWorkerWebSettings;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.webkit.ServiceWorkerWebSettings: void setCacheMode(int)>(i0);

        return;
    }

    public static int getCacheMode(android.webkit.ServiceWorkerWebSettings)
    {
        android.webkit.ServiceWorkerWebSettings r0;
        int $i0;

        r0 := @parameter0: android.webkit.ServiceWorkerWebSettings;

        $i0 = virtualinvoke r0.<android.webkit.ServiceWorkerWebSettings: int getCacheMode()>();

        return $i0;
    }

    public static void setAllowContentAccess(android.webkit.ServiceWorkerWebSettings, boolean)
    {
        android.webkit.ServiceWorkerWebSettings r0;
        boolean z0;

        r0 := @parameter0: android.webkit.ServiceWorkerWebSettings;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<android.webkit.ServiceWorkerWebSettings: void setAllowContentAccess(boolean)>(z0);

        return;
    }

    public static boolean getAllowContentAccess(android.webkit.ServiceWorkerWebSettings)
    {
        android.webkit.ServiceWorkerWebSettings r0;
        boolean $z0;

        r0 := @parameter0: android.webkit.ServiceWorkerWebSettings;

        $z0 = virtualinvoke r0.<android.webkit.ServiceWorkerWebSettings: boolean getAllowContentAccess()>();

        return $z0;
    }

    public static void setAllowFileAccess(android.webkit.ServiceWorkerWebSettings, boolean)
    {
        android.webkit.ServiceWorkerWebSettings r0;
        boolean z0;

        r0 := @parameter0: android.webkit.ServiceWorkerWebSettings;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<android.webkit.ServiceWorkerWebSettings: void setAllowFileAccess(boolean)>(z0);

        return;
    }

    public static boolean getAllowFileAccess(android.webkit.ServiceWorkerWebSettings)
    {
        android.webkit.ServiceWorkerWebSettings r0;
        boolean $z0;

        r0 := @parameter0: android.webkit.ServiceWorkerWebSettings;

        $z0 = virtualinvoke r0.<android.webkit.ServiceWorkerWebSettings: boolean getAllowFileAccess()>();

        return $z0;
    }

    public static void setBlockNetworkLoads(android.webkit.ServiceWorkerWebSettings, boolean)
    {
        android.webkit.ServiceWorkerWebSettings r0;
        boolean z0;

        r0 := @parameter0: android.webkit.ServiceWorkerWebSettings;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<android.webkit.ServiceWorkerWebSettings: void setBlockNetworkLoads(boolean)>(z0);

        return;
    }

    public static boolean getBlockNetworkLoads(android.webkit.ServiceWorkerWebSettings)
    {
        android.webkit.ServiceWorkerWebSettings r0;
        boolean $z0;

        r0 := @parameter0: android.webkit.ServiceWorkerWebSettings;

        $z0 = virtualinvoke r0.<android.webkit.ServiceWorkerWebSettings: boolean getBlockNetworkLoads()>();

        return $z0;
    }

    public static boolean isRedirect(android.webkit.WebResourceRequest)
    {
        android.webkit.WebResourceRequest r0;
        boolean $z0;

        r0 := @parameter0: android.webkit.WebResourceRequest;

        $z0 = interfaceinvoke r0.<android.webkit.WebResourceRequest: boolean isRedirect()>();

        return $z0;
    }

    public static void setDisabledActionModeMenuItems(android.webkit.WebSettings, int)
    {
        android.webkit.WebSettings r0;
        int i0;

        r0 := @parameter0: android.webkit.WebSettings;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.webkit.WebSettings: void setDisabledActionModeMenuItems(int)>(i0);

        return;
    }

    public static int getDisabledActionModeMenuItems(android.webkit.WebSettings)
    {
        android.webkit.WebSettings r0;
        int $i0;

        r0 := @parameter0: android.webkit.WebSettings;

        $i0 = virtualinvoke r0.<android.webkit.WebSettings: int getDisabledActionModeMenuItems()>();

        return $i0;
    }

