androidx.wear.compose.foundation.CurvedTextDelegate
<androidx.wear.compose.foundation.CurvedTextDelegate: java.lang.String text>
<androidx.wear.compose.foundation.CurvedTextDelegate: boolean clockwise>
<androidx.wear.compose.foundation.CurvedTextDelegate: float fontSizePx>
<androidx.wear.compose.foundation.CurvedTextDelegate: androidx.compose.runtime.MutableState textWidth$delegate>
<androidx.wear.compose.foundation.CurvedTextDelegate: androidx.compose.runtime.MutableState textHeight$delegate>
<androidx.wear.compose.foundation.CurvedTextDelegate: float baseLinePosition>
<androidx.wear.compose.foundation.CurvedTextDelegate: androidx.compose.runtime.State typeFace>
<androidx.wear.compose.foundation.CurvedTextDelegate: android.graphics.Paint paint>
<androidx.wear.compose.foundation.CurvedTextDelegate: android.graphics.Path backgroundPath>
<androidx.wear.compose.foundation.CurvedTextDelegate: android.graphics.Path textPath>
<androidx.wear.compose.foundation.CurvedTextDelegate: androidx.wear.compose.foundation.CurvedLayoutInfo lastLayoutInfo>
    public void <init>()
    {
        androidx.wear.compose.foundation.CurvedTextDelegate r0, r2;
        android.graphics.Paint r1, $r9;
        java.lang.Float $r3, $r5;
        androidx.compose.runtime.MutableState $r4, $r6, $r7;
        androidx.compose.runtime.State $r8;
        android.graphics.Path $r10, $r11;

        r0 := @this: androidx.wear.compose.foundation.CurvedTextDelegate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.wear.compose.foundation.CurvedTextDelegate: java.lang.String text> = "";

        r0.<androidx.wear.compose.foundation.CurvedTextDelegate: boolean clockwise> = 1;

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

        $r4 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r3, null, 2, null);

        r0.<androidx.wear.compose.foundation.CurvedTextDelegate: androidx.compose.runtime.MutableState textWidth$delegate> = $r4;

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

        $r6 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r5, null, 2, null);

        r0.<androidx.wear.compose.foundation.CurvedTextDelegate: androidx.compose.runtime.MutableState textHeight$delegate> = $r6;

        $r7 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>(null, null, 2, null);

        $r8 = (androidx.compose.runtime.State) $r7;

        r0.<androidx.wear.compose.foundation.CurvedTextDelegate: androidx.compose.runtime.State typeFace> = $r8;

        $r9 = new android.graphics.Paint;

        specialinvoke $r9.<android.graphics.Paint: void <init>()>();

        r1 = $r9;

        r2 = r0;

        virtualinvoke r1.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        r2.<androidx.wear.compose.foundation.CurvedTextDelegate: android.graphics.Paint paint> = r1;

        $r10 = new android.graphics.Path;

        specialinvoke $r10.<android.graphics.Path: void <init>()>();

        r0.<androidx.wear.compose.foundation.CurvedTextDelegate: android.graphics.Path backgroundPath> = $r10;

        $r11 = new android.graphics.Path;

        specialinvoke $r11.<android.graphics.Path: void <init>()>();

        r0.<androidx.wear.compose.foundation.CurvedTextDelegate: android.graphics.Path textPath> = $r11;

        return;
    }

    public final float getTextWidth()
    {
        androidx.wear.compose.foundation.CurvedTextDelegate r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0;

        r0 := @this: androidx.wear.compose.foundation.CurvedTextDelegate;

        $r2 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: androidx.compose.runtime.MutableState textWidth$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        return $f0;
    }

    public final void setTextWidth(float)
    {
        androidx.wear.compose.foundation.CurvedTextDelegate r0;
        float f0;
        androidx.compose.runtime.MutableState $r1;
        java.lang.Float r2;

        r0 := @this: androidx.wear.compose.foundation.CurvedTextDelegate;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: androidx.compose.runtime.MutableState textWidth$delegate>;

        r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        interfaceinvoke $r1.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r2);

        return;
    }

    public final float getTextHeight()
    {
        androidx.wear.compose.foundation.CurvedTextDelegate r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0;

        r0 := @this: androidx.wear.compose.foundation.CurvedTextDelegate;

        $r2 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: androidx.compose.runtime.MutableState textHeight$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        return $f0;
    }

    public final void setTextHeight(float)
    {
        androidx.wear.compose.foundation.CurvedTextDelegate r0;
        float f0;
        androidx.compose.runtime.MutableState $r1;
        java.lang.Float r2;

        r0 := @this: androidx.wear.compose.foundation.CurvedTextDelegate;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: androidx.compose.runtime.MutableState textHeight$delegate>;

        r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        interfaceinvoke $r1.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r2);

        return;
    }

    public final float getBaseLinePosition()
    {
        androidx.wear.compose.foundation.CurvedTextDelegate r0;
        float $f0;

        r0 := @this: androidx.wear.compose.foundation.CurvedTextDelegate;

        $f0 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: float baseLinePosition>;

        return $f0;
    }

    public final void setBaseLinePosition(float)
    {
        androidx.wear.compose.foundation.CurvedTextDelegate r0;
        float f0;

        r0 := @this: androidx.wear.compose.foundation.CurvedTextDelegate;

        f0 := @parameter0: float;

        r0.<androidx.wear.compose.foundation.CurvedTextDelegate: float baseLinePosition> = f0;

        return;
    }

    public final androidx.wear.compose.foundation.CurvedLayoutInfo getLastLayoutInfo()
    {
        androidx.wear.compose.foundation.CurvedTextDelegate r0;
        androidx.wear.compose.foundation.CurvedLayoutInfo $r1;

        r0 := @this: androidx.wear.compose.foundation.CurvedTextDelegate;

        $r1 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: androidx.wear.compose.foundation.CurvedLayoutInfo lastLayoutInfo>;

        return $r1;
    }

    public final void setLastLayoutInfo(androidx.wear.compose.foundation.CurvedLayoutInfo)
    {
        androidx.wear.compose.foundation.CurvedTextDelegate r0;
        androidx.wear.compose.foundation.CurvedLayoutInfo r1;

        r0 := @this: androidx.wear.compose.foundation.CurvedTextDelegate;

        r1 := @parameter0: androidx.wear.compose.foundation.CurvedLayoutInfo;

        r0.<androidx.wear.compose.foundation.CurvedTextDelegate: androidx.wear.compose.foundation.CurvedLayoutInfo lastLayoutInfo> = r1;

        return;
    }

    public final void updateIfNeeded(java.lang.String, boolean, float)
    {
        androidx.wear.compose.foundation.CurvedTextDelegate r0;
        java.lang.String r1, $r2;
        boolean z0, $z1, $z2, $z3;
        float f0, $f1;
        byte $b0;
        android.graphics.Paint $r3;

        r0 := @this: androidx.wear.compose.foundation.CurvedTextDelegate;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        f0 := @parameter2: float;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "text");

        $r2 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: java.lang.String text>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, $r2);

        if $z1 == 0 goto label3;

        $z2 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: boolean clockwise>;

        if z0 != $z2 goto label3;

        $f1 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: float fontSizePx>;

        $b0 = f0 cmpg $f1;

        if $b0 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        if $z3 != 0 goto label4;

     label3:
        r0.<androidx.wear.compose.foundation.CurvedTextDelegate: java.lang.String text> = r1;

        r0.<androidx.wear.compose.foundation.CurvedTextDelegate: boolean clockwise> = z0;

        r0.<androidx.wear.compose.foundation.CurvedTextDelegate: float fontSizePx> = f0;

        $r3 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: android.graphics.Paint paint>;

        virtualinvoke $r3.<android.graphics.Paint: void setTextSize(float)>(f0);

        specialinvoke r0.<androidx.wear.compose.foundation.CurvedTextDelegate: void updateMeasures()>();

        r0.<androidx.wear.compose.foundation.CurvedTextDelegate: androidx.wear.compose.foundation.CurvedLayoutInfo lastLayoutInfo> = null;

     label4:
        return;
    }

    public final void UpdateFontIfNeeded-SyNm_b8(androidx.compose.ui.text.font.FontFamily, androidx.compose.ui.text.font.FontWeight, androidx.compose.ui.text.font.FontStyle, androidx.compose.ui.text.font.FontSynthesis, androidx.compose.runtime.Composer, int)
    {
        androidx.wear.compose.foundation.CurvedTextDelegate r0, r8;
        androidx.compose.ui.text.font.FontFamily r1;
        androidx.compose.ui.text.font.FontWeight r2;
        androidx.compose.ui.text.font.FontStyle r3;
        androidx.compose.ui.text.font.FontSynthesis r4;
        int $i0, i2, $i3;
        androidx.compose.ui.text.font.FontFamily$Resolver r5;
        java.lang.Object r6, $r17, r21, r24, $r26, r27;
        androidx.compose.runtime.State r7, $r12;
        boolean $z2, $z3, $z4, z8, z9;
        androidx.compose.runtime.ProvidableCompositionLocal $r9;
        androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$1$1 $r10;
        kotlin.jvm.functions.Function0 $r11;
        androidx.compose.runtime.ScopeUpdateScope $r13;
        androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$2 $r14;
        kotlin.jvm.functions.Function2 $r15;
        androidx.compose.runtime.Composer$Companion $r16;
        androidx.compose.runtime.Composer $r18, $r19;
        androidx.compose.runtime.CompositionLocal r20;
        java.lang.Object[] r22, r23;

        r0 := @this: androidx.wear.compose.foundation.CurvedTextDelegate;

        r1 := @parameter0: androidx.compose.ui.text.font.FontFamily;

        r2 := @parameter1: androidx.compose.ui.text.font.FontWeight;

        r3 := @parameter2: androidx.compose.ui.text.font.FontStyle;

        r4 := @parameter3: androidx.compose.ui.text.font.FontSynthesis;

        $r18 := @parameter4: androidx.compose.runtime.Composer;

        $i0 := @parameter5: int;

        $r19 = interfaceinvoke $r18.<androidx.compose.runtime.Composer: androidx.compose.runtime.Composer startRestartGroup(int)>(-602363231);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r19, "C(UpdateFontIfNeeded)P(!1,3,1:c#ui.text.font.FontStyle,2:c#ui.text.font.FontSynthesis)89@3186L7,90@3213L404:CurvedTextDelegate.android.kt#m5emhl");

        $z2 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z2 == 0 goto label1;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(-602363231, $i0, -1, "androidx.wear.compose.foundation.CurvedTextDelegate.UpdateFontIfNeeded (CurvedTextDelegate.android.kt:83)");

     label1:
        $r9 = staticinvoke <androidx.compose.ui.platform.CompositionLocalsKt: androidx.compose.runtime.ProvidableCompositionLocal getLocalFontFamilyResolver()>();

        r20 = (androidx.compose.runtime.CompositionLocal) $r9;

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformationMarkerStart(androidx.compose.runtime.Composer,int,java.lang.String)>($r19, 2023513938, "C:CompositionLocal.kt#9igjgp");

        r21 = interfaceinvoke $r19.<androidx.compose.runtime.Composer: java.lang.Object consume(androidx.compose.runtime.CompositionLocal)>(r20);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformationMarkerEnd(androidx.compose.runtime.Composer)>($r19);

        r5 = (androidx.compose.ui.text.font.FontFamily$Resolver) r21;

        r22 = newarray (java.lang.Object)[5];

        r22[0] = r1;

        r22[1] = r2;

        r22[2] = r3;

        r22[3] = r4;

        r22[4] = r5;

        r23 = r22;

        r8 = r0;

        interfaceinvoke $r19.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-568225417);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r19, "C(remember)P(1):Composables.kt#9igjgp");

        z8 = 0;

        i2 = 0;

        $i3 = lengthof r23;

     label2:
        if i2 >= $i3 goto label3;

        r24 = r23[i2];

        $z4 = interfaceinvoke $r19.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>(r24);

        z8 = z8 | $z4;

        i2 = i2 + 1;

        goto label2;

     label3:
        z9 = 0;

        r6 = interfaceinvoke $r19.<androidx.compose.runtime.Composer: java.lang.Object rememberedValue()>();

        if z8 != 0 goto label4;

        $r16 = <androidx.compose.runtime.Composer: androidx.compose.runtime.Composer$Companion Companion>;

        $r17 = virtualinvoke $r16.<androidx.compose.runtime.Composer$Companion: java.lang.Object getEmpty()>();

        if r6 != $r17 goto label5;

     label4:
        $r10 = new androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$1$1;

        specialinvoke $r10.<androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$1$1: void <init>(androidx.compose.ui.text.font.FontFamily$Resolver,androidx.compose.ui.text.font.FontFamily,androidx.compose.ui.text.font.FontWeight,androidx.compose.ui.text.font.FontStyle,androidx.compose.ui.text.font.FontSynthesis)>(r5, r1, r2, r3, r4);

        $r11 = (kotlin.jvm.functions.Function0) $r10;

        r7 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.State derivedStateOf(kotlin.jvm.functions.Function0)>($r11);

        interfaceinvoke $r19.<androidx.compose.runtime.Composer: void updateRememberedValue(java.lang.Object)>(r7);

        $r26 = r7;

        goto label6;

     label5:
        $r26 = r6;

     label6:
        r27 = $r26;

        interfaceinvoke $r19.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        $r12 = (androidx.compose.runtime.State) r27;

        r8.<androidx.wear.compose.foundation.CurvedTextDelegate: androidx.compose.runtime.State typeFace> = $r12;

        specialinvoke r0.<androidx.wear.compose.foundation.CurvedTextDelegate: void updateTypeFace()>();

        $z3 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z3 == 0 goto label7;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

     label7:
        $r13 = interfaceinvoke $r19.<androidx.compose.runtime.Composer: androidx.compose.runtime.ScopeUpdateScope endRestartGroup()>();

        if $r13 != null goto label8;

        goto label9;

     label8:
        $r14 = new androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$2;

        specialinvoke $r14.<androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$2: void <init>(androidx.wear.compose.foundation.CurvedTextDelegate,androidx.compose.ui.text.font.FontFamily,androidx.compose.ui.text.font.FontWeight,androidx.compose.ui.text.font.FontStyle,androidx.compose.ui.text.font.FontSynthesis,int)>(r0, r1, r2, r3, r4, $i0);

        $r15 = (kotlin.jvm.functions.Function2) $r14;

        interfaceinvoke $r13.<androidx.compose.runtime.ScopeUpdateScope: void updateScope(kotlin.jvm.functions.Function2)>($r15);

     label9:
        return;
    }

    private final void updateMeasures()
    {
        androidx.wear.compose.foundation.CurvedTextDelegate r0;
        android.graphics.Rect r1, $r2;
        java.lang.String $r3, $r5;
        android.graphics.Paint $r4, $r6, $r8, $r10, $r12;
        int $i0, $i1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        android.graphics.Paint$FontMetrics $r7, $r9, $r11, $r13;
        boolean $z0;

        r0 := @this: androidx.wear.compose.foundation.CurvedTextDelegate;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r1 = $r2;

        $r4 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: android.graphics.Paint paint>;

        $r5 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: java.lang.String text>;

        $r3 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: java.lang.String text>;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        virtualinvoke $r4.<android.graphics.Paint: void getTextBounds(java.lang.String,int,int,android.graphics.Rect)>($r5, 0, $i0, r1);

        $i1 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        $f0 = (float) $i1;

        virtualinvoke r0.<androidx.wear.compose.foundation.CurvedTextDelegate: void setTextWidth(float)>($f0);

        $r6 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: android.graphics.Paint paint>;

        $r7 = virtualinvoke $r6.<android.graphics.Paint: android.graphics.Paint$FontMetrics getFontMetrics()>();

        $f1 = $r7.<android.graphics.Paint$FontMetrics: float top>;

        $f2 = neg $f1;

        $r8 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: android.graphics.Paint paint>;

        $r9 = virtualinvoke $r8.<android.graphics.Paint: android.graphics.Paint$FontMetrics getFontMetrics()>();

        $f3 = $r9.<android.graphics.Paint$FontMetrics: float bottom>;

        $f4 = $f2 + $f3;

        virtualinvoke r0.<androidx.wear.compose.foundation.CurvedTextDelegate: void setTextHeight(float)>($f4);

        $z0 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: boolean clockwise>;

        if $z0 == 0 goto label1;

        $r12 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: android.graphics.Paint paint>;

        $r13 = virtualinvoke $r12.<android.graphics.Paint: android.graphics.Paint$FontMetrics getFontMetrics()>();

        $f5 = $r13.<android.graphics.Paint$FontMetrics: float top>;

        $f6 = neg $f5;

        goto label2;

     label1:
        $r10 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: android.graphics.Paint paint>;

        $r11 = virtualinvoke $r10.<android.graphics.Paint: android.graphics.Paint$FontMetrics getFontMetrics()>();

        $f6 = $r11.<android.graphics.Paint$FontMetrics: float bottom>;

     label2:
        r0.<androidx.wear.compose.foundation.CurvedTextDelegate: float baseLinePosition> = $f6;

        return;
    }

    private final void updateTypeFace()
    {
        androidx.wear.compose.foundation.CurvedTextDelegate r0;
        android.graphics.Typeface r1, $r5;
        androidx.compose.runtime.State $r2;
        java.lang.Object $r3;
        android.graphics.Paint $r4, $r6;
        boolean $z0;

        r0 := @this: androidx.wear.compose.foundation.CurvedTextDelegate;

        $r2 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: androidx.compose.runtime.State typeFace>;

        $r3 = interfaceinvoke $r2.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        r1 = (android.graphics.Typeface) $r3;

        $r4 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: android.graphics.Paint paint>;

        $r5 = virtualinvoke $r4.<android.graphics.Paint: android.graphics.Typeface getTypeface()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, $r5);

        if $z0 != 0 goto label1;

        $r6 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: android.graphics.Paint paint>;

        virtualinvoke $r6.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>(r1);

        specialinvoke r0.<androidx.wear.compose.foundation.CurvedTextDelegate: void updateMeasures()>();

        r0.<androidx.wear.compose.foundation.CurvedTextDelegate: androidx.wear.compose.foundation.CurvedLayoutInfo lastLayoutInfo> = null;

     label1:
        return;
    }

    private final void updatePathsIfNeeded(androidx.wear.compose.foundation.CurvedLayoutInfo)
    {
        androidx.wear.compose.foundation.CurvedTextDelegate r0;
        androidx.wear.compose.foundation.CurvedLayoutInfo r1, $r3;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41;
        boolean $z1, $z2, $z3;
        long $l0, $l1;
        android.graphics.Path $r4, $r5, $r6, $r7, $r8, $r9;

        r0 := @this: androidx.wear.compose.foundation.CurvedTextDelegate;

        r1 := @parameter0: androidx.wear.compose.foundation.CurvedLayoutInfo;

        $r3 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: androidx.wear.compose.foundation.CurvedLayoutInfo lastLayoutInfo>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, $r3);

        if $z1 != 0 goto label5;

        r0.<androidx.wear.compose.foundation.CurvedTextDelegate: androidx.wear.compose.foundation.CurvedLayoutInfo lastLayoutInfo> = r1;

        $z2 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: boolean clockwise>;

        if $z2 == 0 goto label1;

        $f40 = 1.0F;

        goto label2;

     label1:
        $f40 = -1.0F;

     label2:
        f0 = $f40;

        $f4 = virtualinvoke r1.<androidx.wear.compose.foundation.CurvedLayoutInfo: float getSweepRadians()>();

        $f5 = staticinvoke <androidx.wear.compose.foundation.CurvedLayoutKt: float toDegrees(float)>($f4);

        f1 = staticinvoke <kotlin.ranges.RangesKt: float coerceAtMost(float,float)>($f5, 360.0F);

        $l0 = virtualinvoke r1.<androidx.wear.compose.foundation.CurvedLayoutInfo: long getCenterOffset-F1C5BW0()>();

        f2 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>($l0);

        $l1 = virtualinvoke r1.<androidx.wear.compose.foundation.CurvedLayoutInfo: long getCenterOffset-F1C5BW0()>();

        f3 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>($l1);

        $r4 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: android.graphics.Path backgroundPath>;

        virtualinvoke $r4.<android.graphics.Path: void reset()>();

        $r5 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: android.graphics.Path backgroundPath>;

        $f6 = virtualinvoke r1.<androidx.wear.compose.foundation.CurvedLayoutInfo: float getOuterRadius()>();

        $f7 = f2 - $f6;

        $f8 = virtualinvoke r1.<androidx.wear.compose.foundation.CurvedLayoutInfo: float getOuterRadius()>();

        $f9 = f3 - $f8;

        $f10 = virtualinvoke r1.<androidx.wear.compose.foundation.CurvedLayoutInfo: float getOuterRadius()>();

        $f11 = f2 + $f10;

        $f12 = virtualinvoke r1.<androidx.wear.compose.foundation.CurvedLayoutInfo: float getOuterRadius()>();

        $f13 = f3 + $f12;

        $f14 = virtualinvoke r1.<androidx.wear.compose.foundation.CurvedLayoutInfo: float getStartAngleRadians()>();

        $f15 = staticinvoke <androidx.wear.compose.foundation.CurvedLayoutKt: float toDegrees(float)>($f14);

        virtualinvoke $r5.<android.graphics.Path: void arcTo(float,float,float,float,float,float,boolean)>($f7, $f9, $f11, $f13, $f15, f1, 0);

        $r6 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: android.graphics.Path backgroundPath>;

        $f16 = virtualinvoke r1.<androidx.wear.compose.foundation.CurvedLayoutInfo: float getInnerRadius()>();

        $f17 = f2 - $f16;

        $f18 = virtualinvoke r1.<androidx.wear.compose.foundation.CurvedLayoutInfo: float getInnerRadius()>();

        $f19 = f3 - $f18;

        $f20 = virtualinvoke r1.<androidx.wear.compose.foundation.CurvedLayoutInfo: float getInnerRadius()>();

        $f21 = f2 + $f20;

        $f22 = virtualinvoke r1.<androidx.wear.compose.foundation.CurvedLayoutInfo: float getInnerRadius()>();

        $f23 = f3 + $f22;

        $f24 = virtualinvoke r1.<androidx.wear.compose.foundation.CurvedLayoutInfo: float getStartAngleRadians()>();

        $f25 = staticinvoke <androidx.wear.compose.foundation.CurvedLayoutKt: float toDegrees(float)>($f24);

        $f27 = $f25 + f1;

        $f26 = neg f1;

        virtualinvoke $r6.<android.graphics.Path: void arcTo(float,float,float,float,float,float,boolean)>($f17, $f19, $f21, $f23, $f27, $f26, 0);

        $r7 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: android.graphics.Path backgroundPath>;

        virtualinvoke $r7.<android.graphics.Path: void close()>();

        $r8 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: android.graphics.Path textPath>;

        virtualinvoke $r8.<android.graphics.Path: void reset()>();

        $r9 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: android.graphics.Path textPath>;

        $f28 = virtualinvoke r1.<androidx.wear.compose.foundation.CurvedLayoutInfo: float getMeasureRadius()>();

        $f29 = f2 - $f28;

        $f30 = virtualinvoke r1.<androidx.wear.compose.foundation.CurvedLayoutInfo: float getMeasureRadius()>();

        $f31 = f3 - $f30;

        $f32 = virtualinvoke r1.<androidx.wear.compose.foundation.CurvedLayoutInfo: float getMeasureRadius()>();

        $f33 = f2 + $f32;

        $f34 = virtualinvoke r1.<androidx.wear.compose.foundation.CurvedLayoutInfo: float getMeasureRadius()>();

        $f35 = f3 + $f34;

        $f36 = virtualinvoke r1.<androidx.wear.compose.foundation.CurvedLayoutInfo: float getStartAngleRadians()>();

        $f37 = staticinvoke <androidx.wear.compose.foundation.CurvedLayoutKt: float toDegrees(float)>($f36);

        $z3 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: boolean clockwise>;

        if $z3 == 0 goto label3;

        $f41 = 0.0F;

        goto label4;

     label3:
        $f41 = f1;

     label4:
        $f39 = $f37 + $f41;

        $f38 = f0 * f1;

        virtualinvoke $r9.<android.graphics.Path: void addArc(float,float,float,float,float,float)>($f29, $f31, $f33, $f35, $f39, $f38);

     label5:
        return;
    }

    public final void doDraw-mWnK_ns(androidx.compose.ui.graphics.drawscope.DrawScope, androidx.wear.compose.foundation.CurvedLayoutInfo, float, int, long, long)
    {
        androidx.wear.compose.foundation.CurvedTextDelegate r0;
        androidx.compose.ui.graphics.drawscope.DrawScope $r1;
        androidx.wear.compose.foundation.CurvedLayoutInfo r2;
        float f0, $f1, $f2, $f3, $f4;
        int i0, $i5, $i6, $i7, $i9, $i10;
        long l1, l2, $l3, $l8;
        androidx.compose.ui.graphics.Canvas r3;
        java.lang.String r4, $r13, $r21;
        androidx.compose.ui.graphics.drawscope.DrawContext $r5;
        androidx.compose.ui.graphics.Color$Companion $r6, $r15;
        byte $b4, $b11;
        android.graphics.Canvas $r7, $r17;
        android.graphics.Paint $r8, $r12, $r16, $r18, $r20;
        android.graphics.Path $r9, $r19;
        androidx.compose.ui.text.style.TextOverflow$Companion $r10, $r14;
        boolean $z3, $z4, $z5, $z6;
        android.text.TextPaint $r11;

        r0 := @this: androidx.wear.compose.foundation.CurvedTextDelegate;

        $r1 := @parameter0: androidx.compose.ui.graphics.drawscope.DrawScope;

        r2 := @parameter1: androidx.wear.compose.foundation.CurvedLayoutInfo;

        f0 := @parameter2: float;

        i0 := @parameter3: int;

        l1 := @parameter4: long;

        l2 := @parameter5: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$doDraw");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "layoutInfo");

        specialinvoke r0.<androidx.wear.compose.foundation.CurvedTextDelegate: void updateTypeFace()>();

        specialinvoke r0.<androidx.wear.compose.foundation.CurvedTextDelegate: void updatePathsIfNeeded(androidx.wear.compose.foundation.CurvedLayoutInfo)>(r2);

        $r5 = interfaceinvoke $r1.<androidx.compose.ui.graphics.drawscope.DrawScope: androidx.compose.ui.graphics.drawscope.DrawContext getDrawContext()>();

        r3 = interfaceinvoke $r5.<androidx.compose.ui.graphics.drawscope.DrawContext: androidx.compose.ui.graphics.Canvas getCanvas()>();

        $r6 = <androidx.compose.ui.graphics.Color: androidx.compose.ui.graphics.Color$Companion Companion>;

        $l3 = virtualinvoke $r6.<androidx.compose.ui.graphics.Color$Companion: long getUnspecified-0d7_KjU()>();

        $b4 = l2 cmp $l3;

        if $b4 == 0 goto label1;

        $z6 = 1;

        goto label2;

     label1:
        $z6 = 0;

     label2:
        if $z6 == 0 goto label3;

        $r15 = <androidx.compose.ui.graphics.Color: androidx.compose.ui.graphics.Color$Companion Companion>;

        $l8 = virtualinvoke $r15.<androidx.compose.ui.graphics.Color$Companion: long getTransparent-0d7_KjU()>();

        $z5 = staticinvoke <androidx.compose.ui.graphics.Color: boolean equals-impl0(long,long)>(l2, $l8);

        if $z5 != 0 goto label3;

        $r16 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: android.graphics.Paint paint>;

        $i9 = staticinvoke <androidx.compose.ui.graphics.ColorKt: int toArgb-8_81llA(long)>(l2);

        virtualinvoke $r16.<android.graphics.Paint: void setColor(int)>($i9);

        $r17 = staticinvoke <androidx.compose.ui.graphics.AndroidCanvas_androidKt: android.graphics.Canvas getNativeCanvas(androidx.compose.ui.graphics.Canvas)>(r3);

        $r19 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: android.graphics.Path backgroundPath>;

        $r18 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: android.graphics.Paint paint>;

        virtualinvoke $r17.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r19, $r18);

     label3:
        $r20 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: android.graphics.Paint paint>;

        $i10 = staticinvoke <androidx.compose.ui.graphics.ColorKt: int toArgb-8_81llA(long)>(l1);

        virtualinvoke $r20.<android.graphics.Paint: void setColor(int)>($i10);

        $f3 = virtualinvoke r2.<androidx.wear.compose.foundation.CurvedLayoutInfo: float getSweepRadians()>();

        $f4 = f0 + 0.001F;

        $b11 = $f3 cmpg $f4;

        if $b11 <= 0 goto label4;

        $r10 = <androidx.compose.ui.text.style.TextOverflow: androidx.compose.ui.text.style.TextOverflow$Companion Companion>;

        $i5 = virtualinvoke $r10.<androidx.compose.ui.text.style.TextOverflow$Companion: int getVisible-gIe3tQ8()>();

        $z3 = staticinvoke <androidx.compose.ui.text.style.TextOverflow: boolean equals-impl0(int,int)>(i0, $i5);

        if $z3 == 0 goto label5;

     label4:
        $r21 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: java.lang.String text>;

        goto label6;

     label5:
        $r13 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: java.lang.String text>;

        $r11 = new android.text.TextPaint;

        $r12 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: android.graphics.Paint paint>;

        specialinvoke $r11.<android.text.TextPaint: void <init>(android.graphics.Paint)>($r12);

        $r14 = <androidx.compose.ui.text.style.TextOverflow: androidx.compose.ui.text.style.TextOverflow$Companion Companion>;

        $i6 = virtualinvoke $r14.<androidx.compose.ui.text.style.TextOverflow$Companion: int getEllipsis-gIe3tQ8()>();

        $z4 = staticinvoke <androidx.compose.ui.text.style.TextOverflow: boolean equals-impl0(int,int)>(i0, $i6);

        $f1 = virtualinvoke r2.<androidx.wear.compose.foundation.CurvedLayoutInfo: float getMeasureRadius()>();

        $f2 = f0 * $f1;

        $i7 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f2);

        $r21 = specialinvoke r0.<androidx.wear.compose.foundation.CurvedTextDelegate: java.lang.String ellipsize(java.lang.String,android.text.TextPaint,boolean,int)>($r13, $r11, $z4, $i7);

     label6:
        r4 = $r21;

        $r7 = staticinvoke <androidx.compose.ui.graphics.AndroidCanvas_androidKt: android.graphics.Canvas getNativeCanvas(androidx.compose.ui.graphics.Canvas)>(r3);

        $r9 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: android.graphics.Path textPath>;

        $r8 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate: android.graphics.Paint paint>;

        virtualinvoke $r7.<android.graphics.Canvas: void drawTextOnPath(java.lang.String,android.graphics.Path,float,float,android.graphics.Paint)>(r4, $r9, 0.0F, 0.0F, $r8);

        return;
    }

    private final java.lang.String ellipsize(java.lang.String, android.text.TextPaint, boolean, int)
    {
        androidx.wear.compose.foundation.CurvedTextDelegate r0;
        java.lang.String r1, $r9, $r13;
        android.text.TextPaint r2;
        boolean z0;
        int i0, $i1, $i2;
        android.text.StaticLayout r3, $r8;
        java.lang.CharSequence $r4, $r11, $r12;
        android.text.StaticLayout$Builder $r5, $r6, $r7;
        android.text.TextUtils$TruncateAt $r10;
        float $f0;

        r0 := @this: androidx.wear.compose.foundation.CurvedTextDelegate;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.text.TextPaint;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        if z0 == 0 goto label1;

        $r11 = (java.lang.CharSequence) r1;

        $f0 = (float) i0;

        $r10 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END>;

        $r12 = staticinvoke <android.text.TextUtils: java.lang.CharSequence ellipsize(java.lang.CharSequence,android.text.TextPaint,float,android.text.TextUtils$TruncateAt)>($r11, r2, $f0, $r10);

        $r13 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>();

        return $r13;

     label1:
        $r4 = (java.lang.CharSequence) r1;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $r5 = staticinvoke <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>($r4, 0, $i1, r2, i0);

        $r6 = virtualinvoke $r5.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setEllipsize(android.text.TextUtils$TruncateAt)>(null);

        $r7 = virtualinvoke $r6.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setMaxLines(int)>(1);

        $r8 = virtualinvoke $r7.<android.text.StaticLayout$Builder: android.text.StaticLayout build()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "obtain(text, 0, text.len\u2026s(1)\n            .build()");

        r3 = $r8;

        $i2 = virtualinvoke r3.<android.text.StaticLayout: int getLineEnd(int)>(0);

        $r9 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r9, "this as java.lang.String\u2026ing(startIndex, endIndex)");

        return $r9;
    }

androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$1$1
<androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$1$1: androidx.compose.ui.text.font.FontFamily$Resolver $fontFamilyResolver>
<androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$1$1: androidx.compose.ui.text.font.FontFamily $fontFamily>
<androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$1$1: androidx.compose.ui.text.font.FontWeight $fontWeight>
<androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$1$1: androidx.compose.ui.text.font.FontStyle $fontStyle>
<androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$1$1: androidx.compose.ui.text.font.FontSynthesis $fontSynthesis>
    void <init>(androidx.compose.ui.text.font.FontFamily$Resolver, androidx.compose.ui.text.font.FontFamily, androidx.compose.ui.text.font.FontWeight, androidx.compose.ui.text.font.FontStyle, androidx.compose.ui.text.font.FontSynthesis)
    {
        androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$1$1 r0;
        androidx.compose.ui.text.font.FontFamily$Resolver $r1;
        androidx.compose.ui.text.font.FontFamily $r2;
        androidx.compose.ui.text.font.FontWeight $r3;
        androidx.compose.ui.text.font.FontStyle $r4;
        androidx.compose.ui.text.font.FontSynthesis $r5;

        r0 := @this: androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$1$1;

        $r1 := @parameter0: androidx.compose.ui.text.font.FontFamily$Resolver;

        $r2 := @parameter1: androidx.compose.ui.text.font.FontFamily;

        $r3 := @parameter2: androidx.compose.ui.text.font.FontWeight;

        $r4 := @parameter3: androidx.compose.ui.text.font.FontStyle;

        $r5 := @parameter4: androidx.compose.ui.text.font.FontSynthesis;

        r0.<androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$1$1: androidx.compose.ui.text.font.FontFamily$Resolver $fontFamilyResolver> = $r1;

        r0.<androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$1$1: androidx.compose.ui.text.font.FontFamily $fontFamily> = $r2;

        r0.<androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$1$1: androidx.compose.ui.text.font.FontWeight $fontWeight> = $r3;

        r0.<androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$1$1: androidx.compose.ui.text.font.FontStyle $fontStyle> = $r4;

        r0.<androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$1$1: androidx.compose.ui.text.font.FontSynthesis $fontSynthesis> = $r5;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final android.graphics.Typeface invoke()
    {
        androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$1$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.text.font.FontStyle $r2;
        androidx.compose.ui.text.font.FontStyle$Companion $r3;
        int $i0, $i4, $i5;
        androidx.compose.ui.text.font.FontWeight$Companion $r4;
        androidx.compose.ui.text.font.FontWeight $r5, $r8;
        androidx.compose.ui.text.font.FontFamily$Resolver $r6;
        androidx.compose.ui.text.font.FontFamily $r7;
        androidx.compose.ui.text.font.FontSynthesis $r12;
        androidx.compose.ui.text.font.FontSynthesis$Companion $r13;
        androidx.compose.runtime.State $r14;
        android.graphics.Typeface $r15;

        r0 := @this: androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$1$1;

        $r6 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$1$1: androidx.compose.ui.text.font.FontFamily$Resolver $fontFamilyResolver>;

        $r7 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$1$1: androidx.compose.ui.text.font.FontFamily $fontFamily>;

        $r8 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$1$1: androidx.compose.ui.text.font.FontWeight $fontWeight>;

        if $r8 != null goto label1;

        $r4 = <androidx.compose.ui.text.font.FontWeight: androidx.compose.ui.text.font.FontWeight$Companion Companion>;

        $r5 = virtualinvoke $r4.<androidx.compose.ui.text.font.FontWeight$Companion: androidx.compose.ui.text.font.FontWeight getNormal()>();

        $r8 = $r5;

     label1:
        $r2 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$1$1: androidx.compose.ui.text.font.FontStyle $fontStyle>;

        if $r2 == null goto label2;

        $i0 = virtualinvoke $r2.<androidx.compose.ui.text.font.FontStyle: int unbox-impl()>();

        $i4 = $i0;

        goto label3;

     label2:
        $r3 = <androidx.compose.ui.text.font.FontStyle: androidx.compose.ui.text.font.FontStyle$Companion Companion>;

        $i4 = virtualinvoke $r3.<androidx.compose.ui.text.font.FontStyle$Companion: int getNormal-_-LCdwA()>();

     label3:
        $r12 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$1$1: androidx.compose.ui.text.font.FontSynthesis $fontSynthesis>;

        if $r12 == null goto label4;

        $i5 = virtualinvoke $r12.<androidx.compose.ui.text.font.FontSynthesis: int unbox-impl()>();

        goto label5;

     label4:
        $r13 = <androidx.compose.ui.text.font.FontSynthesis: androidx.compose.ui.text.font.FontSynthesis$Companion Companion>;

        $i5 = virtualinvoke $r13.<androidx.compose.ui.text.font.FontSynthesis$Companion: int getAll-GVVA2EU()>();

     label5:
        $r14 = interfaceinvoke $r6.<androidx.compose.ui.text.font.FontFamily$Resolver: androidx.compose.runtime.State resolve-DPcqOEQ(androidx.compose.ui.text.font.FontFamily,androidx.compose.ui.text.font.FontWeight,int,int)>($r7, $r8, $i4, $i5);

        r1 = interfaceinvoke $r14.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r1, "null cannot be cast to non-null type android.graphics.Typeface");

        $r15 = (android.graphics.Typeface) r1;

        return $r15;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$1$1 r0;
        android.graphics.Typeface $r1;

        r0 := @this: androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$1$1;

        $r1 = virtualinvoke r0.<androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$1$1: android.graphics.Typeface invoke()>();

        return $r1;
    }

androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$2
<androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$2: androidx.wear.compose.foundation.CurvedTextDelegate $tmp0_rcvr>
<androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$2: androidx.compose.ui.text.font.FontFamily $fontFamily>
<androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$2: androidx.compose.ui.text.font.FontWeight $fontWeight>
<androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$2: androidx.compose.ui.text.font.FontStyle $fontStyle>
<androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$2: androidx.compose.ui.text.font.FontSynthesis $fontSynthesis>
<androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$2: int $$changed>
    void <init>(androidx.wear.compose.foundation.CurvedTextDelegate, androidx.compose.ui.text.font.FontFamily, androidx.compose.ui.text.font.FontWeight, androidx.compose.ui.text.font.FontStyle, androidx.compose.ui.text.font.FontSynthesis, int)
    {
        androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$2 r0;
        androidx.wear.compose.foundation.CurvedTextDelegate $r1;
        androidx.compose.ui.text.font.FontFamily $r2;
        androidx.compose.ui.text.font.FontWeight $r3;
        androidx.compose.ui.text.font.FontStyle $r4;
        androidx.compose.ui.text.font.FontSynthesis $r5;
        int $i0;

        r0 := @this: androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$2;

        $r1 := @parameter0: androidx.wear.compose.foundation.CurvedTextDelegate;

        $r2 := @parameter1: androidx.compose.ui.text.font.FontFamily;

        $r3 := @parameter2: androidx.compose.ui.text.font.FontWeight;

        $r4 := @parameter3: androidx.compose.ui.text.font.FontStyle;

        $r5 := @parameter4: androidx.compose.ui.text.font.FontSynthesis;

        $i0 := @parameter5: int;

        r0.<androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$2: androidx.wear.compose.foundation.CurvedTextDelegate $tmp0_rcvr> = $r1;

        r0.<androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$2: androidx.compose.ui.text.font.FontFamily $fontFamily> = $r2;

        r0.<androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$2: androidx.compose.ui.text.font.FontWeight $fontWeight> = $r3;

        r0.<androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$2: androidx.compose.ui.text.font.FontStyle $fontStyle> = $r4;

        r0.<androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$2: androidx.compose.ui.text.font.FontSynthesis $fontSynthesis> = $r5;

        r0.<androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$2: int $$changed> = $i0;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public final void invoke(androidx.compose.runtime.Composer, int)
    {
        androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$2 r0;
        androidx.compose.runtime.Composer $r1;
        int $i0, $i1, $i2;
        androidx.compose.ui.text.font.FontSynthesis $r2;
        androidx.compose.ui.text.font.FontStyle $r3;
        androidx.compose.ui.text.font.FontWeight $r4;
        androidx.compose.ui.text.font.FontFamily $r5;
        androidx.wear.compose.foundation.CurvedTextDelegate $r6;

        r0 := @this: androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$2;

        $r1 := @parameter0: androidx.compose.runtime.Composer;

        $i0 := @parameter1: int;

        $r6 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$2: androidx.wear.compose.foundation.CurvedTextDelegate $tmp0_rcvr>;

        $r5 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$2: androidx.compose.ui.text.font.FontFamily $fontFamily>;

        $r4 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$2: androidx.compose.ui.text.font.FontWeight $fontWeight>;

        $r3 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$2: androidx.compose.ui.text.font.FontStyle $fontStyle>;

        $r2 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$2: androidx.compose.ui.text.font.FontSynthesis $fontSynthesis>;

        $i1 = r0.<androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$2: int $$changed>;

        $i2 = $i1 | 1;

        virtualinvoke $r6.<androidx.wear.compose.foundation.CurvedTextDelegate: void UpdateFontIfNeeded-SyNm_b8(androidx.compose.ui.text.font.FontFamily,androidx.compose.ui.text.font.FontWeight,androidx.compose.ui.text.font.FontStyle,androidx.compose.ui.text.font.FontSynthesis,androidx.compose.runtime.Composer,int)>($r5, $r4, $r3, $r2, $r1, $i2);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$2 r0;
        java.lang.Object r1, r2;
        java.lang.Number $r3;
        androidx.compose.runtime.Composer $r4;
        int $i0;
        kotlin.Unit $r5;

        r0 := @this: androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.compose.runtime.Composer) r1;

        $r3 = (java.lang.Number) r2;

        $i0 = virtualinvoke $r3.<java.lang.Number: int intValue()>();

        virtualinvoke r0.<androidx.wear.compose.foundation.CurvedTextDelegate$UpdateFontIfNeeded$2: void invoke(androidx.compose.runtime.Composer,int)>($r4, $i0);

        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r5;
    }

