androidx.camera.camera2.internal.compat.workaround.MaxPreviewSize
<androidx.camera.camera2.internal.compat.workaround.MaxPreviewSize: androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk mExtraCroppingQuirk>
    public void <init>()
    {
        androidx.camera.camera2.internal.compat.workaround.MaxPreviewSize r0;
        androidx.camera.core.impl.Quirk $r1;
        androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk $r2;

        r0 := @this: androidx.camera.camera2.internal.compat.workaround.MaxPreviewSize;

        $r1 = staticinvoke <androidx.camera.camera2.internal.compat.quirk.DeviceQuirks: androidx.camera.core.impl.Quirk get(java.lang.Class)>(class "Landroidx/camera/camera2/internal/compat/quirk/ExtraCroppingQuirk;");

        $r2 = (androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk) $r1;

        specialinvoke r0.<androidx.camera.camera2.internal.compat.workaround.MaxPreviewSize: void <init>(androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk)>($r2);

        return;
    }

    void <init>(androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk)
    {
        androidx.camera.camera2.internal.compat.workaround.MaxPreviewSize r0;
        androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk r1;

        r0 := @this: androidx.camera.camera2.internal.compat.workaround.MaxPreviewSize;

        r1 := @parameter0: androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.camera2.internal.compat.workaround.MaxPreviewSize: androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk mExtraCroppingQuirk> = r1;

        return;
    }

    public android.util.Size getMaxPreviewResolution(android.util.Size)
    {
        androidx.camera.camera2.internal.compat.workaround.MaxPreviewSize r0;
        android.util.Size r1, r2, $r6;
        boolean z0, $z1;
        androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk $r3, $r5;
        androidx.camera.core.impl.SurfaceConfig$ConfigType $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: androidx.camera.camera2.internal.compat.workaround.MaxPreviewSize;

        r1 := @parameter0: android.util.Size;

        $r3 = r0.<androidx.camera.camera2.internal.compat.workaround.MaxPreviewSize: androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk mExtraCroppingQuirk>;

        if $r3 != null goto label1;

        return r1;

     label1:
        $r5 = r0.<androidx.camera.camera2.internal.compat.workaround.MaxPreviewSize: androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk mExtraCroppingQuirk>;

        $r4 = <androidx.camera.core.impl.SurfaceConfig$ConfigType: androidx.camera.core.impl.SurfaceConfig$ConfigType PRIV>;

        r2 = virtualinvoke $r5.<androidx.camera.camera2.internal.compat.quirk.ExtraCroppingQuirk: android.util.Size getVerifiedResolution(androidx.camera.core.impl.SurfaceConfig$ConfigType)>($r4);

        if r2 != null goto label2;

        return r1;

     label2:
        $i0 = virtualinvoke r2.<android.util.Size: int getWidth()>();

        $i1 = virtualinvoke r2.<android.util.Size: int getHeight()>();

        $i2 = $i0 * $i1;

        $i3 = virtualinvoke r1.<android.util.Size: int getWidth()>();

        $i4 = virtualinvoke r1.<android.util.Size: int getHeight()>();

        $i5 = $i3 * $i4;

        if $i2 <= $i5 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        z0 = $z1;

        if z0 == 0 goto label5;

        $r6 = r2;

        goto label6;

     label5:
        $r6 = r1;

     label6:
        return $r6;
    }

