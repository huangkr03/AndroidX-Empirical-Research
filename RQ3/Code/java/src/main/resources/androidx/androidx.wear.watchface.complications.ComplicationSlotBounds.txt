androidx.wear.watchface.complications.ComplicationSlotBounds
<androidx.wear.watchface.complications.ComplicationSlotBounds: androidx.wear.watchface.complications.ComplicationSlotBounds$Companion Companion>
<androidx.wear.watchface.complications.ComplicationSlotBounds: java.util.Map perComplicationTypeBounds>
<androidx.wear.watchface.complications.ComplicationSlotBounds: java.lang.String NODE_NAME>
    public void <init>(java.util.Map)
    {
        androidx.wear.watchface.complications.ComplicationSlotBounds r0;
        java.util.Map r1, $r4, $r6;
        androidx.wear.watchface.complications.data.ComplicationType[] r2, $r5;
        int i0, $i1, $i2, $i3;
        androidx.wear.watchface.complications.data.ComplicationType r3;
        boolean $z0, $z1;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.IllegalArgumentException $r10, $r12;
        java.lang.String $r11, $r13, $r14, $r15;

        r0 := @this: androidx.wear.watchface.complications.ComplicationSlotBounds;

        r1 := @parameter0: java.util.Map;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "perComplicationTypeBounds");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.wear.watchface.complications.ComplicationSlotBounds: java.util.Map perComplicationTypeBounds> = r1;

        $r4 = r0.<androidx.wear.watchface.complications.ComplicationSlotBounds: java.util.Map perComplicationTypeBounds>;

        $i1 = interfaceinvoke $r4.<java.util.Map: int size()>();

        $r5 = staticinvoke <androidx.wear.watchface.complications.data.ComplicationType: androidx.wear.watchface.complications.data.ComplicationType[] values()>();

        $i2 = lengthof $r5;

        if $i1 != $i2 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 != 0 goto label3;

        $r14 = "ComplicationSlotBounds must contain entries for each ComplicationType";

        $r12 = new java.lang.IllegalArgumentException;

        $r13 = virtualinvoke $r14.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label3:
        r2 = staticinvoke <androidx.wear.watchface.complications.data.ComplicationType: androidx.wear.watchface.complications.data.ComplicationType[] values()>();

        $i3 = 0;

        i0 = lengthof r2;

     label4:
        if $i3 >= i0 goto label6;

        r3 = r2[$i3];

        $r6 = r0.<androidx.wear.watchface.complications.ComplicationSlotBounds: java.util.Map perComplicationTypeBounds>;

        $z0 = interfaceinvoke $r6.<java.util.Map: boolean containsKey(java.lang.Object)>(r3);

        if $z0 != 0 goto label5;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing bounds for ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r15 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = virtualinvoke $r15.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label5:
        $i3 = $i3 + 1;

        goto label4;

     label6:
        return;
    }

    public final java.util.Map getPerComplicationTypeBounds()
    {
        androidx.wear.watchface.complications.ComplicationSlotBounds r0;
        java.util.Map $r1;

        r0 := @this: androidx.wear.watchface.complications.ComplicationSlotBounds;

        $r1 = r0.<androidx.wear.watchface.complications.ComplicationSlotBounds: java.util.Map perComplicationTypeBounds>;

        return $r1;
    }

    public final void write(java.io.DataOutputStream)
    {
        androidx.wear.watchface.complications.ComplicationSlotBounds r0;
        java.io.DataOutputStream r1;
        java.lang.Iterable $r2, $r9;
        java.util.Iterator r3;
        java.lang.Object r4, $r12;
        androidx.wear.watchface.complications.data.ComplicationType r5;
        android.graphics.RectF r6;
        java.util.Map $r7, $r11;
        java.util.Set $r8;
        java.util.SortedSet $r10;
        boolean $z2;
        int $i0;
        float $f0, $f1, $f2, $f3;

        r0 := @this: androidx.wear.watchface.complications.ComplicationSlotBounds;

        r1 := @parameter0: java.io.DataOutputStream;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "dos");

        $r7 = r0.<androidx.wear.watchface.complications.ComplicationSlotBounds: java.util.Map perComplicationTypeBounds>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set keySet()>();

        $r9 = (java.lang.Iterable) $r8;

        $r10 = staticinvoke <kotlin.collections.CollectionsKt: java.util.SortedSet toSortedSet(java.lang.Iterable)>($r9);

        $r2 = (java.lang.Iterable) $r10;

        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.wear.watchface.complications.data.ComplicationType) r4;

        $r11 = r0.<androidx.wear.watchface.complications.ComplicationSlotBounds: java.util.Map perComplicationTypeBounds>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r12);

        r6 = (android.graphics.RectF) $r12;

        $i0 = virtualinvoke r5.<androidx.wear.watchface.complications.data.ComplicationType: int toWireComplicationType()>();

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>($i0);

        $f0 = r6.<android.graphics.RectF: float left>;

        virtualinvoke r1.<java.io.DataOutputStream: void writeFloat(float)>($f0);

        $f1 = r6.<android.graphics.RectF: float right>;

        virtualinvoke r1.<java.io.DataOutputStream: void writeFloat(float)>($f1);

        $f2 = r6.<android.graphics.RectF: float top>;

        virtualinvoke r1.<java.io.DataOutputStream: void writeFloat(float)>($f2);

        $f3 = r6.<android.graphics.RectF: float bottom>;

        virtualinvoke r1.<java.io.DataOutputStream: void writeFloat(float)>($f3);

        goto label1;

     label2:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.wear.watchface.complications.ComplicationSlotBounds r0, $r3, $r4;
        java.lang.Object r1;
        java.lang.Class $r2, $r8;
        boolean $z0, $z1;
        java.util.Map $r5, $r6;
        java.lang.NullPointerException $r7;

        r0 := @this: androidx.wear.watchface.complications.ComplicationSlotBounds;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if r1 == null goto label2;

        $r8 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        goto label3;

     label2:
        $r8 = null;

     label3:
        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r8);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        if r1 != null goto label5;

        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type androidx.wear.watchface.complications.ComplicationSlotBounds");

        throw $r7;

     label5:
        $r3 = (androidx.wear.watchface.complications.ComplicationSlotBounds) r1;

        $r6 = r0.<androidx.wear.watchface.complications.ComplicationSlotBounds: java.util.Map perComplicationTypeBounds>;

        $r4 = (androidx.wear.watchface.complications.ComplicationSlotBounds) r1;

        $r5 = $r4.<androidx.wear.watchface.complications.ComplicationSlotBounds: java.util.Map perComplicationTypeBounds>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r6, $r5);

        return $z1;
    }

    public int hashCode()
    {
        androidx.wear.watchface.complications.ComplicationSlotBounds r0;
        java.util.Map $r1;
        java.util.SortedMap $r2;
        int $i0;

        r0 := @this: androidx.wear.watchface.complications.ComplicationSlotBounds;

        $r1 = r0.<androidx.wear.watchface.complications.ComplicationSlotBounds: java.util.Map perComplicationTypeBounds>;

        $r2 = staticinvoke <kotlin.collections.MapsKt: java.util.SortedMap toSortedMap(java.util.Map)>($r1);

        $i0 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public void <init>(android.graphics.RectF)
    {
        androidx.wear.watchface.complications.ComplicationSlotBounds r0, r7;
        android.graphics.RectF r1, r10;
        androidx.wear.watchface.complications.data.ComplicationType[] $r2;
        java.util.LinkedHashMap r3, $r11;
        int i0, $i1, $i2, $i3, i4;
        androidx.wear.watchface.complications.data.ComplicationType r5, r6, r9;
        java.util.Map r8, $r12;

        r0 := @this: androidx.wear.watchface.complications.ComplicationSlotBounds;

        r1 := @parameter0: android.graphics.RectF;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "bounds");

        $r2 = staticinvoke <androidx.wear.watchface.complications.data.ComplicationType: androidx.wear.watchface.complications.data.ComplicationType[] values()>();

        r7 = r0;

        $r11 = new java.util.LinkedHashMap;

        $i1 = lengthof $r2;

        $i2 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i1);

        $i3 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i2, 16);

        specialinvoke $r11.<java.util.LinkedHashMap: void <init>(int)>($i3);

        r3 = $r11;

        i4 = 0;

        i0 = lengthof $r2;

     label1:
        if i4 >= i0 goto label2;

        r5 = $r2[i4];

        r6 = r5;

        r9 = r5;

        r8 = (java.util.Map) r3;

        r10 = r1;

        interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r10);

        i4 = i4 + 1;

        goto label1;

     label2:
        $r12 = (java.util.Map) r3;

        specialinvoke r7.<androidx.wear.watchface.complications.ComplicationSlotBounds: void <init>(java.util.Map)>($r12);

        return;
    }

    static void <clinit>()
    {
        androidx.wear.watchface.complications.ComplicationSlotBounds$Companion $r0;

        $r0 = new androidx.wear.watchface.complications.ComplicationSlotBounds$Companion;

        specialinvoke $r0.<androidx.wear.watchface.complications.ComplicationSlotBounds$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.wear.watchface.complications.ComplicationSlotBounds: androidx.wear.watchface.complications.ComplicationSlotBounds$Companion Companion> = $r0;

        return;
    }

androidx.wear.watchface.complications.ComplicationSlotBounds$Companion$inflate$perComplicationTypeBounds$2
<androidx.wear.watchface.complications.ComplicationSlotBounds$Companion$inflate$perComplicationTypeBounds$2: androidx.wear.watchface.complications.ComplicationSlotBounds$Companion$inflate$perComplicationTypeBounds$2 INSTANCE>
    void <init>()
    {
        androidx.wear.watchface.complications.ComplicationSlotBounds$Companion$inflate$perComplicationTypeBounds$2 r0;

        r0 := @this: androidx.wear.watchface.complications.ComplicationSlotBounds$Companion$inflate$perComplicationTypeBounds$2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final java.util.HashMap invoke()
    {
        androidx.wear.watchface.complications.ComplicationSlotBounds$Companion$inflate$perComplicationTypeBounds$2 r0;
        java.util.HashMap $r1;

        r0 := @this: androidx.wear.watchface.complications.ComplicationSlotBounds$Companion$inflate$perComplicationTypeBounds$2;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        return $r1;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.wear.watchface.complications.ComplicationSlotBounds$Companion$inflate$perComplicationTypeBounds$2 r0;
        java.util.HashMap $r1;

        r0 := @this: androidx.wear.watchface.complications.ComplicationSlotBounds$Companion$inflate$perComplicationTypeBounds$2;

        $r1 = virtualinvoke r0.<androidx.wear.watchface.complications.ComplicationSlotBounds$Companion$inflate$perComplicationTypeBounds$2: java.util.HashMap invoke()>();

        return $r1;
    }

    static void <clinit>()
    {
        androidx.wear.watchface.complications.ComplicationSlotBounds$Companion$inflate$perComplicationTypeBounds$2 $r0;

        $r0 = new androidx.wear.watchface.complications.ComplicationSlotBounds$Companion$inflate$perComplicationTypeBounds$2;

        specialinvoke $r0.<androidx.wear.watchface.complications.ComplicationSlotBounds$Companion$inflate$perComplicationTypeBounds$2: void <init>()>();

        <androidx.wear.watchface.complications.ComplicationSlotBounds$Companion$inflate$perComplicationTypeBounds$2: androidx.wear.watchface.complications.ComplicationSlotBounds$Companion$inflate$perComplicationTypeBounds$2 INSTANCE> = $r0;

        return;
    }

androidx.wear.watchface.complications.ComplicationSlotBounds$Companion
    private void <init>()
    {
        androidx.wear.watchface.complications.ComplicationSlotBounds$Companion r0;

        r0 := @this: androidx.wear.watchface.complications.ComplicationSlotBounds$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.wear.watchface.complications.ComplicationSlotBounds createFromPartialMap(java.util.Map)
    {
        androidx.wear.watchface.complications.ComplicationSlotBounds$Companion r0;
        java.util.Map r1, $r7;
        java.util.HashMap r2, $r5;
        androidx.wear.watchface.complications.data.ComplicationType[] r3;
        int i0, i1;
        androidx.wear.watchface.complications.data.ComplicationType r4;
        androidx.wear.watchface.complications.ComplicationSlotBounds $r6;
        android.graphics.RectF $r8;

        r0 := @this: androidx.wear.watchface.complications.ComplicationSlotBounds$Companion;

        r1 := @parameter0: java.util.Map;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "partialPerComplicationTypeBounds");

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>(java.util.Map)>(r1);

        r2 = $r5;

        r3 = staticinvoke <androidx.wear.watchface.complications.data.ComplicationType: androidx.wear.watchface.complications.data.ComplicationType[] values()>();

        i1 = 0;

        i0 = lengthof r3;

     label1:
        if i1 >= i0 goto label2;

        r4 = r3[i1];

        $r8 = new android.graphics.RectF;

        specialinvoke $r8.<android.graphics.RectF: void <init>()>();

        virtualinvoke r2.<java.util.HashMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(r4, $r8);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r6 = new androidx.wear.watchface.complications.ComplicationSlotBounds;

        $r7 = (java.util.Map) r2;

        specialinvoke $r6.<androidx.wear.watchface.complications.ComplicationSlotBounds: void <init>(java.util.Map)>($r7);

        return $r6;
    }

    public final androidx.wear.watchface.complications.ComplicationSlotBounds inflate(android.content.res.Resources, android.content.res.XmlResourceParser)
    {
        androidx.wear.watchface.complications.ComplicationSlotBounds$Companion r0;
        android.content.res.Resources r1;
        android.content.res.XmlResourceParser r2;
        int i0, $i1, $i2, $i3, i4, i5, i6;
        kotlin.Lazy r3;
        android.graphics.RectF r4, $r42;
        androidx.wear.watchface.complications.ComplicationSlotBounds$Companion$inflate$perComplicationTypeBounds$2 $r5;
        kotlin.jvm.functions.Function0 $r6;
        java.util.HashMap $r7, $r8, $r21, $r23, $r32, $r34;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, $z8;
        java.util.Map $r9, $r22, $r24, $r33, $r35;
        java.lang.String $r10, $r14, $r18, $r20, $r30, $r41, r44, $r47;
        java.lang.IllegalArgumentException $r11, $r19, $r29, $r40;
        java.lang.StringBuilder $r12, $r13, $r15, $r16, $r17, $r26, $r27, $r28, $r37, $r38, $r39;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, f10, f11, f12, f13;
        androidx.wear.watchface.complications.data.ComplicationType$Companion $r31;
        androidx.wear.watchface.complications.data.ComplicationType r43, r46;
        androidx.wear.watchface.complications.data.ComplicationType[] r45;
        androidx.wear.watchface.complications.ComplicationSlotBounds $r48;

        r0 := @this: androidx.wear.watchface.complications.ComplicationSlotBounds$Companion;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: android.content.res.XmlResourceParser;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "resources");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "parser");

        i4 = 0;

        i0 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int getDepth()>();

        $r5 = <androidx.wear.watchface.complications.ComplicationSlotBounds$Companion$inflate$perComplicationTypeBounds$2: androidx.wear.watchface.complications.ComplicationSlotBounds$Companion$inflate$perComplicationTypeBounds$2 INSTANCE>;

        $r6 = (kotlin.jvm.functions.Function0) $r5;

        r3 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r6);

     label01:
        if i4 != 2 goto label14;

        $r10 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r10, "ComplicationSlotBounds");

        if $z1 == 0 goto label13;

        $z2 = staticinvoke <androidx.wear.watchface.complications.ComplicationSlotBoundsKt: boolean hasValue(android.content.res.XmlResourceParser,java.lang.String)>(r2, "left");

        if $z2 == 0 goto label02;

        $r42 = new android.graphics.RectF;

        $f6 = staticinvoke <androidx.wear.watchface.complications.ComplicationSlotBoundsKt: float requireAndGet(android.content.res.XmlResourceParser,java.lang.String,android.content.res.Resources)>(r2, "left", r1);

        $f7 = staticinvoke <androidx.wear.watchface.complications.ComplicationSlotBoundsKt: float requireAndGet(android.content.res.XmlResourceParser,java.lang.String,android.content.res.Resources)>(r2, "top", r1);

        $f8 = staticinvoke <androidx.wear.watchface.complications.ComplicationSlotBoundsKt: float requireAndGet(android.content.res.XmlResourceParser,java.lang.String,android.content.res.Resources)>(r2, "right", r1);

        $f9 = staticinvoke <androidx.wear.watchface.complications.ComplicationSlotBoundsKt: float requireAndGet(android.content.res.XmlResourceParser,java.lang.String,android.content.res.Resources)>(r2, "bottom", r1);

        specialinvoke $r42.<android.graphics.RectF: void <init>(float,float,float,float)>($f6, $f7, $f8, $f9);

        goto label04;

     label02:
        $z3 = staticinvoke <androidx.wear.watchface.complications.ComplicationSlotBoundsKt: boolean hasValue(android.content.res.XmlResourceParser,java.lang.String)>(r2, "center_x");

        if $z3 == 0 goto label03;

        $f0 = staticinvoke <androidx.wear.watchface.complications.ComplicationSlotBoundsKt: float requireAndGet(android.content.res.XmlResourceParser,java.lang.String,android.content.res.Resources)>(r2, "size_x", r1);

        f10 = $f0 / 2.0F;

        $f1 = staticinvoke <androidx.wear.watchface.complications.ComplicationSlotBoundsKt: float requireAndGet(android.content.res.XmlResourceParser,java.lang.String,android.content.res.Resources)>(r2, "size_y", r1);

        f11 = $f1 / 2.0F;

        f12 = staticinvoke <androidx.wear.watchface.complications.ComplicationSlotBoundsKt: float requireAndGet(android.content.res.XmlResourceParser,java.lang.String,android.content.res.Resources)>(r2, "center_x", r1);

        f13 = staticinvoke <androidx.wear.watchface.complications.ComplicationSlotBoundsKt: float requireAndGet(android.content.res.XmlResourceParser,java.lang.String,android.content.res.Resources)>(r2, "center_y", r1);

        $r42 = new android.graphics.RectF;

        $f5 = f12 - f10;

        $f4 = f13 - f11;

        $f3 = f12 + f10;

        $f2 = f13 + f11;

        specialinvoke $r42.<android.graphics.RectF: void <init>(float,float,float,float)>($f5, $f4, $f3, $f2);

        goto label04;

     label03:
        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ComplicationSlotBounds must either define top, bottom, left, rightor center_x, center_y, size_x, size_y should be specified");

        throw $r19;

     label04:
        r4 = $r42;

        $r20 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("http://schemas.android.com/apk/res-auto", "complicationType");

        if $r20 == null goto label08;

        $r31 = <androidx.wear.watchface.complications.data.ComplicationType: androidx.wear.watchface.complications.data.ComplicationType$Companion Companion>;

        $i3 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int getAttributeIntValue(java.lang.String,java.lang.String,int)>("http://schemas.android.com/apk/res-auto", "complicationType", 0);

        r43 = virtualinvoke $r31.<androidx.wear.watchface.complications.data.ComplicationType$Companion: androidx.wear.watchface.complications.data.ComplicationType fromWireType(int)>($i3);

        $r32 = staticinvoke <androidx.wear.watchface.complications.ComplicationSlotBounds$Companion: java.util.HashMap inflate$lambda-0(kotlin.Lazy)>(r3);

        $r33 = (java.util.Map) $r32;

        $z5 = interfaceinvoke $r33.<java.util.Map: boolean containsKey(java.lang.Object)>(r43);

        if $z5 != 0 goto label05;

        $z6 = 1;

        goto label06;

     label05:
        $z6 = 0;

     label06:
        if $z6 != 0 goto label07;

        z7 = 0;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r43);

        r44 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        $r40 = new java.lang.IllegalArgumentException;

        $r41 = virtualinvoke r44.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r40.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r41);

        throw $r40;

     label07:
        $r34 = staticinvoke <androidx.wear.watchface.complications.ComplicationSlotBounds$Companion: java.util.HashMap inflate$lambda-0(kotlin.Lazy)>(r3);

        $r35 = (java.util.Map) $r34;

        interfaceinvoke $r35.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r43, r4);

        goto label14;

     label08:
        r45 = staticinvoke <androidx.wear.watchface.complications.data.ComplicationType: androidx.wear.watchface.complications.data.ComplicationType[] values()>();

        i5 = 0;

        i6 = lengthof r45;

     label09:
        if i5 >= i6 goto label14;

        r46 = r45[i5];

        $r21 = staticinvoke <androidx.wear.watchface.complications.ComplicationSlotBounds$Companion: java.util.HashMap inflate$lambda-0(kotlin.Lazy)>(r3);

        $r22 = (java.util.Map) $r21;

        $z4 = interfaceinvoke $r22.<java.util.Map: boolean containsKey(java.lang.Object)>(r46);

        if $z4 != 0 goto label10;

        $z8 = 1;

        goto label11;

     label10:
        $z8 = 0;

     label11:
        if $z8 != 0 goto label12;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r46);

        $r47 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        $r29 = new java.lang.IllegalArgumentException;

        $r30 = virtualinvoke $r47.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r29.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r30);

        throw $r29;

     label12:
        $r23 = staticinvoke <androidx.wear.watchface.complications.ComplicationSlotBounds$Companion: java.util.HashMap inflate$lambda-0(kotlin.Lazy)>(r3);

        $r24 = (java.util.Map) $r23;

        interfaceinvoke $r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r46, r4);

        i5 = i5 + 1;

        goto label09;

     label13:
        $r11 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected node ");

        $r14 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at line ");

        $i2 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int getLineNumber()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r11;

     label14:
        i4 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int next()>();

        if i4 == 1 goto label15;

        $i1 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int getDepth()>();

        if $i1 > i0 goto label01;

     label15:
        $r7 = staticinvoke <androidx.wear.watchface.complications.ComplicationSlotBounds$Companion: java.util.HashMap inflate$lambda-0(kotlin.Lazy)>(r3);

        $z0 = virtualinvoke $r7.<java.util.HashMap: boolean isEmpty()>();

        if $z0 == 0 goto label16;

        $r48 = (androidx.wear.watchface.complications.ComplicationSlotBounds) null;

        goto label17;

     label16:
        $r8 = staticinvoke <androidx.wear.watchface.complications.ComplicationSlotBounds$Companion: java.util.HashMap inflate$lambda-0(kotlin.Lazy)>(r3);

        $r9 = (java.util.Map) $r8;

        $r48 = virtualinvoke r0.<androidx.wear.watchface.complications.ComplicationSlotBounds$Companion: androidx.wear.watchface.complications.ComplicationSlotBounds createFromPartialMap(java.util.Map)>($r9);

     label17:
        return $r48;
    }

    private static final java.util.HashMap inflate$lambda-0(kotlin.Lazy)
    {
        kotlin.Lazy $r0, r1;
        java.lang.Object $r2;
        java.util.HashMap $r3;

        $r0 := @parameter0: kotlin.Lazy;

        r1 = $r0;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.util.HashMap) $r2;

        return $r3;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.wear.watchface.complications.ComplicationSlotBounds$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.wear.watchface.complications.ComplicationSlotBounds$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.wear.watchface.complications.ComplicationSlotBounds$Companion: void <init>()>();

        return;
    }

