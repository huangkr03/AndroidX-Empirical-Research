androidx.camera.core.ImageAnalysisNonBlockingAnalyzer
<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer: java.util.concurrent.Executor mBackgroundExecutor>
<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer: java.lang.Object mLock>
<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer: androidx.camera.core.ImageProxy mCachedImage>
<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer: androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$CacheAnalyzingImageProxy mPostedImage>
    void <init>(java.util.concurrent.Executor)
    {
        androidx.camera.core.ImageAnalysisNonBlockingAnalyzer r0;
        java.util.concurrent.Executor r1;
        java.lang.Object $r2;

        r0 := @this: androidx.camera.core.ImageAnalysisNonBlockingAnalyzer;

        r1 := @parameter0: java.util.concurrent.Executor;

        specialinvoke r0.<androidx.camera.core.ImageAnalysisAbstractAnalyzer: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer: java.lang.Object mLock> = $r2;

        r0.<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer: java.util.concurrent.Executor mBackgroundExecutor> = r1;

        return;
    }

    androidx.camera.core.ImageProxy acquireImage(androidx.camera.core.impl.ImageReaderProxy)
    {
        androidx.camera.core.ImageAnalysisNonBlockingAnalyzer r0;
        androidx.camera.core.impl.ImageReaderProxy r1;
        androidx.camera.core.ImageProxy $r2;

        r0 := @this: androidx.camera.core.ImageAnalysisNonBlockingAnalyzer;

        r1 := @parameter0: androidx.camera.core.impl.ImageReaderProxy;

        $r2 = interfaceinvoke r1.<androidx.camera.core.impl.ImageReaderProxy: androidx.camera.core.ImageProxy acquireLatestImage()>();

        return $r2;
    }

    void onValidImageAvailable(androidx.camera.core.ImageProxy)
    {
        androidx.camera.core.ImageAnalysisNonBlockingAnalyzer r0;
        androidx.camera.core.ImageProxy r1, $r14, $r15;
        java.lang.Object r2, $r5;
        androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$CacheAnalyzingImageProxy r3, $r6, $r7, $r12;
        java.lang.Throwable r4, $r16;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r8;
        androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$1 $r9;
        java.util.concurrent.Executor $r10;
        androidx.camera.core.ImageInfo $r11, $r13;
        long $l0, $l1;
        byte $b2;

        r0 := @this: androidx.camera.core.ImageAnalysisNonBlockingAnalyzer;

        r1 := @parameter0: androidx.camera.core.ImageProxy;

        $r5 = r0.<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer: java.lang.Object mLock>;

        r2 = $r5;

        entermonitor $r5;

     label01:
        $z0 = r0.<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer: boolean mIsAttached>;

        if $z0 != 0 goto label03;

        interfaceinvoke r1.<androidx.camera.core.ImageProxy: void close()>();

        exitmonitor r2;

     label02:
        return;

     label03:
        $r6 = r0.<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer: androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$CacheAnalyzingImageProxy mPostedImage>;

        if $r6 == null goto label08;

        $r11 = interfaceinvoke r1.<androidx.camera.core.ImageProxy: androidx.camera.core.ImageInfo getImageInfo()>();

        $l0 = interfaceinvoke $r11.<androidx.camera.core.ImageInfo: long getTimestamp()>();

        $r12 = r0.<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer: androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$CacheAnalyzingImageProxy mPostedImage>;

        $r13 = virtualinvoke $r12.<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$CacheAnalyzingImageProxy: androidx.camera.core.ImageInfo getImageInfo()>();

        $l1 = interfaceinvoke $r13.<androidx.camera.core.ImageInfo: long getTimestamp()>();

        $b2 = $l0 cmp $l1;

        if $b2 > 0 goto label04;

        interfaceinvoke r1.<androidx.camera.core.ImageProxy: void close()>();

        goto label06;

     label04:
        $r14 = r0.<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer: androidx.camera.core.ImageProxy mCachedImage>;

        if $r14 == null goto label05;

        $r15 = r0.<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer: androidx.camera.core.ImageProxy mCachedImage>;

        interfaceinvoke $r15.<androidx.camera.core.ImageProxy: void close()>();

     label05:
        r0.<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer: androidx.camera.core.ImageProxy mCachedImage> = r1;

     label06:
        exitmonitor r2;

     label07:
        return;

     label08:
        $r7 = new androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$CacheAnalyzingImageProxy;

        specialinvoke $r7.<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$CacheAnalyzingImageProxy: void <init>(androidx.camera.core.ImageProxy,androidx.camera.core.ImageAnalysisNonBlockingAnalyzer)>(r1, r0);

        r3 = $r7;

        r0.<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer: androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$CacheAnalyzingImageProxy mPostedImage> = r3;

        $r8 = virtualinvoke r0.<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer: com.google.common.util.concurrent.ListenableFuture analyzeImage(androidx.camera.core.ImageProxy)>(r3);

        $r9 = new androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$1;

        specialinvoke $r9.<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$1: void <init>(androidx.camera.core.ImageAnalysisNonBlockingAnalyzer,androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$CacheAnalyzingImageProxy)>(r0, r3);

        $r10 = staticinvoke <androidx.camera.core.impl.utils.executor.CameraXExecutors: java.util.concurrent.Executor directExecutor()>();

        staticinvoke <androidx.camera.core.impl.utils.futures.Futures: void addCallback(com.google.common.util.concurrent.ListenableFuture,androidx.camera.core.impl.utils.futures.FutureCallback,java.util.concurrent.Executor)>($r8, $r9, $r10);

        exitmonitor r2;

     label09:
        goto label12;

     label10:
        $r16 := @caughtexception;

        r4 = $r16;

        exitmonitor r2;

     label11:
        throw r4;

     label12:
        return;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    void clearCache()
    {
        androidx.camera.core.ImageAnalysisNonBlockingAnalyzer r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        androidx.camera.core.ImageProxy $r4, $r5;

        r0 := @this: androidx.camera.core.ImageAnalysisNonBlockingAnalyzer;

        $r3 = r0.<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer: androidx.camera.core.ImageProxy mCachedImage>;

        if $r4 == null goto label2;

        $r5 = r0.<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer: androidx.camera.core.ImageProxy mCachedImage>;

        interfaceinvoke $r5.<androidx.camera.core.ImageProxy: void close()>();

        r0.<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer: androidx.camera.core.ImageProxy mCachedImage> = null;

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    void analyzeCachedImage()
    {
        androidx.camera.core.ImageAnalysisNonBlockingAnalyzer r0;
        java.lang.Object r1, $r4;
        androidx.camera.core.ImageProxy r2, $r5;
        java.lang.Throwable r3, $r6;

        r0 := @this: androidx.camera.core.ImageAnalysisNonBlockingAnalyzer;

        $r4 = r0.<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer: java.lang.Object mLock>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        r0.<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer: androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$CacheAnalyzingImageProxy mPostedImage> = null;

        $r5 = r0.<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer: androidx.camera.core.ImageProxy mCachedImage>;

        if $r5 == null goto label2;

        r2 = r0.<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer: androidx.camera.core.ImageProxy mCachedImage>;

        r0.<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer: androidx.camera.core.ImageProxy mCachedImage> = null;

        virtualinvoke r0.<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer: void onValidImageAvailable(androidx.camera.core.ImageProxy)>(r2);

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r1;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$1
<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$1: androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$CacheAnalyzingImageProxy val$newPostedImage>
<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$1: androidx.camera.core.ImageAnalysisNonBlockingAnalyzer this$0>
    void <init>(androidx.camera.core.ImageAnalysisNonBlockingAnalyzer, androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$CacheAnalyzingImageProxy)
    {
        androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$1 r0;
        androidx.camera.core.ImageAnalysisNonBlockingAnalyzer r1;
        androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$CacheAnalyzingImageProxy r2;

        r0 := @this: androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$1;

        r1 := @parameter0: androidx.camera.core.ImageAnalysisNonBlockingAnalyzer;

        r2 := @parameter1: androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$CacheAnalyzingImageProxy;

        r0.<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$1: androidx.camera.core.ImageAnalysisNonBlockingAnalyzer this$0> = r1;

        r0.<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$1: androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$CacheAnalyzingImageProxy val$newPostedImage> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onSuccess(java.lang.Void)
    {
        androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$1 r0;
        java.lang.Void r1;

        r0 := @this: androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$1;

        r1 := @parameter0: java.lang.Void;

        return;
    }

    public void onFailure(java.lang.Throwable)
    {
        androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$1 r0;
        java.lang.Throwable r1;
        androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$CacheAnalyzingImageProxy $r2;

        r0 := @this: androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$1;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = r0.<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$1: androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$CacheAnalyzingImageProxy val$newPostedImage>;

        virtualinvoke $r2.<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$CacheAnalyzingImageProxy: void close()>();

        return;
    }

    public volatile void onSuccess(java.lang.Object)
    {
        androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$1 r0;
        java.lang.Object r1;
        java.lang.Void $r2;

        r0 := @this: androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Void) r1;

        virtualinvoke r0.<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$1: void onSuccess(java.lang.Void)>($r2);

        return;
    }

androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$CacheAnalyzingImageProxy
<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$CacheAnalyzingImageProxy: java.lang.ref.WeakReference mNonBlockingAnalyzerWeakReference>
    void <init>(androidx.camera.core.ImageProxy, androidx.camera.core.ImageAnalysisNonBlockingAnalyzer)
    {
        androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$CacheAnalyzingImageProxy r0;
        androidx.camera.core.ImageProxy r1;
        androidx.camera.core.ImageAnalysisNonBlockingAnalyzer r2;
        java.lang.ref.WeakReference $r3;
        androidx.camera.core.ForwardingImageProxy$OnImageCloseListener $r4;

        r0 := @this: androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$CacheAnalyzingImageProxy;

        r1 := @parameter0: androidx.camera.core.ImageProxy;

        r2 := @parameter1: androidx.camera.core.ImageAnalysisNonBlockingAnalyzer;

        specialinvoke r0.<androidx.camera.core.ForwardingImageProxy: void <init>(androidx.camera.core.ImageProxy)>(r1);

        $r3 = new java.lang.ref.WeakReference;

        specialinvoke $r3.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r2);

        r0.<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$CacheAnalyzingImageProxy: java.lang.ref.WeakReference mNonBlockingAnalyzerWeakReference> = $r3;

        $r4 = dynamicinvoke "onImageClose" <androidx.camera.core.ForwardingImageProxy$OnImageCloseListener (androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$CacheAnalyzingImageProxy)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.camera.core.ImageProxy), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$CacheAnalyzingImageProxy: void lambda$new$1(androidx.camera.core.ImageProxy)>, methodtype: void __METHODTYPE__(androidx.camera.core.ImageProxy));

        virtualinvoke r0.<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$CacheAnalyzingImageProxy: void addOnImageCloseListener(androidx.camera.core.ForwardingImageProxy$OnImageCloseListener)>($r4);

        return;
    }

    private void lambda$new$1(androidx.camera.core.ImageProxy)
    {
        androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$CacheAnalyzingImageProxy r0;
        androidx.camera.core.ImageProxy r1;
        androidx.camera.core.ImageAnalysisNonBlockingAnalyzer r2;
        java.lang.ref.WeakReference $r3;
        java.lang.Object $r4;
        java.util.concurrent.Executor $r5;
        java.lang.Runnable $r6;

        r0 := @this: androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$CacheAnalyzingImageProxy;

        r1 := @parameter0: androidx.camera.core.ImageProxy;

        $r3 = r0.<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$CacheAnalyzingImageProxy: java.lang.ref.WeakReference mNonBlockingAnalyzerWeakReference>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (androidx.camera.core.ImageAnalysisNonBlockingAnalyzer) $r4;

        if r2 == null goto label1;

        $r5 = r2.<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer: java.util.concurrent.Executor mBackgroundExecutor>;

        $r6 = dynamicinvoke "run" <java.lang.Runnable (androidx.camera.core.ImageAnalysisNonBlockingAnalyzer)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$CacheAnalyzingImageProxy: void lambda$new$0(androidx.camera.core.ImageAnalysisNonBlockingAnalyzer)>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r5.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r6);

     label1:
        return;
    }

    private static void lambda$new$0(androidx.camera.core.ImageAnalysisNonBlockingAnalyzer)
    {
        androidx.camera.core.ImageAnalysisNonBlockingAnalyzer r0;

        r0 := @parameter0: androidx.camera.core.ImageAnalysisNonBlockingAnalyzer;

        virtualinvoke r0.<androidx.camera.core.ImageAnalysisNonBlockingAnalyzer: void analyzeCachedImage()>();

        return;
    }

