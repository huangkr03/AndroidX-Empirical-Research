androidx.ui.tooling.preview.PreviewUtilsKt
<androidx.ui.tooling.preview.PreviewUtilsKt: int SLOTS_PER_INT>
<androidx.ui.tooling.preview.PreviewUtilsKt: int BITS_PER_INT>
    private static final boolean compatibleTypes(java.lang.Class[], java.lang.Class[])
    {
        java.lang.Class[] r0, r1, r2;
        int i0, i1, $i2, $i3, $i4, $i5, i6, i7;
        java.lang.Class r3, r4, $r11;
        java.util.Collection r5, $r10, r13;
        java.lang.Boolean r6, $r9;
        java.util.ArrayList $r7;
        java.util.List $r8;
        boolean $z1, $z2, $z3, $z8, $z9, $z10, z11, $z12;
        java.lang.Iterable $r14;
        java.util.Iterator $r15;
        java.lang.Object r16;

        r0 := @parameter0: java.lang.Class[];

        r1 := @parameter1: java.lang.Class[];

        $i3 = lengthof r0;

        $i2 = lengthof r1;

        if $i3 != $i2 goto label7;

        $r7 = new java.util.ArrayList;

        $i4 = lengthof r0;

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>($i4);

        r13 = (java.util.Collection) $r7;

        i6 = 0;

        r2 = r0;

        i0 = lengthof r2;

        i7 = 0;

     label1:
        if i7 >= i0 goto label2;

        r3 = r2[i7];

        $i5 = i6;

        i6 = i6 + 1;

        r4 = r3;

        i1 = $i5;

        r5 = r13;

        $r11 = r1[i1];

        $z3 = virtualinvoke r4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r11);

        r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);

        interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>(r6);

        i7 = i7 + 1;

        goto label1;

     label2:
        $r8 = (java.util.List) r13;

        $r14 = (java.lang.Iterable) $r8;

        $z1 = $r14 instanceof java.util.Collection;

        if $z1 == 0 goto label3;

        $r10 = (java.util.Collection) $r14;

        $z2 = interfaceinvoke $r10.<java.util.Collection: boolean isEmpty()>();

        if $z2 == 0 goto label3;

        $z8 = 1;

        goto label6;

     label3:
        $r15 = interfaceinvoke $r14.<java.lang.Iterable: java.util.Iterator iterator()>();

     label4:
        $z9 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label5;

        r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (java.lang.Boolean) r16;

        $z10 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

        z11 = 0;

        if $z10 != 0 goto label4;

        $z8 = 0;

        goto label6;

     label5:
        $z8 = 1;

     label6:
        if $z8 == 0 goto label7;

        $z12 = 1;

        goto label8;

     label7:
        $z12 = 0;

     label8:
        return $z12;
    }

    private static final transient java.lang.reflect.Method getDeclaredCompatibleMethod(java.lang.Class, java.lang.String, java.lang.Class[])
    {
        java.lang.Class $r0;
        java.lang.String r1, $r9, $r10;
        java.lang.Class[] r2, r3, r7, r11;
        java.lang.reflect.Method[] r4, $r12;
        int i0, $i1, $i2, i3;
        java.lang.reflect.Method r5, r6, $r13, r14;
        java.lang.NoSuchMethodException $r8;
        boolean $z2, $z3, $z4;

        $r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Class[];

        $i1 = lengthof r2;

        r11 = newarray (java.lang.Class)[$i1];

        $i2 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r11, 0, $i2);

        r3 = r11;

        $r12 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r12, "declaredMethods");

        r4 = $r12;

        i0 = lengthof r4;

        i3 = 0;

     label1:
        if i3 >= i0 goto label5;

        r5 = r4[i3];

        r6 = r5;

        $r10 = virtualinvoke r6.<java.lang.reflect.Method: java.lang.String getName()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, $r10);

        if $z2 == 0 goto label2;

        r7 = virtualinvoke r6.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r7, "it.parameterTypes");

        $z3 = staticinvoke <androidx.ui.tooling.preview.PreviewUtilsKt: boolean compatibleTypes(java.lang.Class[],java.lang.Class[])>(r7, r3);

        if $z3 == 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        if $z4 == 0 goto label4;

        $r13 = r5;

        goto label6;

     label4:
        i3 = i3 + 1;

        goto label1;

     label5:
        $r13 = null;

     label6:
        r14 = $r13;

        if r14 != null goto label7;

        $r8 = new java.lang.NoSuchMethodException;

        $r9 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>(r1, " not found");

        specialinvoke $r8.<java.lang.NoSuchMethodException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label7:
        return r14;
    }

    public static final java.lang.Object[] dup(java.lang.Object, int)
    {
        java.lang.Object $r0, r4;
        int i0, i1, i2, $i3;
        java.util.Collection r1, r3, $r13;
        java.util.Iterator r2;
        kotlin.ranges.IntRange $r5;
        java.util.ArrayList $r6;
        boolean $z3;
        java.util.List $r7;
        java.lang.Object[] $r8, $r9;
        java.lang.NullPointerException $r10;
        kotlin.collections.IntIterator $r11;
        java.lang.Iterable $r12;

        $r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(0, i0);

        $r12 = (java.lang.Iterable) $r5;

        $r6 = new java.util.ArrayList;

        $i3 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r12, 10);

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i3);

        r1 = (java.util.Collection) $r6;

        r2 = interfaceinvoke $r12.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        $r11 = (kotlin.collections.IntIterator) r2;

        i1 = virtualinvoke $r11.<kotlin.collections.IntIterator: int nextInt()>();

        i2 = i1;

        r3 = r1;

        r4 = $r0;

        interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>(r4);

        goto label1;

     label2:
        $r7 = (java.util.List) r1;

        $r13 = (java.util.Collection) $r7;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(0, "T?");

        $r8 = newarray (java.lang.Object)[0];

        $r9 = interfaceinvoke $r13.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        if $r9 != null goto label3;

        $r10 = new java.lang.NullPointerException;

        specialinvoke $r10.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlin.Array<T>");

        throw $r10;

     label3:
        return $r9;
    }

    private static final transient java.lang.reflect.Method findComposableMethod(java.lang.Class, java.lang.String, java.lang.Object[])
    {
        java.lang.Class $r0, r7, r8, $r13, r38, $r43, $r46, r49;
        java.lang.String r1, $r24, $r28, $r33, r37, r48;
        java.lang.Object[] r2, $r12, $r18, $r20, r40, r55;
        java.lang.reflect.Method r3, r4, r56, r60, r61, $r62, $r63;
        java.lang.Object r5, r6, r41, r42;
        boolean z1, z2, $z4, $z7, z14, z16, z17, z19, z20;
        int $i0, $i1, $i2, i3, i4, i5, i6, i7, $i8, $i9;
        kotlin.jvm.internal.SpreadBuilder $r9, r35, r36, r47;
        java.util.ArrayList $r10, $r15;
        java.lang.Class[] $r11, $r17, $r19, $r21;
        kotlin.ranges.IntRange $r14;
        java.util.List $r16, r44;
        java.lang.NoSuchMethodException $r22;
        java.lang.StringBuilder $r23, $r25, $r26, $r27;
        java.lang.NullPointerException $r29, $r31;
        kotlin.collections.IntIterator $r30;
        java.lang.Throwable $r32, $r34, r57;
        java.util.Collection r39, $r45, $r51, r53, $r54;
        java.lang.Iterable $r50;
        java.util.Iterator r52;
        java.lang.reflect.Method[] $r58;

        $r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

     label01:
        $i0 = lengthof r2;

        i3 = staticinvoke <androidx.ui.tooling.preview.PreviewUtilsKt: int changedParamCount(int,int)>($i0, 0);

        $r9 = new kotlin.jvm.internal.SpreadBuilder;

        specialinvoke $r9.<kotlin.jvm.internal.SpreadBuilder: void <init>(int)>(4);

        r35 = $r9;

        r36 = r35;

        r37 = r1;

        r38 = $r0;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r39 = (java.util.Collection) $r10;

        r40 = r2;

        i4 = lengthof r40;

        i5 = 0;

     label02:
        if i5 >= i4 goto label06;

        r41 = r40[i5];

        r42 = r41;

        r5 = r42;

        r6 = r5;

        if r6 != null goto label03;

        $r43 = (java.lang.Class) null;

        goto label04;

     label03:
        $r43 = virtualinvoke r6.<java.lang.Object: java.lang.Class getClass()>();

     label04:
        if $r43 == null goto label05;

        r7 = $r43;

        z1 = 0;

        z2 = 0;

        r8 = r7;

        interfaceinvoke r39.<java.util.Collection: boolean add(java.lang.Object)>(r8);

        goto label05;

     label05:
        i5 = i5 + 1;

        goto label02;

     label06:
        r44 = (java.util.List) r39;

        $r45 = (java.util.Collection) r44;

        $r11 = newarray (java.lang.Class)[0];

        $r12 = interfaceinvoke $r45.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r11);

        if $r12 != null goto label07;

        $r31 = new java.lang.NullPointerException;

        specialinvoke $r31.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlin.Array<T>");

        throw $r31;

     label07:
        virtualinvoke r36.<kotlin.jvm.internal.SpreadBuilder: void addSpread(java.lang.Object)>($r12);

        virtualinvoke r35.<kotlin.jvm.internal.SpreadBuilder: void add(java.lang.Object)>(class "Landroidx/compose/runtime/Composer;");

        $r13 = <java.lang.Integer: java.lang.Class TYPE>;

        virtualinvoke r35.<kotlin.jvm.internal.SpreadBuilder: void add(java.lang.Object)>($r13);

        $r46 = <java.lang.Integer: java.lang.Class TYPE>;

        r47 = r35;

        r48 = r37;

        r49 = r38;

        $r14 = new kotlin.ranges.IntRange;

        specialinvoke $r14.<kotlin.ranges.IntRange: void <init>(int,int)>(0, i3);

        $r50 = (java.lang.Iterable) $r14;

        z14 = 0;

        $r15 = new java.util.ArrayList;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r50, 10);

        specialinvoke $r15.<java.util.ArrayList: void <init>(int)>($i1);

        $r51 = (java.util.Collection) $r15;

        r52 = interfaceinvoke $r50.<java.lang.Iterable: java.util.Iterator iterator()>();

     label08:
        $z4 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label09;

        $r30 = (kotlin.collections.IntIterator) r52;

        i6 = virtualinvoke $r30.<kotlin.collections.IntIterator: int nextInt()>();

        i7 = i6;

        r53 = $r51;

        z16 = 0;

        interfaceinvoke r53.<java.util.Collection: boolean add(java.lang.Object)>($r46);

        goto label08;

     label09:
        $r16 = (java.util.List) $r51;

        z17 = 0;

        $r54 = (java.util.Collection) $r16;

        $r17 = newarray (java.lang.Class)[0];

        $r18 = interfaceinvoke $r54.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r17);

        if $r18 != null goto label10;

        $r29 = new java.lang.NullPointerException;

        specialinvoke $r29.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlin.Array<T>");

        throw $r29;

     label10:
        r55 = $r18;

        virtualinvoke r47.<kotlin.jvm.internal.SpreadBuilder: void addSpread(java.lang.Object)>(r55);

        $i2 = virtualinvoke r35.<kotlin.jvm.internal.SpreadBuilder: int size()>();

        $r19 = newarray (java.lang.Class)[$i2];

        $r20 = virtualinvoke r35.<kotlin.jvm.internal.SpreadBuilder: java.lang.Object[] toArray(java.lang.Object[])>($r19);

        $r21 = (java.lang.Class[]) $r20;

        r56 = staticinvoke <androidx.ui.tooling.preview.PreviewUtilsKt: java.lang.reflect.Method getDeclaredCompatibleMethod(java.lang.Class,java.lang.String,java.lang.Class[])>(r49, r48, $r21);

     label11:
        goto label21;

     label12:
        $r32 := @caughtexception;

        r57 = $r32;

     label13:
        $r58 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r58, "declaredMethods");

        z19 = 0;

        $i8 = lengthof $r58;

        $i9 = 0;

     label14:
        if $i9 >= $i8 goto label16;

        r60 = $r58[$i9];

        r61 = r60;

        z20 = 0;

        $r33 = virtualinvoke r61.<java.lang.reflect.Method: java.lang.String getName()>();

        $z7 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r33, r1);

        if $z7 == 0 goto label15;

        $r62 = r60;

        goto label17;

     label15:
        $i9 = $i9 + 1;

        goto label14;

     label16:
        $r62 = null;

     label17:
        $r63 = $r62;

     label18:
        goto label20;

     label19:
        $r34 := @caughtexception;

        $r63 = (java.lang.reflect.Method) null;

     label20:
        r56 = $r63;

     label21:
        r4 = r56;

        if r4 != null goto label22;

        $r22 = new java.lang.NoSuchMethodException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.NoSuchMethodException: void <init>(java.lang.String)>($r28);

        throw $r22;

     label22:
        r3 = r4;

        return r3;

        catch java.lang.ReflectiveOperationException from label13 to label18 with label19;
        catch java.lang.ReflectiveOperationException from label01 to label11 with label12;
    }

    private static final java.lang.Object getDefaultValue(java.lang.Class)
    {
        java.lang.Class $r0;
        java.lang.String r1;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.Object $r2;

        $r0 := @parameter0: java.lang.Class;

        r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        if r1 == null goto label17;

        $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1325958191: goto label03;
            case 104431: goto label07;
            case 3039496: goto label02;
            case 3052374: goto label04;
            case 3327612: goto label08;
            case 64711720: goto label01;
            case 97526364: goto label06;
            case 109413500: goto label05;
            default: goto label17;
        };

     label01:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("boolean");

        if $z2 != 0 goto label15;

        goto label17;

     label02:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("byte");

        if $z5 != 0 goto label11;

        goto label17;

     label03:
        $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("double");

        if $z7 != 0 goto label13;

        goto label17;

     label04:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("char");

        if $z4 != 0 goto label16;

        goto label17;

     label05:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("short");

        if $z0 != 0 goto label10;

        goto label17;

     label06:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("float");

        if $z1 != 0 goto label14;

        goto label17;

     label07:
        $z6 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("int");

        if $z6 != 0 goto label09;

        goto label17;

     label08:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("long");

        if $z3 != 0 goto label12;

        goto label17;

     label09:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        goto label18;

     label10:
        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(0);

        goto label18;

     label11:
        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(0);

        goto label18;

     label12:
        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        goto label18;

     label13:
        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        goto label18;

     label14:
        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

        goto label18;

     label15:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        goto label18;

     label16:
        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(48);

        goto label18;

     label17:
        $r2 = null;

     label18:
        return $r2;
    }

    private static final transient java.lang.Object invokeComposableMethod(java.lang.reflect.Method, java.lang.Object, androidx.compose.runtime.Composer, java.lang.Object[])
    {
        java.lang.reflect.Method $r0;
        java.lang.Object r1, r7, $r9, $r26;
        androidx.compose.runtime.Composer r2;
        java.lang.Object[] r3, r4, r6, $r24, r25, r28, r29;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, $i15, i18, i19, i20, $i21, i22, i23, i24, i25, $i26;
        java.lang.Class r5, r22;
        java.lang.Class[] $r8, $r16, $r20;
        kotlin.ranges.IntRange $r10, $r11, $r12;
        boolean $z1, $z2, $z3, $z4, z6, $z8, $z9, z10, z11, z12, z13, z14, z15, z16, z17;
        java.lang.IllegalStateException $r13, $r17;
        java.lang.String $r14, $r18, r23, r27;
        java.lang.Throwable $r15, $r19;
        byte $b17;

        $r0 := @parameter0: java.lang.reflect.Method;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: androidx.compose.runtime.Composer;

        r3 := @parameter3: java.lang.Object[];

        $r20 = virtualinvoke $r0.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r20, "parameterTypes");

        i13 = lengthof $r20;

        i14 = i13 + -1;

        z6 = 0;

     label01:
        if i14 < 0 goto label03;

        r22 = $r20[i14];

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r22, class "Landroidx/compose/runtime/Composer;");

        if $z4 == 0 goto label02;

        $i15 = i14;

        goto label04;

     label02:
        i14 = i14 + -1;

        goto label01;

     label03:
        $i15 = -1;

     label04:
        i0 = $i15;

        if r1 == null goto label05;

        $b17 = 1;

        goto label06;

     label05:
        $b17 = 0;

     label06:
        i18 = staticinvoke <androidx.ui.tooling.preview.PreviewUtilsKt: int changedParamCount(int,int)>(i0, $b17);

        $i6 = i0 + 1;

        i19 = $i6 + i18;

        $r8 = virtualinvoke $r0.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        i20 = lengthof $r8;

        if i20 == i19 goto label07;

        $z8 = 1;

        goto label08;

     label07:
        $z8 = 0;

     label08:
        if $z8 == 0 goto label09;

        $i21 = staticinvoke <androidx.ui.tooling.preview.PreviewUtilsKt: int defaultParamCount(int)>(i0);

        goto label10;

     label09:
        $i21 = 0;

     label10:
        i1 = $i21;

        $i7 = i0 + 1;

        $i8 = $i7 + i18;

        $i9 = $i8 + i1;

        if $i9 != i20 goto label11;

        $z9 = 1;

        goto label12;

     label11:
        $z9 = 0;

     label12:
        z10 = $z9;

        z11 = 0;

        z12 = 0;

        z13 = 0;

        z14 = 0;

        if z10 != 0 goto label13;

        z15 = 0;

        r23 = "Check failed.";

        $r17 = new java.lang.IllegalStateException;

        $r18 = virtualinvoke r23.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r18);

        $r19 = (java.lang.Throwable) $r17;

        throw $r19;

     label13:
        i22 = i0 + 1;

        i23 = i22 + i18;

        i24 = 0;

        i25 = i20;

        r4 = newarray (java.lang.Object)[i25];

     label14:
        if i24 >= i25 goto label21;

        i2 = i24;

        $r24 = r4;

        $i26 = i2;

        i3 = i2;

        $r10 = staticinvoke <kotlin.ranges.RangesKt: kotlin.ranges.IntRange until(int,int)>(0, i0);

        $z1 = virtualinvoke $r10.<kotlin.ranges.IntRange: boolean contains(int)>(i3);

        if $z1 == 0 goto label16;

        r25 = r3;

        z16 = 0;

        if i2 < 0 goto label15;

        $i12 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>(r25);

        if i2 > $i12 goto label15;

        $r26 = r25[i2];

        goto label20;

     label15:
        i4 = i2;

        i5 = i2;

        r6 = r4;

        $r16 = virtualinvoke $r0.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        r5 = $r16[i2];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r5, "parameterTypes[idx]");

        r7 = staticinvoke <androidx.ui.tooling.preview.PreviewUtilsKt: java.lang.Object getDefaultValue(java.lang.Class)>(r5);

        $r24 = r6;

        $i26 = i5;

        $r26 = r7;

        goto label20;

     label16:
        if i3 != i0 goto label17;

        $r26 = r2;

        goto label20;

     label17:
        $r11 = staticinvoke <kotlin.ranges.RangesKt: kotlin.ranges.IntRange until(int,int)>(i22, i23);

        $z2 = virtualinvoke $r11.<kotlin.ranges.IntRange: boolean contains(int)>(i3);

        if $z2 == 0 goto label18;

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        goto label20;

     label18:
        $r12 = staticinvoke <kotlin.ranges.RangesKt: kotlin.ranges.IntRange until(int,int)>(i23, i20);

        $z3 = virtualinvoke $r12.<kotlin.ranges.IntRange: boolean contains(int)>(i3);

        if $z3 == 0 goto label19;

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2097151);

        goto label20;

     label19:
        r27 = "Unexpected index";

        z17 = 0;

        $r13 = new java.lang.IllegalStateException;

        $r14 = virtualinvoke r27.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r14);

        $r15 = (java.lang.Throwable) $r13;

        throw $r15;

     label20:
        $r24[$i26] = $r26;

        i24 = i24 + 1;

        goto label14;

     label21:
        r28 = r4;

        $i10 = lengthof r28;

        r29 = newarray (java.lang.Object)[$i10];

        $i11 = lengthof r28;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r28, 0, r29, 0, $i11);

        $r9 = virtualinvoke $r0.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, r29);

        return $r9;
    }

    private static final int changedParamCount(int, int)
    {
        int i0, i1, i2, $i3;
        double d0, $d1, $d2;
        boolean z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 != 0 goto label1;

        return 1;

     label1:
        i2 = i0 + i1;

        $d1 = (double) i2;

        d0 = $d1 / 15.0;

        z0 = 0;

        $d2 = staticinvoke <java.lang.Math: double ceil(double)>(d0);

        $i3 = (int) $d2;

        return $i3;
    }

    private static final int defaultParamCount(int)
    {
        int i0, $i1;
        double d0, $d1, $d2;
        boolean z0;

        i0 := @parameter0: int;

        $d1 = (double) i0;

        d0 = $d1 / 31.0;

        z0 = 0;

        $d2 = staticinvoke <java.lang.Math: double ceil(double)>(d0);

        $i1 = (int) $d2;

        return $i1;
    }

    public static final transient void invokeComposableViaReflection(java.lang.String, java.lang.String, androidx.compose.runtime.Composer, java.lang.Object[])
    {
        java.lang.String r0, r1, $r19;
        androidx.compose.runtime.Composer r2;
        java.lang.Object[] r3, r5, $r8, r22, r23;
        java.lang.reflect.Method r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0;
        java.lang.Class[] $r6;
        java.lang.reflect.Constructor $r7;
        java.lang.Throwable $r11, $r20, r25;
        java.lang.ClassNotFoundException $r12;
        java.lang.StringBuilder $r13, $r14, $r15, $r16, $r17, $r18;
        java.lang.Class r21;
        java.lang.Object r24;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: androidx.compose.runtime.Composer;

        r3 := @parameter3: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "className");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "methodName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "composer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "args");

     label1:
        r21 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r21, "composableClass");

        $i0 = lengthof r3;

        r22 = newarray (java.lang.Object)[$i0];

        $i1 = lengthof r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r22, 0, $i1);

        r4 = staticinvoke <androidx.ui.tooling.preview.PreviewUtilsKt: java.lang.reflect.Method findComposableMethod(java.lang.Class,java.lang.String,java.lang.Object[])>(r21, r1, r22);

        virtualinvoke r4.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        $i2 = virtualinvoke r4.<java.lang.reflect.Method: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i2);

        if $z0 == 0 goto label2;

        $i5 = lengthof r3;

        r23 = newarray (java.lang.Object)[$i5];

        $i6 = lengthof r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r23, 0, $i6);

        staticinvoke <androidx.ui.tooling.preview.PreviewUtilsKt: java.lang.Object invokeComposableMethod(java.lang.reflect.Method,java.lang.Object,androidx.compose.runtime.Composer,java.lang.Object[])>(r4, null, r2, r23);

        goto label3;

     label2:
        $r6 = newarray (java.lang.Class)[0];

        $r7 = virtualinvoke r21.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r6);

        $r8 = newarray (java.lang.Object)[0];

        r24 = virtualinvoke $r7.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r8);

        $i3 = lengthof r3;

        r5 = newarray (java.lang.Object)[$i3];

        $i4 = lengthof r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r5, 0, $i4);

        staticinvoke <androidx.ui.tooling.preview.PreviewUtilsKt: java.lang.Object invokeComposableMethod(java.lang.reflect.Method,java.lang.Object,androidx.compose.runtime.Composer,java.lang.Object[])>(r4, r24, r2, r5);

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        r25 = $r11;

        $r12 = new java.lang.ClassNotFoundException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Composable Method \'");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' not found");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = (java.lang.Throwable) r25;

        specialinvoke $r12.<java.lang.ClassNotFoundException: void <init>(java.lang.String,java.lang.Throwable)>($r19, $r20);

        throw $r12;

     label5:
        return;

        catch java.lang.ReflectiveOperationException from label1 to label3 with label4;
    }

    public static final java.lang.Class asPreviewProviderClass(java.lang.String)
    {
        java.lang.String $r0, $r6;
        java.lang.Throwable $r1, $r7, r11;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.Class $r8, r9, $r10;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

     label1:
        r9 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0);

        if r9 == null goto label2;

        $r10 = r9;

        goto label3;

     label2:
        $r10 = null;

     label3:
        return $r10;

     label4:
        $r1 := @caughtexception;

        r11 = $r1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find provider \'");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = (java.lang.Throwable) r11;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PreviewProvider", $r6, $r7);

        $r8 = (java.lang.Class) null;

        return $r8;

        catch java.lang.ClassNotFoundException from label1 to label4 with label4;
    }

    public static final java.lang.Object[] getPreviewProviderParameters(java.lang.Class, int)
    {
        java.lang.Class r0;
        int i0, i1, $i2, $i3, i4;
        java.lang.reflect.Constructor r1, r2, r14, $r18, r19, $r20, r22, r23, r24;
        boolean z1, z3, $z4, z6;
        java.lang.Object[] $r3, $r4, $r8, r27;
        kotlin.sequences.Sequence $r5, $r7;
        java.lang.Object $r6, r25;
        java.lang.NullPointerException $r9;
        java.lang.IllegalArgumentException $r10;
        java.lang.Throwable $r11, r28;
        java.lang.IllegalStateException $r12;
        java.lang.reflect.Constructor[] $r13;
        java.lang.Class[] r16, r17;
        androidx.ui.tooling.preview.PreviewParameterProvider r26;

        r0 := @parameter0: java.lang.Class;

        i0 := @parameter1: int;

        if r0 == null goto label16;

     label01:
        $r13 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r13, "parameterProviderClass.constructors");

        r14 = null;

        z3 = 0;

        i1 = lengthof $r13;

        i4 = 0;

     label02:
        if i4 >= i1 goto label07;

        r1 = $r13[i4];

        r2 = r1;

        r16 = virtualinvoke r2.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r16, "it.parameterTypes");

        r17 = r16;

        z1 = 0;

        $i3 = lengthof r17;

        if $i3 != 0 goto label03;

        $z4 = 1;

        goto label04;

     label03:
        $z4 = 0;

     label04:
        if $z4 == 0 goto label06;

        if z3 == 0 goto label05;

        $r18 = null;

        goto label09;

     label05:
        r14 = r1;

        z3 = 1;

     label06:
        i4 = i4 + 1;

        goto label02;

     label07:
        if z3 != 0 goto label08;

        $r18 = null;

        goto label09;

     label08:
        $r18 = r14;

     label09:
        r19 = $r18;

        if r19 != null goto label10;

        $r20 = (java.lang.reflect.Constructor) null;

        goto label11;

     label10:
        z6 = 0;

        r22 = r19;

        virtualinvoke r22.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

        $r20 = r19;

     label11:
        r23 = $r20;

        if r23 != null goto label12;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("PreviewParameterProvider constructor can not have parameters");

        throw $r10;

     label12:
        r24 = r23;

        $r4 = newarray (java.lang.Object)[0];

        r25 = virtualinvoke r24.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r4);

        if r25 != null goto label13;

        $r9 = new java.lang.NullPointerException;

        specialinvoke $r9.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type androidx.ui.tooling.preview.PreviewParameterProvider<*>");

        throw $r9;

     label13:
        r26 = (androidx.ui.tooling.preview.PreviewParameterProvider) r25;

        if i0 >= 0 goto label14;

        $r7 = interfaceinvoke r26.<androidx.ui.tooling.preview.PreviewParameterProvider: kotlin.sequences.Sequence getValues()>();

        $i2 = interfaceinvoke r26.<androidx.ui.tooling.preview.PreviewParameterProvider: int getCount()>();

        $r8 = staticinvoke <androidx.ui.tooling.preview.PreviewUtilsKt: java.lang.Object[] toArray(kotlin.sequences.Sequence,int)>($r7, $i2);

        return $r8;

     label14:
        r27 = newarray (java.lang.Object)[1];

        $r5 = interfaceinvoke r26.<androidx.ui.tooling.preview.PreviewParameterProvider: kotlin.sequences.Sequence getValues()>();

        $r6 = staticinvoke <kotlin.sequences.SequencesKt: java.lang.Object elementAt(kotlin.sequences.Sequence,int)>($r5, i0);

        r27[0] = $r6;

        return r27;

     label15:
        $r11 := @caughtexception;

        r28 = $r11;

        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Deploying Compose Previews with PreviewParameterProvider arguments requires adding a dependency to the kotlin-reflect library.\nConsider adding \'debugImplementation \"org.jetbrains.kotlin:kotlin-reflect:$kotlin_version\"\' to the module\'s build.gradle.");

        throw $r12;

     label16:
        $r3 = newarray (java.lang.Object)[0];

        return $r3;

        catch kotlin.jvm.KotlinReflectionNotSupportedError from label01 to label15 with label15;
    }

    private static final java.lang.Object[] toArray(kotlin.sequences.Sequence, int)
    {
        kotlin.sequences.Sequence $r0;
        int i0, i1, i2, i3;
        java.util.Iterator r1;
        java.lang.Object[] r2;
        java.lang.Object $r3;

        $r0 := @parameter0: kotlin.sequences.Sequence;

        i0 := @parameter1: int;

        r1 = interfaceinvoke $r0.<kotlin.sequences.Sequence: java.util.Iterator iterator()>();

        i3 = 0;

        i1 = i0;

        r2 = newarray (java.lang.Object)[i1];

     label1:
        if i3 >= i1 goto label2;

        i2 = i3;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2[i2] = $r3;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r2;
    }

