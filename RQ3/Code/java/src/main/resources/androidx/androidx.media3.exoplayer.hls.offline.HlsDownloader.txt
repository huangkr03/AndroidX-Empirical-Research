androidx.media3.exoplayer.hls.offline.HlsDownloader
    public void <init>(androidx.media3.common.MediaItem, androidx.media3.datasource.cache.CacheDataSource$Factory)
    {
        androidx.media3.exoplayer.hls.offline.HlsDownloader r0;
        androidx.media3.common.MediaItem r1;
        androidx.media3.datasource.cache.CacheDataSource$Factory r2;
        java.util.concurrent.Executor $r3;

        r0 := @this: androidx.media3.exoplayer.hls.offline.HlsDownloader;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        r2 := @parameter1: androidx.media3.datasource.cache.CacheDataSource$Factory;

        $r3 = dynamicinvoke "execute" <java.util.concurrent.Executor ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Runnable), methodhandle: "REF_INVOKE_INTERFACE" <java.lang.Runnable: void run()>, methodtype: void __METHODTYPE__(java.lang.Runnable));

        specialinvoke r0.<androidx.media3.exoplayer.hls.offline.HlsDownloader: void <init>(androidx.media3.common.MediaItem,androidx.media3.datasource.cache.CacheDataSource$Factory,java.util.concurrent.Executor)>(r1, r2, $r3);

        return;
    }

    public void <init>(androidx.media3.common.MediaItem, androidx.media3.datasource.cache.CacheDataSource$Factory, java.util.concurrent.Executor)
    {
        androidx.media3.exoplayer.hls.offline.HlsDownloader r0;
        androidx.media3.common.MediaItem r1;
        androidx.media3.datasource.cache.CacheDataSource$Factory r2;
        java.util.concurrent.Executor r3;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser $r4;

        r0 := @this: androidx.media3.exoplayer.hls.offline.HlsDownloader;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        r2 := @parameter1: androidx.media3.datasource.cache.CacheDataSource$Factory;

        r3 := @parameter2: java.util.concurrent.Executor;

        $r4 = new androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser;

        specialinvoke $r4.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser: void <init>()>();

        specialinvoke r0.<androidx.media3.exoplayer.hls.offline.HlsDownloader: void <init>(androidx.media3.common.MediaItem,androidx.media3.exoplayer.upstream.ParsingLoadable$Parser,androidx.media3.datasource.cache.CacheDataSource$Factory,java.util.concurrent.Executor,long)>(r1, $r4, r2, r3, 20000L);

        return;
    }

    public void <init>(androidx.media3.common.MediaItem, androidx.media3.exoplayer.upstream.ParsingLoadable$Parser, androidx.media3.datasource.cache.CacheDataSource$Factory, java.util.concurrent.Executor)
    {
        androidx.media3.exoplayer.hls.offline.HlsDownloader r0;
        androidx.media3.common.MediaItem r1;
        androidx.media3.exoplayer.upstream.ParsingLoadable$Parser r2;
        androidx.media3.datasource.cache.CacheDataSource$Factory r3;
        java.util.concurrent.Executor r4;

        r0 := @this: androidx.media3.exoplayer.hls.offline.HlsDownloader;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        r2 := @parameter1: androidx.media3.exoplayer.upstream.ParsingLoadable$Parser;

        r3 := @parameter2: androidx.media3.datasource.cache.CacheDataSource$Factory;

        r4 := @parameter3: java.util.concurrent.Executor;

        specialinvoke r0.<androidx.media3.exoplayer.hls.offline.HlsDownloader: void <init>(androidx.media3.common.MediaItem,androidx.media3.exoplayer.upstream.ParsingLoadable$Parser,androidx.media3.datasource.cache.CacheDataSource$Factory,java.util.concurrent.Executor,long)>(r1, r2, r3, r4, 20000L);

        return;
    }

    public void <init>(androidx.media3.common.MediaItem, androidx.media3.exoplayer.upstream.ParsingLoadable$Parser, androidx.media3.datasource.cache.CacheDataSource$Factory, java.util.concurrent.Executor, long)
    {
        androidx.media3.exoplayer.hls.offline.HlsDownloader r0;
        androidx.media3.common.MediaItem r1;
        androidx.media3.exoplayer.upstream.ParsingLoadable$Parser r2;
        androidx.media3.datasource.cache.CacheDataSource$Factory r3;
        java.util.concurrent.Executor r4;
        long l0;

        r0 := @this: androidx.media3.exoplayer.hls.offline.HlsDownloader;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        r2 := @parameter1: androidx.media3.exoplayer.upstream.ParsingLoadable$Parser;

        r3 := @parameter2: androidx.media3.datasource.cache.CacheDataSource$Factory;

        r4 := @parameter3: java.util.concurrent.Executor;

        l0 := @parameter4: long;

        specialinvoke r0.<androidx.media3.exoplayer.offline.SegmentDownloader: void <init>(androidx.media3.common.MediaItem,androidx.media3.exoplayer.upstream.ParsingLoadable$Parser,androidx.media3.datasource.cache.CacheDataSource$Factory,java.util.concurrent.Executor,long)>(r1, r2, r3, r4, l0);

        return;
    }

    protected java.util.List getSegments(androidx.media3.datasource.DataSource, androidx.media3.exoplayer.hls.playlist.HlsPlaylist, boolean) throws java.io.IOException, java.lang.InterruptedException
    {
        androidx.media3.exoplayer.hls.offline.HlsDownloader r0;
        androidx.media3.datasource.DataSource r1;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylist r2;
        boolean z0, $z1, $z4;
        java.util.ArrayList r3, $r11, $r15, r24;
        java.util.HashSet r4, $r16;
        java.util.Iterator r5;
        androidx.media3.datasource.DataSpec r6, $r14;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist r7;
        java.util.List r8, $r21;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment r9, r10, r26;
        java.lang.String $r12;
        android.net.Uri $r13;
        java.lang.Object $r17, $r20;
        androidx.media3.exoplayer.offline.SegmentDownloader$Segment $r18;
        androidx.media3.exoplayer.offline.FilterableManifest $r19;
        int $i0, i1;
        java.lang.Throwable $r22, r25;
        androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist r23;

        r0 := @this: androidx.media3.exoplayer.hls.offline.HlsDownloader;

        r1 := @parameter0: androidx.media3.datasource.DataSource;

        r2 := @parameter1: androidx.media3.exoplayer.hls.playlist.HlsPlaylist;

        z0 := @parameter2: boolean;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r3 = $r11;

        $z1 = r2 instanceof androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist;

        if $z1 == 0 goto label01;

        r23 = (androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist) r2;

        $r21 = r23.<androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist: java.util.List mediaPlaylistUrls>;

        specialinvoke r0.<androidx.media3.exoplayer.hls.offline.HlsDownloader: void addMediaPlaylistDataSpecs(java.util.List,java.util.List)>($r21, r3);

        goto label02;

     label01:
        $r12 = r2.<androidx.media3.exoplayer.hls.playlist.HlsPlaylist: java.lang.String baseUri>;

        $r13 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r12);

        $r14 = staticinvoke <androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.datasource.DataSpec getCompressibleDataSpec(android.net.Uri)>($r13);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

     label02:
        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        r24 = $r15;

        $r16 = new java.util.HashSet;

        specialinvoke $r16.<java.util.HashSet: void <init>()>();

        r4 = $r16;

        r5 = virtualinvoke r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z4 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label12;

        $r17 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (androidx.media3.datasource.DataSpec) $r17;

        $r18 = new androidx.media3.exoplayer.offline.SegmentDownloader$Segment;

        specialinvoke $r18.<androidx.media3.exoplayer.offline.SegmentDownloader$Segment: void <init>(long,androidx.media3.datasource.DataSpec)>(0L, r6);

        virtualinvoke r24.<java.util.ArrayList: boolean add(java.lang.Object)>($r18);

     label04:
        $r19 = virtualinvoke r0.<androidx.media3.exoplayer.hls.offline.HlsDownloader: androidx.media3.exoplayer.offline.FilterableManifest getManifest(androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec,boolean)>(r1, r6, z0);

        r7 = (androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist) $r19;

     label05:
        goto label08;

     label06:
        $r22 := @caughtexception;

        r25 = $r22;

        if z0 != 0 goto label07;

        throw r25;

     label07:
        goto label03;

     label08:
        r26 = null;

        r8 = r7.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List segments>;

        i1 = 0;

     label09:
        $i0 = interfaceinvoke r8.<java.util.List: int size()>();

        if i1 >= $i0 goto label11;

        $r20 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i1);

        r9 = (androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment) $r20;

        r10 = r9.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment initializationSegment>;

        if r10 == null goto label10;

        if r10 == r26 goto label10;

        r26 = r10;

        specialinvoke r0.<androidx.media3.exoplayer.hls.offline.HlsDownloader: void addSegment(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment,java.util.HashSet,java.util.ArrayList)>(r7, r10, r4, r24);

     label10:
        specialinvoke r0.<androidx.media3.exoplayer.hls.offline.HlsDownloader: void addSegment(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment,java.util.HashSet,java.util.ArrayList)>(r7, r9, r4, r24);

        i1 = i1 + 1;

        goto label09;

     label11:
        goto label03;

     label12:
        return r24;

        catch java.io.IOException from label04 to label05 with label06;
    }

    private void addMediaPlaylistDataSpecs(java.util.List, java.util.List)
    {
        androidx.media3.exoplayer.hls.offline.HlsDownloader r0;
        java.util.List r1, r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.net.Uri $r4;
        androidx.media3.datasource.DataSpec $r5;

        r0 := @this: androidx.media3.exoplayer.hls.offline.HlsDownloader;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r4 = (android.net.Uri) $r3;

        $r5 = staticinvoke <androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.datasource.DataSpec getCompressibleDataSpec(android.net.Uri)>($r4);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void addSegment(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist, androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment, java.util.HashSet, java.util.ArrayList)
    {
        androidx.media3.exoplayer.hls.offline.HlsDownloader r0;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist r1;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment r2;
        java.util.HashSet r3;
        java.util.ArrayList r4;
        java.lang.String r5, $r7, $r8, $r12;
        long l0, $l1, $l2, $l3, $l4;
        androidx.media3.datasource.DataSpec r6, $r10, $r14;
        boolean $z1;
        androidx.media3.exoplayer.offline.SegmentDownloader$Segment $r9, $r15;
        android.net.Uri r11, r13;

        r0 := @this: androidx.media3.exoplayer.hls.offline.HlsDownloader;

        r1 := @parameter0: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist;

        r2 := @parameter1: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment;

        r3 := @parameter2: java.util.HashSet;

        r4 := @parameter3: java.util.ArrayList;

        r5 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.lang.String baseUri>;

        $l2 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long startTimeUs>;

        $l1 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: long relativeStartTimeUs>;

        l0 = $l2 + $l1;

        $r7 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: java.lang.String fullSegmentEncryptionKeyUri>;

        if $r7 == null goto label1;

        $r8 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: java.lang.String fullSegmentEncryptionKeyUri>;

        r11 = staticinvoke <androidx.media3.common.util.UriUtil: android.net.Uri resolveToUri(java.lang.String,java.lang.String)>(r5, $r8);

        $z1 = virtualinvoke r3.<java.util.HashSet: boolean add(java.lang.Object)>(r11);

        if $z1 == 0 goto label1;

        $r9 = new androidx.media3.exoplayer.offline.SegmentDownloader$Segment;

        $r10 = staticinvoke <androidx.media3.exoplayer.offline.SegmentDownloader: androidx.media3.datasource.DataSpec getCompressibleDataSpec(android.net.Uri)>(r11);

        specialinvoke $r9.<androidx.media3.exoplayer.offline.SegmentDownloader$Segment: void <init>(long,androidx.media3.datasource.DataSpec)>(l0, $r10);

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

     label1:
        $r12 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: java.lang.String url>;

        r13 = staticinvoke <androidx.media3.common.util.UriUtil: android.net.Uri resolveToUri(java.lang.String,java.lang.String)>(r5, $r12);

        $r14 = new androidx.media3.datasource.DataSpec;

        $l3 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: long byteRangeOffset>;

        $l4 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: long byteRangeLength>;

        specialinvoke $r14.<androidx.media3.datasource.DataSpec: void <init>(android.net.Uri,long,long)>(r13, $l3, $l4);

        r6 = $r14;

        $r15 = new androidx.media3.exoplayer.offline.SegmentDownloader$Segment;

        specialinvoke $r15.<androidx.media3.exoplayer.offline.SegmentDownloader$Segment: void <init>(long,androidx.media3.datasource.DataSpec)>(l0, r6);

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

        return;
    }

    protected volatile java.util.List getSegments(androidx.media3.datasource.DataSource, androidx.media3.exoplayer.offline.FilterableManifest, boolean) throws java.io.IOException, java.lang.InterruptedException
    {
        androidx.media3.exoplayer.hls.offline.HlsDownloader r0;
        androidx.media3.datasource.DataSource r1;
        androidx.media3.exoplayer.offline.FilterableManifest r2;
        boolean z0;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylist $r3;
        java.util.List $r4;

        r0 := @this: androidx.media3.exoplayer.hls.offline.HlsDownloader;

        r1 := @parameter0: androidx.media3.datasource.DataSource;

        r2 := @parameter1: androidx.media3.exoplayer.offline.FilterableManifest;

        z0 := @parameter2: boolean;

        $r3 = (androidx.media3.exoplayer.hls.playlist.HlsPlaylist) r2;

        $r4 = virtualinvoke r0.<androidx.media3.exoplayer.hls.offline.HlsDownloader: java.util.List getSegments(androidx.media3.datasource.DataSource,androidx.media3.exoplayer.hls.playlist.HlsPlaylist,boolean)>(r1, $r3, z0);

        return $r4;
    }

