androidx.test.uiautomator.BySelector
<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mClazz>
<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mDesc>
<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mPkg>
<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mRes>
<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mText>
<androidx.test.uiautomator.BySelector: java.lang.Boolean mChecked>
<androidx.test.uiautomator.BySelector: java.lang.Boolean mCheckable>
<androidx.test.uiautomator.BySelector: java.lang.Boolean mClickable>
<androidx.test.uiautomator.BySelector: java.lang.Boolean mEnabled>
<androidx.test.uiautomator.BySelector: java.lang.Boolean mFocused>
<androidx.test.uiautomator.BySelector: java.lang.Boolean mFocusable>
<androidx.test.uiautomator.BySelector: java.lang.Boolean mLongClickable>
<androidx.test.uiautomator.BySelector: java.lang.Boolean mScrollable>
<androidx.test.uiautomator.BySelector: java.lang.Boolean mSelected>
<androidx.test.uiautomator.BySelector: java.lang.Integer mMinDepth>
<androidx.test.uiautomator.BySelector: java.lang.Integer mMaxDepth>
<androidx.test.uiautomator.BySelector: java.util.List mChildSelectors>
    void <init>()
    {
        androidx.test.uiautomator.BySelector r0;
        java.util.LinkedList $r1;

        r0 := @this: androidx.test.uiautomator.BySelector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<androidx.test.uiautomator.BySelector: java.util.List mChildSelectors> = $r1;

        return;
    }

    void <init>(androidx.test.uiautomator.BySelector)
    {
        androidx.test.uiautomator.BySelector r0, r1, r3, $r21;
        java.util.Iterator r2;
        java.util.LinkedList $r4;
        java.util.regex.Pattern $r5, $r6, $r7, $r8, $r9;
        java.lang.Boolean $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        java.util.List $r19, $r22;
        boolean $z0;
        java.lang.Object $r20;

        r0 := @this: androidx.test.uiautomator.BySelector;

        r1 := @parameter0: androidx.test.uiautomator.BySelector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        r0.<androidx.test.uiautomator.BySelector: java.util.List mChildSelectors> = $r4;

        $r5 = r1.<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mClazz>;

        r0.<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mClazz> = $r5;

        $r6 = r1.<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mDesc>;

        r0.<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mDesc> = $r6;

        $r7 = r1.<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mPkg>;

        r0.<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mPkg> = $r7;

        $r8 = r1.<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mRes>;

        r0.<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mRes> = $r8;

        $r9 = r1.<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mText>;

        r0.<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mText> = $r9;

        $r10 = r1.<androidx.test.uiautomator.BySelector: java.lang.Boolean mChecked>;

        r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mChecked> = $r10;

        $r11 = r1.<androidx.test.uiautomator.BySelector: java.lang.Boolean mCheckable>;

        r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mCheckable> = $r11;

        $r12 = r1.<androidx.test.uiautomator.BySelector: java.lang.Boolean mClickable>;

        r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mClickable> = $r12;

        $r13 = r1.<androidx.test.uiautomator.BySelector: java.lang.Boolean mEnabled>;

        r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mEnabled> = $r13;

        $r14 = r1.<androidx.test.uiautomator.BySelector: java.lang.Boolean mFocused>;

        r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mFocused> = $r14;

        $r15 = r1.<androidx.test.uiautomator.BySelector: java.lang.Boolean mFocusable>;

        r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mFocusable> = $r15;

        $r16 = r1.<androidx.test.uiautomator.BySelector: java.lang.Boolean mLongClickable>;

        r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mLongClickable> = $r16;

        $r17 = r1.<androidx.test.uiautomator.BySelector: java.lang.Boolean mScrollable>;

        r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mScrollable> = $r17;

        $r18 = r1.<androidx.test.uiautomator.BySelector: java.lang.Boolean mSelected>;

        r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mSelected> = $r18;

        $r19 = r1.<androidx.test.uiautomator.BySelector: java.util.List mChildSelectors>;

        r2 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r20 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.test.uiautomator.BySelector) $r20;

        $r22 = r0.<androidx.test.uiautomator.BySelector: java.util.List mChildSelectors>;

        $r21 = new androidx.test.uiautomator.BySelector;

        specialinvoke $r21.<androidx.test.uiautomator.BySelector: void <init>(androidx.test.uiautomator.BySelector)>(r3);

        interfaceinvoke $r22.<java.util.List: boolean add(java.lang.Object)>($r21);

        goto label1;

     label2:
        return;
    }

    public androidx.test.uiautomator.BySelector clazz(java.lang.String)
    {
        androidx.test.uiautomator.BySelector r0, $r5, $r7;
        java.lang.String r1, $r3, $r6;
        char $c0;
        java.util.regex.Pattern $r4;

        r0 := @this: androidx.test.uiautomator.BySelector;

        r1 := @parameter0: java.lang.String;

        staticinvoke <androidx.test.uiautomator.BySelector: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r1, "className cannot be null");

        $c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        if $c0 != 46 goto label1;

        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(1);

        $r7 = virtualinvoke r0.<androidx.test.uiautomator.BySelector: androidx.test.uiautomator.BySelector clazz(java.lang.String,java.lang.String)>("android.widget", $r6);

        return $r7;

     label1:
        $r3 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>(r1);

        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r3);

        $r5 = virtualinvoke r0.<androidx.test.uiautomator.BySelector: androidx.test.uiautomator.BySelector clazz(java.util.regex.Pattern)>($r4);

        return $r5;
    }

    public androidx.test.uiautomator.BySelector clazz(java.lang.String, java.lang.String)
    {
        androidx.test.uiautomator.BySelector r0, $r9;
        java.lang.String r1, r2, $r6, $r7;
        java.lang.Object[] $r5;
        java.util.regex.Pattern $r8;

        r0 := @this: androidx.test.uiautomator.BySelector;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        staticinvoke <androidx.test.uiautomator.BySelector: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r1, "packageName cannot be null");

        staticinvoke <androidx.test.uiautomator.BySelector: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r2, "className cannot be null");

        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = r1;

        $r5[1] = r2;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s.%s", $r5);

        $r7 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>($r6);

        $r8 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r7);

        $r9 = virtualinvoke r0.<androidx.test.uiautomator.BySelector: androidx.test.uiautomator.BySelector clazz(java.util.regex.Pattern)>($r8);

        return $r9;
    }

    public androidx.test.uiautomator.BySelector clazz(java.lang.Class)
    {
        androidx.test.uiautomator.BySelector r0, $r6;
        java.lang.Class r1;
        java.lang.String $r3, $r4;
        java.util.regex.Pattern $r5;

        r0 := @this: androidx.test.uiautomator.BySelector;

        r1 := @parameter0: java.lang.Class;

        staticinvoke <androidx.test.uiautomator.BySelector: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r1, "clazz cannot be null");

        $r3 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r4 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>($r3);

        $r5 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r4);

        $r6 = virtualinvoke r0.<androidx.test.uiautomator.BySelector: androidx.test.uiautomator.BySelector clazz(java.util.regex.Pattern)>($r5);

        return $r6;
    }

    public androidx.test.uiautomator.BySelector clazz(java.util.regex.Pattern)
    {
        androidx.test.uiautomator.BySelector r0;
        java.util.regex.Pattern r1, $r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: androidx.test.uiautomator.BySelector;

        r1 := @parameter0: java.util.regex.Pattern;

        staticinvoke <androidx.test.uiautomator.BySelector: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r1, "className cannot be null");

        $r3 = r0.<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mClazz>;

        if $r3 == null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Class selector is already defined");

        throw $r4;

     label1:
        r0.<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mClazz> = r1;

        return r0;
    }

    public androidx.test.uiautomator.BySelector desc(java.lang.String)
    {
        androidx.test.uiautomator.BySelector r0, $r5;
        java.lang.String r1, $r3;
        java.util.regex.Pattern $r4;

        r0 := @this: androidx.test.uiautomator.BySelector;

        r1 := @parameter0: java.lang.String;

        staticinvoke <androidx.test.uiautomator.BySelector: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r1, "contentDescription cannot be null");

        $r3 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>(r1);

        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r3);

        $r5 = virtualinvoke r0.<androidx.test.uiautomator.BySelector: androidx.test.uiautomator.BySelector desc(java.util.regex.Pattern)>($r4);

        return $r5;
    }

    public androidx.test.uiautomator.BySelector descContains(java.lang.String)
    {
        androidx.test.uiautomator.BySelector r0, $r7;
        java.lang.String r1, $r4, $r5;
        java.lang.Object[] $r3;
        java.util.regex.Pattern $r6;

        r0 := @this: androidx.test.uiautomator.BySelector;

        r1 := @parameter0: java.lang.String;

        staticinvoke <androidx.test.uiautomator.BySelector: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r1, "substring cannot be null");

        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>(r1);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("^.*%s.*$", $r3);

        $r6 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r5);

        $r7 = virtualinvoke r0.<androidx.test.uiautomator.BySelector: androidx.test.uiautomator.BySelector desc(java.util.regex.Pattern)>($r6);

        return $r7;
    }

    public androidx.test.uiautomator.BySelector descStartsWith(java.lang.String)
    {
        androidx.test.uiautomator.BySelector r0, $r7;
        java.lang.String r1, $r4, $r5;
        java.lang.Object[] $r3;
        java.util.regex.Pattern $r6;

        r0 := @this: androidx.test.uiautomator.BySelector;

        r1 := @parameter0: java.lang.String;

        staticinvoke <androidx.test.uiautomator.BySelector: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r1, "substring cannot be null");

        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>(r1);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("^%s.*$", $r3);

        $r6 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r5);

        $r7 = virtualinvoke r0.<androidx.test.uiautomator.BySelector: androidx.test.uiautomator.BySelector desc(java.util.regex.Pattern)>($r6);

        return $r7;
    }

    public androidx.test.uiautomator.BySelector descEndsWith(java.lang.String)
    {
        androidx.test.uiautomator.BySelector r0, $r7;
        java.lang.String r1, $r4, $r5;
        java.lang.Object[] $r3;
        java.util.regex.Pattern $r6;

        r0 := @this: androidx.test.uiautomator.BySelector;

        r1 := @parameter0: java.lang.String;

        staticinvoke <androidx.test.uiautomator.BySelector: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r1, "substring cannot be null");

        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>(r1);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("^.*%s$", $r3);

        $r6 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r5);

        $r7 = virtualinvoke r0.<androidx.test.uiautomator.BySelector: androidx.test.uiautomator.BySelector desc(java.util.regex.Pattern)>($r6);

        return $r7;
    }

    public androidx.test.uiautomator.BySelector desc(java.util.regex.Pattern)
    {
        androidx.test.uiautomator.BySelector r0;
        java.util.regex.Pattern r1, $r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: androidx.test.uiautomator.BySelector;

        r1 := @parameter0: java.util.regex.Pattern;

        staticinvoke <androidx.test.uiautomator.BySelector: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r1, "contentDescription cannot be null");

        $r3 = r0.<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mDesc>;

        if $r3 == null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Description selector is already defined");

        throw $r4;

     label1:
        r0.<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mDesc> = r1;

        return r0;
    }

    public androidx.test.uiautomator.BySelector pkg(java.lang.String)
    {
        androidx.test.uiautomator.BySelector r0, $r5;
        java.lang.String r1, $r3;
        java.util.regex.Pattern $r4;

        r0 := @this: androidx.test.uiautomator.BySelector;

        r1 := @parameter0: java.lang.String;

        staticinvoke <androidx.test.uiautomator.BySelector: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r1, "applicationPackage cannot be null");

        $r3 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>(r1);

        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r3);

        $r5 = virtualinvoke r0.<androidx.test.uiautomator.BySelector: androidx.test.uiautomator.BySelector pkg(java.util.regex.Pattern)>($r4);

        return $r5;
    }

    public androidx.test.uiautomator.BySelector pkg(java.util.regex.Pattern)
    {
        androidx.test.uiautomator.BySelector r0;
        java.util.regex.Pattern r1, $r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: androidx.test.uiautomator.BySelector;

        r1 := @parameter0: java.util.regex.Pattern;

        staticinvoke <androidx.test.uiautomator.BySelector: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r1, "applicationPackage cannot be null");

        $r3 = r0.<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mPkg>;

        if $r3 == null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Package selector is already defined");

        throw $r4;

     label1:
        r0.<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mPkg> = r1;

        return r0;
    }

    public androidx.test.uiautomator.BySelector res(java.lang.String)
    {
        androidx.test.uiautomator.BySelector r0, $r5;
        java.lang.String r1, $r3;
        java.util.regex.Pattern $r4;

        r0 := @this: androidx.test.uiautomator.BySelector;

        r1 := @parameter0: java.lang.String;

        staticinvoke <androidx.test.uiautomator.BySelector: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r1, "resourceName cannot be null");

        $r3 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>(r1);

        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r3);

        $r5 = virtualinvoke r0.<androidx.test.uiautomator.BySelector: androidx.test.uiautomator.BySelector res(java.util.regex.Pattern)>($r4);

        return $r5;
    }

    public androidx.test.uiautomator.BySelector res(java.lang.String, java.lang.String)
    {
        androidx.test.uiautomator.BySelector r0, $r9;
        java.lang.String r1, r2, $r6, $r7;
        java.lang.Object[] $r5;
        java.util.regex.Pattern $r8;

        r0 := @this: androidx.test.uiautomator.BySelector;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        staticinvoke <androidx.test.uiautomator.BySelector: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r1, "resourcePackage cannot be null");

        staticinvoke <androidx.test.uiautomator.BySelector: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r2, "resourceId cannot be null");

        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = r1;

        $r5[1] = r2;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s:id/%s", $r5);

        $r7 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>($r6);

        $r8 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r7);

        $r9 = virtualinvoke r0.<androidx.test.uiautomator.BySelector: androidx.test.uiautomator.BySelector res(java.util.regex.Pattern)>($r8);

        return $r9;
    }

    public androidx.test.uiautomator.BySelector res(java.util.regex.Pattern)
    {
        androidx.test.uiautomator.BySelector r0;
        java.util.regex.Pattern r1, $r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: androidx.test.uiautomator.BySelector;

        r1 := @parameter0: java.util.regex.Pattern;

        staticinvoke <androidx.test.uiautomator.BySelector: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r1, "resourceName cannot be null");

        $r3 = r0.<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mRes>;

        if $r3 == null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Resource name selector is already defined");

        throw $r4;

     label1:
        r0.<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mRes> = r1;

        return r0;
    }

    public androidx.test.uiautomator.BySelector text(java.lang.String)
    {
        androidx.test.uiautomator.BySelector r0, $r5;
        java.lang.String r1, $r3;
        java.util.regex.Pattern $r4;

        r0 := @this: androidx.test.uiautomator.BySelector;

        r1 := @parameter0: java.lang.String;

        staticinvoke <androidx.test.uiautomator.BySelector: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r1, "textValue cannot be null");

        $r3 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>(r1);

        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r3);

        $r5 = virtualinvoke r0.<androidx.test.uiautomator.BySelector: androidx.test.uiautomator.BySelector text(java.util.regex.Pattern)>($r4);

        return $r5;
    }

    public androidx.test.uiautomator.BySelector textContains(java.lang.String)
    {
        androidx.test.uiautomator.BySelector r0, $r7;
        java.lang.String r1, $r4, $r5;
        java.lang.Object[] $r3;
        java.util.regex.Pattern $r6;

        r0 := @this: androidx.test.uiautomator.BySelector;

        r1 := @parameter0: java.lang.String;

        staticinvoke <androidx.test.uiautomator.BySelector: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r1, "substring cannot be null");

        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>(r1);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("^.*%s.*$", $r3);

        $r6 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r5);

        $r7 = virtualinvoke r0.<androidx.test.uiautomator.BySelector: androidx.test.uiautomator.BySelector text(java.util.regex.Pattern)>($r6);

        return $r7;
    }

    public androidx.test.uiautomator.BySelector textStartsWith(java.lang.String)
    {
        androidx.test.uiautomator.BySelector r0, $r7;
        java.lang.String r1, $r4, $r5;
        java.lang.Object[] $r3;
        java.util.regex.Pattern $r6;

        r0 := @this: androidx.test.uiautomator.BySelector;

        r1 := @parameter0: java.lang.String;

        staticinvoke <androidx.test.uiautomator.BySelector: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r1, "substring cannot be null");

        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>(r1);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("^%s.*$", $r3);

        $r6 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r5);

        $r7 = virtualinvoke r0.<androidx.test.uiautomator.BySelector: androidx.test.uiautomator.BySelector text(java.util.regex.Pattern)>($r6);

        return $r7;
    }

    public androidx.test.uiautomator.BySelector textEndsWith(java.lang.String)
    {
        androidx.test.uiautomator.BySelector r0, $r7;
        java.lang.String r1, $r4, $r5;
        java.lang.Object[] $r3;
        java.util.regex.Pattern $r6;

        r0 := @this: androidx.test.uiautomator.BySelector;

        r1 := @parameter0: java.lang.String;

        staticinvoke <androidx.test.uiautomator.BySelector: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r1, "substring cannot be null");

        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>(r1);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("^.*%s$", $r3);

        $r6 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r5);

        $r7 = virtualinvoke r0.<androidx.test.uiautomator.BySelector: androidx.test.uiautomator.BySelector text(java.util.regex.Pattern)>($r6);

        return $r7;
    }

    public androidx.test.uiautomator.BySelector text(java.util.regex.Pattern)
    {
        androidx.test.uiautomator.BySelector r0;
        java.util.regex.Pattern r1, $r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: androidx.test.uiautomator.BySelector;

        r1 := @parameter0: java.util.regex.Pattern;

        staticinvoke <androidx.test.uiautomator.BySelector: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r1, "textValue cannot be null");

        $r3 = r0.<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mText>;

        if $r3 == null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Text selector is already defined");

        throw $r4;

     label1:
        r0.<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mText> = r1;

        return r0;
    }

    public androidx.test.uiautomator.BySelector checkable(boolean)
    {
        androidx.test.uiautomator.BySelector r0;
        boolean z0;
        java.lang.Boolean $r1, $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: androidx.test.uiautomator.BySelector;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mCheckable>;

        if $r1 == null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Checkable selector is already defined");

        throw $r3;

     label1:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mCheckable> = $r2;

        return r0;
    }

    public androidx.test.uiautomator.BySelector checked(boolean)
    {
        androidx.test.uiautomator.BySelector r0;
        boolean z0;
        java.lang.Boolean $r1, $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: androidx.test.uiautomator.BySelector;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mChecked>;

        if $r1 == null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Checked selector is already defined");

        throw $r3;

     label1:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mChecked> = $r2;

        return r0;
    }

    public androidx.test.uiautomator.BySelector clickable(boolean)
    {
        androidx.test.uiautomator.BySelector r0;
        boolean z0;
        java.lang.Boolean $r1, $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: androidx.test.uiautomator.BySelector;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mClickable>;

        if $r1 == null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Clickable selector is already defined");

        throw $r3;

     label1:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mClickable> = $r2;

        return r0;
    }

    public androidx.test.uiautomator.BySelector enabled(boolean)
    {
        androidx.test.uiautomator.BySelector r0;
        boolean z0;
        java.lang.Boolean $r1, $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: androidx.test.uiautomator.BySelector;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mEnabled>;

        if $r1 == null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Enabled selector is already defined");

        throw $r3;

     label1:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mEnabled> = $r2;

        return r0;
    }

    public androidx.test.uiautomator.BySelector focusable(boolean)
    {
        androidx.test.uiautomator.BySelector r0;
        boolean z0;
        java.lang.Boolean $r1, $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: androidx.test.uiautomator.BySelector;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mFocusable>;

        if $r1 == null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Focusable selector is already defined");

        throw $r3;

     label1:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mFocusable> = $r2;

        return r0;
    }

    public androidx.test.uiautomator.BySelector focused(boolean)
    {
        androidx.test.uiautomator.BySelector r0;
        boolean z0;
        java.lang.Boolean $r1, $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: androidx.test.uiautomator.BySelector;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mFocused>;

        if $r1 == null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Focused selector is already defined");

        throw $r3;

     label1:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mFocused> = $r2;

        return r0;
    }

    public androidx.test.uiautomator.BySelector longClickable(boolean)
    {
        androidx.test.uiautomator.BySelector r0;
        boolean z0;
        java.lang.Boolean $r1, $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: androidx.test.uiautomator.BySelector;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mLongClickable>;

        if $r1 == null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Long Clickable selector is already defined");

        throw $r3;

     label1:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mLongClickable> = $r2;

        return r0;
    }

    public androidx.test.uiautomator.BySelector scrollable(boolean)
    {
        androidx.test.uiautomator.BySelector r0;
        boolean z0;
        java.lang.Boolean $r1, $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: androidx.test.uiautomator.BySelector;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mScrollable>;

        if $r1 == null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Scrollable selector is already defined");

        throw $r3;

     label1:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mScrollable> = $r2;

        return r0;
    }

    public androidx.test.uiautomator.BySelector selected(boolean)
    {
        androidx.test.uiautomator.BySelector r0;
        boolean z0;
        java.lang.Boolean $r1, $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: androidx.test.uiautomator.BySelector;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mSelected>;

        if $r1 == null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Selected selector is already defined");

        throw $r3;

     label1:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mSelected> = $r2;

        return r0;
    }

    public androidx.test.uiautomator.BySelector depth(int)
    {
        androidx.test.uiautomator.BySelector r0, $r1;
        int i0;

        r0 := @this: androidx.test.uiautomator.BySelector;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.test.uiautomator.BySelector: androidx.test.uiautomator.BySelector depth(int,int)>(i0, i0);

        return $r1;
    }

    public androidx.test.uiautomator.BySelector depth(int, int)
    {
        androidx.test.uiautomator.BySelector r0;
        int i0, i1;
        java.lang.Integer $r1, $r2, $r3, $r4;
        java.lang.IllegalStateException $r5, $r6;
        java.lang.IllegalArgumentException $r7, $r8;

        r0 := @this: androidx.test.uiautomator.BySelector;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 >= 0 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("min cannot be negative");

        throw $r8;

     label1:
        if i1 >= 0 goto label2;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("max cannot be negative");

        throw $r7;

     label2:
        $r1 = r0.<androidx.test.uiautomator.BySelector: java.lang.Integer mMinDepth>;

        if $r1 == null goto label3;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Minimum Depth selector is already defined");

        throw $r6;

     label3:
        $r2 = r0.<androidx.test.uiautomator.BySelector: java.lang.Integer mMaxDepth>;

        if $r2 == null goto label4;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Maximum Depth selector is already defined");

        throw $r5;

     label4:
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r0.<androidx.test.uiautomator.BySelector: java.lang.Integer mMinDepth> = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        r0.<androidx.test.uiautomator.BySelector: java.lang.Integer mMaxDepth> = $r4;

        return r0;
    }

    public androidx.test.uiautomator.BySelector minDepth(int)
    {
        androidx.test.uiautomator.BySelector r0;
        int i0;
        java.lang.Integer $r1, $r2;
        java.lang.IllegalStateException $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: androidx.test.uiautomator.BySelector;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("min cannot be negative");

        throw $r4;

     label1:
        $r1 = r0.<androidx.test.uiautomator.BySelector: java.lang.Integer mMinDepth>;

        if $r1 == null goto label2;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Depth selector is already defined");

        throw $r3;

     label2:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r0.<androidx.test.uiautomator.BySelector: java.lang.Integer mMinDepth> = $r2;

        return r0;
    }

    public androidx.test.uiautomator.BySelector maxDepth(int)
    {
        androidx.test.uiautomator.BySelector r0;
        int i0;
        java.lang.Integer $r1, $r2;
        java.lang.IllegalStateException $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: androidx.test.uiautomator.BySelector;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("max cannot be negative");

        throw $r4;

     label1:
        $r1 = r0.<androidx.test.uiautomator.BySelector: java.lang.Integer mMaxDepth>;

        if $r1 == null goto label2;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Depth selector is already defined");

        throw $r3;

     label2:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r0.<androidx.test.uiautomator.BySelector: java.lang.Integer mMaxDepth> = $r2;

        return r0;
    }

    public androidx.test.uiautomator.BySelector hasChild(androidx.test.uiautomator.BySelector)
    {
        androidx.test.uiautomator.BySelector r0, r1, $r3;

        r0 := @this: androidx.test.uiautomator.BySelector;

        r1 := @parameter0: androidx.test.uiautomator.BySelector;

        staticinvoke <androidx.test.uiautomator.BySelector: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r1, "childSelector cannot be null");

        $r3 = virtualinvoke r0.<androidx.test.uiautomator.BySelector: androidx.test.uiautomator.BySelector hasDescendant(androidx.test.uiautomator.BySelector,int)>(r1, 1);

        return $r3;
    }

    public androidx.test.uiautomator.BySelector hasDescendant(androidx.test.uiautomator.BySelector)
    {
        androidx.test.uiautomator.BySelector r0, r1;
        java.util.List $r3;

        r0 := @this: androidx.test.uiautomator.BySelector;

        r1 := @parameter0: androidx.test.uiautomator.BySelector;

        staticinvoke <androidx.test.uiautomator.BySelector: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r1, "descendantSelector cannot be null");

        $r3 = r0.<androidx.test.uiautomator.BySelector: java.util.List mChildSelectors>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public androidx.test.uiautomator.BySelector hasDescendant(androidx.test.uiautomator.BySelector, int)
    {
        androidx.test.uiautomator.BySelector r0, r1;
        int i0;
        java.lang.Integer $r3;
        java.util.List $r4;

        r0 := @this: androidx.test.uiautomator.BySelector;

        r1 := @parameter0: androidx.test.uiautomator.BySelector;

        i0 := @parameter1: int;

        staticinvoke <androidx.test.uiautomator.BySelector: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r1, "descendantSelector cannot be null");

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r1.<androidx.test.uiautomator.BySelector: java.lang.Integer mMaxDepth> = $r3;

        $r4 = r0.<androidx.test.uiautomator.BySelector: java.util.List mChildSelectors>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public java.lang.String toString()
    {
        androidx.test.uiautomator.BySelector r0, r3;
        java.lang.StringBuilder r1, $r4, $r23, $r26, $r28, $r30, $r32, $r34, $r36, $r38, $r40, $r42, $r44, $r46, $r48, $r50, $r52, $r54, $r56, $r58, $r60, $r62, $r64, $r66, $r68, $r70, $r72, $r74, $r76, $r78, $r80, $r82;
        java.util.Iterator r2;
        java.util.regex.Pattern $r5, $r6, $r7, $r8, $r9, $r65, $r69, $r73, $r77, $r81;
        java.lang.Boolean $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r29, $r33, $r37, $r41, $r45, $r49, $r53, $r57, $r61;
        java.util.List $r19;
        int $i0, $i1;
        java.lang.String $r21, $r24, $r25;
        java.lang.Object $r22;
        boolean $z0;

        r0 := @this: androidx.test.uiautomator.BySelector;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("BySelector [");

        r1 = $r4;

        $r5 = r0.<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mClazz>;

        if $r5 == null goto label01;

        $r80 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CLASS=\'");

        $r81 = r0.<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mClazz>;

        $r82 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r81);

        virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', ");

     label01:
        $r6 = r0.<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mDesc>;

        if $r6 == null goto label02;

        $r76 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DESC=\'");

        $r77 = r0.<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mDesc>;

        $r78 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r77);

        virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', ");

     label02:
        $r7 = r0.<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mPkg>;

        if $r7 == null goto label03;

        $r72 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PKG=\'");

        $r73 = r0.<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mPkg>;

        $r74 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r73);

        virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', ");

     label03:
        $r8 = r0.<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mRes>;

        if $r8 == null goto label04;

        $r68 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RES=\'");

        $r69 = r0.<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mRes>;

        $r70 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r69);

        virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', ");

     label04:
        $r9 = r0.<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mText>;

        if $r9 == null goto label05;

        $r64 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TEXT=\'");

        $r65 = r0.<androidx.test.uiautomator.BySelector: java.util.regex.Pattern mText>;

        $r66 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r65);

        virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', ");

     label05:
        $r10 = r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mChecked>;

        if $r10 == null goto label06;

        $r60 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CHECKED=\'");

        $r61 = r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mChecked>;

        $r62 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r61);

        virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', ");

     label06:
        $r11 = r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mCheckable>;

        if $r11 == null goto label07;

        $r56 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CHECKABLE=\'");

        $r57 = r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mCheckable>;

        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r57);

        virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', ");

     label07:
        $r12 = r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mClickable>;

        if $r12 == null goto label08;

        $r52 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CLICKABLE=\'");

        $r53 = r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mClickable>;

        $r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r53);

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', ");

     label08:
        $r13 = r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mEnabled>;

        if $r13 == null goto label09;

        $r48 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ENABLED=\'");

        $r49 = r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mEnabled>;

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r49);

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', ");

     label09:
        $r14 = r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mFocused>;

        if $r14 == null goto label10;

        $r44 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FOCUSED=\'");

        $r45 = r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mFocused>;

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r45);

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', ");

     label10:
        $r15 = r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mFocusable>;

        if $r15 == null goto label11;

        $r40 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FOCUSABLE=\'");

        $r41 = r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mFocusable>;

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r41);

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', ");

     label11:
        $r16 = r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mLongClickable>;

        if $r16 == null goto label12;

        $r36 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LONGCLICKABLE=\'");

        $r37 = r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mLongClickable>;

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r37);

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', ");

     label12:
        $r17 = r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mScrollable>;

        if $r17 == null goto label13;

        $r32 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SCROLLABLE=\'");

        $r33 = r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mScrollable>;

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33);

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', ");

     label13:
        $r18 = r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mSelected>;

        if $r18 == null goto label14;

        $r28 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECTED=\'");

        $r29 = r0.<androidx.test.uiautomator.BySelector: java.lang.Boolean mSelected>;

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', ");

     label14:
        $r19 = r0.<androidx.test.uiautomator.BySelector: java.util.List mChildSelectors>;

        r2 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label16;

        $r22 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.test.uiautomator.BySelector) $r22;

        $r23 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CHILD=\'");

        $r24 = virtualinvoke r3.<androidx.test.uiautomator.BySelector: java.lang.String toString()>();

        $r25 = virtualinvoke $r24.<java.lang.String: java.lang.String substring(int)>(11);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', ");

        goto label15;

     label16:
        $i0 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        $i1 = $i0 - 2;

        virtualinvoke r1.<java.lang.StringBuilder: void setLength(int)>($i1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r21 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r21;
    }

    private static java.lang.Object checkNotNull(java.lang.Object, java.lang.String)
    {
        java.lang.Object r0;
        java.lang.String r1;
        java.lang.NullPointerException $r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>(r1);

        throw $r2;

     label1:
        return r0;
    }

