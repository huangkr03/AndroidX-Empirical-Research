io.grpc.stub.AbstractAsyncStub
<io.grpc.stub.AbstractAsyncStub: boolean $assertionsDisabled>
    static void <clinit>()
    {
        <io.grpc.stub.AbstractAsyncStub: boolean $assertionsDisabled> = 1;

        return;
    }

    protected void <init>(io.grpc.Channel, io.grpc.CallOptions)
    {
        io.grpc.stub.AbstractAsyncStub $r0;
        io.grpc.Channel $r1;
        io.grpc.CallOptions $r2;

        $r0 := @this: io.grpc.stub.AbstractAsyncStub;

        $r1 := @parameter0: io.grpc.Channel;

        $r2 := @parameter1: io.grpc.CallOptions;

        specialinvoke $r0.<io.grpc.stub.AbstractStub: void <init>(io.grpc.Channel,io.grpc.CallOptions)>($r1, $r2);

        return;
    }

    public static io.grpc.stub.AbstractStub newStub(io.grpc.stub.AbstractStub$StubFactory, io.grpc.Channel)
    {
        io.grpc.Channel $r0;
        io.grpc.CallOptions $r1;
        io.grpc.stub.AbstractStub $r2;
        io.grpc.stub.AbstractStub$StubFactory $r3;

        $r3 := @parameter0: io.grpc.stub.AbstractStub$StubFactory;

        $r0 := @parameter1: io.grpc.Channel;

        $r1 = <io.grpc.CallOptions: io.grpc.CallOptions DEFAULT>;

        $r2 = staticinvoke <io.grpc.stub.AbstractAsyncStub: io.grpc.stub.AbstractStub newStub(io.grpc.stub.AbstractStub$StubFactory,io.grpc.Channel,io.grpc.CallOptions)>($r3, $r0, $r1);

        return $r2;
    }

    public static io.grpc.stub.AbstractStub newStub(io.grpc.stub.AbstractStub$StubFactory, io.grpc.Channel, io.grpc.CallOptions)
    {
        io.grpc.stub.ClientCalls$StubType $r0;
        io.grpc.stub.AbstractStub$StubFactory $r1;
        io.grpc.Channel $r2;
        io.grpc.CallOptions $r3;
        io.grpc.CallOptions$Key $r4;
        io.grpc.stub.AbstractStub $r5;
        boolean $z0;
        java.lang.AssertionError $r6;
        java.lang.Object[] $r7;
        java.lang.Class $r8;
        java.lang.String $r9;

        $r1 := @parameter0: io.grpc.stub.AbstractStub$StubFactory;

        $r2 := @parameter1: io.grpc.Channel;

        $r3 := @parameter2: io.grpc.CallOptions;

        $r4 = <io.grpc.stub.ClientCalls: io.grpc.CallOptions$Key STUB_TYPE_OPTION>;

        $r0 = <io.grpc.stub.ClientCalls$StubType: io.grpc.stub.ClientCalls$StubType ASYNC>;

        $r3 = virtualinvoke $r3.<io.grpc.CallOptions: io.grpc.CallOptions withOption(io.grpc.CallOptions$Key,java.lang.Object)>($r4, $r0);

        $r5 = interfaceinvoke $r1.<io.grpc.stub.AbstractStub$StubFactory: io.grpc.stub.AbstractStub newStub(io.grpc.Channel,io.grpc.CallOptions)>($r2, $r3);

        $z0 = <io.grpc.stub.AbstractAsyncStub: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $z0 = $r5 instanceof io.grpc.stub.AbstractAsyncStub;

        if $z0 == 0 goto label1;

        return $r5;

     label1:
        $r6 = new java.lang.AssertionError;

        $r7 = newarray (java.lang.Object)[1];

        $r8 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

        $r7[0] = $r8;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Expected AbstractAsyncStub, but got %s.", $r7);

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>($r9);

        throw $r6;

     label2:
        return $r5;
    }

