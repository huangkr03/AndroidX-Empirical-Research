androidx.ui.geometry.OffsetBase
<androidx.ui.geometry.OffsetBase: float getDx()>
<androidx.ui.geometry.OffsetBase: float getDy()>
<androidx.ui.geometry.OffsetBase: boolean isInfinite()>
<androidx.ui.geometry.OffsetBase: boolean isFinite()>
<androidx.ui.geometry.OffsetBase: boolean isLessThan(androidx.ui.geometry.OffsetBase)>
<androidx.ui.geometry.OffsetBase: boolean isLessOrEqThan(androidx.ui.geometry.OffsetBase)>
<androidx.ui.geometry.OffsetBase: boolean isGreaterThan(androidx.ui.geometry.OffsetBase)>
<androidx.ui.geometry.OffsetBase: boolean isGreaterOrEqThan(androidx.ui.geometry.OffsetBase)>
androidx.ui.geometry.OffsetBase$DefaultImpls
    public static boolean isInfinite(androidx.ui.geometry.OffsetBase)
    {
        androidx.ui.geometry.OffsetBase r0;
        float $f0, $f1, $f2, $f3;
        kotlin.jvm.internal.FloatCompanionObject $r1, $r2;
        byte $b0, $b1;
        boolean $z0;

        r0 := @parameter0: androidx.ui.geometry.OffsetBase;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this");

        $f0 = interfaceinvoke r0.<androidx.ui.geometry.OffsetBase: float getDx()>();

        $r1 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $f1 = virtualinvoke $r1.<kotlin.jvm.internal.FloatCompanionObject: float getPOSITIVE_INFINITY()>();

        $b0 = $f0 cmpl $f1;

        if $b0 >= 0 goto label1;

        $f2 = interfaceinvoke r0.<androidx.ui.geometry.OffsetBase: float getDy()>();

        $r2 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $f3 = virtualinvoke $r2.<kotlin.jvm.internal.FloatCompanionObject: float getPOSITIVE_INFINITY()>();

        $b1 = $f2 cmpl $f3;

        if $b1 < 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public static boolean isFinite(androidx.ui.geometry.OffsetBase)
    {
        androidx.ui.geometry.OffsetBase r0;
        boolean $z0, $z1, $z2, $z3, z4, z5, z6, $z7, z8, z9, z10, $z11, $z12;
        float f0, f1, f2, f3, f4, f5;

        r0 := @parameter0: androidx.ui.geometry.OffsetBase;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this");

        f0 = interfaceinvoke r0.<androidx.ui.geometry.OffsetBase: float getDx()>();

        z4 = 0;

        f1 = f0;

        z5 = 0;

        $z0 = staticinvoke <java.lang.Float: boolean isInfinite(float)>(f1);

        if $z0 != 0 goto label1;

        f2 = f0;

        z6 = 0;

        $z3 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f2);

        if $z3 != 0 goto label1;

        $z7 = 1;

        goto label2;

     label1:
        $z7 = 0;

     label2:
        if $z7 == 0 goto label5;

        f3 = interfaceinvoke r0.<androidx.ui.geometry.OffsetBase: float getDy()>();

        z8 = 0;

        f4 = f3;

        z9 = 0;

        $z1 = staticinvoke <java.lang.Float: boolean isInfinite(float)>(f4);

        if $z1 != 0 goto label3;

        f5 = f3;

        z10 = 0;

        $z2 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f5);

        if $z2 != 0 goto label3;

        $z11 = 1;

        goto label4;

     label3:
        $z11 = 0;

     label4:
        if $z11 == 0 goto label5;

        $z12 = 1;

        goto label6;

     label5:
        $z12 = 0;

     label6:
        return $z12;
    }

    public static boolean isLessThan(androidx.ui.geometry.OffsetBase, androidx.ui.geometry.OffsetBase)
    {
        androidx.ui.geometry.OffsetBase r0, r1;
        float $f0, $f1, $f2, $f3;
        byte $b0, $b1;
        boolean $z0;

        r0 := @parameter0: androidx.ui.geometry.OffsetBase;

        r1 := @parameter1: androidx.ui.geometry.OffsetBase;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "other");

        $f0 = interfaceinvoke r0.<androidx.ui.geometry.OffsetBase: float getDx()>();

        $f1 = interfaceinvoke r1.<androidx.ui.geometry.OffsetBase: float getDx()>();

        $b0 = $f0 cmpg $f1;

        if $b0 >= 0 goto label1;

        $f2 = interfaceinvoke r0.<androidx.ui.geometry.OffsetBase: float getDy()>();

        $f3 = interfaceinvoke r1.<androidx.ui.geometry.OffsetBase: float getDy()>();

        $b1 = $f2 cmpg $f3;

        if $b1 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isLessOrEqThan(androidx.ui.geometry.OffsetBase, androidx.ui.geometry.OffsetBase)
    {
        androidx.ui.geometry.OffsetBase r0, r1;
        float $f0, $f1, $f2, $f3;
        byte $b0, $b1;
        boolean $z0;

        r0 := @parameter0: androidx.ui.geometry.OffsetBase;

        r1 := @parameter1: androidx.ui.geometry.OffsetBase;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "other");

        $f0 = interfaceinvoke r0.<androidx.ui.geometry.OffsetBase: float getDx()>();

        $f1 = interfaceinvoke r1.<androidx.ui.geometry.OffsetBase: float getDx()>();

        $b0 = $f0 cmpg $f1;

        if $b0 > 0 goto label1;

        $f2 = interfaceinvoke r0.<androidx.ui.geometry.OffsetBase: float getDy()>();

        $f3 = interfaceinvoke r1.<androidx.ui.geometry.OffsetBase: float getDy()>();

        $b1 = $f2 cmpg $f3;

        if $b1 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isGreaterThan(androidx.ui.geometry.OffsetBase, androidx.ui.geometry.OffsetBase)
    {
        androidx.ui.geometry.OffsetBase r0, r1;
        float $f0, $f1, $f2, $f3;
        byte $b0, $b1;
        boolean $z0;

        r0 := @parameter0: androidx.ui.geometry.OffsetBase;

        r1 := @parameter1: androidx.ui.geometry.OffsetBase;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "other");

        $f0 = interfaceinvoke r0.<androidx.ui.geometry.OffsetBase: float getDx()>();

        $f1 = interfaceinvoke r1.<androidx.ui.geometry.OffsetBase: float getDx()>();

        $b0 = $f0 cmpl $f1;

        if $b0 <= 0 goto label1;

        $f2 = interfaceinvoke r0.<androidx.ui.geometry.OffsetBase: float getDy()>();

        $f3 = interfaceinvoke r1.<androidx.ui.geometry.OffsetBase: float getDy()>();

        $b1 = $f2 cmpl $f3;

        if $b1 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isGreaterOrEqThan(androidx.ui.geometry.OffsetBase, androidx.ui.geometry.OffsetBase)
    {
        androidx.ui.geometry.OffsetBase r0, r1;
        float $f0, $f1, $f2, $f3;
        byte $b0, $b1;
        boolean $z0;

        r0 := @parameter0: androidx.ui.geometry.OffsetBase;

        r1 := @parameter1: androidx.ui.geometry.OffsetBase;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "other");

        $f0 = interfaceinvoke r0.<androidx.ui.geometry.OffsetBase: float getDx()>();

        $f1 = interfaceinvoke r1.<androidx.ui.geometry.OffsetBase: float getDx()>();

        $b0 = $f0 cmpl $f1;

        if $b0 <= 0 goto label1;

        $f2 = interfaceinvoke r0.<androidx.ui.geometry.OffsetBase: float getDy()>();

        $f3 = interfaceinvoke r1.<androidx.ui.geometry.OffsetBase: float getDy()>();

        $b1 = $f2 cmpl $f3;

        if $b1 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

