androidx.lifecycle.ViewModelProviders
    public void <init>()
    {
        androidx.lifecycle.ViewModelProviders r0;

        r0 := @this: androidx.lifecycle.ViewModelProviders;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static androidx.lifecycle.ViewModelProvider of(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.Fragment r0;
        androidx.lifecycle.ViewModelProvider $r1;

        r0 := @parameter0: androidx.fragment.app.Fragment;

        $r1 = new androidx.lifecycle.ViewModelProvider;

        specialinvoke $r1.<androidx.lifecycle.ViewModelProvider: void <init>(androidx.lifecycle.ViewModelStoreOwner)>(r0);

        return $r1;
    }

    public static androidx.lifecycle.ViewModelProvider of(androidx.fragment.app.FragmentActivity)
    {
        androidx.fragment.app.FragmentActivity r0;
        androidx.lifecycle.ViewModelProvider $r1;

        r0 := @parameter0: androidx.fragment.app.FragmentActivity;

        $r1 = new androidx.lifecycle.ViewModelProvider;

        specialinvoke $r1.<androidx.lifecycle.ViewModelProvider: void <init>(androidx.lifecycle.ViewModelStoreOwner)>(r0);

        return $r1;
    }

    public static androidx.lifecycle.ViewModelProvider of(androidx.fragment.app.Fragment, androidx.lifecycle.ViewModelProvider$Factory)
    {
        androidx.fragment.app.Fragment r0;
        androidx.lifecycle.ViewModelProvider $r1;
        androidx.lifecycle.ViewModelStore $r2;
        androidx.lifecycle.ViewModelProvider$Factory r3;

        r0 := @parameter0: androidx.fragment.app.Fragment;

        r3 := @parameter1: androidx.lifecycle.ViewModelProvider$Factory;

        if r3 != null goto label1;

        r3 = virtualinvoke r0.<androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory()>();

     label1:
        $r1 = new androidx.lifecycle.ViewModelProvider;

        $r2 = virtualinvoke r0.<androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelStore getViewModelStore()>();

        specialinvoke $r1.<androidx.lifecycle.ViewModelProvider: void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory)>($r2, r3);

        return $r1;
    }

    public static androidx.lifecycle.ViewModelProvider of(androidx.fragment.app.FragmentActivity, androidx.lifecycle.ViewModelProvider$Factory)
    {
        androidx.fragment.app.FragmentActivity r0;
        androidx.lifecycle.ViewModelProvider $r1;
        androidx.lifecycle.ViewModelStore $r2;
        androidx.lifecycle.ViewModelProvider$Factory r3;

        r0 := @parameter0: androidx.fragment.app.FragmentActivity;

        r3 := @parameter1: androidx.lifecycle.ViewModelProvider$Factory;

        if r3 != null goto label1;

        r3 = virtualinvoke r0.<androidx.fragment.app.FragmentActivity: androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory()>();

     label1:
        $r1 = new androidx.lifecycle.ViewModelProvider;

        $r2 = virtualinvoke r0.<androidx.fragment.app.FragmentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()>();

        specialinvoke $r1.<androidx.lifecycle.ViewModelProvider: void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory)>($r2, r3);

        return $r1;
    }

androidx.lifecycle.ViewModelProviders$DefaultFactory
    public void <init>(android.app.Application)
    {
        androidx.lifecycle.ViewModelProviders$DefaultFactory r0;
        android.app.Application r1;

        r0 := @this: androidx.lifecycle.ViewModelProviders$DefaultFactory;

        r1 := @parameter0: android.app.Application;

        specialinvoke r0.<androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: void <init>(android.app.Application)>(r1);

        return;
    }

