androidx.room.compiler.processing.util.KotlinCompilationResult
<androidx.room.compiler.processing.util.KotlinCompilationResult: androidx.room.compiler.processing.util.compiler.TestCompilationResult delegate>
    public void <init>(androidx.room.compiler.processing.util.runner.CompilationTestRunner, androidx.room.compiler.processing.SyntheticProcessor, androidx.room.compiler.processing.util.compiler.TestCompilationResult)
    {
        androidx.room.compiler.processing.util.KotlinCompilationResult r0;
        androidx.room.compiler.processing.util.runner.CompilationTestRunner r1;
        androidx.room.compiler.processing.SyntheticProcessor r2;
        androidx.room.compiler.processing.util.compiler.TestCompilationResult r3;
        java.lang.String $r4;
        boolean $z0;
        java.util.Map $r5;

        r0 := @this: androidx.room.compiler.processing.util.KotlinCompilationResult;

        r1 := @parameter0: androidx.room.compiler.processing.util.runner.CompilationTestRunner;

        r2 := @parameter1: androidx.room.compiler.processing.SyntheticProcessor;

        r3 := @parameter2: androidx.room.compiler.processing.util.compiler.TestCompilationResult;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "testRunner");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "processor");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "delegate");

        $r4 = interfaceinvoke r1.<androidx.room.compiler.processing.util.runner.CompilationTestRunner: java.lang.String getName()>();

        $z0 = virtualinvoke r3.<androidx.room.compiler.processing.util.compiler.TestCompilationResult: boolean getSuccess()>();

        $r5 = virtualinvoke r3.<androidx.room.compiler.processing.util.compiler.TestCompilationResult: java.util.Map getDiagnostics()>();

        specialinvoke r0.<androidx.room.compiler.processing.util.CompilationResult: void <init>(java.lang.String,androidx.room.compiler.processing.SyntheticProcessor,boolean,java.util.Map)>($r4, r2, $z0, $r5);

        r0.<androidx.room.compiler.processing.util.KotlinCompilationResult: androidx.room.compiler.processing.util.compiler.TestCompilationResult delegate> = r3;

        return;
    }

    public java.util.List getGeneratedSources$room_compiler_processing_testing()
    {
        androidx.room.compiler.processing.util.KotlinCompilationResult r0;
        androidx.room.compiler.processing.util.compiler.TestCompilationResult $r1;
        java.util.List $r2;

        r0 := @this: androidx.room.compiler.processing.util.KotlinCompilationResult;

        $r1 = r0.<androidx.room.compiler.processing.util.KotlinCompilationResult: androidx.room.compiler.processing.util.compiler.TestCompilationResult delegate>;

        $r2 = virtualinvoke $r1.<androidx.room.compiler.processing.util.compiler.TestCompilationResult: java.util.List getGeneratedSources()>();

        return $r2;
    }

    public java.lang.String rawOutput()
    {
        androidx.room.compiler.processing.util.KotlinCompilationResult r0;
        java.util.Map $r1;
        java.util.Collection r2;
        java.util.Iterator r3;
        java.util.Map$Entry r4, r18;
        androidx.room.compiler.processing.util.compiler.TestCompilationResult $r5;
        java.util.ArrayList $r6;
        java.util.Set $r7;
        boolean $z3;
        java.util.List $r8, $r17;
        java.lang.Iterable $r9, r19;
        java.lang.String $r10, $r14;
        androidx.room.compiler.processing.util.KotlinCompilationResult$rawOutput$2 $r11;
        kotlin.jvm.functions.Function1 $r12;
        java.lang.CharSequence $r13;
        java.lang.Object $r15, $r16;

        r0 := @this: androidx.room.compiler.processing.util.KotlinCompilationResult;

        $r5 = r0.<androidx.room.compiler.processing.util.KotlinCompilationResult: androidx.room.compiler.processing.util.compiler.TestCompilationResult delegate>;

        $r1 = virtualinvoke $r5.<androidx.room.compiler.processing.util.compiler.TestCompilationResult: java.util.Map getDiagnostics()>();

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r2 = (java.util.Collection) $r6;

        $r7 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        $r15 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r15;

        r18 = r4;

        $r16 = interfaceinvoke r18.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r17 = (java.util.List) $r16;

        r19 = (java.lang.Iterable) $r17;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r2, r19);

        goto label1;

     label2:
        $r8 = (java.util.List) r2;

        $r9 = (java.lang.Iterable) $r8;

        $r10 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r10, "lineSeparator()");

        $r13 = (java.lang.CharSequence) $r10;

        $r11 = <androidx.room.compiler.processing.util.KotlinCompilationResult$rawOutput$2: androidx.room.compiler.processing.util.KotlinCompilationResult$rawOutput$2 INSTANCE>;

        $r12 = (kotlin.jvm.functions.Function1) $r11;

        $r14 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r9, $r13, null, null, 0, null, $r12, 30, null);

        return $r14;
    }

