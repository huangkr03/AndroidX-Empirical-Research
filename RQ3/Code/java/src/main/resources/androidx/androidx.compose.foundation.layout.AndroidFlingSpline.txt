androidx.compose.foundation.layout.AndroidFlingSpline
<androidx.compose.foundation.layout.AndroidFlingSpline: androidx.compose.foundation.layout.AndroidFlingSpline INSTANCE>
<androidx.compose.foundation.layout.AndroidFlingSpline: int NbSamples>
<androidx.compose.foundation.layout.AndroidFlingSpline: float[] SplinePositions>
<androidx.compose.foundation.layout.AndroidFlingSpline: float[] SplineTimes>
    private void <init>()
    {
        androidx.compose.foundation.layout.AndroidFlingSpline r0;

        r0 := @this: androidx.compose.foundation.layout.AndroidFlingSpline;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final long flingPosition-LfoxSSI(float)
    {
        androidx.compose.foundation.layout.AndroidFlingSpline r0;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, f12, f13, f14, f15, f16;
        int i0, $i1, $i2, $i7, $i8;
        long $l3, $l4, $l5, $l6, l9, l10;
        float[] $r1, $r2;
        boolean z0;

        r0 := @this: androidx.compose.foundation.layout.AndroidFlingSpline;

        f0 := @parameter0: float;

        $f2 = (float) 100;

        $f3 = $f2 * f0;

        i0 = (int) $f3;

        f12 = 1.0F;

        f13 = 0.0F;

        if i0 >= 100 goto label1;

        $f5 = (float) i0;

        $f4 = (float) 100;

        f14 = $f5 / $f4;

        $i7 = i0 + 1;

        $f7 = (float) $i7;

        $f6 = (float) 100;

        f15 = $f7 / $f6;

        $r1 = <androidx.compose.foundation.layout.AndroidFlingSpline: float[] SplinePositions>;

        f1 = $r1[i0];

        $r2 = <androidx.compose.foundation.layout.AndroidFlingSpline: float[] SplinePositions>;

        $i8 = i0 + 1;

        f16 = $r2[$i8];

        $f9 = f16 - f1;

        $f8 = f15 - f14;

        f13 = $f9 / $f8;

        $f10 = f0 - f14;

        $f11 = $f10 * f13;

        f12 = f1 + $f11;

     label1:
        z0 = 0;

        $i1 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f12);

        l9 = (long) $i1;

        $i2 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f13);

        l10 = (long) $i2;

        $l4 = l9 << 32;

        $l3 = l10 & 4294967295L;

        $l5 = $l4 | $l3;

        $l6 = staticinvoke <androidx.compose.foundation.layout.AndroidFlingSpline$FlingResult: long constructor-impl(long)>($l5);

        return $l6;
    }

    public final double deceleration(float, float)
    {
        androidx.compose.foundation.layout.AndroidFlingSpline r0;
        float f0, f1, $f2, $f3;
        double $d0, $d1, $d2, $d3;

        r0 := @this: androidx.compose.foundation.layout.AndroidFlingSpline;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $f2 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        $f3 = 0.35F * $f2;

        $d1 = (double) $f3;

        $d0 = (double) f1;

        $d2 = $d1 / $d0;

        $d3 = staticinvoke <java.lang.Math: double log(double)>($d2);

        return $d3;
    }

    static void <clinit>()
    {
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, f19, f20, f21, f22, f23, f24, $f25, $f26, f27, $f28, $f29, f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, f38, $f39, $f40, f41, f42, f43, $f44, $f45, f46, $f47, $f48, f49, $f50, $f51, $f52, $f53, $f54, $f55, f56, $f57, $f58;
        androidx.compose.foundation.layout.AndroidFlingSpline $r0;
        float[] $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        byte $b0, $b1, $b3, $b4;
        int i2;
        double $d0, $d1;

        $r0 = new androidx.compose.foundation.layout.AndroidFlingSpline;

        specialinvoke $r0.<androidx.compose.foundation.layout.AndroidFlingSpline: void <init>()>();

        <androidx.compose.foundation.layout.AndroidFlingSpline: androidx.compose.foundation.layout.AndroidFlingSpline INSTANCE> = $r0;

        $r1 = newarray (float)[101];

        <androidx.compose.foundation.layout.AndroidFlingSpline: float[] SplinePositions> = $r1;

        $r2 = newarray (float)[101];

        <androidx.compose.foundation.layout.AndroidFlingSpline: float[] SplineTimes> = $r2;

        f19 = 0.0F;

        f20 = 0.0F;

        i2 = 0;

     label1:
        if i2 >= 100 goto label8;

        $f3 = (float) i2;

        $f2 = (float) 100;

        f0 = $f3 / $f2;

        f21 = 1.0F;

        f22 = 0.0F;

        f23 = 0.0F;

        f24 = 0.0F;

     label2:
        $f25 = f21 - f19;

        $f26 = $f25 / 2.0F;

        f27 = f19 + $f26;

        $f28 = 3.0F * f27;

        $f29 = 1.0F - f27;

        f30 = $f28 * $f29;

        $f31 = 1.0F - f27;

        $f32 = $f31 * 0.175F;

        $f33 = f27 * 0.35000002F;

        $f34 = $f32 + $f33;

        $f35 = f30 * $f34;

        $f36 = f27 * f27;

        $f37 = $f36 * f27;

        f38 = $f35 + $f37;

        $f39 = f38 - f0;

        $f40 = staticinvoke <java.lang.Math: float abs(float)>($f39);

        $d0 = (double) $f40;

        $b3 = $d0 cmpg 1.0E-5;

        if $b3 < 0 goto label4;

        $b1 = f38 cmpl f0;

        if $b1 <= 0 goto label3;

        f21 = f27;

        goto label2;

     label3:
        f19 = f27;

        goto label2;

     label4:
        $r6 = <androidx.compose.foundation.layout.AndroidFlingSpline: float[] SplinePositions>;

        $f4 = 1.0F - f27;

        $f5 = $f4 * 0.5F;

        $f6 = $f5 + f27;

        $f9 = f30 * $f6;

        $f7 = f27 * f27;

        $f8 = $f7 * f27;

        $f10 = $f9 + $f8;

        $r6[i2] = $f10;

        f41 = 1.0F;

        f42 = 0.0F;

        f43 = 0.0F;

     label5:
        $f44 = f41 - f20;

        $f45 = $f44 / 2.0F;

        f46 = f20 + $f45;

        $f47 = 3.0F * f46;

        $f48 = 1.0F - f46;

        f49 = $f47 * $f48;

        $f50 = 1.0F - f46;

        $f51 = $f50 * 0.5F;

        $f52 = $f51 + f46;

        $f53 = f49 * $f52;

        $f54 = f46 * f46;

        $f55 = $f54 * f46;

        f56 = $f53 + $f55;

        $f57 = f56 - f0;

        $f58 = staticinvoke <java.lang.Math: float abs(float)>($f57);

        $d1 = (double) $f58;

        $b4 = $d1 cmpg 1.0E-5;

        if $b4 < 0 goto label7;

        $b0 = f56 cmpl f0;

        if $b0 <= 0 goto label6;

        f41 = f46;

        goto label5;

     label6:
        f20 = f46;

        goto label5;

     label7:
        $r7 = <androidx.compose.foundation.layout.AndroidFlingSpline: float[] SplineTimes>;

        $f11 = 1.0F - f46;

        $f13 = $f11 * 0.175F;

        $f12 = f46 * 0.35000002F;

        $f14 = $f13 + $f12;

        $f17 = f49 * $f14;

        $f15 = f46 * f46;

        $f16 = $f15 * f46;

        $f18 = $f17 + $f16;

        $r7[i2] = $f18;

        i2 = i2 + 1;

        goto label1;

     label8:
        $r3 = <androidx.compose.foundation.layout.AndroidFlingSpline: float[] SplineTimes>;

        $r3[100] = 1.0F;

        $r5 = <androidx.compose.foundation.layout.AndroidFlingSpline: float[] SplinePositions>;

        $r4 = <androidx.compose.foundation.layout.AndroidFlingSpline: float[] SplineTimes>;

        $f1 = $r4[100];

        $r5[100] = $f1;

        return;
    }

androidx.compose.foundation.layout.AndroidFlingSpline$FlingResult
<androidx.compose.foundation.layout.AndroidFlingSpline$FlingResult: long packedValue>
    public static final float getDistanceCoefficient-impl(long)
    {
        long l0, l1, $l2;
        kotlin.jvm.internal.FloatCompanionObject $r0;
        int $i3;
        float $f0;

        l0 := @parameter0: long;

        l1 = l0;

        $r0 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l2 = l1 >> 32;

        $i3 = (int) $l2;

        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i3);

        return $f0;
    }

    public static final float getVelocityCoefficient-impl(long)
    {
        long l0, l1, $l2;
        kotlin.jvm.internal.FloatCompanionObject $r0;
        int $i3;
        float $f0;

        l0 := @parameter0: long;

        l1 = l0;

        $r0 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l2 = l1 & 4294967295L;

        $i3 = (int) $l2;

        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i3);

        return $f0;
    }

    public static java.lang.String toString-impl(long)
    {
        long l0;
        java.lang.StringBuilder $r0, $r1, $r2, $r3;
        java.lang.String $r4;

        l0 := @parameter0: long;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FlingResult(packedValue=");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public java.lang.String toString()
    {
        androidx.compose.foundation.layout.AndroidFlingSpline$FlingResult r0;
        long $l0;
        java.lang.String $r1;

        r0 := @this: androidx.compose.foundation.layout.AndroidFlingSpline$FlingResult;

        $l0 = r0.<androidx.compose.foundation.layout.AndroidFlingSpline$FlingResult: long packedValue>;

        $r1 = staticinvoke <androidx.compose.foundation.layout.AndroidFlingSpline$FlingResult: java.lang.String toString-impl(long)>($l0);

        return $r1;
    }

    public static int hashCode-impl(long)
    {
        long l0;
        int $i1;

        l0 := @parameter0: long;

        $i1 = staticinvoke <java.lang.Long: int hashCode(long)>(l0);

        return $i1;
    }

    public int hashCode()
    {
        androidx.compose.foundation.layout.AndroidFlingSpline$FlingResult r0;
        long $l0;
        int $i1;

        r0 := @this: androidx.compose.foundation.layout.AndroidFlingSpline$FlingResult;

        $l0 = r0.<androidx.compose.foundation.layout.AndroidFlingSpline$FlingResult: long packedValue>;

        $i1 = staticinvoke <androidx.compose.foundation.layout.AndroidFlingSpline$FlingResult: int hashCode-impl(long)>($l0);

        return $i1;
    }

    public static boolean equals-impl(long, java.lang.Object)
    {
        long l0, l1;
        java.lang.Object r0;
        boolean $z0;
        androidx.compose.foundation.layout.AndroidFlingSpline$FlingResult $r1;
        byte $b2;

        l0 := @parameter0: long;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof androidx.compose.foundation.layout.AndroidFlingSpline$FlingResult;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = (androidx.compose.foundation.layout.AndroidFlingSpline$FlingResult) r0;

        l1 = virtualinvoke $r1.<androidx.compose.foundation.layout.AndroidFlingSpline$FlingResult: long unbox-impl()>();

        $b2 = l0 cmp l1;

        if $b2 == 0 goto label2;

        return 0;

     label2:
        return 1;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.compose.foundation.layout.AndroidFlingSpline$FlingResult r0;
        java.lang.Object r1;
        long $l0;
        boolean $z0;

        r0 := @this: androidx.compose.foundation.layout.AndroidFlingSpline$FlingResult;

        r1 := @parameter0: java.lang.Object;

        $l0 = r0.<androidx.compose.foundation.layout.AndroidFlingSpline$FlingResult: long packedValue>;

        $z0 = staticinvoke <androidx.compose.foundation.layout.AndroidFlingSpline$FlingResult: boolean equals-impl(long,java.lang.Object)>($l0, r1);

        return $z0;
    }

    private void <init>(long)
    {
        androidx.compose.foundation.layout.AndroidFlingSpline$FlingResult r0;
        long l0;

        r0 := @this: androidx.compose.foundation.layout.AndroidFlingSpline$FlingResult;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.foundation.layout.AndroidFlingSpline$FlingResult: long packedValue> = l0;

        return;
    }

    public static long constructor-impl(long)
    {
        long l0;

        l0 := @parameter0: long;

        return l0;
    }

    public static final androidx.compose.foundation.layout.AndroidFlingSpline$FlingResult box-impl(long)
    {
        long l0;
        androidx.compose.foundation.layout.AndroidFlingSpline$FlingResult $r0;

        l0 := @parameter0: long;

        $r0 = new androidx.compose.foundation.layout.AndroidFlingSpline$FlingResult;

        specialinvoke $r0.<androidx.compose.foundation.layout.AndroidFlingSpline$FlingResult: void <init>(long)>(l0);

        return $r0;
    }

    public final long unbox-impl()
    {
        androidx.compose.foundation.layout.AndroidFlingSpline$FlingResult r0;
        long $l0;

        r0 := @this: androidx.compose.foundation.layout.AndroidFlingSpline$FlingResult;

        $l0 = r0.<androidx.compose.foundation.layout.AndroidFlingSpline$FlingResult: long packedValue>;

        return $l0;
    }

    public static final boolean equals-impl0(long, long)
    {
        long l0, l1;
        byte $b2;
        boolean $z0;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $b2 = l0 cmp l1;

        if $b2 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

