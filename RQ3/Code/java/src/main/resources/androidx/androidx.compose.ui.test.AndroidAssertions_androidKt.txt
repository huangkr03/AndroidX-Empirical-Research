androidx.compose.ui.test.AndroidAssertions_androidKt
    public static final boolean checkIsDisplayed(androidx.compose.ui.test.SemanticsNodeInteraction)
    {
        androidx.compose.ui.test.SemanticsNodeInteraction $r0;
        java.lang.String r1;
        androidx.compose.ui.semantics.SemanticsNode r2;
        androidx.compose.ui.layout.LayoutInfo r3, $r9;
        androidx.compose.ui.geometry.Rect r4;
        androidx.compose.ui.node.RootForTest r5;
        androidx.compose.ui.platform.ViewRootForTest r6, $r12;
        boolean $z1, $z2, $z3, $z4, $z5;
        androidx.compose.ui.test.AndroidAssertions_androidKt$checkIsDisplayed$1 $r7;
        kotlin.jvm.functions.Function1 $r8;
        float $f0, $f1;
        byte $b0, $b1;
        org.hamcrest.Matcher $r10;
        android.view.View $r11;

        $r0 := @parameter0: androidx.compose.ui.test.SemanticsNodeInteraction;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r1 = "Failed to perform isDisplayed check.";

        r2 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsNodeInteraction: androidx.compose.ui.semantics.SemanticsNode fetchSemanticsNode(java.lang.String)>(r1);

        r3 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.layout.LayoutInfo getLayoutInfo()>();

        $z1 = staticinvoke <androidx.compose.ui.test.AndroidAssertions_androidKt: boolean checkIsDisplayed$isNotPlaced(androidx.compose.ui.layout.LayoutInfo)>(r3);

        if $z1 != 0 goto label1;

        $r7 = <androidx.compose.ui.test.AndroidAssertions_androidKt$checkIsDisplayed$1: androidx.compose.ui.test.AndroidAssertions_androidKt$checkIsDisplayed$1 INSTANCE>;

        $r8 = (kotlin.jvm.functions.Function1) $r7;

        $r9 = staticinvoke <androidx.compose.ui.test.AndroidAssertions_androidKt: androidx.compose.ui.layout.LayoutInfo findClosestParentNode(androidx.compose.ui.layout.LayoutInfo,kotlin.jvm.functions.Function1)>(r3, $r8);

        if $r9 == null goto label2;

     label1:
        return 0;

     label2:
        r5 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.RootForTest getRoot()>();

        $z2 = r5 instanceof androidx.compose.ui.platform.ViewRootForTest;

        if $z2 == 0 goto label3;

        $r12 = (androidx.compose.ui.platform.ViewRootForTest) r5;

        goto label4;

     label3:
        $r12 = null;

     label4:
        if $r12 == null goto label6;

        r6 = $r12;

        $r10 = staticinvoke <androidx.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher isDisplayed()>();

        $r11 = interfaceinvoke r6.<androidx.compose.ui.platform.ViewRootForTest: android.view.View getView()>();

        $z4 = interfaceinvoke $r10.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>($r11);

        if $z4 != 0 goto label5;

        return 0;

     label5:
        goto label6;

     label6:
        r4 = virtualinvoke r2.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.geometry.Rect getBoundsInWindow()>();

        $z3 = staticinvoke <androidx.compose.ui.test.AndroidAssertions_androidKt: boolean isInScreenBounds(androidx.compose.ui.semantics.SemanticsNode)>(r2);

        if $z3 != 0 goto label7;

        return 0;

     label7:
        $f0 = virtualinvoke r4.<androidx.compose.ui.geometry.Rect: float getWidth()>();

        $b0 = $f0 cmpl 0.0F;

        if $b0 <= 0 goto label8;

        $f1 = virtualinvoke r4.<androidx.compose.ui.geometry.Rect: float getHeight()>();

        $b1 = $f1 cmpl 0.0F;

        if $b1 <= 0 goto label8;

        $z5 = 1;

        goto label9;

     label8:
        $z5 = 0;

     label9:
        return $z5;
    }

    public static final androidx.compose.ui.geometry.Rect clippedNodeBoundsInWindow(androidx.compose.ui.semantics.SemanticsNode)
    {
        androidx.compose.ui.semantics.SemanticsNode $r0;
        android.view.View r1;
        long l0;
        int[] r2, r3;
        androidx.compose.ui.node.RootForTest $r4;
        androidx.compose.ui.platform.ViewRootForTest $r5;
        int $i1, $i2;
        float $f0, $f1;
        androidx.compose.ui.geometry.Rect $r6, $r7;

        $r0 := @parameter0: androidx.compose.ui.semantics.SemanticsNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r4 = virtualinvoke $r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.RootForTest getRoot()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r4, "null cannot be cast to non-null type androidx.compose.ui.platform.ViewRootForTest");

        $r5 = (androidx.compose.ui.platform.ViewRootForTest) $r4;

        r1 = interfaceinvoke $r5.<androidx.compose.ui.platform.ViewRootForTest: android.view.View getView()>();

        r2 = newarray (int)[2];

        r2[0] = 0;

        r2[1] = 0;

        r3 = r2;

        virtualinvoke r1.<android.view.View: void getLocationInWindow(int[])>(r3);

        $i1 = r3[0];

        $f1 = (float) $i1;

        $i2 = r3[1];

        $f0 = (float) $i2;

        l0 = staticinvoke <androidx.compose.ui.geometry.OffsetKt: long Offset(float,float)>($f1, $f0);

        $r6 = virtualinvoke $r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.geometry.Rect getBoundsInRoot()>();

        $r7 = virtualinvoke $r6.<androidx.compose.ui.geometry.Rect: androidx.compose.ui.geometry.Rect translate-k-4lQ0M(long)>(l0);

        return $r7;
    }

    public static final boolean isInScreenBounds(androidx.compose.ui.semantics.SemanticsNode)
    {
        androidx.compose.ui.semantics.SemanticsNode $r0;
        android.view.View r1;
        androidx.compose.ui.geometry.Rect r2;
        android.graphics.Rect r3, $r6;
        androidx.compose.ui.node.RootForTest $r4;
        androidx.compose.ui.platform.ViewRootForTest $r5;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        byte $b0, $b1, $b3, $b5, $b7, $b9;
        boolean $z0, $z1, $z2, $z3;
        int $i2, $i4, $i6, $i8;

        $r0 := @parameter0: androidx.compose.ui.semantics.SemanticsNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r4 = virtualinvoke $r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.node.RootForTest getRoot()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r4, "null cannot be cast to non-null type androidx.compose.ui.platform.ViewRootForTest");

        $r5 = (androidx.compose.ui.platform.ViewRootForTest) $r4;

        r1 = interfaceinvoke $r5.<androidx.compose.ui.platform.ViewRootForTest: android.view.View getView()>();

        r2 = staticinvoke <androidx.compose.ui.test.AndroidAssertions_androidKt: androidx.compose.ui.geometry.Rect clippedNodeBoundsInWindow(androidx.compose.ui.semantics.SemanticsNode)>($r0);

        $f0 = virtualinvoke r2.<androidx.compose.ui.geometry.Rect: float getWidth()>();

        $b0 = $f0 cmpg 0.0F;

        if $b0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 != 0 goto label5;

        $f1 = virtualinvoke r2.<androidx.compose.ui.geometry.Rect: float getHeight()>();

        $b1 = $f1 cmpg 0.0F;

        if $b1 != 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        if $z2 == 0 goto label6;

     label5:
        return 0;

     label6:
        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>()>();

        r3 = $r6;

        $z0 = virtualinvoke r1.<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect)>(r3);

        if $z0 != 0 goto label7;

        return 0;

     label7:
        $f2 = virtualinvoke r2.<androidx.compose.ui.geometry.Rect: float getTop()>();

        $i2 = r3.<android.graphics.Rect: int top>;

        $f3 = (float) $i2;

        $b3 = $f2 cmpl $f3;

        if $b3 < 0 goto label8;

        $f4 = virtualinvoke r2.<androidx.compose.ui.geometry.Rect: float getLeft()>();

        $i4 = r3.<android.graphics.Rect: int left>;

        $f5 = (float) $i4;

        $b5 = $f4 cmpl $f5;

        if $b5 < 0 goto label8;

        $f6 = virtualinvoke r2.<androidx.compose.ui.geometry.Rect: float getRight()>();

        $i6 = r3.<android.graphics.Rect: int right>;

        $f7 = (float) $i6;

        $b7 = $f6 cmpg $f7;

        if $b7 > 0 goto label8;

        $f8 = virtualinvoke r2.<androidx.compose.ui.geometry.Rect: float getBottom()>();

        $i8 = r3.<android.graphics.Rect: int bottom>;

        $f9 = (float) $i8;

        $b9 = $f8 cmpg $f9;

        if $b9 > 0 goto label8;

        $z3 = 1;

        goto label9;

     label8:
        $z3 = 0;

     label9:
        return $z3;
    }

    private static final androidx.compose.ui.layout.LayoutInfo findClosestParentNode(androidx.compose.ui.layout.LayoutInfo, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.layout.LayoutInfo $r0, r4;
        kotlin.jvm.functions.Function1 r1;
        java.lang.Object $r2;
        java.lang.Boolean $r3;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.ui.layout.LayoutInfo;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        r4 = interfaceinvoke $r0.<androidx.compose.ui.layout.LayoutInfo: androidx.compose.ui.layout.LayoutInfo getParentInfo()>();

     label1:
        if r4 == null goto label3;

        $r2 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r4);

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return r4;

     label2:
        r4 = interfaceinvoke r4.<androidx.compose.ui.layout.LayoutInfo: androidx.compose.ui.layout.LayoutInfo getParentInfo()>();

        goto label1;

     label3:
        return null;
    }

    private static final boolean checkIsDisplayed$isNotPlaced(androidx.compose.ui.layout.LayoutInfo)
    {
        androidx.compose.ui.layout.LayoutInfo r0;
        boolean $z0, $z1;

        r0 := @parameter0: androidx.compose.ui.layout.LayoutInfo;

        $z0 = interfaceinvoke r0.<androidx.compose.ui.layout.LayoutInfo: boolean isPlaced()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static final boolean access$checkIsDisplayed$isNotPlaced(androidx.compose.ui.layout.LayoutInfo)
    {
        androidx.compose.ui.layout.LayoutInfo r0;
        boolean $z0;

        r0 := @parameter0: androidx.compose.ui.layout.LayoutInfo;

        $z0 = staticinvoke <androidx.compose.ui.test.AndroidAssertions_androidKt: boolean checkIsDisplayed$isNotPlaced(androidx.compose.ui.layout.LayoutInfo)>(r0);

        return $z0;
    }

