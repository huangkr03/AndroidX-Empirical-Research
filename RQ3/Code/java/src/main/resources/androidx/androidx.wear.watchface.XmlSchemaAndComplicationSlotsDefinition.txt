androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition
<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition: androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$Companion Companion>
<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition: androidx.wear.watchface.style.UserStyleSchema schema>
<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition: java.util.List complicationSlots>
<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition: androidx.wear.watchface.UserStyleFlavors flavors>
    public void <init>(androidx.wear.watchface.style.UserStyleSchema, java.util.List, androidx.wear.watchface.UserStyleFlavors)
    {
        androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition r0;
        androidx.wear.watchface.style.UserStyleSchema r1;
        java.util.List r2;
        androidx.wear.watchface.UserStyleFlavors r3;

        r0 := @this: androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition;

        r1 := @parameter0: androidx.wear.watchface.style.UserStyleSchema;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: androidx.wear.watchface.UserStyleFlavors;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "complicationSlots");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition: androidx.wear.watchface.style.UserStyleSchema schema> = r1;

        r0.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition: java.util.List complicationSlots> = r2;

        r0.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition: androidx.wear.watchface.UserStyleFlavors flavors> = r3;

        return;
    }

    public final androidx.wear.watchface.style.UserStyleSchema getSchema()
    {
        androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition r0;
        androidx.wear.watchface.style.UserStyleSchema $r1;

        r0 := @this: androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition;

        $r1 = r0.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition: androidx.wear.watchface.style.UserStyleSchema schema>;

        return $r1;
    }

    public final java.util.List getComplicationSlots()
    {
        androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition r0;
        java.util.List $r1;

        r0 := @this: androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition;

        $r1 = r0.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition: java.util.List complicationSlots>;

        return $r1;
    }

    public final androidx.wear.watchface.UserStyleFlavors getFlavors()
    {
        androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition r0;
        androidx.wear.watchface.UserStyleFlavors $r1;

        r0 := @this: androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition;

        $r1 = r0.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition: androidx.wear.watchface.UserStyleFlavors flavors>;

        return $r1;
    }

    public final androidx.wear.watchface.ComplicationSlotsManager buildComplicationSlotsManager(androidx.wear.watchface.style.CurrentUserStyleRepository, androidx.wear.watchface.ComplicationSlotInflationFactory)
    {
        androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition r0;
        androidx.wear.watchface.style.CurrentUserStyleRepository r1, r9;
        androidx.wear.watchface.ComplicationSlotInflationFactory r2;
        java.lang.Iterable $r3;
        java.util.Collection r4, r8, r10, $r30;
        java.util.Iterator r5;
        java.lang.Object r6;
        androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData r7;
        java.util.List $r11, $r12, $r14, $r29, $r35;
        boolean $z2, $z3, $z5, $z8, $z9;
        java.util.ArrayList $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i9, $i10;
        androidx.wear.watchface.ComplicationSlotsManager $r15, $r28;
        java.lang.Integer $r16, $r41, $r42;
        androidx.wear.watchface.complications.DefaultComplicationDataSourcePolicy $r17, $r36;
        androidx.wear.watchface.BackgroundComplicationTapFilter $r18;
        androidx.wear.watchface.RoundRectComplicationTapFilter $r19;
        androidx.wear.watchface.ComplicationTapFilter $r20, $r40;
        java.lang.UnsupportedOperationException $r21;
        java.lang.StringBuilder $r22, $r23, $r24;
        java.lang.String $r25, $r27, $r31;
        java.lang.IllegalArgumentException $r26;
        androidx.wear.watchface.ComplicationSlot $r32;
        androidx.wear.watchface.complications.ComplicationSlotBounds $r33;
        androidx.wear.watchface.CanvasComplicationFactory $r34;
        androidx.wear.watchface.complications.data.ComplicationType $r37;
        android.os.Bundle $r38;
        androidx.wear.watchface.BoundingArc $r43;

        r0 := @this: androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition;

        r1 := @parameter0: androidx.wear.watchface.style.CurrentUserStyleRepository;

        r2 := @parameter1: androidx.wear.watchface.ComplicationSlotInflationFactory;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "currentUserStyleRepository");

        $r11 = r0.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition: java.util.List complicationSlots>;

        $z2 = interfaceinvoke $r11.<java.util.List: boolean isEmpty()>();

        if $z2 == 0 goto label01;

        $r28 = new androidx.wear.watchface.ComplicationSlotsManager;

        $r29 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        $r30 = (java.util.Collection) $r29;

        specialinvoke $r28.<androidx.wear.watchface.ComplicationSlotsManager: void <init>(java.util.Collection,androidx.wear.watchface.style.CurrentUserStyleRepository)>($r30, r1);

        return $r28;

     label01:
        if r2 == null goto label02;

        $z5 = 1;

        goto label03;

     label02:
        $z5 = 0;

     label03:
        if $z5 != 0 goto label04;

        $r31 = "You must override WatchFaceService.getComplicationSlotInflationFactory to provide additional details needed to inflate ComplicationSlotsManager";

        $r26 = new java.lang.IllegalArgumentException;

        $r27 = virtualinvoke $r31.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r27);

        throw $r26;

     label04:
        $r12 = r0.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition: java.util.List complicationSlots>;

        $r3 = (java.lang.Iterable) $r12;

        $r13 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r3, 10);

        specialinvoke $r13.<java.util.ArrayList: void <init>(int)>($i0);

        r4 = (java.util.Collection) $r13;

        r5 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label05:
        $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label13;

        r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData) r6;

        r8 = r4;

        $r32 = new androidx.wear.watchface.ComplicationSlot;

        $i6 = virtualinvoke r7.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: int getSlotId()>();

        $r16 = virtualinvoke r7.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: java.lang.Integer getAccessibilityTraversalIndex()>();

        if $r16 == null goto label06;

        $i5 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();

        $i9 = $i5;

        goto label07;

     label06:
        $i9 = virtualinvoke r7.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: int getSlotId()>();

     label07:
        $i10 = virtualinvoke r7.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: int getBoundsType()>();

        $r33 = virtualinvoke r7.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: androidx.wear.watchface.complications.ComplicationSlotBounds getBounds()>();

        $i1 = virtualinvoke r7.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: int getSlotId()>();

        $r34 = virtualinvoke r2.<androidx.wear.watchface.ComplicationSlotInflationFactory: androidx.wear.watchface.CanvasComplicationFactory getCanvasComplicationFactory(int)>($i1);

        $r35 = virtualinvoke r7.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: java.util.List getSupportedTypes()>();

        $r36 = virtualinvoke r7.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: androidx.wear.watchface.complications.DefaultComplicationDataSourcePolicy getDefaultDataSourcePolicy()>();

        $r17 = virtualinvoke r7.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: androidx.wear.watchface.complications.DefaultComplicationDataSourcePolicy getDefaultDataSourcePolicy()>();

        $r37 = virtualinvoke $r17.<androidx.wear.watchface.complications.DefaultComplicationDataSourcePolicy: androidx.wear.watchface.complications.data.ComplicationType getSystemDataSourceFallbackDefaultType()>();

        $z8 = virtualinvoke r7.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: boolean getInitiallyEnabled()>();

        $r38 = new android.os.Bundle;

        specialinvoke $r38.<android.os.Bundle: void <init>()>();

        $z9 = virtualinvoke r7.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: boolean getFixedComplicationDataSource()>();

        $i2 = virtualinvoke r7.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: int getBoundsType()>();

        tableswitch($i2)
        {
            case 0: goto label08;
            case 1: goto label09;
            case 2: goto label10;
            default: goto label11;
        };

     label08:
        $r19 = new androidx.wear.watchface.RoundRectComplicationTapFilter;

        specialinvoke $r19.<androidx.wear.watchface.RoundRectComplicationTapFilter: void <init>()>();

        $r20 = (androidx.wear.watchface.ComplicationTapFilter) $r19;

        $r40 = $r20;

        goto label12;

     label09:
        $r18 = new androidx.wear.watchface.BackgroundComplicationTapFilter;

        specialinvoke $r18.<androidx.wear.watchface.BackgroundComplicationTapFilter: void <init>()>();

        $r40 = (androidx.wear.watchface.ComplicationTapFilter) $r18;

        goto label12;

     label10:
        $i3 = virtualinvoke r7.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: int getSlotId()>();

        $r40 = virtualinvoke r2.<androidx.wear.watchface.ComplicationSlotInflationFactory: androidx.wear.watchface.ComplicationTapFilter getEdgeComplicationTapFilter(int)>($i3);

        goto label12;

     label11:
        $r21 = new java.lang.UnsupportedOperationException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown boundsType ");

        $i4 = virtualinvoke r7.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: int getBoundsType()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r25);

        throw $r21;

     label12:
        $r41 = virtualinvoke r7.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: java.lang.Integer getNameResourceId()>();

        $r42 = virtualinvoke r7.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: java.lang.Integer getScreenReaderNameResourceId()>();

        $r43 = virtualinvoke r7.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: androidx.wear.watchface.BoundingArc getBoundingArc()>();

        specialinvoke $r32.<androidx.wear.watchface.ComplicationSlot: void <init>(int,int,int,androidx.wear.watchface.complications.ComplicationSlotBounds,androidx.wear.watchface.CanvasComplicationFactory,java.util.List,androidx.wear.watchface.complications.DefaultComplicationDataSourcePolicy,androidx.wear.watchface.complications.data.ComplicationType,boolean,android.os.Bundle,boolean,androidx.wear.watchface.ComplicationTapFilter,java.lang.Integer,java.lang.Integer,androidx.wear.watchface.BoundingArc)>($i6, $i9, $i10, $r33, $r34, $r35, $r36, $r37, $z8, $r38, $z9, $r40, $r41, $r42, $r43);

        interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>($r32);

        goto label05;

     label13:
        $r14 = (java.util.List) r4;

        r9 = r1;

        r10 = (java.util.Collection) $r14;

        $r15 = new androidx.wear.watchface.ComplicationSlotsManager;

        specialinvoke $r15.<androidx.wear.watchface.ComplicationSlotsManager: void <init>(java.util.Collection,androidx.wear.watchface.style.CurrentUserStyleRepository)>(r10, r9);

        return $r15;
    }

    static void <clinit>()
    {
        androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$Companion $r0;

        $r0 = new androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$Companion;

        specialinvoke $r0.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition: androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$Companion Companion> = $r0;

        return;
    }

androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$Companion
    private void <init>()
    {
        androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$Companion r0;

        r0 := @this: androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition inflate(android.content.res.Resources, android.content.res.XmlResourceParser) throws android.content.pm.PackageManager$NameNotFoundException
    {
        androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$Companion r0;
        android.content.res.Resources r1;
        android.content.res.XmlResourceParser r2;
        int i0, $i1, $i2, i3, $i4;
        java.util.ArrayList r3, $r6;
        java.lang.String r4, $r14, $r17, $r21, $r25;
        org.xmlpull.v1.XmlPullParser $r5;
        androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition $r7;
        java.util.List $r8;
        boolean $z0, $z1, $z3, $z4;
        androidx.wear.watchface.style.UserStyleSchema$Companion $r9;
        androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData$Companion $r10;
        androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData $r11;
        androidx.wear.watchface.UserStyleFlavors$Companion $r12;
        java.lang.IllegalArgumentException $r13, $r18;
        androidx.wear.watchface.style.UserStyleSchema r15;
        androidx.wear.watchface.UserStyleFlavors r16;
        java.lang.StringBuilder $r19, $r20, $r22, $r23, $r24;

        r0 := @this: androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$Companion;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: android.content.res.XmlResourceParser;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "resources");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "parser");

        $r5 = (org.xmlpull.v1.XmlPullParser) r2;

        staticinvoke <androidx.wear.watchface.style.UserStyleSettingKt: void moveToStart(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r5, "XmlWatchFace");

        r15 = null;

        r16 = null;

        i0 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int getDepth()>();

        i3 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int next()>();

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r3 = $r6;

     label01:
        if i3 != 2 goto label11;

        r4 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        if r4 == null goto label10;

        $i2 = virtualinvoke r4.<java.lang.String: int hashCode()>();

        lookupswitch($i2)
        {
            case -1068743121: goto label02;
            case 54247292: goto label03;
            case 606678471: goto label04;
            default: goto label10;
        };

     label02:
        $z3 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("UserStyleFlavors");

        if $z3 != 0 goto label06;

        goto label10;

     label03:
        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("ComplicationSlot");

        if $z1 != 0 goto label05;

        goto label10;

     label04:
        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("UserStyleSchema");

        if $z0 == 0 goto label10;

        $r9 = <androidx.wear.watchface.style.UserStyleSchema: androidx.wear.watchface.style.UserStyleSchema$Companion Companion>;

        r15 = virtualinvoke $r9.<androidx.wear.watchface.style.UserStyleSchema$Companion: androidx.wear.watchface.style.UserStyleSchema inflate(android.content.res.Resources,android.content.res.XmlResourceParser)>(r1, r2);

        goto label11;

     label05:
        $r10 = <androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData$Companion Companion>;

        $r11 = virtualinvoke $r10.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData$Companion: androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData inflate(android.content.res.Resources,android.content.res.XmlResourceParser)>(r1, r2);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

        goto label11;

     label06:
        if r15 == null goto label07;

        $z4 = 1;

        goto label08;

     label07:
        $z4 = 0;

     label08:
        if $z4 != 0 goto label09;

        $r17 = "A UserStyleFlavors node requires a previous UserStyleSchema node";

        $r13 = new java.lang.IllegalArgumentException;

        $r14 = virtualinvoke $r17.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r13;

     label09:
        $r12 = <androidx.wear.watchface.UserStyleFlavors: androidx.wear.watchface.UserStyleFlavors$Companion Companion>;

        r16 = virtualinvoke $r12.<androidx.wear.watchface.UserStyleFlavors$Companion: androidx.wear.watchface.UserStyleFlavors inflate(android.content.res.Resources,android.content.res.XmlResourceParser,androidx.wear.watchface.style.UserStyleSchema)>(r1, r2, r15);

        goto label11;

     label10:
        $r18 = new java.lang.IllegalArgumentException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected node ");

        $r21 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at line ");

        $i4 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int getLineNumber()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r25);

        throw $r18;

     label11:
        i3 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int next()>();

        if i3 == 1 goto label12;

        $i1 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int getDepth()>();

        if $i1 > i0 goto label01;

     label12:
        interfaceinvoke r2.<android.content.res.XmlResourceParser: void close()>();

        $r7 = new androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition;

        $r8 = (java.util.List) r3;

        specialinvoke $r7.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition: void <init>(androidx.wear.watchface.style.UserStyleSchema,java.util.List,androidx.wear.watchface.UserStyleFlavors)>(r15, $r8, r16);

        return $r7;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$Companion: void <init>()>();

        return;
    }

androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData$Companion
    private void <init>()
    {
        androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData$Companion r0;

        r0 := @this: androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.wear.watchface.complications.DefaultComplicationDataSourcePolicy inflateDefaultComplicationDataSourcePolicy(android.content.res.XmlResourceParser, java.lang.String)
    {
        androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData$Companion r0;
        android.content.res.XmlResourceParser r1;
        java.lang.String r2, $r6, $r7, $r10, $r13, $r15, $r17, $r23, $r29, r32, r35, r39, $r40, $r42, $r43, $r44, $r46;
        android.content.ComponentName r3, r5, $r33, $r36;
        androidx.wear.watchface.complications.data.ComplicationType r4, $r34, $r37, r38, r41;
        boolean $z0, $z1, $z2, $z3, z6, $z8, $z10, $z12, $z14;
        androidx.wear.watchface.complications.data.ComplicationType$Companion $r8, $r30, $r31;
        int $i0, $i1, $i2, $i3;
        java.lang.IllegalArgumentException $r9, $r12, $r14, $r16, $r22, $r28;
        androidx.wear.watchface.complications.DefaultComplicationDataSourcePolicy $r11, $r45;
        java.lang.StringBuilder $r18, $r19, $r20, $r21, $r24, $r25, $r26, $r27;

        r0 := @this: androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData$Companion;

        r1 := @parameter0: android.content.res.XmlResourceParser;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "parser");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "nodeName");

        $r6 = interfaceinvoke r1.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("http://schemas.android.com/apk/res-auto", "primaryDataSource");

        if $r6 == null goto label01;

        r32 = $r6;

        $r33 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r32);

        goto label02;

     label01:
        $r33 = null;

     label02:
        r3 = $r33;

        $z0 = staticinvoke <androidx.wear.watchface.complications.ComplicationSlotBoundsKt: boolean hasValue(android.content.res.XmlResourceParser,java.lang.String)>(r1, "primaryDataSourceDefaultType");

        if $z0 == 0 goto label03;

        $r31 = <androidx.wear.watchface.complications.data.ComplicationType: androidx.wear.watchface.complications.data.ComplicationType$Companion Companion>;

        $i2 = interfaceinvoke r1.<android.content.res.XmlResourceParser: int getAttributeIntValue(java.lang.String,java.lang.String,int)>("http://schemas.android.com/apk/res-auto", "primaryDataSourceDefaultType", 0);

        $r34 = virtualinvoke $r31.<androidx.wear.watchface.complications.data.ComplicationType$Companion: androidx.wear.watchface.complications.data.ComplicationType fromWireType(int)>($i2);

        goto label04;

     label03:
        $r34 = (androidx.wear.watchface.complications.data.ComplicationType) null;

     label04:
        r4 = $r34;

        $r7 = interfaceinvoke r1.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("http://schemas.android.com/apk/res-auto", "secondaryDataSource");

        if $r7 == null goto label05;

        r35 = $r7;

        $r36 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r35);

        goto label06;

     label05:
        $r36 = null;

     label06:
        r5 = $r36;

        $z1 = staticinvoke <androidx.wear.watchface.complications.ComplicationSlotBoundsKt: boolean hasValue(android.content.res.XmlResourceParser,java.lang.String)>(r1, "secondaryDataSourceDefaultType");

        if $z1 == 0 goto label07;

        $r30 = <androidx.wear.watchface.complications.data.ComplicationType: androidx.wear.watchface.complications.data.ComplicationType$Companion Companion>;

        $i1 = interfaceinvoke r1.<android.content.res.XmlResourceParser: int getAttributeIntValue(java.lang.String,java.lang.String,int)>("http://schemas.android.com/apk/res-auto", "secondaryDataSourceDefaultType", 0);

        $r37 = virtualinvoke $r30.<androidx.wear.watchface.complications.data.ComplicationType$Companion: androidx.wear.watchface.complications.data.ComplicationType fromWireType(int)>($i1);

        goto label08;

     label07:
        $r37 = (androidx.wear.watchface.complications.data.ComplicationType) null;

     label08:
        r38 = $r37;

        $z2 = staticinvoke <androidx.wear.watchface.complications.ComplicationSlotBoundsKt: boolean hasValue(android.content.res.XmlResourceParser,java.lang.String)>(r1, "systemDataSourceFallback");

        if $z2 != 0 goto label09;

        z6 = 0;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("A ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must have a systemDataSourceFallback attribute");

        r39 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28 = new java.lang.IllegalArgumentException;

        $r29 = virtualinvoke r39.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r29);

        throw $r28;

     label09:
        $i3 = interfaceinvoke r1.<android.content.res.XmlResourceParser: int getAttributeIntValue(java.lang.String,java.lang.String,int)>("http://schemas.android.com/apk/res-auto", "systemDataSourceFallback", 0);

        $z3 = staticinvoke <androidx.wear.watchface.complications.ComplicationSlotBoundsKt: boolean hasValue(android.content.res.XmlResourceParser,java.lang.String)>(r1, "systemDataSourceFallbackDefaultType");

        if $z3 != 0 goto label10;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("A ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must have a systemDataSourceFallbackDefaultType attribute");

        $r40 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        $r22 = new java.lang.IllegalArgumentException;

        $r23 = virtualinvoke $r40.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r23);

        throw $r22;

     label10:
        $r8 = <androidx.wear.watchface.complications.data.ComplicationType: androidx.wear.watchface.complications.data.ComplicationType$Companion Companion>;

        $i0 = interfaceinvoke r1.<android.content.res.XmlResourceParser: int getAttributeIntValue(java.lang.String,java.lang.String,int)>("http://schemas.android.com/apk/res-auto", "systemDataSourceFallbackDefaultType", 0);

        r41 = virtualinvoke $r8.<androidx.wear.watchface.complications.data.ComplicationType$Companion: androidx.wear.watchface.complications.data.ComplicationType fromWireType(int)>($i0);

        if r5 == null goto label20;

        if r3 == null goto label11;

        $z8 = 1;

        goto label12;

     label11:
        $z8 = 0;

     label12:
        if $z8 != 0 goto label13;

        $r42 = "If a secondaryDataSource is specified, a primaryDataSource must be too";

        $r16 = new java.lang.IllegalArgumentException;

        $r17 = virtualinvoke $r42.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r16;

     label13:
        if r4 == null goto label14;

        $z10 = 1;

        goto label15;

     label14:
        $z10 = 0;

     label15:
        if $z10 != 0 goto label16;

        $r43 = "If a secondaryDataSource is specified, a primaryDataSourceDefaultType must be too";

        $r14 = new java.lang.IllegalArgumentException;

        $r15 = virtualinvoke $r43.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r14;

     label16:
        if r38 == null goto label17;

        $z12 = 1;

        goto label18;

     label17:
        $z12 = 0;

     label18:
        if $z12 != 0 goto label19;

        $r44 = "If a secondaryDataSource is specified, a secondaryDataSourceDefaultType must be too";

        $r12 = new java.lang.IllegalArgumentException;

        $r13 = virtualinvoke $r44.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label19:
        $r11 = new androidx.wear.watchface.complications.DefaultComplicationDataSourcePolicy;

        $r45 = $r11;

        specialinvoke $r11.<androidx.wear.watchface.complications.DefaultComplicationDataSourcePolicy: void <init>(android.content.ComponentName,androidx.wear.watchface.complications.data.ComplicationType,android.content.ComponentName,androidx.wear.watchface.complications.data.ComplicationType,int,androidx.wear.watchface.complications.data.ComplicationType)>(r3, r4, r5, r38, $i3, r41);

        goto label25;

     label20:
        if r3 == null goto label24;

        if r4 == null goto label21;

        $z14 = 1;

        goto label22;

     label21:
        $z14 = 0;

     label22:
        if $z14 != 0 goto label23;

        $r46 = "If a primaryDataSource is specified, a primaryDataSourceDefaultType must be too";

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke $r46.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label23:
        $r45 = new androidx.wear.watchface.complications.DefaultComplicationDataSourcePolicy;

        specialinvoke $r45.<androidx.wear.watchface.complications.DefaultComplicationDataSourcePolicy: void <init>(android.content.ComponentName,androidx.wear.watchface.complications.data.ComplicationType,int,androidx.wear.watchface.complications.data.ComplicationType)>(r3, r4, $i3, r41);

        goto label25;

     label24:
        $r45 = new androidx.wear.watchface.complications.DefaultComplicationDataSourcePolicy;

        specialinvoke $r45.<androidx.wear.watchface.complications.DefaultComplicationDataSourcePolicy: void <init>(int,androidx.wear.watchface.complications.data.ComplicationType)>($i3, r41);

     label25:
        return $r45;
    }

    public final androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData inflate(android.content.res.Resources, android.content.res.XmlResourceParser)
    {
        androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData$Companion r0;
        android.content.res.Resources r1;
        android.content.res.XmlResourceParser r2;
        java.lang.Integer r3, r5, r6, $r33, $r34, $r38, $r39;
        androidx.wear.watchface.complications.DefaultComplicationDataSourcePolicy r4;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z15, $z18, $z20;
        androidx.wear.watchface.BoundingArc r7, $r40;
        androidx.wear.watchface.complications.ComplicationSlotBounds r8;
        java.lang.String $r9, $r15, $r23, $r26, $r28, $r30, $r31, $r32, $r35, $r36, $r41;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i13;
        java.util.ArrayList $r10;
        androidx.wear.watchface.complications.ComplicationSlotBounds$Companion $r11;
        androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData $r12;
        java.util.List $r13;
        java.lang.IllegalArgumentException $r14, $r22, $r24, $r25, $r27, $r29;
        float $f0, $f1, $f2;
        androidx.wear.watchface.complications.data.ComplicationType $r16, $r17, $r18, $r19, $r20, $r21;
        byte $b11, $b12;

        r0 := @this: androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData$Companion;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: android.content.res.XmlResourceParser;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "resources");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "parser");

        $r9 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r9, "ComplicationSlot");

        if $z2 != 0 goto label01;

        $r31 = "Expected a UserStyleSchema node";

        $r29 = new java.lang.IllegalArgumentException;

        $r30 = virtualinvoke $r31.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r29.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r30);

        throw $r29;

     label01:
        r3 = staticinvoke <androidx.wear.watchface.style.UserStyleSettingKt: java.lang.Integer getIntRefAttribute(android.content.res.Resources,android.content.res.XmlResourceParser,java.lang.String)>(r1, r2, "slotId");

        if r3 == null goto label02;

        $z15 = 1;

        goto label03;

     label02:
        $z15 = 0;

     label03:
        if $z15 != 0 goto label04;

        $r32 = "A ComplicationSlot must have a slotId attribute";

        $r27 = new java.lang.IllegalArgumentException;

        $r28 = virtualinvoke $r32.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r28);

        throw $r27;

     label04:
        $z3 = staticinvoke <androidx.wear.watchface.complications.ComplicationSlotBoundsKt: boolean hasValue(android.content.res.XmlResourceParser,java.lang.String)>(r2, "accessibilityTraversalIndex");

        if $z3 == 0 goto label05;

        $i10 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int getAttributeIntValue(java.lang.String,java.lang.String,int)>("http://schemas.android.com/apk/res-auto", "accessibilityTraversalIndex", 0);

        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        goto label06;

     label05:
        $r33 = (java.lang.Integer) null;

     label06:
        $r34 = $r33;

        $z4 = staticinvoke <androidx.wear.watchface.complications.ComplicationSlotBoundsKt: boolean hasValue(android.content.res.XmlResourceParser,java.lang.String)>(r2, "boundsType");

        if $z4 != 0 goto label07;

        $r35 = "A ComplicationSlot must have a boundsType attribute";

        $r25 = new java.lang.IllegalArgumentException;

        $r26 = virtualinvoke $r35.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r26);

        throw $r25;

     label07:
        $i0 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int getAttributeIntValue(java.lang.String,java.lang.String,int)>("http://schemas.android.com/apk/res-auto", "boundsType", 0);

        tableswitch($i0)
        {
            case 0: goto label08;
            case 1: goto label09;
            case 2: goto label10;
            default: goto label11;
        };

     label08:
        $b11 = 0;

        goto label12;

     label09:
        $b11 = 1;

        goto label12;

     label10:
        $b11 = 2;

        goto label12;

     label11:
        $r24 = new java.lang.IllegalArgumentException;

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown boundsType");

        throw $r24;

     label12:
        $b12 = $b11;

        $z18 = staticinvoke <androidx.wear.watchface.complications.ComplicationSlotBoundsKt: boolean hasValue(android.content.res.XmlResourceParser,java.lang.String)>(r2, "supportedTypes");

        if $z18 != 0 goto label13;

        $r36 = "A ComplicationSlot must have a supportedTypes attribute";

        $r22 = new java.lang.IllegalArgumentException;

        $r23 = virtualinvoke $r36.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r23);

        throw $r22;

     label13:
        $i13 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int getAttributeIntValue(java.lang.String,java.lang.String,int)>("http://schemas.android.com/apk/res-auto", "supportedTypes", 0);

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        $i1 = $i13 & 1;

        if $i1 == 0 goto label14;

        $r21 = <androidx.wear.watchface.complications.data.ComplicationType: androidx.wear.watchface.complications.data.ComplicationType SHORT_TEXT>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r21);

     label14:
        $i2 = $i13 & 2;

        if $i2 == 0 goto label15;

        $r20 = <androidx.wear.watchface.complications.data.ComplicationType: androidx.wear.watchface.complications.data.ComplicationType LONG_TEXT>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r20);

     label15:
        $i3 = $i13 & 4;

        if $i3 == 0 goto label16;

        $r19 = <androidx.wear.watchface.complications.data.ComplicationType: androidx.wear.watchface.complications.data.ComplicationType RANGED_VALUE>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r19);

     label16:
        $i4 = $i13 & 8;

        if $i4 == 0 goto label17;

        $r18 = <androidx.wear.watchface.complications.data.ComplicationType: androidx.wear.watchface.complications.data.ComplicationType MONOCHROMATIC_IMAGE>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r18);

     label17:
        $i5 = $i13 & 16;

        if $i5 == 0 goto label18;

        $r17 = <androidx.wear.watchface.complications.data.ComplicationType: androidx.wear.watchface.complications.data.ComplicationType SMALL_IMAGE>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r17);

     label18:
        $i6 = $i13 & 32;

        if $i6 == 0 goto label19;

        $r16 = <androidx.wear.watchface.complications.data.ComplicationType: androidx.wear.watchface.complications.data.ComplicationType PHOTO_IMAGE>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

     label19:
        r4 = virtualinvoke r0.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData$Companion: androidx.wear.watchface.complications.DefaultComplicationDataSourcePolicy inflateDefaultComplicationDataSourcePolicy(android.content.res.XmlResourceParser,java.lang.String)>(r2, "ComplicationSlot");

        z0 = interfaceinvoke r2.<android.content.res.XmlResourceParser: boolean getAttributeBooleanValue(java.lang.String,java.lang.String,boolean)>("http://schemas.android.com/apk/res-auto", "initiallyEnabled", 1);

        z1 = interfaceinvoke r2.<android.content.res.XmlResourceParser: boolean getAttributeBooleanValue(java.lang.String,java.lang.String,boolean)>("http://schemas.android.com/apk/res-auto", "fixedComplicationDataSource", 0);

        $z5 = staticinvoke <androidx.wear.watchface.complications.ComplicationSlotBoundsKt: boolean hasValue(android.content.res.XmlResourceParser,java.lang.String)>(r2, "name");

        if $z5 == 0 goto label20;

        $i9 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int getAttributeResourceValue(java.lang.String,java.lang.String,int)>("http://schemas.android.com/apk/res-auto", "name", 0);

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        goto label21;

     label20:
        $r38 = (java.lang.Integer) null;

     label21:
        r5 = $r38;

        $z6 = staticinvoke <androidx.wear.watchface.complications.ComplicationSlotBoundsKt: boolean hasValue(android.content.res.XmlResourceParser,java.lang.String)>(r2, "screenReaderName");

        if $z6 == 0 goto label22;

        $i8 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int getAttributeResourceValue(java.lang.String,java.lang.String,int)>("http://schemas.android.com/apk/res-auto", "screenReaderName", 0);

        $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        goto label23;

     label22:
        $r39 = (java.lang.Integer) null;

     label23:
        r6 = $r39;

        $z7 = staticinvoke <androidx.wear.watchface.complications.ComplicationSlotBoundsKt: boolean hasValue(android.content.res.XmlResourceParser,java.lang.String)>(r2, "startArcAngle");

        if $z7 == 0 goto label24;

        $r40 = new androidx.wear.watchface.BoundingArc;

        $f0 = interfaceinvoke r2.<android.content.res.XmlResourceParser: float getAttributeFloatValue(java.lang.String,java.lang.String,float)>("http://schemas.android.com/apk/res-auto", "startArcAngle", 0.0F);

        $f1 = interfaceinvoke r2.<android.content.res.XmlResourceParser: float getAttributeFloatValue(java.lang.String,java.lang.String,float)>("http://schemas.android.com/apk/res-auto", "totalArcAngle", 0.0F);

        $f2 = interfaceinvoke r2.<android.content.res.XmlResourceParser: float getAttributeFloatValue(java.lang.String,java.lang.String,float)>("http://schemas.android.com/apk/res-auto", "arcThickness", 0.0F);

        specialinvoke $r40.<androidx.wear.watchface.BoundingArc: void <init>(float,float,float)>($f0, $f1, $f2);

        goto label25;

     label24:
        $r40 = (androidx.wear.watchface.BoundingArc) null;

     label25:
        r7 = $r40;

        $r11 = <androidx.wear.watchface.complications.ComplicationSlotBounds: androidx.wear.watchface.complications.ComplicationSlotBounds$Companion Companion>;

        r8 = virtualinvoke $r11.<androidx.wear.watchface.complications.ComplicationSlotBounds$Companion: androidx.wear.watchface.complications.ComplicationSlotBounds inflate(android.content.res.Resources,android.content.res.XmlResourceParser)>(r1, r2);

        if r8 == null goto label26;

        $z20 = 1;

        goto label27;

     label26:
        $z20 = 0;

     label27:
        if $z20 != 0 goto label28;

        $r41 = "ComplicationSlot must have either one ComplicationSlotBounds child node or one per ComplicationType.";

        $r14 = new java.lang.IllegalArgumentException;

        $r15 = virtualinvoke $r41.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r14;

     label28:
        $r12 = new androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData;

        $i7 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        $r13 = (java.util.List) $r10;

        specialinvoke $r12.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: void <init>(int,java.lang.Integer,int,androidx.wear.watchface.complications.ComplicationSlotBounds,java.util.List,androidx.wear.watchface.complications.DefaultComplicationDataSourcePolicy,boolean,boolean,java.lang.Integer,java.lang.Integer,androidx.wear.watchface.BoundingArc)>($i7, $r34, $b12, r8, $r13, r4, z0, z1, r5, r6, r7);

        return $r12;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData$Companion: void <init>()>();

        return;
    }

androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData
<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData$Companion Companion>
<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: int slotId>
<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: java.lang.Integer accessibilityTraversalIndex>
<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: int boundsType>
<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: androidx.wear.watchface.complications.ComplicationSlotBounds bounds>
<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: java.util.List supportedTypes>
<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: androidx.wear.watchface.complications.DefaultComplicationDataSourcePolicy defaultDataSourcePolicy>
<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: boolean initiallyEnabled>
<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: boolean fixedComplicationDataSource>
<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: java.lang.Integer nameResourceId>
<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: java.lang.Integer screenReaderNameResourceId>
<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: androidx.wear.watchface.BoundingArc boundingArc>
    public void <init>(int, java.lang.Integer, int, androidx.wear.watchface.complications.ComplicationSlotBounds, java.util.List, androidx.wear.watchface.complications.DefaultComplicationDataSourcePolicy, boolean, boolean, java.lang.Integer, java.lang.Integer, androidx.wear.watchface.BoundingArc)
    {
        androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData r0;
        int i0, i1;
        java.lang.Integer r1, r5, r6;
        androidx.wear.watchface.complications.ComplicationSlotBounds r2;
        java.util.List r3;
        androidx.wear.watchface.complications.DefaultComplicationDataSourcePolicy r4;
        boolean z0, z1;
        androidx.wear.watchface.BoundingArc r7;

        r0 := @this: androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Integer;

        i1 := @parameter2: int;

        r2 := @parameter3: androidx.wear.watchface.complications.ComplicationSlotBounds;

        r3 := @parameter4: java.util.List;

        r4 := @parameter5: androidx.wear.watchface.complications.DefaultComplicationDataSourcePolicy;

        z0 := @parameter6: boolean;

        z1 := @parameter7: boolean;

        r5 := @parameter8: java.lang.Integer;

        r6 := @parameter9: java.lang.Integer;

        r7 := @parameter10: androidx.wear.watchface.BoundingArc;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "bounds");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "supportedTypes");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "defaultDataSourcePolicy");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: int slotId> = i0;

        r0.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: java.lang.Integer accessibilityTraversalIndex> = r1;

        r0.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: int boundsType> = i1;

        r0.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: androidx.wear.watchface.complications.ComplicationSlotBounds bounds> = r2;

        r0.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: java.util.List supportedTypes> = r3;

        r0.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: androidx.wear.watchface.complications.DefaultComplicationDataSourcePolicy defaultDataSourcePolicy> = r4;

        r0.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: boolean initiallyEnabled> = z0;

        r0.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: boolean fixedComplicationDataSource> = z1;

        r0.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: java.lang.Integer nameResourceId> = r5;

        r0.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: java.lang.Integer screenReaderNameResourceId> = r6;

        r0.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: androidx.wear.watchface.BoundingArc boundingArc> = r7;

        return;
    }

    public final int getSlotId()
    {
        androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData r0;
        int $i0;

        r0 := @this: androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData;

        $i0 = r0.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: int slotId>;

        return $i0;
    }

    public final java.lang.Integer getAccessibilityTraversalIndex()
    {
        androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData r0;
        java.lang.Integer $r1;

        r0 := @this: androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData;

        $r1 = r0.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: java.lang.Integer accessibilityTraversalIndex>;

        return $r1;
    }

    public final int getBoundsType()
    {
        androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData r0;
        int $i0;

        r0 := @this: androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData;

        $i0 = r0.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: int boundsType>;

        return $i0;
    }

    public final androidx.wear.watchface.complications.ComplicationSlotBounds getBounds()
    {
        androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData r0;
        androidx.wear.watchface.complications.ComplicationSlotBounds $r1;

        r0 := @this: androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData;

        $r1 = r0.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: androidx.wear.watchface.complications.ComplicationSlotBounds bounds>;

        return $r1;
    }

    public final java.util.List getSupportedTypes()
    {
        androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData r0;
        java.util.List $r1;

        r0 := @this: androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData;

        $r1 = r0.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: java.util.List supportedTypes>;

        return $r1;
    }

    public final androidx.wear.watchface.complications.DefaultComplicationDataSourcePolicy getDefaultDataSourcePolicy()
    {
        androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData r0;
        androidx.wear.watchface.complications.DefaultComplicationDataSourcePolicy $r1;

        r0 := @this: androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData;

        $r1 = r0.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: androidx.wear.watchface.complications.DefaultComplicationDataSourcePolicy defaultDataSourcePolicy>;

        return $r1;
    }

    public final boolean getInitiallyEnabled()
    {
        androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData r0;
        boolean $z0;

        r0 := @this: androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData;

        $z0 = r0.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: boolean initiallyEnabled>;

        return $z0;
    }

    public final boolean getFixedComplicationDataSource()
    {
        androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData r0;
        boolean $z0;

        r0 := @this: androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData;

        $z0 = r0.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: boolean fixedComplicationDataSource>;

        return $z0;
    }

    public final java.lang.Integer getNameResourceId()
    {
        androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData r0;
        java.lang.Integer $r1;

        r0 := @this: androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData;

        $r1 = r0.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: java.lang.Integer nameResourceId>;

        return $r1;
    }

    public final java.lang.Integer getScreenReaderNameResourceId()
    {
        androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData r0;
        java.lang.Integer $r1;

        r0 := @this: androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData;

        $r1 = r0.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: java.lang.Integer screenReaderNameResourceId>;

        return $r1;
    }

    public final androidx.wear.watchface.BoundingArc getBoundingArc()
    {
        androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData r0;
        androidx.wear.watchface.BoundingArc $r1;

        r0 := @this: androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData;

        $r1 = r0.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: androidx.wear.watchface.BoundingArc boundingArc>;

        return $r1;
    }

    static void <clinit>()
    {
        androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData$Companion $r0;

        $r0 = new androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData$Companion;

        specialinvoke $r0.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData$Companion Companion> = $r0;

        return;
    }

