androidx.compose.ui.text.font.FontListFontFamilyTypefaceAdapterKt
    private static final kotlin.Pair firstImmediatelyAvailable(java.util.List, androidx.compose.ui.text.font.TypefaceRequest, androidx.compose.ui.text.font.AsyncTypefaceCache, androidx.compose.ui.text.font.PlatformFontLoader, kotlin.jvm.functions.Function1)
    {
        java.util.List $r0, r60;
        androidx.compose.ui.text.font.TypefaceRequest r1;
        androidx.compose.ui.text.font.AsyncTypefaceCache r2, r61, r74;
        androidx.compose.ui.text.font.PlatformFontLoader r3;
        kotlin.jvm.functions.Function1 r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11;
        androidx.compose.ui.text.font.Font r5;
        java.lang.Throwable r6, $r48, $r49, $r52, $r58, $r59, r82, r84;
        kotlin.Pair $r7, $r22, $r31, $r40;
        java.lang.Object $r8, $r17, $r18, $r19, $r21, $r24, $r26, $r28, $r30, $r33, $r35, $r37, $r39, $r47, $r51, r67, $r68, r71, r72, r73, r79, $r80, $r83, $r86, r88, r89, r92;
        androidx.compose.ui.text.font.FontLoadingStrategy$Companion $r9, $r10, $r11;
        boolean $z0, $z1, $z2, $z3, $z5, z11, z12;
        java.lang.IllegalStateException $r12, $r41, $r53;
        java.lang.StringBuilder $r13, $r14, $r15, $r42, $r43, $r44, $r54, $r55, $r56;
        java.lang.String $r16, $r45, $r57;
        androidx.compose.ui.text.font.FontWeight $r20, $r29, $r38;
        androidx.compose.ui.text.font.AsyncTypefaceCache$Key $r23, $r34, r64;
        androidx.compose.ui.text.caches.LruCache $r25, $r36;
        kotlin.Result$Companion $r27, $r50;
        androidx.compose.ui.text.caches.SimpleArrayMap $r32, $r46;
        androidx.compose.ui.text.platform.SynchronizedObject r62, $r75;
        androidx.compose.ui.text.font.AsyncTypefaceCache$AsyncTypefaceResult $r65, r66, $r77, r78, r90;
        kotlin.Unit $r69, r81;
        androidx.compose.ui.text.font.Font[] r91;

        $r0 := @parameter0: java.util.List;

        r1 := @parameter1: androidx.compose.ui.text.font.TypefaceRequest;

        r2 := @parameter2: androidx.compose.ui.text.font.AsyncTypefaceCache;

        r3 := @parameter3: androidx.compose.ui.text.font.PlatformFontLoader;

        r4 := @parameter4: kotlin.jvm.functions.Function1;

        r60 = null;

        i11 = 0;

        i0 = interfaceinvoke $r0.<java.util.List: int size()>();

     label01:
        if i11 >= i0 goto label36;

        $r8 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i11);

        r5 = (androidx.compose.ui.text.font.Font) $r8;

        i1 = interfaceinvoke r5.<androidx.compose.ui.text.font.Font: int getLoadingStrategy-PKNRLFQ()>();

        $r9 = <androidx.compose.ui.text.font.FontLoadingStrategy: androidx.compose.ui.text.font.FontLoadingStrategy$Companion Companion>;

        $i2 = virtualinvoke $r9.<androidx.compose.ui.text.font.FontLoadingStrategy$Companion: int getBlocking-PKNRLFQ()>();

        $z0 = staticinvoke <androidx.compose.ui.text.font.FontLoadingStrategy: boolean equals-impl0(int,int)>(i1, $i2);

        if $z0 == 0 goto label15;

        r61 = r2;

        r62 = staticinvoke <androidx.compose.ui.text.font.AsyncTypefaceCache: androidx.compose.ui.text.platform.SynchronizedObject access$getCacheLock$p(androidx.compose.ui.text.font.AsyncTypefaceCache)>(r61);

        entermonitor r62;

     label02:
        $r34 = new androidx.compose.ui.text.font.AsyncTypefaceCache$Key;

        $r35 = interfaceinvoke r3.<androidx.compose.ui.text.font.PlatformFontLoader: java.lang.Object getCacheKey()>();

        specialinvoke $r34.<androidx.compose.ui.text.font.AsyncTypefaceCache$Key: void <init>(androidx.compose.ui.text.font.Font,java.lang.Object)>(r5, $r35);

        r64 = $r34;

        $r36 = staticinvoke <androidx.compose.ui.text.font.AsyncTypefaceCache: androidx.compose.ui.text.caches.LruCache access$getResultCache$p(androidx.compose.ui.text.font.AsyncTypefaceCache)>(r61);

        $r37 = virtualinvoke $r36.<androidx.compose.ui.text.caches.LruCache: java.lang.Object get(java.lang.Object)>(r64);

        $r65 = (androidx.compose.ui.text.font.AsyncTypefaceCache$AsyncTypefaceResult) $r37;

        if $r65 != null goto label03;

        $r46 = staticinvoke <androidx.compose.ui.text.font.AsyncTypefaceCache: androidx.compose.ui.text.caches.SimpleArrayMap access$getPermanentCache$p(androidx.compose.ui.text.font.AsyncTypefaceCache)>(r61);

        $r47 = virtualinvoke $r46.<androidx.compose.ui.text.caches.SimpleArrayMap: java.lang.Object get(java.lang.Object)>(r64);

        $r65 = (androidx.compose.ui.text.font.AsyncTypefaceCache$AsyncTypefaceResult) $r47;

     label03:
        r66 = $r65;

        if r66 == null goto label05;

        r67 = virtualinvoke r66.<androidx.compose.ui.text.font.AsyncTypefaceCache$AsyncTypefaceResult: java.lang.Object unbox-impl()>();

     label04:
        exitmonitor r62;

        $r68 = r67;

        goto label13;

     label05:
        $r69 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label06:
        exitmonitor r62;

        goto label09;

     label07:
        $r48 := @caughtexception;

     label08:
        exitmonitor r62;

        throw $r48;

     label09:
        r71 = interfaceinvoke r3.<androidx.compose.ui.text.font.PlatformFontLoader: java.lang.Object loadBlocking(androidx.compose.ui.text.font.Font)>(r5);

     label10:
        goto label12;

     label11:
        $r52 := @caughtexception;

        r6 = $r52;

        $r53 = new java.lang.IllegalStateException;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to load font ");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        $r58 = (java.lang.Throwable) r6;

        specialinvoke $r53.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r57, $r58);

        throw $r53;

     label12:
        r72 = r71;

        staticinvoke <androidx.compose.ui.text.font.AsyncTypefaceCache: void put$default(androidx.compose.ui.text.font.AsyncTypefaceCache,androidx.compose.ui.text.font.Font,androidx.compose.ui.text.font.PlatformFontLoader,java.lang.Object,boolean,int,java.lang.Object)>(r61, r5, r3, r72, 0, 8, null);

        $r68 = r72;

     label13:
        if $r68 != null goto label14;

        $r41 = new java.lang.IllegalStateException;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to load font ");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r41.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r45);

        throw $r41;

     label14:
        r73 = $r68;

        $i9 = virtualinvoke r1.<androidx.compose.ui.text.font.TypefaceRequest: int getFontSynthesis-GVVA2EU()>();

        $r38 = virtualinvoke r1.<androidx.compose.ui.text.font.TypefaceRequest: androidx.compose.ui.text.font.FontWeight getFontWeight()>();

        $i10 = virtualinvoke r1.<androidx.compose.ui.text.font.TypefaceRequest: int getFontStyle-_-LCdwA()>();

        $r39 = staticinvoke <androidx.compose.ui.text.font.FontSynthesis_androidKt: java.lang.Object synthesizeTypeface-FxwP2eA(int,java.lang.Object,androidx.compose.ui.text.font.Font,androidx.compose.ui.text.font.FontWeight,int)>($i9, r73, r5, $r38, $i10);

        $r40 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>(r60, $r39);

        return $r40;

     label15:
        $r10 = <androidx.compose.ui.text.font.FontLoadingStrategy: androidx.compose.ui.text.font.FontLoadingStrategy$Companion Companion>;

        $i3 = virtualinvoke $r10.<androidx.compose.ui.text.font.FontLoadingStrategy$Companion: int getOptionalLocal-PKNRLFQ()>();

        $z1 = staticinvoke <androidx.compose.ui.text.font.FontLoadingStrategy: boolean equals-impl0(int,int)>(i1, $i3);

        if $z1 == 0 goto label30;

        r74 = r2;

        z11 = 0;

        z12 = 0;

        $r75 = staticinvoke <androidx.compose.ui.text.font.AsyncTypefaceCache: androidx.compose.ui.text.platform.SynchronizedObject access$getCacheLock$p(androidx.compose.ui.text.font.AsyncTypefaceCache)>(r74);

        entermonitor $r75;

     label16:
        $r23 = new androidx.compose.ui.text.font.AsyncTypefaceCache$Key;

        $r24 = interfaceinvoke r3.<androidx.compose.ui.text.font.PlatformFontLoader: java.lang.Object getCacheKey()>();

        specialinvoke $r23.<androidx.compose.ui.text.font.AsyncTypefaceCache$Key: void <init>(androidx.compose.ui.text.font.Font,java.lang.Object)>(r5, $r24);

        $r25 = staticinvoke <androidx.compose.ui.text.font.AsyncTypefaceCache: androidx.compose.ui.text.caches.LruCache access$getResultCache$p(androidx.compose.ui.text.font.AsyncTypefaceCache)>(r74);

        $r26 = virtualinvoke $r25.<androidx.compose.ui.text.caches.LruCache: java.lang.Object get(java.lang.Object)>($r23);

        $r77 = (androidx.compose.ui.text.font.AsyncTypefaceCache$AsyncTypefaceResult) $r26;

        if $r77 != null goto label17;

        $r32 = staticinvoke <androidx.compose.ui.text.font.AsyncTypefaceCache: androidx.compose.ui.text.caches.SimpleArrayMap access$getPermanentCache$p(androidx.compose.ui.text.font.AsyncTypefaceCache)>(r74);

        $r33 = virtualinvoke $r32.<androidx.compose.ui.text.caches.SimpleArrayMap: java.lang.Object get(java.lang.Object)>($r23);

        $r77 = (androidx.compose.ui.text.font.AsyncTypefaceCache$AsyncTypefaceResult) $r33;

     label17:
        r78 = $r77;

        if r78 == null goto label19;

        r79 = virtualinvoke r78.<androidx.compose.ui.text.font.AsyncTypefaceCache$AsyncTypefaceResult: java.lang.Object unbox-impl()>();

     label18:
        exitmonitor $r75;

        $r80 = r79;

        goto label29;

     label19:
        r81 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label20:
        exitmonitor $r75;

        goto label23;

     label21:
        $r59 := @caughtexception;

        r82 = $r59;

     label22:
        exitmonitor $r75;

        throw r82;

     label23:
        $r27 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r28 = interfaceinvoke r3.<androidx.compose.ui.text.font.PlatformFontLoader: java.lang.Object loadBlocking(androidx.compose.ui.text.font.Font)>(r5);

        $r83 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r28);

     label24:
        goto label26;

     label25:
        $r49 := @caughtexception;

        r84 = $r49;

        $r50 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r51 = staticinvoke <kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)>(r84);

        $r83 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r51);

     label26:
        $z5 = staticinvoke <kotlin.Result: boolean isFailure-impl(java.lang.Object)>($r83);

        if $z5 == 0 goto label27;

        $r86 = null;

        goto label28;

     label27:
        $r86 = $r83;

     label28:
        r88 = $r86;

        staticinvoke <androidx.compose.ui.text.font.AsyncTypefaceCache: void put$default(androidx.compose.ui.text.font.AsyncTypefaceCache,androidx.compose.ui.text.font.Font,androidx.compose.ui.text.font.PlatformFontLoader,java.lang.Object,boolean,int,java.lang.Object)>(r74, r5, r3, r88, 0, 8, null);

        $r80 = $r86;

     label29:
        r89 = $r80;

        if r89 == null goto label35;

        $i7 = virtualinvoke r1.<androidx.compose.ui.text.font.TypefaceRequest: int getFontSynthesis-GVVA2EU()>();

        $r29 = virtualinvoke r1.<androidx.compose.ui.text.font.TypefaceRequest: androidx.compose.ui.text.font.FontWeight getFontWeight()>();

        $i8 = virtualinvoke r1.<androidx.compose.ui.text.font.TypefaceRequest: int getFontStyle-_-LCdwA()>();

        $r30 = staticinvoke <androidx.compose.ui.text.font.FontSynthesis_androidKt: java.lang.Object synthesizeTypeface-FxwP2eA(int,java.lang.Object,androidx.compose.ui.text.font.Font,androidx.compose.ui.text.font.FontWeight,int)>($i7, r89, r5, $r29, $i8);

        $r31 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>(r60, $r30);

        return $r31;

     label30:
        $r11 = <androidx.compose.ui.text.font.FontLoadingStrategy: androidx.compose.ui.text.font.FontLoadingStrategy$Companion Companion>;

        $i4 = virtualinvoke $r11.<androidx.compose.ui.text.font.FontLoadingStrategy$Companion: int getAsync-PKNRLFQ()>();

        $z2 = staticinvoke <androidx.compose.ui.text.font.FontLoadingStrategy: boolean equals-impl0(int,int)>(i1, $i4);

        if $z2 == 0 goto label34;

        r90 = virtualinvoke r2.<androidx.compose.ui.text.font.AsyncTypefaceCache: androidx.compose.ui.text.font.AsyncTypefaceCache$AsyncTypefaceResult get-1ASDuI8(androidx.compose.ui.text.font.Font,androidx.compose.ui.text.font.PlatformFontLoader)>(r5, r3);

        if r90 != null goto label32;

        if r60 != null goto label31;

        r91 = newarray (androidx.compose.ui.text.font.Font)[1];

        r91[0] = r5;

        r60 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List mutableListOf(java.lang.Object[])>(r91);

        goto label35;

     label31:
        interfaceinvoke r60.<java.util.List: boolean add(java.lang.Object)>(r5);

        goto label35;

     label32:
        $r17 = virtualinvoke r90.<androidx.compose.ui.text.font.AsyncTypefaceCache$AsyncTypefaceResult: java.lang.Object unbox-impl()>();

        $z3 = staticinvoke <androidx.compose.ui.text.font.AsyncTypefaceCache$AsyncTypefaceResult: boolean isPermanentFailure-impl(java.lang.Object)>($r17);

        if $z3 == 0 goto label33;

        goto label35;

     label33:
        $r18 = virtualinvoke r90.<androidx.compose.ui.text.font.AsyncTypefaceCache$AsyncTypefaceResult: java.lang.Object unbox-impl()>();

        if $r18 == null goto label35;

        $i5 = virtualinvoke r1.<androidx.compose.ui.text.font.TypefaceRequest: int getFontSynthesis-GVVA2EU()>();

        $r19 = virtualinvoke r90.<androidx.compose.ui.text.font.AsyncTypefaceCache$AsyncTypefaceResult: java.lang.Object unbox-impl()>();

        $r20 = virtualinvoke r1.<androidx.compose.ui.text.font.TypefaceRequest: androidx.compose.ui.text.font.FontWeight getFontWeight()>();

        $i6 = virtualinvoke r1.<androidx.compose.ui.text.font.TypefaceRequest: int getFontStyle-_-LCdwA()>();

        $r21 = staticinvoke <androidx.compose.ui.text.font.FontSynthesis_androidKt: java.lang.Object synthesizeTypeface-FxwP2eA(int,java.lang.Object,androidx.compose.ui.text.font.Font,androidx.compose.ui.text.font.FontWeight,int)>($i5, $r19, r5, $r20, $i6);

        $r22 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>(r60, $r21);

        return $r22;

     label34:
        $r12 = new java.lang.IllegalStateException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown font type ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r16);

        throw $r12;

     label35:
        i11 = i11 + 1;

        goto label01;

     label36:
        r92 = interfaceinvoke r4.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        $r7 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>(r60, r92);

        return $r7;

        catch java.lang.Throwable from label02 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.lang.Exception from label09 to label10 with label11;
        catch java.lang.Throwable from label16 to label18 with label21;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label21 to label22 with label21;
        catch java.lang.Throwable from label23 to label24 with label25;
    }

    public static final kotlin.Pair access$firstImmediatelyAvailable(java.util.List, androidx.compose.ui.text.font.TypefaceRequest, androidx.compose.ui.text.font.AsyncTypefaceCache, androidx.compose.ui.text.font.PlatformFontLoader, kotlin.jvm.functions.Function1)
    {
        java.util.List $r0;
        androidx.compose.ui.text.font.TypefaceRequest r1;
        androidx.compose.ui.text.font.AsyncTypefaceCache r2;
        androidx.compose.ui.text.font.PlatformFontLoader r3;
        kotlin.jvm.functions.Function1 r4;
        kotlin.Pair $r5;

        $r0 := @parameter0: java.util.List;

        r1 := @parameter1: androidx.compose.ui.text.font.TypefaceRequest;

        r2 := @parameter2: androidx.compose.ui.text.font.AsyncTypefaceCache;

        r3 := @parameter3: androidx.compose.ui.text.font.PlatformFontLoader;

        r4 := @parameter4: kotlin.jvm.functions.Function1;

        $r5 = staticinvoke <androidx.compose.ui.text.font.FontListFontFamilyTypefaceAdapterKt: kotlin.Pair firstImmediatelyAvailable(java.util.List,androidx.compose.ui.text.font.TypefaceRequest,androidx.compose.ui.text.font.AsyncTypefaceCache,androidx.compose.ui.text.font.PlatformFontLoader,kotlin.jvm.functions.Function1)>($r0, r1, r2, r3, r4);

        return $r5;
    }

