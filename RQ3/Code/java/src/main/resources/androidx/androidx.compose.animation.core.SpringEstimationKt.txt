androidx.compose.animation.core.SpringEstimationKt
    public static final long estimateAnimationDurationMillis(float, float, float, float, float)
    {
        float f0, f1, f2, f3, f4;
        double $d0, $d1, $d2, $d3, $d4;
        long $l0;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f4 := @parameter4: float;

        $d4 = (double) f0;

        $d3 = (double) f1;

        $d2 = (double) f2;

        $d1 = (double) f3;

        $d0 = (double) f4;

        $l0 = staticinvoke <androidx.compose.animation.core.SpringEstimationKt: long estimateAnimationDurationMillis(double,double,double,double,double)>($d4, $d3, $d2, $d1, $d0);

        return $l0;
    }

    public static final long estimateAnimationDurationMillis(double, double, double, double, double)
    {
        double d0, d1, d2, d3, d4, d5, $d6, $d7;
        kotlin.Pair r0;
        long $l0;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        $d6 = 2.0 * d1;

        $d7 = staticinvoke <java.lang.Math: double sqrt(double)>(d0);

        d5 = $d6 * $d7;

        r0 = staticinvoke <androidx.compose.animation.core.ComplexDoubleKt: kotlin.Pair complexQuadraticFormula(double,double,double)>(1.0, d5, d0);

        $l0 = staticinvoke <androidx.compose.animation.core.SpringEstimationKt: long estimateDurationInternal(kotlin.Pair,double,double,double,double)>(r0, d1, d2, d3, d4);

        return $l0;
    }

    public static final long estimateAnimationDurationMillis(double, double, double, double, double, double)
    {
        double d0, d1, d2, d3, d4, d5, d6, d7, $d8, $d9;
        kotlin.Pair r0;
        long $l0;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        $d8 = d0 * d2;

        $d9 = staticinvoke <java.lang.Math: double sqrt(double)>($d8);

        d6 = 2.0 * $d9;

        d7 = d1 / d6;

        r0 = staticinvoke <androidx.compose.animation.core.ComplexDoubleKt: kotlin.Pair complexQuadraticFormula(double,double,double)>(d2, d1, d0);

        $l0 = staticinvoke <androidx.compose.animation.core.SpringEstimationKt: long estimateDurationInternal(kotlin.Pair,double,double,double,double)>(r0, d7, d3, d4, d5);

        return $l0;
    }

    private static final double estimateUnderDamped(kotlin.Pair, double, double, double)
    {
        kotlin.Pair r0;
        double d0, d1, d2, d3, d4, d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15;
        java.lang.Object $r1, $r3;
        androidx.compose.animation.core.ComplexDouble $r2, $r4;

        r0 := @parameter0: kotlin.Pair;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        $r1 = virtualinvoke r0.<kotlin.Pair: java.lang.Object getFirst()>();

        $r2 = (androidx.compose.animation.core.ComplexDouble) $r1;

        d3 = virtualinvoke $r2.<androidx.compose.animation.core.ComplexDouble: double getReal()>();

        d4 = d0;

        $d7 = d3 * d4;

        $d8 = d1 - $d7;

        $r3 = virtualinvoke r0.<kotlin.Pair: java.lang.Object getFirst()>();

        $r4 = (androidx.compose.animation.core.ComplexDouble) $r3;

        $d9 = virtualinvoke $r4.<androidx.compose.animation.core.ComplexDouble: double getImaginary()>();

        d5 = $d8 / $d9;

        $d11 = d4 * d4;

        $d10 = d5 * d5;

        $d12 = $d11 + $d10;

        d6 = staticinvoke <java.lang.Math: double sqrt(double)>($d12);

        $d13 = d2 / d6;

        $d14 = staticinvoke <java.lang.Math: double log(double)>($d13);

        $d15 = $d14 / d3;

        return $d15;
    }

    private static final double estimateCriticallyDamped(kotlin.Pair, double, double, double)
    {
        kotlin.Pair r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, d26, $d27, d28, d29, $d30, $d31, $d32, $d33, $d34, $d35, d36, d37;
        kotlin.jvm.functions.Function1 r1, r11;
        java.lang.Object $r2, $r5, $r8;
        androidx.compose.animation.core.ComplexDouble $r3;
        boolean $z1, $z2, $z3, $z4, $z6, $z7, $z9, $z10, $z11;
        java.lang.Double $r4, $r7;
        java.lang.Number $r6, $r9;
        byte $b0, $b1, $b2, $b3, $b4, $b6;
        androidx.compose.animation.core.SpringEstimationKt$estimateCriticallyDamped$fn$1 $r10;
        androidx.compose.animation.core.SpringEstimationKt$estimateCriticallyDamped$fnPrime$1 $r12;
        int i5;

        r0 := @parameter0: kotlin.Pair;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        $r2 = virtualinvoke r0.<kotlin.Pair: java.lang.Object getFirst()>();

        $r3 = (androidx.compose.animation.core.ComplexDouble) $r2;

        d3 = virtualinvoke $r3.<androidx.compose.animation.core.ComplexDouble: double getReal()>();

        d4 = d0;

        $d9 = d3 * d4;

        d5 = d1 - $d9;

        $d10 = d2 / d4;

        $d11 = staticinvoke <java.lang.Math: double abs(double)>($d10);

        $d12 = staticinvoke <java.lang.Math: double log(double)>($d11);

        d6 = $d12 / d3;

        $d13 = d2 / d5;

        $d14 = staticinvoke <java.lang.Math: double abs(double)>($d13);

        $d15 = staticinvoke <java.lang.Math: double log(double)>($d14);

        $d16 = staticinvoke <androidx.compose.animation.core.SpringEstimationKt: double estimateCriticallyDamped$t2Iterate(double,double)>($d15, d3);

        d7 = $d16 / d3;

        d26 = d6;

        $z1 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d26);

        if $z1 != 0 goto label01;

        $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d26);

        if $z4 != 0 goto label01;

        $z6 = 1;

        goto label02;

     label01:
        $z6 = 0;

     label02:
        if $z6 != 0 goto label03;

        $z7 = 1;

        goto label04;

     label03:
        $z7 = 0;

     label04:
        if $z7 == 0 goto label05;

        $d27 = d7;

        goto label11;

     label05:
        d28 = d7;

        $z2 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d28);

        if $z2 != 0 goto label06;

        $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d28);

        if $z3 != 0 goto label06;

        $z9 = 1;

        goto label07;

     label06:
        $z9 = 0;

     label07:
        if $z9 != 0 goto label08;

        $z10 = 1;

        goto label09;

     label08:
        $z10 = 0;

     label09:
        if $z10 == 0 goto label10;

        $d27 = d6;

        goto label11;

     label10:
        $d27 = staticinvoke <java.lang.Math: double max(double,double)>(d6, d7);

     label11:
        d29 = $d27;

        $d30 = d3 * d4;

        $d31 = $d30 + d5;

        $d32 = neg $d31;

        $d33 = d3 * d5;

        $d34 = $d32 / $d33;

        $z11 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d34);

        if $z11 != 0 goto label12;

        $b0 = $d34 cmpg 0.0;

        if $b0 > 0 goto label13;

     label12:
        $d35 = neg d2;

        goto label16;

     label13:
        $b1 = $d34 cmpl 0.0;

        if $b1 <= 0 goto label15;

        $d24 = staticinvoke <androidx.compose.animation.core.SpringEstimationKt: double estimateCriticallyDamped$xInflection(double,double,double,double)>(d4, d3, $d34, d5);

        $d25 = neg $d24;

        $b2 = $d25 cmpg d2;

        if $b2 >= 0 goto label15;

        $b3 = d5 cmpg 0.0;

        if $b3 >= 0 goto label14;

        $b4 = d4 cmpl 0.0;

        if $b4 <= 0 goto label14;

        d29 = 0.0;

     label14:
        $d35 = neg d2;

        goto label16;

     label15:
        $d21 = 2.0 / d3;

        $d23 = neg $d21;

        $d22 = d4 / d5;

        d36 = $d23 - $d22;

        d29 = d36;

        $d35 = d2;

     label16:
        $r10 = new androidx.compose.animation.core.SpringEstimationKt$estimateCriticallyDamped$fn$1;

        specialinvoke $r10.<androidx.compose.animation.core.SpringEstimationKt$estimateCriticallyDamped$fn$1: void <init>(double,double,double,double)>(d4, d5, d3, $d35);

        r11 = (kotlin.jvm.functions.Function1) $r10;

        $r12 = new androidx.compose.animation.core.SpringEstimationKt$estimateCriticallyDamped$fnPrime$1;

        specialinvoke $r12.<androidx.compose.animation.core.SpringEstimationKt$estimateCriticallyDamped$fnPrime$1: void <init>(double,double,double)>(d5, d3, d4);

        r1 = (kotlin.jvm.functions.Function1) $r12;

        d37 = 1.7976931348623157E308;

        i5 = 0;

     label17:
        $b6 = d37 cmpl 0.001;

        if $b6 <= 0 goto label18;

        if i5 >= 100 goto label18;

        i5 = i5 + 1;

        d8 = d29;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d29);

        $r5 = interfaceinvoke r11.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = (java.lang.Number) $r5;

        $d17 = virtualinvoke $r6.<java.lang.Number: double doubleValue()>();

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d29);

        $r8 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r7);

        $r9 = (java.lang.Number) $r8;

        $d18 = virtualinvoke $r9.<java.lang.Number: double doubleValue()>();

        $d19 = $d17 / $d18;

        d29 = d29 - $d19;

        $d20 = d8 - d29;

        d37 = staticinvoke <java.lang.Math: double abs(double)>($d20);

        goto label17;

     label18:
        return d29;
    }

    private static final double estimateOverDamped(kotlin.Pair, double, double, double)
    {
        kotlin.Pair r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, d33, $d34, d35, d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, d45, $d46, $d47, d48;
        kotlin.jvm.functions.Function1 r1, r13;
        java.lang.Object $r2, $r4, $r7, $r10, $r16;
        androidx.compose.animation.core.ComplexDouble $r3, $r5;
        boolean $z1, $z2, $z3, $z4, $z6, $z7, $z9, $z10, $z11;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6;
        java.lang.Double $r6, $r9, $r15;
        java.lang.Number $r8, $r11, $r17;
        androidx.compose.animation.core.SpringEstimationKt$estimateOverDamped$fn$1 $r12;
        androidx.compose.animation.core.SpringEstimationKt$estimateOverDamped$fnPrime$1 $r14;
        int i7;

        r0 := @parameter0: kotlin.Pair;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        $r2 = virtualinvoke r0.<kotlin.Pair: java.lang.Object getFirst()>();

        $r3 = (androidx.compose.animation.core.ComplexDouble) $r2;

        d3 = virtualinvoke $r3.<androidx.compose.animation.core.ComplexDouble: double getReal()>();

        $r4 = virtualinvoke r0.<kotlin.Pair: java.lang.Object getSecond()>();

        $r5 = (androidx.compose.animation.core.ComplexDouble) $r4;

        d4 = virtualinvoke $r5.<androidx.compose.animation.core.ComplexDouble: double getReal()>();

        $d10 = d3 * d0;

        $d12 = $d10 - d1;

        $d11 = d3 - d4;

        d5 = $d12 / $d11;

        d6 = d0 - d5;

        $d13 = d2 / d6;

        $d14 = staticinvoke <java.lang.Math: double abs(double)>($d13);

        $d15 = staticinvoke <java.lang.Math: double log(double)>($d14);

        d7 = $d15 / d3;

        $d16 = d2 / d5;

        $d17 = staticinvoke <java.lang.Math: double abs(double)>($d16);

        $d18 = staticinvoke <java.lang.Math: double log(double)>($d17);

        d8 = $d18 / d4;

        d33 = d7;

        $z1 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d33);

        if $z1 != 0 goto label01;

        $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d33);

        if $z4 != 0 goto label01;

        $z6 = 1;

        goto label02;

     label01:
        $z6 = 0;

     label02:
        if $z6 != 0 goto label03;

        $z7 = 1;

        goto label04;

     label03:
        $z7 = 0;

     label04:
        if $z7 == 0 goto label05;

        $d34 = d8;

        goto label11;

     label05:
        d35 = d8;

        $z2 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d35);

        if $z2 != 0 goto label06;

        $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d35);

        if $z3 != 0 goto label06;

        $z9 = 1;

        goto label07;

     label06:
        $z9 = 0;

     label07:
        if $z9 != 0 goto label08;

        $z10 = 1;

        goto label09;

     label08:
        $z10 = 0;

     label09:
        if $z10 == 0 goto label10;

        $d34 = d7;

        goto label11;

     label10:
        $d34 = staticinvoke <java.lang.Math: double max(double,double)>(d7, d8);

     label11:
        d36 = $d34;

        $d37 = d6 * d3;

        $d38 = neg d5;

        $d39 = $d38 * d4;

        $d40 = $d37 / $d39;

        $d41 = staticinvoke <java.lang.Math: double log(double)>($d40);

        $d42 = d4 - d3;

        $d43 = $d41 / $d42;

        $z11 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d43);

        if $z11 != 0 goto label12;

        $b1 = $d43 cmpg 0.0;

        if $b1 > 0 goto label13;

     label12:
        $d44 = neg d2;

        goto label16;

     label13:
        $b2 = $d43 cmpl 0.0;

        if $b2 <= 0 goto label15;

        $d31 = staticinvoke <androidx.compose.animation.core.SpringEstimationKt: double estimateOverDamped$xInflection-0(double,double,double,double,double)>(d6, d3, $d43, d5, d4);

        $d32 = neg $d31;

        $b3 = $d32 cmpg d2;

        if $b3 >= 0 goto label15;

        $b4 = d5 cmpl 0.0;

        if $b4 <= 0 goto label14;

        $b5 = d6 cmpg 0.0;

        if $b5 >= 0 goto label14;

        d36 = 0.0;

     label14:
        $d44 = neg d2;

        goto label16;

     label15:
        $d23 = d5 * d4;

        $d24 = $d23 * d4;

        $d27 = neg $d24;

        $d25 = d6 * d3;

        $d26 = $d25 * d3;

        $d28 = $d27 / $d26;

        $d29 = staticinvoke <java.lang.Math: double log(double)>($d28);

        $d30 = d3 - d4;

        d45 = $d29 / $d30;

        d36 = d45;

        $d44 = d2;

     label16:
        $r12 = new androidx.compose.animation.core.SpringEstimationKt$estimateOverDamped$fn$1;

        specialinvoke $r12.<androidx.compose.animation.core.SpringEstimationKt$estimateOverDamped$fn$1: void <init>(double,double,double,double,double)>(d6, d3, d5, d4, $d44);

        r13 = (kotlin.jvm.functions.Function1) $r12;

        $r14 = new androidx.compose.animation.core.SpringEstimationKt$estimateOverDamped$fnPrime$1;

        specialinvoke $r14.<androidx.compose.animation.core.SpringEstimationKt$estimateOverDamped$fnPrime$1: void <init>(double,double,double,double)>(d6, d3, d5, d4);

        r1 = (kotlin.jvm.functions.Function1) $r14;

        $r15 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d36);

        $r16 = interfaceinvoke r13.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r15);

        $r17 = (java.lang.Number) $r16;

        $d46 = virtualinvoke $r17.<java.lang.Number: double doubleValue()>();

        $d47 = staticinvoke <java.lang.Math: double abs(double)>($d46);

        $b6 = $d47 cmpg 1.0E-4;

        if $b6 >= 0 goto label17;

        return d36;

     label17:
        d48 = 1.7976931348623157E308;

        i7 = 0;

     label18:
        $b0 = d48 cmpl 0.001;

        if $b0 <= 0 goto label19;

        if i7 >= 100 goto label19;

        i7 = i7 + 1;

        d9 = d36;

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d36);

        $r7 = interfaceinvoke r13.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r6);

        $r8 = (java.lang.Number) $r7;

        $d19 = virtualinvoke $r8.<java.lang.Number: double doubleValue()>();

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d36);

        $r10 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r9);

        $r11 = (java.lang.Number) $r10;

        $d20 = virtualinvoke $r11.<java.lang.Number: double doubleValue()>();

        $d21 = $d19 / $d20;

        d36 = d36 - $d21;

        $d22 = d9 - d36;

        d48 = staticinvoke <java.lang.Math: double abs(double)>($d22);

        goto label18;

     label19:
        return d36;
    }

    private static final long estimateDurationInternal(kotlin.Pair, double, double, double, double)
    {
        kotlin.Pair r0;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8;
        byte $b0, $b1, $b2, $b3, $b4;
        boolean $z0, $z1;
        long $l5;

        r0 := @parameter0: kotlin.Pair;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        $b0 = d2 cmpg 0.0;

        if $b0 != 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        if $z0 == 0 goto label05;

        $b4 = d1 cmpg 0.0;

        if $b4 != 0 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        if $z1 == 0 goto label05;

        return 0L;

     label05:
        $b1 = d2 cmpg 0.0;

        if $b1 >= 0 goto label06;

        $d6 = neg d1;

        goto label07;

     label06:
        $d6 = d1;

     label07:
        d4 = $d6;

        d5 = staticinvoke <java.lang.Math: double abs(double)>(d2);

        $b2 = d0 cmpl 1.0;

        if $b2 <= 0 goto label08;

        $d7 = staticinvoke <androidx.compose.animation.core.SpringEstimationKt: double estimateOverDamped(kotlin.Pair,double,double,double)>(r0, d5, d4, d3);

        goto label10;

     label08:
        $b3 = d0 cmpg 1.0;

        if $b3 >= 0 goto label09;

        $d7 = staticinvoke <androidx.compose.animation.core.SpringEstimationKt: double estimateUnderDamped(kotlin.Pair,double,double,double)>(r0, d5, d4, d3);

        goto label10;

     label09:
        $d7 = staticinvoke <androidx.compose.animation.core.SpringEstimationKt: double estimateCriticallyDamped(kotlin.Pair,double,double,double)>(r0, d5, d4, d3);

     label10:
        $d8 = $d7 * 1000.0;

        $l5 = (long) $d8;

        return $l5;
    }

    private static final double iterateNewtonsMethod(double, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        double d0, $d1, $d2, $d3, $d4;
        kotlin.jvm.functions.Function1 r0, r1;
        java.lang.Double $r2, $r5;
        java.lang.Object $r3, $r6;
        java.lang.Number $r4, $r7;

        d0 := @parameter0: double;

        r0 := @parameter1: kotlin.jvm.functions.Function1;

        r1 := @parameter2: kotlin.jvm.functions.Function1;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r3 = interfaceinvoke r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r6 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r7 = (java.lang.Number) $r6;

        $d2 = virtualinvoke $r7.<java.lang.Number: double doubleValue()>();

        $d3 = $d1 / $d2;

        $d4 = d0 - $d3;

        return $d4;
    }

    private static final boolean isNotFinite(double)
    {
        double $d0, d1;
        boolean $z1, $z2, $z3, $z4;

        $d0 := @parameter0: double;

        d1 = $d0;

        $z1 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d1);

        if $z1 != 0 goto label1;

        $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1);

        if $z2 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        if $z3 != 0 goto label3;

        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        return $z4;
    }

    private static final double estimateCriticallyDamped$t2Iterate(double, double)
    {
        double d0, d1, $d2, $d3, $d4, d5;
        int i0;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d5 = d0;

        i0 = 0;

     label1:
        if i0 >= 6 goto label2;

        $d2 = d5 / d1;

        $d3 = staticinvoke <java.lang.Math: double abs(double)>($d2);

        $d4 = staticinvoke <java.lang.Math: double log(double)>($d3);

        d5 = d0 - $d4;

        i0 = i0 + 1;

        goto label1;

     label2:
        return d5;
    }

    private static final double estimateCriticallyDamped$xInflection(double, double, double, double)
    {
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        $d4 = d1 * d2;

        $d5 = staticinvoke <java.lang.Math: double exp(double)>($d4);

        $d7 = d0 * $d5;

        $d8 = d3 * d2;

        $d6 = d1 * d2;

        $d9 = staticinvoke <java.lang.Math: double exp(double)>($d6);

        $d10 = $d8 * $d9;

        $d11 = $d7 + $d10;

        return $d11;
    }

    private static final double estimateOverDamped$xInflection-0(double, double, double, double, double)
    {
        double d0, $d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11;

        d0 := @parameter0: double;

        d2 := @parameter1: double;

        d3 := @parameter2: double;

        d4 := @parameter3: double;

        d5 := @parameter4: double;

        $d6 = d2 * d3;

        $d7 = staticinvoke <java.lang.Math: double exp(double)>($d6);

        $d9 = d0 * $d7;

        $d8 = d5 * d3;

        $d10 = staticinvoke <java.lang.Math: double exp(double)>($d8);

        $d11 = d4 * $d10;

        $d1 = $d9 + $d11;

        return $d1;
    }

