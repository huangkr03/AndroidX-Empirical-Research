androidx.autofill.inline.UiVersions
<androidx.autofill.inline.UiVersions: java.lang.String INLINE_UI_VERSION_1>
<androidx.autofill.inline.UiVersions: java.util.Set UI_VERSIONS>
    public static java.util.Set getUiVersions()
    {
        java.util.Set $r0;

        $r0 = <androidx.autofill.inline.UiVersions: java.util.Set UI_VERSIONS>;

        return $r0;
    }

    public static java.util.List getVersions(android.os.Bundle)
    {
        android.os.Bundle r0;
        java.util.List $r1;

        r0 := @parameter0: android.os.Bundle;

        $r1 = staticinvoke <androidx.autofill.inline.VersionUtils: java.util.List getSupportedVersions(android.os.Bundle)>(r0);

        return $r1;
    }

    private void <init>()
    {
        androidx.autofill.inline.UiVersions r0;

        r0 := @this: androidx.autofill.inline.UiVersions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static androidx.autofill.inline.UiVersions$StylesBuilder newStylesBuilder()
    {
        androidx.autofill.inline.UiVersions$StylesBuilder $r0;

        $r0 = new androidx.autofill.inline.UiVersions$StylesBuilder;

        specialinvoke $r0.<androidx.autofill.inline.UiVersions$StylesBuilder: void <init>()>();

        return $r0;
    }

    static void <clinit>()
    {
        java.util.HashSet $r0;
        java.lang.String[] $r1;
        java.util.List $r2;

        $r0 = new java.util.HashSet;

        $r1 = newarray (java.lang.String)[1];

        $r1[0] = "androidx.autofill.inline.ui.version:v1";

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        specialinvoke $r0.<java.util.HashSet: void <init>(java.util.Collection)>($r2);

        <androidx.autofill.inline.UiVersions: java.util.Set UI_VERSIONS> = $r0;

        return;
    }

androidx.autofill.inline.UiVersions$Content
<androidx.autofill.inline.UiVersions$Content: android.app.slice.Slice getSlice()>
androidx.autofill.inline.UiVersions$InlineUiVersion
androidx.autofill.inline.UiVersions$Style
<androidx.autofill.inline.UiVersions$Style: android.os.Bundle getBundle()>
<androidx.autofill.inline.UiVersions$Style: java.lang.String getVersion()>
androidx.autofill.inline.UiVersions$StylesBuilder
<androidx.autofill.inline.UiVersions$StylesBuilder: java.util.List mStyles>
    void <init>()
    {
        androidx.autofill.inline.UiVersions$StylesBuilder r0;
        java.util.ArrayList $r1;

        r0 := @this: androidx.autofill.inline.UiVersions$StylesBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<androidx.autofill.inline.UiVersions$StylesBuilder: java.util.List mStyles> = $r1;

        return;
    }

    public androidx.autofill.inline.UiVersions$StylesBuilder addStyle(androidx.autofill.inline.UiVersions$Style)
    {
        androidx.autofill.inline.UiVersions$StylesBuilder r0;
        androidx.autofill.inline.UiVersions$Style r1;
        java.lang.String $r2, $r7, $r9;
        boolean $z0;
        java.util.List $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r8;

        r0 := @this: androidx.autofill.inline.UiVersions$StylesBuilder;

        r1 := @parameter0: androidx.autofill.inline.UiVersions$Style;

        $r2 = interfaceinvoke r1.<androidx.autofill.inline.UiVersions$Style: java.lang.String getVersion()>();

        $z0 = staticinvoke <androidx.autofill.inline.VersionUtils: boolean isVersionSupported(java.lang.String)>($r2);

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported style version: ");

        $r7 = interfaceinvoke r1.<androidx.autofill.inline.UiVersions$Style: java.lang.String getVersion()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label1:
        $r3 = r0.<androidx.autofill.inline.UiVersions$StylesBuilder: java.util.List mStyles>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public android.os.Bundle build()
    {
        androidx.autofill.inline.UiVersions$StylesBuilder r0;
        android.os.Bundle r1, $r3;
        java.util.List $r2, $r4;
        boolean $z0;
        java.lang.IllegalStateException $r5;

        r0 := @this: androidx.autofill.inline.UiVersions$StylesBuilder;

        $r2 = r0.<androidx.autofill.inline.UiVersions$StylesBuilder: java.util.List mStyles>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Please put at least one style in the builder");

        throw $r5;

     label1:
        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        r1 = $r3;

        $r4 = r0.<androidx.autofill.inline.UiVersions$StylesBuilder: java.util.List mStyles>;

        staticinvoke <androidx.autofill.inline.VersionUtils: void writeStylesToBundle(java.util.List,android.os.Bundle)>($r4, r1);

        return r1;
    }

