kotlin.text.CharDirectionality
<kotlin.text.CharDirectionality: kotlin.text.CharDirectionality[] $VALUES>
<kotlin.text.CharDirectionality: kotlin.text.CharDirectionality ARABIC_NUMBER>
<kotlin.text.CharDirectionality: kotlin.text.CharDirectionality BOUNDARY_NEUTRAL>
<kotlin.text.CharDirectionality: kotlin.text.CharDirectionality COMMON_NUMBER_SEPARATOR>
<kotlin.text.CharDirectionality: kotlin.text.CharDirectionality$Companion Companion>
<kotlin.text.CharDirectionality: kotlin.text.CharDirectionality EUROPEAN_NUMBER>
<kotlin.text.CharDirectionality: kotlin.text.CharDirectionality EUROPEAN_NUMBER_SEPARATOR>
<kotlin.text.CharDirectionality: kotlin.text.CharDirectionality EUROPEAN_NUMBER_TERMINATOR>
<kotlin.text.CharDirectionality: kotlin.text.CharDirectionality LEFT_TO_RIGHT>
<kotlin.text.CharDirectionality: kotlin.text.CharDirectionality LEFT_TO_RIGHT_EMBEDDING>
<kotlin.text.CharDirectionality: kotlin.text.CharDirectionality LEFT_TO_RIGHT_OVERRIDE>
<kotlin.text.CharDirectionality: kotlin.text.CharDirectionality NONSPACING_MARK>
<kotlin.text.CharDirectionality: kotlin.text.CharDirectionality OTHER_NEUTRALS>
<kotlin.text.CharDirectionality: kotlin.text.CharDirectionality PARAGRAPH_SEPARATOR>
<kotlin.text.CharDirectionality: kotlin.text.CharDirectionality POP_DIRECTIONAL_FORMAT>
<kotlin.text.CharDirectionality: kotlin.text.CharDirectionality RIGHT_TO_LEFT>
<kotlin.text.CharDirectionality: kotlin.text.CharDirectionality RIGHT_TO_LEFT_ARABIC>
<kotlin.text.CharDirectionality: kotlin.text.CharDirectionality RIGHT_TO_LEFT_EMBEDDING>
<kotlin.text.CharDirectionality: kotlin.text.CharDirectionality RIGHT_TO_LEFT_OVERRIDE>
<kotlin.text.CharDirectionality: kotlin.text.CharDirectionality SEGMENT_SEPARATOR>
<kotlin.text.CharDirectionality: kotlin.text.CharDirectionality UNDEFINED>
<kotlin.text.CharDirectionality: kotlin.text.CharDirectionality WHITESPACE>
<kotlin.text.CharDirectionality: kotlin.Lazy directionalityMap$delegate>
<kotlin.text.CharDirectionality: int value>
    private static final kotlin.text.CharDirectionality[] $values()
    {
        kotlin.text.CharDirectionality[] $r0;
        kotlin.text.CharDirectionality $r1;

        $r0 = newarray (kotlin.text.CharDirectionality)[20];

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality UNDEFINED>;

        $r0[0] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality LEFT_TO_RIGHT>;

        $r0[1] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality RIGHT_TO_LEFT>;

        $r0[2] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality RIGHT_TO_LEFT_ARABIC>;

        $r0[3] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality EUROPEAN_NUMBER>;

        $r0[4] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality EUROPEAN_NUMBER_SEPARATOR>;

        $r0[5] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality EUROPEAN_NUMBER_TERMINATOR>;

        $r0[6] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality ARABIC_NUMBER>;

        $r0[7] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality COMMON_NUMBER_SEPARATOR>;

        $r0[8] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality NONSPACING_MARK>;

        $r0[9] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality BOUNDARY_NEUTRAL>;

        $r0[10] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality PARAGRAPH_SEPARATOR>;

        $r0[11] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality SEGMENT_SEPARATOR>;

        $r0[12] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality WHITESPACE>;

        $r0[13] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality OTHER_NEUTRALS>;

        $r0[14] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality LEFT_TO_RIGHT_EMBEDDING>;

        $r0[15] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality LEFT_TO_RIGHT_OVERRIDE>;

        $r0[16] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality RIGHT_TO_LEFT_EMBEDDING>;

        $r0[17] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality RIGHT_TO_LEFT_OVERRIDE>;

        $r0[18] = $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality POP_DIRECTIONAL_FORMAT>;

        $r0[19] = $r1;

        return $r0;
    }

    static void <clinit>()
    {
        kotlin.text.CharDirectionality $r0;
        kotlin.text.CharDirectionality[] $r1;
        kotlin.text.CharDirectionality$Companion $r2;
        kotlin.text.CharDirectionality$Companion$directionalityMap$2 $r3;
        kotlin.Lazy $r4;

        $r0 = new kotlin.text.CharDirectionality;

        specialinvoke $r0.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("UNDEFINED", 0, -1);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality UNDEFINED> = $r0;

        $r0 = new kotlin.text.CharDirectionality;

        specialinvoke $r0.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("LEFT_TO_RIGHT", 1, 0);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality LEFT_TO_RIGHT> = $r0;

        $r0 = new kotlin.text.CharDirectionality;

        specialinvoke $r0.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("RIGHT_TO_LEFT", 2, 1);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality RIGHT_TO_LEFT> = $r0;

        $r0 = new kotlin.text.CharDirectionality;

        specialinvoke $r0.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("RIGHT_TO_LEFT_ARABIC", 3, 2);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality RIGHT_TO_LEFT_ARABIC> = $r0;

        $r0 = new kotlin.text.CharDirectionality;

        specialinvoke $r0.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("EUROPEAN_NUMBER", 4, 3);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality EUROPEAN_NUMBER> = $r0;

        $r0 = new kotlin.text.CharDirectionality;

        specialinvoke $r0.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("EUROPEAN_NUMBER_SEPARATOR", 5, 4);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality EUROPEAN_NUMBER_SEPARATOR> = $r0;

        $r0 = new kotlin.text.CharDirectionality;

        specialinvoke $r0.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("EUROPEAN_NUMBER_TERMINATOR", 6, 5);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality EUROPEAN_NUMBER_TERMINATOR> = $r0;

        $r0 = new kotlin.text.CharDirectionality;

        specialinvoke $r0.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("ARABIC_NUMBER", 7, 6);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality ARABIC_NUMBER> = $r0;

        $r0 = new kotlin.text.CharDirectionality;

        specialinvoke $r0.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("COMMON_NUMBER_SEPARATOR", 8, 7);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality COMMON_NUMBER_SEPARATOR> = $r0;

        $r0 = new kotlin.text.CharDirectionality;

        specialinvoke $r0.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("NONSPACING_MARK", 9, 8);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality NONSPACING_MARK> = $r0;

        $r0 = new kotlin.text.CharDirectionality;

        specialinvoke $r0.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("BOUNDARY_NEUTRAL", 10, 9);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality BOUNDARY_NEUTRAL> = $r0;

        $r0 = new kotlin.text.CharDirectionality;

        specialinvoke $r0.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("PARAGRAPH_SEPARATOR", 11, 10);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality PARAGRAPH_SEPARATOR> = $r0;

        $r0 = new kotlin.text.CharDirectionality;

        specialinvoke $r0.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("SEGMENT_SEPARATOR", 12, 11);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality SEGMENT_SEPARATOR> = $r0;

        $r0 = new kotlin.text.CharDirectionality;

        specialinvoke $r0.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("WHITESPACE", 13, 12);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality WHITESPACE> = $r0;

        $r0 = new kotlin.text.CharDirectionality;

        specialinvoke $r0.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("OTHER_NEUTRALS", 14, 13);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality OTHER_NEUTRALS> = $r0;

        $r0 = new kotlin.text.CharDirectionality;

        specialinvoke $r0.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("LEFT_TO_RIGHT_EMBEDDING", 15, 14);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality LEFT_TO_RIGHT_EMBEDDING> = $r0;

        $r0 = new kotlin.text.CharDirectionality;

        specialinvoke $r0.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("LEFT_TO_RIGHT_OVERRIDE", 16, 15);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality LEFT_TO_RIGHT_OVERRIDE> = $r0;

        $r0 = new kotlin.text.CharDirectionality;

        specialinvoke $r0.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("RIGHT_TO_LEFT_EMBEDDING", 17, 16);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality RIGHT_TO_LEFT_EMBEDDING> = $r0;

        $r0 = new kotlin.text.CharDirectionality;

        specialinvoke $r0.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("RIGHT_TO_LEFT_OVERRIDE", 18, 17);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality RIGHT_TO_LEFT_OVERRIDE> = $r0;

        $r0 = new kotlin.text.CharDirectionality;

        specialinvoke $r0.<kotlin.text.CharDirectionality: void <init>(java.lang.String,int,int)>("POP_DIRECTIONAL_FORMAT", 19, 18);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality POP_DIRECTIONAL_FORMAT> = $r0;

        $r1 = staticinvoke <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality[] $values()>();

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality[] $VALUES> = $r1;

        $r2 = new kotlin.text.CharDirectionality$Companion;

        specialinvoke $r2.<kotlin.text.CharDirectionality$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality$Companion Companion> = $r2;

        $r3 = <kotlin.text.CharDirectionality$Companion$directionalityMap$2: kotlin.text.CharDirectionality$Companion$directionalityMap$2 INSTANCE>;

        $r4 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r3);

        <kotlin.text.CharDirectionality: kotlin.Lazy directionalityMap$delegate> = $r4;

        return;
    }

    private void <init>(java.lang.String, int, int)
    {
        kotlin.text.CharDirectionality $r0;
        java.lang.String $r1;
        int $i0, $i1;

        $r0 := @this: kotlin.text.CharDirectionality;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke $r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        $r0.<kotlin.text.CharDirectionality: int value> = $i1;

        return;
    }

    public static final kotlin.Lazy access$getDirectionalityMap$delegate$cp()
    {
        kotlin.Lazy r0;

        r0 = <kotlin.text.CharDirectionality: kotlin.Lazy directionalityMap$delegate>;

        return r0;
    }

    public static kotlin.text.CharDirectionality valueOf(java.lang.String)
    {
        java.lang.Enum $r0;
        java.lang.String $r1;
        kotlin.text.CharDirectionality $r2;

        $r1 := @parameter0: java.lang.String;

        $r0 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lkotlin/text/CharDirectionality;", $r1);

        $r2 = (kotlin.text.CharDirectionality) $r0;

        return $r2;
    }

    public static kotlin.text.CharDirectionality[] values()
    {
        java.lang.Object $r0;
        kotlin.text.CharDirectionality[] $r1;

        $r1 = <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (kotlin.text.CharDirectionality[]) $r0;

        return $r1;
    }

    public final int getValue()
    {
        kotlin.text.CharDirectionality $r0;
        int i0;

        $r0 := @this: kotlin.text.CharDirectionality;

        i0 = $r0.<kotlin.text.CharDirectionality: int value>;

        return i0;
    }

kotlin.text.CharDirectionality$Companion$directionalityMap$2
<kotlin.text.CharDirectionality$Companion$directionalityMap$2: kotlin.text.CharDirectionality$Companion$directionalityMap$2 INSTANCE>
    static void <clinit>()
    {
        kotlin.text.CharDirectionality$Companion$directionalityMap$2 $r0;

        $r0 = new kotlin.text.CharDirectionality$Companion$directionalityMap$2;

        specialinvoke $r0.<kotlin.text.CharDirectionality$Companion$directionalityMap$2: void <init>()>();

        <kotlin.text.CharDirectionality$Companion$directionalityMap$2: kotlin.text.CharDirectionality$Companion$directionalityMap$2 INSTANCE> = $r0;

        return;
    }

    void <init>()
    {
        kotlin.text.CharDirectionality$Companion$directionalityMap$2 $r0;

        $r0 := @this: kotlin.text.CharDirectionality$Companion$directionalityMap$2;

        specialinvoke $r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public volatile java.lang.Object invoke()
    {
        kotlin.text.CharDirectionality$Companion$directionalityMap$2 $r0;
        java.util.Map $r1;

        $r0 := @this: kotlin.text.CharDirectionality$Companion$directionalityMap$2;

        $r1 = virtualinvoke $r0.<kotlin.text.CharDirectionality$Companion$directionalityMap$2: java.util.Map invoke()>();

        return $r1;
    }

    public final java.util.Map invoke()
    {
        kotlin.text.CharDirectionality$Companion$directionalityMap$2 $r0;
        kotlin.text.CharDirectionality $r1;
        kotlin.text.CharDirectionality[] $r2;
        int $i0, $i1, $i2;
        java.util.LinkedHashMap $r3, r5;
        java.lang.Integer $r4;
        java.util.Map r6;

        $r0 := @this: kotlin.text.CharDirectionality$Companion$directionalityMap$2;

        $r2 = staticinvoke <kotlin.text.CharDirectionality: kotlin.text.CharDirectionality[] values()>();

        $i0 = lengthof $r2;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        r5 = new java.util.LinkedHashMap;

        $r3 = r5;

        specialinvoke r5.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r1 = $r2[$i1];

        $i2 = virtualinvoke $r1.<kotlin.text.CharDirectionality: int getValue()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        r6 = (java.util.Map) $r3;

        interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r1);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r6 = (java.util.Map) $r3;

        return r6;
    }

kotlin.text.CharDirectionality$Companion
    private void <init>()
    {
        kotlin.text.CharDirectionality$Companion $r0;

        $r0 := @this: kotlin.text.CharDirectionality$Companion;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        kotlin.text.CharDirectionality$Companion $r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        $r0 := @this: kotlin.text.CharDirectionality$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke $r0.<kotlin.text.CharDirectionality$Companion: void <init>()>();

        return;
    }

    private final java.util.Map getDirectionalityMap()
    {
        kotlin.text.CharDirectionality$Companion $r0;
        kotlin.Lazy $r1;
        java.lang.Object $r2;
        java.util.Map $r3;

        $r0 := @this: kotlin.text.CharDirectionality$Companion;

        $r1 = staticinvoke <kotlin.text.CharDirectionality: kotlin.Lazy access$getDirectionalityMap$delegate$cp()>();

        $r2 = interfaceinvoke $r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.util.Map) $r2;

        return $r3;
    }

    public final kotlin.text.CharDirectionality valueOf(int)
    {
        kotlin.text.CharDirectionality$Companion $r0;
        int $i0;
        java.util.Map $r1;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        kotlin.text.CharDirectionality $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;

        $r0 := @this: kotlin.text.CharDirectionality$Companion;

        $i0 := @parameter0: int;

        $r1 = specialinvoke $r0.<kotlin.text.CharDirectionality$Companion: java.util.Map getDirectionalityMap()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (kotlin.text.CharDirectionality) $r3;

        if $r4 == null goto label1;

        return $r4;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Directionality #");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not defined.");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r5;
    }

