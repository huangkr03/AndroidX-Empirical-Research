androidx.webkit.WebViewClientCompat
<androidx.webkit.WebViewClientCompat: java.lang.String[] sSupportedFeatures>
    public void <init>()
    {
        androidx.webkit.WebViewClientCompat r0;

        r0 := @this: androidx.webkit.WebViewClientCompat;

        specialinvoke r0.<android.webkit.WebViewClient: void <init>()>();

        return;
    }

    public final java.lang.String[] getSupportedFeatures()
    {
        androidx.webkit.WebViewClientCompat r0;
        java.lang.String[] $r1;

        r0 := @this: androidx.webkit.WebViewClientCompat;

        $r1 = <androidx.webkit.WebViewClientCompat: java.lang.String[] sSupportedFeatures>;

        return $r1;
    }

    public void onPageCommitVisible(android.webkit.WebView, java.lang.String)
    {
        androidx.webkit.WebViewClientCompat r0;
        android.webkit.WebView r1;
        java.lang.String r2;

        r0 := @this: androidx.webkit.WebViewClientCompat;

        r1 := @parameter0: android.webkit.WebView;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public final void onReceivedError(android.webkit.WebView, android.webkit.WebResourceRequest, java.lang.reflect.InvocationHandler)
    {
        androidx.webkit.WebViewClientCompat r0;
        android.webkit.WebView r1;
        android.webkit.WebResourceRequest r2;
        java.lang.reflect.InvocationHandler r3;
        androidx.webkit.internal.WebResourceErrorImpl $r4;

        r0 := @this: androidx.webkit.WebViewClientCompat;

        r1 := @parameter0: android.webkit.WebView;

        r2 := @parameter1: android.webkit.WebResourceRequest;

        r3 := @parameter2: java.lang.reflect.InvocationHandler;

        $r4 = new androidx.webkit.internal.WebResourceErrorImpl;

        specialinvoke $r4.<androidx.webkit.internal.WebResourceErrorImpl: void <init>(java.lang.reflect.InvocationHandler)>(r3);

        virtualinvoke r0.<androidx.webkit.WebViewClientCompat: void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,androidx.webkit.WebResourceErrorCompat)>(r1, r2, $r4);

        return;
    }

    public final void onReceivedError(android.webkit.WebView, android.webkit.WebResourceRequest, android.webkit.WebResourceError)
    {
        androidx.webkit.WebViewClientCompat r0;
        android.webkit.WebView r1;
        android.webkit.WebResourceRequest r2;
        android.webkit.WebResourceError r3;
        int $i0;
        androidx.webkit.internal.WebResourceErrorImpl $r4;

        r0 := @this: androidx.webkit.WebViewClientCompat;

        r1 := @parameter0: android.webkit.WebView;

        r2 := @parameter1: android.webkit.WebResourceRequest;

        r3 := @parameter2: android.webkit.WebResourceError;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 23 goto label1;

        return;

     label1:
        $r4 = new androidx.webkit.internal.WebResourceErrorImpl;

        specialinvoke $r4.<androidx.webkit.internal.WebResourceErrorImpl: void <init>(android.webkit.WebResourceError)>(r3);

        virtualinvoke r0.<androidx.webkit.WebViewClientCompat: void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,androidx.webkit.WebResourceErrorCompat)>(r1, r2, $r4);

        return;
    }

    public void onReceivedError(android.webkit.WebView, android.webkit.WebResourceRequest, androidx.webkit.WebResourceErrorCompat)
    {
        androidx.webkit.WebViewClientCompat r0;
        android.webkit.WebView r1;
        android.webkit.WebResourceRequest r2;
        androidx.webkit.WebResourceErrorCompat r3;
        int $i0, $i1;
        boolean $z0, $z1, $z2;
        java.lang.CharSequence $r4;
        java.lang.String $r5, $r7;
        android.net.Uri $r6;

        r0 := @this: androidx.webkit.WebViewClientCompat;

        r1 := @parameter0: android.webkit.WebView;

        r2 := @parameter1: android.webkit.WebResourceRequest;

        r3 := @parameter2: androidx.webkit.WebResourceErrorCompat;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 21 goto label1;

        return;

     label1:
        $z0 = staticinvoke <androidx.webkit.WebViewFeature: boolean isFeatureSupported(java.lang.String)>("WEB_RESOURCE_ERROR_GET_CODE");

        if $z0 == 0 goto label2;

        $z1 = staticinvoke <androidx.webkit.WebViewFeature: boolean isFeatureSupported(java.lang.String)>("WEB_RESOURCE_ERROR_GET_DESCRIPTION");

        if $z1 != 0 goto label3;

     label2:
        return;

     label3:
        $z2 = interfaceinvoke r2.<android.webkit.WebResourceRequest: boolean isForMainFrame()>();

        if $z2 == 0 goto label4;

        $i1 = virtualinvoke r3.<androidx.webkit.WebResourceErrorCompat: int getErrorCode()>();

        $r4 = virtualinvoke r3.<androidx.webkit.WebResourceErrorCompat: java.lang.CharSequence getDescription()>();

        $r5 = interfaceinvoke $r4.<java.lang.CharSequence: java.lang.String toString()>();

        $r6 = interfaceinvoke r2.<android.webkit.WebResourceRequest: android.net.Uri getUrl()>();

        $r7 = virtualinvoke $r6.<android.net.Uri: java.lang.String toString()>();

        virtualinvoke r0.<androidx.webkit.WebViewClientCompat: void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String)>(r1, $i1, $r5, $r7);

     label4:
        return;
    }

    public void onReceivedHttpError(android.webkit.WebView, android.webkit.WebResourceRequest, android.webkit.WebResourceResponse)
    {
        androidx.webkit.WebViewClientCompat r0;
        android.webkit.WebView r1;
        android.webkit.WebResourceRequest r2;
        android.webkit.WebResourceResponse r3;

        r0 := @this: androidx.webkit.WebViewClientCompat;

        r1 := @parameter0: android.webkit.WebView;

        r2 := @parameter1: android.webkit.WebResourceRequest;

        r3 := @parameter2: android.webkit.WebResourceResponse;

        return;
    }

    public final void onSafeBrowsingHit(android.webkit.WebView, android.webkit.WebResourceRequest, int, java.lang.reflect.InvocationHandler)
    {
        androidx.webkit.WebViewClientCompat r0;
        android.webkit.WebView r1;
        android.webkit.WebResourceRequest r2;
        int i0;
        java.lang.reflect.InvocationHandler r3;
        androidx.webkit.internal.SafeBrowsingResponseImpl $r4;

        r0 := @this: androidx.webkit.WebViewClientCompat;

        r1 := @parameter0: android.webkit.WebView;

        r2 := @parameter1: android.webkit.WebResourceRequest;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.reflect.InvocationHandler;

        $r4 = new androidx.webkit.internal.SafeBrowsingResponseImpl;

        specialinvoke $r4.<androidx.webkit.internal.SafeBrowsingResponseImpl: void <init>(java.lang.reflect.InvocationHandler)>(r3);

        virtualinvoke r0.<androidx.webkit.WebViewClientCompat: void onSafeBrowsingHit(android.webkit.WebView,android.webkit.WebResourceRequest,int,androidx.webkit.SafeBrowsingResponseCompat)>(r1, r2, i0, $r4);

        return;
    }

    public final void onSafeBrowsingHit(android.webkit.WebView, android.webkit.WebResourceRequest, int, android.webkit.SafeBrowsingResponse)
    {
        androidx.webkit.WebViewClientCompat r0;
        android.webkit.WebView r1;
        android.webkit.WebResourceRequest r2;
        int i0;
        android.webkit.SafeBrowsingResponse r3;
        androidx.webkit.internal.SafeBrowsingResponseImpl $r4;

        r0 := @this: androidx.webkit.WebViewClientCompat;

        r1 := @parameter0: android.webkit.WebView;

        r2 := @parameter1: android.webkit.WebResourceRequest;

        i0 := @parameter2: int;

        r3 := @parameter3: android.webkit.SafeBrowsingResponse;

        $r4 = new androidx.webkit.internal.SafeBrowsingResponseImpl;

        specialinvoke $r4.<androidx.webkit.internal.SafeBrowsingResponseImpl: void <init>(android.webkit.SafeBrowsingResponse)>(r3);

        virtualinvoke r0.<androidx.webkit.WebViewClientCompat: void onSafeBrowsingHit(android.webkit.WebView,android.webkit.WebResourceRequest,int,androidx.webkit.SafeBrowsingResponseCompat)>(r1, r2, i0, $r4);

        return;
    }

    public void onSafeBrowsingHit(android.webkit.WebView, android.webkit.WebResourceRequest, int, androidx.webkit.SafeBrowsingResponseCompat)
    {
        androidx.webkit.WebViewClientCompat r0;
        android.webkit.WebView r1;
        android.webkit.WebResourceRequest r2;
        int i0;
        androidx.webkit.SafeBrowsingResponseCompat r3;
        boolean $z0;
        java.lang.UnsupportedOperationException $r4;

        r0 := @this: androidx.webkit.WebViewClientCompat;

        r1 := @parameter0: android.webkit.WebView;

        r2 := @parameter1: android.webkit.WebResourceRequest;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.webkit.SafeBrowsingResponseCompat;

        $z0 = staticinvoke <androidx.webkit.WebViewFeature: boolean isFeatureSupported(java.lang.String)>("SAFE_BROWSING_RESPONSE_SHOW_INTERSTITIAL");

        if $z0 == 0 goto label1;

        virtualinvoke r3.<androidx.webkit.SafeBrowsingResponseCompat: void showInterstitial(boolean)>(1);

        goto label2;

     label1:
        $r4 = staticinvoke <androidx.webkit.internal.WebViewFeatureInternal: java.lang.UnsupportedOperationException getUnsupportedOperationException()>();

        throw $r4;

     label2:
        return;
    }

    public boolean shouldOverrideUrlLoading(android.webkit.WebView, android.webkit.WebResourceRequest)
    {
        androidx.webkit.WebViewClientCompat r0;
        android.webkit.WebView r1;
        android.webkit.WebResourceRequest r2;
        int $i0;
        android.net.Uri $r3;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: androidx.webkit.WebViewClientCompat;

        r1 := @parameter0: android.webkit.WebView;

        r2 := @parameter1: android.webkit.WebResourceRequest;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 21 goto label1;

        return 0;

     label1:
        $r3 = interfaceinvoke r2.<android.webkit.WebResourceRequest: android.net.Uri getUrl()>();

        $r4 = virtualinvoke $r3.<android.net.Uri: java.lang.String toString()>();

        $z0 = virtualinvoke r0.<androidx.webkit.WebViewClientCompat: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)>(r1, $r4);

        return $z0;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[5];

        $r0[0] = "VISUAL_STATE_CALLBACK";

        $r0[1] = "RECEIVE_WEB_RESOURCE_ERROR";

        $r0[2] = "RECEIVE_HTTP_ERROR";

        $r0[3] = "SHOULD_OVERRIDE_WITH_REDIRECTS";

        $r0[4] = "SAFE_BROWSING_HIT";

        <androidx.webkit.WebViewClientCompat: java.lang.String[] sSupportedFeatures> = $r0;

        return;
    }

