androidx.room.compiler.processing.ksp.KspAnnotationValueKt
    public static final java.lang.Object unwrap(androidx.room.compiler.processing.ksp.KspAnnotation, androidx.room.compiler.processing.XType, com.google.devtools.ksp.symbol.KSValueArgument)
    {
        androidx.room.compiler.processing.ksp.KspAnnotation $r0;
        androidx.room.compiler.processing.XType r1, $r15;
        com.google.devtools.ksp.symbol.KSValueArgument r2;
        java.lang.Object r3, r7, r8, $r10, $r19;
        java.lang.Iterable $r4;
        java.util.Collection r5, r9;
        java.util.Iterator r6;
        boolean $z4, $z5, $z7;
        java.util.ArrayList $r11;
        int $i0;
        androidx.room.compiler.processing.ksp.KspAnnotationValue $r12;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r13;
        androidx.room.compiler.processing.XArrayType $r14;
        androidx.room.compiler.processing.ksp.KspAnnotationValueKt$unwrap$1$1$1 $r16;
        kotlin.jvm.functions.Function0 $r17;
        java.util.List $r18;

        $r0 := @parameter0: androidx.room.compiler.processing.ksp.KspAnnotation;

        r1 := @parameter1: androidx.room.compiler.processing.XType;

        r2 := @parameter2: com.google.devtools.ksp.symbol.KSValueArgument;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "valueType");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "valueArgument");

        $r10 = interfaceinvoke r2.<com.google.devtools.ksp.symbol.KSValueArgument: java.lang.Object getValue()>();

        r3 = staticinvoke <androidx.room.compiler.processing.ksp.KspAnnotationValueKt: java.lang.Object unwrap$unwrap(androidx.room.compiler.processing.ksp.KspAnnotation,java.lang.Object)>($r0, $r10);

        $z4 = staticinvoke <androidx.room.compiler.processing.XTypeKt: boolean isArray(androidx.room.compiler.processing.XType)>(r1);

        if $z4 == 0 goto label5;

        $z5 = r3 instanceof java.util.List;

        if $z5 != 0 goto label1;

        $r18 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>(r3);

        goto label2;

     label1:
        $r18 = (java.util.List) r3;

     label2:
        $r4 = (java.lang.Iterable) $r18;

        $r11 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r4, 10);

        specialinvoke $r11.<java.util.ArrayList: void <init>(int)>($i0);

        r5 = (java.util.Collection) $r11;

        r6 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

     label3:
        $z7 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label4;

        r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = r7;

        r9 = r5;

        $r12 = new androidx.room.compiler.processing.ksp.KspAnnotationValue;

        $r13 = virtualinvoke $r0.<androidx.room.compiler.processing.ksp.KspAnnotation: androidx.room.compiler.processing.ksp.KspProcessingEnv getEnv()>();

        $r14 = (androidx.room.compiler.processing.XArrayType) r1;

        $r15 = interfaceinvoke $r14.<androidx.room.compiler.processing.XArrayType: androidx.room.compiler.processing.XType getComponentType()>();

        $r16 = new androidx.room.compiler.processing.ksp.KspAnnotationValueKt$unwrap$1$1$1;

        specialinvoke $r16.<androidx.room.compiler.processing.ksp.KspAnnotationValueKt$unwrap$1$1$1: void <init>(java.lang.Object)>(r8);

        $r17 = (kotlin.jvm.functions.Function0) $r16;

        specialinvoke $r12.<androidx.room.compiler.processing.ksp.KspAnnotationValue: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,androidx.room.compiler.processing.ksp.KspAnnotation,androidx.room.compiler.processing.XType,com.google.devtools.ksp.symbol.KSValueArgument,kotlin.jvm.functions.Function0)>($r13, $r0, $r15, r2, $r17);

        interfaceinvoke r9.<java.util.Collection: boolean add(java.lang.Object)>($r12);

        goto label3;

     label4:
        $r19 = (java.util.List) r5;

        goto label6;

     label5:
        $r19 = r3;

     label6:
        return $r19;
    }

    private static final java.lang.Object unwrap$unwrap(androidx.room.compiler.processing.ksp.KspAnnotation, java.lang.Object)
    {
        androidx.room.compiler.processing.ksp.KspAnnotation $r0, $r39;
        java.lang.Object r1, r2, $r38, $r54, r58, r59, r64, $r66;
        java.util.Collection r3, r56;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z8;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r4, $r16, $r40, $r43, $r50;
        com.google.devtools.ksp.processing.Resolver $r5;
        java.lang.Class $r6;
        java.lang.String $r7, $r24, $r25, $r27, $r29, $r35, $r36;
        com.google.devtools.ksp.symbol.KSClassDeclaration $r8, $r14, $r46, $r51, r60, r65;
        androidx.room.compiler.processing.ksp.KspAnnotationValueKt$unwrap$unwrap$$inlined$filterIsInstance$1 $r9;
        kotlin.jvm.functions.Function1 $r10, $r13;
        kotlin.sequences.Sequence $r11, r61, r62;
        androidx.room.compiler.processing.ksp.KspAnnotationValueKt$unwrap$unwrap$valueDeclaration$1 $r12;
        androidx.room.compiler.processing.ksp.KspEnumEntry$Companion $r15, $r49;
        java.lang.IllegalStateException $r17, $r30;
        java.lang.StringBuilder $r18, $r19, $r20, $r21, $r22, $r23, $r31, $r32, $r33, $r34;
        com.google.devtools.ksp.symbol.KSName $r26;
        java.lang.Enum $r28;
        java.util.ArrayList $r37;
        int $i0;
        com.google.devtools.ksp.symbol.KSAnnotation $r41;
        com.google.devtools.ksp.symbol.KSType $r42, $r44;
        androidx.room.compiler.processing.ksp.KspType $r45;
        com.google.devtools.ksp.symbol.ClassKind $r47, $r48;
        androidx.room.compiler.processing.ksp.KspEnumEntry $r52;
        com.google.devtools.ksp.symbol.KSDeclaration r53;
        java.lang.Iterable r55;
        java.util.Iterator r57, r63;

        $r0 := @parameter0: androidx.room.compiler.processing.ksp.KspAnnotation;

        r1 := @parameter1: java.lang.Object;

        r2 = r1;

        $z0 = r2 instanceof com.google.devtools.ksp.symbol.KSType;

        if $z0 == 0 goto label02;

        $r42 = (com.google.devtools.ksp.symbol.KSType) r1;

        r53 = interfaceinvoke $r42.<com.google.devtools.ksp.symbol.KSType: com.google.devtools.ksp.symbol.KSDeclaration getDeclaration()>();

        $z8 = r53 instanceof com.google.devtools.ksp.symbol.KSClassDeclaration;

        if $z8 == 0 goto label01;

        $r46 = (com.google.devtools.ksp.symbol.KSClassDeclaration) r53;

        $r47 = interfaceinvoke $r46.<com.google.devtools.ksp.symbol.KSClassDeclaration: com.google.devtools.ksp.symbol.ClassKind getClassKind()>();

        $r48 = <com.google.devtools.ksp.symbol.ClassKind: com.google.devtools.ksp.symbol.ClassKind ENUM_ENTRY>;

        if $r47 != $r48 goto label01;

        $r49 = <androidx.room.compiler.processing.ksp.KspEnumEntry: androidx.room.compiler.processing.ksp.KspEnumEntry$Companion Companion>;

        $r50 = virtualinvoke $r0.<androidx.room.compiler.processing.ksp.KspAnnotation: androidx.room.compiler.processing.ksp.KspProcessingEnv getEnv()>();

        $r51 = (com.google.devtools.ksp.symbol.KSClassDeclaration) r53;

        $r52 = virtualinvoke $r49.<androidx.room.compiler.processing.ksp.KspEnumEntry$Companion: androidx.room.compiler.processing.ksp.KspEnumEntry create(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSClassDeclaration)>($r50, $r51);

        $r54 = (androidx.room.compiler.processing.XEquality) $r52;

        goto label13;

     label01:
        $r43 = virtualinvoke $r0.<androidx.room.compiler.processing.ksp.KspAnnotation: androidx.room.compiler.processing.ksp.KspProcessingEnv getEnv()>();

        $r44 = (com.google.devtools.ksp.symbol.KSType) r1;

        $r45 = virtualinvoke $r43.<androidx.room.compiler.processing.ksp.KspProcessingEnv: androidx.room.compiler.processing.ksp.KspType wrap(com.google.devtools.ksp.symbol.KSType,boolean)>($r44, 1);

        $r54 = (androidx.room.compiler.processing.XEquality) $r45;

        goto label13;

     label02:
        $z1 = r2 instanceof com.google.devtools.ksp.symbol.KSAnnotation;

        if $z1 == 0 goto label03;

        $r39 = new androidx.room.compiler.processing.ksp.KspAnnotation;

        $r54 = $r39;

        $r40 = virtualinvoke $r0.<androidx.room.compiler.processing.ksp.KspAnnotation: androidx.room.compiler.processing.ksp.KspProcessingEnv getEnv()>();

        $r41 = (com.google.devtools.ksp.symbol.KSAnnotation) r1;

        specialinvoke $r39.<androidx.room.compiler.processing.ksp.KspAnnotation: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSAnnotation)>($r40, $r41);

        goto label13;

     label03:
        $z2 = r2 instanceof java.util.List;

        if $z2 == 0 goto label06;

        r55 = (java.lang.Iterable) r1;

        $r37 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>(r55, 10);

        specialinvoke $r37.<java.util.ArrayList: void <init>(int)>($i0);

        r56 = (java.util.Collection) $r37;

        r57 = interfaceinvoke r55.<java.lang.Iterable: java.util.Iterator iterator()>();

     label04:
        $z6 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label05;

        r58 = interfaceinvoke r57.<java.util.Iterator: java.lang.Object next()>();

        r59 = r58;

        r3 = r56;

        $r38 = staticinvoke <androidx.room.compiler.processing.ksp.KspAnnotationValueKt: java.lang.Object unwrap$unwrap(androidx.room.compiler.processing.ksp.KspAnnotation,java.lang.Object)>($r0, r59);

        interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>($r38);

        goto label04;

     label05:
        $r54 = (java.util.List) r56;

        goto label13;

     label06:
        $z3 = r2 instanceof java.lang.Enum;

        if $z3 == 0 goto label12;

        $r4 = virtualinvoke $r0.<androidx.room.compiler.processing.ksp.KspAnnotation: androidx.room.compiler.processing.ksp.KspProcessingEnv getEnv()>();

        $r5 = virtualinvoke $r4.<androidx.room.compiler.processing.ksp.KspProcessingEnv: com.google.devtools.ksp.processing.Resolver getResolver()>();

        $r6 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getCanonicalName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r7, "value::class.java.canonicalName");

        $r8 = staticinvoke <com.google.devtools.ksp.UtilsKt: com.google.devtools.ksp.symbol.KSClassDeclaration getClassDeclarationByName(com.google.devtools.ksp.processing.Resolver,java.lang.String)>($r5, $r7);

        if $r8 != null goto label07;

        $r30 = new java.lang.IllegalStateException;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find KSClassDeclaration for Enum \'");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        $r36 = virtualinvoke $r35.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r30.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r36);

        throw $r30;

     label07:
        r60 = $r8;

        r61 = interfaceinvoke r60.<com.google.devtools.ksp.symbol.KSClassDeclaration: kotlin.sequences.Sequence getDeclarations()>();

        $r9 = <androidx.room.compiler.processing.ksp.KspAnnotationValueKt$unwrap$unwrap$$inlined$filterIsInstance$1: androidx.room.compiler.processing.ksp.KspAnnotationValueKt$unwrap$unwrap$$inlined$filterIsInstance$1 INSTANCE>;

        $r10 = (kotlin.jvm.functions.Function1) $r9;

        $r11 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence filter(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>(r61, $r10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r11, "null cannot be cast to non-null type kotlin.sequences.Sequence<R of kotlin.sequences.SequencesKt___SequencesKt.filterIsInstance>");

        $r12 = <androidx.room.compiler.processing.ksp.KspAnnotationValueKt$unwrap$unwrap$valueDeclaration$1: androidx.room.compiler.processing.ksp.KspAnnotationValueKt$unwrap$unwrap$valueDeclaration$1 INSTANCE>;

        $r13 = (kotlin.jvm.functions.Function1) $r12;

        r62 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence filter(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>($r11, $r13);

        r63 = interfaceinvoke r62.<kotlin.sequences.Sequence: java.util.Iterator iterator()>();

     label08:
        $z4 = interfaceinvoke r63.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label09;

        r64 = interfaceinvoke r63.<java.util.Iterator: java.lang.Object next()>();

        r65 = (com.google.devtools.ksp.symbol.KSClassDeclaration) r64;

        $r26 = interfaceinvoke r65.<com.google.devtools.ksp.symbol.KSClassDeclaration: com.google.devtools.ksp.symbol.KSName getSimpleName()>();

        $r27 = interfaceinvoke $r26.<com.google.devtools.ksp.symbol.KSName: java.lang.String getShortName()>();

        $r28 = (java.lang.Enum) r1;

        $r29 = virtualinvoke $r28.<java.lang.Enum: java.lang.String name()>();

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r27, $r29);

        if $z5 == 0 goto label08;

        $r66 = r64;

        goto label10;

     label09:
        $r66 = null;

     label10:
        $r14 = (com.google.devtools.ksp.symbol.KSClassDeclaration) $r66;

        if $r14 != null goto label11;

        $r17 = new java.lang.IllegalStateException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find ENUM_ENTRY \'");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' in \'");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r60);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = virtualinvoke $r24.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r25);

        throw $r17;

     label11:
        $r15 = <androidx.room.compiler.processing.ksp.KspEnumEntry: androidx.room.compiler.processing.ksp.KspEnumEntry$Companion Companion>;

        $r16 = virtualinvoke $r0.<androidx.room.compiler.processing.ksp.KspAnnotation: androidx.room.compiler.processing.ksp.KspProcessingEnv getEnv()>();

        $r54 = virtualinvoke $r15.<androidx.room.compiler.processing.ksp.KspEnumEntry$Companion: androidx.room.compiler.processing.ksp.KspEnumEntry create(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSClassDeclaration)>($r16, $r14);

        goto label13;

     label12:
        $r54 = r1;

     label13:
        return $r54;
    }

