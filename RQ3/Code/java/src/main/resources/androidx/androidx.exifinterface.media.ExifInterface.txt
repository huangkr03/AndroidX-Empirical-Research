androidx.exifinterface.media.ExifInterface
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG>
<androidx.exifinterface.media.ExifInterface: boolean DEBUG>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_IMAGE_WIDTH>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_IMAGE_LENGTH>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_BITS_PER_SAMPLE>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_COMPRESSION>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_PHOTOMETRIC_INTERPRETATION>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_ORIENTATION>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SAMPLES_PER_PIXEL>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_PLANAR_CONFIGURATION>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_Y_CB_CR_SUB_SAMPLING>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_Y_CB_CR_POSITIONING>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_X_RESOLUTION>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_Y_RESOLUTION>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_RESOLUTION_UNIT>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_STRIP_OFFSETS>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_ROWS_PER_STRIP>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_STRIP_BYTE_COUNTS>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_JPEG_INTERCHANGE_FORMAT>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_JPEG_INTERCHANGE_FORMAT_LENGTH>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_TRANSFER_FUNCTION>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_WHITE_POINT>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_PRIMARY_CHROMATICITIES>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_Y_CB_CR_COEFFICIENTS>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_REFERENCE_BLACK_WHITE>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_DATETIME>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_IMAGE_DESCRIPTION>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_MAKE>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_MODEL>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SOFTWARE>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_ARTIST>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_COPYRIGHT>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_EXIF_VERSION>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_FLASHPIX_VERSION>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_COLOR_SPACE>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GAMMA>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_PIXEL_X_DIMENSION>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_PIXEL_Y_DIMENSION>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_COMPONENTS_CONFIGURATION>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_COMPRESSED_BITS_PER_PIXEL>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_MAKER_NOTE>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_USER_COMMENT>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_RELATED_SOUND_FILE>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_DATETIME_ORIGINAL>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_DATETIME_DIGITIZED>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_OFFSET_TIME>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_OFFSET_TIME_ORIGINAL>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_OFFSET_TIME_DIGITIZED>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SUBSEC_TIME>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SUBSEC_TIME_ORIGINAL>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SUBSEC_TIME_DIGITIZED>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_EXPOSURE_TIME>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_F_NUMBER>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_EXPOSURE_PROGRAM>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SPECTRAL_SENSITIVITY>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_ISO_SPEED_RATINGS>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_PHOTOGRAPHIC_SENSITIVITY>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_OECF>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SENSITIVITY_TYPE>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_STANDARD_OUTPUT_SENSITIVITY>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_RECOMMENDED_EXPOSURE_INDEX>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_ISO_SPEED>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_ISO_SPEED_LATITUDE_YYY>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_ISO_SPEED_LATITUDE_ZZZ>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SHUTTER_SPEED_VALUE>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_APERTURE_VALUE>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_BRIGHTNESS_VALUE>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_EXPOSURE_BIAS_VALUE>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_MAX_APERTURE_VALUE>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SUBJECT_DISTANCE>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_METERING_MODE>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_LIGHT_SOURCE>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_FLASH>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SUBJECT_AREA>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_FOCAL_LENGTH>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_FLASH_ENERGY>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SPATIAL_FREQUENCY_RESPONSE>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_FOCAL_PLANE_X_RESOLUTION>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_FOCAL_PLANE_Y_RESOLUTION>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_FOCAL_PLANE_RESOLUTION_UNIT>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SUBJECT_LOCATION>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_EXPOSURE_INDEX>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SENSING_METHOD>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_FILE_SOURCE>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SCENE_TYPE>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_CFA_PATTERN>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_CUSTOM_RENDERED>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_EXPOSURE_MODE>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_WHITE_BALANCE>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_DIGITAL_ZOOM_RATIO>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_FOCAL_LENGTH_IN_35MM_FILM>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SCENE_CAPTURE_TYPE>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GAIN_CONTROL>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_CONTRAST>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SATURATION>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SHARPNESS>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_DEVICE_SETTING_DESCRIPTION>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SUBJECT_DISTANCE_RANGE>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_IMAGE_UNIQUE_ID>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_CAMARA_OWNER_NAME>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_CAMERA_OWNER_NAME>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_BODY_SERIAL_NUMBER>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_LENS_SPECIFICATION>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_LENS_MAKE>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_LENS_MODEL>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_LENS_SERIAL_NUMBER>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_VERSION_ID>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_LATITUDE_REF>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_LATITUDE>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_LONGITUDE_REF>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_LONGITUDE>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_ALTITUDE_REF>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_ALTITUDE>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_TIMESTAMP>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_SATELLITES>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_STATUS>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_MEASURE_MODE>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_DOP>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_SPEED_REF>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_SPEED>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_TRACK_REF>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_TRACK>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_IMG_DIRECTION_REF>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_IMG_DIRECTION>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_MAP_DATUM>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_DEST_LATITUDE_REF>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_DEST_LATITUDE>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_DEST_LONGITUDE_REF>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_DEST_LONGITUDE>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_DEST_BEARING_REF>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_DEST_BEARING>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_DEST_DISTANCE_REF>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_DEST_DISTANCE>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_PROCESSING_METHOD>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_AREA_INFORMATION>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_DATESTAMP>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_DIFFERENTIAL>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_H_POSITIONING_ERROR>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_INTEROPERABILITY_INDEX>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_THUMBNAIL_IMAGE_LENGTH>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_THUMBNAIL_IMAGE_WIDTH>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_THUMBNAIL_ORIENTATION>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_DNG_VERSION>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_DEFAULT_CROP_SIZE>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_ORF_THUMBNAIL_IMAGE>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_ORF_PREVIEW_IMAGE_START>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_ORF_PREVIEW_IMAGE_LENGTH>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_ORF_ASPECT_FRAME>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_RW2_SENSOR_BOTTOM_BORDER>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_RW2_SENSOR_LEFT_BORDER>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_RW2_SENSOR_RIGHT_BORDER>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_RW2_SENSOR_TOP_BORDER>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_RW2_ISO>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_RW2_JPG_FROM_RAW>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_XMP>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_NEW_SUBFILE_TYPE>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SUBFILE_TYPE>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_EXIF_IFD_POINTER>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_INFO_IFD_POINTER>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_INTEROPERABILITY_IFD_POINTER>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SUB_IFD_POINTER>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_ORF_CAMERA_SETTINGS_IFD_POINTER>
<androidx.exifinterface.media.ExifInterface: java.lang.String TAG_ORF_IMAGE_PROCESSING_IFD_POINTER>
<androidx.exifinterface.media.ExifInterface: int MAX_THUMBNAIL_SIZE>
<androidx.exifinterface.media.ExifInterface: int ORIENTATION_UNDEFINED>
<androidx.exifinterface.media.ExifInterface: int ORIENTATION_NORMAL>
<androidx.exifinterface.media.ExifInterface: int ORIENTATION_FLIP_HORIZONTAL>
<androidx.exifinterface.media.ExifInterface: int ORIENTATION_ROTATE_180>
<androidx.exifinterface.media.ExifInterface: int ORIENTATION_FLIP_VERTICAL>
<androidx.exifinterface.media.ExifInterface: int ORIENTATION_TRANSPOSE>
<androidx.exifinterface.media.ExifInterface: int ORIENTATION_ROTATE_90>
<androidx.exifinterface.media.ExifInterface: int ORIENTATION_TRANSVERSE>
<androidx.exifinterface.media.ExifInterface: int ORIENTATION_ROTATE_270>
<androidx.exifinterface.media.ExifInterface: java.util.List ROTATION_ORDER>
<androidx.exifinterface.media.ExifInterface: java.util.List FLIPPED_ROTATION_ORDER>
<androidx.exifinterface.media.ExifInterface: short FORMAT_CHUNKY>
<androidx.exifinterface.media.ExifInterface: short FORMAT_PLANAR>
<androidx.exifinterface.media.ExifInterface: short Y_CB_CR_POSITIONING_CENTERED>
<androidx.exifinterface.media.ExifInterface: short Y_CB_CR_POSITIONING_CO_SITED>
<androidx.exifinterface.media.ExifInterface: short RESOLUTION_UNIT_INCHES>
<androidx.exifinterface.media.ExifInterface: short RESOLUTION_UNIT_CENTIMETERS>
<androidx.exifinterface.media.ExifInterface: int COLOR_SPACE_S_RGB>
<androidx.exifinterface.media.ExifInterface: int COLOR_SPACE_UNCALIBRATED>
<androidx.exifinterface.media.ExifInterface: short EXPOSURE_PROGRAM_NOT_DEFINED>
<androidx.exifinterface.media.ExifInterface: short EXPOSURE_PROGRAM_MANUAL>
<androidx.exifinterface.media.ExifInterface: short EXPOSURE_PROGRAM_NORMAL>
<androidx.exifinterface.media.ExifInterface: short EXPOSURE_PROGRAM_APERTURE_PRIORITY>
<androidx.exifinterface.media.ExifInterface: short EXPOSURE_PROGRAM_SHUTTER_PRIORITY>
<androidx.exifinterface.media.ExifInterface: short EXPOSURE_PROGRAM_CREATIVE>
<androidx.exifinterface.media.ExifInterface: short EXPOSURE_PROGRAM_ACTION>
<androidx.exifinterface.media.ExifInterface: short EXPOSURE_PROGRAM_PORTRAIT_MODE>
<androidx.exifinterface.media.ExifInterface: short EXPOSURE_PROGRAM_LANDSCAPE_MODE>
<androidx.exifinterface.media.ExifInterface: short SENSITIVITY_TYPE_UNKNOWN>
<androidx.exifinterface.media.ExifInterface: short SENSITIVITY_TYPE_SOS>
<androidx.exifinterface.media.ExifInterface: short SENSITIVITY_TYPE_REI>
<androidx.exifinterface.media.ExifInterface: short SENSITIVITY_TYPE_ISO_SPEED>
<androidx.exifinterface.media.ExifInterface: short SENSITIVITY_TYPE_SOS_AND_REI>
<androidx.exifinterface.media.ExifInterface: short SENSITIVITY_TYPE_SOS_AND_ISO>
<androidx.exifinterface.media.ExifInterface: short SENSITIVITY_TYPE_REI_AND_ISO>
<androidx.exifinterface.media.ExifInterface: short SENSITIVITY_TYPE_SOS_AND_REI_AND_ISO>
<androidx.exifinterface.media.ExifInterface: short METERING_MODE_UNKNOWN>
<androidx.exifinterface.media.ExifInterface: short METERING_MODE_AVERAGE>
<androidx.exifinterface.media.ExifInterface: short METERING_MODE_CENTER_WEIGHT_AVERAGE>
<androidx.exifinterface.media.ExifInterface: short METERING_MODE_SPOT>
<androidx.exifinterface.media.ExifInterface: short METERING_MODE_MULTI_SPOT>
<androidx.exifinterface.media.ExifInterface: short METERING_MODE_PATTERN>
<androidx.exifinterface.media.ExifInterface: short METERING_MODE_PARTIAL>
<androidx.exifinterface.media.ExifInterface: short METERING_MODE_OTHER>
<androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_UNKNOWN>
<androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_DAYLIGHT>
<androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_FLUORESCENT>
<androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_TUNGSTEN>
<androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_FLASH>
<androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_FINE_WEATHER>
<androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_CLOUDY_WEATHER>
<androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_SHADE>
<androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_DAYLIGHT_FLUORESCENT>
<androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_DAY_WHITE_FLUORESCENT>
<androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_COOL_WHITE_FLUORESCENT>
<androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_WHITE_FLUORESCENT>
<androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_WARM_WHITE_FLUORESCENT>
<androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_STANDARD_LIGHT_A>
<androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_STANDARD_LIGHT_B>
<androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_STANDARD_LIGHT_C>
<androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_D55>
<androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_D65>
<androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_D75>
<androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_D50>
<androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_ISO_STUDIO_TUNGSTEN>
<androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_OTHER>
<androidx.exifinterface.media.ExifInterface: short FLAG_FLASH_FIRED>
<androidx.exifinterface.media.ExifInterface: short FLAG_FLASH_RETURN_LIGHT_NOT_DETECTED>
<androidx.exifinterface.media.ExifInterface: short FLAG_FLASH_RETURN_LIGHT_DETECTED>
<androidx.exifinterface.media.ExifInterface: short FLAG_FLASH_MODE_COMPULSORY_FIRING>
<androidx.exifinterface.media.ExifInterface: short FLAG_FLASH_MODE_COMPULSORY_SUPPRESSION>
<androidx.exifinterface.media.ExifInterface: short FLAG_FLASH_MODE_AUTO>
<androidx.exifinterface.media.ExifInterface: short FLAG_FLASH_NO_FLASH_FUNCTION>
<androidx.exifinterface.media.ExifInterface: short FLAG_FLASH_RED_EYE_SUPPORTED>
<androidx.exifinterface.media.ExifInterface: short SENSOR_TYPE_NOT_DEFINED>
<androidx.exifinterface.media.ExifInterface: short SENSOR_TYPE_ONE_CHIP>
<androidx.exifinterface.media.ExifInterface: short SENSOR_TYPE_TWO_CHIP>
<androidx.exifinterface.media.ExifInterface: short SENSOR_TYPE_THREE_CHIP>
<androidx.exifinterface.media.ExifInterface: short SENSOR_TYPE_COLOR_SEQUENTIAL>
<androidx.exifinterface.media.ExifInterface: short SENSOR_TYPE_TRILINEAR>
<androidx.exifinterface.media.ExifInterface: short SENSOR_TYPE_COLOR_SEQUENTIAL_LINEAR>
<androidx.exifinterface.media.ExifInterface: short FILE_SOURCE_OTHER>
<androidx.exifinterface.media.ExifInterface: short FILE_SOURCE_TRANSPARENT_SCANNER>
<androidx.exifinterface.media.ExifInterface: short FILE_SOURCE_REFLEX_SCANNER>
<androidx.exifinterface.media.ExifInterface: short FILE_SOURCE_DSC>
<androidx.exifinterface.media.ExifInterface: short SCENE_TYPE_DIRECTLY_PHOTOGRAPHED>
<androidx.exifinterface.media.ExifInterface: short RENDERED_PROCESS_NORMAL>
<androidx.exifinterface.media.ExifInterface: short RENDERED_PROCESS_CUSTOM>
<androidx.exifinterface.media.ExifInterface: short EXPOSURE_MODE_AUTO>
<androidx.exifinterface.media.ExifInterface: short EXPOSURE_MODE_MANUAL>
<androidx.exifinterface.media.ExifInterface: short EXPOSURE_MODE_AUTO_BRACKET>
<androidx.exifinterface.media.ExifInterface: int WHITEBALANCE_AUTO>
<androidx.exifinterface.media.ExifInterface: int WHITEBALANCE_MANUAL>
<androidx.exifinterface.media.ExifInterface: short WHITE_BALANCE_AUTO>
<androidx.exifinterface.media.ExifInterface: short WHITE_BALANCE_MANUAL>
<androidx.exifinterface.media.ExifInterface: short SCENE_CAPTURE_TYPE_STANDARD>
<androidx.exifinterface.media.ExifInterface: short SCENE_CAPTURE_TYPE_LANDSCAPE>
<androidx.exifinterface.media.ExifInterface: short SCENE_CAPTURE_TYPE_PORTRAIT>
<androidx.exifinterface.media.ExifInterface: short SCENE_CAPTURE_TYPE_NIGHT>
<androidx.exifinterface.media.ExifInterface: short GAIN_CONTROL_NONE>
<androidx.exifinterface.media.ExifInterface: short GAIN_CONTROL_LOW_GAIN_UP>
<androidx.exifinterface.media.ExifInterface: short GAIN_CONTROL_HIGH_GAIN_UP>
<androidx.exifinterface.media.ExifInterface: short GAIN_CONTROL_LOW_GAIN_DOWN>
<androidx.exifinterface.media.ExifInterface: short GAIN_CONTROL_HIGH_GAIN_DOWN>
<androidx.exifinterface.media.ExifInterface: short CONTRAST_NORMAL>
<androidx.exifinterface.media.ExifInterface: short CONTRAST_SOFT>
<androidx.exifinterface.media.ExifInterface: short CONTRAST_HARD>
<androidx.exifinterface.media.ExifInterface: short SATURATION_NORMAL>
<androidx.exifinterface.media.ExifInterface: short SATURATION_LOW>
<androidx.exifinterface.media.ExifInterface: short SATURATION_HIGH>
<androidx.exifinterface.media.ExifInterface: short SHARPNESS_NORMAL>
<androidx.exifinterface.media.ExifInterface: short SHARPNESS_SOFT>
<androidx.exifinterface.media.ExifInterface: short SHARPNESS_HARD>
<androidx.exifinterface.media.ExifInterface: short SUBJECT_DISTANCE_RANGE_UNKNOWN>
<androidx.exifinterface.media.ExifInterface: short SUBJECT_DISTANCE_RANGE_MACRO>
<androidx.exifinterface.media.ExifInterface: short SUBJECT_DISTANCE_RANGE_CLOSE_VIEW>
<androidx.exifinterface.media.ExifInterface: short SUBJECT_DISTANCE_RANGE_DISTANT_VIEW>
<androidx.exifinterface.media.ExifInterface: java.lang.String LATITUDE_NORTH>
<androidx.exifinterface.media.ExifInterface: java.lang.String LATITUDE_SOUTH>
<androidx.exifinterface.media.ExifInterface: java.lang.String LONGITUDE_EAST>
<androidx.exifinterface.media.ExifInterface: java.lang.String LONGITUDE_WEST>
<androidx.exifinterface.media.ExifInterface: short ALTITUDE_ABOVE_SEA_LEVEL>
<androidx.exifinterface.media.ExifInterface: short ALTITUDE_BELOW_SEA_LEVEL>
<androidx.exifinterface.media.ExifInterface: java.lang.String GPS_MEASUREMENT_IN_PROGRESS>
<androidx.exifinterface.media.ExifInterface: java.lang.String GPS_MEASUREMENT_INTERRUPTED>
<androidx.exifinterface.media.ExifInterface: java.lang.String GPS_MEASUREMENT_2D>
<androidx.exifinterface.media.ExifInterface: java.lang.String GPS_MEASUREMENT_3D>
<androidx.exifinterface.media.ExifInterface: java.lang.String GPS_SPEED_KILOMETERS_PER_HOUR>
<androidx.exifinterface.media.ExifInterface: java.lang.String GPS_SPEED_MILES_PER_HOUR>
<androidx.exifinterface.media.ExifInterface: java.lang.String GPS_SPEED_KNOTS>
<androidx.exifinterface.media.ExifInterface: java.lang.String GPS_DIRECTION_TRUE>
<androidx.exifinterface.media.ExifInterface: java.lang.String GPS_DIRECTION_MAGNETIC>
<androidx.exifinterface.media.ExifInterface: java.lang.String GPS_DISTANCE_KILOMETERS>
<androidx.exifinterface.media.ExifInterface: java.lang.String GPS_DISTANCE_MILES>
<androidx.exifinterface.media.ExifInterface: java.lang.String GPS_DISTANCE_NAUTICAL_MILES>
<androidx.exifinterface.media.ExifInterface: short GPS_MEASUREMENT_NO_DIFFERENTIAL>
<androidx.exifinterface.media.ExifInterface: short GPS_MEASUREMENT_DIFFERENTIAL_CORRECTED>
<androidx.exifinterface.media.ExifInterface: int DATA_UNCOMPRESSED>
<androidx.exifinterface.media.ExifInterface: int DATA_HUFFMAN_COMPRESSED>
<androidx.exifinterface.media.ExifInterface: int DATA_JPEG>
<androidx.exifinterface.media.ExifInterface: int DATA_JPEG_COMPRESSED>
<androidx.exifinterface.media.ExifInterface: int DATA_DEFLATE_ZIP>
<androidx.exifinterface.media.ExifInterface: int DATA_PACK_BITS_COMPRESSED>
<androidx.exifinterface.media.ExifInterface: int DATA_LOSSY_JPEG>
<androidx.exifinterface.media.ExifInterface: int[] BITS_PER_SAMPLE_RGB>
<androidx.exifinterface.media.ExifInterface: int[] BITS_PER_SAMPLE_GREYSCALE_1>
<androidx.exifinterface.media.ExifInterface: int[] BITS_PER_SAMPLE_GREYSCALE_2>
<androidx.exifinterface.media.ExifInterface: int PHOTOMETRIC_INTERPRETATION_WHITE_IS_ZERO>
<androidx.exifinterface.media.ExifInterface: int PHOTOMETRIC_INTERPRETATION_BLACK_IS_ZERO>
<androidx.exifinterface.media.ExifInterface: int PHOTOMETRIC_INTERPRETATION_RGB>
<androidx.exifinterface.media.ExifInterface: int PHOTOMETRIC_INTERPRETATION_YCBCR>
<androidx.exifinterface.media.ExifInterface: int ORIGINAL_RESOLUTION_IMAGE>
<androidx.exifinterface.media.ExifInterface: int REDUCED_RESOLUTION_IMAGE>
<androidx.exifinterface.media.ExifInterface: int STREAM_TYPE_FULL_IMAGE_DATA>
<androidx.exifinterface.media.ExifInterface: int STREAM_TYPE_EXIF_DATA_ONLY>
<androidx.exifinterface.media.ExifInterface: int SIGNATURE_CHECK_SIZE>
<androidx.exifinterface.media.ExifInterface: byte[] JPEG_SIGNATURE>
<androidx.exifinterface.media.ExifInterface: java.lang.String RAF_SIGNATURE>
<androidx.exifinterface.media.ExifInterface: int RAF_OFFSET_TO_JPEG_IMAGE_OFFSET>
<androidx.exifinterface.media.ExifInterface: byte[] HEIF_TYPE_FTYP>
<androidx.exifinterface.media.ExifInterface: byte[] HEIF_BRAND_MIF1>
<androidx.exifinterface.media.ExifInterface: byte[] HEIF_BRAND_HEIC>
<androidx.exifinterface.media.ExifInterface: short ORF_SIGNATURE_1>
<androidx.exifinterface.media.ExifInterface: short ORF_SIGNATURE_2>
<androidx.exifinterface.media.ExifInterface: byte[] ORF_MAKER_NOTE_HEADER_1>
<androidx.exifinterface.media.ExifInterface: byte[] ORF_MAKER_NOTE_HEADER_2>
<androidx.exifinterface.media.ExifInterface: int ORF_MAKER_NOTE_HEADER_1_SIZE>
<androidx.exifinterface.media.ExifInterface: int ORF_MAKER_NOTE_HEADER_2_SIZE>
<androidx.exifinterface.media.ExifInterface: short RW2_SIGNATURE>
<androidx.exifinterface.media.ExifInterface: java.lang.String PEF_SIGNATURE>
<androidx.exifinterface.media.ExifInterface: int PEF_MAKER_NOTE_SKIP_SIZE>
<androidx.exifinterface.media.ExifInterface: byte[] PNG_SIGNATURE>
<androidx.exifinterface.media.ExifInterface: byte[] PNG_CHUNK_TYPE_EXIF>
<androidx.exifinterface.media.ExifInterface: byte[] PNG_CHUNK_TYPE_IHDR>
<androidx.exifinterface.media.ExifInterface: byte[] PNG_CHUNK_TYPE_IEND>
<androidx.exifinterface.media.ExifInterface: int PNG_CHUNK_TYPE_BYTE_LENGTH>
<androidx.exifinterface.media.ExifInterface: int PNG_CHUNK_CRC_BYTE_LENGTH>
<androidx.exifinterface.media.ExifInterface: byte[] WEBP_SIGNATURE_1>
<androidx.exifinterface.media.ExifInterface: byte[] WEBP_SIGNATURE_2>
<androidx.exifinterface.media.ExifInterface: int WEBP_FILE_SIZE_BYTE_LENGTH>
<androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_EXIF>
<androidx.exifinterface.media.ExifInterface: byte[] WEBP_VP8_SIGNATURE>
<androidx.exifinterface.media.ExifInterface: byte WEBP_VP8L_SIGNATURE>
<androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_VP8X>
<androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_VP8L>
<androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_VP8>
<androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_ANIM>
<androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_ANMF>
<androidx.exifinterface.media.ExifInterface: int WEBP_CHUNK_TYPE_VP8X_DEFAULT_LENGTH>
<androidx.exifinterface.media.ExifInterface: int WEBP_CHUNK_TYPE_BYTE_LENGTH>
<androidx.exifinterface.media.ExifInterface: int WEBP_CHUNK_SIZE_BYTE_LENGTH>
<androidx.exifinterface.media.ExifInterface: java.text.SimpleDateFormat sFormatterPrimary>
<androidx.exifinterface.media.ExifInterface: java.text.SimpleDateFormat sFormatterSecondary>
<androidx.exifinterface.media.ExifInterface: short BYTE_ALIGN_II>
<androidx.exifinterface.media.ExifInterface: short BYTE_ALIGN_MM>
<androidx.exifinterface.media.ExifInterface: byte START_CODE>
<androidx.exifinterface.media.ExifInterface: int IFD_OFFSET>
<androidx.exifinterface.media.ExifInterface: int IFD_FORMAT_BYTE>
<androidx.exifinterface.media.ExifInterface: int IFD_FORMAT_STRING>
<androidx.exifinterface.media.ExifInterface: int IFD_FORMAT_USHORT>
<androidx.exifinterface.media.ExifInterface: int IFD_FORMAT_ULONG>
<androidx.exifinterface.media.ExifInterface: int IFD_FORMAT_URATIONAL>
<androidx.exifinterface.media.ExifInterface: int IFD_FORMAT_SBYTE>
<androidx.exifinterface.media.ExifInterface: int IFD_FORMAT_UNDEFINED>
<androidx.exifinterface.media.ExifInterface: int IFD_FORMAT_SSHORT>
<androidx.exifinterface.media.ExifInterface: int IFD_FORMAT_SLONG>
<androidx.exifinterface.media.ExifInterface: int IFD_FORMAT_SRATIONAL>
<androidx.exifinterface.media.ExifInterface: int IFD_FORMAT_SINGLE>
<androidx.exifinterface.media.ExifInterface: int IFD_FORMAT_DOUBLE>
<androidx.exifinterface.media.ExifInterface: int IFD_FORMAT_IFD>
<androidx.exifinterface.media.ExifInterface: int SKIP_BUFFER_SIZE>
<androidx.exifinterface.media.ExifInterface: java.lang.String[] IFD_FORMAT_NAMES>
<androidx.exifinterface.media.ExifInterface: int[] IFD_FORMAT_BYTES_PER_FORMAT>
<androidx.exifinterface.media.ExifInterface: byte[] EXIF_ASCII_PREFIX>
<androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_TIFF_TAGS>
<androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_EXIF_TAGS>
<androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_GPS_TAGS>
<androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_INTEROPERABILITY_TAGS>
<androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_THUMBNAIL_TAGS>
<androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag TAG_RAF_IMAGE_SIZE>
<androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] ORF_MAKER_NOTE_TAGS>
<androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] ORF_CAMERA_SETTINGS_TAGS>
<androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] ORF_IMAGE_PROCESSING_TAGS>
<androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] PEF_TAGS>
<androidx.exifinterface.media.ExifInterface: int IFD_TYPE_PRIMARY>
<androidx.exifinterface.media.ExifInterface: int IFD_TYPE_EXIF>
<androidx.exifinterface.media.ExifInterface: int IFD_TYPE_GPS>
<androidx.exifinterface.media.ExifInterface: int IFD_TYPE_INTEROPERABILITY>
<androidx.exifinterface.media.ExifInterface: int IFD_TYPE_THUMBNAIL>
<androidx.exifinterface.media.ExifInterface: int IFD_TYPE_PREVIEW>
<androidx.exifinterface.media.ExifInterface: int IFD_TYPE_ORF_MAKER_NOTE>
<androidx.exifinterface.media.ExifInterface: int IFD_TYPE_ORF_CAMERA_SETTINGS>
<androidx.exifinterface.media.ExifInterface: int IFD_TYPE_ORF_IMAGE_PROCESSING>
<androidx.exifinterface.media.ExifInterface: int IFD_TYPE_PEF>
<androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[][] EXIF_TAGS>
<androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>
<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] sExifTagMapsForReading>
<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] sExifTagMapsForWriting>
<androidx.exifinterface.media.ExifInterface: java.util.HashSet sTagSetForCompatibility>
<androidx.exifinterface.media.ExifInterface: java.util.HashMap sExifPointerTagMap>
<androidx.exifinterface.media.ExifInterface: java.nio.charset.Charset ASCII>
<androidx.exifinterface.media.ExifInterface: byte[] IDENTIFIER_EXIF_APP1>
<androidx.exifinterface.media.ExifInterface: byte[] IDENTIFIER_XMP_APP1>
<androidx.exifinterface.media.ExifInterface: byte MARKER>
<androidx.exifinterface.media.ExifInterface: byte MARKER_SOI>
<androidx.exifinterface.media.ExifInterface: byte MARKER_SOF0>
<androidx.exifinterface.media.ExifInterface: byte MARKER_SOF1>
<androidx.exifinterface.media.ExifInterface: byte MARKER_SOF2>
<androidx.exifinterface.media.ExifInterface: byte MARKER_SOF3>
<androidx.exifinterface.media.ExifInterface: byte MARKER_SOF5>
<androidx.exifinterface.media.ExifInterface: byte MARKER_SOF6>
<androidx.exifinterface.media.ExifInterface: byte MARKER_SOF7>
<androidx.exifinterface.media.ExifInterface: byte MARKER_SOF9>
<androidx.exifinterface.media.ExifInterface: byte MARKER_SOF10>
<androidx.exifinterface.media.ExifInterface: byte MARKER_SOF11>
<androidx.exifinterface.media.ExifInterface: byte MARKER_SOF13>
<androidx.exifinterface.media.ExifInterface: byte MARKER_SOF14>
<androidx.exifinterface.media.ExifInterface: byte MARKER_SOF15>
<androidx.exifinterface.media.ExifInterface: byte MARKER_SOS>
<androidx.exifinterface.media.ExifInterface: byte MARKER_APP1>
<androidx.exifinterface.media.ExifInterface: byte MARKER_COM>
<androidx.exifinterface.media.ExifInterface: byte MARKER_EOI>
<androidx.exifinterface.media.ExifInterface: int IMAGE_TYPE_UNKNOWN>
<androidx.exifinterface.media.ExifInterface: int IMAGE_TYPE_ARW>
<androidx.exifinterface.media.ExifInterface: int IMAGE_TYPE_CR2>
<androidx.exifinterface.media.ExifInterface: int IMAGE_TYPE_DNG>
<androidx.exifinterface.media.ExifInterface: int IMAGE_TYPE_JPEG>
<androidx.exifinterface.media.ExifInterface: int IMAGE_TYPE_NEF>
<androidx.exifinterface.media.ExifInterface: int IMAGE_TYPE_NRW>
<androidx.exifinterface.media.ExifInterface: int IMAGE_TYPE_ORF>
<androidx.exifinterface.media.ExifInterface: int IMAGE_TYPE_PEF>
<androidx.exifinterface.media.ExifInterface: int IMAGE_TYPE_RAF>
<androidx.exifinterface.media.ExifInterface: int IMAGE_TYPE_RW2>
<androidx.exifinterface.media.ExifInterface: int IMAGE_TYPE_SRW>
<androidx.exifinterface.media.ExifInterface: int IMAGE_TYPE_HEIF>
<androidx.exifinterface.media.ExifInterface: int IMAGE_TYPE_PNG>
<androidx.exifinterface.media.ExifInterface: int IMAGE_TYPE_WEBP>
<androidx.exifinterface.media.ExifInterface: java.lang.String mFilename>
<androidx.exifinterface.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor>
<androidx.exifinterface.media.ExifInterface: android.content.res.AssetManager$AssetInputStream mAssetInputStream>
<androidx.exifinterface.media.ExifInterface: int mMimeType>
<androidx.exifinterface.media.ExifInterface: boolean mIsExifDataOnly>
<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>
<androidx.exifinterface.media.ExifInterface: java.util.Set mAttributesOffsets>
<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>
<androidx.exifinterface.media.ExifInterface: boolean mHasThumbnail>
<androidx.exifinterface.media.ExifInterface: boolean mHasThumbnailStrips>
<androidx.exifinterface.media.ExifInterface: boolean mAreThumbnailStripsConsecutive>
<androidx.exifinterface.media.ExifInterface: int mThumbnailOffset>
<androidx.exifinterface.media.ExifInterface: int mThumbnailLength>
<androidx.exifinterface.media.ExifInterface: byte[] mThumbnailBytes>
<androidx.exifinterface.media.ExifInterface: int mThumbnailCompression>
<androidx.exifinterface.media.ExifInterface: int mOffsetToExifData>
<androidx.exifinterface.media.ExifInterface: int mOrfMakerNoteOffset>
<androidx.exifinterface.media.ExifInterface: int mOrfThumbnailOffset>
<androidx.exifinterface.media.ExifInterface: int mOrfThumbnailLength>
<androidx.exifinterface.media.ExifInterface: boolean mModified>
<androidx.exifinterface.media.ExifInterface: boolean mXmpIsFromSeparateMarker>
<androidx.exifinterface.media.ExifInterface: java.util.regex.Pattern NON_ZERO_TIME_PATTERN>
<androidx.exifinterface.media.ExifInterface: java.util.regex.Pattern GPS_TIMESTAMP_PATTERN>
<androidx.exifinterface.media.ExifInterface: java.util.regex.Pattern DATETIME_PRIMARY_FORMAT_PATTERN>
<androidx.exifinterface.media.ExifInterface: java.util.regex.Pattern DATETIME_SECONDARY_FORMAT_PATTERN>
<androidx.exifinterface.media.ExifInterface: int DATETIME_VALUE_STRING_LENGTH>
    public void <init>(java.io.File) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        java.io.File r1;
        androidx.exifinterface.media.ExifInterface$ExifTag[][] $r2, $r5;
        int $i0, $i1;
        java.util.HashMap[] $r3;
        java.util.HashSet $r4;
        java.nio.ByteOrder $r6;
        java.lang.String $r7;
        java.lang.NullPointerException $r8;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i0 = lengthof $r2;

        $r3 = newarray (java.util.HashMap)[$i0];

        r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes> = $r3;

        $r4 = new java.util.HashSet;

        $r5 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i1 = lengthof $r5;

        specialinvoke $r4.<java.util.HashSet: void <init>(int)>($i1);

        r0.<androidx.exifinterface.media.ExifInterface: java.util.Set mAttributesOffsets> = $r4;

        $r6 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder> = $r6;

        if r1 != null goto label1;

        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("file cannot be null");

        throw $r8;

     label1:
        $r7 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void initForFilename(java.lang.String)>($r7);

        return;
    }

    public void <init>(java.lang.String) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        java.lang.String r1;
        androidx.exifinterface.media.ExifInterface$ExifTag[][] $r2, $r5;
        int $i0, $i1;
        java.util.HashMap[] $r3;
        java.util.HashSet $r4;
        java.nio.ByteOrder $r6;
        java.lang.NullPointerException $r7;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i0 = lengthof $r2;

        $r3 = newarray (java.util.HashMap)[$i0];

        r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes> = $r3;

        $r4 = new java.util.HashSet;

        $r5 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i1 = lengthof $r5;

        specialinvoke $r4.<java.util.HashSet: void <init>(int)>($i1);

        r0.<androidx.exifinterface.media.ExifInterface: java.util.Set mAttributesOffsets> = $r4;

        $r6 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder> = $r6;

        if r1 != null goto label1;

        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("filename cannot be null");

        throw $r7;

     label1:
        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void initForFilename(java.lang.String)>(r1);

        return;
    }

    public void <init>(java.io.FileDescriptor) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        java.lang.Throwable r1, $r8, $r9, r12;
        androidx.exifinterface.media.ExifInterface$ExifTag[][] $r2, $r5;
        int $i0, $i1, $i2;
        java.util.HashMap[] $r3;
        java.util.HashSet $r4;
        java.nio.ByteOrder $r6;
        boolean $z0, z1;
        java.lang.NullPointerException $r7;
        java.io.IOException $r10;
        java.io.FileDescriptor r11;
        java.io.FileInputStream r13, $r14;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r11 := @parameter0: java.io.FileDescriptor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i0 = lengthof $r2;

        $r3 = newarray (java.util.HashMap)[$i0];

        r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes> = $r3;

        $r4 = new java.util.HashSet;

        $r5 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i1 = lengthof $r5;

        specialinvoke $r4.<java.util.HashSet: void <init>(int)>($i1);

        r0.<androidx.exifinterface.media.ExifInterface: java.util.Set mAttributesOffsets> = $r4;

        $r6 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder> = $r6;

        if r11 != null goto label01;

        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("fileDescriptor cannot be null");

        throw $r7;

     label01:
        r0.<androidx.exifinterface.media.ExifInterface: android.content.res.AssetManager$AssetInputStream mAssetInputStream> = null;

        r0.<androidx.exifinterface.media.ExifInterface: java.lang.String mFilename> = null;

        z1 = 0;

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 21 goto label05;

        $z0 = staticinvoke <androidx.exifinterface.media.ExifInterface: boolean isSeekableFD(java.io.FileDescriptor)>(r11);

        if $z0 == 0 goto label05;

        r0.<androidx.exifinterface.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor> = r11;

     label02:
        r11 = staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: java.io.FileDescriptor dup(java.io.FileDescriptor)>(r11);

        z1 = 1;

     label03:
        goto label06;

     label04:
        $r9 := @caughtexception;

        r12 = $r9;

        $r10 = new java.io.IOException;

        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to duplicate file descriptor", r12);

        throw $r10;

     label05:
        r0.<androidx.exifinterface.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor> = null;

     label06:
        r13 = null;

     label07:
        $r14 = new java.io.FileInputStream;

        specialinvoke $r14.<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>(r11);

        r13 = $r14;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void loadAttributes(java.io.InputStream)>(r13);

     label08:
        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: void closeQuietly(java.io.Closeable)>(r13);

        if z1 == 0 goto label12;

        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: void closeFileDescriptor(java.io.FileDescriptor)>(r11);

        goto label12;

     label09:
        $r8 := @caughtexception;

        r1 = $r8;

     label10:
        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: void closeQuietly(java.io.Closeable)>(r13);

        if z1 == 0 goto label11;

        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: void closeFileDescriptor(java.io.FileDescriptor)>(r11);

     label11:
        throw r1;

     label12:
        return;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        java.io.InputStream r1;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void <init>(java.io.InputStream,int)>(r1, 0);

        return;
    }

    public void <init>(java.io.InputStream, int) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        int i0, $i1, $i2, $i3;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        androidx.exifinterface.media.ExifInterface$ExifTag[][] $r1, $r4;
        java.util.HashMap[] $r2;
        java.nio.ByteOrder $r5;
        java.io.FileInputStream $r6, $r8;
        java.io.FileDescriptor $r7, $r9;
        android.content.res.AssetManager$AssetInputStream $r10;
        byte[] $r12;
        java.io.BufferedInputStream $r13, r18;
        java.lang.Object r15;
        java.util.HashSet r16;
        java.lang.NullPointerException r17;
        java.io.InputStream r19, r20;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r15 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i1 = lengthof $r1;

        $r2 = newarray (java.util.HashMap)[$i1];

        r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes> = $r2;

        r16 = new java.util.HashSet;

        $r4 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i2 = lengthof $r4;

        specialinvoke r16.<java.util.HashSet: void <init>(int)>($i2);

        r0.<androidx.exifinterface.media.ExifInterface: java.util.Set mAttributesOffsets> = r16;

        $r5 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder> = $r5;

        if r15 != null goto label1;

        r17 = new java.lang.NullPointerException;

        specialinvoke r17.<java.lang.NullPointerException: void <init>(java.lang.String)>("inputStream cannot be null");

        throw r17;

     label1:
        r0.<androidx.exifinterface.media.ExifInterface: java.lang.String mFilename> = null;

        if i0 != 1 goto label2;

        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        z0 = $z5;

        if z0 == 0 goto label5;

        r18 = new java.io.BufferedInputStream;

        $r12 = <androidx.exifinterface.media.ExifInterface: byte[] IDENTIFIER_EXIF_APP1>;

        $i3 = lengthof $r12;

        r19 = (java.io.InputStream) r15;

        specialinvoke r18.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>(r19, $i3);

        r15 = r18;

        $r13 = (java.io.BufferedInputStream) r15;

        $z4 = staticinvoke <androidx.exifinterface.media.ExifInterface: boolean isExifDataOnly(java.io.BufferedInputStream)>($r13);

        if $z4 != 0 goto label4;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", "Given data does not follow the structure of an Exif-only data.");

        return;

     label4:
        r0.<androidx.exifinterface.media.ExifInterface: boolean mIsExifDataOnly> = 1;

        r0.<androidx.exifinterface.media.ExifInterface: android.content.res.AssetManager$AssetInputStream mAssetInputStream> = null;

        r0.<androidx.exifinterface.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor> = null;

        goto label8;

     label5:
        $z1 = r15 instanceof android.content.res.AssetManager$AssetInputStream;

        if $z1 == 0 goto label6;

        $r10 = (android.content.res.AssetManager$AssetInputStream) r15;

        r0.<androidx.exifinterface.media.ExifInterface: android.content.res.AssetManager$AssetInputStream mAssetInputStream> = $r10;

        r0.<androidx.exifinterface.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor> = null;

        goto label8;

     label6:
        $z2 = r15 instanceof java.io.FileInputStream;

        if $z2 == 0 goto label7;

        $r6 = (java.io.FileInputStream) r15;

        $r7 = virtualinvoke $r6.<java.io.FileInputStream: java.io.FileDescriptor getFD()>();

        $z3 = staticinvoke <androidx.exifinterface.media.ExifInterface: boolean isSeekableFD(java.io.FileDescriptor)>($r7);

        if $z3 == 0 goto label7;

        r0.<androidx.exifinterface.media.ExifInterface: android.content.res.AssetManager$AssetInputStream mAssetInputStream> = null;

        $r8 = (java.io.FileInputStream) r15;

        $r9 = virtualinvoke $r8.<java.io.FileInputStream: java.io.FileDescriptor getFD()>();

        r0.<androidx.exifinterface.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor> = $r9;

        goto label8;

     label7:
        r0.<androidx.exifinterface.media.ExifInterface: android.content.res.AssetManager$AssetInputStream mAssetInputStream> = null;

        r0.<androidx.exifinterface.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor> = null;

     label8:
        r20 = (java.io.InputStream) r15;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void loadAttributes(java.io.InputStream)>(r20);

        return;
    }

    public static boolean isSupportedMimeType(java.lang.String)
    {
        java.lang.String r0, r1;
        java.util.Locale $r2;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        java.lang.NullPointerException $r3;
        byte b1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label01;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("mimeType shouldn\'t be null");

        throw $r3;

     label01:
        $r2 = <java.util.Locale: java.util.Locale ROOT>;

        r1 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

        b1 = -1;

        $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1875291391: goto label12;
            case -1635437028: goto label11;
            case -1594371159: goto label07;
            case -1487464693: goto label13;
            case -1487464690: goto label14;
            case -1487394660: goto label02;
            case -1487018032: goto label16;
            case -1423313290: goto label03;
            case -985160897: goto label08;
            case -879258763: goto label15;
            case -332763809: goto label10;
            case 1378106698: goto label09;
            case 2099152104: goto label05;
            case 2099152524: goto label06;
            case 2111234748: goto label04;
            default: goto label17;
        };

     label02:
        $z9 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("image/jpeg");

        if $z9 == 0 goto label17;

        b1 = 0;

        goto label17;

     label03:
        $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("image/x-adobe-dng");

        if $z7 == 0 goto label17;

        b1 = 1;

        goto label17;

     label04:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("image/x-canon-cr2");

        if $z0 == 0 goto label17;

        b1 = 2;

        goto label17;

     label05:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("image/x-nikon-nef");

        if $z2 == 0 goto label17;

        b1 = 3;

        goto label17;

     label06:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("image/x-nikon-nrw");

        if $z1 == 0 goto label17;

        b1 = 4;

        goto label17;

     label07:
        $z12 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("image/x-sony-arw");

        if $z12 == 0 goto label17;

        b1 = 5;

        goto label17;

     label08:
        $z6 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("image/x-panasonic-rw2");

        if $z6 == 0 goto label17;

        b1 = 6;

        goto label17;

     label09:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("image/x-olympus-orf");

        if $z3 == 0 goto label17;

        b1 = 7;

        goto label17;

     label10:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("image/x-pentax-pef");

        if $z4 == 0 goto label17;

        b1 = 8;

        goto label17;

     label11:
        $z13 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("image/x-samsung-srw");

        if $z13 == 0 goto label17;

        b1 = 9;

        goto label17;

     label12:
        $z14 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("image/x-fuji-raf");

        if $z14 == 0 goto label17;

        b1 = 10;

        goto label17;

     label13:
        $z11 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("image/heic");

        if $z11 == 0 goto label17;

        b1 = 11;

        goto label17;

     label14:
        $z10 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("image/heif");

        if $z10 == 0 goto label17;

        b1 = 12;

        goto label17;

     label15:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("image/png");

        if $z5 == 0 goto label17;

        b1 = 13;

        goto label17;

     label16:
        $z8 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("image/webp");

        if $z8 == 0 goto label17;

        b1 = 14;

     label17:
        tableswitch(b1)
        {
            case 0: goto label18;
            case 1: goto label18;
            case 2: goto label18;
            case 3: goto label18;
            case 4: goto label18;
            case 5: goto label18;
            case 6: goto label18;
            case 7: goto label18;
            case 8: goto label18;
            case 9: goto label18;
            case 10: goto label18;
            case 11: goto label18;
            case 12: goto label18;
            case 13: goto label18;
            case 14: goto label18;
            default: goto label19;
        };

     label18:
        return 1;

     label19:
        return 0;
    }

    private androidx.exifinterface.media.ExifInterface$ExifAttribute getExifAttribute(java.lang.String)
    {
        androidx.exifinterface.media.ExifInterface r0;
        androidx.exifinterface.media.ExifInterface$ExifAttribute r1;
        java.lang.String $r2, r7;
        boolean $z0, $z1;
        java.util.HashMap[] $r3;
        java.util.HashMap $r4;
        java.lang.Object $r5;
        java.lang.NullPointerException $r6;
        int i1, $i2;
        androidx.exifinterface.media.ExifInterface$ExifTag[][] $r8;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r7 := @parameter0: java.lang.String;

        if r7 != null goto label1;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("tag shouldn\'t be null");

        throw $r6;

     label1:
        $r2 = "ISOSpeedRatings";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z0 == 0 goto label3;

        $z1 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z1 == 0 goto label2;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", "getExifAttribute: Replacing TAG_ISO_SPEED_RATINGS with TAG_PHOTOGRAPHIC_SENSITIVITY.");

     label2:
        r7 = "PhotographicSensitivity";

     label3:
        i1 = 0;

     label4:
        $r8 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i2 = lengthof $r8;

        if i1 >= $i2 goto label6;

        $r3 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r4 = $r3[i1];

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r7);

        r1 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r5;

        if r1 == null goto label5;

        return r1;

     label5:
        i1 = i1 + 1;

        goto label4;

     label6:
        return null;
    }

    public java.lang.String getAttribute(java.lang.String)
    {
        androidx.exifinterface.media.ExifInterface r0;
        java.lang.String r1, $r5, $r10, $r12, $r23, $r27, $r29;
        androidx.exifinterface.media.ExifInterface$ExifAttribute r2;
        java.util.HashSet $r3;
        boolean $z0, $z1;
        java.nio.ByteOrder $r4, $r6, $r28;
        double $d0;
        int $i0, $i2, $i5, $i8, $i11, $i12, $i13;
        java.lang.Object $r7;
        java.lang.StringBuilder $r8, $r9, $r11, $r24, $r25, $r26;
        java.lang.Object[] $r13;
        androidx.exifinterface.media.ExifInterface$Rational $r14, $r15, $r17, $r18, $r20, $r21;
        long $l3, $l4, $l6, $l7, $l9, $l10;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        java.lang.Integer $r16, $r19, $r22;
        java.lang.NullPointerException $r30;
        java.lang.Throwable $r31, r33;
        androidx.exifinterface.media.ExifInterface$Rational[] r32;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r30 = new java.lang.NullPointerException;

        specialinvoke $r30.<java.lang.NullPointerException: void <init>(java.lang.String)>("tag shouldn\'t be null");

        throw $r30;

     label1:
        r2 = specialinvoke r0.<androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifAttribute getExifAttribute(java.lang.String)>(r1);

        if r2 == null goto label9;

        $r3 = <androidx.exifinterface.media.ExifInterface: java.util.HashSet sTagSetForCompatibility>;

        $z0 = virtualinvoke $r3.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        $r28 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r29 = virtualinvoke r2.<androidx.exifinterface.media.ExifInterface$ExifAttribute: java.lang.String getStringValue(java.nio.ByteOrder)>($r28);

        return $r29;

     label2:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("GPSTimeStamp");

        if $z1 == 0 goto label6;

        $i0 = r2.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int format>;

        if $i0 == 5 goto label3;

        $i12 = r2.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int format>;

        if $i12 == 10 goto label3;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GPS Timestamp format is not rational. format=");

        $i13 = r2.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int format>;

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", $r27);

        return null;

     label3:
        $r6 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r7 = virtualinvoke r2.<androidx.exifinterface.media.ExifInterface$ExifAttribute: java.lang.Object getValue(java.nio.ByteOrder)>($r6);

        r32 = (androidx.exifinterface.media.ExifInterface$Rational[]) $r7;

        if r32 == null goto label4;

        $i2 = lengthof r32;

        if $i2 == 3 goto label5;

     label4:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid GPS Timestamp array. array=");

        $r10 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r32);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", $r12);

        return null;

     label5:
        $r13 = newarray (java.lang.Object)[3];

        $r14 = r32[0];

        $l3 = $r14.<androidx.exifinterface.media.ExifInterface$Rational: long numerator>;

        $f1 = (float) $l3;

        $r15 = r32[0];

        $l4 = $r15.<androidx.exifinterface.media.ExifInterface$Rational: long denominator>;

        $f0 = (float) $l4;

        $f2 = $f1 / $f0;

        $i5 = (int) $f2;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r13[0] = $r16;

        $r17 = r32[1];

        $l6 = $r17.<androidx.exifinterface.media.ExifInterface$Rational: long numerator>;

        $f4 = (float) $l6;

        $r18 = r32[1];

        $l7 = $r18.<androidx.exifinterface.media.ExifInterface$Rational: long denominator>;

        $f3 = (float) $l7;

        $f5 = $f4 / $f3;

        $i8 = (int) $f5;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r13[1] = $r19;

        $r20 = r32[2];

        $l9 = $r20.<androidx.exifinterface.media.ExifInterface$Rational: long numerator>;

        $f7 = (float) $l9;

        $r21 = r32[2];

        $l10 = $r21.<androidx.exifinterface.media.ExifInterface$Rational: long denominator>;

        $f6 = (float) $l10;

        $f8 = $f7 / $f6;

        $i11 = (int) $f8;

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        $r13[2] = $r22;

        $r23 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%02d:%02d:%02d", $r13);

        return $r23;

     label6:
        $r4 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $d0 = virtualinvoke r2.<androidx.exifinterface.media.ExifInterface$ExifAttribute: double getDoubleValue(java.nio.ByteOrder)>($r4);

        $r5 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d0);

     label7:
        return $r5;

     label8:
        $r31 := @caughtexception;

        r33 = $r31;

        return null;

     label9:
        return null;

        catch java.lang.NumberFormatException from label6 to label7 with label8;
    }

    public int getAttributeInt(java.lang.String, int)
    {
        androidx.exifinterface.media.ExifInterface r0;
        java.lang.String r1;
        int i0, $i1;
        androidx.exifinterface.media.ExifInterface$ExifAttribute r2;
        java.lang.Throwable r3, $r6;
        java.nio.ByteOrder $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("tag shouldn\'t be null");

        throw $r5;

     label1:
        r2 = specialinvoke r0.<androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifAttribute getExifAttribute(java.lang.String)>(r1);

        if r2 != null goto label2;

        return i0;

     label2:
        $r4 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $i1 = virtualinvoke r2.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r4);

     label3:
        return $i1;

     label4:
        $r6 := @caughtexception;

        r3 = $r6;

        return i0;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
    }

    public double getAttributeDouble(java.lang.String, double)
    {
        androidx.exifinterface.media.ExifInterface r0;
        java.lang.String r1;
        double d0, $d1;
        androidx.exifinterface.media.ExifInterface$ExifAttribute r2;
        java.lang.Throwable r3, $r6;
        java.nio.ByteOrder $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        if r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("tag shouldn\'t be null");

        throw $r5;

     label1:
        r2 = specialinvoke r0.<androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifAttribute getExifAttribute(java.lang.String)>(r1);

        if r2 != null goto label2;

        return d0;

     label2:
        $r4 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $d1 = virtualinvoke r2.<androidx.exifinterface.media.ExifInterface$ExifAttribute: double getDoubleValue(java.nio.ByteOrder)>($r4);

     label3:
        return $d1;

     label4:
        $r6 := @caughtexception;

        r3 = $r6;

        return d0;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
    }

    public void setAttribute(java.lang.String, java.lang.String)
    {
        androidx.exifinterface.media.ExifInterface r0;
        android.util.Pair r1;
        java.lang.String $r2, $r13, $r19, $r21, $r22, $r28, $r34, $r36, $r37, $r43, $r49, $r61, $r70, $r75, $r82, $r91, $r95, $r107, $r110, $r113, $r121, $r131, $r132, $r133, $r141, r142, r143, $r144, $r149, $r150;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, z11, $z12;
        java.util.HashMap[] $r3, $r8, $r14, $r23, $r29, $r38, $r44, $r50, $r54, $r100;
        java.util.HashMap $r4, $r10, $r16, $r25, $r31, $r40, $r46, $r51, $r55, $r101;
        java.lang.Object $r5, $r6, $r62, $r79, $r84, $r88, $r96, $r98;
        java.lang.Integer $r7, $r63, $r80, $r85, $r89, $r97, $r99;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i8, $i9, $i10, $i11, $i12, $i15, $i16, $i18, $i19, $i20, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i44, i47, $i48, i49, i50, i51, i52, i53, i54, i55;
        java.nio.ByteOrder $r9, $r15, $r24, $r30, $r39, $r45;
        androidx.exifinterface.media.ExifInterface$ExifAttribute $r11, $r17, $r26, $r32, $r41, $r47, $r52, $r56;
        double $d0, $d1, $d2, $d3, $d4, d5;
        androidx.exifinterface.media.ExifInterface$Rational $r20, $r35, $r104;
        long $l6, $l7, $l13, $l14, $l17;
        java.lang.StringBuilder $r58, $r59, $r60, $r64, $r66, $r67, $r68, $r71, $r72, $r73, $r76, $r77, $r78, $r83, $r86, $r87, $r92, $r93, $r94, $r106, $r108, $r109, $r111, $r112, $r114, $r115, $r116, $r117, $r118, $r119, $r120, $r126, $r127, $r128, $r129, $r130, $r136, $r137, $r138, $r139, $r140;
        java.lang.String[] $r69, $r74, $r81, $r90, r151, r153, r155, r157, r159, r160, r162, r163;
        java.util.HashSet $r103;
        java.util.regex.Pattern $r105, $r122, $r124;
        java.util.regex.Matcher $r123, $r125, r145;
        java.lang.NullPointerException $r134;
        java.lang.Throwable $r135, r146;
        androidx.exifinterface.media.ExifInterface$ExifTag[][] $r147;
        androidx.exifinterface.media.ExifInterface$ExifTag r148;
        int[] r152, r154;
        long[] r156;
        androidx.exifinterface.media.ExifInterface$Rational[] r158, r161;
        double[] r164;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r142 := @parameter0: java.lang.String;

        r143 := @parameter1: java.lang.String;

        if r142 != null goto label01;

        $r134 = new java.lang.NullPointerException;

        specialinvoke $r134.<java.lang.NullPointerException: void <init>(java.lang.String)>("tag shouldn\'t be null");

        throw $r134;

     label01:
        $r2 = "DateTime";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r142);

        if $z0 != 0 goto label02;

        $r132 = "DateTimeOriginal";

        $z8 = virtualinvoke $r132.<java.lang.String: boolean equals(java.lang.Object)>(r142);

        if $z8 != 0 goto label02;

        $r133 = "DateTimeDigitized";

        $z9 = virtualinvoke $r133.<java.lang.String: boolean equals(java.lang.Object)>(r142);

        if $z9 == 0 goto label05;

     label02:
        if r143 == null goto label05;

        $r122 = <androidx.exifinterface.media.ExifInterface: java.util.regex.Pattern DATETIME_PRIMARY_FORMAT_PATTERN>;

        $r123 = virtualinvoke $r122.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r143);

        z10 = virtualinvoke $r123.<java.util.regex.Matcher: boolean find()>();

        $r124 = <androidx.exifinterface.media.ExifInterface: java.util.regex.Pattern DATETIME_SECONDARY_FORMAT_PATTERN>;

        $r125 = virtualinvoke $r124.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r143);

        z11 = virtualinvoke $r125.<java.util.regex.Matcher: boolean find()>();

        $i44 = virtualinvoke r143.<java.lang.String: int length()>();

        if $i44 != 19 goto label03;

        if z10 != 0 goto label04;

        if z11 != 0 goto label04;

     label03:
        $r126 = new java.lang.StringBuilder;

        specialinvoke $r126.<java.lang.StringBuilder: void <init>()>();

        $r127 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid value for ");

        $r128 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r142);

        $r129 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r130 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r143);

        $r131 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", $r131);

        return;

     label04:
        if z11 == 0 goto label05;

        r143 = virtualinvoke r143.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("-", ":");

     label05:
        $r144 = "ISOSpeedRatings";

        $z12 = virtualinvoke $r144.<java.lang.String: boolean equals(java.lang.Object)>(r142);

        if $z12 == 0 goto label07;

        $z7 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z7 == 0 goto label06;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", "setAttribute: Replacing TAG_ISO_SPEED_RATINGS with TAG_PHOTOGRAPHIC_SENSITIVITY.");

     label06:
        r142 = "PhotographicSensitivity";

     label07:
        if r143 == null goto label12;

        $r103 = <androidx.exifinterface.media.ExifInterface: java.util.HashSet sTagSetForCompatibility>;

        $z4 = virtualinvoke $r103.<java.util.HashSet: boolean contains(java.lang.Object)>(r142);

        if $z4 == 0 goto label12;

        $z5 = virtualinvoke r142.<java.lang.String: boolean equals(java.lang.Object)>("GPSTimeStamp");

        if $z5 == 0 goto label09;

        $r105 = <androidx.exifinterface.media.ExifInterface: java.util.regex.Pattern GPS_TIMESTAMP_PATTERN>;

        r145 = virtualinvoke $r105.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r143);

        $z6 = virtualinvoke r145.<java.util.regex.Matcher: boolean find()>();

        if $z6 != 0 goto label08;

        $r116 = new java.lang.StringBuilder;

        specialinvoke $r116.<java.lang.StringBuilder: void <init>()>();

        $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid value for ");

        $r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r142);

        $r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r120 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r143);

        $r121 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", $r121);

        return;

     label08:
        $r106 = new java.lang.StringBuilder;

        specialinvoke $r106.<java.lang.StringBuilder: void <init>()>();

        $r107 = virtualinvoke r145.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $i39 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r107);

        $r108 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i39);

        $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/1,");

        $r110 = virtualinvoke r145.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $i40 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r110);

        $r111 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i40);

        $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/1,");

        $r113 = virtualinvoke r145.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        $i41 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r113);

        $r114 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i41);

        $r115 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/1");

        r143 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label12;

     label09:
        d5 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r143);

        $r104 = new androidx.exifinterface.media.ExifInterface$Rational;

        specialinvoke $r104.<androidx.exifinterface.media.ExifInterface$Rational: void <init>(double)>(d5);

        r143 = virtualinvoke $r104.<androidx.exifinterface.media.ExifInterface$Rational: java.lang.String toString()>();

     label10:
        goto label12;

     label11:
        $r135 := @caughtexception;

        r146 = $r135;

        $r136 = new java.lang.StringBuilder;

        specialinvoke $r136.<java.lang.StringBuilder: void <init>()>();

        $r137 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid value for ");

        $r138 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r142);

        $r139 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r140 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r143);

        $r141 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", $r141);

        return;

     label12:
        i47 = 0;

     label13:
        $r147 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i48 = lengthof $r147;

        if i47 >= $i48 goto label49;

        if i47 != 4 goto label14;

        $z3 = r0.<androidx.exifinterface.media.ExifInterface: boolean mHasThumbnail>;

        if $z3 != 0 goto label14;

        goto label48;

     label14:
        $r3 = <androidx.exifinterface.media.ExifInterface: java.util.HashMap[] sExifTagMapsForWriting>;

        $r4 = $r3[i47];

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r142);

        r148 = (androidx.exifinterface.media.ExifInterface$ExifTag) $r5;

        if r148 == null goto label48;

        if r143 != null goto label15;

        $r100 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r101 = $r100[i47];

        virtualinvoke $r101.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r142);

        goto label48;

     label15:
        r1 = staticinvoke <androidx.exifinterface.media.ExifInterface: android.util.Pair guessDataFormat(java.lang.String)>(r143);

        $i0 = r148.<androidx.exifinterface.media.ExifInterface$ExifTag: int primaryFormat>;

        $r6 = r1.<android.util.Pair: java.lang.Object first>;

        $r7 = (java.lang.Integer) $r6;

        $i1 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        if $i0 == $i1 goto label16;

        $i22 = r148.<androidx.exifinterface.media.ExifInterface$ExifTag: int primaryFormat>;

        $r62 = r1.<android.util.Pair: java.lang.Object second>;

        $r63 = (java.lang.Integer) $r62;

        $i23 = virtualinvoke $r63.<java.lang.Integer: int intValue()>();

        if $i22 != $i23 goto label17;

     label16:
        i49 = r148.<androidx.exifinterface.media.ExifInterface$ExifTag: int primaryFormat>;

        goto label26;

     label17:
        $i24 = r148.<androidx.exifinterface.media.ExifInterface$ExifTag: int secondaryFormat>;

        if $i24 == -1 goto label19;

        $i35 = r148.<androidx.exifinterface.media.ExifInterface$ExifTag: int secondaryFormat>;

        $r96 = r1.<android.util.Pair: java.lang.Object first>;

        $r97 = (java.lang.Integer) $r96;

        $i36 = virtualinvoke $r97.<java.lang.Integer: int intValue()>();

        if $i35 == $i36 goto label18;

        $i37 = r148.<androidx.exifinterface.media.ExifInterface$ExifTag: int secondaryFormat>;

        $r98 = r1.<android.util.Pair: java.lang.Object second>;

        $r99 = (java.lang.Integer) $r98;

        $i38 = virtualinvoke $r99.<java.lang.Integer: int intValue()>();

        if $i37 != $i38 goto label19;

     label18:
        i49 = r148.<androidx.exifinterface.media.ExifInterface$ExifTag: int secondaryFormat>;

        goto label26;

     label19:
        $i25 = r148.<androidx.exifinterface.media.ExifInterface$ExifTag: int primaryFormat>;

        if $i25 == 1 goto label20;

        $i26 = r148.<androidx.exifinterface.media.ExifInterface$ExifTag: int primaryFormat>;

        if $i26 == 7 goto label20;

        $i27 = r148.<androidx.exifinterface.media.ExifInterface$ExifTag: int primaryFormat>;

        if $i27 != 2 goto label21;

     label20:
        i49 = r148.<androidx.exifinterface.media.ExifInterface$ExifTag: int primaryFormat>;

        goto label26;

     label21:
        $z2 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z2 == 0 goto label48;

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r66 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Given tag (");

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r142);

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") value didn\'t match with one of expected formats: ");

        $r69 = <androidx.exifinterface.media.ExifInterface: java.lang.String[] IFD_FORMAT_NAMES>;

        $i28 = r148.<androidx.exifinterface.media.ExifInterface$ExifTag: int primaryFormat>;

        $r70 = $r69[$i28];

        $r71 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r70);

        $i29 = r148.<androidx.exifinterface.media.ExifInterface$ExifTag: int secondaryFormat>;

        if $i29 != -1 goto label22;

        $r149 = "";

        goto label23;

     label22:
        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r74 = <androidx.exifinterface.media.ExifInterface: java.lang.String[] IFD_FORMAT_NAMES>;

        $i30 = r148.<androidx.exifinterface.media.ExifInterface$ExifTag: int secondaryFormat>;

        $r75 = $r74[$i30];

        $r76 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r75);

        $r149 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

     label23:
        $r77 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r149);

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (guess: ");

        $r81 = <androidx.exifinterface.media.ExifInterface: java.lang.String[] IFD_FORMAT_NAMES>;

        $r79 = r1.<android.util.Pair: java.lang.Object first>;

        $r80 = (java.lang.Integer) $r79;

        $i31 = virtualinvoke $r80.<java.lang.Integer: int intValue()>();

        $r82 = $r81[$i31];

        $r83 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r82);

        $r84 = r1.<android.util.Pair: java.lang.Object second>;

        $r85 = (java.lang.Integer) $r84;

        $i32 = virtualinvoke $r85.<java.lang.Integer: int intValue()>();

        if $i32 != -1 goto label24;

        $r150 = "";

        goto label25;

     label24:
        $r86 = new java.lang.StringBuilder;

        specialinvoke $r86.<java.lang.StringBuilder: void <init>()>();

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r90 = <androidx.exifinterface.media.ExifInterface: java.lang.String[] IFD_FORMAT_NAMES>;

        $r88 = r1.<android.util.Pair: java.lang.Object second>;

        $r89 = (java.lang.Integer) $r88;

        $i33 = virtualinvoke $r89.<java.lang.Integer: int intValue()>();

        $r91 = $r90[$i33];

        $r92 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r91);

        $r150 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.String toString()>();

     label25:
        $r93 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r150);

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r95);

        goto label48;

     label26:
        tableswitch(i49)
        {
            case 1: goto label27;
            case 2: goto label28;
            case 3: goto label29;
            case 4: goto label35;
            case 5: goto label38;
            case 6: goto label47;
            case 7: goto label28;
            case 8: goto label47;
            case 9: goto label32;
            case 10: goto label41;
            case 11: goto label47;
            case 12: goto label44;
            default: goto label47;
        };

     label27:
        $r54 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r55 = $r54[i47];

        $r56 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createByte(java.lang.String)>(r143);

        virtualinvoke $r55.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r142, $r56);

        goto label48;

     label28:
        $r50 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r51 = $r50[i47];

        $r52 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createString(java.lang.String)>(r143);

        virtualinvoke $r51.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r142, $r52);

        goto label48;

     label29:
        r151 = virtualinvoke r143.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(",", -1);

        $i18 = lengthof r151;

        r152 = newarray (int)[$i18];

        i50 = 0;

     label30:
        $i19 = lengthof r151;

        if i50 >= $i19 goto label31;

        $r49 = r151[i50];

        $i20 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r49);

        r152[i50] = $i20;

        i50 = i50 + 1;

        goto label30;

     label31:
        $r44 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r46 = $r44[i47];

        $r45 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r47 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createUShort(int[],java.nio.ByteOrder)>(r152, $r45);

        virtualinvoke $r46.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r142, $r47);

        goto label48;

     label32:
        r153 = virtualinvoke r143.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(",", -1);

        $i8 = lengthof r153;

        r154 = newarray (int)[$i8];

        i51 = 0;

     label33:
        $i9 = lengthof r153;

        if i51 >= $i9 goto label34;

        $r28 = r153[i51];

        $i10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r28);

        r154[i51] = $i10;

        i51 = i51 + 1;

        goto label33;

     label34:
        $r23 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r25 = $r23[i47];

        $r24 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r26 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createSLong(int[],java.nio.ByteOrder)>(r154, $r24);

        virtualinvoke $r25.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r142, $r26);

        goto label48;

     label35:
        r155 = virtualinvoke r143.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(",", -1);

        $i15 = lengthof r155;

        r156 = newarray (long)[$i15];

        i52 = 0;

     label36:
        $i16 = lengthof r155;

        if i52 >= $i16 goto label37;

        $r43 = r155[i52];

        $l17 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r43);

        r156[i52] = $l17;

        i52 = i52 + 1;

        goto label36;

     label37:
        $r38 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r40 = $r38[i47];

        $r39 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r41 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long[],java.nio.ByteOrder)>(r156, $r39);

        virtualinvoke $r40.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r142, $r41);

        goto label48;

     label38:
        r157 = virtualinvoke r143.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(",", -1);

        $i11 = lengthof r157;

        r158 = newarray (androidx.exifinterface.media.ExifInterface$Rational)[$i11];

        i53 = 0;

     label39:
        $i12 = lengthof r157;

        if i53 >= $i12 goto label40;

        $r34 = r157[i53];

        r159 = virtualinvoke $r34.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("/", -1);

        $r35 = new androidx.exifinterface.media.ExifInterface$Rational;

        $r36 = r159[0];

        $d3 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r36);

        $l13 = (long) $d3;

        $r37 = r159[1];

        $d4 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r37);

        $l14 = (long) $d4;

        specialinvoke $r35.<androidx.exifinterface.media.ExifInterface$Rational: void <init>(long,long)>($l13, $l14);

        r158[i53] = $r35;

        i53 = i53 + 1;

        goto label39;

     label40:
        $r29 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r31 = $r29[i47];

        $r30 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r32 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createURational(androidx.exifinterface.media.ExifInterface$Rational[],java.nio.ByteOrder)>(r158, $r30);

        virtualinvoke $r31.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r142, $r32);

        goto label48;

     label41:
        r160 = virtualinvoke r143.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(",", -1);

        $i4 = lengthof r160;

        r161 = newarray (androidx.exifinterface.media.ExifInterface$Rational)[$i4];

        i54 = 0;

     label42:
        $i5 = lengthof r160;

        if i54 >= $i5 goto label43;

        $r19 = r160[i54];

        r162 = virtualinvoke $r19.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("/", -1);

        $r20 = new androidx.exifinterface.media.ExifInterface$Rational;

        $r21 = r162[0];

        $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r21);

        $l6 = (long) $d1;

        $r22 = r162[1];

        $d2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r22);

        $l7 = (long) $d2;

        specialinvoke $r20.<androidx.exifinterface.media.ExifInterface$Rational: void <init>(long,long)>($l6, $l7);

        r161[i54] = $r20;

        i54 = i54 + 1;

        goto label42;

     label43:
        $r14 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r16 = $r14[i47];

        $r15 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r17 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createSRational(androidx.exifinterface.media.ExifInterface$Rational[],java.nio.ByteOrder)>(r161, $r15);

        virtualinvoke $r16.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r142, $r17);

        goto label48;

     label44:
        r163 = virtualinvoke r143.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(",", -1);

        $i2 = lengthof r163;

        r164 = newarray (double)[$i2];

        i55 = 0;

     label45:
        $i3 = lengthof r163;

        if i55 >= $i3 goto label46;

        $r13 = r163[i55];

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r13);

        r164[i55] = $d0;

        i55 = i55 + 1;

        goto label45;

     label46:
        $r8 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r10 = $r8[i47];

        $r9 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r11 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createDouble(double[],java.nio.ByteOrder)>(r164, $r9);

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r142, $r11);

        goto label48;

     label47:
        $z1 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z1 == 0 goto label48;

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Data format isn\'t one of expected formats: ");

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i49);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r61);

        goto label48;

     label48:
        i47 = i47 + 1;

        goto label13;

     label49:
        return;

        catch java.lang.NumberFormatException from label09 to label10 with label11;
    }

    public void resetOrientation()
    {
        androidx.exifinterface.media.ExifInterface r0;
        java.lang.String $r1;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(1);

        virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>("Orientation", $r1);

        return;
    }

    public void rotate(int)
    {
        androidx.exifinterface.media.ExifInterface r0;
        int i0, i1, $i2, $i3, $i4, $i6, $i7, i9, i10, i12, i13, i14, i15, i17;
        java.util.List $r1, $r3, $r5, $r7, $r10, $r12;
        java.lang.Integer $r2, $r4, $r6, $r9, $r11, $r14;
        boolean $z0, $z1;
        java.lang.Object $r8, $r13;
        java.lang.IllegalArgumentException $r15;
        byte $b11, $b16;
        java.lang.String $r16;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        i0 := @parameter0: int;

        $i2 = i0 % 90;

        if $i2 == 0 goto label1;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("degree should be a multiple of 90");

        throw $r15;

     label1:
        i1 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: int getAttributeInt(java.lang.String,int)>("Orientation", 1);

        $r1 = <androidx.exifinterface.media.ExifInterface: java.util.List ROTATION_ORDER>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $z0 = interfaceinvoke $r1.<java.util.List: boolean contains(java.lang.Object)>($r2);

        if $z0 == 0 goto label4;

        $r10 = <androidx.exifinterface.media.ExifInterface: java.util.List ROTATION_ORDER>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        i9 = interfaceinvoke $r10.<java.util.List: int indexOf(java.lang.Object)>($r11);

        $i6 = i0 / 90;

        $i7 = i9 + $i6;

        i10 = $i7 % 4;

        if i10 >= 0 goto label2;

        $b11 = 4;

        goto label3;

     label2:
        $b11 = 0;

     label3:
        i12 = i10 + $b11;

        $r12 = <androidx.exifinterface.media.ExifInterface: java.util.List ROTATION_ORDER>;

        $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(i12);

        $r14 = (java.lang.Integer) $r13;

        i13 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();

        goto label8;

     label4:
        $r3 = <androidx.exifinterface.media.ExifInterface: java.util.List FLIPPED_ROTATION_ORDER>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $z1 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>($r4);

        if $z1 == 0 goto label7;

        $r5 = <androidx.exifinterface.media.ExifInterface: java.util.List FLIPPED_ROTATION_ORDER>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        i14 = interfaceinvoke $r5.<java.util.List: int indexOf(java.lang.Object)>($r6);

        $i3 = i0 / 90;

        $i4 = i14 + $i3;

        i15 = $i4 % 4;

        if i15 >= 0 goto label5;

        $b16 = 4;

        goto label6;

     label5:
        $b16 = 0;

     label6:
        i17 = i15 + $b16;

        $r7 = <androidx.exifinterface.media.ExifInterface: java.util.List FLIPPED_ROTATION_ORDER>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i17);

        $r9 = (java.lang.Integer) $r8;

        i13 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        goto label8;

     label7:
        i13 = 0;

     label8:
        $r16 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i13);

        virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>("Orientation", $r16);

        return;
    }

    public void flipVertically()
    {
        androidx.exifinterface.media.ExifInterface r0;
        int i0;
        byte b1;
        java.lang.String $r1;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        i0 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: int getAttributeInt(java.lang.String,int)>("Orientation", 1);

        tableswitch(i0)
        {
            case 0: goto label09;
            case 1: goto label08;
            case 2: goto label01;
            case 3: goto label02;
            case 4: goto label03;
            case 5: goto label04;
            case 6: goto label05;
            case 7: goto label06;
            case 8: goto label07;
            default: goto label09;
        };

     label01:
        b1 = 3;

        goto label10;

     label02:
        b1 = 2;

        goto label10;

     label03:
        b1 = 1;

        goto label10;

     label04:
        b1 = 8;

        goto label10;

     label05:
        b1 = 7;

        goto label10;

     label06:
        b1 = 6;

        goto label10;

     label07:
        b1 = 5;

        goto label10;

     label08:
        b1 = 4;

        goto label10;

     label09:
        b1 = 0;

     label10:
        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(b1);

        virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>("Orientation", $r1);

        return;
    }

    public void flipHorizontally()
    {
        androidx.exifinterface.media.ExifInterface r0;
        int i0;
        byte b1;
        java.lang.String $r1;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        i0 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: int getAttributeInt(java.lang.String,int)>("Orientation", 1);

        tableswitch(i0)
        {
            case 0: goto label09;
            case 1: goto label08;
            case 2: goto label01;
            case 3: goto label02;
            case 4: goto label03;
            case 5: goto label04;
            case 6: goto label05;
            case 7: goto label06;
            case 8: goto label07;
            default: goto label09;
        };

     label01:
        b1 = 1;

        goto label10;

     label02:
        b1 = 4;

        goto label10;

     label03:
        b1 = 3;

        goto label10;

     label04:
        b1 = 6;

        goto label10;

     label05:
        b1 = 5;

        goto label10;

     label06:
        b1 = 8;

        goto label10;

     label07:
        b1 = 7;

        goto label10;

     label08:
        b1 = 2;

        goto label10;

     label09:
        b1 = 0;

     label10:
        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(b1);

        virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>("Orientation", $r1);

        return;
    }

    public boolean isFlipped()
    {
        androidx.exifinterface.media.ExifInterface r0;
        int i0;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        i0 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: int getAttributeInt(java.lang.String,int)>("Orientation", 1);

        tableswitch(i0)
        {
            case 2: goto label1;
            case 3: goto label2;
            case 4: goto label1;
            case 5: goto label1;
            case 6: goto label2;
            case 7: goto label1;
            default: goto label2;
        };

     label1:
        return 1;

     label2:
        return 0;
    }

    public int getRotationDegrees()
    {
        androidx.exifinterface.media.ExifInterface r0;
        int i0;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        i0 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: int getAttributeInt(java.lang.String,int)>("Orientation", 1);

        tableswitch(i0)
        {
            case 0: goto label4;
            case 1: goto label4;
            case 2: goto label4;
            case 3: goto label2;
            case 4: goto label2;
            case 5: goto label3;
            case 6: goto label1;
            case 7: goto label1;
            case 8: goto label3;
            default: goto label4;
        };

     label1:
        return 90;

     label2:
        return 180;

     label3:
        return 270;

     label4:
        return 0;
    }

    private void removeAttribute(java.lang.String)
    {
        androidx.exifinterface.media.ExifInterface r0;
        java.lang.String r1;
        androidx.exifinterface.media.ExifInterface$ExifTag[][] $r2;
        int $i0, i1;
        java.util.HashMap[] $r3;
        java.util.HashMap $r4;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: java.lang.String;

        i1 = 0;

     label1:
        $r2 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i0 = lengthof $r2;

        if i1 >= $i0 goto label2;

        $r3 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r4 = $r3[i1];

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void loadAttributes(java.io.InputStream)
    {
        androidx.exifinterface.media.ExifInterface r0;
        java.lang.Throwable r1, $r10, $r11, r15;
        androidx.exifinterface.media.ExifInterface$ExifTag[][] $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i11, $i12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.io.BufferedInputStream $r6, r18;
        java.util.HashMap[] $r8;
        java.lang.Object r12;
        androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream r13, r19;
        long $l13;
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r14, r20;
        java.lang.NullPointerException r16;
        java.util.HashMap r17;
        java.io.InputStream r21, r22, r23;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r12 := @parameter0: java.io.InputStream;

        if r12 != null goto label01;

        r16 = new java.lang.NullPointerException;

        specialinvoke r16.<java.lang.NullPointerException: void <init>(java.lang.String)>("inputstream shouldn\'t be null");

        throw r16;

     label01:
        i11 = 0;

     label02:
        $r2 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i0 = lengthof $r2;

        if i11 >= $i0 goto label03;

        $r8 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        r17 = new java.util.HashMap;

        specialinvoke r17.<java.util.HashMap: void <init>()>();

        $r8[i11] = r17;

        i11 = i11 + 1;

        goto label02;

     label03:
        $z0 = r0.<androidx.exifinterface.media.ExifInterface: boolean mIsExifDataOnly>;

        if $z0 != 0 goto label04;

        r18 = new java.io.BufferedInputStream;

        r21 = (java.io.InputStream) r12;

        specialinvoke r18.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>(r21, 5000);

        r12 = r18;

        $r6 = (java.io.BufferedInputStream) r12;

        $i9 = specialinvoke r0.<androidx.exifinterface.media.ExifInterface: int getMimeType(java.io.BufferedInputStream)>($r6);

        r0.<androidx.exifinterface.media.ExifInterface: int mMimeType> = $i9;

     label04:
        $i1 = r0.<androidx.exifinterface.media.ExifInterface: int mMimeType>;

        $z1 = staticinvoke <androidx.exifinterface.media.ExifInterface: boolean shouldSupportSeek(int)>($i1);

        if $z1 == 0 goto label10;

        r19 = new androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream;

        r22 = (java.io.InputStream) r12;

        specialinvoke r19.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: void <init>(java.io.InputStream)>(r22);

        r13 = r19;

        $z2 = r0.<androidx.exifinterface.media.ExifInterface: boolean mIsExifDataOnly>;

        if $z2 == 0 goto label05;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void getStandaloneAttributes(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream)>(r13);

        goto label09;

     label05:
        $i6 = r0.<androidx.exifinterface.media.ExifInterface: int mMimeType>;

        if $i6 != 12 goto label06;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void getHeifAttributes(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream)>(r13);

        goto label09;

     label06:
        $i7 = r0.<androidx.exifinterface.media.ExifInterface: int mMimeType>;

        if $i7 != 7 goto label07;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void getOrfAttributes(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream)>(r13);

        goto label09;

     label07:
        $i8 = r0.<androidx.exifinterface.media.ExifInterface: int mMimeType>;

        if $i8 != 10 goto label08;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void getRw2Attributes(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream)>(r13);

        goto label09;

     label08:
        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void getRawAttributes(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream)>(r13);

     label09:
        $i12 = r0.<androidx.exifinterface.media.ExifInterface: int mOffsetToExifData>;

        $l13 = (long) $i12;

        virtualinvoke r13.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: void seek(long)>($l13);

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void setThumbnailData(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)>(r13);

        goto label14;

     label10:
        r20 = new androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        r23 = (java.io.InputStream) r12;

        specialinvoke r20.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void <init>(java.io.InputStream)>(r23);

        r14 = r20;

        $i2 = r0.<androidx.exifinterface.media.ExifInterface: int mMimeType>;

        if $i2 != 4 goto label11;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void getJpegAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,int,int)>(r14, 0, 0);

        goto label14;

     label11:
        $i3 = r0.<androidx.exifinterface.media.ExifInterface: int mMimeType>;

        if $i3 != 13 goto label12;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void getPngAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)>(r14);

        goto label14;

     label12:
        $i4 = r0.<androidx.exifinterface.media.ExifInterface: int mMimeType>;

        if $i4 != 9 goto label13;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void getRafAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)>(r14);

        goto label14;

     label13:
        $i5 = r0.<androidx.exifinterface.media.ExifInterface: int mMimeType>;

        if $i5 != 14 goto label14;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void getWebpAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)>(r14);

     label14:
        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void addDefaultValuesForCompatibility()>();

        $z6 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z6 == 0 goto label19;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void printAttributes()>();

        goto label19;

     label15:
        $r10 := @caughtexception;

        r15 = $r10;

        $z3 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z3 == 0 goto label16;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ExifInterface", "Invalid image: ExifInterface got an unsupported image format file(ExifInterface supports JPEG and some RAW image formats only) or a corrupted JPEG file to ExifInterface.", r15);

     label16:
        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void addDefaultValuesForCompatibility()>();

        $z4 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z4 == 0 goto label19;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void printAttributes()>();

        goto label19;

     label17:
        $r11 := @caughtexception;

        r1 = $r11;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void addDefaultValuesForCompatibility()>();

        $z5 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z5 == 0 goto label18;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void printAttributes()>();

     label18:
        throw r1;

     label19:
        return;

        catch java.io.IOException from label01 to label14 with label15;
        catch java.lang.UnsupportedOperationException from label01 to label14 with label15;
        catch java.lang.Throwable from label01 to label14 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
    }

    private static boolean isSeekableFD(java.io.FileDescriptor)
    {
        java.io.FileDescriptor r0;
        java.lang.Throwable r1, $r2;
        int $i0, $i1;
        boolean $z0;

        r0 := @parameter0: java.io.FileDescriptor;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label5;

     label1:
        $i1 = <android.system.OsConstants: int SEEK_CUR>;

        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: long lseek(java.io.FileDescriptor,long,int)>(r0, 0L, $i1);

     label2:
        return 1;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        $z0 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z0 == 0 goto label4;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", "The file descriptor for the given input is not seekable");

     label4:
        return 0;

     label5:
        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void printAttributes()
    {
        androidx.exifinterface.media.ExifInterface r0;
        java.util.Iterator r1;
        java.util.Map$Entry r2;
        androidx.exifinterface.media.ExifInterface$ExifAttribute r3;
        java.util.HashMap[] $r4, $r9, $r13;
        int $i0, $i1, i4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r11, $r18, $r19, $r22, $r23, $r25, $r26, $r29, $r30;
        java.util.HashMap $r10, $r14;
        java.lang.String $r12, $r21, $r24, $r28, $r31;
        java.util.Set $r15;
        boolean $z0;
        java.lang.Object $r16, $r17, $r20;
        java.nio.ByteOrder $r27;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        i4 = 0;

     label1:
        $r4 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $i0 = lengthof $r4;

        if i4 >= $i0 goto label4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The size of tag group[");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r9 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r10 = $r9[i4];

        $i1 = virtualinvoke $r10.<java.util.HashMap: int size()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r12);

        $r13 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r14 = $r13[i4];

        $r15 = virtualinvoke $r14.<java.util.HashMap: java.util.Set entrySet()>();

        r1 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r16 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r16;

        $r17 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        r3 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r17;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tagName: ");

        $r20 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r21 = (java.lang.String) $r20;

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", tagType: ");

        $r24 = virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$ExifAttribute: java.lang.String toString()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", tagValue: \'");

        $r27 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r28 = virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$ExifAttribute: java.lang.String getStringValue(java.nio.ByteOrder)>($r27);

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r31);

        goto label2;

     label3:
        i4 = i4 + 1;

        goto label1;

     label4:
        return;
    }

    public void saveAttributes() throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        java.lang.Throwable r1, r2, r3, r4, $r22, $r23, $r24, $r25, $r34, $r41, r49, r50;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean $z0, $z1, $z2, $z3, z4;
        java.io.FileDescriptor $r5, $r8, $r10, $r13, $r15, $r29, $r31;
        java.io.FileInputStream $r6, $r14, $r16, $r26, r44, r51;
        java.lang.String $r7, $r12, $r17, $r19, $r27, $r33, $r38, $r40, $r47;
        java.io.FileOutputStream $r9, $r11, $r30, $r32, r45, $r48, r52;
        java.io.IOException $r18, $r20, $r21, $r28, $r35, $r42;
        java.lang.StringBuilder $r36, $r37, $r39;
        byte[] $r43;
        java.io.File r46;
        java.io.BufferedInputStream r53, $r55;
        java.io.BufferedOutputStream r54, $r56;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        $i0 = r0.<androidx.exifinterface.media.ExifInterface: int mMimeType>;

        $z0 = staticinvoke <androidx.exifinterface.media.ExifInterface: boolean isSupportedFormatForSavingAttributes(int)>($i0);

        if $z0 != 0 goto label01;

        $r21 = new java.io.IOException;

        specialinvoke $r21.<java.io.IOException: void <init>(java.lang.String)>("ExifInterface only supports saving attributes for JPEG, PNG, and WebP formats.");

        throw $r21;

     label01:
        $r5 = r0.<androidx.exifinterface.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor>;

        if $r5 != null goto label02;

        $r19 = r0.<androidx.exifinterface.media.ExifInterface: java.lang.String mFilename>;

        if $r19 != null goto label02;

        $r20 = new java.io.IOException;

        specialinvoke $r20.<java.io.IOException: void <init>(java.lang.String)>("ExifInterface does not support saving attributes for the current input.");

        throw $r20;

     label02:
        $z1 = r0.<androidx.exifinterface.media.ExifInterface: boolean mHasThumbnail>;

        if $z1 == 0 goto label03;

        $z2 = r0.<androidx.exifinterface.media.ExifInterface: boolean mHasThumbnailStrips>;

        if $z2 == 0 goto label03;

        $z3 = r0.<androidx.exifinterface.media.ExifInterface: boolean mAreThumbnailStripsConsecutive>;

        if $z3 != 0 goto label03;

        $r18 = new java.io.IOException;

        specialinvoke $r18.<java.io.IOException: void <init>(java.lang.String)>("ExifInterface does not support saving attributes when the image file has non-consecutive thumbnail strips");

        throw $r18;

     label03:
        r0.<androidx.exifinterface.media.ExifInterface: boolean mModified> = 1;

        $r43 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: byte[] getThumbnail()>();

        r0.<androidx.exifinterface.media.ExifInterface: byte[] mThumbnailBytes> = $r43;

        r44 = null;

        r45 = null;

     label04:
        r46 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>("temp", "tmp");

        $r47 = r0.<androidx.exifinterface.media.ExifInterface: java.lang.String mFilename>;

        if $r47 == null goto label05;

        $r16 = new java.io.FileInputStream;

        $r17 = r0.<androidx.exifinterface.media.ExifInterface: java.lang.String mFilename>;

        specialinvoke $r16.<java.io.FileInputStream: void <init>(java.lang.String)>($r17);

        r44 = $r16;

        goto label06;

     label05:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 21 goto label06;

        $r13 = r0.<androidx.exifinterface.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor>;

        $i6 = <android.system.OsConstants: int SEEK_SET>;

        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: long lseek(java.io.FileDescriptor,long,int)>($r13, 0L, $i6);

        $r14 = new java.io.FileInputStream;

        $r15 = r0.<androidx.exifinterface.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor>;

        specialinvoke $r14.<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>($r15);

        r44 = $r14;

     label06:
        $r48 = new java.io.FileOutputStream;

        specialinvoke $r48.<java.io.FileOutputStream: void <init>(java.io.File)>(r46);

        r45 = $r48;

        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: int copy(java.io.InputStream,java.io.OutputStream)>(r44, r45);

     label07:
        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: void closeQuietly(java.io.Closeable)>(r44);

        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: void closeQuietly(java.io.Closeable)>(r45);

        goto label11;

     label08:
        $r41 := @caughtexception;

        r49 = $r41;

        $r42 = new java.io.IOException;

        specialinvoke $r42.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to copy original file to temp file", r49);

        throw $r42;

     label09:
        $r22 := @caughtexception;

        r50 = $r22;

     label10:
        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: void closeQuietly(java.io.Closeable)>(r44);

        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: void closeQuietly(java.io.Closeable)>(r45);

        throw r50;

     label11:
        r51 = null;

        r52 = null;

        r53 = null;

        r54 = null;

        z4 = 0;

     label12:
        $r6 = new java.io.FileInputStream;

        specialinvoke $r6.<java.io.FileInputStream: void <init>(java.io.File)>(r46);

        r51 = $r6;

        $r7 = r0.<androidx.exifinterface.media.ExifInterface: java.lang.String mFilename>;

        if $r7 == null goto label13;

        $r11 = new java.io.FileOutputStream;

        $r12 = r0.<androidx.exifinterface.media.ExifInterface: java.lang.String mFilename>;

        specialinvoke $r11.<java.io.FileOutputStream: void <init>(java.lang.String)>($r12);

        r52 = $r11;

        goto label14;

     label13:
        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 21 goto label14;

        $r8 = r0.<androidx.exifinterface.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor>;

        $i5 = <android.system.OsConstants: int SEEK_SET>;

        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: long lseek(java.io.FileDescriptor,long,int)>($r8, 0L, $i5);

        $r9 = new java.io.FileOutputStream;

        $r10 = r0.<androidx.exifinterface.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor>;

        specialinvoke $r9.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>($r10);

        r52 = $r9;

     label14:
        $r55 = new java.io.BufferedInputStream;

        specialinvoke $r55.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r51);

        r53 = $r55;

        $r56 = new java.io.BufferedOutputStream;

        specialinvoke $r56.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(r52);

        r54 = $r56;

        $i9 = r0.<androidx.exifinterface.media.ExifInterface: int mMimeType>;

        if $i9 != 4 goto label15;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void saveJpegAttributes(java.io.InputStream,java.io.OutputStream)>(r53, r54);

        goto label17;

     label15:
        $i3 = r0.<androidx.exifinterface.media.ExifInterface: int mMimeType>;

        if $i3 != 13 goto label16;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void savePngAttributes(java.io.InputStream,java.io.OutputStream)>(r53, r54);

        goto label17;

     label16:
        $i4 = r0.<androidx.exifinterface.media.ExifInterface: int mMimeType>;

        if $i4 != 14 goto label17;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void saveWebpAttributes(java.io.InputStream,java.io.OutputStream)>(r53, r54);

     label17:
        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: void closeQuietly(java.io.Closeable)>(r53);

        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: void closeQuietly(java.io.Closeable)>(r54);

        if 0 != 0 goto label30;

        virtualinvoke r46.<java.io.File: boolean delete()>();

        goto label30;

     label18:
        $r25 := @caughtexception;

        r1 = $r25;

     label19:
        $r26 = new java.io.FileInputStream;

        specialinvoke $r26.<java.io.FileInputStream: void <init>(java.io.File)>(r46);

        r51 = $r26;

        $r27 = r0.<androidx.exifinterface.media.ExifInterface: java.lang.String mFilename>;

        if $r27 == null goto label20;

        $r32 = new java.io.FileOutputStream;

        $r33 = r0.<androidx.exifinterface.media.ExifInterface: java.lang.String mFilename>;

        specialinvoke $r32.<java.io.FileOutputStream: void <init>(java.lang.String)>($r33);

        r52 = $r32;

        goto label21;

     label20:
        $i7 = <android.os.Build$VERSION: int SDK_INT>;

        if $i7 < 21 goto label21;

        $r29 = r0.<androidx.exifinterface.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor>;

        $i8 = <android.system.OsConstants: int SEEK_SET>;

        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: long lseek(java.io.FileDescriptor,long,int)>($r29, 0L, $i8);

        $r30 = new java.io.FileOutputStream;

        $r31 = r0.<androidx.exifinterface.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor>;

        specialinvoke $r30.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>($r31);

        r52 = $r30;

     label21:
        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: int copy(java.io.InputStream,java.io.OutputStream)>(r51, r52);

     label22:
        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: void closeQuietly(java.io.Closeable)>(r51);

        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: void closeQuietly(java.io.Closeable)>(r52);

        goto label26;

     label23:
        $r34 := @caughtexception;

        r2 = $r34;

        z4 = 1;

        $r35 = new java.io.IOException;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to save new file. Original file is stored in ");

        $r38 = virtualinvoke r46.<java.io.File: java.lang.String getAbsolutePath()>();

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r35.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>($r40, r2);

        throw $r35;

     label24:
        $r24 := @caughtexception;

        r3 = $r24;

     label25:
        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: void closeQuietly(java.io.Closeable)>(r51);

        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: void closeQuietly(java.io.Closeable)>(r52);

        throw r3;

     label26:
        $r28 = new java.io.IOException;

        specialinvoke $r28.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to save new file", r1);

        throw $r28;

     label27:
        $r23 := @caughtexception;

        r4 = $r23;

     label28:
        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: void closeQuietly(java.io.Closeable)>(r53);

        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: void closeQuietly(java.io.Closeable)>(r54);

        if z4 != 0 goto label29;

        virtualinvoke r46.<java.io.File: boolean delete()>();

     label29:
        throw r4;

     label30:
        r0.<androidx.exifinterface.media.ExifInterface: byte[] mThumbnailBytes> = null;

        return;

        catch java.lang.Exception from label04 to label07 with label08;
        catch java.lang.Throwable from label04 to label07 with label09;
        catch java.lang.Throwable from label08 to label10 with label09;
        catch java.lang.Exception from label12 to label17 with label18;
        catch java.lang.Exception from label19 to label22 with label23;
        catch java.lang.Throwable from label19 to label22 with label24;
        catch java.lang.Throwable from label23 to label25 with label24;
        catch java.lang.Throwable from label12 to label17 with label27;
        catch java.lang.Throwable from label18 to label28 with label27;
    }

    public boolean hasThumbnail()
    {
        androidx.exifinterface.media.ExifInterface r0;
        boolean $z0;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        $z0 = r0.<androidx.exifinterface.media.ExifInterface: boolean mHasThumbnail>;

        return $z0;
    }

    public boolean hasAttribute(java.lang.String)
    {
        androidx.exifinterface.media.ExifInterface r0;
        java.lang.String r1;
        androidx.exifinterface.media.ExifInterface$ExifAttribute $r2;
        boolean $z0;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifAttribute getExifAttribute(java.lang.String)>(r1);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public byte[] getThumbnail()
    {
        androidx.exifinterface.media.ExifInterface r0;
        int $i0, $i1;
        byte[] $r1;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        $i0 = r0.<androidx.exifinterface.media.ExifInterface: int mThumbnailCompression>;

        if $i0 == 6 goto label1;

        $i1 = r0.<androidx.exifinterface.media.ExifInterface: int mThumbnailCompression>;

        if $i1 != 7 goto label2;

     label1:
        $r1 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: byte[] getThumbnailBytes()>();

        return $r1;

     label2:
        return null;
    }

    public byte[] getThumbnailBytes()
    {
        androidx.exifinterface.media.ExifInterface r0;
        byte[] r1, $r3, $r13, r18;
        java.lang.Throwable r2, $r14, $r15, r19;
        boolean $z0, $z1;
        android.content.res.AssetManager$AssetInputStream $r4;
        java.lang.String $r5, $r12;
        int $i0, $i1, $i2, $i3, $i6, $i7, $i8, $i11, $i12, $i13, $i14;
        long $l4, $l5, $l9;
        byte $b10;
        java.io.FileDescriptor $r9, r17;
        java.lang.Object r16;
        java.io.FileInputStream r20, r21;
        java.io.FileNotFoundException r22;
        java.io.IOException r23, r24;
        java.io.InputStream r25, r26, r28, r29;
        java.io.Closeable r27, r30, r31, r32;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        $z0 = r0.<androidx.exifinterface.media.ExifInterface: boolean mHasThumbnail>;

        if $z0 != 0 goto label01;

        return null;

     label01:
        $r3 = r0.<androidx.exifinterface.media.ExifInterface: byte[] mThumbnailBytes>;

        if $r3 == null goto label02;

        $r13 = r0.<androidx.exifinterface.media.ExifInterface: byte[] mThumbnailBytes>;

        return $r13;

     label02:
        r16 = null;

        r17 = null;

     label03:
        $r4 = r0.<androidx.exifinterface.media.ExifInterface: android.content.res.AssetManager$AssetInputStream mAssetInputStream>;

        if $r4 == null goto label07;

        r16 = r0.<androidx.exifinterface.media.ExifInterface: android.content.res.AssetManager$AssetInputStream mAssetInputStream>;

        r25 = (java.io.InputStream) r16;

        $z1 = virtualinvoke r25.<java.io.InputStream: boolean markSupported()>();

        if $z1 == 0 goto label04;

        r26 = (java.io.InputStream) r16;

        virtualinvoke r26.<java.io.InputStream: void reset()>();

        goto label09;

     label04:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", "Cannot read thumbnail from inputstream without mark/reset support");

     label05:
        r27 = (java.io.Closeable) r16;

        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: void closeQuietly(java.io.Closeable)>(r27);

        if null == null goto label06;

        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: void closeFileDescriptor(java.io.FileDescriptor)>(null);

     label06:
        return null;

     label07:
        $r5 = r0.<androidx.exifinterface.media.ExifInterface: java.lang.String mFilename>;

        if $r5 == null goto label08;

        r20 = new java.io.FileInputStream;

        $r12 = r0.<androidx.exifinterface.media.ExifInterface: java.lang.String mFilename>;

        specialinvoke r20.<java.io.FileInputStream: void <init>(java.lang.String)>($r12);

        r16 = r20;

        goto label09;

     label08:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label09;

        $r9 = r0.<androidx.exifinterface.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor>;

        r17 = staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: java.io.FileDescriptor dup(java.io.FileDescriptor)>($r9);

        $i14 = <android.system.OsConstants: int SEEK_SET>;

        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: long lseek(java.io.FileDescriptor,long,int)>(r17, 0L, $i14);

        r21 = new java.io.FileInputStream;

        specialinvoke r21.<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>(r17);

        r16 = r21;

     label09:
        if r16 != null goto label10;

        r22 = new java.io.FileNotFoundException;

        specialinvoke r22.<java.io.FileNotFoundException: void <init>()>();

        throw r22;

     label10:
        $i2 = r0.<androidx.exifinterface.media.ExifInterface: int mThumbnailOffset>;

        $i1 = r0.<androidx.exifinterface.media.ExifInterface: int mOffsetToExifData>;

        $i3 = $i2 + $i1;

        $l4 = (long) $i3;

        r28 = (java.io.InputStream) r16;

        $l5 = virtualinvoke r28.<java.io.InputStream: long skip(long)>($l4);

        $i7 = r0.<androidx.exifinterface.media.ExifInterface: int mThumbnailOffset>;

        $i6 = r0.<androidx.exifinterface.media.ExifInterface: int mOffsetToExifData>;

        $i8 = $i7 + $i6;

        $l9 = (long) $i8;

        $b10 = $l5 cmp $l9;

        if $b10 == 0 goto label11;

        r23 = new java.io.IOException;

        specialinvoke r23.<java.io.IOException: void <init>(java.lang.String)>("Corrupted image");

        throw r23;

     label11:
        $i11 = r0.<androidx.exifinterface.media.ExifInterface: int mThumbnailLength>;

        r18 = newarray (byte)[$i11];

        r29 = (java.io.InputStream) r16;

        $i12 = virtualinvoke r29.<java.io.InputStream: int read(byte[])>(r18);

        $i13 = r0.<androidx.exifinterface.media.ExifInterface: int mThumbnailLength>;

        if $i12 == $i13 goto label12;

        r24 = new java.io.IOException;

        specialinvoke r24.<java.io.IOException: void <init>(java.lang.String)>("Corrupted image");

        throw r24;

     label12:
        r0.<androidx.exifinterface.media.ExifInterface: byte[] mThumbnailBytes> = r18;

        r1 = r18;

     label13:
        r30 = (java.io.Closeable) r16;

        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: void closeQuietly(java.io.Closeable)>(r30);

        if r17 == null goto label14;

        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: void closeFileDescriptor(java.io.FileDescriptor)>(r17);

     label14:
        return r1;

     label15:
        $r15 := @caughtexception;

        r19 = $r15;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("ExifInterface", "Encountered exception while getting thumbnail", r19);

     label16:
        r31 = (java.io.Closeable) r16;

        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: void closeQuietly(java.io.Closeable)>(r31);

        if r17 == null goto label20;

        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: void closeFileDescriptor(java.io.FileDescriptor)>(r17);

        goto label20;

     label17:
        $r14 := @caughtexception;

        r2 = $r14;

     label18:
        r32 = (java.io.Closeable) r16;

        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: void closeQuietly(java.io.Closeable)>(r32);

        if r17 == null goto label19;

        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: void closeFileDescriptor(java.io.FileDescriptor)>(r17);

     label19:
        throw r2;

     label20:
        return null;

        catch java.lang.Exception from label03 to label05 with label15;
        catch java.lang.Exception from label07 to label13 with label15;
        catch java.lang.Throwable from label03 to label05 with label17;
        catch java.lang.Throwable from label07 to label13 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    public android.graphics.Bitmap getThumbnailBitmap()
    {
        androidx.exifinterface.media.ExifInterface r0;
        int[] r1;
        byte b0, $b11, $b15, $b20;
        androidx.exifinterface.media.ExifInterface$ExifAttribute r2, r21;
        int i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i16, $i17, $i18, $i19, $i21, $i22, i23;
        boolean $z0;
        byte[] $r3, $r4, $r6, $r17, $r18, $r19, $r20;
        android.graphics.Bitmap $r5, $r16;
        java.util.HashMap[] $r7, $r10;
        java.util.HashMap $r8, $r11;
        java.lang.Object $r9, $r12;
        java.nio.ByteOrder $r13, $r14;
        android.graphics.Bitmap$Config $r15;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        $z0 = r0.<androidx.exifinterface.media.ExifInterface: boolean mHasThumbnail>;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = r0.<androidx.exifinterface.media.ExifInterface: byte[] mThumbnailBytes>;

        if $r3 != null goto label2;

        $r20 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: byte[] getThumbnailBytes()>();

        r0.<androidx.exifinterface.media.ExifInterface: byte[] mThumbnailBytes> = $r20;

     label2:
        $i3 = r0.<androidx.exifinterface.media.ExifInterface: int mThumbnailCompression>;

        if $i3 == 6 goto label3;

        $i5 = r0.<androidx.exifinterface.media.ExifInterface: int mThumbnailCompression>;

        if $i5 != 7 goto label4;

     label3:
        $r4 = r0.<androidx.exifinterface.media.ExifInterface: byte[] mThumbnailBytes>;

        $i4 = r0.<androidx.exifinterface.media.ExifInterface: int mThumbnailLength>;

        $r5 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>($r4, 0, $i4);

        return $r5;

     label4:
        $i6 = r0.<androidx.exifinterface.media.ExifInterface: int mThumbnailCompression>;

        if $i6 != 1 goto label7;

        $r6 = r0.<androidx.exifinterface.media.ExifInterface: byte[] mThumbnailBytes>;

        $i7 = lengthof $r6;

        $i8 = $i7 / 3;

        r1 = newarray (int)[$i8];

        b0 = 0;

        i23 = 0;

     label5:
        $i9 = lengthof r1;

        if i23 >= $i9 goto label6;

        $r17 = r0.<androidx.exifinterface.media.ExifInterface: byte[] mThumbnailBytes>;

        $i10 = 3 * i23;

        $b11 = $r17[$i10];

        $i12 = $b11 << 16;

        $i17 = b0 + $i12;

        $r18 = r0.<androidx.exifinterface.media.ExifInterface: byte[] mThumbnailBytes>;

        $i13 = 3 * i23;

        $i14 = $i13 + 1;

        $b15 = $r18[$i14];

        $i16 = $b15 << 8;

        $i21 = $i17 + $i16;

        $r19 = r0.<androidx.exifinterface.media.ExifInterface: byte[] mThumbnailBytes>;

        $i18 = 3 * i23;

        $i19 = $i18 + 2;

        $b20 = $r19[$i19];

        $i22 = $i21 + $b20;

        r1[i23] = $i22;

        i23 = i23 + 1;

        goto label5;

     label6:
        $r7 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r8 = $r7[4];

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ThumbnailImageLength");

        r21 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r9;

        $r10 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r11 = $r10[4];

        $r12 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ThumbnailImageWidth");

        r2 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r12;

        if r21 == null goto label7;

        if r2 == null goto label7;

        $r13 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i1 = virtualinvoke r21.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r13);

        $r14 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i2 = virtualinvoke r2.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r14);

        $r15 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r16 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap$Config)>(r1, i2, i1, $r15);

        return $r16;

     label7:
        return null;
    }

    public boolean isThumbnailCompressed()
    {
        androidx.exifinterface.media.ExifInterface r0;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        $z0 = r0.<androidx.exifinterface.media.ExifInterface: boolean mHasThumbnail>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i0 = r0.<androidx.exifinterface.media.ExifInterface: int mThumbnailCompression>;

        if $i0 == 6 goto label2;

        $i1 = r0.<androidx.exifinterface.media.ExifInterface: int mThumbnailCompression>;

        if $i1 != 7 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public long[] getThumbnailRange()
    {
        androidx.exifinterface.media.ExifInterface r0;
        boolean $z0, $z1, $z2, $z3;
        long[] $r1;
        int $i0, $i1, $i2, $i4;
        long $l3, $l5;
        java.lang.IllegalStateException $r2;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        $z0 = r0.<androidx.exifinterface.media.ExifInterface: boolean mModified>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The underlying file has been modified since being parsed");

        throw $r2;

     label1:
        $z1 = r0.<androidx.exifinterface.media.ExifInterface: boolean mHasThumbnail>;

        if $z1 == 0 goto label3;

        $z2 = r0.<androidx.exifinterface.media.ExifInterface: boolean mHasThumbnailStrips>;

        if $z2 == 0 goto label2;

        $z3 = r0.<androidx.exifinterface.media.ExifInterface: boolean mAreThumbnailStripsConsecutive>;

        if $z3 != 0 goto label2;

        return null;

     label2:
        $r1 = newarray (long)[2];

        $i1 = r0.<androidx.exifinterface.media.ExifInterface: int mThumbnailOffset>;

        $i0 = r0.<androidx.exifinterface.media.ExifInterface: int mOffsetToExifData>;

        $i2 = $i1 + $i0;

        $l3 = (long) $i2;

        $r1[0] = $l3;

        $i4 = r0.<androidx.exifinterface.media.ExifInterface: int mThumbnailLength>;

        $l5 = (long) $i4;

        $r1[1] = $l5;

        return $r1;

     label3:
        return null;
    }

    public long[] getAttributeRange(java.lang.String)
    {
        androidx.exifinterface.media.ExifInterface r0;
        java.lang.String r1;
        androidx.exifinterface.media.ExifInterface$ExifAttribute r2;
        boolean $z0;
        long[] $r3;
        long $l0, $l2;
        byte[] $r4;
        int $i1;
        java.lang.IllegalStateException $r5;
        java.lang.NullPointerException $r6;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("tag shouldn\'t be null");

        throw $r6;

     label1:
        $z0 = r0.<androidx.exifinterface.media.ExifInterface: boolean mModified>;

        if $z0 == 0 goto label2;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The underlying file has been modified since being parsed");

        throw $r5;

     label2:
        r2 = specialinvoke r0.<androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifAttribute getExifAttribute(java.lang.String)>(r1);

        if r2 == null goto label3;

        $r3 = newarray (long)[2];

        $l0 = r2.<androidx.exifinterface.media.ExifInterface$ExifAttribute: long bytesOffset>;

        $r3[0] = $l0;

        $r4 = r2.<androidx.exifinterface.media.ExifInterface$ExifAttribute: byte[] bytes>;

        $i1 = lengthof $r4;

        $l2 = (long) $i1;

        $r3[1] = $l2;

        return $r3;

     label3:
        return null;
    }

    public byte[] getAttributeBytes(java.lang.String)
    {
        androidx.exifinterface.media.ExifInterface r0;
        java.lang.String r1;
        androidx.exifinterface.media.ExifInterface$ExifAttribute r2;
        byte[] $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("tag shouldn\'t be null");

        throw $r4;

     label1:
        r2 = specialinvoke r0.<androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifAttribute getExifAttribute(java.lang.String)>(r1);

        if r2 == null goto label2;

        $r3 = r2.<androidx.exifinterface.media.ExifInterface$ExifAttribute: byte[] bytes>;

        return $r3;

     label2:
        return null;
    }

    public boolean getLatLong(float[])
    {
        androidx.exifinterface.media.ExifInterface r0;
        float[] r1;
        double[] r2;
        double $d0, $d1;
        float $f0, $f1;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: float[];

        r2 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: double[] getLatLong()>();

        if r2 != null goto label1;

        return 0;

     label1:
        $d0 = r2[0];

        $f0 = (float) $d0;

        r1[0] = $f0;

        $d1 = r2[1];

        $f1 = (float) $d1;

        r1[1] = $f1;

        return 1;
    }

    public double[] getLatLong()
    {
        androidx.exifinterface.media.ExifInterface r0;
        java.lang.String r1, r2, r3, r4, $r10, $r12;
        double d0, d1;
        double[] $r5;
        java.lang.Throwable $r6, r13;
        java.lang.StringBuilder $r7, $r8, $r11;
        java.lang.Object[] $r9;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("GPSLatitude");

        r2 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("GPSLatitudeRef");

        r3 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("GPSLongitude");

        r4 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("GPSLongitudeRef");

        if r1 == null goto label4;

        if r2 == null goto label4;

        if r3 == null goto label4;

        if r4 == null goto label4;

     label1:
        d1 = staticinvoke <androidx.exifinterface.media.ExifInterface: double convertRationalLatLonToDouble(java.lang.String,java.lang.String)>(r1, r2);

        d0 = staticinvoke <androidx.exifinterface.media.ExifInterface: double convertRationalLatLonToDouble(java.lang.String,java.lang.String)>(r3, r4);

        $r5 = newarray (double)[2];

        $r5[0] = d1;

        $r5[1] = d0;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r13 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Latitude/longitude values are not parsable. ");

        $r9 = newarray (java.lang.Object)[4];

        $r9[0] = r1;

        $r9[1] = r2;

        $r9[2] = r3;

        $r9[3] = r4;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("latValue=%s, latRef=%s, lngValue=%s, lngRef=%s", $r9);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", $r12);

     label4:
        return null;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public void setGpsInfo(android.location.Location)
    {
        androidx.exifinterface.media.ExifInterface r0;
        android.location.Location r1;
        java.lang.String[] r2;
        java.lang.String $r3, $r6, $r9, $r10, $r11;
        double $d0, $d1, $d2, $d3;
        androidx.exifinterface.media.ExifInterface$Rational $r4;
        float $f0, $f1, $f2, $f3;
        java.util.concurrent.TimeUnit $r5;
        long $l0, $l1;
        java.util.Date $r7;
        java.text.SimpleDateFormat $r8;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: android.location.Location;

        if r1 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r1.<android.location.Location: java.lang.String getProvider()>();

        virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>("GPSProcessingMethod", $r3);

        $d0 = virtualinvoke r1.<android.location.Location: double getLatitude()>();

        $d1 = virtualinvoke r1.<android.location.Location: double getLongitude()>();

        virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: void setLatLong(double,double)>($d0, $d1);

        $d2 = virtualinvoke r1.<android.location.Location: double getAltitude()>();

        virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: void setAltitude(double)>($d2);

        virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>("GPSSpeedRef", "K");

        $r4 = new androidx.exifinterface.media.ExifInterface$Rational;

        $f0 = virtualinvoke r1.<android.location.Location: float getSpeed()>();

        $r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit HOURS>;

        $l0 = virtualinvoke $r5.<java.util.concurrent.TimeUnit: long toSeconds(long)>(1L);

        $f1 = (float) $l0;

        $f2 = $f0 * $f1;

        $f3 = $f2 / 1000.0F;

        $d3 = (double) $f3;

        specialinvoke $r4.<androidx.exifinterface.media.ExifInterface$Rational: void <init>(double)>($d3);

        $r6 = virtualinvoke $r4.<androidx.exifinterface.media.ExifInterface$Rational: java.lang.String toString()>();

        virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>("GPSSpeed", $r6);

        $r8 = <androidx.exifinterface.media.ExifInterface: java.text.SimpleDateFormat sFormatterPrimary>;

        $r7 = new java.util.Date;

        $l1 = virtualinvoke r1.<android.location.Location: long getTime()>();

        specialinvoke $r7.<java.util.Date: void <init>(long)>($l1);

        $r9 = virtualinvoke $r8.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r7);

        r2 = virtualinvoke $r9.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("\\s+", -1);

        $r10 = r2[0];

        virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>("GPSDateStamp", $r10);

        $r11 = r2[1];

        virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>("GPSTimeStamp", $r11);

        return;
    }

    public void setLatLong(double, double)
    {
        androidx.exifinterface.media.ExifInterface r0;
        double d0, d1, $d2, $d3;
        byte $b0, $b1, $b2, $b3, $b4, $b5;
        boolean $z0, $z1;
        java.lang.String $r1, $r2, $r12, $r18, $r19, $r20;
        java.lang.IllegalArgumentException $r7, $r13;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r14, $r15, $r16, $r17;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $b0 = d0 cmpg -90.0;

        if $b0 < 0 goto label1;

        $b1 = d0 cmpl 90.0;

        if $b1 > 0 goto label1;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0);

        if $z0 == 0 goto label2;

     label1:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Latitude value ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not valid.");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r7;

     label2:
        $b2 = d1 cmpg -180.0;

        if $b2 < 0 goto label3;

        $b3 = d1 cmpl 180.0;

        if $b3 > 0 goto label3;

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1);

        if $z1 == 0 goto label4;

     label3:
        $r13 = new java.lang.IllegalArgumentException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Longitude value ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not valid.");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r13;

     label4:
        $b4 = d0 cmpl 0.0;

        if $b4 < 0 goto label5;

        $r19 = "N";

        goto label6;

     label5:
        $r19 = "S";

     label6:
        virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>("GPSLatitudeRef", $r19);

        $d2 = staticinvoke <java.lang.Math: double abs(double)>(d0);

        $r1 = specialinvoke r0.<androidx.exifinterface.media.ExifInterface: java.lang.String convertDecimalDegree(double)>($d2);

        virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>("GPSLatitude", $r1);

        $b5 = d1 cmpl 0.0;

        if $b5 < 0 goto label7;

        $r20 = "E";

        goto label8;

     label7:
        $r20 = "W";

     label8:
        virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>("GPSLongitudeRef", $r20);

        $d3 = staticinvoke <java.lang.Math: double abs(double)>(d1);

        $r2 = specialinvoke r0.<androidx.exifinterface.media.ExifInterface: java.lang.String convertDecimalDegree(double)>($d3);

        virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>("GPSLongitude", $r2);

        return;
    }

    public double getAltitude(double)
    {
        androidx.exifinterface.media.ExifInterface r0;
        double d0, d1, $d2, $d3;
        int i0;
        byte $b1, $b2;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        d0 := @parameter0: double;

        d1 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: double getAttributeDouble(java.lang.String,double)>("GPSAltitude", -1.0);

        i0 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: int getAttributeInt(java.lang.String,int)>("GPSAltitudeRef", -1);

        $b1 = d1 cmpl 0.0;

        if $b1 < 0 goto label3;

        if i0 < 0 goto label3;

        if i0 != 1 goto label1;

        $b2 = -1;

        goto label2;

     label1:
        $b2 = 1;

     label2:
        $d2 = (double) $b2;

        $d3 = d1 * $d2;

        return $d3;

     label3:
        return d0;
    }

    public void setAltitude(double)
    {
        androidx.exifinterface.media.ExifInterface r0;
        double d0, $d1;
        java.lang.String r1, $r3, $r4;
        byte $b0;
        androidx.exifinterface.media.ExifInterface$Rational $r2;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        d0 := @parameter0: double;

        $b0 = d0 cmpl 0.0;

        if $b0 < 0 goto label1;

        $r4 = "0";

        goto label2;

     label1:
        $r4 = "1";

     label2:
        r1 = $r4;

        $r2 = new androidx.exifinterface.media.ExifInterface$Rational;

        $d1 = staticinvoke <java.lang.Math: double abs(double)>(d0);

        specialinvoke $r2.<androidx.exifinterface.media.ExifInterface$Rational: void <init>(double)>($d1);

        $r3 = virtualinvoke $r2.<androidx.exifinterface.media.ExifInterface$Rational: java.lang.String toString()>();

        virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>("GPSAltitude", $r3);

        virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>("GPSAltitudeRef", r1);

        return;
    }

    public void setDateTime(java.lang.Long)
    {
        androidx.exifinterface.media.ExifInterface r0;
        java.lang.Long r1;
        long l0, $l1, $l3, $l4;
        byte $b2;
        java.util.Date $r2;
        java.text.SimpleDateFormat $r3;
        java.lang.String $r4, r10;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.IllegalArgumentException $r8;
        java.lang.NullPointerException $r9;
        int i5;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: java.lang.Long;

        if r1 != null goto label1;

        $r9 = new java.lang.NullPointerException;

        specialinvoke $r9.<java.lang.NullPointerException: void <init>(java.lang.String)>("Timestamp should not be null.");

        throw $r9;

     label1:
        $l1 = virtualinvoke r1.<java.lang.Long: long longValue()>();

        $b2 = $l1 cmp 0L;

        if $b2 >= 0 goto label2;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Timestamp should a positive value.");

        throw $r8;

     label2:
        $l3 = virtualinvoke r1.<java.lang.Long: long longValue()>();

        l0 = $l3 % 1000L;

        r10 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        i5 = virtualinvoke r10.<java.lang.String: int length()>();

     label3:
        if i5 >= 3 goto label4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        i5 = i5 + 1;

        goto label3;

     label4:
        $r3 = <androidx.exifinterface.media.ExifInterface: java.text.SimpleDateFormat sFormatterPrimary>;

        $r2 = new java.util.Date;

        $l4 = virtualinvoke r1.<java.lang.Long: long longValue()>();

        specialinvoke $r2.<java.util.Date: void <init>(long)>($l4);

        $r4 = virtualinvoke $r3.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r2);

        virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>("DateTime", $r4);

        virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>("SubSecTime", r10);

        return;
    }

    public java.lang.Long getDateTime()
    {
        androidx.exifinterface.media.ExifInterface r0;
        java.lang.String $r1, $r2, $r3;
        java.lang.Long $r4;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        $r1 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("DateTime");

        $r2 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("SubSecTime");

        $r3 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("OffsetTime");

        $r4 = staticinvoke <androidx.exifinterface.media.ExifInterface: java.lang.Long parseDateTime(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

        return $r4;
    }

    public java.lang.Long getDateTimeDigitized()
    {
        androidx.exifinterface.media.ExifInterface r0;
        java.lang.String $r1, $r2, $r3;
        java.lang.Long $r4;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        $r1 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("DateTimeDigitized");

        $r2 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("SubSecTimeDigitized");

        $r3 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("OffsetTimeDigitized");

        $r4 = staticinvoke <androidx.exifinterface.media.ExifInterface: java.lang.Long parseDateTime(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

        return $r4;
    }

    public java.lang.Long getDateTimeOriginal()
    {
        androidx.exifinterface.media.ExifInterface r0;
        java.lang.String $r1, $r2, $r3;
        java.lang.Long $r4;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        $r1 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("DateTimeOriginal");

        $r2 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("SubSecTimeOriginal");

        $r3 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("OffsetTimeOriginal");

        $r4 = staticinvoke <androidx.exifinterface.media.ExifInterface: java.lang.Long parseDateTime(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

        return $r4;
    }

    private static java.lang.Long parseDateTime(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, r4, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        java.text.ParsePosition r3, $r7;
        int i0, i1, $i3, $i4, $i5, $i6, $i7;
        java.util.regex.Pattern $r5;
        java.util.regex.Matcher $r6;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.text.SimpleDateFormat $r8, $r17;
        java.lang.Long $r9;
        long $l2, $l8, $l9, l10;
        java.lang.Throwable $r18, r20;
        java.util.Date r19;
        byte $b11;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        if r0 == null goto label01;

        $r5 = <androidx.exifinterface.media.ExifInterface: java.util.regex.Pattern NON_ZERO_TIME_PATTERN>;

        $r6 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z0 = virtualinvoke $r6.<java.util.regex.Matcher: boolean matches()>();

        if $z0 != 0 goto label02;

     label01:
        return null;

     label02:
        $r7 = new java.text.ParsePosition;

        specialinvoke $r7.<java.text.ParsePosition: void <init>(int)>(0);

        r3 = $r7;

     label03:
        $r8 = <androidx.exifinterface.media.ExifInterface: java.text.SimpleDateFormat sFormatterPrimary>;

        r19 = virtualinvoke $r8.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>(r0, r3);

        if r19 != null goto label05;

        $r17 = <androidx.exifinterface.media.ExifInterface: java.text.SimpleDateFormat sFormatterSecondary>;

        r19 = virtualinvoke $r17.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>(r0, r3);

        if r19 != null goto label05;

     label04:
        return null;

     label05:
        l10 = virtualinvoke r19.<java.util.Date: long getTime()>();

        if r2 == null goto label09;

        r4 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        $r10 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(1, 3);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r10);

        $r11 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(4, 6);

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

        $r12 = "+";

        $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z1 != 0 goto label06;

        $r16 = "-";

        $z4 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z4 == 0 goto label09;

     label06:
        $r13 = ":";

        $r14 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(3, 4);

        $z2 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z2 == 0 goto label09;

        if i0 > 14 goto label09;

        $l9 = l10;

        $i3 = i0 * 60;

        $i4 = $i3 + i1;

        $i5 = $i4 * 60;

        $i6 = $i5 * 1000;

        $r15 = "-";

        $z3 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z3 == 0 goto label07;

        $b11 = 1;

        goto label08;

     label07:
        $b11 = -1;

     label08:
        $i7 = $i6 * $b11;

        $l8 = (long) $i7;

        l10 = $l9 + $l8;

     label09:
        if r1 == null goto label10;

        $l2 = staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: long parseSubSeconds(java.lang.String)>(r1);

        l10 = l10 + $l2;

     label10:
        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l10);

     label11:
        return $r9;

     label12:
        $r18 := @caughtexception;

        r20 = $r18;

        return null;

        catch java.lang.IllegalArgumentException from label03 to label04 with label12;
        catch java.lang.IllegalArgumentException from label05 to label11 with label12;
    }

    public java.lang.Long getGpsDateTime()
    {
        androidx.exifinterface.media.ExifInterface r0;
        java.lang.String r1, r2, r3;
        java.text.ParsePosition r4, $r11;
        java.util.regex.Pattern $r5, $r15;
        java.util.regex.Matcher $r6, $r16;
        boolean $z0, $z1;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;
        java.text.SimpleDateFormat $r12, $r14;
        long $l0;
        java.lang.Long $r13;
        java.lang.Throwable $r17, r19;
        java.util.Date r18;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("GPSDateStamp");

        r2 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("GPSTimeStamp");

        if r1 == null goto label1;

        if r2 == null goto label1;

        $r5 = <androidx.exifinterface.media.ExifInterface: java.util.regex.Pattern NON_ZERO_TIME_PATTERN>;

        $r6 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $z0 = virtualinvoke $r6.<java.util.regex.Matcher: boolean matches()>();

        if $z0 != 0 goto label2;

        $r15 = <androidx.exifinterface.media.ExifInterface: java.util.regex.Pattern NON_ZERO_TIME_PATTERN>;

        $r16 = virtualinvoke $r15.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r2);

        $z1 = virtualinvoke $r16.<java.util.regex.Matcher: boolean matches()>();

        if $z1 != 0 goto label2;

     label1:
        return null;

     label2:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = new java.text.ParsePosition;

        specialinvoke $r11.<java.text.ParsePosition: void <init>(int)>(0);

        r4 = $r11;

     label3:
        $r12 = <androidx.exifinterface.media.ExifInterface: java.text.SimpleDateFormat sFormatterPrimary>;

        r18 = virtualinvoke $r12.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>(r3, r4);

        if r18 != null goto label5;

        $r14 = <androidx.exifinterface.media.ExifInterface: java.text.SimpleDateFormat sFormatterSecondary>;

        r18 = virtualinvoke $r14.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>(r3, r4);

        if r18 != null goto label5;

     label4:
        return null;

     label5:
        $l0 = virtualinvoke r18.<java.util.Date: long getTime()>();

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

     label6:
        return $r13;

     label7:
        $r17 := @caughtexception;

        r19 = $r17;

        return null;

        catch java.lang.IllegalArgumentException from label3 to label4 with label7;
        catch java.lang.IllegalArgumentException from label5 to label6 with label7;
    }

    private void initForFilename(java.lang.String) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        java.lang.String r1;
        java.lang.Throwable r2, $r7;
        java.io.FileInputStream $r3, r8;
        java.io.FileDescriptor $r4, $r5;
        boolean $z0;
        java.lang.NullPointerException $r6;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("filename cannot be null");

        throw $r6;

     label1:
        r8 = null;

        r0.<androidx.exifinterface.media.ExifInterface: android.content.res.AssetManager$AssetInputStream mAssetInputStream> = null;

        r0.<androidx.exifinterface.media.ExifInterface: java.lang.String mFilename> = r1;

     label2:
        $r3 = new java.io.FileInputStream;

        specialinvoke $r3.<java.io.FileInputStream: void <init>(java.lang.String)>(r1);

        r8 = $r3;

        $r4 = virtualinvoke r8.<java.io.FileInputStream: java.io.FileDescriptor getFD()>();

        $z0 = staticinvoke <androidx.exifinterface.media.ExifInterface: boolean isSeekableFD(java.io.FileDescriptor)>($r4);

        if $z0 == 0 goto label3;

        $r5 = virtualinvoke r8.<java.io.FileInputStream: java.io.FileDescriptor getFD()>();

        r0.<androidx.exifinterface.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor> = $r5;

        goto label4;

     label3:
        r0.<androidx.exifinterface.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor> = null;

     label4:
        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void loadAttributes(java.io.InputStream)>(r8);

     label5:
        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: void closeQuietly(java.io.Closeable)>(r8);

        goto label7;

     label6:
        $r7 := @caughtexception;

        r2 = $r7;

        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: void closeQuietly(java.io.Closeable)>(r8);

        throw r2;

     label7:
        return;

        catch java.lang.Throwable from label2 to label5 with label6;
    }

    private static double convertRationalLatLonToDouble(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        boolean $z0, $z1, $z2, $z3;
        java.lang.IllegalArgumentException $r17, $r19;
        java.lang.Throwable $r18, r24;
        java.lang.String[] r20, r21, r22, r23;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

     label1:
        r20 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(",", -1);

        $r2 = r20[0];

        r21 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("/", -1);

        $r3 = r21[0];

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $d4 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r4);

        $r5 = r21[1];

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        $d5 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r6);

        d0 = $d4 / $d5;

        $r7 = r20[1];

        r22 = virtualinvoke $r7.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("/", -1);

        $r8 = r22[0];

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

        $d6 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r9);

        $r10 = r22[1];

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String trim()>();

        $d7 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r11);

        d1 = $d6 / $d7;

        $r12 = r20[2];

        r23 = virtualinvoke $r12.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("/", -1);

        $r13 = r23[0];

        $r14 = virtualinvoke $r13.<java.lang.String: java.lang.String trim()>();

        $d8 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r14);

        $r15 = r23[1];

        $r16 = virtualinvoke $r15.<java.lang.String: java.lang.String trim()>();

        $d9 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r16);

        d2 = $d8 / $d9;

        $d10 = d1 / 60.0;

        $d12 = d0 + $d10;

        $d11 = d2 / 3600.0;

        d3 = $d12 + $d11;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("S");

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("W");

        if $z1 == 0 goto label4;

     label2:
        $d13 = neg d3;

     label3:
        return $d13;

     label4:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("N");

        if $z2 != 0 goto label5;

        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("E");

        if $z3 == 0 goto label6;

     label5:
        return d3;

     label6:
        $r17 = new java.lang.IllegalArgumentException;

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r17;

     label7:
        $r18 := @caughtexception;

        r24 = $r18;

        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r19;

        catch java.lang.NumberFormatException from label1 to label3 with label7;
        catch java.lang.ArrayIndexOutOfBoundsException from label1 to label3 with label7;
        catch java.lang.NumberFormatException from label4 to label5 with label7;
        catch java.lang.ArrayIndexOutOfBoundsException from label4 to label5 with label7;
        catch java.lang.NumberFormatException from label6 to label7 with label7;
        catch java.lang.ArrayIndexOutOfBoundsException from label6 to label7 with label7;
    }

    private java.lang.String convertDecimalDegree(double)
    {
        androidx.exifinterface.media.ExifInterface r0;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;
        long l0, l1, l2;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        d0 := @parameter0: double;

        l0 = (long) d0;

        $d1 = (double) l0;

        $d2 = d0 - $d1;

        $d3 = $d2 * 60.0;

        l1 = (long) $d3;

        $d4 = (double) l0;

        $d7 = d0 - $d4;

        $d5 = (double) l1;

        $d6 = $d5 / 60.0;

        $d8 = $d7 - $d6;

        $d9 = $d8 * 3600.0;

        $d10 = $d9 * 1.0E7;

        l2 = staticinvoke <java.lang.Math: long round(double)>($d10);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/1,");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/1,");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/10000000");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    private int getMimeType(java.io.BufferedInputStream) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        java.io.BufferedInputStream r1;
        byte[] r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: java.io.BufferedInputStream;

        virtualinvoke r1.<java.io.BufferedInputStream: void mark(int)>(5000);

        r2 = newarray (byte)[5000];

        virtualinvoke r1.<java.io.BufferedInputStream: int read(byte[])>(r2);

        virtualinvoke r1.<java.io.BufferedInputStream: void reset()>();

        $z0 = staticinvoke <androidx.exifinterface.media.ExifInterface: boolean isJpegFormat(byte[])>(r2);

        if $z0 == 0 goto label1;

        return 4;

     label1:
        $z1 = specialinvoke r0.<androidx.exifinterface.media.ExifInterface: boolean isRafFormat(byte[])>(r2);

        if $z1 == 0 goto label2;

        return 9;

     label2:
        $z2 = specialinvoke r0.<androidx.exifinterface.media.ExifInterface: boolean isHeifFormat(byte[])>(r2);

        if $z2 == 0 goto label3;

        return 12;

     label3:
        $z3 = specialinvoke r0.<androidx.exifinterface.media.ExifInterface: boolean isOrfFormat(byte[])>(r2);

        if $z3 == 0 goto label4;

        return 7;

     label4:
        $z4 = specialinvoke r0.<androidx.exifinterface.media.ExifInterface: boolean isRw2Format(byte[])>(r2);

        if $z4 == 0 goto label5;

        return 10;

     label5:
        $z5 = specialinvoke r0.<androidx.exifinterface.media.ExifInterface: boolean isPngFormat(byte[])>(r2);

        if $z5 == 0 goto label6;

        return 13;

     label6:
        $z6 = specialinvoke r0.<androidx.exifinterface.media.ExifInterface: boolean isWebpFormat(byte[])>(r2);

        if $z6 == 0 goto label7;

        return 14;

     label7:
        return 0;
    }

    private static boolean isJpegFormat(byte[]) throws java.io.IOException
    {
        byte[] r0, $r1, $r2;
        int $i0, i3;
        byte $b1, $b2;

        r0 := @parameter0: byte[];

        i3 = 0;

     label1:
        $r1 = <androidx.exifinterface.media.ExifInterface: byte[] JPEG_SIGNATURE>;

        $i0 = lengthof $r1;

        if i3 >= $i0 goto label3;

        $b2 = r0[i3];

        $r2 = <androidx.exifinterface.media.ExifInterface: byte[] JPEG_SIGNATURE>;

        $b1 = $r2[i3];

        if $b2 == $b1 goto label2;

        return 0;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 1;
    }

    private boolean isRafFormat(byte[]) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        byte[] r1, r2;
        java.lang.String $r3;
        java.nio.charset.Charset $r4;
        int $i0, i3;
        byte $b1, $b2;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: byte[];

        $r3 = "FUJIFILMCCD-RAW";

        $r4 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();

        r2 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r4);

        i3 = 0;

     label1:
        $i0 = lengthof r2;

        if i3 >= $i0 goto label3;

        $b2 = r1[i3];

        $b1 = r2[i3];

        if $b2 == $b1 goto label2;

        return 0;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 1;
    }

    private boolean isHeifFormat(byte[]) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        byte[] r1, r2, $r5, $r6, $r7, r11;
        java.lang.Throwable r3, $r8, $r9, r12;
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream $r4, r10;
        int $i0, $i2, $i8, $i9, $i11;
        boolean $z0, $z1, $z2, $z3, z4, z5;
        byte $b1, $b4, $b5, $b7, $b10, $b12;
        long $l3, $l6, l13, l14, l15, l16;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: byte[];

        r10 = null;

     label01:
        $r4 = new androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        specialinvoke $r4.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void <init>(byte[])>(r1);

        r10 = $r4;

        $i0 = virtualinvoke r10.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        l13 = (long) $i0;

        r2 = newarray (byte)[4];

        virtualinvoke r10.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[])>(r2);

        $r5 = <androidx.exifinterface.media.ExifInterface: byte[] HEIF_TYPE_FTYP>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r2, $r5);

        if $z0 != 0 goto label04;

     label02:
        if r10 == null goto label03;

        virtualinvoke r10.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label03:
        return 0;

     label04:
        l14 = 8L;

        $b1 = l13 cmp 1L;

        if $b1 != 0 goto label08;

        l13 = virtualinvoke r10.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: long readLong()>();

        $b12 = l13 cmp 16L;

        if $b12 >= 0 goto label07;

     label05:
        if r10 == null goto label06;

        virtualinvoke r10.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label06:
        return 0;

     label07:
        l14 = 16L;

     label08:
        $i2 = lengthof r1;

        $l3 = (long) $i2;

        $b4 = l13 cmp $l3;

        if $b4 <= 0 goto label09;

        $i11 = lengthof r1;

        l13 = (long) $i11;

     label09:
        l15 = l13 - l14;

        $b5 = l15 cmp 8L;

        if $b5 >= 0 goto label12;

     label10:
        if r10 == null goto label11;

        virtualinvoke r10.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label11:
        return 0;

     label12:
        r11 = newarray (byte)[4];

        z4 = 0;

        z5 = 0;

        l16 = 0L;

     label13:
        $l6 = l15 / 4L;

        $b7 = l16 cmp $l6;

        if $b7 >= 0 goto label23;

        $i8 = virtualinvoke r10.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[])>(r11);

        $i9 = lengthof r11;

        if $i8 == $i9 goto label16;

     label14:
        if r10 == null goto label15;

        virtualinvoke r10.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label15:
        return 0;

     label16:
        $b10 = l16 cmp 1L;

        if $b10 != 0 goto label17;

        goto label22;

     label17:
        $r6 = <androidx.exifinterface.media.ExifInterface: byte[] HEIF_BRAND_MIF1>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r11, $r6);

        if $z1 == 0 goto label18;

        z4 = 1;

        goto label19;

     label18:
        $r7 = <androidx.exifinterface.media.ExifInterface: byte[] HEIF_BRAND_HEIC>;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r11, $r7);

        if $z2 == 0 goto label19;

        z5 = 1;

     label19:
        if z4 == 0 goto label22;

        if z5 == 0 goto label22;

     label20:
        if r10 == null goto label21;

        virtualinvoke r10.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label21:
        return 1;

     label22:
        l16 = l16 + 1L;

        goto label13;

     label23:
        if r10 == null goto label29;

        virtualinvoke r10.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

        goto label29;

     label24:
        $r9 := @caughtexception;

        r12 = $r9;

        $z3 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z3 == 0 goto label25;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("ExifInterface", "Exception parsing HEIF file type box.", r12);

     label25:
        if r10 == null goto label29;

        virtualinvoke r10.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

        goto label29;

     label26:
        $r8 := @caughtexception;

        r3 = $r8;

     label27:
        if r10 == null goto label28;

        virtualinvoke r10.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label28:
        throw r3;

     label29:
        return 0;

        catch java.lang.Exception from label01 to label02 with label24;
        catch java.lang.Exception from label04 to label05 with label24;
        catch java.lang.Exception from label07 to label10 with label24;
        catch java.lang.Exception from label12 to label14 with label24;
        catch java.lang.Exception from label16 to label20 with label24;
        catch java.lang.Exception from label22 to label23 with label24;
        catch java.lang.Throwable from label01 to label02 with label26;
        catch java.lang.Throwable from label04 to label05 with label26;
        catch java.lang.Throwable from label07 to label10 with label26;
        catch java.lang.Throwable from label12 to label14 with label26;
        catch java.lang.Throwable from label16 to label20 with label26;
        catch java.lang.Throwable from label22 to label23 with label26;
        catch java.lang.Throwable from label24 to label25 with label26;
        catch java.lang.Throwable from label26 to label27 with label26;
    }

    private boolean isOrfFormat(byte[]) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        byte[] r1;
        boolean z0, $z1;
        java.lang.Throwable r2, $r6, $r7, r9;
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream $r3, r8;
        java.nio.ByteOrder $r4, $r5;
        short s0;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: byte[];

        r8 = null;

     label01:
        $r3 = new androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        specialinvoke $r3.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void <init>(byte[])>(r1);

        r8 = $r3;

        $r4 = specialinvoke r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder readByteOrder(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)>(r8);

        r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder> = $r4;

        $r5 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        virtualinvoke r8.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void setByteOrder(java.nio.ByteOrder)>($r5);

        s0 = virtualinvoke r8.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: short readShort()>();

        if s0 == 20306 goto label02;

        if s0 != 21330 goto label03;

     label02:
        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        z0 = $z1;

     label05:
        if r8 == null goto label06;

        virtualinvoke r8.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label06:
        return z0;

     label07:
        $r6 := @caughtexception;

        r9 = $r6;

        if r8 == null goto label11;

        virtualinvoke r8.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

        goto label11;

     label08:
        $r7 := @caughtexception;

        r2 = $r7;

     label09:
        if r8 == null goto label10;

        virtualinvoke r8.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label10:
        throw r2;

     label11:
        return 0;

        catch java.lang.Exception from label01 to label05 with label07;
        catch java.lang.Throwable from label01 to label05 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private boolean isRw2Format(byte[]) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        byte[] r1;
        boolean z0, $z1;
        java.lang.Throwable r2, $r6, $r7, r9;
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream $r3, r8;
        java.nio.ByteOrder $r4, $r5;
        short s0;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: byte[];

        r8 = null;

     label01:
        $r3 = new androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        specialinvoke $r3.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void <init>(byte[])>(r1);

        r8 = $r3;

        $r4 = specialinvoke r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder readByteOrder(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)>(r8);

        r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder> = $r4;

        $r5 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        virtualinvoke r8.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void setByteOrder(java.nio.ByteOrder)>($r5);

        s0 = virtualinvoke r8.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: short readShort()>();

        if s0 != 85 goto label02;

        $z1 = 1;

        goto label03;

     label02:
        $z1 = 0;

     label03:
        z0 = $z1;

     label04:
        if r8 == null goto label05;

        virtualinvoke r8.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label05:
        return z0;

     label06:
        $r7 := @caughtexception;

        r9 = $r7;

        if r8 == null goto label10;

        virtualinvoke r8.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

        goto label10;

     label07:
        $r6 := @caughtexception;

        r2 = $r6;

     label08:
        if r8 == null goto label09;

        virtualinvoke r8.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label09:
        throw r2;

     label10:
        return 0;

        catch java.lang.Exception from label01 to label04 with label06;
        catch java.lang.Throwable from label01 to label04 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    private boolean isPngFormat(byte[]) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        byte[] r1, $r2, $r3;
        int $i0, i3;
        byte $b1, $b2;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: byte[];

        i3 = 0;

     label1:
        $r2 = <androidx.exifinterface.media.ExifInterface: byte[] PNG_SIGNATURE>;

        $i0 = lengthof $r2;

        if i3 >= $i0 goto label3;

        $b2 = r1[i3];

        $r3 = <androidx.exifinterface.media.ExifInterface: byte[] PNG_SIGNATURE>;

        $b1 = $r3[i3];

        if $b2 == $b1 goto label2;

        return 0;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 1;
    }

    private boolean isWebpFormat(byte[]) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        byte[] r1, $r2, $r3, $r4, $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, i9, i10;
        byte $b5, $b6, $b7, $b8;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: byte[];

        i9 = 0;

     label1:
        $r2 = <androidx.exifinterface.media.ExifInterface: byte[] WEBP_SIGNATURE_1>;

        $i0 = lengthof $r2;

        if i9 >= $i0 goto label3;

        $b8 = r1[i9];

        $r6 = <androidx.exifinterface.media.ExifInterface: byte[] WEBP_SIGNATURE_1>;

        $b7 = $r6[i9];

        if $b8 == $b7 goto label2;

        return 0;

     label2:
        i9 = i9 + 1;

        goto label1;

     label3:
        i10 = 0;

     label4:
        $r3 = <androidx.exifinterface.media.ExifInterface: byte[] WEBP_SIGNATURE_2>;

        $i1 = lengthof $r3;

        if i10 >= $i1 goto label6;

        $r4 = <androidx.exifinterface.media.ExifInterface: byte[] WEBP_SIGNATURE_1>;

        $i2 = lengthof $r4;

        $i3 = i10 + $i2;

        $i4 = $i3 + 4;

        $b6 = r1[$i4];

        $r5 = <androidx.exifinterface.media.ExifInterface: byte[] WEBP_SIGNATURE_2>;

        $b5 = $r5[i10];

        if $b6 == $b5 goto label5;

        return 0;

     label5:
        i10 = i10 + 1;

        goto label4;

     label6:
        return 1;
    }

    private static boolean isExifDataOnly(java.io.BufferedInputStream) throws java.io.IOException
    {
        java.io.BufferedInputStream r0;
        byte[] r1, $r2, $r3, $r4, $r5;
        int $i0, $i1, $i3, i6;
        byte $b4, $b5;

        r0 := @parameter0: java.io.BufferedInputStream;

        $r2 = <androidx.exifinterface.media.ExifInterface: byte[] IDENTIFIER_EXIF_APP1>;

        $i0 = lengthof $r2;

        virtualinvoke r0.<java.io.BufferedInputStream: void mark(int)>($i0);

        $r3 = <androidx.exifinterface.media.ExifInterface: byte[] IDENTIFIER_EXIF_APP1>;

        $i1 = lengthof $r3;

        r1 = newarray (byte)[$i1];

        virtualinvoke r0.<java.io.BufferedInputStream: int read(byte[])>(r1);

        virtualinvoke r0.<java.io.BufferedInputStream: void reset()>();

        i6 = 0;

     label1:
        $r4 = <androidx.exifinterface.media.ExifInterface: byte[] IDENTIFIER_EXIF_APP1>;

        $i3 = lengthof $r4;

        if i6 >= $i3 goto label3;

        $b5 = r1[i6];

        $r5 = <androidx.exifinterface.media.ExifInterface: byte[] IDENTIFIER_EXIF_APP1>;

        $b4 = $r5[i6];

        if $b5 == $b4 goto label2;

        return 0;

     label2:
        i6 = i6 + 1;

        goto label1;

     label3:
        return 1;
    }

    private void getJpegAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream, int, int) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r1, $r26;
        int i0, i1, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i18, $i21, i31, i32, i34, i36, i37, i38, i39, i40;
        byte[] r2, r3, $r15, $r16, $r17, $r18, $r24, $r25, r73, r74;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.nio.ByteOrder $r4, $r5, $r29, $r34;
        byte $b2, $b3, b29, b30, b33, b35;
        java.lang.String $r6, $r9, $r19, $r40, $r45, $r48, $r50, $r54, $r56, $r60, $r62, $r66, $r68, $r72, $r75, $r76;
        java.io.IOException $r7, $r14, $r37, $r51, $r57, $r63;
        java.util.HashMap[] $r8, $r20, $r27, $r32;
        java.nio.charset.Charset $r10;
        java.util.HashMap $r11, $r22, $r28, $r33;
        androidx.exifinterface.media.ExifInterface$ExifAttribute $r12, $r21, $r30, $r35;
        long $l9, $l17, $l19;
        java.lang.StringBuilder $r38, $r39, $r41, $r42, $r43, $r44, $r46, $r47, $r49, $r52, $r53, $r55, $r58, $r59, $r61, $r64, $r65, $r67, $r69, $r70, $r71;
        short $s20, $s23, $s25, $s26, $s27;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z0 == 0 goto label01;

        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getJpegAttributes starting with: ");

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r72);

     label01:
        $r4 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void setByteOrder(java.nio.ByteOrder)>($r4);

        b29 = 0;

        $b2 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: byte readByte()>();

        b30 = $b2;

        if $b2 == -1 goto label02;

        $r63 = new java.io.IOException;

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid marker: ");

        $s27 = b30 & 255;

        $r66 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s27);

        $r67 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r63.<java.io.IOException: void <init>(java.lang.String)>($r68);

        throw $r63;

     label02:
        i31 = b29 + 1;

        $b3 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: byte readByte()>();

        if $b3 == -40 goto label03;

        $r57 = new java.io.IOException;

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid marker: ");

        $s26 = b30 & 255;

        $r60 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s26);

        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r57.<java.io.IOException: void <init>(java.lang.String)>($r62);

        throw $r57;

     label03:
        i32 = i31 + 1;

     label04:
        b33 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: byte readByte()>();

        if b33 == -1 goto label05;

        $r51 = new java.io.IOException;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid marker:");

        $s25 = b33 & 255;

        $r54 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s25);

        $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r51.<java.io.IOException: void <init>(java.lang.String)>($r56);

        throw $r51;

     label05:
        i34 = i32 + 1;

        b35 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: byte readByte()>();

        $z1 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z1 == 0 goto label06;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found JPEG segment indicator: ");

        $s23 = b35 & 255;

        $r48 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s23);

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r50);

     label06:
        i36 = i34 + 1;

        if b35 == -39 goto label22;

        if b35 != -38 goto label07;

        goto label22;

     label07:
        $i4 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedShort()>();

        i37 = $i4 - 2;

        i38 = i36 + 2;

        $z2 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z2 == 0 goto label08;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JPEG segment: ");

        $s20 = b35 & 255;

        $r40 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s20);

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (length: ");

        $i21 = i37 + 2;

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i21);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r45);

     label08:
        if i37 >= 0 goto label09;

        $r37 = new java.io.IOException;

        specialinvoke $r37.<java.io.IOException: void <init>(java.lang.String)>("Invalid length");

        throw $r37;

     label09:
        tableswitch(b35)
        {
            case -64: goto label15;
            case -63: goto label15;
            case -62: goto label15;
            case -61: goto label15;
            case -60: goto label20;
            case -59: goto label15;
            case -58: goto label15;
            case -57: goto label15;
            case -56: goto label20;
            case -55: goto label15;
            case -54: goto label15;
            case -53: goto label15;
            case -52: goto label20;
            case -51: goto label15;
            case -50: goto label15;
            case -49: goto label15;
            case -48: goto label20;
            case -47: goto label20;
            case -46: goto label20;
            case -45: goto label20;
            case -44: goto label20;
            case -43: goto label20;
            case -42: goto label20;
            case -41: goto label20;
            case -40: goto label20;
            case -39: goto label20;
            case -38: goto label20;
            case -37: goto label20;
            case -36: goto label20;
            case -35: goto label20;
            case -34: goto label20;
            case -33: goto label20;
            case -32: goto label20;
            case -31: goto label10;
            case -30: goto label20;
            case -29: goto label20;
            case -28: goto label20;
            case -27: goto label20;
            case -26: goto label20;
            case -25: goto label20;
            case -24: goto label20;
            case -23: goto label20;
            case -22: goto label20;
            case -21: goto label20;
            case -20: goto label20;
            case -19: goto label20;
            case -18: goto label20;
            case -17: goto label20;
            case -16: goto label20;
            case -15: goto label20;
            case -14: goto label20;
            case -13: goto label20;
            case -12: goto label20;
            case -11: goto label20;
            case -10: goto label20;
            case -9: goto label20;
            case -8: goto label20;
            case -7: goto label20;
            case -6: goto label20;
            case -5: goto label20;
            case -4: goto label20;
            case -3: goto label20;
            case -2: goto label13;
            default: goto label20;
        };

     label10:
        i39 = i38;

        r2 = newarray (byte)[i37];

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void readFully(byte[])>(r2);

        i38 = i38 + i37;

        i37 = 0;

        $r15 = <androidx.exifinterface.media.ExifInterface: byte[] IDENTIFIER_EXIF_APP1>;

        $z3 = staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: boolean startsWith(byte[],byte[])>(r2, $r15);

        if $z3 == 0 goto label11;

        $r24 = <androidx.exifinterface.media.ExifInterface: byte[] IDENTIFIER_EXIF_APP1>;

        $i12 = lengthof $r24;

        $i11 = lengthof r2;

        r73 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>(r2, $i12, $i11);

        $i14 = i0 + i39;

        $r25 = <androidx.exifinterface.media.ExifInterface: byte[] IDENTIFIER_EXIF_APP1>;

        $i13 = lengthof $r25;

        $i15 = $i14 + $i13;

        r0.<androidx.exifinterface.media.ExifInterface: int mOffsetToExifData> = $i15;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void readExifSegment(byte[],int)>(r73, i1);

        $r26 = new androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        specialinvoke $r26.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void <init>(byte[])>(r73);

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void setThumbnailData(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)>($r26);

        goto label20;

     label11:
        $r16 = <androidx.exifinterface.media.ExifInterface: byte[] IDENTIFIER_XMP_APP1>;

        $z4 = staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: boolean startsWith(byte[],byte[])>(r2, $r16);

        if $z4 == 0 goto label20;

        $r17 = <androidx.exifinterface.media.ExifInterface: byte[] IDENTIFIER_XMP_APP1>;

        $i6 = lengthof $r17;

        i40 = i39 + $i6;

        $r18 = <androidx.exifinterface.media.ExifInterface: byte[] IDENTIFIER_XMP_APP1>;

        $i8 = lengthof $r18;

        $i7 = lengthof r2;

        r3 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>(r2, $i8, $i7);

        $r19 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("Xmp");

        if $r19 != null goto label12;

        $r20 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r22 = $r20[0];

        $r21 = new androidx.exifinterface.media.ExifInterface$ExifAttribute;

        $i10 = lengthof r3;

        $l9 = (long) i40;

        specialinvoke $r21.<androidx.exifinterface.media.ExifInterface$ExifAttribute: void <init>(int,int,long,byte[])>(1, $i10, $l9, r3);

        virtualinvoke $r22.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Xmp", $r21);

        r0.<androidx.exifinterface.media.ExifInterface: boolean mXmpIsFromSeparateMarker> = 1;

     label12:
        goto label20;

     label13:
        r74 = newarray (byte)[i37];

        $i5 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[])>(r74);

        if $i5 == i37 goto label14;

        $r14 = new java.io.IOException;

        specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String)>("Invalid exif");

        throw $r14;

     label14:
        i37 = 0;

        $r6 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("UserComment");

        if $r6 != null goto label20;

        $r8 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r11 = $r8[1];

        $r9 = new java.lang.String;

        $r10 = <androidx.exifinterface.media.ExifInterface: java.nio.charset.Charset ASCII>;

        specialinvoke $r9.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(r74, $r10);

        $r12 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createString(java.lang.String)>($r9);

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("UserComment", $r12);

        goto label20;

     label15:
        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void skipFully(int)>(1);

        $r27 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r28 = $r27[i1];

        if i1 == 4 goto label16;

        $r75 = "ImageLength";

        goto label17;

     label16:
        $r75 = "ThumbnailImageLength";

     label17:
        $i16 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedShort()>();

        $l17 = (long) $i16;

        $r29 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r30 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>($l17, $r29);

        virtualinvoke $r28.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r75, $r30);

        $r32 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r33 = $r32[i1];

        if i1 == 4 goto label18;

        $r76 = "ImageWidth";

        goto label19;

     label18:
        $r76 = "ThumbnailImageWidth";

     label19:
        $i18 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedShort()>();

        $l19 = (long) $i18;

        $r34 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r35 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>($l19, $r34);

        virtualinvoke $r33.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r76, $r35);

        i37 = i37 + -5;

        goto label20;

     label20:
        if i37 >= 0 goto label21;

        $r7 = new java.io.IOException;

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("Invalid length");

        throw $r7;

     label21:
        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void skipFully(int)>(i37);

        i32 = i38 + i37;

        goto label04;

     label22:
        $r5 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void setByteOrder(java.nio.ByteOrder)>($r5);

        return;
    }

    private void getRawAttributes(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream r1, r3, $r8;
        androidx.exifinterface.media.ExifInterface$ExifAttribute r2, r4;
        int $i0;
        java.util.HashMap[] $r5, $r11, $r14;
        java.util.HashMap $r6, $r12, $r15;
        java.lang.Object $r7, $r13;
        byte[] $r9;
        java.nio.ByteOrder $r10;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void parseTiffHeaders(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)>(r1);

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void readImageFileDirectory(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream,int)>(r1, 0);

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void updateImageSizeValues(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream,int)>(r1, 0);

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void updateImageSizeValues(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream,int)>(r1, 5);

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void updateImageSizeValues(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream,int)>(r1, 4);

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void validateImages()>();

        $i0 = r0.<androidx.exifinterface.media.ExifInterface: int mMimeType>;

        if $i0 != 8 goto label1;

        $r5 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r6 = $r5[1];

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("MakerNote");

        r2 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r7;

        if r2 == null goto label1;

        $r8 = new androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream;

        $r9 = r2.<androidx.exifinterface.media.ExifInterface$ExifAttribute: byte[] bytes>;

        specialinvoke $r8.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: void <init>(byte[])>($r9);

        r3 = $r8;

        $r10 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: void setByteOrder(java.nio.ByteOrder)>($r10);

        virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: void skipFully(int)>(6);

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void readImageFileDirectory(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream,int)>(r3, 9);

        $r11 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r12 = $r11[9];

        $r13 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ColorSpace");

        r4 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r13;

        if r4 == null goto label1;

        $r14 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r15 = $r14[1];

        virtualinvoke $r15.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ColorSpace", r4);

     label1:
        return;
    }

    private void getRafAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r1, r6, $r12;
        byte[] r2, r3, r4, r5;
        int i0, i1, i2, i3, i4, i5, $i11, $i12, $i14, $i15, $i16, i20;
        short s6, s7;
        androidx.exifinterface.media.ExifInterface$ExifAttribute r7, r8;
        boolean $z0, $z1, $z2;
        java.nio.ByteBuffer $r9, $r10, $r11;
        java.nio.ByteOrder $r13, $r15, $r16;
        androidx.exifinterface.media.ExifInterface$ExifTag $r14;
        java.util.HashMap[] $r17, $r20;
        java.util.HashMap $r18, $r21;
        java.lang.StringBuilder $r23, $r24, $r25, $r26, $r27, $r29, $r30, $r31, $r33, $r34, $r35;
        java.lang.String $r28, $r32, $r36;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        $z0 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getRafAttributes starting with: ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r36);

     label1:
        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void skipFully(int)>(84);

        r2 = newarray (byte)[4];

        r3 = newarray (byte)[4];

        r4 = newarray (byte)[4];

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[])>(r2);

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[])>(r3);

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[])>(r4);

        $r9 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r2);

        i0 = virtualinvoke $r9.<java.nio.ByteBuffer: int getInt()>();

        $r10 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r3);

        i1 = virtualinvoke $r10.<java.nio.ByteBuffer: int getInt()>();

        $r11 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r4);

        i2 = virtualinvoke $r11.<java.nio.ByteBuffer: int getInt()>();

        r5 = newarray (byte)[i1];

        $i11 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int position()>();

        $i12 = i0 - $i11;

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void skipFully(int)>($i12);

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[])>(r5);

        $r12 = new androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        specialinvoke $r12.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void <init>(byte[])>(r5);

        r6 = $r12;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void getJpegAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,int,int)>(r6, i0, 5);

        $i14 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int position()>();

        $i15 = i2 - $i14;

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void skipFully(int)>($i15);

        $r13 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void setByteOrder(java.nio.ByteOrder)>($r13);

        i3 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        $z1 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z1 == 0 goto label2;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("numberOfDirectoryEntry: ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r32);

     label2:
        i20 = 0;

     label3:
        if i20 >= i3 goto label6;

        i4 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedShort()>();

        i5 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedShort()>();

        $r14 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag TAG_RAF_IMAGE_SIZE>;

        $i16 = $r14.<androidx.exifinterface.media.ExifInterface$ExifTag: int number>;

        if i4 != $i16 goto label5;

        s6 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: short readShort()>();

        s7 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: short readShort()>();

        $r15 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r7 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)>(s6, $r15);

        $r16 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r8 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)>(s7, $r16);

        $r17 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r18 = $r17[0];

        virtualinvoke $r18.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageLength", r7);

        $r20 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r21 = $r20[0];

        virtualinvoke $r21.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageWidth", r8);

        $z2 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z2 == 0 goto label4;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updated to length: ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s6);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", width: ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s7);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r28);

     label4:
        return;

     label5:
        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void skipFully(int)>(i5);

        i20 = i20 + 1;

        goto label3;

     label6:
        return;
    }

    private void getHeifAttributes(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream r1;
        android.media.MediaMetadataRetriever r2, $r11;
        java.lang.String r3, r4, r5, r6, $r13, $r14, $r22, r42, r43, r44, r45;
        byte[] r7, r8, $r23;
        java.lang.Throwable r9, $r39, $r41, r50;
        int $i0, $i3, $i4, $i5, $i6, $i7, i9, i10, i11, i12;
        java.lang.UnsupportedOperationException $r10, $r40;
        androidx.exifinterface.media.ExifInterface$1 $r12;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r15, $r16, $r17, $r18, $r19, $r20, $r21;
        long $l2;
        java.io.IOException $r24, $r25, $r26, $r27;
        java.util.HashMap[] $r29, $r34, $r46;
        java.util.HashMap $r30, $r35, $r47;
        java.nio.ByteOrder $r31, $r36, $r48;
        androidx.exifinterface.media.ExifInterface$ExifAttribute $r32, $r37, $r49;
        byte b8;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 28 goto label21;

        $r11 = new android.media.MediaMetadataRetriever;

        specialinvoke $r11.<android.media.MediaMetadataRetriever: void <init>()>();

        r2 = $r11;

     label01:
        $r12 = new androidx.exifinterface.media.ExifInterface$1;

        specialinvoke $r12.<androidx.exifinterface.media.ExifInterface$1: void <init>(androidx.exifinterface.media.ExifInterface,androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream)>(r0, r1);

        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils$Api23Impl: void setDataSource(android.media.MediaMetadataRetriever,android.media.MediaDataSource)>(r2, $r12);

        r42 = virtualinvoke r2.<android.media.MediaMetadataRetriever: java.lang.String extractMetadata(int)>(33);

        r3 = virtualinvoke r2.<android.media.MediaMetadataRetriever: java.lang.String extractMetadata(int)>(34);

        r4 = virtualinvoke r2.<android.media.MediaMetadataRetriever: java.lang.String extractMetadata(int)>(26);

        r5 = virtualinvoke r2.<android.media.MediaMetadataRetriever: java.lang.String extractMetadata(int)>(17);

        r43 = null;

        r44 = null;

        r45 = null;

        r6 = "yes";

        $r13 = "yes";

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label02;

        r43 = virtualinvoke r2.<android.media.MediaMetadataRetriever: java.lang.String extractMetadata(int)>(29);

        r44 = virtualinvoke r2.<android.media.MediaMetadataRetriever: java.lang.String extractMetadata(int)>(30);

        r45 = virtualinvoke r2.<android.media.MediaMetadataRetriever: java.lang.String extractMetadata(int)>(31);

        goto label03;

     label02:
        $r14 = "yes";

        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z1 == 0 goto label03;

        r43 = virtualinvoke r2.<android.media.MediaMetadataRetriever: java.lang.String extractMetadata(int)>(18);

        r44 = virtualinvoke r2.<android.media.MediaMetadataRetriever: java.lang.String extractMetadata(int)>(19);

        r45 = virtualinvoke r2.<android.media.MediaMetadataRetriever: java.lang.String extractMetadata(int)>(24);

     label03:
        if r43 == null goto label04;

        $r34 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r35 = $r34[0];

        $i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r43);

        $r36 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r37 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)>($i7, $r36);

        virtualinvoke $r35.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageWidth", $r37);

     label04:
        if r44 == null goto label05;

        $r29 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r30 = $r29[0];

        $i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r44);

        $r31 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r32 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)>($i6, $r31);

        virtualinvoke $r30.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageLength", $r32);

     label05:
        if r45 == null goto label10;

        b8 = 1;

        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r45);

        lookupswitch($i5)
        {
            case 90: goto label06;
            case 180: goto label07;
            case 270: goto label08;
            default: goto label09;
        };

     label06:
        b8 = 6;

        goto label09;

     label07:
        b8 = 3;

        goto label09;

     label08:
        b8 = 8;

     label09:
        $r46 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r47 = $r46[0];

        $r48 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r49 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)>(b8, $r48);

        virtualinvoke $r47.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Orientation", $r49);

     label10:
        if r42 == null goto label15;

        if r3 == null goto label15;

        i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r42);

        i10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

        if i10 > 6 goto label11;

        $r27 = new java.io.IOException;

        specialinvoke $r27.<java.io.IOException: void <init>(java.lang.String)>("Invalid exif length");

        throw $r27;

     label11:
        $l2 = (long) i9;

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: void seek(long)>($l2);

        r7 = newarray (byte)[6];

        $i3 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: int read(byte[])>(r7);

        if $i3 == 6 goto label12;

        $r26 = new java.io.IOException;

        specialinvoke $r26.<java.io.IOException: void <init>(java.lang.String)>("Can\'t read identifier");

        throw $r26;

     label12:
        i11 = i9 + 6;

        i12 = i10 + -6;

        $r23 = <androidx.exifinterface.media.ExifInterface: byte[] IDENTIFIER_EXIF_APP1>;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r7, $r23);

        if $z2 != 0 goto label13;

        $r25 = new java.io.IOException;

        specialinvoke $r25.<java.io.IOException: void <init>(java.lang.String)>("Invalid identifier");

        throw $r25;

     label13:
        r8 = newarray (byte)[i12];

        $i4 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: int read(byte[])>(r8);

        if $i4 == i12 goto label14;

        $r24 = new java.io.IOException;

        specialinvoke $r24.<java.io.IOException: void <init>(java.lang.String)>("Can\'t read exif");

        throw $r24;

     label14:
        r0.<androidx.exifinterface.media.ExifInterface: int mOffsetToExifData> = i11;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void readExifSegment(byte[],int)>(r8, 0);

     label15:
        $z3 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z3 == 0 goto label16;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Heif meta: ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r43);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r44);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", rotation ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r45);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r22);

     label16:
        virtualinvoke r2.<android.media.MediaMetadataRetriever: void release()>();

        goto label20;

     label17:
        $r39 := @caughtexception;

        r50 = $r39;

        $r40 = new java.lang.UnsupportedOperationException;

        specialinvoke $r40.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Failed to read EXIF from HEIF file. Given stream is either malformed or unsupported.");

        throw $r40;

     label18:
        $r41 := @caughtexception;

        r9 = $r41;

     label19:
        virtualinvoke r2.<android.media.MediaMetadataRetriever: void release()>();

        throw r9;

     label20:
        goto label22;

     label21:
        $r10 = new java.lang.UnsupportedOperationException;

        specialinvoke $r10.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Reading EXIF from HEIF files is supported from SDK 28 and above");

        throw $r10;

     label22:
        return;

        catch java.lang.RuntimeException from label01 to label16 with label17;
        catch java.lang.Throwable from label01 to label16 with label18;
        catch java.lang.Throwable from label17 to label19 with label18;
    }

    private void getStandaloneAttributes(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream r1;
        byte[] r2, $r3, $r4;
        int $i0, $i1, $i2;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream;

        $r3 = <androidx.exifinterface.media.ExifInterface: byte[] IDENTIFIER_EXIF_APP1>;

        $i0 = lengthof $r3;

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: void skipFully(int)>($i0);

        $i1 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: int available()>();

        r2 = newarray (byte)[$i1];

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: void readFully(byte[])>(r2);

        $r4 = <androidx.exifinterface.media.ExifInterface: byte[] IDENTIFIER_EXIF_APP1>;

        $i2 = lengthof $r4;

        r0.<androidx.exifinterface.media.ExifInterface: int mOffsetToExifData> = $i2;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void readExifSegment(byte[],int)>(r2, 0);

        return;
    }

    private void getOrfAttributes(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream r1, r3, $r15;
        androidx.exifinterface.media.ExifInterface$ExifAttribute r2, r6, r7, r8, r10, r11;
        byte[] r4, r5, $r16, $r18, $r19, $r20, $r21;
        int[] r9;
        java.util.HashMap[] $r12, $r31, $r34, $r37, $r40, $r43, $r46, $r49;
        java.util.HashMap $r13, $r32, $r35, $r38, $r41, $r44, $r47, $r50;
        java.lang.Object $r14, $r23, $r45, $r48, $r51;
        java.nio.ByteOrder $r17, $r22, $r29, $r30;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16;
        boolean $z0, $z1;
        java.lang.StringBuilder $r24, $r25, $r27;
        java.lang.String $r26, $r28;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void getRawAttributes(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream)>(r1);

        $r12 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r13 = $r12[1];

        $r14 = virtualinvoke $r13.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("MakerNote");

        r2 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r14;

        if r2 == null goto label7;

        $r15 = new androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream;

        $r16 = r2.<androidx.exifinterface.media.ExifInterface$ExifAttribute: byte[] bytes>;

        specialinvoke $r15.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: void <init>(byte[])>($r16);

        r3 = $r15;

        $r17 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: void setByteOrder(java.nio.ByteOrder)>($r17);

        $r18 = <androidx.exifinterface.media.ExifInterface: byte[] ORF_MAKER_NOTE_HEADER_1>;

        $i0 = lengthof $r18;

        r4 = newarray (byte)[$i0];

        virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: void readFully(byte[])>(r4);

        virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: void seek(long)>(0L);

        $r19 = <androidx.exifinterface.media.ExifInterface: byte[] ORF_MAKER_NOTE_HEADER_2>;

        $i1 = lengthof $r19;

        r5 = newarray (byte)[$i1];

        virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: void readFully(byte[])>(r5);

        $r20 = <androidx.exifinterface.media.ExifInterface: byte[] ORF_MAKER_NOTE_HEADER_1>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r4, $r20);

        if $z0 == 0 goto label1;

        virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: void seek(long)>(8L);

        goto label2;

     label1:
        $r21 = <androidx.exifinterface.media.ExifInterface: byte[] ORF_MAKER_NOTE_HEADER_2>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r5, $r21);

        if $z1 == 0 goto label2;

        virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: void seek(long)>(12L);

     label2:
        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void readImageFileDirectory(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream,int)>(r3, 6);

        $r43 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r44 = $r43[7];

        $r45 = virtualinvoke $r44.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("PreviewImageStart");

        r6 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r45;

        $r46 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r47 = $r46[7];

        $r48 = virtualinvoke $r47.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("PreviewImageLength");

        r7 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r48;

        if r6 == null goto label3;

        if r7 == null goto label3;

        $r37 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r38 = $r37[5];

        virtualinvoke $r38.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("JPEGInterchangeFormat", r6);

        $r40 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r41 = $r40[5];

        virtualinvoke $r41.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("JPEGInterchangeFormatLength", r7);

     label3:
        $r49 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r50 = $r49[8];

        $r51 = virtualinvoke $r50.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("AspectFrame");

        r8 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r51;

        if r8 == null goto label7;

        $r22 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r23 = virtualinvoke r8.<androidx.exifinterface.media.ExifInterface$ExifAttribute: java.lang.Object getValue(java.nio.ByteOrder)>($r22);

        r9 = (int[]) $r23;

        if r9 == null goto label4;

        $i3 = lengthof r9;

        if $i3 == 4 goto label5;

     label4:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid aspect frame values. frame=");

        $r26 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>(r9);

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", $r28);

        return;

     label5:
        $i5 = r9[2];

        $i4 = r9[0];

        if $i5 <= $i4 goto label7;

        $i7 = r9[3];

        $i6 = r9[1];

        if $i7 <= $i6 goto label7;

        $i9 = r9[2];

        $i8 = r9[0];

        $i10 = $i9 - $i8;

        i14 = $i10 + 1;

        $i12 = r9[3];

        $i11 = r9[1];

        $i13 = $i12 - $i11;

        i15 = $i13 + 1;

        if i14 >= i15 goto label6;

        i16 = i14 + i15;

        i15 = i16 - i15;

        i14 = i16 - i15;

     label6:
        $r29 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r10 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)>(i14, $r29);

        $r30 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r11 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)>(i15, $r30);

        $r31 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r32 = $r31[0];

        virtualinvoke $r32.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageWidth", r10);

        $r34 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r35 = $r34[0];

        virtualinvoke $r35.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageLength", r11);

     label7:
        return;
    }

    private void getRw2Attributes(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream r1;
        androidx.exifinterface.media.ExifInterface$ExifAttribute r2, r3, r23;
        boolean $z0;
        java.util.HashMap[] $r4, $r7, $r10, $r13;
        java.util.HashMap $r5, $r8, $r11, $r14;
        java.lang.Object $r6, $r9, $r12;
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream $r16, r22;
        byte[] $r17;
        long $l0;
        int $i1;
        java.lang.StringBuilder $r18, $r19, $r20;
        java.lang.String $r21;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream;

        $z0 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getRw2Attributes starting with: ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r21);

     label1:
        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void getRawAttributes(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream)>(r1);

        $r4 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r5 = $r4[0];

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("JpgFromRaw");

        r2 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r6;

        if r2 == null goto label2;

        $r16 = new androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        $r17 = r2.<androidx.exifinterface.media.ExifInterface$ExifAttribute: byte[] bytes>;

        specialinvoke $r16.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void <init>(byte[])>($r17);

        r22 = $r16;

        $l0 = r2.<androidx.exifinterface.media.ExifInterface$ExifAttribute: long bytesOffset>;

        $i1 = (int) $l0;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void getJpegAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,int,int)>(r22, $i1, 5);

     label2:
        $r7 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r8 = $r7[0];

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ISO");

        r23 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r9;

        $r10 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r11 = $r10[1];

        $r12 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("PhotographicSensitivity");

        r3 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r12;

        if r23 == null goto label3;

        if r3 != null goto label3;

        $r13 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r14 = $r13[1];

        virtualinvoke $r14.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("PhotographicSensitivity", r23);

     label3:
        return;
    }

    private void getPngAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r1, $r11;
        byte[] r2, r3, $r6, $r7, $r8, $r9, $r25;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7, i11, i12, i13, $i14, $i15, i16;
        java.util.zip.CRC32 r4, $r10;
        boolean $z0, $z1, $z2, $z3;
        java.nio.ByteOrder $r5;
        long $l6, $l8;
        java.io.IOException $r12, $r19, $r26, $r27, $r33;
        java.lang.StringBuilder $r13, $r14, $r15, $r16, $r17, $r20, $r21, $r23, $r28, $r29, $r30;
        java.lang.String $r18, $r22, $r24, $r31;
        java.lang.Throwable $r32, r34;
        byte b10;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        $z0 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z0 == 0 goto label01;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getPngAttributes starting with: ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r31);

     label01:
        $r5 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void setByteOrder(java.nio.ByteOrder)>($r5);

        b10 = 0;

        $r6 = <androidx.exifinterface.media.ExifInterface: byte[] PNG_SIGNATURE>;

        $i1 = lengthof $r6;

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void skipFully(int)>($i1);

        $r7 = <androidx.exifinterface.media.ExifInterface: byte[] PNG_SIGNATURE>;

        $i2 = lengthof $r7;

        i11 = b10 + $i2;

     label02:
        i12 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        i13 = i11 + 4;

        r2 = newarray (byte)[4];

        $i14 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[])>(r2);

        $i15 = lengthof r2;

        if $i14 == $i15 goto label03;

        $r27 = new java.io.IOException;

        specialinvoke $r27.<java.io.IOException: void <init>(java.lang.String)>("Encountered invalid length while parsing PNG chunktype");

        throw $r27;

     label03:
        i16 = i13 + 4;

        if i16 != 16 goto label04;

        $r25 = <androidx.exifinterface.media.ExifInterface: byte[] PNG_CHUNK_TYPE_IHDR>;

        $z3 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r2, $r25);

        if $z3 != 0 goto label04;

        $r26 = new java.io.IOException;

        specialinvoke $r26.<java.io.IOException: void <init>(java.lang.String)>("Encountered invalid PNG file--IHDR chunk should appearas the first chunk");

        throw $r26;

     label04:
        $r8 = <androidx.exifinterface.media.ExifInterface: byte[] PNG_CHUNK_TYPE_IEND>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r2, $r8);

        if $z1 == 0 goto label05;

        goto label09;

     label05:
        $r9 = <androidx.exifinterface.media.ExifInterface: byte[] PNG_CHUNK_TYPE_EXIF>;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r2, $r9);

        if $z2 == 0 goto label08;

        r3 = newarray (byte)[i12];

        $i5 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[])>(r3);

        if $i5 == i12 goto label06;

        $r19 = new java.io.IOException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to read given length for given PNG chunk type: ");

        $r22 = staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: java.lang.String byteArrayToHexString(byte[])>(r2);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.io.IOException: void <init>(java.lang.String)>($r24);

        throw $r19;

     label06:
        i0 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        $r10 = new java.util.zip.CRC32;

        specialinvoke $r10.<java.util.zip.CRC32: void <init>()>();

        r4 = $r10;

        virtualinvoke r4.<java.util.zip.CRC32: void update(byte[])>(r2);

        virtualinvoke r4.<java.util.zip.CRC32: void update(byte[])>(r3);

        $l6 = virtualinvoke r4.<java.util.zip.CRC32: long getValue()>();

        $i7 = (int) $l6;

        if $i7 == i0 goto label07;

        $r12 = new java.io.IOException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Encountered invalid CRC value for PNG-EXIF chunk.\n recorded CRC value: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", calculated CRC value: ");

        $l8 = virtualinvoke r4.<java.util.zip.CRC32: long getValue()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>($r18);

        throw $r12;

     label07:
        r0.<androidx.exifinterface.media.ExifInterface: int mOffsetToExifData> = i16;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void readExifSegment(byte[],int)>(r3, 0);

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void validateImages()>();

        $r11 = new androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        specialinvoke $r11.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void <init>(byte[])>(r3);

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void setThumbnailData(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)>($r11);

        goto label09;

     label08:
        $i3 = i12 + 4;

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void skipFully(int)>($i3);

        $i4 = i12 + 4;

        i11 = i16 + $i4;

        goto label02;

     label09:
        goto label11;

     label10:
        $r32 := @caughtexception;

        r34 = $r32;

        $r33 = new java.io.IOException;

        specialinvoke $r33.<java.io.IOException: void <init>(java.lang.String)>("Encountered corrupt PNG file.");

        throw $r33;

     label11:
        return;

        catch java.io.EOFException from label02 to label09 with label10;
    }

    private void getWebpAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r1, $r9;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i11, $i12, $i13, i14, i15, i16, $i17, i18;
        byte[] r2, $r4, $r5, $r6, $r7, r23;
        boolean $z0, $z1;
        java.nio.ByteOrder $r3;
        java.io.IOException $r8, $r10, $r16, $r22;
        java.lang.StringBuilder $r11, $r12, $r14, $r17, $r18, $r19;
        java.lang.String $r13, $r15, $r20;
        java.lang.Throwable $r21, r24;
        byte b10;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        $z0 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z0 == 0 goto label01;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getWebpAttributes starting with: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r20);

     label01:
        $r3 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void setByteOrder(java.nio.ByteOrder)>($r3);

        $r4 = <androidx.exifinterface.media.ExifInterface: byte[] WEBP_SIGNATURE_1>;

        $i1 = lengthof $r4;

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void skipFully(int)>($i1);

        $i2 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        i0 = $i2 + 8;

        b10 = 8;

        $r5 = <androidx.exifinterface.media.ExifInterface: byte[] WEBP_SIGNATURE_2>;

        $i3 = lengthof $r5;

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void skipFully(int)>($i3);

        $r6 = <androidx.exifinterface.media.ExifInterface: byte[] WEBP_SIGNATURE_2>;

        $i4 = lengthof $r6;

        i11 = b10 + $i4;

     label02:
        r23 = newarray (byte)[4];

        $i12 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[])>(r23);

        $i13 = lengthof r23;

        if $i12 == $i13 goto label03;

        $r16 = new java.io.IOException;

        specialinvoke $r16.<java.io.IOException: void <init>(java.lang.String)>("Encountered invalid length while parsing WebP chunktype");

        throw $r16;

     label03:
        i14 = i11 + 4;

        i15 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        i16 = i14 + 4;

        $r7 = <androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_EXIF>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r7, r23);

        if $z1 == 0 goto label05;

        r2 = newarray (byte)[i15];

        $i8 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[])>(r2);

        if $i8 == i15 goto label04;

        $r10 = new java.io.IOException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to read given length for given PNG chunk type: ");

        $r13 = staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: java.lang.String byteArrayToHexString(byte[])>(r23);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>($r15);

        throw $r10;

     label04:
        r0.<androidx.exifinterface.media.ExifInterface: int mOffsetToExifData> = i16;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void readExifSegment(byte[],int)>(r2, 0);

        $r9 = new androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        specialinvoke $r9.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void <init>(byte[])>(r2);

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void setThumbnailData(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)>($r9);

        goto label10;

     label05:
        $i5 = i15 % 2;

        if $i5 != 1 goto label06;

        $i17 = i15 + 1;

        goto label07;

     label06:
        $i17 = i15;

     label07:
        i18 = $i17;

        $i6 = i16 + i18;

        if $i6 != i0 goto label08;

        goto label10;

     label08:
        $i7 = i16 + i18;

        if $i7 <= i0 goto label09;

        $r8 = new java.io.IOException;

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>("Encountered WebP file with invalid chunk size");

        throw $r8;

     label09:
        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void skipFully(int)>(i18);

        i11 = i16 + i18;

        goto label02;

     label10:
        goto label12;

     label11:
        $r21 := @caughtexception;

        r24 = $r21;

        $r22 = new java.io.IOException;

        specialinvoke $r22.<java.io.IOException: void <init>(java.lang.String)>("Encountered corrupt WebP file.");

        throw $r22;

     label12:
        return;

        catch java.io.EOFException from label02 to label10 with label11;
    }

    private void saveJpegAttributes(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        java.io.InputStream r1;
        java.io.OutputStream r2, r41;
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r3, r33;
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream r4, r34;
        byte[] r5, $r10, r31;
        int i0, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, i18, i19, i20, i21;
        boolean $z0, $z1, $z2;
        java.nio.ByteOrder $r8;
        byte $b1, $b2, b16, b17;
        java.lang.String $r9, $r29;
        java.util.HashMap[] $r15, $r18;
        java.util.HashMap $r16, $r19;
        java.lang.Object $r20;
        java.lang.StringBuilder $r24, $r25, $r26, $r27, $r28, r32;
        androidx.exifinterface.media.ExifInterface$ExifAttribute r30;
        java.io.IOException r35, r36, r37, r38, r39, r40;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.io.OutputStream;

        $z0 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z0 == 0 goto label01;

        r32 = new java.lang.StringBuilder;

        specialinvoke r32.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("saveJpegAttributes starting with (inputStream: ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", outputStream: ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r29);

     label01:
        r33 = new androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        specialinvoke r33.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void <init>(java.io.InputStream)>(r1);

        r3 = r33;

        r34 = new androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream;

        $r8 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        specialinvoke r34.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void <init>(java.io.OutputStream,java.nio.ByteOrder)>(r2, $r8);

        r4 = r34;

        $b1 = virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: byte readByte()>();

        if $b1 == -1 goto label02;

        r35 = new java.io.IOException;

        specialinvoke r35.<java.io.IOException: void <init>(java.lang.String)>("Invalid marker");

        throw r35;

     label02:
        virtualinvoke r4.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeByte(int)>(-1);

        $b2 = virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: byte readByte()>();

        if $b2 == -40 goto label03;

        r36 = new java.io.IOException;

        specialinvoke r36.<java.io.IOException: void <init>(java.lang.String)>("Invalid marker");

        throw r36;

     label03:
        virtualinvoke r4.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeByte(int)>(-40);

        r30 = null;

        $r9 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("Xmp");

        if $r9 == null goto label04;

        $z2 = r0.<androidx.exifinterface.media.ExifInterface: boolean mXmpIsFromSeparateMarker>;

        if $z2 == 0 goto label04;

        $r18 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r19 = $r18[0];

        $r20 = virtualinvoke $r19.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>("Xmp");

        r30 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r20;

     label04:
        virtualinvoke r4.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeByte(int)>(-1);

        virtualinvoke r4.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeByte(int)>(-31);

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: int writeExifSegment(androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream)>(r4);

        if r30 == null goto label05;

        $r15 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r16 = $r15[0];

        virtualinvoke $r16.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Xmp", r30);

     label05:
        r5 = newarray (byte)[4096];

     label06:
        b16 = virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: byte readByte()>();

        if b16 == -1 goto label07;

        r37 = new java.io.IOException;

        specialinvoke r37.<java.io.IOException: void <init>(java.lang.String)>("Invalid marker");

        throw r37;

     label07:
        b17 = virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: byte readByte()>();

        lookupswitch(b17)
        {
            case -39: goto label13;
            case -38: goto label13;
            case -31: goto label08;
            default: goto label14;
        };

     label08:
        $i4 = virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedShort()>();

        i18 = $i4 - 2;

        if i18 >= 0 goto label09;

        r38 = new java.io.IOException;

        specialinvoke r38.<java.io.IOException: void <init>(java.lang.String)>("Invalid length");

        throw r38;

     label09:
        r31 = newarray (byte)[6];

        if i18 < 6 goto label11;

        $i9 = virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[])>(r31);

        if $i9 == 6 goto label10;

        r39 = new java.io.IOException;

        specialinvoke r39.<java.io.IOException: void <init>(java.lang.String)>("Invalid exif");

        throw r39;

     label10:
        $r10 = <androidx.exifinterface.media.ExifInterface: byte[] IDENTIFIER_EXIF_APP1>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r31, $r10);

        if $z1 == 0 goto label11;

        $i10 = i18 - 6;

        virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void skipFully(int)>($i10);

        goto label16;

     label11:
        virtualinvoke r4.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeByte(int)>(-1);

        virtualinvoke r4.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeByte(int)>(b17);

        $i5 = i18 + 2;

        virtualinvoke r4.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeUnsignedShort(int)>($i5);

        if i18 < 6 goto label12;

        i18 = i18 + -6;

        virtualinvoke r4.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[])>(r31);

     label12:
        if i18 <= 0 goto label16;

        $i6 = lengthof r5;

        $i7 = staticinvoke <java.lang.Math: int min(int,int)>(i18, $i6);

        $i8 = virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[],int,int)>(r5, 0, $i7);

        i0 = $i8;

        if $i8 < 0 goto label16;

        virtualinvoke r4.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[],int,int)>(r5, 0, i0);

        i18 = i18 - i0;

        goto label12;

     label13:
        virtualinvoke r4.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeByte(int)>(-1);

        virtualinvoke r4.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeByte(int)>(b17);

        r41 = (java.io.OutputStream) r4;

        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: int copy(java.io.InputStream,java.io.OutputStream)>(r3, r41);

        return;

     label14:
        virtualinvoke r4.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeByte(int)>(-1);

        virtualinvoke r4.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeByte(int)>(b17);

        i19 = virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedShort()>();

        virtualinvoke r4.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeUnsignedShort(int)>(i19);

        i20 = i19 + -2;

        if i20 >= 0 goto label15;

        r40 = new java.io.IOException;

        specialinvoke r40.<java.io.IOException: void <init>(java.lang.String)>("Invalid length");

        throw r40;

     label15:
        if i20 <= 0 goto label16;

        $i12 = lengthof r5;

        $i13 = staticinvoke <java.lang.Math: int min(int,int)>(i20, $i12);

        $i14 = virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[],int,int)>(r5, 0, $i13);

        i21 = $i14;

        if $i14 < 0 goto label16;

        virtualinvoke r4.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[],int,int)>(r5, 0, i21);

        i20 = i20 - i21;

        goto label15;

     label16:
        goto label06;
    }

    private void savePngAttributes(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        java.io.InputStream r1;
        java.io.OutputStream r2, $r16, r35, r36, r37, r38;
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r3, r30;
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream r4, r28, r31, r33;
        byte[] r5, $r11, $r12;
        java.util.zip.CRC32 r6, r34;
        java.lang.Throwable r7, $r26;
        boolean $z0;
        java.nio.ByteOrder $r10, $r15;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i12, $i14, $i15, i17, i18, i19;
        java.io.ByteArrayOutputStream $r17, r27, r32;
        long $l11;
        java.lang.StringBuilder $r20, $r21, $r22, $r23, $r24, r29;
        java.lang.String $r25;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.io.OutputStream;

        $z0 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z0 == 0 goto label1;

        r29 = new java.lang.StringBuilder;

        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("savePngAttributes starting with (inputStream: ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", outputStream: ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r25);

     label1:
        r30 = new androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        specialinvoke r30.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void <init>(java.io.InputStream)>(r1);

        r3 = r30;

        r31 = new androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream;

        $r10 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        specialinvoke r31.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void <init>(java.io.OutputStream,java.nio.ByteOrder)>(r2, $r10);

        r4 = r31;

        $r11 = <androidx.exifinterface.media.ExifInterface: byte[] PNG_SIGNATURE>;

        $i0 = lengthof $r11;

        r35 = (java.io.OutputStream) r4;

        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: void copy(java.io.InputStream,java.io.OutputStream,int)>(r3, r35, $i0);

        $i1 = r0.<androidx.exifinterface.media.ExifInterface: int mOffsetToExifData>;

        if $i1 != 0 goto label2;

        i17 = virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        virtualinvoke r4.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeInt(int)>(i17);

        $i14 = 4 + i17;

        $i15 = $i14 + 4;

        r36 = (java.io.OutputStream) r4;

        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: void copy(java.io.InputStream,java.io.OutputStream,int)>(r3, r36, $i15);

        goto label3;

     label2:
        $i3 = r0.<androidx.exifinterface.media.ExifInterface: int mOffsetToExifData>;

        $r12 = <androidx.exifinterface.media.ExifInterface: byte[] PNG_SIGNATURE>;

        $i2 = lengthof $r12;

        $i4 = $i3 - $i2;

        $i5 = $i4 - 4;

        i18 = $i5 - 4;

        r37 = (java.io.OutputStream) r4;

        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: void copy(java.io.InputStream,java.io.OutputStream,int)>(r3, r37, i18);

        i19 = virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        $i6 = 4 + i19;

        $i7 = $i6 + 4;

        virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void skipFully(int)>($i7);

     label3:
        r27 = null;

     label4:
        r32 = new java.io.ByteArrayOutputStream;

        specialinvoke r32.<java.io.ByteArrayOutputStream: void <init>()>();

        r27 = r32;

        r33 = new androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream;

        $r15 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        specialinvoke r33.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void <init>(java.io.OutputStream,java.nio.ByteOrder)>(r27, $r15);

        r28 = r33;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: int writeExifSegment(androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream)>(r28);

        $r16 = r28.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream>;

        $r17 = (java.io.ByteArrayOutputStream) $r16;

        r5 = virtualinvoke $r17.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke r4.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[])>(r5);

        r34 = new java.util.zip.CRC32;

        specialinvoke r34.<java.util.zip.CRC32: void <init>()>();

        r6 = r34;

        $i9 = lengthof r5;

        $i10 = $i9 - 4;

        virtualinvoke r6.<java.util.zip.CRC32: void update(byte[],int,int)>(r5, 4, $i10);

        $l11 = virtualinvoke r6.<java.util.zip.CRC32: long getValue()>();

        $i12 = (int) $l11;

        virtualinvoke r4.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeInt(int)>($i12);

     label5:
        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: void closeQuietly(java.io.Closeable)>(r27);

        goto label8;

     label6:
        $r26 := @caughtexception;

        r7 = $r26;

     label7:
        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: void closeQuietly(java.io.Closeable)>(r27);

        throw r7;

     label8:
        r38 = (java.io.OutputStream) r4;

        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: int copy(java.io.InputStream,java.io.OutputStream)>(r3, r38);

        return;

        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private void saveWebpAttributes(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        java.io.InputStream r1;
        java.io.OutputStream r2, r65, r66, r67, r68, r69;
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r3, r57;
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream r4, r46, r58, r60;
        byte[] r5, $r11, $r12, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r33, $r34, r47, r48, r49, r50, $r51, r52, $r53, $r54;
        java.lang.Throwable r6, $r42, $r43, r55;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z11, z12, $z13;
        java.nio.ByteOrder $r8, $r10, $r15;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i11, $i13, $i16, $i18, $i25, $i26, $i27, $i28, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, i58, i59, i60, $i61, i63, i64, i65, i66, i67, i69, i70, $i71, $i72, $i73;
        byte $b7, $b8, $b9, $b10, $b12, $b14, $b15, $b17, $b19, $b22, $b23, $b24, $b40, $b41, $b42, $b43, $b44, $b45, b68;
        java.lang.StringBuilder $r36, $r37, $r38, $r39, $r40, r56;
        java.lang.String $r41;
        java.io.ByteArrayOutputStream r45, r59;
        java.io.IOException r61, r62, r63, r64;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.io.OutputStream;

        $z0 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z0 == 0 goto label01;

        r56 = new java.lang.StringBuilder;

        specialinvoke r56.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("saveWebpAttributes starting with (inputStream: ");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", outputStream: ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r41);

     label01:
        r57 = new androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        $r8 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        specialinvoke r57.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void <init>(java.io.InputStream,java.nio.ByteOrder)>(r1, $r8);

        r3 = r57;

        r58 = new androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream;

        $r10 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        specialinvoke r58.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void <init>(java.io.OutputStream,java.nio.ByteOrder)>(r2, $r10);

        r4 = r58;

        $r11 = <androidx.exifinterface.media.ExifInterface: byte[] WEBP_SIGNATURE_1>;

        $i0 = lengthof $r11;

        r65 = (java.io.OutputStream) r4;

        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: void copy(java.io.InputStream,java.io.OutputStream,int)>(r3, r65, $i0);

        $r12 = <androidx.exifinterface.media.ExifInterface: byte[] WEBP_SIGNATURE_2>;

        $i1 = lengthof $r12;

        $i2 = 4 + $i1;

        virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void skipFully(int)>($i2);

        r45 = null;

     label02:
        r59 = new java.io.ByteArrayOutputStream;

        specialinvoke r59.<java.io.ByteArrayOutputStream: void <init>()>();

        r45 = r59;

        r60 = new androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream;

        $r15 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        specialinvoke r60.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void <init>(java.io.OutputStream,java.nio.ByteOrder)>(r45, $r15);

        r46 = r60;

        $i3 = r0.<androidx.exifinterface.media.ExifInterface: int mOffsetToExifData>;

        if $i3 == 0 goto label04;

        $r33 = <androidx.exifinterface.media.ExifInterface: byte[] WEBP_SIGNATURE_1>;

        $i48 = lengthof $r33;

        $i50 = $i48 + 4;

        $r34 = <androidx.exifinterface.media.ExifInterface: byte[] WEBP_SIGNATURE_2>;

        $i49 = lengthof $r34;

        i58 = $i50 + $i49;

        $i51 = r0.<androidx.exifinterface.media.ExifInterface: int mOffsetToExifData>;

        $i52 = $i51 - i58;

        $i53 = $i52 - 4;

        $i54 = $i53 - 4;

        r66 = (java.io.OutputStream) r46;

        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: void copy(java.io.InputStream,java.io.OutputStream,int)>(r3, r66, $i54);

        virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void skipFully(int)>(4);

        i59 = virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        $i55 = i59 % 2;

        if $i55 == 0 goto label03;

        i59 = i59 + 1;

     label03:
        virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void skipFully(int)>(i59);

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: int writeExifSegment(androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream)>(r46);

        goto label27;

     label04:
        r47 = newarray (byte)[4];

        $i4 = virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[])>(r47);

        $i5 = lengthof r47;

        if $i4 == $i5 goto label05;

        r61 = new java.io.IOException;

        specialinvoke r61.<java.io.IOException: void <init>(java.lang.String)>("Encountered invalid length while parsing WebP chunk type");

        throw r61;

     label05:
        $r16 = <androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_VP8X>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r47, $r16);

        if $z1 == 0 goto label14;

        i60 = virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        $i38 = i60 % 2;

        if $i38 != 1 goto label06;

        $i61 = i60 + 1;

        goto label07;

     label06:
        $i61 = i60;

     label07:
        r48 = newarray (byte)[$i61];

        virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[])>(r48);

        $b40 = r48[0];

        $b41 = $b40 | 8;

        $b42 = (byte) $b41;

        r48[0] = $b42;

        $b43 = r48[0];

        $b44 = $b43 >> 1;

        $b45 = $b44 & 1;

        if $b45 != 1 goto label08;

        $z10 = 1;

        goto label09;

     label08:
        $z10 = 0;

     label09:
        z11 = $z10;

        $r27 = <androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_VP8X>;

        virtualinvoke r46.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[])>($r27);

        virtualinvoke r46.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeInt(int)>(i60);

        virtualinvoke r46.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[])>(r48);

        if z11 == 0 goto label12;

        $r30 = <androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_ANIM>;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void copyChunksUpToGivenChunkType(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream,byte[],byte[])>(r3, r46, $r30, null);

     label10:
        r49 = newarray (byte)[4];

        virtualinvoke r1.<java.io.InputStream: int read(byte[])>(r49);

        $r31 = <androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_ANMF>;

        $z9 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r49, $r31);

        if $z9 != 0 goto label11;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: int writeExifSegment(androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream)>(r46);

        goto label13;

     label11:
        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void copyWebPChunk(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream,byte[])>(r3, r46, r49);

        goto label10;

     label12:
        $r29 = <androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_VP8>;

        $r28 = <androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_VP8L>;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void copyChunksUpToGivenChunkType(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream,byte[],byte[])>(r3, r46, $r29, $r28);

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: int writeExifSegment(androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream)>(r46);

     label13:
        goto label27;

     label14:
        $r17 = <androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_VP8>;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r47, $r17);

        if $z2 != 0 goto label15;

        $r26 = <androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_VP8L>;

        $z8 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r47, $r26);

        if $z8 == 0 goto label27;

     label15:
        i63 = virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        i64 = i63;

        $i6 = i63 % 2;

        if $i6 != 1 goto label16;

        i64 = i64 + 1;

     label16:
        i65 = 0;

        i66 = 0;

        i67 = 0;

        z12 = 0;

        r5 = newarray (byte)[3];

        $r18 = <androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_VP8>;

        $z3 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r47, $r18);

        if $z3 == 0 goto label19;

        virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[])>(r5);

        r50 = newarray (byte)[3];

        $i30 = virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[])>(r50);

        $i31 = lengthof r50;

        if $i30 != $i31 goto label17;

        $r25 = <androidx.exifinterface.media.ExifInterface: byte[] WEBP_VP8_SIGNATURE>;

        $z7 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r25, r50);

        if $z7 != 0 goto label18;

     label17:
        r62 = new java.io.IOException;

        specialinvoke r62.<java.io.IOException: void <init>(java.lang.String)>("Encountered error while checking VP8 signature");

        throw r62;

     label18:
        i65 = virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        $i32 = i65 << 18;

        i66 = $i32 >> 18;

        $i33 = i65 << 2;

        i67 = $i33 >> 18;

        $i35 = lengthof r5;

        $i34 = lengthof r50;

        $i36 = $i35 + $i34;

        $i37 = $i36 + 4;

        i64 = i64 - $i37;

        goto label23;

     label19:
        $r19 = <androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_VP8L>;

        $z4 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r47, $r19);

        if $z4 == 0 goto label23;

        b68 = virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: byte readByte()>();

        if b68 == 47 goto label20;

        r63 = new java.io.IOException;

        specialinvoke r63.<java.io.IOException: void <init>(java.lang.String)>("Encountered error while checking VP8L signature");

        throw r63;

     label20:
        i65 = virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        $i25 = i65 & 16383;

        i66 = $i25 + 1;

        $i26 = i65 & 268419072;

        $i27 = $i26 >>> 14;

        i67 = $i27 + 1;

        $i28 = i65 & 268435456;

        if $i28 == 0 goto label21;

        $z13 = 1;

        goto label22;

     label21:
        $z13 = 0;

     label22:
        z12 = $z13;

        i64 = i64 + -5;

     label23:
        $r51 = <androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_VP8X>;

        virtualinvoke r46.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[])>($r51);

        virtualinvoke r46.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeInt(int)>(10);

        r52 = newarray (byte)[10];

        if z12 == 0 goto label24;

        $b22 = r52[0];

        $b23 = $b22 | 16;

        $b24 = (byte) $b23;

        r52[0] = $b24;

     label24:
        $b7 = r52[0];

        $b8 = $b7 | 8;

        $b9 = (byte) $b8;

        r52[0] = $b9;

        i69 = i66 + -1;

        i70 = i67 + -1;

        $b10 = (byte) i69;

        r52[4] = $b10;

        $i11 = i69 >> 8;

        $b12 = (byte) $i11;

        r52[5] = $b12;

        $i13 = i69 >> 16;

        $b14 = (byte) $i13;

        r52[6] = $b14;

        $b15 = (byte) i70;

        r52[7] = $b15;

        $i16 = i70 >> 8;

        $b17 = (byte) $i16;

        r52[8] = $b17;

        $i18 = i70 >> 16;

        $b19 = (byte) $i18;

        r52[9] = $b19;

        virtualinvoke r46.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[])>(r52);

        virtualinvoke r46.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[])>(r47);

        virtualinvoke r46.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeInt(int)>(i63);

        $r20 = <androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_VP8>;

        $z5 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r47, $r20);

        if $z5 == 0 goto label25;

        virtualinvoke r46.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[])>(r5);

        $r22 = <androidx.exifinterface.media.ExifInterface: byte[] WEBP_VP8_SIGNATURE>;

        virtualinvoke r46.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[])>($r22);

        virtualinvoke r46.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeInt(int)>(i65);

        goto label26;

     label25:
        $r21 = <androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_VP8L>;

        $z6 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r47, $r21);

        if $z6 == 0 goto label26;

        virtualinvoke r46.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void write(int)>(47);

        virtualinvoke r46.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeInt(int)>(i65);

     label26:
        r67 = (java.io.OutputStream) r46;

        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: void copy(java.io.InputStream,java.io.OutputStream,int)>(r3, r67, i64);

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: int writeExifSegment(androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream)>(r46);

     label27:
        r68 = (java.io.OutputStream) r46;

        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: int copy(java.io.InputStream,java.io.OutputStream)>(r3, r68);

        $i71 = virtualinvoke r45.<java.io.ByteArrayOutputStream: int size()>();

        $r53 = <androidx.exifinterface.media.ExifInterface: byte[] WEBP_SIGNATURE_2>;

        $i72 = lengthof $r53;

        $i73 = $i71 + $i72;

        virtualinvoke r4.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeInt(int)>($i73);

        $r54 = <androidx.exifinterface.media.ExifInterface: byte[] WEBP_SIGNATURE_2>;

        virtualinvoke r4.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[])>($r54);

        r69 = (java.io.OutputStream) r4;

        virtualinvoke r45.<java.io.ByteArrayOutputStream: void writeTo(java.io.OutputStream)>(r69);

     label28:
        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: void closeQuietly(java.io.Closeable)>(r45);

        goto label32;

     label29:
        $r43 := @caughtexception;

        r55 = $r43;

        r64 = new java.io.IOException;

        specialinvoke r64.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to save WebP file", r55);

        throw r64;

     label30:
        $r42 := @caughtexception;

        r6 = $r42;

     label31:
        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: void closeQuietly(java.io.Closeable)>(r45);

        throw r6;

     label32:
        return;

        catch java.lang.Exception from label02 to label28 with label29;
        catch java.lang.Throwable from label02 to label28 with label30;
        catch java.lang.Throwable from label29 to label31 with label30;
    }

    private void copyChunksUpToGivenChunkType(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream, androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream, byte[], byte[]) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r1;
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream r2;
        byte[] r3, r4, r5;
        int $i0, $i1;
        boolean $z0, $z1;
        java.io.IOException $r6;
        java.lang.StringBuilder $r7, $r8, $r11, $r12, $r13, $r16, $r17;
        java.lang.String $r9, $r14, $r18, $r19;
        java.nio.charset.Charset $r10, $r15;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        r2 := @parameter1: androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream;

        r3 := @parameter2: byte[];

        r4 := @parameter3: byte[];

     label1:
        r5 = newarray (byte)[4];

        $i0 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[])>(r5);

        $i1 = lengthof r5;

        if $i0 == $i1 goto label4;

        $r6 = new java.io.IOException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Encountered invalid length while copying WebP chunks up tochunk type ");

        $r9 = new java.lang.String;

        $r10 = <androidx.exifinterface.media.ExifInterface: java.nio.charset.Charset ASCII>;

        specialinvoke $r9.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(r3, $r10);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        if r4 != null goto label2;

        $r19 = "";

        goto label3;

     label2:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or ");

        $r14 = new java.lang.String;

        $r15 = <androidx.exifinterface.media.ExifInterface: java.nio.charset.Charset ASCII>;

        specialinvoke $r14.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(r4, $r15);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $r17 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r18);

        throw $r6;

     label4:
        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void copyWebPChunk(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream,byte[])>(r1, r2, r5);

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r5, r3);

        if $z0 != 0 goto label6;

        if r4 == null goto label5;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r5, r4);

        if $z1 == 0 goto label5;

        goto label6;

     label5:
        goto label1;

     label6:
        return;
    }

    private void copyWebPChunk(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream, androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream, byte[]) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r1;
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream r2;
        byte[] r3;
        int i0, $i1, $i2;
        java.io.OutputStream r6;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        r2 := @parameter1: androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream;

        r3 := @parameter2: byte[];

        i0 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        virtualinvoke r2.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[])>(r3);

        virtualinvoke r2.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeInt(int)>(i0);

        $i1 = i0 % 2;

        if $i1 != 1 goto label1;

        $i2 = i0 + 1;

        goto label2;

     label1:
        $i2 = i0;

     label2:
        r6 = (java.io.OutputStream) r2;

        staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: void copy(java.io.InputStream,java.io.OutputStream,int)>(r1, r6, $i2);

        return;
    }

    private void readExifSegment(byte[], int) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        byte[] r1;
        int i0;
        androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream r2, $r3;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $r3 = new androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream;

        specialinvoke $r3.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: void <init>(byte[])>(r1);

        r2 = $r3;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void parseTiffHeaders(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)>(r2);

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void readImageFileDirectory(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream,int)>(r2, i0);

        return;
    }

    private void addDefaultValuesForCompatibility()
    {
        androidx.exifinterface.media.ExifInterface r0;
        java.lang.String r1, $r2, $r3, $r4, $r25, $r30;
        java.util.HashMap[] $r5, $r10, $r15, $r20, $r26;
        java.nio.ByteOrder $r6, $r11, $r16, $r21;
        java.util.HashMap $r7, $r12, $r17, $r22, $r27;
        androidx.exifinterface.media.ExifInterface$ExifAttribute $r8, $r13, $r18, $r23, $r28;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("DateTimeOriginal");

        if r1 == null goto label1;

        $r25 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("DateTime");

        if $r25 != null goto label1;

        $r26 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r27 = $r26[0];

        $r28 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createString(java.lang.String)>(r1);

        virtualinvoke $r27.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("DateTime", $r28);

     label1:
        $r30 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("ImageWidth");

        if $r30 != null goto label2;

        $r20 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r22 = $r20[0];

        $r21 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r23 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>(0L, $r21);

        virtualinvoke $r22.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageWidth", $r23);

     label2:
        $r2 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("ImageLength");

        if $r2 != null goto label3;

        $r15 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r17 = $r15[0];

        $r16 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r18 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>(0L, $r16);

        virtualinvoke $r17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageLength", $r18);

     label3:
        $r3 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("Orientation");

        if $r3 != null goto label4;

        $r10 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r12 = $r10[0];

        $r11 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r13 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>(0L, $r11);

        virtualinvoke $r12.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Orientation", $r13);

     label4:
        $r4 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>("LightSource");

        if $r4 != null goto label5;

        $r5 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r7 = $r5[1];

        $r6 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r8 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>(0L, $r6);

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("LightSource", $r8);

     label5:
        return;
    }

    private java.nio.ByteOrder readByteOrder(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r1;
        short s0;
        boolean $z0, $z1;
        java.nio.ByteOrder $r2, $r3;
        java.io.IOException $r4;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String $r7, $r9;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        s0 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: short readShort()>();

        lookupswitch(s0)
        {
            case 18761: goto label1;
            case 19789: goto label3;
            default: goto label5;
        };

     label1:
        $z1 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z1 == 0 goto label2;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", "readExifSegment: Byte Align II");

     label2:
        $r3 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        return $r3;

     label3:
        $z0 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z0 == 0 goto label4;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", "readExifSegment: Byte Align MM");

     label4:
        $r2 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        return $r2;

     label5:
        $r4 = new java.io.IOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid byte order: ");

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(s0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r9);

        throw $r4;
    }

    private void parseTiffHeaders(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r1;
        int i0, $i1, $i2, i3, i4;
        java.nio.ByteOrder $r2, $r3;
        java.io.IOException $r4, $r9;
        java.lang.StringBuilder $r5, $r6, $r7, $r10, $r11, $r13;
        java.lang.String $r8, $r12, $r14;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        $r2 = specialinvoke r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder readByteOrder(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)>(r1);

        r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder> = $r2;

        $r3 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void setByteOrder(java.nio.ByteOrder)>($r3);

        i0 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedShort()>();

        $i1 = r0.<androidx.exifinterface.media.ExifInterface: int mMimeType>;

        if $i1 == 7 goto label1;

        $i2 = r0.<androidx.exifinterface.media.ExifInterface: int mMimeType>;

        if $i2 == 10 goto label1;

        if i0 == 42 goto label1;

        $r9 = new java.io.IOException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid start code: ");

        $r12 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>($r14);

        throw $r9;

     label1:
        i3 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        if i3 >= 8 goto label2;

        $r4 = new java.io.IOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid first Ifd offset: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label2:
        i4 = i3 + -8;

        if i4 <= 0 goto label3;

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void skipFully(int)>(i4);

     label3:
        return;
    }

    private void readImageFileDirectory(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream, int) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream r1;
        int i0, i2, i3, $i5, $i12, $i15, $i16, $i17, $i19, $i20, $i23, $i25, $i28, $i30, $i31, $i33, $i37, $i38, i50, i52, i55, $i56, $i59, i60;
        short s1, $s27, s49;
        long l4, $l6, $l10, $l13, $l18, $l32, $l34, $l39, $l40, l51, $l53, l54, $l57;
        androidx.exifinterface.media.ExifInterface$ExifTag r2;
        java.util.Set $r3, $r9, $r46;
        java.lang.Integer $r4, $r10, $r20, $r24, $r47, $r111, $r112, $r113, $r114, $r125, r127;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, z25, $z26, $z27;
        byte $b7, $b14, $b21, $b41, $b43, $b58;
        java.lang.StringBuilder $r5, $r6, $r7, $r11, $r12, $r13, $r42, $r43, $r44, $r48, $r49, $r50, $r51, $r52, $r53, $r59, $r60, $r61, $r62, $r63, $r81, $r82, $r83, $r85, $r86, $r87, $r91, $r92, $r93, $r95, $r96, $r99, $r100, $r102, $r104, $r105, $r106, $r116, $r117, $r118;
        java.lang.String $r8, $r14, $r21, $r28, $r31, $r32, $r33, $r34, $r36, $r37, $r38, $r40, $r41, $r45, $r54, $r57, $r58, $r64, $r65, $r66, $r67, $r68, $r84, $r88, $r94, $r98, $r101, $r103, $r107, $r115, $r119, $r120;
        java.util.HashMap[] $r15, $r17, $r22, $r27, $r72, $r75, $r78;
        java.util.HashMap $r16, $r18, $r23, $r29, $r73, $r76, $r79, $r124;
        java.lang.Object[] $r19, $r55, $r108;
        java.lang.Object $r25, $r126;
        androidx.exifinterface.media.ExifInterface$ExifAttribute $r26, r121, r122, r123, r129;
        java.nio.ByteOrder $r35, $r39, $r69, $r70, $r71;
        java.lang.Long $r56;
        int[] $r89, $r90;
        java.lang.String[] $r97;
        byte[] r128;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream;

        i0 := @parameter1: int;

        $r3 = r0.<androidx.exifinterface.media.ExifInterface: java.util.Set mAttributesOffsets>;

        $i5 = r1.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: int mPosition>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r4);

        s1 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: short readShort()>();

        $z1 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z1 == 0 goto label01;

        $r116 = new java.lang.StringBuilder;

        specialinvoke $r116.<java.lang.StringBuilder: void <init>()>();

        $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("numberOfDirectoryEntry: ");

        $r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s1);

        $r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r119);

     label01:
        if s1 > 0 goto label02;

        return;

     label02:
        s49 = 0;

     label03:
        if s49 >= s1 goto label37;

        i2 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: int readUnsignedShort()>();

        i50 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: int readUnsignedShort()>();

        i3 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: int readInt()>();

        $i12 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: int position()>();

        $l13 = (long) $i12;

        l4 = $l13 + 4L;

        $r22 = <androidx.exifinterface.media.ExifInterface: java.util.HashMap[] sExifTagMapsForReading>;

        $r23 = $r22[i0];

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r25 = virtualinvoke $r23.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r24);

        r2 = (androidx.exifinterface.media.ExifInterface$ExifTag) $r25;

        $z8 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z8 == 0 goto label06;

        $r108 = newarray (java.lang.Object)[5];

        $r111 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r108[0] = $r111;

        $r112 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r108[1] = $r112;

        if r2 == null goto label04;

        $r120 = r2.<androidx.exifinterface.media.ExifInterface$ExifTag: java.lang.String name>;

        goto label05;

     label04:
        $r120 = null;

     label05:
        $r108[2] = $r120;

        $r113 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i50);

        $r108[3] = $r113;

        $r114 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r108[4] = $r114;

        $r115 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("ifdType: %d, tagNumber: %d, tagName: %s, dataFormat: %d, numberOfComponents: %d", $r108);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r115);

     label06:
        l51 = 0L;

        z25 = 0;

        if r2 != null goto label07;

        $z24 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z24 == 0 goto label14;

        $r104 = new java.lang.StringBuilder;

        specialinvoke $r104.<java.lang.StringBuilder: void <init>()>();

        $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skip the tag entry since tag number is not defined: ");

        $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r107);

        goto label14;

     label07:
        if i50 <= 0 goto label08;

        $r89 = <androidx.exifinterface.media.ExifInterface: int[] IFD_FORMAT_BYTES_PER_FORMAT>;

        $i37 = lengthof $r89;

        if i50 < $i37 goto label09;

     label08:
        $z9 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z9 == 0 goto label14;

        $r85 = new java.lang.StringBuilder;

        specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skip the tag entry since data format is invalid: ");

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i50);

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r88);

        goto label14;

     label09:
        $z21 = virtualinvoke r2.<androidx.exifinterface.media.ExifInterface$ExifTag: boolean isFormatCompatible(int)>(i50);

        if $z21 != 0 goto label10;

        $z23 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z23 == 0 goto label14;

        $r95 = new java.lang.StringBuilder;

        specialinvoke $r95.<java.lang.StringBuilder: void <init>()>();

        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skip the tag entry since data format (");

        $r97 = <androidx.exifinterface.media.ExifInterface: java.lang.String[] IFD_FORMAT_NAMES>;

        $r98 = $r97[i50];

        $r99 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r98);

        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is unexpected for tag: ");

        $r101 = r2.<androidx.exifinterface.media.ExifInterface$ExifTag: java.lang.String name>;

        $r102 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r101);

        $r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r103);

        goto label14;

     label10:
        if i50 != 7 goto label11;

        i50 = r2.<androidx.exifinterface.media.ExifInterface$ExifTag: int primaryFormat>;

     label11:
        $l40 = (long) i3;

        $r90 = <androidx.exifinterface.media.ExifInterface: int[] IFD_FORMAT_BYTES_PER_FORMAT>;

        $i38 = $r90[i50];

        $l39 = (long) $i38;

        l51 = $l40 * $l39;

        $b41 = l51 cmp 0L;

        if $b41 < 0 goto label12;

        $b43 = l51 cmp 2147483647L;

        if $b43 <= 0 goto label13;

     label12:
        $z22 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z22 == 0 goto label14;

        $r91 = new java.lang.StringBuilder;

        specialinvoke $r91.<java.lang.StringBuilder: void <init>()>();

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skip the tag entry since the number of components is invalid: ");

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r94);

        goto label14;

     label13:
        z25 = 1;

     label14:
        if z25 != 0 goto label15;

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: void seek(long)>(l4);

        goto label36;

     label15:
        $b14 = l51 cmp 4L;

        if $b14 <= 0 goto label19;

        i52 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: int readInt()>();

        $z18 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z18 == 0 goto label16;

        $r81 = new java.lang.StringBuilder;

        specialinvoke $r81.<java.lang.StringBuilder: void <init>()>();

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("seek to data offset: ");

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i52);

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r84);

     label16:
        $i30 = r0.<androidx.exifinterface.media.ExifInterface: int mMimeType>;

        if $i30 != 7 goto label18;

        $r66 = "MakerNote";

        $r65 = r2.<androidx.exifinterface.media.ExifInterface$ExifTag: java.lang.String name>;

        $z19 = virtualinvoke $r66.<java.lang.String: boolean equals(java.lang.Object)>($r65);

        if $z19 == 0 goto label17;

        r0.<androidx.exifinterface.media.ExifInterface: int mOrfMakerNoteOffset> = i52;

        goto label18;

     label17:
        if i0 != 6 goto label18;

        $r68 = "ThumbnailImage";

        $r67 = r2.<androidx.exifinterface.media.ExifInterface$ExifTag: java.lang.String name>;

        $z20 = virtualinvoke $r68.<java.lang.String: boolean equals(java.lang.Object)>($r67);

        if $z20 == 0 goto label18;

        r0.<androidx.exifinterface.media.ExifInterface: int mOrfThumbnailOffset> = i52;

        r0.<androidx.exifinterface.media.ExifInterface: int mOrfThumbnailLength> = i3;

        $r69 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r121 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)>(6, $r69);

        $i31 = r0.<androidx.exifinterface.media.ExifInterface: int mOrfThumbnailOffset>;

        $l32 = (long) $i31;

        $r70 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r122 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>($l32, $r70);

        $i33 = r0.<androidx.exifinterface.media.ExifInterface: int mOrfThumbnailLength>;

        $l34 = (long) $i33;

        $r71 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r123 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>($l34, $r71);

        $r72 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r73 = $r72[4];

        virtualinvoke $r73.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Compression", r121);

        $r75 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r76 = $r75[4];

        virtualinvoke $r76.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("JPEGInterchangeFormat", r122);

        $r78 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r79 = $r78[4];

        virtualinvoke $r79.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("JPEGInterchangeFormatLength", r123);

     label18:
        $l53 = (long) i52;

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: void seek(long)>($l53);

     label19:
        $r124 = <androidx.exifinterface.media.ExifInterface: java.util.HashMap sExifPointerTagMap>;

        $r125 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r126 = virtualinvoke $r124.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r125);

        r127 = (java.lang.Integer) $r126;

        $z26 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z26 == 0 goto label20;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nextIfdType: ");

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r127);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" byteCount: ");

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l51);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r64);

     label20:
        if r127 == null goto label30;

        l54 = -1L;

        tableswitch(i50)
        {
            case 3: goto label21;
            case 4: goto label23;
            case 5: goto label25;
            case 6: goto label25;
            case 7: goto label25;
            case 8: goto label22;
            case 9: goto label24;
            case 10: goto label25;
            case 11: goto label25;
            case 12: goto label25;
            case 13: goto label24;
            default: goto label25;
        };

     label21:
        $i28 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: int readUnsignedShort()>();

        l54 = (long) $i28;

        goto label25;

     label22:
        $s27 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: short readShort()>();

        l54 = (long) $s27;

        goto label25;

     label23:
        l54 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: long readUnsignedInt()>();

        goto label25;

     label24:
        $i20 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: int readInt()>();

        l54 = (long) $i20;

        goto label25;

     label25:
        $z27 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z27 == 0 goto label26;

        $r55 = newarray (java.lang.Object)[2];

        $r56 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l54);

        $r55[0] = $r56;

        $r57 = r2.<androidx.exifinterface.media.ExifInterface$ExifTag: java.lang.String name>;

        $r55[1] = $r57;

        $r58 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Offset: %d, tagName: %s", $r55);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r58);

     label26:
        $b21 = l54 cmp 0L;

        if $b21 <= 0 goto label28;

        $r46 = r0.<androidx.exifinterface.media.ExifInterface: java.util.Set mAttributesOffsets>;

        $i23 = (int) l54;

        $r47 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i23);

        $z16 = interfaceinvoke $r46.<java.util.Set: boolean contains(java.lang.Object)>($r47);

        if $z16 != 0 goto label27;

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: void seek(long)>(l54);

        $i25 = virtualinvoke r127.<java.lang.Integer: int intValue()>();

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void readImageFileDirectory(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream,int)>(r1, $i25);

        goto label29;

     label27:
        $z17 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z17 == 0 goto label29;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skip jump into the IFD since it has already been read: IfdType ");

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r127);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (at ");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l54);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r54);

        goto label29;

     label28:
        $z15 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z15 == 0 goto label29;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skip jump into the IFD since its offset is invalid: ");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l54);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r45);

     label29:
        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: void seek(long)>(l4);

        goto label36;

     label30:
        $i15 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: int position()>();

        $i16 = r0.<androidx.exifinterface.media.ExifInterface: int mOffsetToExifData>;

        i55 = $i15 + $i16;

        $i17 = (int) l51;

        r128 = newarray (byte)[$i17];

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: void readFully(byte[])>(r128);

        $r26 = new androidx.exifinterface.media.ExifInterface$ExifAttribute;

        $l18 = (long) i55;

        specialinvoke $r26.<androidx.exifinterface.media.ExifInterface$ExifAttribute: void <init>(int,int,long,byte[])>(i50, i3, $l18, r128);

        r129 = $r26;

        $r27 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r29 = $r27[i0];

        $r28 = r2.<androidx.exifinterface.media.ExifInterface$ExifTag: java.lang.String name>;

        virtualinvoke $r29.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r28, r129);

        $r32 = "DNGVersion";

        $r31 = r2.<androidx.exifinterface.media.ExifInterface$ExifTag: java.lang.String name>;

        $z10 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>($r31);

        if $z10 == 0 goto label31;

        r0.<androidx.exifinterface.media.ExifInterface: int mMimeType> = 3;

     label31:
        $r34 = "Make";

        $r33 = r2.<androidx.exifinterface.media.ExifInterface$ExifTag: java.lang.String name>;

        $z11 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>($r33);

        if $z11 != 0 goto label32;

        $r41 = "Model";

        $r40 = r2.<androidx.exifinterface.media.ExifInterface$ExifTag: java.lang.String name>;

        $z14 = virtualinvoke $r41.<java.lang.String: boolean equals(java.lang.Object)>($r40);

        if $z14 == 0 goto label33;

     label32:
        $r35 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r36 = virtualinvoke r129.<androidx.exifinterface.media.ExifInterface$ExifAttribute: java.lang.String getStringValue(java.nio.ByteOrder)>($r35);

        $z12 = virtualinvoke $r36.<java.lang.String: boolean contains(java.lang.CharSequence)>("PENTAX");

        if $z12 != 0 goto label34;

     label33:
        $r38 = "Compression";

        $r37 = r2.<androidx.exifinterface.media.ExifInterface$ExifTag: java.lang.String name>;

        $z13 = virtualinvoke $r38.<java.lang.String: boolean equals(java.lang.Object)>($r37);

        if $z13 == 0 goto label35;

        $r39 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $i19 = virtualinvoke r129.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r39);

        if $i19 != 65535 goto label35;

     label34:
        r0.<androidx.exifinterface.media.ExifInterface: int mMimeType> = 8;

     label35:
        $i56 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: int position()>();

        $l57 = (long) $i56;

        $b58 = $l57 cmp l4;

        if $b58 == 0 goto label36;

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: void seek(long)>(l4);

     label36:
        $i59 = s49 + 1;

        s49 = (short) $i59;

        goto label03;

     label37:
        i60 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: int readInt()>();

        $z2 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z2 == 0 goto label38;

        $r19 = newarray (java.lang.Object)[1];

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i60);

        $r19[0] = $r20;

        $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("nextIfdOffset: %d", $r19);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r21);

     label38:
        $l6 = (long) i60;

        $b7 = $l6 cmp 0L;

        if $b7 <= 0 goto label41;

        $r9 = r0.<androidx.exifinterface.media.ExifInterface: java.util.Set mAttributesOffsets>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i60);

        $z4 = interfaceinvoke $r9.<java.util.Set: boolean contains(java.lang.Object)>($r10);

        if $z4 != 0 goto label40;

        $l10 = (long) i60;

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: void seek(long)>($l10);

        $r15 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r16 = $r15[4];

        $z6 = virtualinvoke $r16.<java.util.HashMap: boolean isEmpty()>();

        if $z6 == 0 goto label39;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void readImageFileDirectory(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream,int)>(r1, 4);

        goto label42;

     label39:
        $r17 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r18 = $r17[5];

        $z7 = virtualinvoke $r18.<java.util.HashMap: boolean isEmpty()>();

        if $z7 == 0 goto label42;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void readImageFileDirectory(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream,int)>(r1, 5);

        goto label42;

     label40:
        $z5 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z5 == 0 goto label42;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stop reading file since re-reading an IFD may cause an infinite loop: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i60);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r14);

        goto label42;

     label41:
        $z3 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z3 == 0 goto label42;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stop reading file since a wrong offset may cause an infinite loop: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i60);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r8);

     label42:
        return;
    }

    private void retrieveJpegImageSize(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream, int) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream r1;
        int i0, i1, i2;
        androidx.exifinterface.media.ExifInterface$ExifAttribute r2, r3, r4, r5;
        byte[] r6;
        java.util.HashMap[] $r7, $r10, $r13, $r16;
        java.util.HashMap $r8, $r11, $r14, $r17;
        java.lang.Object $r9, $r12, $r15, $r18;
        java.nio.ByteOrder $r19, $r20;
        long $l3;
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream $r21;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream;

        i0 := @parameter1: int;

        $r7 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r8 = $r7[i0];

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ImageLength");

        r2 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r9;

        $r10 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r11 = $r10[i0];

        $r12 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ImageWidth");

        r3 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r12;

        if r2 == null goto label1;

        if r3 != null goto label2;

     label1:
        $r13 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r14 = $r13[i0];

        $r15 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("JPEGInterchangeFormat");

        r4 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r15;

        $r16 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r17 = $r16[i0];

        $r18 = virtualinvoke $r17.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("JPEGInterchangeFormatLength");

        r5 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r18;

        if r4 == null goto label2;

        if r5 == null goto label2;

        $r19 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i1 = virtualinvoke r4.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r19);

        $r20 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i2 = virtualinvoke r4.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r20);

        $l3 = (long) i1;

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: void seek(long)>($l3);

        r6 = newarray (byte)[i2];

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: int read(byte[])>(r6);

        $r21 = new androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        specialinvoke $r21.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void <init>(byte[])>(r6);

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void getJpegAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,int,int)>($r21, i1, i0);

     label2:
        return;
    }

    private void setThumbnailData(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r1;
        java.util.HashMap r2;
        androidx.exifinterface.media.ExifInterface$ExifAttribute r3;
        java.util.HashMap[] $r4;
        java.lang.Object $r5;
        java.nio.ByteOrder $r6;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        $r4 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        r2 = $r4[4];

        $r5 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("Compression");

        r3 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r5;

        if r3 == null goto label4;

        $r6 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $i0 = virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r6);

        r0.<androidx.exifinterface.media.ExifInterface: int mThumbnailCompression> = $i0;

        $i1 = r0.<androidx.exifinterface.media.ExifInterface: int mThumbnailCompression>;

        lookupswitch($i1)
        {
            case 1: goto label2;
            case 6: goto label1;
            case 7: goto label2;
            default: goto label3;
        };

     label1:
        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void handleThumbnailFromJfif(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,java.util.HashMap)>(r1, r2);

        goto label3;

     label2:
        $z0 = specialinvoke r0.<androidx.exifinterface.media.ExifInterface: boolean isSupportedDataType(java.util.HashMap)>(r2);

        if $z0 == 0 goto label3;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void handleThumbnailFromStrips(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,java.util.HashMap)>(r1, r2);

     label3:
        goto label5;

     label4:
        r0.<androidx.exifinterface.media.ExifInterface: int mThumbnailCompression> = 6;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void handleThumbnailFromJfif(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,java.util.HashMap)>(r1, r2);

     label5:
        return;
    }

    private void handleThumbnailFromJfif(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream, java.util.HashMap) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r1;
        java.util.HashMap r2;
        androidx.exifinterface.media.ExifInterface$ExifAttribute r3, r4;
        int i0, $i1, $i6, i7;
        byte[] r5;
        java.lang.Object $r6, $r7;
        java.nio.ByteOrder $r8, $r9;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14;
        java.lang.String $r15, $r16;
        android.content.res.AssetManager$AssetInputStream $r17;
        java.io.FileDescriptor $r18;
        long $l3;
        boolean $z0;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        r2 := @parameter1: java.util.HashMap;

        $r6 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("JPEGInterchangeFormat");

        r3 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r6;

        $r7 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("JPEGInterchangeFormatLength");

        r4 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r7;

        if r3 == null goto label4;

        if r4 == null goto label4;

        $r8 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i7 = virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r8);

        $r9 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i0 = virtualinvoke r4.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r9);

        $i1 = r0.<androidx.exifinterface.media.ExifInterface: int mMimeType>;

        if $i1 != 7 goto label1;

        $i6 = r0.<androidx.exifinterface.media.ExifInterface: int mOrfMakerNoteOffset>;

        i7 = i7 + $i6;

     label1:
        if i7 <= 0 goto label3;

        if i0 <= 0 goto label3;

        r0.<androidx.exifinterface.media.ExifInterface: boolean mHasThumbnail> = 1;

        $r16 = r0.<androidx.exifinterface.media.ExifInterface: java.lang.String mFilename>;

        if $r16 != null goto label2;

        $r17 = r0.<androidx.exifinterface.media.ExifInterface: android.content.res.AssetManager$AssetInputStream mAssetInputStream>;

        if $r17 != null goto label2;

        $r18 = r0.<androidx.exifinterface.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor>;

        if $r18 != null goto label2;

        r5 = newarray (byte)[i0];

        $l3 = (long) i7;

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: long skip(long)>($l3);

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[])>(r5);

        r0.<androidx.exifinterface.media.ExifInterface: byte[] mThumbnailBytes> = r5;

     label2:
        r0.<androidx.exifinterface.media.ExifInterface: int mThumbnailOffset> = i7;

        r0.<androidx.exifinterface.media.ExifInterface: int mThumbnailLength> = i0;

     label3:
        $z0 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z0 == 0 goto label4;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting thumbnail attributes with offset: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", length: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r15);

     label4:
        return;
    }

    private void handleThumbnailFromStrips(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream, java.util.HashMap) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r1;
        java.util.HashMap r2;
        androidx.exifinterface.media.ExifInterface$ExifAttribute r3, r4;
        long[] r5, r6, r24;
        int i0, i1, i2, $i4, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i16, $i17, $i22, $i23, $i24, $i28, $i29, i35, i36, i38, i39, i40, i41;
        byte[] r7, r25;
        java.lang.Object $r8, $r9, $r11, $r13;
        java.nio.ByteOrder $r10, $r12;
        boolean $z1;
        long $l11, $l14, $l15, $l18, $l19, $l20, $l30, $l31, l34, l37;
        byte $b21, $b32;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r19, $r20, $r21, $r22;
        java.lang.String $r18, $r23;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        r2 := @parameter1: java.util.HashMap;

        $r8 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("StripOffsets");

        r3 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r8;

        $r9 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("StripByteCounts");

        r4 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r9;

        if r3 == null goto label14;

        if r4 == null goto label14;

        $r10 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r11 = virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$ExifAttribute: java.lang.Object getValue(java.nio.ByteOrder)>($r10);

        r5 = staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: long[] convertToLongArray(java.lang.Object)>($r11);

        $r12 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r13 = virtualinvoke r4.<androidx.exifinterface.media.ExifInterface$ExifAttribute: java.lang.Object getValue(java.nio.ByteOrder)>($r12);

        r6 = staticinvoke <androidx.exifinterface.media.ExifInterfaceUtils: long[] convertToLongArray(java.lang.Object)>($r13);

        if r5 == null goto label01;

        $i4 = lengthof r5;

        if $i4 != 0 goto label02;

     label01:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", "stripOffsets should not be null or have zero length.");

        return;

     label02:
        if r6 == null goto label03;

        $i6 = lengthof r6;

        if $i6 != 0 goto label04;

     label03:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", "stripByteCounts should not be null or have zero length.");

        return;

     label04:
        $i8 = lengthof r5;

        $i7 = lengthof r6;

        if $i8 == $i7 goto label05;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", "stripOffsets and stripByteCounts should have same length.");

        return;

     label05:
        l34 = 0L;

        r24 = r6;

        i35 = lengthof r24;

        i36 = 0;

     label06:
        if i36 >= i35 goto label07;

        l37 = r24[i36];

        l34 = l34 + l37;

        i36 = i36 + 1;

        goto label06;

     label07:
        $i9 = (int) l34;

        r25 = newarray (byte)[$i9];

        i38 = 0;

        i39 = 0;

        r0.<androidx.exifinterface.media.ExifInterface: boolean mAreThumbnailStripsConsecutive> = 1;

        r0.<androidx.exifinterface.media.ExifInterface: boolean mHasThumbnailStrips> = 1;

        r0.<androidx.exifinterface.media.ExifInterface: boolean mHasThumbnail> = 1;

        i40 = 0;

     label08:
        $i10 = lengthof r5;

        if i40 >= $i10 goto label13;

        $l14 = r5[i40];

        i0 = (int) $l14;

        $l15 = r6[i40];

        i1 = (int) $l15;

        $i16 = lengthof r5;

        $i17 = $i16 - 1;

        if i40 >= $i17 goto label09;

        $i28 = i0 + i1;

        $l31 = (long) $i28;

        $i29 = i40 + 1;

        $l30 = r5[$i29];

        $b32 = $l31 cmp $l30;

        if $b32 == 0 goto label09;

        r0.<androidx.exifinterface.media.ExifInterface: boolean mAreThumbnailStripsConsecutive> = 0;

     label09:
        i2 = i0 - i38;

        if i2 >= 0 goto label10;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", "Invalid strip offset value");

        return;

     label10:
        $l18 = (long) i2;

        $l19 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: long skip(long)>($l18);

        $l20 = (long) i2;

        $b21 = $l19 cmp $l20;

        if $b21 == 0 goto label11;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to skip ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes.");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r23);

        return;

     label11:
        i41 = i38 + i2;

        r7 = newarray (byte)[i1];

        $i22 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[])>(r7);

        if $i22 == i1 goto label12;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to read ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes.");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r18);

        return;

     label12:
        i38 = i41 + i1;

        $i23 = lengthof r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, 0, r25, i39, $i23);

        $i24 = lengthof r7;

        i39 = i39 + $i24;

        i40 = i40 + 1;

        goto label08;

     label13:
        r0.<androidx.exifinterface.media.ExifInterface: byte[] mThumbnailBytes> = r25;

        $z1 = r0.<androidx.exifinterface.media.ExifInterface: boolean mAreThumbnailStripsConsecutive>;

        if $z1 == 0 goto label14;

        $l11 = r5[0];

        $i12 = (int) $l11;

        r0.<androidx.exifinterface.media.ExifInterface: int mThumbnailOffset> = $i12;

        $i13 = lengthof r25;

        r0.<androidx.exifinterface.media.ExifInterface: int mThumbnailLength> = $i13;

     label14:
        return;
    }

    private boolean isSupportedDataType(java.util.HashMap) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        java.util.HashMap r1;
        androidx.exifinterface.media.ExifInterface$ExifAttribute r2, r4;
        int[] r3, $r8, $r11, $r12;
        int i0, $i2;
        java.lang.Object $r5, $r7, $r9;
        java.nio.ByteOrder $r6, $r10;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: java.util.HashMap;

        $r5 = virtualinvoke r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("BitsPerSample");

        r2 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r5;

        if r2 == null goto label4;

        $r6 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r7 = virtualinvoke r2.<androidx.exifinterface.media.ExifInterface$ExifAttribute: java.lang.Object getValue(java.nio.ByteOrder)>($r6);

        r3 = (int[]) $r7;

        $r8 = <androidx.exifinterface.media.ExifInterface: int[] BITS_PER_SAMPLE_RGB>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r8, r3);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $i2 = r0.<androidx.exifinterface.media.ExifInterface: int mMimeType>;

        if $i2 != 3 goto label4;

        $r9 = virtualinvoke r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("PhotometricInterpretation");

        r4 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r9;

        if r4 == null goto label4;

        $r10 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i0 = virtualinvoke r4.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r10);

        if i0 != 1 goto label2;

        $r12 = <androidx.exifinterface.media.ExifInterface: int[] BITS_PER_SAMPLE_GREYSCALE_2>;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>(r3, $r12);

        if $z2 != 0 goto label3;

     label2:
        if i0 != 6 goto label4;

        $r11 = <androidx.exifinterface.media.ExifInterface: int[] BITS_PER_SAMPLE_RGB>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>(r3, $r11);

        if $z1 == 0 goto label4;

     label3:
        return 1;

     label4:
        $z3 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z3 == 0 goto label5;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", "Unsupported data type value");

     label5:
        return 0;
    }

    private boolean isThumbnail(java.util.HashMap) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        java.util.HashMap r1;
        androidx.exifinterface.media.ExifInterface$ExifAttribute r2, r3;
        int i0, i1;
        java.lang.Object $r4, $r5;
        java.nio.ByteOrder $r6, $r7;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: java.util.HashMap;

        $r4 = virtualinvoke r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ImageLength");

        r2 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r4;

        $r5 = virtualinvoke r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ImageWidth");

        r3 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r5;

        if r2 == null goto label1;

        if r3 == null goto label1;

        $r6 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i0 = virtualinvoke r2.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r6);

        $r7 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i1 = virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r7);

        if i0 > 512 goto label1;

        if i1 > 512 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void validateImages() throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        androidx.exifinterface.media.ExifInterface$ExifAttribute r1, r2;
        java.util.HashMap[] $r3, $r6, $r9, $r11, $r13, $r15, $r16, $r19, $r22, $r24;
        java.util.HashMap $r4, $r7, $r10, $r12, $r14, $r17, $r20, $r23, $r25;
        java.lang.Object $r5, $r8;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void swapBasedOnImageSize(int,int)>(0, 5);

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void swapBasedOnImageSize(int,int)>(0, 4);

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void swapBasedOnImageSize(int,int)>(5, 4);

        $r3 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r4 = $r3[1];

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("PixelXDimension");

        r1 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r5;

        $r6 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r7 = $r6[1];

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("PixelYDimension");

        r2 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r8;

        if r1 == null goto label1;

        if r2 == null goto label1;

        $r16 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r17 = $r16[0];

        virtualinvoke $r17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageWidth", r1);

        $r19 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r20 = $r19[0];

        virtualinvoke $r20.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageLength", r2);

     label1:
        $r22 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r23 = $r22[4];

        $z1 = virtualinvoke $r23.<java.util.HashMap: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        $r9 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r10 = $r9[5];

        $z0 = specialinvoke r0.<androidx.exifinterface.media.ExifInterface: boolean isThumbnail(java.util.HashMap)>($r10);

        if $z0 == 0 goto label2;

        $r13 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r11 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r12 = $r11[5];

        $r13[4] = $r12;

        $r15 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r14 = new java.util.HashMap;

        specialinvoke $r14.<java.util.HashMap: void <init>()>();

        $r15[5] = $r14;

     label2:
        $r24 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r25 = $r24[4];

        $z2 = specialinvoke r0.<androidx.exifinterface.media.ExifInterface: boolean isThumbnail(java.util.HashMap)>($r25);

        if $z2 != 0 goto label3;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", "No image meets the size requirements of a thumbnail image.");

     label3:
        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void replaceInvalidTags(int,java.lang.String,java.lang.String)>(0, "ThumbnailOrientation", "Orientation");

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void replaceInvalidTags(int,java.lang.String,java.lang.String)>(0, "ThumbnailImageLength", "ImageLength");

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void replaceInvalidTags(int,java.lang.String,java.lang.String)>(0, "ThumbnailImageWidth", "ImageWidth");

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void replaceInvalidTags(int,java.lang.String,java.lang.String)>(5, "ThumbnailOrientation", "Orientation");

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void replaceInvalidTags(int,java.lang.String,java.lang.String)>(5, "ThumbnailImageLength", "ImageLength");

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void replaceInvalidTags(int,java.lang.String,java.lang.String)>(5, "ThumbnailImageWidth", "ImageWidth");

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void replaceInvalidTags(int,java.lang.String,java.lang.String)>(4, "Orientation", "ThumbnailOrientation");

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void replaceInvalidTags(int,java.lang.String,java.lang.String)>(4, "ImageLength", "ThumbnailImageLength");

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void replaceInvalidTags(int,java.lang.String,java.lang.String)>(4, "ImageWidth", "ThumbnailImageWidth");

        return;
    }

    private void updateImageSizeValues(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream, int) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream r1;
        int i0, i1, i2, i3, $i4, $i6, $i7, $i8, $i10, i11, i12, i13;
        androidx.exifinterface.media.ExifInterface$ExifAttribute r2, r3, r4, r5, r6, r7, r8, r63, r64;
        java.util.HashMap[] $r9, $r12, $r15, $r18, $r21, $r30, $r33, $r45, $r48;
        java.util.HashMap $r10, $r13, $r16, $r19, $r22, $r31, $r34, $r46, $r49;
        java.lang.Object $r11, $r14, $r17, $r20, $r23, $r37, $r52;
        java.nio.ByteOrder $r24, $r25, $r26, $r27, $r28, $r29, $r36, $r43, $r44, $r51, $r58, $r60;
        java.lang.StringBuilder $r38, $r39, $r41, $r53, $r54, $r56;
        java.lang.String $r40, $r42, $r55, $r57;
        androidx.exifinterface.media.ExifInterface$Rational $r59, $r61;
        androidx.exifinterface.media.ExifInterface$Rational[] r62;
        int[] r65;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream;

        i0 := @parameter1: int;

        $r9 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r10 = $r9[i0];

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("DefaultCropSize");

        r2 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r11;

        $r12 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r13 = $r12[i0];

        $r14 = virtualinvoke $r13.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("SensorTopBorder");

        r3 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r14;

        $r15 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r16 = $r15[i0];

        $r17 = virtualinvoke $r16.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("SensorLeftBorder");

        r4 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r17;

        $r18 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r19 = $r18[i0];

        $r20 = virtualinvoke $r19.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("SensorBottomBorder");

        r5 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r20;

        $r21 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r22 = $r21[i0];

        $r23 = virtualinvoke $r22.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("SensorRightBorder");

        r6 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r23;

        if r2 == null goto label07;

        $i4 = r2.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int format>;

        if $i4 != 5 goto label03;

        $r51 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r52 = virtualinvoke r2.<androidx.exifinterface.media.ExifInterface$ExifAttribute: java.lang.Object getValue(java.nio.ByteOrder)>($r51);

        r62 = (androidx.exifinterface.media.ExifInterface$Rational[]) $r52;

        if r62 == null goto label01;

        $i10 = lengthof r62;

        if $i10 == 2 goto label02;

     label01:
        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid crop size values. cropSize=");

        $r55 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r62);

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", $r57);

        return;

     label02:
        $r59 = r62[0];

        $r58 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r63 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createURational(androidx.exifinterface.media.ExifInterface$Rational,java.nio.ByteOrder)>($r59, $r58);

        $r61 = r62[1];

        $r60 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r64 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createURational(androidx.exifinterface.media.ExifInterface$Rational,java.nio.ByteOrder)>($r61, $r60);

        goto label06;

     label03:
        $r36 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r37 = virtualinvoke r2.<androidx.exifinterface.media.ExifInterface$ExifAttribute: java.lang.Object getValue(java.nio.ByteOrder)>($r36);

        r65 = (int[]) $r37;

        if r65 == null goto label04;

        $i6 = lengthof r65;

        if $i6 == 2 goto label05;

     label04:
        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid crop size values. cropSize=");

        $r40 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>(r65);

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ExifInterface", $r42);

        return;

     label05:
        $i7 = r65[0];

        $r43 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r63 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)>($i7, $r43);

        $i8 = r65[1];

        $r44 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r64 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)>($i8, $r44);

     label06:
        $r45 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r46 = $r45[i0];

        virtualinvoke $r46.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageWidth", r63);

        $r48 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r49 = $r48[i0];

        virtualinvoke $r49.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageLength", r64);

        goto label10;

     label07:
        if r3 == null goto label09;

        if r4 == null goto label09;

        if r5 == null goto label09;

        if r6 == null goto label09;

        $r24 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i11 = virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r24);

        $r25 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i12 = virtualinvoke r5.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r25);

        $r26 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i13 = virtualinvoke r6.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r26);

        $r27 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i1 = virtualinvoke r4.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r27);

        if i12 <= i11 goto label08;

        if i13 <= i1 goto label08;

        i2 = i12 - i11;

        i3 = i13 - i1;

        $r28 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r7 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)>(i2, $r28);

        $r29 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        r8 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)>(i3, $r29);

        $r30 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r31 = $r30[i0];

        virtualinvoke $r31.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageLength", r7);

        $r33 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r34 = $r33[i0];

        virtualinvoke $r34.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ImageWidth", r8);

     label08:
        goto label10;

     label09:
        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void retrieveJpegImageSize(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream,int)>(r1, i0);

     label10:
        return;
    }

    private int writeExifSegment(androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream r1;
        int[] r2, r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i18, $i19, $i21, $i23, $i25, $i27, $i28, $i29, $i30, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i44, i45, i46, i47, $i48, i49, i50, i51, $i52, i53, i54, i55, i56, i57, i58, $i59, i60, i62, $i63, i64, i65;
        androidx.exifinterface.media.ExifInterface$ExifAttribute r4, $r55, $r63, $r71, $r86, $r91, $r105, $r110, $r115, $r120, $r128, $r136, $r144, r164, r176;
        androidx.exifinterface.media.ExifInterface$ExifTag[][] $r5, $r6, $r13, $r73, $r157, $r161, $r167;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19;
        java.util.HashMap[] $r7, $r9, $r11, $r14, $r16, $r18, $r23, $r25, $r27, $r29, $r37, $r40, $r49, $r57, $r65, $r77, $r83, $r88, $r93, $r95, $r97, $r102, $r107, $r112, $r117, $r122, $r130, $r138, $r146, $r150, $r171;
        java.util.HashMap $r8, $r10, $r12, $r15, $r17, $r19, $r24, $r26, $r28, $r30, $r38, $r41, $r53, $r61, $r69, $r78, $r85, $r90, $r94, $r96, $r98, $r104, $r109, $r114, $r119, $r126, $r134, $r142, $r147, $r151, $r172;
        byte[] $r20, $r22, $r34, $r35, $r36, $r45, $r47, $r48;
        java.nio.ByteOrder $r21, $r52, $r60, $r68, $r84, $r89, $r103, $r108, $r113, $r118, $r125, $r133, $r141, $r165, $r166, $r177;
        java.util.Set $r31, $r99, $r148, $r173;
        java.lang.Object $r32, $r33, $r39, $r42, $r43, $r44, $r100, $r101, $r149, $r152, r159;
        long $l17, $l20, $l22, $l24, $l26, $l32, $l43;
        androidx.exifinterface.media.ExifInterface$ExifTag[] $r50, $r58, $r66, $r123, $r131, $r139, r155;
        androidx.exifinterface.media.ExifInterface$ExifTag $r51, $r59, $r67, $r124, $r132, $r140, r156, r170;
        java.lang.String $r54, $r62, $r70, $r82, $r127, $r135, $r143, $r154;
        java.lang.Object[] $r74, r158;
        java.lang.Integer $r75, $r76, $r79, $r80, $r81;
        java.util.Map$Entry r160, r163, r169, r175;
        java.util.Iterator r162, r168, r174;
        short $s61;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        r1 := @parameter0: androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream;

        $r5 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i2 = lengthof $r5;

        r2 = newarray (int)[$i2];

        $r6 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i3 = lengthof $r6;

        r3 = newarray (int)[$i3];

        r155 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        i45 = lengthof r155;

        i46 = 0;

     label01:
        if i46 >= i45 goto label02;

        r156 = r155[i46];

        $r154 = r156.<androidx.exifinterface.media.ExifInterface$ExifTag: java.lang.String name>;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void removeAttribute(java.lang.String)>($r154);

        i46 = i46 + 1;

        goto label01;

     label02:
        $z0 = r0.<androidx.exifinterface.media.ExifInterface: boolean mHasThumbnail>;

        if $z0 == 0 goto label04;

        $z18 = r0.<androidx.exifinterface.media.ExifInterface: boolean mHasThumbnailStrips>;

        if $z18 == 0 goto label03;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void removeAttribute(java.lang.String)>("StripOffsets");

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void removeAttribute(java.lang.String)>("StripByteCounts");

        goto label04;

     label03:
        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void removeAttribute(java.lang.String)>("JPEGInterchangeFormat");

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface: void removeAttribute(java.lang.String)>("JPEGInterchangeFormatLength");

     label04:
        i47 = 0;

     label05:
        $r157 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i48 = lengthof $r157;

        if i47 >= $i48 goto label09;

        $r146 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r147 = $r146[i47];

        $r148 = virtualinvoke $r147.<java.util.HashMap: java.util.Set entrySet()>();

        r158 = interfaceinvoke $r148.<java.util.Set: java.lang.Object[] toArray()>();

        i49 = lengthof r158;

        i50 = 0;

     label06:
        if i50 >= i49 goto label08;

        r159 = r158[i50];

        r160 = (java.util.Map$Entry) r159;

        $r149 = interfaceinvoke r160.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r149 != null goto label07;

        $r150 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r151 = $r150[i47];

        $r152 = interfaceinvoke r160.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke $r151.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r152);

     label07:
        i50 = i50 + 1;

        goto label06;

     label08:
        i47 = i47 + 1;

        goto label05;

     label09:
        $r7 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r8 = $r7[1];

        $z1 = virtualinvoke $r8.<java.util.HashMap: boolean isEmpty()>();

        if $z1 != 0 goto label10;

        $r138 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r142 = $r138[0];

        $r139 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        $r140 = $r139[1];

        $r143 = $r140.<androidx.exifinterface.media.ExifInterface$ExifTag: java.lang.String name>;

        $r141 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r144 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>(0L, $r141);

        virtualinvoke $r142.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r143, $r144);

     label10:
        $r9 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r10 = $r9[2];

        $z2 = virtualinvoke $r10.<java.util.HashMap: boolean isEmpty()>();

        if $z2 != 0 goto label11;

        $r130 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r134 = $r130[0];

        $r131 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        $r132 = $r131[2];

        $r135 = $r132.<androidx.exifinterface.media.ExifInterface$ExifTag: java.lang.String name>;

        $r133 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r136 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>(0L, $r133);

        virtualinvoke $r134.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r135, $r136);

     label11:
        $r11 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r12 = $r11[3];

        $z3 = virtualinvoke $r12.<java.util.HashMap: boolean isEmpty()>();

        if $z3 != 0 goto label12;

        $r122 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r126 = $r122[1];

        $r123 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        $r124 = $r123[3];

        $r127 = $r124.<androidx.exifinterface.media.ExifInterface$ExifTag: java.lang.String name>;

        $r125 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r128 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>(0L, $r125);

        virtualinvoke $r126.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r127, $r128);

     label12:
        $z4 = r0.<androidx.exifinterface.media.ExifInterface: boolean mHasThumbnail>;

        if $z4 == 0 goto label14;

        $z17 = r0.<androidx.exifinterface.media.ExifInterface: boolean mHasThumbnailStrips>;

        if $z17 == 0 goto label13;

        $r112 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r114 = $r112[4];

        $r113 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r115 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)>(0, $r113);

        virtualinvoke $r114.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("StripOffsets", $r115);

        $r117 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r119 = $r117[4];

        $i44 = r0.<androidx.exifinterface.media.ExifInterface: int mThumbnailLength>;

        $r118 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r120 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)>($i44, $r118);

        virtualinvoke $r119.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("StripByteCounts", $r120);

        goto label14;

     label13:
        $r102 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r104 = $r102[4];

        $r103 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r105 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>(0L, $r103);

        virtualinvoke $r104.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("JPEGInterchangeFormat", $r105);

        $r107 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r109 = $r107[4];

        $i42 = r0.<androidx.exifinterface.media.ExifInterface: int mThumbnailLength>;

        $l43 = (long) $i42;

        $r108 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r110 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>($l43, $r108);

        virtualinvoke $r109.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("JPEGInterchangeFormatLength", $r110);

     label14:
        i51 = 0;

     label15:
        $r161 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i52 = lengthof $r161;

        if i51 >= $i52 goto label19;

        i53 = 0;

        $r97 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r98 = $r97[i51];

        $r99 = virtualinvoke $r98.<java.util.HashMap: java.util.Set entrySet()>();

        r162 = interfaceinvoke $r99.<java.util.Set: java.util.Iterator iterator()>();

     label16:
        $z16 = interfaceinvoke r162.<java.util.Iterator: boolean hasNext()>();

        if $z16 == 0 goto label18;

        $r100 = interfaceinvoke r162.<java.util.Iterator: java.lang.Object next()>();

        r163 = (java.util.Map$Entry) $r100;

        $r101 = interfaceinvoke r163.<java.util.Map$Entry: java.lang.Object getValue()>();

        r164 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r101;

        i54 = virtualinvoke r164.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int size()>();

        if i54 <= 4 goto label17;

        i53 = i53 + i54;

     label17:
        goto label16;

     label18:
        $i40 = r3[i51];

        $i41 = $i40 + i53;

        r3[i51] = $i41;

        i51 = i51 + 1;

        goto label15;

     label19:
        i55 = 8;

        i56 = 0;

     label20:
        $r13 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i4 = lengthof $r13;

        if i56 >= $i4 goto label22;

        $r93 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r94 = $r93[i56];

        $z15 = virtualinvoke $r94.<java.util.HashMap: boolean isEmpty()>();

        if $z15 != 0 goto label21;

        r2[i56] = i55;

        $r95 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r96 = $r95[i56];

        $i34 = virtualinvoke $r96.<java.util.HashMap: int size()>();

        $i35 = $i34 * 12;

        $i36 = 2 + $i35;

        $i38 = $i36 + 4;

        $i37 = r3[i56];

        $i39 = $i38 + $i37;

        i55 = i55 + $i39;

     label21:
        i56 = i56 + 1;

        goto label20;

     label22:
        $z5 = r0.<androidx.exifinterface.media.ExifInterface: boolean mHasThumbnail>;

        if $z5 == 0 goto label25;

        i57 = i55;

        $z14 = r0.<androidx.exifinterface.media.ExifInterface: boolean mHasThumbnailStrips>;

        if $z14 == 0 goto label23;

        $r88 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r90 = $r88[4];

        $r89 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r91 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)>(i57, $r89);

        virtualinvoke $r90.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("StripOffsets", $r91);

        goto label24;

     label23:
        $r83 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r85 = $r83[4];

        $l32 = (long) i57;

        $r84 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r86 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>($l32, $r84);

        virtualinvoke $r85.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("JPEGInterchangeFormat", $r86);

     label24:
        r0.<androidx.exifinterface.media.ExifInterface: int mThumbnailOffset> = i57;

        $i33 = r0.<androidx.exifinterface.media.ExifInterface: int mThumbnailLength>;

        i55 = i55 + $i33;

     label25:
        i58 = i55;

        $i59 = r0.<androidx.exifinterface.media.ExifInterface: int mMimeType>;

        if $i59 != 4 goto label26;

        i58 = i58 + 8;

     label26:
        $z6 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z6 == 0 goto label28;

        i60 = 0;

     label27:
        $r73 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i27 = lengthof $r73;

        if i60 >= $i27 goto label28;

        $r74 = newarray (java.lang.Object)[5];

        $r75 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i60);

        $r74[0] = $r75;

        $i28 = r2[i60];

        $r76 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i28);

        $r74[1] = $r76;

        $r77 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r78 = $r77[i60];

        $i29 = virtualinvoke $r78.<java.util.HashMap: int size()>();

        $r79 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i29);

        $r74[2] = $r79;

        $i30 = r3[i60];

        $r80 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i30);

        $r74[3] = $r80;

        $r81 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i58);

        $r74[4] = $r81;

        $r82 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("index: %d, offsets: %d, tag count: %d, data sizes: %d, total size: %d", $r74);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", $r82);

        i60 = i60 + 1;

        goto label27;

     label28:
        $r14 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r15 = $r14[1];

        $z7 = virtualinvoke $r15.<java.util.HashMap: boolean isEmpty()>();

        if $z7 != 0 goto label29;

        $r65 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r69 = $r65[0];

        $r66 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        $r67 = $r66[1];

        $r70 = $r67.<androidx.exifinterface.media.ExifInterface$ExifTag: java.lang.String name>;

        $i25 = r2[1];

        $l26 = (long) $i25;

        $r68 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r71 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>($l26, $r68);

        virtualinvoke $r69.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r70, $r71);

     label29:
        $r16 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r17 = $r16[2];

        $z8 = virtualinvoke $r17.<java.util.HashMap: boolean isEmpty()>();

        if $z8 != 0 goto label30;

        $r57 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r61 = $r57[0];

        $r58 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        $r59 = $r58[2];

        $r62 = $r59.<androidx.exifinterface.media.ExifInterface$ExifTag: java.lang.String name>;

        $i23 = r2[2];

        $l24 = (long) $i23;

        $r60 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r63 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>($l24, $r60);

        virtualinvoke $r61.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r62, $r63);

     label30:
        $r18 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r19 = $r18[3];

        $z9 = virtualinvoke $r19.<java.util.HashMap: boolean isEmpty()>();

        if $z9 != 0 goto label31;

        $r49 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r53 = $r49[1];

        $r50 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        $r51 = $r50[3];

        $r54 = $r51.<androidx.exifinterface.media.ExifInterface$ExifTag: java.lang.String name>;

        $i21 = r2[3];

        $l22 = (long) $i21;

        $r52 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r55 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)>($l22, $r52);

        virtualinvoke $r53.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r54, $r55);

     label31:
        $i5 = r0.<androidx.exifinterface.media.ExifInterface: int mMimeType>;

        lookupswitch($i5)
        {
            case 4: goto label32;
            case 13: goto label33;
            case 14: goto label34;
            default: goto label35;
        };

     label32:
        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeUnsignedShort(int)>(i58);

        $r48 = <androidx.exifinterface.media.ExifInterface: byte[] IDENTIFIER_EXIF_APP1>;

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[])>($r48);

        goto label35;

     label33:
        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeInt(int)>(i58);

        $r47 = <androidx.exifinterface.media.ExifInterface: byte[] PNG_CHUNK_TYPE_EXIF>;

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[])>($r47);

        goto label35;

     label34:
        $r20 = <androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_EXIF>;

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[])>($r20);

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeInt(int)>(i58);

     label35:
        $r165 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        $r166 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        if $r165 != $r166 goto label36;

        $s61 = 19789;

        goto label37;

     label36:
        $s61 = 18761;

     label37:
        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeShort(short)>($s61);

        $r21 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void setByteOrder(java.nio.ByteOrder)>($r21);

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeUnsignedShort(int)>(42);

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeUnsignedInt(long)>(8L);

        i62 = 0;

     label38:
        $r167 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i63 = lengthof $r167;

        if i62 >= $i63 goto label49;

        $r23 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r24 = $r23[i62];

        $z11 = virtualinvoke $r24.<java.util.HashMap: boolean isEmpty()>();

        if $z11 != 0 goto label48;

        $r25 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r26 = $r25[i62];

        $i8 = virtualinvoke $r26.<java.util.HashMap: int size()>();

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeUnsignedShort(int)>($i8);

        $i9 = r2[i62];

        $i10 = $i9 + 2;

        $r27 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r28 = $r27[i62];

        $i11 = virtualinvoke $r28.<java.util.HashMap: int size()>();

        $i12 = $i11 * 12;

        $i13 = $i10 + $i12;

        i64 = $i13 + 4;

        $r29 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r30 = $r29[i62];

        $r31 = virtualinvoke $r30.<java.util.HashMap: java.util.Set entrySet()>();

        r168 = interfaceinvoke $r31.<java.util.Set: java.util.Iterator iterator()>();

     label39:
        $z12 = interfaceinvoke r168.<java.util.Iterator: boolean hasNext()>();

        if $z12 == 0 goto label43;

        $r39 = interfaceinvoke r168.<java.util.Iterator: java.lang.Object next()>();

        r169 = (java.util.Map$Entry) $r39;

        $r40 = <androidx.exifinterface.media.ExifInterface: java.util.HashMap[] sExifTagMapsForWriting>;

        $r41 = $r40[i62];

        $r42 = interfaceinvoke r169.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r43 = virtualinvoke $r41.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r42);

        r170 = (androidx.exifinterface.media.ExifInterface$ExifTag) $r43;

        i0 = r170.<androidx.exifinterface.media.ExifInterface$ExifTag: int number>;

        $r44 = interfaceinvoke r169.<java.util.Map$Entry: java.lang.Object getValue()>();

        r4 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r44;

        i1 = virtualinvoke r4.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int size()>();

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeUnsignedShort(int)>(i0);

        $i18 = r4.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int format>;

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeUnsignedShort(int)>($i18);

        $i19 = r4.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeInt(int)>($i19);

        if i1 <= 4 goto label40;

        $l20 = (long) i64;

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeUnsignedInt(long)>($l20);

        i64 = i64 + i1;

        goto label42;

     label40:
        $r45 = r4.<androidx.exifinterface.media.ExifInterface$ExifAttribute: byte[] bytes>;

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[])>($r45);

        if i1 >= 4 goto label42;

        i65 = i1;

     label41:
        if i65 >= 4 goto label42;

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeByte(int)>(0);

        i65 = i65 + 1;

        goto label41;

     label42:
        goto label39;

     label43:
        if i62 != 0 goto label44;

        $r37 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r38 = $r37[4];

        $z13 = virtualinvoke $r38.<java.util.HashMap: boolean isEmpty()>();

        if $z13 != 0 goto label44;

        $i16 = r2[4];

        $l17 = (long) $i16;

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeUnsignedInt(long)>($l17);

        goto label45;

     label44:
        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeUnsignedInt(long)>(0L);

     label45:
        $r171 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r172 = $r171[i62];

        $r173 = virtualinvoke $r172.<java.util.HashMap: java.util.Set entrySet()>();

        r174 = interfaceinvoke $r173.<java.util.Set: java.util.Iterator iterator()>();

     label46:
        $z19 = interfaceinvoke r174.<java.util.Iterator: boolean hasNext()>();

        if $z19 == 0 goto label48;

        $r32 = interfaceinvoke r174.<java.util.Iterator: java.lang.Object next()>();

        r175 = (java.util.Map$Entry) $r32;

        $r33 = interfaceinvoke r175.<java.util.Map$Entry: java.lang.Object getValue()>();

        r176 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r33;

        $r34 = r176.<androidx.exifinterface.media.ExifInterface$ExifAttribute: byte[] bytes>;

        $i14 = lengthof $r34;

        if $i14 <= 4 goto label47;

        $r36 = r176.<androidx.exifinterface.media.ExifInterface$ExifAttribute: byte[] bytes>;

        $r35 = r176.<androidx.exifinterface.media.ExifInterface$ExifAttribute: byte[] bytes>;

        $i15 = lengthof $r35;

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[],int,int)>($r36, 0, $i15);

     label47:
        goto label46;

     label48:
        i62 = i62 + 1;

        goto label38;

     label49:
        $z10 = r0.<androidx.exifinterface.media.ExifInterface: boolean mHasThumbnail>;

        if $z10 == 0 goto label50;

        $r22 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface: byte[] getThumbnailBytes()>();

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[])>($r22);

     label50:
        $i6 = r0.<androidx.exifinterface.media.ExifInterface: int mMimeType>;

        if $i6 != 14 goto label51;

        $i7 = i58 % 2;

        if $i7 != 1 goto label51;

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeByte(int)>(0);

     label51:
        $r177 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void setByteOrder(java.nio.ByteOrder)>($r177);

        return i58;
    }

    private static android.util.Pair guessDataFormat(java.lang.String)
    {
        java.lang.String r0, $r13, $r14, $r24, $r27;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        long $l0, $l1, $l3, $l5, l18, l19;
        byte $b2, $b4, $b6, $b8, $b9, $b10, $b11;
        android.util.Pair $r1, $r4, $r7, $r10, $r15, $r18, $r21, $r33, $r36, $r39, $r54, $r58, r63, r64;
        java.lang.Integer $r2, $r3, $r5, $r6, $r8, $r9, $r11, $r12, $r16, $r17, $r19, $r20, $r22, $r23, $r26, $r30, $r32, $r34, $r35, $r37, $r38, $r40, $r41, $r44, $r46, $r49, $r52, $r55, $r56, $r59, $r60, $r66;
        int $i7, $i12, $i13, i14, i15, i16, $i17;
        double $d0, $d1;
        java.lang.Object $r25, $r28, $r29, $r31, $r42, $r43, $r45, $r47, $r48, $r50, $r51, $r65;
        java.lang.Throwable $r53, $r57, $r61, r68, r70, r71;
        java.lang.String[] r62, r67;
        java.lang.Long r69;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(",");

        if $z0 == 0 goto label11;

        r62 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(",", -1);

        $r24 = r62[0];

        r63 = staticinvoke <androidx.exifinterface.media.ExifInterface: android.util.Pair guessDataFormat(java.lang.String)>($r24);

        $r25 = r63.<android.util.Pair: java.lang.Object first>;

        $r26 = (java.lang.Integer) $r25;

        $i12 = virtualinvoke $r26.<java.lang.Integer: int intValue()>();

        if $i12 != 2 goto label01;

        return r63;

     label01:
        i14 = 1;

     label02:
        $i13 = lengthof r62;

        if i14 >= $i13 goto label10;

        $r27 = r62[i14];

        r64 = staticinvoke <androidx.exifinterface.media.ExifInterface: android.util.Pair guessDataFormat(java.lang.String)>($r27);

        i15 = -1;

        i16 = -1;

        $r28 = r64.<android.util.Pair: java.lang.Object first>;

        $r30 = (java.lang.Integer) $r28;

        $r29 = r63.<android.util.Pair: java.lang.Object first>;

        $z2 = virtualinvoke $r30.<java.lang.Integer: boolean equals(java.lang.Object)>($r29);

        if $z2 != 0 goto label03;

        $r50 = r64.<android.util.Pair: java.lang.Object second>;

        $r52 = (java.lang.Integer) $r50;

        $r51 = r63.<android.util.Pair: java.lang.Object first>;

        $z5 = virtualinvoke $r52.<java.lang.Integer: boolean equals(java.lang.Object)>($r51);

        if $z5 == 0 goto label04;

     label03:
        $r31 = r63.<android.util.Pair: java.lang.Object first>;

        $r32 = (java.lang.Integer) $r31;

        i15 = virtualinvoke $r32.<java.lang.Integer: int intValue()>();

     label04:
        $r65 = r63.<android.util.Pair: java.lang.Object second>;

        $r66 = (java.lang.Integer) $r65;

        $i17 = virtualinvoke $r66.<java.lang.Integer: int intValue()>();

        if $i17 == -1 goto label06;

        $r42 = r64.<android.util.Pair: java.lang.Object first>;

        $r44 = (java.lang.Integer) $r42;

        $r43 = r63.<android.util.Pair: java.lang.Object second>;

        $z3 = virtualinvoke $r44.<java.lang.Integer: boolean equals(java.lang.Object)>($r43);

        if $z3 != 0 goto label05;

        $r47 = r64.<android.util.Pair: java.lang.Object second>;

        $r49 = (java.lang.Integer) $r47;

        $r48 = r63.<android.util.Pair: java.lang.Object second>;

        $z4 = virtualinvoke $r49.<java.lang.Integer: boolean equals(java.lang.Object)>($r48);

        if $z4 == 0 goto label06;

     label05:
        $r45 = r63.<android.util.Pair: java.lang.Object second>;

        $r46 = (java.lang.Integer) $r45;

        i16 = virtualinvoke $r46.<java.lang.Integer: int intValue()>();

     label06:
        if i15 != -1 goto label07;

        if i16 != -1 goto label07;

        $r39 = new android.util.Pair;

        $r40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        specialinvoke $r39.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r40, $r41);

        return $r39;

     label07:
        if i15 != -1 goto label08;

        $r36 = new android.util.Pair;

        $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i16);

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        specialinvoke $r36.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r37, $r38);

        r63 = $r36;

        goto label09;

     label08:
        if i16 != -1 goto label09;

        $r33 = new android.util.Pair;

        $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i15);

        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        specialinvoke $r33.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r34, $r35);

        r63 = $r33;

        goto label09;

     label09:
        i14 = i14 + 1;

        goto label02;

     label10:
        return r63;

     label11:
        $z1 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("/");

        if $z1 == 0 goto label22;

        r67 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("/", -1);

        $i7 = lengthof r67;

        if $i7 != 2 goto label21;

     label12:
        $r13 = r67[0];

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r13);

        l18 = (long) $d0;

        $r14 = r67[1];

        $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r14);

        l19 = (long) $d1;

        $b8 = l18 cmp 0L;

        if $b8 < 0 goto label13;

        $b9 = l19 cmp 0L;

        if $b9 >= 0 goto label15;

     label13:
        $r15 = new android.util.Pair;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        specialinvoke $r15.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r16, $r17);

     label14:
        return $r15;

     label15:
        $b10 = l18 cmp 2147483647L;

        if $b10 > 0 goto label16;

        $b11 = l19 cmp 2147483647L;

        if $b11 <= 0 goto label18;

     label16:
        $r18 = new android.util.Pair;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        specialinvoke $r18.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r19, $r20);

     label17:
        return $r18;

     label18:
        $r21 = new android.util.Pair;

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        specialinvoke $r21.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r22, $r23);

     label19:
        return $r21;

     label20:
        $r61 := @caughtexception;

        r68 = $r61;

     label21:
        $r10 = new android.util.Pair;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        specialinvoke $r10.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r11, $r12);

        return $r10;

     label22:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r0);

        r69 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $l1 = virtualinvoke r69.<java.lang.Long: long longValue()>();

        $b2 = $l1 cmp 0L;

        if $b2 < 0 goto label24;

        $l5 = virtualinvoke r69.<java.lang.Long: long longValue()>();

        $b6 = $l5 cmp 65535L;

        if $b6 > 0 goto label24;

        $r7 = new android.util.Pair;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        specialinvoke $r7.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r8, $r9);

     label23:
        return $r7;

     label24:
        $l3 = virtualinvoke r69.<java.lang.Long: long longValue()>();

        $b4 = $l3 cmp 0L;

        if $b4 >= 0 goto label26;

        $r4 = new android.util.Pair;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        specialinvoke $r4.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r5, $r6);

     label25:
        return $r4;

     label26:
        $r1 = new android.util.Pair;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        specialinvoke $r1.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r2, $r3);

     label27:
        return $r1;

     label28:
        $r57 := @caughtexception;

        r70 = $r57;

     label29:
        staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r0);

        $r58 = new android.util.Pair;

        $r59 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(12);

        $r60 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        specialinvoke $r58.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r59, $r60);

     label30:
        return $r58;

     label31:
        $r53 := @caughtexception;

        r71 = $r53;

        $r54 = new android.util.Pair;

        $r55 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r56 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        specialinvoke $r54.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r55, $r56);

        return $r54;

        catch java.lang.NumberFormatException from label12 to label14 with label20;
        catch java.lang.NumberFormatException from label15 to label17 with label20;
        catch java.lang.NumberFormatException from label18 to label19 with label20;
        catch java.lang.NumberFormatException from label22 to label23 with label28;
        catch java.lang.NumberFormatException from label24 to label25 with label28;
        catch java.lang.NumberFormatException from label26 to label27 with label28;
        catch java.lang.NumberFormatException from label29 to label30 with label31;
    }

    private void swapBasedOnImageSize(int, int) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface r0;
        int i0, i1, i2, i3, i4, i5;
        androidx.exifinterface.media.ExifInterface$ExifAttribute r1, r2, r3, r4;
        java.util.HashMap r5, $r7, $r9, $r11, $r14, $r17, $r20, $r28;
        java.util.HashMap[] $r6, $r8, $r10, $r13, $r16, $r19, $r26, $r27, $r29, $r30;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object $r12, $r15, $r18, $r21;
        java.nio.ByteOrder $r22, $r23, $r24, $r25;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r6 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r7 = $r6[i0];

        $z0 = virtualinvoke $r7.<java.util.HashMap: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r8 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r9 = $r8[i1];

        $z2 = virtualinvoke $r9.<java.util.HashMap: boolean isEmpty()>();

        if $z2 == 0 goto label3;

     label1:
        $z1 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z1 == 0 goto label2;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", "Cannot perform swap since only one image data exists");

     label2:
        return;

     label3:
        $r10 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r11 = $r10[i0];

        $r12 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ImageLength");

        r1 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r12;

        $r13 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r14 = $r13[i0];

        $r15 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ImageWidth");

        r2 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r15;

        $r16 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r17 = $r16[i1];

        $r18 = virtualinvoke $r17.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ImageLength");

        r3 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r18;

        $r19 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r20 = $r19[i1];

        $r21 = virtualinvoke $r20.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ImageWidth");

        r4 = (androidx.exifinterface.media.ExifInterface$ExifAttribute) $r21;

        if r1 == null goto label4;

        if r2 != null goto label5;

     label4:
        $z3 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z3 == 0 goto label8;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", "First image does not contain valid size information");

        goto label8;

     label5:
        if r3 == null goto label6;

        if r4 != null goto label7;

     label6:
        $z4 = <androidx.exifinterface.media.ExifInterface: boolean DEBUG>;

        if $z4 == 0 goto label8;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", "Second image does not contain valid size information");

        goto label8;

     label7:
        $r22 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i2 = virtualinvoke r1.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r22);

        $r23 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i3 = virtualinvoke r2.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r23);

        $r24 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i4 = virtualinvoke r3.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r24);

        $r25 = r0.<androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder>;

        i5 = virtualinvoke r4.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)>($r25);

        if i2 >= i4 goto label8;

        if i3 >= i5 goto label8;

        $r26 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        r5 = $r26[i0];

        $r29 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r27 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r28 = $r27[i1];

        $r29[i0] = $r28;

        $r30 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r30[i1] = r5;

     label8:
        return;
    }

    private void replaceInvalidTags(int, java.lang.String, java.lang.String)
    {
        androidx.exifinterface.media.ExifInterface r0;
        int i0;
        java.lang.String r1, r2;
        java.util.HashMap[] $r3, $r5, $r8, $r9, $r14;
        java.util.HashMap $r4, $r6, $r10, $r11, $r15;
        boolean $z0;
        java.lang.Object $r7, $r12;

        r0 := @this: androidx.exifinterface.media.ExifInterface;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r4 = $r3[i0];

        $z0 = virtualinvoke $r4.<java.util.HashMap: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r5 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r6 = $r5[i0];

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        if $r7 == null goto label1;

        $r8 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r11 = $r8[i0];

        $r9 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r10 = $r9[i0];

        $r12 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r12);

        $r14 = r0.<androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes>;

        $r15 = $r14[i0];

        virtualinvoke $r15.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

     label1:
        return;
    }

    private static boolean shouldSupportSeek(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 4 goto label1;

        if i0 == 9 goto label1;

        if i0 == 13 goto label1;

        if i0 != 14 goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    private static boolean isSupportedFormatForSavingAttributes(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 4 goto label1;

        if i0 == 13 goto label1;

        if i0 != 14 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    static void <clinit>()
    {
        androidx.exifinterface.media.ExifInterface$ExifTag[] r0, $r49, $r92, $r167, $r200, $r202, $r241, $r245, $r248, $r250, $r253, $r254, $r255, $r256, $r257, $r258, $r259, $r260, $r261, $r262, $r263, $r294, $r300, $r306, $r312, $r318, $r324;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12;
        androidx.exifinterface.media.ExifInterface$ExifTag r1, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r110, $r111, $r112, $r113, $r114, $r115, $r116, $r117, $r118, $r119, $r120, $r121, $r122, $r123, $r124, $r125, $r126, $r127, $r128, $r129, $r130, $r131, $r132, $r133, $r134, $r135, $r136, $r137, $r138, $r139, $r140, $r141, $r142, $r143, $r144, $r145, $r146, $r147, $r148, $r149, $r150, $r151, $r152, $r153, $r154, $r155, $r156, $r157, $r158, $r159, $r160, $r161, $r162, $r163, $r164, $r165, $r166, $r168, $r169, $r170, $r171, $r172, $r173, $r174, $r175, $r176, $r177, $r178, $r179, $r180, $r181, $r182, $r183, $r184, $r185, $r186, $r187, $r188, $r189, $r190, $r191, $r192, $r193, $r194, $r195, $r196, $r197, $r198, $r199, $r201, $r203, $r204, $r205, $r206, $r207, $r208, $r209, $r210, $r211, $r212, $r213, $r214, $r215, $r216, $r217, $r218, $r219, $r220, $r221, $r222, $r223, $r224, $r225, $r226, $r227, $r228, $r229, $r230, $r231, $r232, $r233, $r234, $r235, $r236, $r237, $r238, $r239, $r240, $r242, $r243, $r244, $r246, $r247, $r249, $r251, $r264, $r265, $r266, $r267, $r268, $r269, $r295, $r301, $r307, $r313, $r319, $r325;
        boolean $z0;
        java.lang.Integer[] $r2, $r8;
        java.lang.Integer $r3, $r4, $r5, $r6, $r9, $r10, $r11, $r12, $r297, $r298, $r303, $r304, $r309, $r310, $r315, $r316, $r321, $r322, $r327, $r328, $r341;
        java.util.List $r7, $r13, $r276;
        int[] $r14, $r15, $r16, $r47;
        byte[] $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r33, $r36, $r39, $r42, $r45, $r48, $r281, $r284;
        java.lang.String $r31, $r34, $r37, $r40, $r43, $r280, $r283, $r344;
        java.nio.charset.Charset $r32, $r35, $r38, $r41, $r44, $r278, $r279, $r282;
        java.lang.String[] $r46, $r275;
        androidx.exifinterface.media.ExifInterface$ExifTag[][] $r252, $r270, $r272, $r293, $r338;
        java.util.HashMap[] $r271, $r273, $r335, $r337, $r339, $r343;
        java.util.HashSet $r274;
        java.util.HashMap $r277, $r296, $r302, $r308, $r314, $r320, $r326, $r334, $r336, $r340, $r345;
        java.text.SimpleDateFormat $r285, $r287, $r289, $r291;
        java.util.Locale $r286, $r290;
        java.util.TimeZone $r288, $r292;
        java.util.regex.Pattern $r330, $r331, $r332, $r333;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("ExifInterface", 3);

        <androidx.exifinterface.media.ExifInterface: boolean DEBUG> = $z0;

        $r2 = newarray (java.lang.Integer)[4];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r2[0] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r2[1] = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r2[2] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        $r2[3] = $r6;

        $r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        <androidx.exifinterface.media.ExifInterface: java.util.List ROTATION_ORDER> = $r7;

        $r8 = newarray (java.lang.Integer)[4];

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r8[0] = $r9;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7);

        $r8[1] = $r10;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r8[2] = $r11;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r8[3] = $r12;

        $r13 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r8);

        <androidx.exifinterface.media.ExifInterface: java.util.List FLIPPED_ROTATION_ORDER> = $r13;

        $r14 = newarray (int)[3];

        $r14[0] = 8;

        $r14[1] = 8;

        $r14[2] = 8;

        <androidx.exifinterface.media.ExifInterface: int[] BITS_PER_SAMPLE_RGB> = $r14;

        $r15 = newarray (int)[1];

        $r15[0] = 4;

        <androidx.exifinterface.media.ExifInterface: int[] BITS_PER_SAMPLE_GREYSCALE_1> = $r15;

        $r16 = newarray (int)[1];

        $r16[0] = 8;

        <androidx.exifinterface.media.ExifInterface: int[] BITS_PER_SAMPLE_GREYSCALE_2> = $r16;

        $r17 = newarray (byte)[3];

        $r17[0] = -1;

        $r17[1] = -40;

        $r17[2] = -1;

        <androidx.exifinterface.media.ExifInterface: byte[] JPEG_SIGNATURE> = $r17;

        $r18 = newarray (byte)[4];

        $r18[0] = 102;

        $r18[1] = 116;

        $r18[2] = 121;

        $r18[3] = 112;

        <androidx.exifinterface.media.ExifInterface: byte[] HEIF_TYPE_FTYP> = $r18;

        $r19 = newarray (byte)[4];

        $r19[0] = 109;

        $r19[1] = 105;

        $r19[2] = 102;

        $r19[3] = 49;

        <androidx.exifinterface.media.ExifInterface: byte[] HEIF_BRAND_MIF1> = $r19;

        $r20 = newarray (byte)[4];

        $r20[0] = 104;

        $r20[1] = 101;

        $r20[2] = 105;

        $r20[3] = 99;

        <androidx.exifinterface.media.ExifInterface: byte[] HEIF_BRAND_HEIC> = $r20;

        $r21 = newarray (byte)[6];

        $r21[0] = 79;

        $r21[1] = 76;

        $r21[2] = 89;

        $r21[3] = 77;

        $r21[4] = 80;

        $r21[5] = 0;

        <androidx.exifinterface.media.ExifInterface: byte[] ORF_MAKER_NOTE_HEADER_1> = $r21;

        $r22 = newarray (byte)[10];

        $r22[0] = 79;

        $r22[1] = 76;

        $r22[2] = 89;

        $r22[3] = 77;

        $r22[4] = 80;

        $r22[5] = 85;

        $r22[6] = 83;

        $r22[7] = 0;

        $r22[8] = 73;

        $r22[9] = 73;

        <androidx.exifinterface.media.ExifInterface: byte[] ORF_MAKER_NOTE_HEADER_2> = $r22;

        $r23 = newarray (byte)[8];

        $r23[0] = -119;

        $r23[1] = 80;

        $r23[2] = 78;

        $r23[3] = 71;

        $r23[4] = 13;

        $r23[5] = 10;

        $r23[6] = 26;

        $r23[7] = 10;

        <androidx.exifinterface.media.ExifInterface: byte[] PNG_SIGNATURE> = $r23;

        $r24 = newarray (byte)[4];

        $r24[0] = 101;

        $r24[1] = 88;

        $r24[2] = 73;

        $r24[3] = 102;

        <androidx.exifinterface.media.ExifInterface: byte[] PNG_CHUNK_TYPE_EXIF> = $r24;

        $r25 = newarray (byte)[4];

        $r25[0] = 73;

        $r25[1] = 72;

        $r25[2] = 68;

        $r25[3] = 82;

        <androidx.exifinterface.media.ExifInterface: byte[] PNG_CHUNK_TYPE_IHDR> = $r25;

        $r26 = newarray (byte)[4];

        $r26[0] = 73;

        $r26[1] = 69;

        $r26[2] = 78;

        $r26[3] = 68;

        <androidx.exifinterface.media.ExifInterface: byte[] PNG_CHUNK_TYPE_IEND> = $r26;

        $r27 = newarray (byte)[4];

        $r27[0] = 82;

        $r27[1] = 73;

        $r27[2] = 70;

        $r27[3] = 70;

        <androidx.exifinterface.media.ExifInterface: byte[] WEBP_SIGNATURE_1> = $r27;

        $r28 = newarray (byte)[4];

        $r28[0] = 87;

        $r28[1] = 69;

        $r28[2] = 66;

        $r28[3] = 80;

        <androidx.exifinterface.media.ExifInterface: byte[] WEBP_SIGNATURE_2> = $r28;

        $r29 = newarray (byte)[4];

        $r29[0] = 69;

        $r29[1] = 88;

        $r29[2] = 73;

        $r29[3] = 70;

        <androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_EXIF> = $r29;

        $r30 = newarray (byte)[3];

        $r30[0] = -99;

        $r30[1] = 1;

        $r30[2] = 42;

        <androidx.exifinterface.media.ExifInterface: byte[] WEBP_VP8_SIGNATURE> = $r30;

        $r31 = "VP8X";

        $r32 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();

        $r33 = virtualinvoke $r31.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r32);

        <androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_VP8X> = $r33;

        $r34 = "VP8L";

        $r35 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();

        $r36 = virtualinvoke $r34.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r35);

        <androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_VP8L> = $r36;

        $r37 = "VP8 ";

        $r38 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();

        $r39 = virtualinvoke $r37.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r38);

        <androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_VP8> = $r39;

        $r40 = "ANIM";

        $r41 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();

        $r42 = virtualinvoke $r40.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r41);

        <androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_ANIM> = $r42;

        $r43 = "ANMF";

        $r44 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();

        $r45 = virtualinvoke $r43.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r44);

        <androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_ANMF> = $r45;

        $r46 = newarray (java.lang.String)[14];

        $r46[0] = "";

        $r46[1] = "BYTE";

        $r46[2] = "STRING";

        $r46[3] = "USHORT";

        $r46[4] = "ULONG";

        $r46[5] = "URATIONAL";

        $r46[6] = "SBYTE";

        $r46[7] = "UNDEFINED";

        $r46[8] = "SSHORT";

        $r46[9] = "SLONG";

        $r46[10] = "SRATIONAL";

        $r46[11] = "SINGLE";

        $r46[12] = "DOUBLE";

        $r46[13] = "IFD";

        <androidx.exifinterface.media.ExifInterface: java.lang.String[] IFD_FORMAT_NAMES> = $r46;

        $r47 = newarray (int)[14];

        $r47[0] = 0;

        $r47[1] = 1;

        $r47[2] = 1;

        $r47[3] = 2;

        $r47[4] = 4;

        $r47[5] = 8;

        $r47[6] = 1;

        $r47[7] = 1;

        $r47[8] = 2;

        $r47[9] = 4;

        $r47[10] = 8;

        $r47[11] = 4;

        $r47[12] = 8;

        $r47[13] = 1;

        <androidx.exifinterface.media.ExifInterface: int[] IFD_FORMAT_BYTES_PER_FORMAT> = $r47;

        $r48 = newarray (byte)[8];

        $r48[0] = 65;

        $r48[1] = 83;

        $r48[2] = 67;

        $r48[3] = 73;

        $r48[4] = 73;

        $r48[5] = 0;

        $r48[6] = 0;

        $r48[7] = 0;

        <androidx.exifinterface.media.ExifInterface: byte[] EXIF_ASCII_PREFIX> = $r48;

        $r49 = newarray (androidx.exifinterface.media.ExifInterface$ExifTag)[42];

        $r50 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r50.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("NewSubfileType", 254, 4);

        $r49[0] = $r50;

        $r51 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r51.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SubfileType", 255, 4);

        $r49[1] = $r51;

        $r52 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r52.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int)>("ImageWidth", 256, 3, 4);

        $r49[2] = $r52;

        $r53 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r53.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int)>("ImageLength", 257, 3, 4);

        $r49[3] = $r53;

        $r54 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r54.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("BitsPerSample", 258, 3);

        $r49[4] = $r54;

        $r55 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r55.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("Compression", 259, 3);

        $r49[5] = $r55;

        $r56 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r56.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("PhotometricInterpretation", 262, 3);

        $r49[6] = $r56;

        $r57 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r57.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ImageDescription", 270, 2);

        $r49[7] = $r57;

        $r58 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r58.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("Make", 271, 2);

        $r49[8] = $r58;

        $r59 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r59.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("Model", 272, 2);

        $r49[9] = $r59;

        $r60 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r60.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int)>("StripOffsets", 273, 3, 4);

        $r49[10] = $r60;

        $r61 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r61.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("Orientation", 274, 3);

        $r49[11] = $r61;

        $r62 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r62.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SamplesPerPixel", 277, 3);

        $r49[12] = $r62;

        $r63 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r63.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int)>("RowsPerStrip", 278, 3, 4);

        $r49[13] = $r63;

        $r64 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r64.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int)>("StripByteCounts", 279, 3, 4);

        $r49[14] = $r64;

        $r65 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r65.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("XResolution", 282, 5);

        $r49[15] = $r65;

        $r66 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r66.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("YResolution", 283, 5);

        $r49[16] = $r66;

        $r67 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r67.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("PlanarConfiguration", 284, 3);

        $r49[17] = $r67;

        $r68 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r68.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ResolutionUnit", 296, 3);

        $r49[18] = $r68;

        $r69 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r69.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("TransferFunction", 301, 3);

        $r49[19] = $r69;

        $r70 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r70.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("Software", 305, 2);

        $r49[20] = $r70;

        $r71 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r71.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("DateTime", 306, 2);

        $r49[21] = $r71;

        $r72 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r72.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("Artist", 315, 2);

        $r49[22] = $r72;

        $r73 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r73.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("WhitePoint", 318, 5);

        $r49[23] = $r73;

        $r74 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r74.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("PrimaryChromaticities", 319, 5);

        $r49[24] = $r74;

        $r75 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r75.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SubIFDPointer", 330, 4);

        $r49[25] = $r75;

        $r76 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r76.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("JPEGInterchangeFormat", 513, 4);

        $r49[26] = $r76;

        $r77 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r77.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("JPEGInterchangeFormatLength", 514, 4);

        $r49[27] = $r77;

        $r78 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r78.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("YCbCrCoefficients", 529, 5);

        $r49[28] = $r78;

        $r79 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r79.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("YCbCrSubSampling", 530, 3);

        $r49[29] = $r79;

        $r80 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r80.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("YCbCrPositioning", 531, 3);

        $r49[30] = $r80;

        $r81 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r81.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ReferenceBlackWhite", 532, 5);

        $r49[31] = $r81;

        $r82 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r82.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("Copyright", 33432, 2);

        $r49[32] = $r82;

        $r83 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r83.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ExifIFDPointer", 34665, 4);

        $r49[33] = $r83;

        $r84 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r84.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSInfoIFDPointer", 34853, 4);

        $r49[34] = $r84;

        $r85 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r85.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SensorTopBorder", 4, 4);

        $r49[35] = $r85;

        $r86 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r86.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SensorLeftBorder", 5, 4);

        $r49[36] = $r86;

        $r87 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r87.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SensorBottomBorder", 6, 4);

        $r49[37] = $r87;

        $r88 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r88.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SensorRightBorder", 7, 4);

        $r49[38] = $r88;

        $r89 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r89.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ISO", 23, 3);

        $r49[39] = $r89;

        $r90 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r90.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("JpgFromRaw", 46, 7);

        $r49[40] = $r90;

        $r91 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r91.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("Xmp", 700, 1);

        $r49[41] = $r91;

        <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_TIFF_TAGS> = $r49;

        $r92 = newarray (androidx.exifinterface.media.ExifInterface$ExifTag)[74];

        $r93 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r93.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ExposureTime", 33434, 5);

        $r92[0] = $r93;

        $r94 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r94.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("FNumber", 33437, 5);

        $r92[1] = $r94;

        $r95 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r95.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ExposureProgram", 34850, 3);

        $r92[2] = $r95;

        $r96 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r96.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SpectralSensitivity", 34852, 2);

        $r92[3] = $r96;

        $r97 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r97.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("PhotographicSensitivity", 34855, 3);

        $r92[4] = $r97;

        $r98 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r98.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("OECF", 34856, 7);

        $r92[5] = $r98;

        $r99 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r99.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SensitivityType", 34864, 3);

        $r92[6] = $r99;

        $r100 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r100.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("StandardOutputSensitivity", 34865, 4);

        $r92[7] = $r100;

        $r101 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r101.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("RecommendedExposureIndex", 34866, 4);

        $r92[8] = $r101;

        $r102 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r102.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ISOSpeed", 34867, 4);

        $r92[9] = $r102;

        $r103 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r103.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ISOSpeedLatitudeyyy", 34868, 4);

        $r92[10] = $r103;

        $r104 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r104.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ISOSpeedLatitudezzz", 34869, 4);

        $r92[11] = $r104;

        $r105 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r105.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ExifVersion", 36864, 2);

        $r92[12] = $r105;

        $r106 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r106.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("DateTimeOriginal", 36867, 2);

        $r92[13] = $r106;

        $r107 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r107.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("DateTimeDigitized", 36868, 2);

        $r92[14] = $r107;

        $r108 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r108.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("OffsetTime", 36880, 2);

        $r92[15] = $r108;

        $r109 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r109.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("OffsetTimeOriginal", 36881, 2);

        $r92[16] = $r109;

        $r110 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r110.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("OffsetTimeDigitized", 36882, 2);

        $r92[17] = $r110;

        $r111 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r111.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ComponentsConfiguration", 37121, 7);

        $r92[18] = $r111;

        $r112 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r112.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("CompressedBitsPerPixel", 37122, 5);

        $r92[19] = $r112;

        $r113 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r113.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ShutterSpeedValue", 37377, 10);

        $r92[20] = $r113;

        $r114 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r114.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ApertureValue", 37378, 5);

        $r92[21] = $r114;

        $r115 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r115.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("BrightnessValue", 37379, 10);

        $r92[22] = $r115;

        $r116 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r116.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ExposureBiasValue", 37380, 10);

        $r92[23] = $r116;

        $r117 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r117.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("MaxApertureValue", 37381, 5);

        $r92[24] = $r117;

        $r118 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r118.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SubjectDistance", 37382, 5);

        $r92[25] = $r118;

        $r119 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r119.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("MeteringMode", 37383, 3);

        $r92[26] = $r119;

        $r120 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r120.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("LightSource", 37384, 3);

        $r92[27] = $r120;

        $r121 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r121.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("Flash", 37385, 3);

        $r92[28] = $r121;

        $r122 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r122.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("FocalLength", 37386, 5);

        $r92[29] = $r122;

        $r123 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r123.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SubjectArea", 37396, 3);

        $r92[30] = $r123;

        $r124 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r124.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("MakerNote", 37500, 7);

        $r92[31] = $r124;

        $r125 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r125.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("UserComment", 37510, 7);

        $r92[32] = $r125;

        $r126 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r126.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SubSecTime", 37520, 2);

        $r92[33] = $r126;

        $r127 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r127.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SubSecTimeOriginal", 37521, 2);

        $r92[34] = $r127;

        $r128 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r128.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SubSecTimeDigitized", 37522, 2);

        $r92[35] = $r128;

        $r129 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r129.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("FlashpixVersion", 40960, 7);

        $r92[36] = $r129;

        $r130 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r130.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ColorSpace", 40961, 3);

        $r92[37] = $r130;

        $r131 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r131.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int)>("PixelXDimension", 40962, 3, 4);

        $r92[38] = $r131;

        $r132 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r132.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int)>("PixelYDimension", 40963, 3, 4);

        $r92[39] = $r132;

        $r133 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r133.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("RelatedSoundFile", 40964, 2);

        $r92[40] = $r133;

        $r134 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r134.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("InteroperabilityIFDPointer", 40965, 4);

        $r92[41] = $r134;

        $r135 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r135.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("FlashEnergy", 41483, 5);

        $r92[42] = $r135;

        $r136 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r136.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SpatialFrequencyResponse", 41484, 7);

        $r92[43] = $r136;

        $r137 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r137.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("FocalPlaneXResolution", 41486, 5);

        $r92[44] = $r137;

        $r138 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r138.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("FocalPlaneYResolution", 41487, 5);

        $r92[45] = $r138;

        $r139 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r139.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("FocalPlaneResolutionUnit", 41488, 3);

        $r92[46] = $r139;

        $r140 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r140.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SubjectLocation", 41492, 3);

        $r92[47] = $r140;

        $r141 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r141.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ExposureIndex", 41493, 5);

        $r92[48] = $r141;

        $r142 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r142.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SensingMethod", 41495, 3);

        $r92[49] = $r142;

        $r143 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r143.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("FileSource", 41728, 7);

        $r92[50] = $r143;

        $r144 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r144.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SceneType", 41729, 7);

        $r92[51] = $r144;

        $r145 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r145.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("CFAPattern", 41730, 7);

        $r92[52] = $r145;

        $r146 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r146.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("CustomRendered", 41985, 3);

        $r92[53] = $r146;

        $r147 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r147.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ExposureMode", 41986, 3);

        $r92[54] = $r147;

        $r148 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r148.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("WhiteBalance", 41987, 3);

        $r92[55] = $r148;

        $r149 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r149.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("DigitalZoomRatio", 41988, 5);

        $r92[56] = $r149;

        $r150 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r150.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("FocalLengthIn35mmFilm", 41989, 3);

        $r92[57] = $r150;

        $r151 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r151.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SceneCaptureType", 41990, 3);

        $r92[58] = $r151;

        $r152 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r152.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GainControl", 41991, 3);

        $r92[59] = $r152;

        $r153 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r153.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("Contrast", 41992, 3);

        $r92[60] = $r153;

        $r154 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r154.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("Saturation", 41993, 3);

        $r92[61] = $r154;

        $r155 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r155.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("Sharpness", 41994, 3);

        $r92[62] = $r155;

        $r156 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r156.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("DeviceSettingDescription", 41995, 7);

        $r92[63] = $r156;

        $r157 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r157.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SubjectDistanceRange", 41996, 3);

        $r92[64] = $r157;

        $r158 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r158.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ImageUniqueID", 42016, 2);

        $r92[65] = $r158;

        $r159 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r159.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("CameraOwnerName", 42032, 2);

        $r92[66] = $r159;

        $r160 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r160.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("BodySerialNumber", 42033, 2);

        $r92[67] = $r160;

        $r161 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r161.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("LensSpecification", 42034, 5);

        $r92[68] = $r161;

        $r162 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r162.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("LensMake", 42035, 2);

        $r92[69] = $r162;

        $r163 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r163.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("LensModel", 42036, 2);

        $r92[70] = $r163;

        $r164 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r164.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("Gamma", 42240, 5);

        $r92[71] = $r164;

        $r165 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r165.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("DNGVersion", 50706, 1);

        $r92[72] = $r165;

        $r166 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r166.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int)>("DefaultCropSize", 50720, 3, 4);

        $r92[73] = $r166;

        <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_EXIF_TAGS> = $r92;

        $r167 = newarray (androidx.exifinterface.media.ExifInterface$ExifTag)[32];

        $r168 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r168.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSVersionID", 0, 1);

        $r167[0] = $r168;

        $r169 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r169.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSLatitudeRef", 1, 2);

        $r167[1] = $r169;

        $r170 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r170.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int)>("GPSLatitude", 2, 5, 10);

        $r167[2] = $r170;

        $r171 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r171.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSLongitudeRef", 3, 2);

        $r167[3] = $r171;

        $r172 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r172.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int)>("GPSLongitude", 4, 5, 10);

        $r167[4] = $r172;

        $r173 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r173.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSAltitudeRef", 5, 1);

        $r167[5] = $r173;

        $r174 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r174.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSAltitude", 6, 5);

        $r167[6] = $r174;

        $r175 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r175.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSTimeStamp", 7, 5);

        $r167[7] = $r175;

        $r176 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r176.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSSatellites", 8, 2);

        $r167[8] = $r176;

        $r177 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r177.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSStatus", 9, 2);

        $r167[9] = $r177;

        $r178 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r178.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSMeasureMode", 10, 2);

        $r167[10] = $r178;

        $r179 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r179.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSDOP", 11, 5);

        $r167[11] = $r179;

        $r180 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r180.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSSpeedRef", 12, 2);

        $r167[12] = $r180;

        $r181 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r181.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSSpeed", 13, 5);

        $r167[13] = $r181;

        $r182 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r182.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSTrackRef", 14, 2);

        $r167[14] = $r182;

        $r183 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r183.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSTrack", 15, 5);

        $r167[15] = $r183;

        $r184 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r184.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSImgDirectionRef", 16, 2);

        $r167[16] = $r184;

        $r185 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r185.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSImgDirection", 17, 5);

        $r167[17] = $r185;

        $r186 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r186.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSMapDatum", 18, 2);

        $r167[18] = $r186;

        $r187 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r187.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSDestLatitudeRef", 19, 2);

        $r167[19] = $r187;

        $r188 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r188.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSDestLatitude", 20, 5);

        $r167[20] = $r188;

        $r189 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r189.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSDestLongitudeRef", 21, 2);

        $r167[21] = $r189;

        $r190 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r190.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSDestLongitude", 22, 5);

        $r167[22] = $r190;

        $r191 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r191.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSDestBearingRef", 23, 2);

        $r167[23] = $r191;

        $r192 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r192.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSDestBearing", 24, 5);

        $r167[24] = $r192;

        $r193 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r193.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSDestDistanceRef", 25, 2);

        $r167[25] = $r193;

        $r194 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r194.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSDestDistance", 26, 5);

        $r167[26] = $r194;

        $r195 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r195.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSProcessingMethod", 27, 7);

        $r167[27] = $r195;

        $r196 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r196.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSAreaInformation", 28, 7);

        $r167[28] = $r196;

        $r197 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r197.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSDateStamp", 29, 2);

        $r167[29] = $r197;

        $r198 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r198.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSDifferential", 30, 3);

        $r167[30] = $r198;

        $r199 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r199.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSHPositioningError", 31, 5);

        $r167[31] = $r199;

        <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_GPS_TAGS> = $r167;

        $r200 = newarray (androidx.exifinterface.media.ExifInterface$ExifTag)[1];

        $r201 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r201.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("InteroperabilityIndex", 1, 2);

        $r200[0] = $r201;

        <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_INTEROPERABILITY_TAGS> = $r200;

        $r202 = newarray (androidx.exifinterface.media.ExifInterface$ExifTag)[37];

        $r203 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r203.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("NewSubfileType", 254, 4);

        $r202[0] = $r203;

        $r204 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r204.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SubfileType", 255, 4);

        $r202[1] = $r204;

        $r205 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r205.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int)>("ThumbnailImageWidth", 256, 3, 4);

        $r202[2] = $r205;

        $r206 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r206.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int)>("ThumbnailImageLength", 257, 3, 4);

        $r202[3] = $r206;

        $r207 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r207.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("BitsPerSample", 258, 3);

        $r202[4] = $r207;

        $r208 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r208.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("Compression", 259, 3);

        $r202[5] = $r208;

        $r209 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r209.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("PhotometricInterpretation", 262, 3);

        $r202[6] = $r209;

        $r210 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r210.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ImageDescription", 270, 2);

        $r202[7] = $r210;

        $r211 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r211.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("Make", 271, 2);

        $r202[8] = $r211;

        $r212 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r212.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("Model", 272, 2);

        $r202[9] = $r212;

        $r213 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r213.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int)>("StripOffsets", 273, 3, 4);

        $r202[10] = $r213;

        $r214 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r214.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ThumbnailOrientation", 274, 3);

        $r202[11] = $r214;

        $r215 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r215.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SamplesPerPixel", 277, 3);

        $r202[12] = $r215;

        $r216 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r216.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int)>("RowsPerStrip", 278, 3, 4);

        $r202[13] = $r216;

        $r217 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r217.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int)>("StripByteCounts", 279, 3, 4);

        $r202[14] = $r217;

        $r218 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r218.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("XResolution", 282, 5);

        $r202[15] = $r218;

        $r219 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r219.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("YResolution", 283, 5);

        $r202[16] = $r219;

        $r220 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r220.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("PlanarConfiguration", 284, 3);

        $r202[17] = $r220;

        $r221 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r221.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ResolutionUnit", 296, 3);

        $r202[18] = $r221;

        $r222 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r222.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("TransferFunction", 301, 3);

        $r202[19] = $r222;

        $r223 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r223.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("Software", 305, 2);

        $r202[20] = $r223;

        $r224 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r224.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("DateTime", 306, 2);

        $r202[21] = $r224;

        $r225 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r225.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("Artist", 315, 2);

        $r202[22] = $r225;

        $r226 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r226.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("WhitePoint", 318, 5);

        $r202[23] = $r226;

        $r227 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r227.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("PrimaryChromaticities", 319, 5);

        $r202[24] = $r227;

        $r228 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r228.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SubIFDPointer", 330, 4);

        $r202[25] = $r228;

        $r229 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r229.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("JPEGInterchangeFormat", 513, 4);

        $r202[26] = $r229;

        $r230 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r230.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("JPEGInterchangeFormatLength", 514, 4);

        $r202[27] = $r230;

        $r231 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r231.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("YCbCrCoefficients", 529, 5);

        $r202[28] = $r231;

        $r232 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r232.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("YCbCrSubSampling", 530, 3);

        $r202[29] = $r232;

        $r233 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r233.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("YCbCrPositioning", 531, 3);

        $r202[30] = $r233;

        $r234 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r234.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ReferenceBlackWhite", 532, 5);

        $r202[31] = $r234;

        $r235 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r235.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("Copyright", 33432, 2);

        $r202[32] = $r235;

        $r236 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r236.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ExifIFDPointer", 34665, 4);

        $r202[33] = $r236;

        $r237 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r237.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSInfoIFDPointer", 34853, 4);

        $r202[34] = $r237;

        $r238 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r238.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("DNGVersion", 50706, 1);

        $r202[35] = $r238;

        $r239 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r239.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int,int)>("DefaultCropSize", 50720, 3, 4);

        $r202[36] = $r239;

        <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_THUMBNAIL_TAGS> = $r202;

        $r240 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r240.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("StripOffsets", 273, 3);

        <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag TAG_RAF_IMAGE_SIZE> = $r240;

        $r241 = newarray (androidx.exifinterface.media.ExifInterface$ExifTag)[3];

        $r242 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r242.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ThumbnailImage", 256, 7);

        $r241[0] = $r242;

        $r243 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r243.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("CameraSettingsIFDPointer", 8224, 4);

        $r241[1] = $r243;

        $r244 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r244.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ImageProcessingIFDPointer", 8256, 4);

        $r241[2] = $r244;

        <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] ORF_MAKER_NOTE_TAGS> = $r241;

        $r245 = newarray (androidx.exifinterface.media.ExifInterface$ExifTag)[2];

        $r246 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r246.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("PreviewImageStart", 257, 4);

        $r245[0] = $r246;

        $r247 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r247.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("PreviewImageLength", 258, 4);

        $r245[1] = $r247;

        <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] ORF_CAMERA_SETTINGS_TAGS> = $r245;

        $r248 = newarray (androidx.exifinterface.media.ExifInterface$ExifTag)[1];

        $r249 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r249.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("AspectFrame", 4371, 3);

        $r248[0] = $r249;

        <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] ORF_IMAGE_PROCESSING_TAGS> = $r248;

        $r250 = newarray (androidx.exifinterface.media.ExifInterface$ExifTag)[1];

        $r251 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r251.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ColorSpace", 55, 3);

        $r250[0] = $r251;

        <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] PEF_TAGS> = $r250;

        $r252 = newarray (androidx.exifinterface.media.ExifInterface$ExifTag[])[10];

        $r253 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_TIFF_TAGS>;

        $r252[0] = $r253;

        $r254 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_EXIF_TAGS>;

        $r252[1] = $r254;

        $r255 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_GPS_TAGS>;

        $r252[2] = $r255;

        $r256 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_INTEROPERABILITY_TAGS>;

        $r252[3] = $r256;

        $r257 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_THUMBNAIL_TAGS>;

        $r252[4] = $r257;

        $r258 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_TIFF_TAGS>;

        $r252[5] = $r258;

        $r259 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] ORF_MAKER_NOTE_TAGS>;

        $r252[6] = $r259;

        $r260 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] ORF_CAMERA_SETTINGS_TAGS>;

        $r252[7] = $r260;

        $r261 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] ORF_IMAGE_PROCESSING_TAGS>;

        $r252[8] = $r261;

        $r262 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] PEF_TAGS>;

        $r252[9] = $r262;

        <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[][] EXIF_TAGS> = $r252;

        $r263 = newarray (androidx.exifinterface.media.ExifInterface$ExifTag)[6];

        $r264 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r264.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("SubIFDPointer", 330, 4);

        $r263[0] = $r264;

        $r265 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r265.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ExifIFDPointer", 34665, 4);

        $r263[1] = $r265;

        $r266 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r266.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("GPSInfoIFDPointer", 34853, 4);

        $r263[2] = $r266;

        $r267 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r267.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("InteroperabilityIFDPointer", 40965, 4);

        $r263[3] = $r267;

        $r268 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r268.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("CameraSettingsIFDPointer", 8224, 1);

        $r263[4] = $r268;

        $r269 = new androidx.exifinterface.media.ExifInterface$ExifTag;

        specialinvoke $r269.<androidx.exifinterface.media.ExifInterface$ExifTag: void <init>(java.lang.String,int,int)>("ImageProcessingIFDPointer", 8256, 1);

        $r263[5] = $r269;

        <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS> = $r263;

        $r270 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i1 = lengthof $r270;

        $r271 = newarray (java.util.HashMap)[$i1];

        <androidx.exifinterface.media.ExifInterface: java.util.HashMap[] sExifTagMapsForReading> = $r271;

        $r272 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i2 = lengthof $r272;

        $r273 = newarray (java.util.HashMap)[$i2];

        <androidx.exifinterface.media.ExifInterface: java.util.HashMap[] sExifTagMapsForWriting> = $r273;

        $r274 = new java.util.HashSet;

        $r275 = newarray (java.lang.String)[5];

        $r275[0] = "FNumber";

        $r275[1] = "DigitalZoomRatio";

        $r275[2] = "ExposureTime";

        $r275[3] = "SubjectDistance";

        $r275[4] = "GPSTimeStamp";

        $r276 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r275);

        specialinvoke $r274.<java.util.HashSet: void <init>(java.util.Collection)>($r276);

        <androidx.exifinterface.media.ExifInterface: java.util.HashSet sTagSetForCompatibility> = $r274;

        $r277 = new java.util.HashMap;

        specialinvoke $r277.<java.util.HashMap: void <init>()>();

        <androidx.exifinterface.media.ExifInterface: java.util.HashMap sExifPointerTagMap> = $r277;

        $r278 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("US-ASCII");

        <androidx.exifinterface.media.ExifInterface: java.nio.charset.Charset ASCII> = $r278;

        $r280 = "Exif\u0000\u0000";

        $r279 = <androidx.exifinterface.media.ExifInterface: java.nio.charset.Charset ASCII>;

        $r281 = virtualinvoke $r280.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r279);

        <androidx.exifinterface.media.ExifInterface: byte[] IDENTIFIER_EXIF_APP1> = $r281;

        $r283 = "http://ns.adobe.com/xap/1.0/\u0000";

        $r282 = <androidx.exifinterface.media.ExifInterface: java.nio.charset.Charset ASCII>;

        $r284 = virtualinvoke $r283.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r282);

        <androidx.exifinterface.media.ExifInterface: byte[] IDENTIFIER_XMP_APP1> = $r284;

        $r285 = new java.text.SimpleDateFormat;

        $r286 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r285.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("yyyy:MM:dd HH:mm:ss", $r286);

        <androidx.exifinterface.media.ExifInterface: java.text.SimpleDateFormat sFormatterPrimary> = $r285;

        $r287 = <androidx.exifinterface.media.ExifInterface: java.text.SimpleDateFormat sFormatterPrimary>;

        $r288 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        virtualinvoke $r287.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r288);

        $r289 = new java.text.SimpleDateFormat;

        $r290 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r289.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("yyyy-MM-dd HH:mm:ss", $r290);

        <androidx.exifinterface.media.ExifInterface: java.text.SimpleDateFormat sFormatterSecondary> = $r289;

        $r291 = <androidx.exifinterface.media.ExifInterface: java.text.SimpleDateFormat sFormatterSecondary>;

        $r292 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        virtualinvoke $r291.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r292);

        i11 = 0;

     label1:
        $r293 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        $i3 = lengthof $r293;

        if i11 >= $i3 goto label4;

        $r335 = <androidx.exifinterface.media.ExifInterface: java.util.HashMap[] sExifTagMapsForReading>;

        $r334 = new java.util.HashMap;

        specialinvoke $r334.<java.util.HashMap: void <init>()>();

        $r335[i11] = $r334;

        $r337 = <androidx.exifinterface.media.ExifInterface: java.util.HashMap[] sExifTagMapsForWriting>;

        $r336 = new java.util.HashMap;

        specialinvoke $r336.<java.util.HashMap: void <init>()>();

        $r337[i11] = $r336;

        $r338 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[][] EXIF_TAGS>;

        r0 = $r338[i11];

        i0 = lengthof r0;

        i12 = 0;

     label2:
        if i12 >= i0 goto label3;

        r1 = r0[i12];

        $r339 = <androidx.exifinterface.media.ExifInterface: java.util.HashMap[] sExifTagMapsForReading>;

        $r340 = $r339[i11];

        $i10 = r1.<androidx.exifinterface.media.ExifInterface$ExifTag: int number>;

        $r341 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        virtualinvoke $r340.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r341, r1);

        $r343 = <androidx.exifinterface.media.ExifInterface: java.util.HashMap[] sExifTagMapsForWriting>;

        $r345 = $r343[i11];

        $r344 = r1.<androidx.exifinterface.media.ExifInterface$ExifTag: java.lang.String name>;

        virtualinvoke $r345.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r344, r1);

        i12 = i12 + 1;

        goto label2;

     label3:
        i11 = i11 + 1;

        goto label1;

     label4:
        $r296 = <androidx.exifinterface.media.ExifInterface: java.util.HashMap sExifPointerTagMap>;

        $r294 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        $r295 = $r294[0];

        $i4 = $r295.<androidx.exifinterface.media.ExifInterface$ExifTag: int number>;

        $r297 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r298 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        virtualinvoke $r296.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r297, $r298);

        $r302 = <androidx.exifinterface.media.ExifInterface: java.util.HashMap sExifPointerTagMap>;

        $r300 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        $r301 = $r300[1];

        $i5 = $r301.<androidx.exifinterface.media.ExifInterface$ExifTag: int number>;

        $r303 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r304 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke $r302.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r303, $r304);

        $r308 = <androidx.exifinterface.media.ExifInterface: java.util.HashMap sExifPointerTagMap>;

        $r306 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        $r307 = $r306[2];

        $i6 = $r307.<androidx.exifinterface.media.ExifInterface$ExifTag: int number>;

        $r309 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r310 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        virtualinvoke $r308.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r309, $r310);

        $r314 = <androidx.exifinterface.media.ExifInterface: java.util.HashMap sExifPointerTagMap>;

        $r312 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        $r313 = $r312[3];

        $i7 = $r313.<androidx.exifinterface.media.ExifInterface$ExifTag: int number>;

        $r315 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r316 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        virtualinvoke $r314.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r315, $r316);

        $r320 = <androidx.exifinterface.media.ExifInterface: java.util.HashMap sExifPointerTagMap>;

        $r318 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        $r319 = $r318[4];

        $i8 = $r319.<androidx.exifinterface.media.ExifInterface$ExifTag: int number>;

        $r321 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r322 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7);

        virtualinvoke $r320.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r321, $r322);

        $r326 = <androidx.exifinterface.media.ExifInterface: java.util.HashMap sExifPointerTagMap>;

        $r324 = <androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS>;

        $r325 = $r324[5];

        $i9 = $r325.<androidx.exifinterface.media.ExifInterface$ExifTag: int number>;

        $r327 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $r328 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        virtualinvoke $r326.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r327, $r328);

        $r330 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(".*[1-9].*");

        <androidx.exifinterface.media.ExifInterface: java.util.regex.Pattern NON_ZERO_TIME_PATTERN> = $r330;

        $r331 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^(\\d{2}):(\\d{2}):(\\d{2})$");

        <androidx.exifinterface.media.ExifInterface: java.util.regex.Pattern GPS_TIMESTAMP_PATTERN> = $r331;

        $r332 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^(\\d{4}):(\\d{2}):(\\d{2})\\s(\\d{2}):(\\d{2}):(\\d{2})$");

        <androidx.exifinterface.media.ExifInterface: java.util.regex.Pattern DATETIME_PRIMARY_FORMAT_PATTERN> = $r332;

        $r333 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^(\\d{4})-(\\d{2})-(\\d{2})\\s(\\d{2}):(\\d{2}):(\\d{2})$");

        <androidx.exifinterface.media.ExifInterface: java.util.regex.Pattern DATETIME_SECONDARY_FORMAT_PATTERN> = $r333;

        return;
    }

androidx.exifinterface.media.ExifInterface$1
<androidx.exifinterface.media.ExifInterface$1: long mPosition>
<androidx.exifinterface.media.ExifInterface$1: androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream val$in>
<androidx.exifinterface.media.ExifInterface$1: androidx.exifinterface.media.ExifInterface this$0>
    void <init>(androidx.exifinterface.media.ExifInterface, androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream)
    {
        androidx.exifinterface.media.ExifInterface$1 r0;
        androidx.exifinterface.media.ExifInterface r1;
        androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream r2;

        r0 := @this: androidx.exifinterface.media.ExifInterface$1;

        r1 := @parameter0: androidx.exifinterface.media.ExifInterface;

        r2 := @parameter1: androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream;

        r0.<androidx.exifinterface.media.ExifInterface$1: androidx.exifinterface.media.ExifInterface this$0> = r1;

        r0.<androidx.exifinterface.media.ExifInterface$1: androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream val$in> = r2;

        specialinvoke r0.<android.media.MediaDataSource: void <init>()>();

        return;
    }

    public void close() throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface$1 r0;

        r0 := @this: androidx.exifinterface.media.ExifInterface$1;

        return;
    }

    public int readAt(long, byte[], int, int) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface$1 r0;
        long l0, $l3, $l5, $l6, $l7, $l8, $l10, $l12, $l13;
        byte[] r1;
        int i1, $i11, i15, $i16, i17;
        byte $b2, $b4, $b9, $b14;
        androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream $r2, $r3, $r4, $r5, $r7;
        java.lang.Throwable $r6, r8;

        r0 := @this: androidx.exifinterface.media.ExifInterface$1;

        l0 := @parameter0: long;

        r1 := @parameter1: byte[];

        i1 := @parameter2: int;

        i15 := @parameter3: int;

        if i15 != 0 goto label01;

        return 0;

     label01:
        $b2 = l0 cmp 0L;

        if $b2 >= 0 goto label02;

        return -1;

     label02:
        $l3 = r0.<androidx.exifinterface.media.ExifInterface$1: long mPosition>;

        $b4 = $l3 cmp l0;

        if $b4 == 0 goto label05;

        $l8 = r0.<androidx.exifinterface.media.ExifInterface$1: long mPosition>;

        $b9 = $l8 cmp 0L;

        if $b9 < 0 goto label04;

        $l10 = r0.<androidx.exifinterface.media.ExifInterface$1: long mPosition>;

        $r5 = r0.<androidx.exifinterface.media.ExifInterface$1: androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream val$in>;

        $i11 = virtualinvoke $r5.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: int available()>();

        $l12 = (long) $i11;

        $l13 = $l10 + $l12;

        $b14 = l0 cmp $l13;

        if $b14 < 0 goto label04;

     label03:
        return -1;

     label04:
        $r4 = r0.<androidx.exifinterface.media.ExifInterface$1: androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream val$in>;

        virtualinvoke $r4.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: void seek(long)>(l0);

        r0.<androidx.exifinterface.media.ExifInterface$1: long mPosition> = l0;

     label05:
        $r7 = r0.<androidx.exifinterface.media.ExifInterface$1: androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream val$in>;

        $i16 = virtualinvoke $r7.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: int available()>();

        if i15 <= $i16 goto label06;

        $r3 = r0.<androidx.exifinterface.media.ExifInterface$1: androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream val$in>;

        i15 = virtualinvoke $r3.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: int available()>();

     label06:
        $r2 = r0.<androidx.exifinterface.media.ExifInterface$1: androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream val$in>;

        i17 = virtualinvoke $r2.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: int read(byte[],int,int)>(r1, i1, i15);

        if i17 < 0 goto label08;

        $l6 = r0.<androidx.exifinterface.media.ExifInterface$1: long mPosition>;

        $l5 = (long) i17;

        $l7 = $l6 + $l5;

        r0.<androidx.exifinterface.media.ExifInterface$1: long mPosition> = $l7;

     label07:
        return i17;

     label08:
        goto label10;

     label09:
        $r6 := @caughtexception;

        r8 = $r6;

     label10:
        r0.<androidx.exifinterface.media.ExifInterface$1: long mPosition> = -1L;

        return -1;

        catch java.io.IOException from label02 to label03 with label09;
        catch java.io.IOException from label04 to label07 with label09;
    }

    public long getSize() throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface$1 r0;

        r0 := @this: androidx.exifinterface.media.ExifInterface$1;

        return -1L;
    }

androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream
<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder LITTLE_ENDIAN>
<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder BIG_ENDIAN>
<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>
<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder mByteOrder>
<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>
<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: byte[] mSkipBuffer>
    void <init>(byte[]) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r0;
        byte[] r1;
        java.io.ByteArrayInputStream $r2;
        java.nio.ByteOrder $r3;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        r1 := @parameter0: byte[];

        $r2 = new java.io.ByteArrayInputStream;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1);

        $r3 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void <init>(java.io.InputStream,java.nio.ByteOrder)>($r2, $r3);

        return;
    }

    void <init>(java.io.InputStream) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r0;
        java.io.InputStream r1;
        java.nio.ByteOrder $r2;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        r1 := @parameter0: java.io.InputStream;

        $r2 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void <init>(java.io.InputStream,java.nio.ByteOrder)>(r1, $r2);

        return;
    }

    void <init>(java.io.InputStream, java.nio.ByteOrder) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r0;
        java.io.InputStream r1;
        java.nio.ByteOrder r2, $r3;
        java.io.DataInputStream $r4, $r5;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.nio.ByteOrder;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        $r3 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder mByteOrder> = $r3;

        $r4 = new java.io.DataInputStream;

        specialinvoke $r4.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r1);

        r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream> = $r4;

        $r5 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        virtualinvoke $r5.<java.io.DataInputStream: void mark(int)>(0);

        r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int mPosition> = 0;

        r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder mByteOrder> = r2;

        return;
    }

    public void setByteOrder(java.nio.ByteOrder)
    {
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r0;
        java.nio.ByteOrder r1;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        r1 := @parameter0: java.nio.ByteOrder;

        r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder mByteOrder> = r1;

        return;
    }

    public int position()
    {
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r0;
        int $i0;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        $i0 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        return $i0;
    }

    public int available() throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r0;
        java.io.DataInputStream $r1;
        int $i0;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        $r1 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        $i0 = virtualinvoke $r1.<java.io.DataInputStream: int available()>();

        return $i0;
    }

    public int read() throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r0;
        int $i0, $i1, $i2;
        java.io.DataInputStream $r1;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        $i0 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i1 = $i0 + 1;

        r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int mPosition> = $i1;

        $r1 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        $i2 = virtualinvoke $r1.<java.io.DataInputStream: int read()>();

        return $i2;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r0;
        byte[] r1;
        int i0, i1, i2, $i3, $i4;
        java.io.DataInputStream $r2;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        i2 = virtualinvoke $r2.<java.io.DataInputStream: int read(byte[],int,int)>(r1, i0, i1);

        $i3 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i4 = $i3 + i2;

        r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int mPosition> = $i4;

        return i2;
    }

    public int readUnsignedByte() throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r0;
        int $i0, $i1, $i2;
        java.io.DataInputStream $r1;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        $i0 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i1 = $i0 + 1;

        r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int mPosition> = $i1;

        $r1 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        $i2 = virtualinvoke $r1.<java.io.DataInputStream: int readUnsignedByte()>();

        return $i2;
    }

    public java.lang.String readLine() throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r0;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ExifInterface", "Currently unsupported");

        return null;
    }

    public boolean readBoolean() throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r0;
        int $i0, $i1;
        java.io.DataInputStream $r1;
        boolean $z0;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        $i0 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i1 = $i0 + 1;

        r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int mPosition> = $i1;

        $r1 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        $z0 = virtualinvoke $r1.<java.io.DataInputStream: boolean readBoolean()>();

        return $z0;
    }

    public char readChar() throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r0;
        int $i0, $i1;
        java.io.DataInputStream $r1;
        char $c2;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        $i0 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i1 = $i0 + 2;

        r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int mPosition> = $i1;

        $r1 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        $c2 = virtualinvoke $r1.<java.io.DataInputStream: char readChar()>();

        return $c2;
    }

    public java.lang.String readUTF() throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r0;
        int $i0, $i1;
        java.io.DataInputStream $r1;
        java.lang.String $r2;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        $i0 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i1 = $i0 + 2;

        r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int mPosition> = $i1;

        $r1 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        $r2 = virtualinvoke $r1.<java.io.DataInputStream: java.lang.String readUTF()>();

        return $r2;
    }

    public void readFully(byte[], int, int) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r0;
        byte[] r1;
        int i0, i1, $i2, $i3;
        java.io.DataInputStream $r2;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i3 = $i2 + i1;

        r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int mPosition> = $i3;

        $r2 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        virtualinvoke $r2.<java.io.DataInputStream: void readFully(byte[],int,int)>(r1, i0, i1);

        return;
    }

    public void readFully(byte[]) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r0;
        byte[] r1;
        int $i0, $i1, $i2;
        java.io.DataInputStream $r2;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        r1 := @parameter0: byte[];

        $i1 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i0 = lengthof r1;

        $i2 = $i1 + $i0;

        r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int mPosition> = $i2;

        $r2 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        virtualinvoke $r2.<java.io.DataInputStream: void readFully(byte[])>(r1);

        return;
    }

    public byte readByte() throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r0;
        int i0, $i1, $i2;
        java.io.DataInputStream $r1;
        byte $b3;
        java.io.EOFException $r2;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        $i1 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i2 = $i1 + 1;

        r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int mPosition> = $i2;

        $r1 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        i0 = virtualinvoke $r1.<java.io.DataInputStream: int read()>();

        if i0 >= 0 goto label1;

        $r2 = new java.io.EOFException;

        specialinvoke $r2.<java.io.EOFException: void <init>()>();

        throw $r2;

     label1:
        $b3 = (byte) i0;

        return $b3;
    }

    public short readShort() throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9;
        java.io.DataInputStream $r1, $r2;
        java.nio.ByteOrder $r3, $r4, $r5, $r6, $r10;
        java.io.IOException $r7;
        java.lang.StringBuilder $r8, $r9, $r11;
        java.lang.String $r12;
        short $s7, $s10;
        java.io.EOFException $r13;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        $i2 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i3 = $i2 + 2;

        r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int mPosition> = $i3;

        $r1 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        i0 = virtualinvoke $r1.<java.io.DataInputStream: int read()>();

        $r2 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        i1 = virtualinvoke $r2.<java.io.DataInputStream: int read()>();

        $i4 = i0 | i1;

        if $i4 >= 0 goto label1;

        $r13 = new java.io.EOFException;

        specialinvoke $r13.<java.io.EOFException: void <init>()>();

        throw $r13;

     label1:
        $r4 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder mByteOrder>;

        $r3 = <androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder LITTLE_ENDIAN>;

        if $r4 != $r3 goto label2;

        $i8 = i1 << 8;

        $i9 = $i8 + i0;

        $s10 = (short) $i9;

        return $s10;

     label2:
        $r6 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder mByteOrder>;

        $r5 = <androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder BIG_ENDIAN>;

        if $r6 != $r5 goto label3;

        $i5 = i0 << 8;

        $i6 = $i5 + i1;

        $s7 = (short) $i6;

        return $s7;

     label3:
        $r7 = new java.io.IOException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid byte order: ");

        $r10 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder mByteOrder>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>($r12);

        throw $r7;
    }

    public int readInt() throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        java.io.DataInputStream $r1, $r2, $r3, $r4;
        java.nio.ByteOrder $r5, $r6, $r7, $r8, $r12;
        java.io.IOException $r9;
        java.lang.StringBuilder $r10, $r11, $r13;
        java.lang.String $r14;
        java.io.EOFException $r15;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        $i4 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i5 = $i4 + 4;

        r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int mPosition> = $i5;

        $r1 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        i0 = virtualinvoke $r1.<java.io.DataInputStream: int read()>();

        $r2 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        i1 = virtualinvoke $r2.<java.io.DataInputStream: int read()>();

        $r3 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        i2 = virtualinvoke $r3.<java.io.DataInputStream: int read()>();

        $r4 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        i3 = virtualinvoke $r4.<java.io.DataInputStream: int read()>();

        $i6 = i0 | i1;

        $i7 = $i6 | i2;

        $i8 = $i7 | i3;

        if $i8 >= 0 goto label1;

        $r15 = new java.io.EOFException;

        specialinvoke $r15.<java.io.EOFException: void <init>()>();

        throw $r15;

     label1:
        $r6 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder mByteOrder>;

        $r5 = <androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder LITTLE_ENDIAN>;

        if $r6 != $r5 goto label2;

        $i16 = i3 << 24;

        $i15 = i2 << 16;

        $i18 = $i16 + $i15;

        $i17 = i1 << 8;

        $i19 = $i18 + $i17;

        $i20 = $i19 + i0;

        return $i20;

     label2:
        $r8 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder mByteOrder>;

        $r7 = <androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder BIG_ENDIAN>;

        if $r8 != $r7 goto label3;

        $i10 = i0 << 24;

        $i9 = i1 << 16;

        $i12 = $i10 + $i9;

        $i11 = i2 << 8;

        $i13 = $i12 + $i11;

        $i14 = $i13 + i3;

        return $i14;

     label3:
        $r9 = new java.io.IOException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid byte order: ");

        $r12 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder mByteOrder>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>($r14);

        throw $r9;
    }

    public int skipBytes(int) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r0;
        int i0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        i0 := @parameter0: int;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("skipBytes is currently unsupported");

        throw $r1;
    }

    public void skipFully(int) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r0;
        int i0, i1, $i2, $i3, $i4, $i7, $i8, i9, i10;
        long $l5, $l6;
        java.io.DataInputStream $r1, $r4;
        byte[] $r2, $r3, $r11;
        java.io.EOFException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        i0 := @parameter0: int;

        i9 = 0;

     label1:
        if i9 >= i0 goto label4;

        $r1 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        $i4 = i0 - i9;

        $l5 = (long) $i4;

        $l6 = virtualinvoke $r1.<java.io.DataInputStream: long skip(long)>($l5);

        i10 = (int) $l6;

        if i10 > 0 goto label3;

        $r2 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: byte[] mSkipBuffer>;

        if $r2 != null goto label2;

        $r11 = newarray (byte)[8192];

        r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: byte[] mSkipBuffer> = $r11;

     label2:
        $i7 = i0 - i9;

        i1 = staticinvoke <java.lang.Math: int min(int,int)>(8192, $i7);

        $r4 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        $r3 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: byte[] mSkipBuffer>;

        $i8 = virtualinvoke $r4.<java.io.DataInputStream: int read(byte[],int,int)>($r3, 0, i1);

        i10 = $i8;

        if $i8 != -1 goto label3;

        $r5 = new java.io.EOFException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reached EOF while skipping ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes.");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.EOFException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label3:
        i9 = i9 + i10;

        goto label1;

     label4:
        $i2 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i3 = $i2 + i9;

        r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int mPosition> = $i3;

        return;
    }

    public int readUnsignedShort() throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.io.DataInputStream $r1, $r2;
        java.nio.ByteOrder $r3, $r4, $r5, $r6, $r10;
        java.io.IOException $r7;
        java.lang.StringBuilder $r8, $r9, $r11;
        java.lang.String $r12;
        java.io.EOFException $r13;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        $i2 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i3 = $i2 + 2;

        r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int mPosition> = $i3;

        $r1 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        i0 = virtualinvoke $r1.<java.io.DataInputStream: int read()>();

        $r2 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        i1 = virtualinvoke $r2.<java.io.DataInputStream: int read()>();

        $i4 = i0 | i1;

        if $i4 >= 0 goto label1;

        $r13 = new java.io.EOFException;

        specialinvoke $r13.<java.io.EOFException: void <init>()>();

        throw $r13;

     label1:
        $r4 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder mByteOrder>;

        $r3 = <androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder LITTLE_ENDIAN>;

        if $r4 != $r3 goto label2;

        $i7 = i1 << 8;

        $i8 = $i7 + i0;

        return $i8;

     label2:
        $r6 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder mByteOrder>;

        $r5 = <androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder BIG_ENDIAN>;

        if $r6 != $r5 goto label3;

        $i5 = i0 << 8;

        $i6 = $i5 + i1;

        return $i6;

     label3:
        $r7 = new java.io.IOException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid byte order: ");

        $r10 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder mByteOrder>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>($r12);

        throw $r7;
    }

    public long readUnsignedInt() throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r0;
        int $i0;
        long $l1, $l2;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        $i0 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        $l1 = (long) $i0;

        $l2 = $l1 & 4294967295L;

        return $l2;
    }

    public long readLong() throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        java.io.DataInputStream $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        java.nio.ByteOrder $r9, $r10, $r11, $r12, $r16;
        java.io.IOException $r13;
        java.lang.StringBuilder $r14, $r15, $r17;
        java.lang.String $r18;
        long $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l24, $l25, $l26, $l27, $l28, $l29, $l30, $l31, $l32, $l33, $l34, $l35, $l36, $l37, $l38, $l39, $l40, $l41, $l42, $l43, $l44, $l45, $l46, $l47, $l48, $l49, $l50, $l51, $l52, $l53, $l54, $l55, $l56, $l57, $l58, $l59, $l60;
        java.io.EOFException $r19;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        $i8 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int mPosition>;

        $i9 = $i8 + 8;

        r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int mPosition> = $i9;

        $r1 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        i0 = virtualinvoke $r1.<java.io.DataInputStream: int read()>();

        $r2 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        i1 = virtualinvoke $r2.<java.io.DataInputStream: int read()>();

        $r3 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        i2 = virtualinvoke $r3.<java.io.DataInputStream: int read()>();

        $r4 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        i3 = virtualinvoke $r4.<java.io.DataInputStream: int read()>();

        $r5 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        i4 = virtualinvoke $r5.<java.io.DataInputStream: int read()>();

        $r6 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        i5 = virtualinvoke $r6.<java.io.DataInputStream: int read()>();

        $r7 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        i6 = virtualinvoke $r7.<java.io.DataInputStream: int read()>();

        $r8 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        i7 = virtualinvoke $r8.<java.io.DataInputStream: int read()>();

        $i10 = i0 | i1;

        $i11 = $i10 | i2;

        $i12 = $i11 | i3;

        $i13 = $i12 | i4;

        $i14 = $i13 | i5;

        $i15 = $i14 | i6;

        $i16 = $i15 | i7;

        if $i16 >= 0 goto label1;

        $r19 = new java.io.EOFException;

        specialinvoke $r19.<java.io.EOFException: void <init>()>();

        throw $r19;

     label1:
        $r10 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder mByteOrder>;

        $r9 = <androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder LITTLE_ENDIAN>;

        if $r10 != $r9 goto label2;

        $l39 = (long) i7;

        $l42 = $l39 << 56;

        $l40 = (long) i6;

        $l41 = $l40 << 48;

        $l45 = $l42 + $l41;

        $l43 = (long) i5;

        $l44 = $l43 << 40;

        $l48 = $l45 + $l44;

        $l46 = (long) i4;

        $l47 = $l46 << 32;

        $l51 = $l48 + $l47;

        $l49 = (long) i3;

        $l50 = $l49 << 24;

        $l54 = $l51 + $l50;

        $l52 = (long) i2;

        $l53 = $l52 << 16;

        $l57 = $l54 + $l53;

        $l55 = (long) i1;

        $l56 = $l55 << 8;

        $l59 = $l57 + $l56;

        $l58 = (long) i0;

        $l60 = $l59 + $l58;

        return $l60;

     label2:
        $r12 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder mByteOrder>;

        $r11 = <androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder BIG_ENDIAN>;

        if $r12 != $r11 goto label3;

        $l17 = (long) i0;

        $l20 = $l17 << 56;

        $l18 = (long) i1;

        $l19 = $l18 << 48;

        $l23 = $l20 + $l19;

        $l21 = (long) i2;

        $l22 = $l21 << 40;

        $l26 = $l23 + $l22;

        $l24 = (long) i3;

        $l25 = $l24 << 32;

        $l29 = $l26 + $l25;

        $l27 = (long) i4;

        $l28 = $l27 << 24;

        $l32 = $l29 + $l28;

        $l30 = (long) i5;

        $l31 = $l30 << 16;

        $l35 = $l32 + $l31;

        $l33 = (long) i6;

        $l34 = $l33 << 8;

        $l37 = $l35 + $l34;

        $l36 = (long) i7;

        $l38 = $l37 + $l36;

        return $l38;

     label3:
        $r13 = new java.io.IOException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid byte order: ");

        $r16 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder mByteOrder>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.io.IOException: void <init>(java.lang.String)>($r18);

        throw $r13;
    }

    public float readFloat() throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r0;
        int $i0;
        float $f0;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        $i0 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i0);

        return $f0;
    }

    public double readDouble() throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r0;
        long $l0;
        double $d0;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        $l0 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: long readLong()>();

        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l0);

        return $d0;
    }

    public void mark(int)
    {
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r0;
        int i0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        i0 := @parameter0: int;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Mark is currently unsupported");

        throw $r1;
    }

    public void reset()
    {
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Reset is currently unsupported");

        throw $r1;
    }

    static void <clinit>()
    {
        java.nio.ByteOrder $r0, $r1;

        $r0 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        <androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder LITTLE_ENDIAN> = $r0;

        $r1 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        <androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder BIG_ENDIAN> = $r1;

        return;
    }

androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream
<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream>
<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: java.nio.ByteOrder mByteOrder>
    public void <init>(java.io.OutputStream, java.nio.ByteOrder)
    {
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream r0;
        java.io.OutputStream r1;
        java.nio.ByteOrder r2;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: java.nio.ByteOrder;

        specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(r1);

        r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream> = r1;

        r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: java.nio.ByteOrder mByteOrder> = r2;

        return;
    }

    public void setByteOrder(java.nio.ByteOrder)
    {
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream r0;
        java.nio.ByteOrder r1;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream;

        r1 := @parameter0: java.nio.ByteOrder;

        r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: java.nio.ByteOrder mByteOrder> = r1;

        return;
    }

    public void write(byte[]) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream r0;
        byte[] r1;
        java.io.OutputStream $r2;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream;

        r1 := @parameter0: byte[];

        $r2 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>(r1);

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream r0;
        byte[] r1;
        int i0, i1;
        java.io.OutputStream $r2;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>(r1, i0, i1);

        return;
    }

    public void writeByte(int) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream r0;
        int i0;
        java.io.OutputStream $r1;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream>;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(i0);

        return;
    }

    public void writeShort(short) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream r0;
        short s0, $s1, $s2, $s3, $s4, $s5, $s6, $s7, $s8;
        java.nio.ByteOrder $r1, $r2, $r3, $r4;
        java.io.OutputStream $r5, $r6, $r7, $r8;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream;

        s0 := @parameter0: short;

        $r2 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: java.nio.ByteOrder mByteOrder>;

        $r1 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        if $r2 != $r1 goto label1;

        $r7 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream>;

        $s5 = s0 >>> 0;

        $s6 = $s5 & 255;

        virtualinvoke $r7.<java.io.OutputStream: void write(int)>($s6);

        $r8 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream>;

        $s7 = s0 >>> 8;

        $s8 = $s7 & 255;

        virtualinvoke $r8.<java.io.OutputStream: void write(int)>($s8);

        goto label2;

     label1:
        $r4 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: java.nio.ByteOrder mByteOrder>;

        $r3 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        if $r4 != $r3 goto label2;

        $r5 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream>;

        $s1 = s0 >>> 8;

        $s2 = $s1 & 255;

        virtualinvoke $r5.<java.io.OutputStream: void write(int)>($s2);

        $r6 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream>;

        $s3 = s0 >>> 0;

        $s4 = $s3 & 255;

        virtualinvoke $r6.<java.io.OutputStream: void write(int)>($s4);

     label2:
        return;
    }

    public void writeInt(int) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        java.nio.ByteOrder $r1, $r2, $r3, $r4;
        java.io.OutputStream $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream;

        i0 := @parameter0: int;

        $r2 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: java.nio.ByteOrder mByteOrder>;

        $r1 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        if $r2 != $r1 goto label1;

        $r9 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream>;

        $i9 = i0 >>> 0;

        $i10 = $i9 & 255;

        virtualinvoke $r9.<java.io.OutputStream: void write(int)>($i10);

        $r10 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream>;

        $i11 = i0 >>> 8;

        $i12 = $i11 & 255;

        virtualinvoke $r10.<java.io.OutputStream: void write(int)>($i12);

        $r11 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream>;

        $i13 = i0 >>> 16;

        $i14 = $i13 & 255;

        virtualinvoke $r11.<java.io.OutputStream: void write(int)>($i14);

        $r12 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream>;

        $i15 = i0 >>> 24;

        $i16 = $i15 & 255;

        virtualinvoke $r12.<java.io.OutputStream: void write(int)>($i16);

        goto label2;

     label1:
        $r4 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: java.nio.ByteOrder mByteOrder>;

        $r3 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        if $r4 != $r3 goto label2;

        $r5 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream>;

        $i1 = i0 >>> 24;

        $i2 = $i1 & 255;

        virtualinvoke $r5.<java.io.OutputStream: void write(int)>($i2);

        $r6 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream>;

        $i3 = i0 >>> 16;

        $i4 = $i3 & 255;

        virtualinvoke $r6.<java.io.OutputStream: void write(int)>($i4);

        $r7 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream>;

        $i5 = i0 >>> 8;

        $i6 = $i5 & 255;

        virtualinvoke $r7.<java.io.OutputStream: void write(int)>($i6);

        $r8 = r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream>;

        $i7 = i0 >>> 0;

        $i8 = $i7 & 255;

        virtualinvoke $r8.<java.io.OutputStream: void write(int)>($i8);

     label2:
        return;
    }

    public void writeUnsignedShort(int) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream r0;
        int i0;
        short $s1;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream;

        i0 := @parameter0: int;

        $s1 = (short) i0;

        virtualinvoke r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeShort(short)>($s1);

        return;
    }

    public void writeUnsignedInt(long) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream r0;
        long l0;
        int $i1;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream;

        l0 := @parameter0: long;

        $i1 = (int) l0;

        virtualinvoke r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeInt(int)>($i1);

        return;
    }

androidx.exifinterface.media.ExifInterface$ExifAttribute
<androidx.exifinterface.media.ExifInterface$ExifAttribute: long BYTES_OFFSET_UNKNOWN>
<androidx.exifinterface.media.ExifInterface$ExifAttribute: int format>
<androidx.exifinterface.media.ExifInterface$ExifAttribute: int numberOfComponents>
<androidx.exifinterface.media.ExifInterface$ExifAttribute: long bytesOffset>
<androidx.exifinterface.media.ExifInterface$ExifAttribute: byte[] bytes>
    void <init>(int, int, byte[])
    {
        androidx.exifinterface.media.ExifInterface$ExifAttribute r0;
        int i0, i1;
        byte[] r1;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ExifAttribute;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: byte[];

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: void <init>(int,int,long,byte[])>(i0, i1, -1L, r1);

        return;
    }

    void <init>(int, int, long, byte[])
    {
        androidx.exifinterface.media.ExifInterface$ExifAttribute r0;
        int i0, i1;
        long l2;
        byte[] r1;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ExifAttribute;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        r1 := @parameter3: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int format> = i0;

        r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int numberOfComponents> = i1;

        r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: long bytesOffset> = l2;

        r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: byte[] bytes> = r1;

        return;
    }

    public static androidx.exifinterface.media.ExifInterface$ExifAttribute createUShort(int[], java.nio.ByteOrder)
    {
        int[] r0, r3, $r4;
        java.nio.ByteOrder r1;
        java.nio.ByteBuffer r2;
        int i0, i1, $i2, $i3, $i4, $i5, i7;
        byte[] $r5, $r8;
        androidx.exifinterface.media.ExifInterface$ExifAttribute $r7;
        short $s6;

        r0 := @parameter0: int[];

        r1 := @parameter1: java.nio.ByteOrder;

        $r4 = <androidx.exifinterface.media.ExifInterface: int[] IFD_FORMAT_BYTES_PER_FORMAT>;

        $i3 = $r4[3];

        $i2 = lengthof r0;

        $i4 = $i3 * $i2;

        $r5 = newarray (byte)[$i4];

        r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r5);

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>(r1);

        r3 = r0;

        i0 = lengthof r3;

        i7 = 0;

     label1:
        if i7 >= i0 goto label2;

        i1 = r3[i7];

        $s6 = (short) i1;

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>($s6);

        i7 = i7 + 1;

        goto label1;

     label2:
        $r7 = new androidx.exifinterface.media.ExifInterface$ExifAttribute;

        $i5 = lengthof r0;

        $r8 = virtualinvoke r2.<java.nio.ByteBuffer: byte[] array()>();

        specialinvoke $r7.<androidx.exifinterface.media.ExifInterface$ExifAttribute: void <init>(int,int,byte[])>(3, $i5, $r8);

        return $r7;
    }

    public static androidx.exifinterface.media.ExifInterface$ExifAttribute createUShort(int, java.nio.ByteOrder)
    {
        int i0;
        java.nio.ByteOrder r0;
        int[] $r1;
        androidx.exifinterface.media.ExifInterface$ExifAttribute $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: java.nio.ByteOrder;

        $r1 = newarray (int)[1];

        $r1[0] = i0;

        $r2 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createUShort(int[],java.nio.ByteOrder)>($r1, r0);

        return $r2;
    }

    public static androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long[], java.nio.ByteOrder)
    {
        long[] r0, r3;
        java.nio.ByteOrder r1;
        java.nio.ByteBuffer r2;
        int i0, $i2, $i3, $i4, $i5, $i6, i7;
        long l1;
        int[] $r4;
        byte[] $r5, $r8;
        androidx.exifinterface.media.ExifInterface$ExifAttribute $r7;

        r0 := @parameter0: long[];

        r1 := @parameter1: java.nio.ByteOrder;

        $r4 = <androidx.exifinterface.media.ExifInterface: int[] IFD_FORMAT_BYTES_PER_FORMAT>;

        $i3 = $r4[4];

        $i2 = lengthof r0;

        $i4 = $i3 * $i2;

        $r5 = newarray (byte)[$i4];

        r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r5);

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>(r1);

        r3 = r0;

        i0 = lengthof r3;

        i7 = 0;

     label1:
        if i7 >= i0 goto label2;

        l1 = r3[i7];

        $i6 = (int) l1;

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i6);

        i7 = i7 + 1;

        goto label1;

     label2:
        $r7 = new androidx.exifinterface.media.ExifInterface$ExifAttribute;

        $i5 = lengthof r0;

        $r8 = virtualinvoke r2.<java.nio.ByteBuffer: byte[] array()>();

        specialinvoke $r7.<androidx.exifinterface.media.ExifInterface$ExifAttribute: void <init>(int,int,byte[])>(4, $i5, $r8);

        return $r7;
    }

    public static androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long, java.nio.ByteOrder)
    {
        long l0;
        java.nio.ByteOrder r0;
        long[] $r1;
        androidx.exifinterface.media.ExifInterface$ExifAttribute $r2;

        l0 := @parameter0: long;

        r0 := @parameter1: java.nio.ByteOrder;

        $r1 = newarray (long)[1];

        $r1[0] = l0;

        $r2 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long[],java.nio.ByteOrder)>($r1, r0);

        return $r2;
    }

    public static androidx.exifinterface.media.ExifInterface$ExifAttribute createSLong(int[], java.nio.ByteOrder)
    {
        int[] r0, r3, $r4;
        java.nio.ByteOrder r1;
        java.nio.ByteBuffer r2;
        int i0, i1, $i2, $i3, $i4, $i5, i6;
        byte[] $r5, $r8;
        androidx.exifinterface.media.ExifInterface$ExifAttribute $r7;

        r0 := @parameter0: int[];

        r1 := @parameter1: java.nio.ByteOrder;

        $r4 = <androidx.exifinterface.media.ExifInterface: int[] IFD_FORMAT_BYTES_PER_FORMAT>;

        $i3 = $r4[9];

        $i2 = lengthof r0;

        $i4 = $i3 * $i2;

        $r5 = newarray (byte)[$i4];

        r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r5);

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>(r1);

        r3 = r0;

        i0 = lengthof r3;

        i6 = 0;

     label1:
        if i6 >= i0 goto label2;

        i1 = r3[i6];

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(i1);

        i6 = i6 + 1;

        goto label1;

     label2:
        $r7 = new androidx.exifinterface.media.ExifInterface$ExifAttribute;

        $i5 = lengthof r0;

        $r8 = virtualinvoke r2.<java.nio.ByteBuffer: byte[] array()>();

        specialinvoke $r7.<androidx.exifinterface.media.ExifInterface$ExifAttribute: void <init>(int,int,byte[])>(9, $i5, $r8);

        return $r7;
    }

    public static androidx.exifinterface.media.ExifInterface$ExifAttribute createSLong(int, java.nio.ByteOrder)
    {
        int i0;
        java.nio.ByteOrder r0;
        int[] $r1;
        androidx.exifinterface.media.ExifInterface$ExifAttribute $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: java.nio.ByteOrder;

        $r1 = newarray (int)[1];

        $r1[0] = i0;

        $r2 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createSLong(int[],java.nio.ByteOrder)>($r1, r0);

        return $r2;
    }

    public static androidx.exifinterface.media.ExifInterface$ExifAttribute createByte(java.lang.String)
    {
        java.lang.String r0;
        int $i0, $i4, $i6, $i7;
        char $c1, $c2, $c3;
        byte[] $r1, r3, r5;
        byte $b5;
        androidx.exifinterface.media.ExifInterface$ExifAttribute $r2, $r6;
        java.nio.charset.Charset $r4;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 1 goto label1;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        if $c1 < 48 goto label1;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        if $c2 > 49 goto label1;

        $r1 = newarray (byte)[1];

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i4 = $c3 - 48;

        $b5 = (byte) $i4;

        $r1[0] = $b5;

        r3 = $r1;

        $r2 = new androidx.exifinterface.media.ExifInterface$ExifAttribute;

        $i6 = lengthof r3;

        specialinvoke $r2.<androidx.exifinterface.media.ExifInterface$ExifAttribute: void <init>(int,int,byte[])>(1, $i6, r3);

        return $r2;

     label1:
        $r4 = <androidx.exifinterface.media.ExifInterface: java.nio.charset.Charset ASCII>;

        r5 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r4);

        $r6 = new androidx.exifinterface.media.ExifInterface$ExifAttribute;

        $i7 = lengthof r5;

        specialinvoke $r6.<androidx.exifinterface.media.ExifInterface$ExifAttribute: void <init>(int,int,byte[])>(1, $i7, r5);

        return $r6;
    }

    public static androidx.exifinterface.media.ExifInterface$ExifAttribute createString(java.lang.String)
    {
        java.lang.String r0, $r5;
        byte[] r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.nio.charset.Charset $r6;
        androidx.exifinterface.media.ExifInterface$ExifAttribute $r7;
        int $i0;

        r0 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = <androidx.exifinterface.media.ExifInterface: java.nio.charset.Charset ASCII>;

        r1 = virtualinvoke $r5.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r6);

        $r7 = new androidx.exifinterface.media.ExifInterface$ExifAttribute;

        $i0 = lengthof r1;

        specialinvoke $r7.<androidx.exifinterface.media.ExifInterface$ExifAttribute: void <init>(int,int,byte[])>(2, $i0, r1);

        return $r7;
    }

    public static androidx.exifinterface.media.ExifInterface$ExifAttribute createURational(androidx.exifinterface.media.ExifInterface$Rational[], java.nio.ByteOrder)
    {
        androidx.exifinterface.media.ExifInterface$Rational[] r0, r3;
        java.nio.ByteOrder r1;
        java.nio.ByteBuffer r2;
        int i0, $i1, $i2, $i3, $i4, $i6, $i8, i9;
        androidx.exifinterface.media.ExifInterface$Rational r4;
        int[] $r5;
        byte[] $r6, $r9;
        androidx.exifinterface.media.ExifInterface$ExifAttribute $r8;
        long $l5, $l7;

        r0 := @parameter0: androidx.exifinterface.media.ExifInterface$Rational[];

        r1 := @parameter1: java.nio.ByteOrder;

        $r5 = <androidx.exifinterface.media.ExifInterface: int[] IFD_FORMAT_BYTES_PER_FORMAT>;

        $i2 = $r5[5];

        $i1 = lengthof r0;

        $i3 = $i2 * $i1;

        $r6 = newarray (byte)[$i3];

        r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r6);

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>(r1);

        r3 = r0;

        i0 = lengthof r3;

        i9 = 0;

     label1:
        if i9 >= i0 goto label2;

        r4 = r3[i9];

        $l5 = r4.<androidx.exifinterface.media.ExifInterface$Rational: long numerator>;

        $i6 = (int) $l5;

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i6);

        $l7 = r4.<androidx.exifinterface.media.ExifInterface$Rational: long denominator>;

        $i8 = (int) $l7;

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i8);

        i9 = i9 + 1;

        goto label1;

     label2:
        $r8 = new androidx.exifinterface.media.ExifInterface$ExifAttribute;

        $i4 = lengthof r0;

        $r9 = virtualinvoke r2.<java.nio.ByteBuffer: byte[] array()>();

        specialinvoke $r8.<androidx.exifinterface.media.ExifInterface$ExifAttribute: void <init>(int,int,byte[])>(5, $i4, $r9);

        return $r8;
    }

    public static androidx.exifinterface.media.ExifInterface$ExifAttribute createURational(androidx.exifinterface.media.ExifInterface$Rational, java.nio.ByteOrder)
    {
        androidx.exifinterface.media.ExifInterface$Rational r0;
        java.nio.ByteOrder r1;
        androidx.exifinterface.media.ExifInterface$Rational[] $r2;
        androidx.exifinterface.media.ExifInterface$ExifAttribute $r3;

        r0 := @parameter0: androidx.exifinterface.media.ExifInterface$Rational;

        r1 := @parameter1: java.nio.ByteOrder;

        $r2 = newarray (androidx.exifinterface.media.ExifInterface$Rational)[1];

        $r2[0] = r0;

        $r3 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createURational(androidx.exifinterface.media.ExifInterface$Rational[],java.nio.ByteOrder)>($r2, r1);

        return $r3;
    }

    public static androidx.exifinterface.media.ExifInterface$ExifAttribute createSRational(androidx.exifinterface.media.ExifInterface$Rational[], java.nio.ByteOrder)
    {
        androidx.exifinterface.media.ExifInterface$Rational[] r0, r3;
        java.nio.ByteOrder r1;
        java.nio.ByteBuffer r2;
        int i0, $i1, $i2, $i3, $i4, $i6, $i8, i9;
        androidx.exifinterface.media.ExifInterface$Rational r4;
        int[] $r5;
        byte[] $r6, $r9;
        androidx.exifinterface.media.ExifInterface$ExifAttribute $r8;
        long $l5, $l7;

        r0 := @parameter0: androidx.exifinterface.media.ExifInterface$Rational[];

        r1 := @parameter1: java.nio.ByteOrder;

        $r5 = <androidx.exifinterface.media.ExifInterface: int[] IFD_FORMAT_BYTES_PER_FORMAT>;

        $i2 = $r5[10];

        $i1 = lengthof r0;

        $i3 = $i2 * $i1;

        $r6 = newarray (byte)[$i3];

        r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r6);

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>(r1);

        r3 = r0;

        i0 = lengthof r3;

        i9 = 0;

     label1:
        if i9 >= i0 goto label2;

        r4 = r3[i9];

        $l5 = r4.<androidx.exifinterface.media.ExifInterface$Rational: long numerator>;

        $i6 = (int) $l5;

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i6);

        $l7 = r4.<androidx.exifinterface.media.ExifInterface$Rational: long denominator>;

        $i8 = (int) $l7;

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i8);

        i9 = i9 + 1;

        goto label1;

     label2:
        $r8 = new androidx.exifinterface.media.ExifInterface$ExifAttribute;

        $i4 = lengthof r0;

        $r9 = virtualinvoke r2.<java.nio.ByteBuffer: byte[] array()>();

        specialinvoke $r8.<androidx.exifinterface.media.ExifInterface$ExifAttribute: void <init>(int,int,byte[])>(10, $i4, $r9);

        return $r8;
    }

    public static androidx.exifinterface.media.ExifInterface$ExifAttribute createSRational(androidx.exifinterface.media.ExifInterface$Rational, java.nio.ByteOrder)
    {
        androidx.exifinterface.media.ExifInterface$Rational r0;
        java.nio.ByteOrder r1;
        androidx.exifinterface.media.ExifInterface$Rational[] $r2;
        androidx.exifinterface.media.ExifInterface$ExifAttribute $r3;

        r0 := @parameter0: androidx.exifinterface.media.ExifInterface$Rational;

        r1 := @parameter1: java.nio.ByteOrder;

        $r2 = newarray (androidx.exifinterface.media.ExifInterface$Rational)[1];

        $r2[0] = r0;

        $r3 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createSRational(androidx.exifinterface.media.ExifInterface$Rational[],java.nio.ByteOrder)>($r2, r1);

        return $r3;
    }

    public static androidx.exifinterface.media.ExifInterface$ExifAttribute createDouble(double[], java.nio.ByteOrder)
    {
        double[] r0, r3;
        java.nio.ByteOrder r1;
        java.nio.ByteBuffer r2;
        int i0, $i1, $i2, $i3, $i4, i5;
        double d0;
        int[] $r4;
        byte[] $r5, $r8;
        androidx.exifinterface.media.ExifInterface$ExifAttribute $r7;

        r0 := @parameter0: double[];

        r1 := @parameter1: java.nio.ByteOrder;

        $r4 = <androidx.exifinterface.media.ExifInterface: int[] IFD_FORMAT_BYTES_PER_FORMAT>;

        $i2 = $r4[12];

        $i1 = lengthof r0;

        $i3 = $i2 * $i1;

        $r5 = newarray (byte)[$i3];

        r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r5);

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>(r1);

        r3 = r0;

        i0 = lengthof r3;

        i5 = 0;

     label1:
        if i5 >= i0 goto label2;

        d0 = r3[i5];

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putDouble(double)>(d0);

        i5 = i5 + 1;

        goto label1;

     label2:
        $r7 = new androidx.exifinterface.media.ExifInterface$ExifAttribute;

        $i4 = lengthof r0;

        $r8 = virtualinvoke r2.<java.nio.ByteBuffer: byte[] array()>();

        specialinvoke $r7.<androidx.exifinterface.media.ExifInterface$ExifAttribute: void <init>(int,int,byte[])>(12, $i4, $r8);

        return $r7;
    }

    public static androidx.exifinterface.media.ExifInterface$ExifAttribute createDouble(double, java.nio.ByteOrder)
    {
        double d0;
        java.nio.ByteOrder r0;
        double[] $r1;
        androidx.exifinterface.media.ExifInterface$ExifAttribute $r2;

        d0 := @parameter0: double;

        r0 := @parameter1: java.nio.ByteOrder;

        $r1 = newarray (double)[1];

        $r1[0] = d0;

        $r2 = staticinvoke <androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createDouble(double[],java.nio.ByteOrder)>($r1, r0);

        return $r2;
    }

    public java.lang.String toString()
    {
        androidx.exifinterface.media.ExifInterface$ExifAttribute r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6, $r8, $r9;
        int $i0, $i1;
        java.lang.String[] $r3;
        java.lang.String $r4, $r10;
        byte[] $r7;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ExifAttribute;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r3 = <androidx.exifinterface.media.ExifInterface: java.lang.String[] IFD_FORMAT_NAMES>;

        $i0 = r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int format>;

        $r4 = $r3[$i0];

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", data length:");

        $r7 = r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: byte[] bytes>;

        $i1 = lengthof $r7;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    java.lang.Object getValue(java.nio.ByteOrder)
    {
        androidx.exifinterface.media.ExifInterface$ExifAttribute r0;
        java.nio.ByteOrder r1;
        java.lang.Throwable r2, r3, r4, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, r39, r44, r50, r53, r56, r59, r62, r65, r68, r71, r72, r73, r74;
        androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream $r5, r37;
        byte[] $r6, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r20, $r41;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i20, $i21, $i22, $i23, $i24, $i26, $i29, $i33, i35, i36, $i37, i39, i40, i41, i44, i45, i46, i49, i50;
        double $d0, $d1;
        float $f0;
        androidx.exifinterface.media.ExifInterface$Rational $r7, $r8;
        short $s14;
        long $l19, l42, l43, l47, l48;
        char $c25, $c34;
        byte $b27, $b28, $b30, $b31, $b32, b38;
        java.lang.String $r18, r38, $r40, r43, r47;
        char[] $r19;
        java.nio.charset.Charset $r42;
        boolean z0;
        java.lang.StringBuilder $r45, r46;
        int[] r48, r49, r57, r58, r60, r61;
        long[] r51, r52;
        androidx.exifinterface.media.ExifInterface$Rational[] r54, r55, r63, r64;
        double[] r66, r67, r69, r70;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ExifAttribute;

        r1 := @parameter0: java.nio.ByteOrder;

        r37 = null;

     label001:
        $r5 = new androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream;

        $r6 = r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: byte[] bytes>;

        specialinvoke $r5.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void <init>(byte[])>($r6);

        r37 = $r5;

        virtualinvoke r37.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void setByteOrder(java.nio.ByteOrder)>(r1);

        $i0 = r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int format>;

        tableswitch($i0)
        {
            case 1: goto label002;
            case 2: goto label014;
            case 3: goto label029;
            case 4: goto label037;
            case 5: goto label045;
            case 6: goto label002;
            case 7: goto label014;
            case 8: goto label053;
            case 9: goto label061;
            case 10: goto label069;
            case 11: goto label077;
            case 12: goto label085;
            default: goto label093;
        };

     label002:
        $r15 = r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: byte[] bytes>;

        $i29 = lengthof $r15;

        if $i29 != 1 goto label008;

        $r16 = r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: byte[] bytes>;

        $b30 = $r16[0];

        if $b30 < 0 goto label008;

        $r17 = r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: byte[] bytes>;

        $b31 = $r17[0];

        if $b31 > 1 goto label008;

        $r18 = new java.lang.String;

        $r19 = newarray (char)[1];

        $r20 = r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: byte[] bytes>;

        $b32 = $r20[0];

        $i33 = $b32 + 48;

        $c34 = (char) $i33;

        $r19[0] = $c34;

        specialinvoke $r18.<java.lang.String: void <init>(char[])>($r19);

        r38 = $r18;

     label003:
        if r37 == null goto label007;

     label004:
        virtualinvoke r37.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label005:
        goto label007;

     label006:
        $r29 := @caughtexception;

        r39 = $r29;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ExifInterface", "IOException occurred while closing InputStream", r39);

     label007:
        return r38;

     label008:
        $r40 = new java.lang.String;

        $r41 = r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: byte[] bytes>;

        $r42 = <androidx.exifinterface.media.ExifInterface: java.nio.charset.Charset ASCII>;

        specialinvoke $r40.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r41, $r42);

        r43 = $r40;

     label009:
        if r37 == null goto label013;

     label010:
        virtualinvoke r37.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label011:
        goto label013;

     label012:
        $r36 := @caughtexception;

        r44 = $r36;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ExifInterface", "IOException occurred while closing InputStream", r44);

     label013:
        return r43;

     label014:
        i35 = 0;

        $i24 = r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        $r9 = <androidx.exifinterface.media.ExifInterface: byte[] EXIF_ASCII_PREFIX>;

        $i23 = lengthof $r9;

        if $i24 < $i23 goto label018;

        z0 = 1;

        i36 = 0;

     label015:
        $r11 = <androidx.exifinterface.media.ExifInterface: byte[] EXIF_ASCII_PREFIX>;

        $i26 = lengthof $r11;

        if i36 >= $i26 goto label017;

        $r13 = r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: byte[] bytes>;

        $b28 = $r13[i36];

        $r14 = <androidx.exifinterface.media.ExifInterface: byte[] EXIF_ASCII_PREFIX>;

        $b27 = $r14[i36];

        if $b28 == $b27 goto label016;

        z0 = 0;

        goto label017;

     label016:
        i36 = i36 + 1;

        goto label015;

     label017:
        if z0 == 0 goto label018;

        $r12 = <androidx.exifinterface.media.ExifInterface: byte[] EXIF_ASCII_PREFIX>;

        i35 = lengthof $r12;

     label018:
        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        r46 = $r45;

     label019:
        $i37 = r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        if i35 >= $i37 goto label023;

        $r10 = r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: byte[] bytes>;

        b38 = $r10[i35];

        if b38 != 0 goto label020;

        goto label023;

     label020:
        if b38 < 32 goto label021;

        $c25 = (char) b38;

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c25);

        goto label022;

     label021:
        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(63);

     label022:
        i35 = i35 + 1;

        goto label019;

     label023:
        r47 = virtualinvoke r46.<java.lang.StringBuilder: java.lang.String toString()>();

     label024:
        if r37 == null goto label028;

     label025:
        virtualinvoke r37.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label026:
        goto label028;

     label027:
        $r31 := @caughtexception;

        r2 = $r31;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ExifInterface", "IOException occurred while closing InputStream", r2);

     label028:
        return r47;

     label029:
        $i20 = r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        r48 = newarray (int)[$i20];

        i39 = 0;

     label030:
        $i21 = r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        if i39 >= $i21 goto label031;

        $i22 = virtualinvoke r37.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedShort()>();

        r48[i39] = $i22;

        i39 = i39 + 1;

        goto label030;

     label031:
        r49 = r48;

     label032:
        if r37 == null goto label036;

     label033:
        virtualinvoke r37.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label034:
        goto label036;

     label035:
        $r23 := @caughtexception;

        r50 = $r23;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ExifInterface", "IOException occurred while closing InputStream", r50);

     label036:
        return r49;

     label037:
        $i17 = r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        r51 = newarray (long)[$i17];

        i40 = 0;

     label038:
        $i18 = r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        if i40 >= $i18 goto label039;

        $l19 = virtualinvoke r37.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: long readUnsignedInt()>();

        r51[i40] = $l19;

        i40 = i40 + 1;

        goto label038;

     label039:
        r52 = r51;

     label040:
        if r37 == null goto label044;

     label041:
        virtualinvoke r37.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label042:
        goto label044;

     label043:
        $r33 := @caughtexception;

        r53 = $r33;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ExifInterface", "IOException occurred while closing InputStream", r53);

     label044:
        return r52;

     label045:
        $i15 = r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        r54 = newarray (androidx.exifinterface.media.ExifInterface$Rational)[$i15];

        i41 = 0;

     label046:
        $i16 = r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        if i41 >= $i16 goto label047;

        l42 = virtualinvoke r37.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: long readUnsignedInt()>();

        l43 = virtualinvoke r37.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: long readUnsignedInt()>();

        $r8 = new androidx.exifinterface.media.ExifInterface$Rational;

        specialinvoke $r8.<androidx.exifinterface.media.ExifInterface$Rational: void <init>(long,long)>(l42, l43);

        r54[i41] = $r8;

        i41 = i41 + 1;

        goto label046;

     label047:
        r55 = r54;

     label048:
        if r37 == null goto label052;

     label049:
        virtualinvoke r37.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label050:
        goto label052;

     label051:
        $r30 := @caughtexception;

        r56 = $r30;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ExifInterface", "IOException occurred while closing InputStream", r56);

     label052:
        return r55;

     label053:
        $i12 = r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        r57 = newarray (int)[$i12];

        i44 = 0;

     label054:
        $i13 = r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        if i44 >= $i13 goto label055;

        $s14 = virtualinvoke r37.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: short readShort()>();

        r57[i44] = $s14;

        i44 = i44 + 1;

        goto label054;

     label055:
        r58 = r57;

     label056:
        if r37 == null goto label060;

     label057:
        virtualinvoke r37.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label058:
        goto label060;

     label059:
        $r22 := @caughtexception;

        r59 = $r22;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ExifInterface", "IOException occurred while closing InputStream", r59);

     label060:
        return r58;

     label061:
        $i9 = r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        r60 = newarray (int)[$i9];

        i45 = 0;

     label062:
        $i10 = r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        if i45 >= $i10 goto label063;

        $i11 = virtualinvoke r37.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        r60[i45] = $i11;

        i45 = i45 + 1;

        goto label062;

     label063:
        r61 = r60;

     label064:
        if r37 == null goto label068;

     label065:
        virtualinvoke r37.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label066:
        goto label068;

     label067:
        $r28 := @caughtexception;

        r62 = $r28;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ExifInterface", "IOException occurred while closing InputStream", r62);

     label068:
        return r61;

     label069:
        $i5 = r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        r63 = newarray (androidx.exifinterface.media.ExifInterface$Rational)[$i5];

        i46 = 0;

     label070:
        $i6 = r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        if i46 >= $i6 goto label071;

        $i7 = virtualinvoke r37.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        l47 = (long) $i7;

        $i8 = virtualinvoke r37.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readInt()>();

        l48 = (long) $i8;

        $r7 = new androidx.exifinterface.media.ExifInterface$Rational;

        specialinvoke $r7.<androidx.exifinterface.media.ExifInterface$Rational: void <init>(long,long)>(l47, l48);

        r63[i46] = $r7;

        i46 = i46 + 1;

        goto label070;

     label071:
        r64 = r63;

     label072:
        if r37 == null goto label076;

     label073:
        virtualinvoke r37.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label074:
        goto label076;

     label075:
        $r35 := @caughtexception;

        r65 = $r35;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ExifInterface", "IOException occurred while closing InputStream", r65);

     label076:
        return r64;

     label077:
        $i3 = r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        r66 = newarray (double)[$i3];

        i49 = 0;

     label078:
        $i4 = r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        if i49 >= $i4 goto label079;

        $f0 = virtualinvoke r37.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: float readFloat()>();

        $d1 = (double) $f0;

        r66[i49] = $d1;

        i49 = i49 + 1;

        goto label078;

     label079:
        r67 = r66;

     label080:
        if r37 == null goto label084;

     label081:
        virtualinvoke r37.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label082:
        goto label084;

     label083:
        $r34 := @caughtexception;

        r68 = $r34;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ExifInterface", "IOException occurred while closing InputStream", r68);

     label084:
        return r67;

     label085:
        $i1 = r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        r69 = newarray (double)[$i1];

        i50 = 0;

     label086:
        $i2 = r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        if i50 >= $i2 goto label087;

        $d0 = virtualinvoke r37.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: double readDouble()>();

        r69[i50] = $d0;

        i50 = i50 + 1;

        goto label086;

     label087:
        r70 = r69;

     label088:
        if r37 == null goto label092;

     label089:
        virtualinvoke r37.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label090:
        goto label092;

     label091:
        $r26 := @caughtexception;

        r71 = $r26;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ExifInterface", "IOException occurred while closing InputStream", r71);

     label092:
        return r70;

     label093:
        if r37 == null goto label097;

     label094:
        virtualinvoke r37.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label095:
        goto label097;

     label096:
        $r24 := @caughtexception;

        r72 = $r24;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ExifInterface", "IOException occurred while closing InputStream", r72);

     label097:
        return null;

     label098:
        $r27 := @caughtexception;

        r73 = $r27;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ExifInterface", "IOException occurred during reading a value", r73);

     label099:
        if r37 == null goto label103;

     label100:
        virtualinvoke r37.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label101:
        goto label103;

     label102:
        $r25 := @caughtexception;

        r74 = $r25;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ExifInterface", "IOException occurred while closing InputStream", r74);

     label103:
        return null;

     label104:
        $r21 := @caughtexception;

        r3 = $r21;

     label105:
        if r37 == null goto label109;

     label106:
        virtualinvoke r37.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void close()>();

     label107:
        goto label109;

     label108:
        $r32 := @caughtexception;

        r4 = $r32;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ExifInterface", "IOException occurred while closing InputStream", r4);

     label109:
        throw r3;

        catch java.io.IOException from label004 to label005 with label006;
        catch java.io.IOException from label010 to label011 with label012;
        catch java.io.IOException from label025 to label026 with label027;
        catch java.io.IOException from label033 to label034 with label035;
        catch java.io.IOException from label041 to label042 with label043;
        catch java.io.IOException from label049 to label050 with label051;
        catch java.io.IOException from label057 to label058 with label059;
        catch java.io.IOException from label065 to label066 with label067;
        catch java.io.IOException from label073 to label074 with label075;
        catch java.io.IOException from label081 to label082 with label083;
        catch java.io.IOException from label089 to label090 with label091;
        catch java.io.IOException from label094 to label095 with label096;
        catch java.io.IOException from label001 to label003 with label098;
        catch java.io.IOException from label008 to label009 with label098;
        catch java.io.IOException from label014 to label024 with label098;
        catch java.io.IOException from label029 to label032 with label098;
        catch java.io.IOException from label037 to label040 with label098;
        catch java.io.IOException from label045 to label048 with label098;
        catch java.io.IOException from label053 to label056 with label098;
        catch java.io.IOException from label061 to label064 with label098;
        catch java.io.IOException from label069 to label072 with label098;
        catch java.io.IOException from label077 to label080 with label098;
        catch java.io.IOException from label085 to label088 with label098;
        catch java.io.IOException from label100 to label101 with label102;
        catch java.lang.Throwable from label001 to label003 with label104;
        catch java.lang.Throwable from label008 to label009 with label104;
        catch java.lang.Throwable from label014 to label024 with label104;
        catch java.lang.Throwable from label029 to label032 with label104;
        catch java.lang.Throwable from label037 to label040 with label104;
        catch java.lang.Throwable from label045 to label048 with label104;
        catch java.lang.Throwable from label053 to label056 with label104;
        catch java.lang.Throwable from label061 to label064 with label104;
        catch java.lang.Throwable from label069 to label072 with label104;
        catch java.lang.Throwable from label077 to label080 with label104;
        catch java.lang.Throwable from label085 to label088 with label104;
        catch java.lang.Throwable from label098 to label099 with label104;
        catch java.io.IOException from label106 to label107 with label108;
        catch java.lang.Throwable from label104 to label105 with label104;
    }

    public double getDoubleValue(java.nio.ByteOrder)
    {
        androidx.exifinterface.media.ExifInterface$ExifAttribute r0;
        java.nio.ByteOrder r1;
        java.lang.Object r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.NumberFormatException $r3, $r4, $r6, $r7, $r8, $r10;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.exifinterface.media.ExifInterface$Rational $r5;
        double $d0, $d1, $d2, $d3, $d4;
        long $l5;
        java.lang.String $r9;
        long[] r11;
        int[] r12;
        double[] r13;
        androidx.exifinterface.media.ExifInterface$Rational[] r14;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ExifAttribute;

        r1 := @parameter0: java.nio.ByteOrder;

        r2 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: java.lang.Object getValue(java.nio.ByteOrder)>(r1);

        if r2 != null goto label01;

        $r10 = new java.lang.NumberFormatException;

        specialinvoke $r10.<java.lang.NumberFormatException: void <init>(java.lang.String)>("NULL can\'t be converted to a double value");

        throw $r10;

     label01:
        $z0 = r2 instanceof java.lang.String;

        if $z0 == 0 goto label02;

        $r9 = (java.lang.String) r2;

        $d4 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r9);

        return $d4;

     label02:
        $z1 = r2 instanceof long[];

        if $z1 == 0 goto label04;

        r11 = (long[]) r2;

        $i4 = lengthof r11;

        if $i4 != 1 goto label03;

        $l5 = r11[0];

        $d3 = (double) $l5;

        return $d3;

     label03:
        $r8 = new java.lang.NumberFormatException;

        specialinvoke $r8.<java.lang.NumberFormatException: void <init>(java.lang.String)>("There are more than one component");

        throw $r8;

     label04:
        $z2 = r2 instanceof int[];

        if $z2 == 0 goto label06;

        r12 = (int[]) r2;

        $i2 = lengthof r12;

        if $i2 != 1 goto label05;

        $i3 = r12[0];

        $d2 = (double) $i3;

        return $d2;

     label05:
        $r7 = new java.lang.NumberFormatException;

        specialinvoke $r7.<java.lang.NumberFormatException: void <init>(java.lang.String)>("There are more than one component");

        throw $r7;

     label06:
        $z3 = r2 instanceof double[];

        if $z3 == 0 goto label08;

        r13 = (double[]) r2;

        $i1 = lengthof r13;

        if $i1 != 1 goto label07;

        $d1 = r13[0];

        return $d1;

     label07:
        $r6 = new java.lang.NumberFormatException;

        specialinvoke $r6.<java.lang.NumberFormatException: void <init>(java.lang.String)>("There are more than one component");

        throw $r6;

     label08:
        $z4 = r2 instanceof androidx.exifinterface.media.ExifInterface$Rational[];

        if $z4 == 0 goto label10;

        r14 = (androidx.exifinterface.media.ExifInterface$Rational[]) r2;

        $i0 = lengthof r14;

        if $i0 != 1 goto label09;

        $r5 = r14[0];

        $d0 = virtualinvoke $r5.<androidx.exifinterface.media.ExifInterface$Rational: double calculate()>();

        return $d0;

     label09:
        $r4 = new java.lang.NumberFormatException;

        specialinvoke $r4.<java.lang.NumberFormatException: void <init>(java.lang.String)>("There are more than one component");

        throw $r4;

     label10:
        $r3 = new java.lang.NumberFormatException;

        specialinvoke $r3.<java.lang.NumberFormatException: void <init>(java.lang.String)>("Couldn\'t find a double value");

        throw $r3;
    }

    public int getIntValue(java.nio.ByteOrder)
    {
        androidx.exifinterface.media.ExifInterface$ExifAttribute r0;
        java.nio.ByteOrder r1;
        java.lang.Object r2;
        boolean $z0, $z1, $z2;
        java.lang.NumberFormatException $r3, $r4, $r5, $r7;
        int $i0, $i1, $i2, $i4, $i5;
        long $l3;
        java.lang.String $r6;
        long[] r8;
        int[] r9;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ExifAttribute;

        r1 := @parameter0: java.nio.ByteOrder;

        r2 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: java.lang.Object getValue(java.nio.ByteOrder)>(r1);

        if r2 != null goto label1;

        $r7 = new java.lang.NumberFormatException;

        specialinvoke $r7.<java.lang.NumberFormatException: void <init>(java.lang.String)>("NULL can\'t be converted to a integer value");

        throw $r7;

     label1:
        $z0 = r2 instanceof java.lang.String;

        if $z0 == 0 goto label2;

        $r6 = (java.lang.String) r2;

        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

        return $i5;

     label2:
        $z1 = r2 instanceof long[];

        if $z1 == 0 goto label4;

        r8 = (long[]) r2;

        $i2 = lengthof r8;

        if $i2 != 1 goto label3;

        $l3 = r8[0];

        $i4 = (int) $l3;

        return $i4;

     label3:
        $r5 = new java.lang.NumberFormatException;

        specialinvoke $r5.<java.lang.NumberFormatException: void <init>(java.lang.String)>("There are more than one component");

        throw $r5;

     label4:
        $z2 = r2 instanceof int[];

        if $z2 == 0 goto label6;

        r9 = (int[]) r2;

        $i0 = lengthof r9;

        if $i0 != 1 goto label5;

        $i1 = r9[0];

        return $i1;

     label5:
        $r4 = new java.lang.NumberFormatException;

        specialinvoke $r4.<java.lang.NumberFormatException: void <init>(java.lang.String)>("There are more than one component");

        throw $r4;

     label6:
        $r3 = new java.lang.NumberFormatException;

        specialinvoke $r3.<java.lang.NumberFormatException: void <init>(java.lang.String)>("Couldn\'t find a integer value");

        throw $r3;
    }

    public java.lang.String getStringValue(java.nio.ByteOrder)
    {
        androidx.exifinterface.media.ExifInterface$ExifAttribute r0;
        java.nio.ByteOrder r1;
        java.lang.Object r2;
        java.lang.StringBuilder r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i15, i16, i17, i18, i19;
        java.lang.String $r5, $r12, $r15, $r18, $r21;
        androidx.exifinterface.media.ExifInterface$Rational $r6, $r9;
        long $l1, $l2, $l13;
        double $d0;
        long[] r22;
        int[] r23;
        double[] r24;
        androidx.exifinterface.media.ExifInterface$Rational[] r25;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ExifAttribute;

        r1 := @parameter0: java.nio.ByteOrder;

        r2 = virtualinvoke r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: java.lang.Object getValue(java.nio.ByteOrder)>(r1);

        if r2 != null goto label01;

        return null;

     label01:
        $z0 = r2 instanceof java.lang.String;

        if $z0 == 0 goto label02;

        $r21 = (java.lang.String) r2;

        return $r21;

     label02:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r3 = $r4;

        $z1 = r2 instanceof long[];

        if $z1 == 0 goto label06;

        r22 = (long[]) r2;

        i16 = 0;

     label03:
        $i12 = lengthof r22;

        if i16 >= $i12 goto label05;

        $l13 = r22[i16];

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l13);

        $i15 = i16 + 1;

        $i14 = lengthof r22;

        if $i15 == $i14 goto label04;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label04:
        i16 = i16 + 1;

        goto label03;

     label05:
        $r18 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r18;

     label06:
        $z2 = r2 instanceof int[];

        if $z2 == 0 goto label10;

        r23 = (int[]) r2;

        i17 = 0;

     label07:
        $i8 = lengthof r23;

        if i17 >= $i8 goto label09;

        $i9 = r23[i17];

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $i11 = i17 + 1;

        $i10 = lengthof r23;

        if $i11 == $i10 goto label08;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label08:
        i17 = i17 + 1;

        goto label07;

     label09:
        $r15 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;

     label10:
        $z3 = r2 instanceof double[];

        if $z3 == 0 goto label14;

        r24 = (double[]) r2;

        i18 = 0;

     label11:
        $i5 = lengthof r24;

        if i18 >= $i5 goto label13;

        $d0 = r24[i18];

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $i7 = i18 + 1;

        $i6 = lengthof r24;

        if $i7 == $i6 goto label12;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label12:
        i18 = i18 + 1;

        goto label11;

     label13:
        $r12 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;

     label14:
        $z4 = r2 instanceof androidx.exifinterface.media.ExifInterface$Rational[];

        if $z4 == 0 goto label18;

        r25 = (androidx.exifinterface.media.ExifInterface$Rational[]) r2;

        i19 = 0;

     label15:
        $i0 = lengthof r25;

        if i19 >= $i0 goto label17;

        $r6 = r25[i19];

        $l1 = $r6.<androidx.exifinterface.media.ExifInterface$Rational: long numerator>;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r9 = r25[i19];

        $l2 = $r9.<androidx.exifinterface.media.ExifInterface$Rational: long denominator>;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $i4 = i19 + 1;

        $i3 = lengthof r25;

        if $i4 == $i3 goto label16;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label16:
        i19 = i19 + 1;

        goto label15;

     label17:
        $r5 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

     label18:
        return null;
    }

    public int size()
    {
        androidx.exifinterface.media.ExifInterface$ExifAttribute r0;
        int $i0, $i1, $i2, $i3;
        int[] $r1;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ExifAttribute;

        $r1 = <androidx.exifinterface.media.ExifInterface: int[] IFD_FORMAT_BYTES_PER_FORMAT>;

        $i0 = r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int format>;

        $i2 = $r1[$i0];

        $i1 = r0.<androidx.exifinterface.media.ExifInterface$ExifAttribute: int numberOfComponents>;

        $i3 = $i2 * $i1;

        return $i3;
    }

androidx.exifinterface.media.ExifInterface$ExifStreamType
androidx.exifinterface.media.ExifInterface$ExifTag
<androidx.exifinterface.media.ExifInterface$ExifTag: int number>
<androidx.exifinterface.media.ExifInterface$ExifTag: java.lang.String name>
<androidx.exifinterface.media.ExifInterface$ExifTag: int primaryFormat>
<androidx.exifinterface.media.ExifInterface$ExifTag: int secondaryFormat>
    void <init>(java.lang.String, int, int)
    {
        androidx.exifinterface.media.ExifInterface$ExifTag r0;
        java.lang.String r1;
        int i0, i1;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ExifTag;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.exifinterface.media.ExifInterface$ExifTag: java.lang.String name> = r1;

        r0.<androidx.exifinterface.media.ExifInterface$ExifTag: int number> = i0;

        r0.<androidx.exifinterface.media.ExifInterface$ExifTag: int primaryFormat> = i1;

        r0.<androidx.exifinterface.media.ExifInterface$ExifTag: int secondaryFormat> = -1;

        return;
    }

    void <init>(java.lang.String, int, int, int)
    {
        androidx.exifinterface.media.ExifInterface$ExifTag r0;
        java.lang.String r1;
        int i0, i1, i2;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ExifTag;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.exifinterface.media.ExifInterface$ExifTag: java.lang.String name> = r1;

        r0.<androidx.exifinterface.media.ExifInterface$ExifTag: int number> = i0;

        r0.<androidx.exifinterface.media.ExifInterface$ExifTag: int primaryFormat> = i1;

        r0.<androidx.exifinterface.media.ExifInterface$ExifTag: int secondaryFormat> = i2;

        return;
    }

    boolean isFormatCompatible(int)
    {
        androidx.exifinterface.media.ExifInterface$ExifTag r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;

        r0 := @this: androidx.exifinterface.media.ExifInterface$ExifTag;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.exifinterface.media.ExifInterface$ExifTag: int primaryFormat>;

        if $i1 == 7 goto label01;

        if i0 != 7 goto label02;

     label01:
        return 1;

     label02:
        $i2 = r0.<androidx.exifinterface.media.ExifInterface$ExifTag: int primaryFormat>;

        if $i2 == i0 goto label03;

        $i3 = r0.<androidx.exifinterface.media.ExifInterface$ExifTag: int secondaryFormat>;

        if $i3 != i0 goto label04;

     label03:
        return 1;

     label04:
        $i4 = r0.<androidx.exifinterface.media.ExifInterface$ExifTag: int primaryFormat>;

        if $i4 == 4 goto label05;

        $i9 = r0.<androidx.exifinterface.media.ExifInterface$ExifTag: int secondaryFormat>;

        if $i9 != 4 goto label06;

     label05:
        if i0 != 3 goto label06;

        return 1;

     label06:
        $i5 = r0.<androidx.exifinterface.media.ExifInterface$ExifTag: int primaryFormat>;

        if $i5 == 9 goto label07;

        $i8 = r0.<androidx.exifinterface.media.ExifInterface$ExifTag: int secondaryFormat>;

        if $i8 != 9 goto label08;

     label07:
        if i0 != 8 goto label08;

        return 1;

     label08:
        $i6 = r0.<androidx.exifinterface.media.ExifInterface$ExifTag: int primaryFormat>;

        if $i6 == 12 goto label09;

        $i7 = r0.<androidx.exifinterface.media.ExifInterface$ExifTag: int secondaryFormat>;

        if $i7 != 12 goto label10;

     label09:
        if i0 != 11 goto label10;

        return 1;

     label10:
        return 0;
    }

androidx.exifinterface.media.ExifInterface$IfdType
androidx.exifinterface.media.ExifInterface$Rational
<androidx.exifinterface.media.ExifInterface$Rational: long numerator>
<androidx.exifinterface.media.ExifInterface$Rational: long denominator>
    void <init>(double)
    {
        androidx.exifinterface.media.ExifInterface$Rational r0;
        double d0, $d1;
        long $l0;

        r0 := @this: androidx.exifinterface.media.ExifInterface$Rational;

        d0 := @parameter0: double;

        $d1 = d0 * 10000.0;

        $l0 = (long) $d1;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface$Rational: void <init>(long,long)>($l0, 10000L);

        return;
    }

    void <init>(long, long)
    {
        androidx.exifinterface.media.ExifInterface$Rational r0;
        long l0, l1;
        byte $b2;

        r0 := @this: androidx.exifinterface.media.ExifInterface$Rational;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $b2 = l1 cmp 0L;

        if $b2 != 0 goto label1;

        r0.<androidx.exifinterface.media.ExifInterface$Rational: long numerator> = 0L;

        r0.<androidx.exifinterface.media.ExifInterface$Rational: long denominator> = 1L;

        return;

     label1:
        r0.<androidx.exifinterface.media.ExifInterface$Rational: long numerator> = l0;

        r0.<androidx.exifinterface.media.ExifInterface$Rational: long denominator> = l1;

        return;
    }

    public java.lang.String toString()
    {
        androidx.exifinterface.media.ExifInterface$Rational r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        long $l0, $l1;
        java.lang.String $r5;

        r0 := @this: androidx.exifinterface.media.ExifInterface$Rational;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $l0 = r0.<androidx.exifinterface.media.ExifInterface$Rational: long numerator>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $l1 = r0.<androidx.exifinterface.media.ExifInterface$Rational: long denominator>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public double calculate()
    {
        androidx.exifinterface.media.ExifInterface$Rational r0;
        long $l0, $l1;
        double $d0, $d1, $d2;

        r0 := @this: androidx.exifinterface.media.ExifInterface$Rational;

        $l0 = r0.<androidx.exifinterface.media.ExifInterface$Rational: long numerator>;

        $d1 = (double) $l0;

        $l1 = r0.<androidx.exifinterface.media.ExifInterface$Rational: long denominator>;

        $d0 = (double) $l1;

        $d2 = $d1 / $d0;

        return $d2;
    }

androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream
    void <init>(byte[]) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream r0;
        byte[] r1;
        java.io.DataInputStream $r2;

        r0 := @this: androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream;

        r1 := @parameter0: byte[];

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void <init>(byte[])>(r1);

        $r2 = r0.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        virtualinvoke $r2.<java.io.DataInputStream: void mark(int)>(2147483647);

        return;
    }

    void <init>(java.io.InputStream) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream r0;
        java.io.InputStream r1;
        boolean $z0;
        java.io.DataInputStream $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void <init>(java.io.InputStream)>(r1);

        $z0 = virtualinvoke r1.<java.io.InputStream: boolean markSupported()>();

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot create SeekableByteOrderedDataInputStream with stream that does not support mark/reset");

        throw $r3;

     label1:
        $r2 = r0.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        virtualinvoke $r2.<java.io.DataInputStream: void mark(int)>(2147483647);

        return;
    }

    public void seek(long) throws java.io.IOException
    {
        androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream r0;
        int $i0, $i3, $i5;
        long $l1, $l4, l6;
        byte $b2;
        java.io.DataInputStream $r1;

        r0 := @this: androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream;

        l6 := @parameter0: long;

        $i0 = r0.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: int mPosition>;

        $l1 = (long) $i0;

        $b2 = $l1 cmp l6;

        if $b2 <= 0 goto label1;

        r0.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: int mPosition> = 0;

        $r1 = r0.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream>;

        virtualinvoke $r1.<java.io.DataInputStream: void reset()>();

        goto label2;

     label1:
        $i3 = r0.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: int mPosition>;

        $l4 = (long) $i3;

        l6 = l6 - $l4;

     label2:
        $i5 = (int) l6;

        virtualinvoke r0.<androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: void skipFully(int)>($i5);

        return;
    }

