androidx.slice.ArrayUtils
    public static boolean contains(java.lang.Object[], java.lang.Object)
    {
        java.lang.Object[] r0, r2;
        java.lang.Object r1, r3;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object[];

        r1 := @parameter1: java.lang.Object;

        r2 = r0;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r2[i1];

        $z0 = staticinvoke <android.support.v4.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)>(r3, r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static java.lang.Object[] appendElement(java.lang.Class, java.lang.Object[], java.lang.Object)
    {
        java.lang.Class r0;
        java.lang.Object[] r1, $r4, $r6, r7;
        java.lang.Object r2, $r3, $r5;
        int $i0, i1;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Object[];

        r2 := @parameter2: java.lang.Object;

        if r1 == null goto label1;

        i1 = lengthof r1;

        $i0 = i1 + 1;

        $r5 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r0, $i0);

        $r6 = (java.lang.Object[]) $r5;

        r7 = (java.lang.Object[]) $r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r7, 0, i1);

        goto label2;

     label1:
        i1 = 0;

        $r3 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r0, 1);

        $r4 = (java.lang.Object[]) $r3;

        r7 = (java.lang.Object[]) $r4;

     label2:
        r7[i1] = r2;

        return r7;
    }

    public static java.lang.Object[] removeElement(java.lang.Class, java.lang.Object[], java.lang.Object)
    {
        java.lang.Class r0;
        java.lang.Object[] r1, r3, $r6;
        java.lang.Object r2, $r4, $r5;
        int i0, $i1, $i2, $i3, $i4, i5;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Object[];

        r2 := @parameter2: java.lang.Object;

        if r1 == null goto label5;

        $z0 = staticinvoke <androidx.slice.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>(r1, r2);

        if $z0 != 0 goto label1;

        return r1;

     label1:
        i0 = lengthof r1;

        i5 = 0;

     label2:
        if i5 >= i0 goto label5;

        $r4 = r1[i5];

        $z1 = staticinvoke <android.support.v4.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)>($r4, r2);

        if $z1 == 0 goto label4;

        if i0 != 1 goto label3;

        return null;

     label3:
        $i1 = i0 - 1;

        $r5 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r0, $i1);

        $r6 = (java.lang.Object[]) $r5;

        r3 = (java.lang.Object[]) $r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r3, 0, i5);

        $i4 = i5 + 1;

        $i2 = i0 - i5;

        $i3 = $i2 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i4, r3, i5, $i3);

        return r3;

     label4:
        i5 = i5 + 1;

        goto label2;

     label5:
        return r1;
    }

    private void <init>()
    {
        androidx.slice.ArrayUtils r0;

        r0 := @this: androidx.slice.ArrayUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

