androidx.compose.ui.platform.LayerMatrixCache
<androidx.compose.ui.platform.LayerMatrixCache: kotlin.jvm.functions.Function2 getMatrix>
<androidx.compose.ui.platform.LayerMatrixCache: android.graphics.Matrix androidMatrixCache>
<androidx.compose.ui.platform.LayerMatrixCache: android.graphics.Matrix previousAndroidMatrix>
<androidx.compose.ui.platform.LayerMatrixCache: float[] matrixCache>
<androidx.compose.ui.platform.LayerMatrixCache: float[] inverseMatrixCache>
<androidx.compose.ui.platform.LayerMatrixCache: boolean isDirty>
<androidx.compose.ui.platform.LayerMatrixCache: boolean isInverseDirty>
<androidx.compose.ui.platform.LayerMatrixCache: boolean isInverseValid>
    public void <init>(kotlin.jvm.functions.Function2)
    {
        androidx.compose.ui.platform.LayerMatrixCache r0;
        kotlin.jvm.functions.Function2 r1;

        r0 := @this: androidx.compose.ui.platform.LayerMatrixCache;

        r1 := @parameter0: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "getMatrix");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.platform.LayerMatrixCache: kotlin.jvm.functions.Function2 getMatrix> = r1;

        r0.<androidx.compose.ui.platform.LayerMatrixCache: boolean isDirty> = 1;

        r0.<androidx.compose.ui.platform.LayerMatrixCache: boolean isInverseDirty> = 1;

        r0.<androidx.compose.ui.platform.LayerMatrixCache: boolean isInverseValid> = 1;

        return;
    }

    public final void invalidate()
    {
        androidx.compose.ui.platform.LayerMatrixCache r0;

        r0 := @this: androidx.compose.ui.platform.LayerMatrixCache;

        r0.<androidx.compose.ui.platform.LayerMatrixCache: boolean isDirty> = 1;

        r0.<androidx.compose.ui.platform.LayerMatrixCache: boolean isInverseDirty> = 1;

        return;
    }

    public final float[] calculateMatrix-GrdbGEg(java.lang.Object)
    {
        androidx.compose.ui.platform.LayerMatrixCache r0;
        java.lang.Object r1;
        float[] r2, $r7, r8, r9;
        android.graphics.Matrix r3, $r6, $r10, r11, r12;
        boolean $z1, $z2;
        kotlin.jvm.functions.Function2 $r4;

        r0 := @this: androidx.compose.ui.platform.LayerMatrixCache;

        r1 := @parameter0: java.lang.Object;

        $r7 = r0.<androidx.compose.ui.platform.LayerMatrixCache: float[] matrixCache>;

        if $r7 != null goto label1;

        r8 = staticinvoke <androidx.compose.ui.graphics.Matrix: float[] constructor-impl$default(float[],int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, 1, null);

        r9 = r8;

        r0.<androidx.compose.ui.platform.LayerMatrixCache: float[] matrixCache> = r9;

        $r7 = r8;

     label1:
        r2 = $r7;

        $z1 = r0.<androidx.compose.ui.platform.LayerMatrixCache: boolean isDirty>;

        if $z1 != 0 goto label2;

        return r2;

     label2:
        $r10 = r0.<androidx.compose.ui.platform.LayerMatrixCache: android.graphics.Matrix androidMatrixCache>;

        if $r10 != null goto label3;

        $r6 = new android.graphics.Matrix;

        specialinvoke $r6.<android.graphics.Matrix: void <init>()>();

        r11 = $r6;

        r0.<androidx.compose.ui.platform.LayerMatrixCache: android.graphics.Matrix androidMatrixCache> = r11;

        $r10 = r11;

     label3:
        r3 = $r10;

        $r4 = r0.<androidx.compose.ui.platform.LayerMatrixCache: kotlin.jvm.functions.Function2 getMatrix>;

        interfaceinvoke $r4.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>(r1, r3);

        r12 = r0.<androidx.compose.ui.platform.LayerMatrixCache: android.graphics.Matrix previousAndroidMatrix>;

        if r12 == null goto label4;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r3, r12);

        if $z2 != 0 goto label5;

     label4:
        staticinvoke <androidx.compose.ui.graphics.AndroidMatrixConversions_androidKt: void setFrom-tU-YjHk(float[],android.graphics.Matrix)>(r2, r3);

        r0.<androidx.compose.ui.platform.LayerMatrixCache: android.graphics.Matrix androidMatrixCache> = r12;

        r0.<androidx.compose.ui.platform.LayerMatrixCache: android.graphics.Matrix previousAndroidMatrix> = r3;

     label5:
        r0.<androidx.compose.ui.platform.LayerMatrixCache: boolean isDirty> = 0;

        return r2;
    }

    public final float[] calculateInverseMatrix-bWbORWo(java.lang.Object)
    {
        androidx.compose.ui.platform.LayerMatrixCache r0;
        java.lang.Object r1;
        float[] r2, r3, r4, r5, $r6, $r7;
        boolean $z1, $z2, $z3;

        r0 := @this: androidx.compose.ui.platform.LayerMatrixCache;

        r1 := @parameter0: java.lang.Object;

        $r6 = r0.<androidx.compose.ui.platform.LayerMatrixCache: float[] inverseMatrixCache>;

        if $r6 != null goto label1;

        r4 = staticinvoke <androidx.compose.ui.graphics.Matrix: float[] constructor-impl$default(float[],int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, 1, null);

        r5 = r4;

        r0.<androidx.compose.ui.platform.LayerMatrixCache: float[] inverseMatrixCache> = r5;

        $r6 = r4;

     label1:
        r2 = $r6;

        $z1 = r0.<androidx.compose.ui.platform.LayerMatrixCache: boolean isInverseDirty>;

        if $z1 == 0 goto label2;

        r3 = virtualinvoke r0.<androidx.compose.ui.platform.LayerMatrixCache: float[] calculateMatrix-GrdbGEg(java.lang.Object)>(r1);

        $z3 = staticinvoke <androidx.compose.ui.platform.InvertMatrixKt: boolean invertTo-JiSxe2E(float[],float[])>(r3, r2);

        r0.<androidx.compose.ui.platform.LayerMatrixCache: boolean isInverseValid> = $z3;

        r0.<androidx.compose.ui.platform.LayerMatrixCache: boolean isInverseDirty> = 0;

     label2:
        $z2 = r0.<androidx.compose.ui.platform.LayerMatrixCache: boolean isInverseValid>;

        if $z2 == 0 goto label3;

        $r7 = r2;

        goto label4;

     label3:
        $r7 = null;

     label4:
        return $r7;
    }

