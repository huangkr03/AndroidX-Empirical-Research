androidx.media3.exoplayer.source.MediaSourceFactory
<androidx.media3.exoplayer.source.MediaSourceFactory: androidx.media3.exoplayer.source.MediaSourceFactory UNSUPPORTED>
    static void <clinit>()
    {
        androidx.media3.exoplayer.source.MediaSourceFactory$1 $r0;

        $r0 = new androidx.media3.exoplayer.source.MediaSourceFactory$1;

        specialinvoke $r0.<androidx.media3.exoplayer.source.MediaSourceFactory$1: void <init>()>();

        <androidx.media3.exoplayer.source.MediaSourceFactory: androidx.media3.exoplayer.source.MediaSourceFactory UNSUPPORTED> = $r0;

        return;
    }

androidx.media3.exoplayer.source.MediaSourceFactory$1
    void <init>()
    {
        androidx.media3.exoplayer.source.MediaSourceFactory$1 r0;

        r0 := @this: androidx.media3.exoplayer.source.MediaSourceFactory$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.media3.exoplayer.source.MediaSourceFactory setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider)
    {
        androidx.media3.exoplayer.source.MediaSourceFactory$1 r0;
        androidx.media3.exoplayer.drm.DrmSessionManagerProvider r1;

        r0 := @this: androidx.media3.exoplayer.source.MediaSourceFactory$1;

        r1 := @parameter0: androidx.media3.exoplayer.drm.DrmSessionManagerProvider;

        return r0;
    }

    public androidx.media3.exoplayer.source.MediaSourceFactory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy)
    {
        androidx.media3.exoplayer.source.MediaSourceFactory$1 r0;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy r1;

        r0 := @this: androidx.media3.exoplayer.source.MediaSourceFactory$1;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy;

        return r0;
    }

    public int[] getSupportedTypes()
    {
        androidx.media3.exoplayer.source.MediaSourceFactory$1 r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.media3.exoplayer.source.MediaSourceFactory$1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public androidx.media3.exoplayer.source.MediaSource createMediaSource(androidx.media3.common.MediaItem)
    {
        androidx.media3.exoplayer.source.MediaSourceFactory$1 r0;
        androidx.media3.common.MediaItem r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: androidx.media3.exoplayer.source.MediaSourceFactory$1;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public volatile androidx.media3.exoplayer.source.MediaSource$Factory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy)
    {
        androidx.media3.exoplayer.source.MediaSourceFactory$1 r0;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy r1;
        androidx.media3.exoplayer.source.MediaSourceFactory $r2;

        r0 := @this: androidx.media3.exoplayer.source.MediaSourceFactory$1;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.source.MediaSourceFactory$1: androidx.media3.exoplayer.source.MediaSourceFactory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy)>(r1);

        return $r2;
    }

    public volatile androidx.media3.exoplayer.source.MediaSource$Factory setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider)
    {
        androidx.media3.exoplayer.source.MediaSourceFactory$1 r0;
        androidx.media3.exoplayer.drm.DrmSessionManagerProvider r1;
        androidx.media3.exoplayer.source.MediaSourceFactory $r2;

        r0 := @this: androidx.media3.exoplayer.source.MediaSourceFactory$1;

        r1 := @parameter0: androidx.media3.exoplayer.drm.DrmSessionManagerProvider;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.source.MediaSourceFactory$1: androidx.media3.exoplayer.source.MediaSourceFactory setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider)>(r1);

        return $r2;
    }

