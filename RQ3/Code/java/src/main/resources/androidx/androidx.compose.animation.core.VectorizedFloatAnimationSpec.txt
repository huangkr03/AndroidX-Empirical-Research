androidx.compose.animation.core.VectorizedFloatAnimationSpec
<androidx.compose.animation.core.VectorizedFloatAnimationSpec: androidx.compose.animation.core.Animations anims>
<androidx.compose.animation.core.VectorizedFloatAnimationSpec: androidx.compose.animation.core.AnimationVector valueVector>
<androidx.compose.animation.core.VectorizedFloatAnimationSpec: androidx.compose.animation.core.AnimationVector velocityVector>
<androidx.compose.animation.core.VectorizedFloatAnimationSpec: androidx.compose.animation.core.AnimationVector endVelocityVector>
<androidx.compose.animation.core.VectorizedFloatAnimationSpec: int $stable>
    public void <init>(androidx.compose.animation.core.Animations)
    {
        androidx.compose.animation.core.VectorizedFloatAnimationSpec r0;
        androidx.compose.animation.core.Animations r1;

        r0 := @this: androidx.compose.animation.core.VectorizedFloatAnimationSpec;

        r1 := @parameter0: androidx.compose.animation.core.Animations;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "anims");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.animation.core.VectorizedFloatAnimationSpec: androidx.compose.animation.core.Animations anims> = r1;

        return;
    }

    public void <init>(androidx.compose.animation.core.FloatAnimationSpec)
    {
        androidx.compose.animation.core.VectorizedFloatAnimationSpec r0;
        androidx.compose.animation.core.FloatAnimationSpec r1;
        androidx.compose.animation.core.VectorizedFloatAnimationSpec$1 $r2;
        androidx.compose.animation.core.Animations $r3;

        r0 := @this: androidx.compose.animation.core.VectorizedFloatAnimationSpec;

        r1 := @parameter0: androidx.compose.animation.core.FloatAnimationSpec;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "anim");

        $r2 = new androidx.compose.animation.core.VectorizedFloatAnimationSpec$1;

        specialinvoke $r2.<androidx.compose.animation.core.VectorizedFloatAnimationSpec$1: void <init>(androidx.compose.animation.core.FloatAnimationSpec)>(r1);

        $r3 = (androidx.compose.animation.core.Animations) $r2;

        specialinvoke r0.<androidx.compose.animation.core.VectorizedFloatAnimationSpec: void <init>(androidx.compose.animation.core.Animations)>($r3);

        return;
    }

    public androidx.compose.animation.core.AnimationVector getValueFromNanos(long, androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector)
    {
        androidx.compose.animation.core.VectorizedFloatAnimationSpec r0;
        long l0;
        androidx.compose.animation.core.AnimationVector r1, r2, r3, $r4, $r7, $r8, $r9, $r10;
        int i1, i2;
        androidx.compose.animation.core.Animations $r5;
        androidx.compose.animation.core.FloatAnimationSpec $r6;
        float $f0, $f1, $f2, $f3;

        r0 := @this: androidx.compose.animation.core.VectorizedFloatAnimationSpec;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.compose.animation.core.AnimationVector;

        r2 := @parameter2: androidx.compose.animation.core.AnimationVector;

        r3 := @parameter3: androidx.compose.animation.core.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "initialValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "targetValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "initialVelocity");

        $r4 = r0.<androidx.compose.animation.core.VectorizedFloatAnimationSpec: androidx.compose.animation.core.AnimationVector valueVector>;

        if $r4 != null goto label1;

        $r7 = staticinvoke <androidx.compose.animation.core.AnimationVectorsKt: androidx.compose.animation.core.AnimationVector newInstance(androidx.compose.animation.core.AnimationVector)>(r1);

        r0.<androidx.compose.animation.core.VectorizedFloatAnimationSpec: androidx.compose.animation.core.AnimationVector valueVector> = $r7;

     label1:
        i2 = 0;

        $r8 = r0.<androidx.compose.animation.core.VectorizedFloatAnimationSpec: androidx.compose.animation.core.AnimationVector valueVector>;

        if $r8 != null goto label2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("valueVector");

        $r8 = null;

     label2:
        i1 = virtualinvoke $r8.<androidx.compose.animation.core.AnimationVector: int getSize$animation_core_release()>();

     label3:
        if i2 >= i1 goto label5;

        $r9 = r0.<androidx.compose.animation.core.VectorizedFloatAnimationSpec: androidx.compose.animation.core.AnimationVector valueVector>;

        if $r9 != null goto label4;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("valueVector");

        $r9 = null;

     label4:
        $r5 = r0.<androidx.compose.animation.core.VectorizedFloatAnimationSpec: androidx.compose.animation.core.Animations anims>;

        $r6 = interfaceinvoke $r5.<androidx.compose.animation.core.Animations: androidx.compose.animation.core.FloatAnimationSpec get(int)>(i2);

        $f0 = virtualinvoke r1.<androidx.compose.animation.core.AnimationVector: float get$animation_core_release(int)>(i2);

        $f1 = virtualinvoke r2.<androidx.compose.animation.core.AnimationVector: float get$animation_core_release(int)>(i2);

        $f2 = virtualinvoke r3.<androidx.compose.animation.core.AnimationVector: float get$animation_core_release(int)>(i2);

        $f3 = interfaceinvoke $r6.<androidx.compose.animation.core.FloatAnimationSpec: float getValueFromNanos(long,float,float,float)>(l0, $f0, $f1, $f2);

        virtualinvoke $r9.<androidx.compose.animation.core.AnimationVector: void set$animation_core_release(int,float)>(i2, $f3);

        i2 = i2 + 1;

        goto label3;

     label5:
        $r10 = r0.<androidx.compose.animation.core.VectorizedFloatAnimationSpec: androidx.compose.animation.core.AnimationVector valueVector>;

        if $r10 != null goto label6;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("valueVector");

        $r10 = null;

     label6:
        return $r10;
    }

    public androidx.compose.animation.core.AnimationVector getVelocityFromNanos(long, androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector)
    {
        androidx.compose.animation.core.VectorizedFloatAnimationSpec r0;
        long l0;
        androidx.compose.animation.core.AnimationVector r1, r2, r3, $r4, $r7, $r8, $r9, $r10;
        int i1, i2;
        androidx.compose.animation.core.Animations $r5;
        androidx.compose.animation.core.FloatAnimationSpec $r6;
        float $f0, $f1, $f2, $f3;

        r0 := @this: androidx.compose.animation.core.VectorizedFloatAnimationSpec;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.compose.animation.core.AnimationVector;

        r2 := @parameter2: androidx.compose.animation.core.AnimationVector;

        r3 := @parameter3: androidx.compose.animation.core.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "initialValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "targetValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "initialVelocity");

        $r4 = r0.<androidx.compose.animation.core.VectorizedFloatAnimationSpec: androidx.compose.animation.core.AnimationVector velocityVector>;

        if $r4 != null goto label1;

        $r7 = staticinvoke <androidx.compose.animation.core.AnimationVectorsKt: androidx.compose.animation.core.AnimationVector newInstance(androidx.compose.animation.core.AnimationVector)>(r3);

        r0.<androidx.compose.animation.core.VectorizedFloatAnimationSpec: androidx.compose.animation.core.AnimationVector velocityVector> = $r7;

     label1:
        i2 = 0;

        $r8 = r0.<androidx.compose.animation.core.VectorizedFloatAnimationSpec: androidx.compose.animation.core.AnimationVector velocityVector>;

        if $r8 != null goto label2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("velocityVector");

        $r8 = null;

     label2:
        i1 = virtualinvoke $r8.<androidx.compose.animation.core.AnimationVector: int getSize$animation_core_release()>();

     label3:
        if i2 >= i1 goto label5;

        $r9 = r0.<androidx.compose.animation.core.VectorizedFloatAnimationSpec: androidx.compose.animation.core.AnimationVector velocityVector>;

        if $r9 != null goto label4;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("velocityVector");

        $r9 = null;

     label4:
        $r5 = r0.<androidx.compose.animation.core.VectorizedFloatAnimationSpec: androidx.compose.animation.core.Animations anims>;

        $r6 = interfaceinvoke $r5.<androidx.compose.animation.core.Animations: androidx.compose.animation.core.FloatAnimationSpec get(int)>(i2);

        $f0 = virtualinvoke r1.<androidx.compose.animation.core.AnimationVector: float get$animation_core_release(int)>(i2);

        $f1 = virtualinvoke r2.<androidx.compose.animation.core.AnimationVector: float get$animation_core_release(int)>(i2);

        $f2 = virtualinvoke r3.<androidx.compose.animation.core.AnimationVector: float get$animation_core_release(int)>(i2);

        $f3 = interfaceinvoke $r6.<androidx.compose.animation.core.FloatAnimationSpec: float getVelocityFromNanos(long,float,float,float)>(l0, $f0, $f1, $f2);

        virtualinvoke $r9.<androidx.compose.animation.core.AnimationVector: void set$animation_core_release(int,float)>(i2, $f3);

        i2 = i2 + 1;

        goto label3;

     label5:
        $r10 = r0.<androidx.compose.animation.core.VectorizedFloatAnimationSpec: androidx.compose.animation.core.AnimationVector velocityVector>;

        if $r10 != null goto label6;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("velocityVector");

        $r10 = null;

     label6:
        return $r10;
    }

    public androidx.compose.animation.core.AnimationVector getEndVelocity(androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector)
    {
        androidx.compose.animation.core.VectorizedFloatAnimationSpec r0;
        androidx.compose.animation.core.AnimationVector r1, r2, r3, $r4, $r7, $r8, $r9, $r10;
        int i0, i1;
        androidx.compose.animation.core.Animations $r5;
        androidx.compose.animation.core.FloatAnimationSpec $r6;
        float $f0, $f1, $f2, $f3;

        r0 := @this: androidx.compose.animation.core.VectorizedFloatAnimationSpec;

        r1 := @parameter0: androidx.compose.animation.core.AnimationVector;

        r2 := @parameter1: androidx.compose.animation.core.AnimationVector;

        r3 := @parameter2: androidx.compose.animation.core.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "initialValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "targetValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "initialVelocity");

        $r4 = r0.<androidx.compose.animation.core.VectorizedFloatAnimationSpec: androidx.compose.animation.core.AnimationVector endVelocityVector>;

        if $r4 != null goto label1;

        $r7 = staticinvoke <androidx.compose.animation.core.AnimationVectorsKt: androidx.compose.animation.core.AnimationVector newInstance(androidx.compose.animation.core.AnimationVector)>(r3);

        r0.<androidx.compose.animation.core.VectorizedFloatAnimationSpec: androidx.compose.animation.core.AnimationVector endVelocityVector> = $r7;

     label1:
        i1 = 0;

        $r8 = r0.<androidx.compose.animation.core.VectorizedFloatAnimationSpec: androidx.compose.animation.core.AnimationVector endVelocityVector>;

        if $r8 != null goto label2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("endVelocityVector");

        $r8 = null;

     label2:
        i0 = virtualinvoke $r8.<androidx.compose.animation.core.AnimationVector: int getSize$animation_core_release()>();

     label3:
        if i1 >= i0 goto label5;

        $r9 = r0.<androidx.compose.animation.core.VectorizedFloatAnimationSpec: androidx.compose.animation.core.AnimationVector endVelocityVector>;

        if $r9 != null goto label4;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("endVelocityVector");

        $r9 = null;

     label4:
        $r5 = r0.<androidx.compose.animation.core.VectorizedFloatAnimationSpec: androidx.compose.animation.core.Animations anims>;

        $r6 = interfaceinvoke $r5.<androidx.compose.animation.core.Animations: androidx.compose.animation.core.FloatAnimationSpec get(int)>(i1);

        $f0 = virtualinvoke r1.<androidx.compose.animation.core.AnimationVector: float get$animation_core_release(int)>(i1);

        $f1 = virtualinvoke r2.<androidx.compose.animation.core.AnimationVector: float get$animation_core_release(int)>(i1);

        $f2 = virtualinvoke r3.<androidx.compose.animation.core.AnimationVector: float get$animation_core_release(int)>(i1);

        $f3 = interfaceinvoke $r6.<androidx.compose.animation.core.FloatAnimationSpec: float getEndVelocity(float,float,float)>($f0, $f1, $f2);

        virtualinvoke $r9.<androidx.compose.animation.core.AnimationVector: void set$animation_core_release(int,float)>(i1, $f3);

        i1 = i1 + 1;

        goto label3;

     label5:
        $r10 = r0.<androidx.compose.animation.core.VectorizedFloatAnimationSpec: androidx.compose.animation.core.AnimationVector endVelocityVector>;

        if $r10 != null goto label6;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("endVelocityVector");

        $r10 = null;

     label6:
        return $r10;
    }

    public long getDurationNanos(androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector)
    {
        androidx.compose.animation.core.VectorizedFloatAnimationSpec r0;
        androidx.compose.animation.core.AnimationVector r1, r2, r3;
        java.lang.Iterable $r4;
        java.util.Iterator r5;
        int i0, i1, $i2;
        kotlin.ranges.IntRange $r6;
        boolean $z2;
        kotlin.collections.IntIterator $r7;
        androidx.compose.animation.core.Animations $r8;
        androidx.compose.animation.core.FloatAnimationSpec $r9;
        float $f0, $f1, $f2;
        long $l3, l4;

        r0 := @this: androidx.compose.animation.core.VectorizedFloatAnimationSpec;

        r1 := @parameter0: androidx.compose.animation.core.AnimationVector;

        r2 := @parameter1: androidx.compose.animation.core.AnimationVector;

        r3 := @parameter2: androidx.compose.animation.core.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "initialValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "targetValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "initialVelocity");

        l4 = 0L;

        $i2 = virtualinvoke r1.<androidx.compose.animation.core.AnimationVector: int getSize$animation_core_release()>();

        $r6 = staticinvoke <kotlin.ranges.RangesKt: kotlin.ranges.IntRange until(int,int)>(0, $i2);

        $r4 = (java.lang.Iterable) $r6;

        r5 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r7 = (kotlin.collections.IntIterator) r5;

        i0 = virtualinvoke $r7.<kotlin.collections.IntIterator: int nextInt()>();

        i1 = i0;

        $r8 = r0.<androidx.compose.animation.core.VectorizedFloatAnimationSpec: androidx.compose.animation.core.Animations anims>;

        $r9 = interfaceinvoke $r8.<androidx.compose.animation.core.Animations: androidx.compose.animation.core.FloatAnimationSpec get(int)>(i1);

        $f0 = virtualinvoke r1.<androidx.compose.animation.core.AnimationVector: float get$animation_core_release(int)>(i1);

        $f1 = virtualinvoke r2.<androidx.compose.animation.core.AnimationVector: float get$animation_core_release(int)>(i1);

        $f2 = virtualinvoke r3.<androidx.compose.animation.core.AnimationVector: float get$animation_core_release(int)>(i1);

        $l3 = interfaceinvoke $r9.<androidx.compose.animation.core.FloatAnimationSpec: long getDurationNanos(float,float,float)>($f0, $f1, $f2);

        l4 = staticinvoke <java.lang.Math: long max(long,long)>(l4, $l3);

        goto label1;

     label2:
        return l4;
    }

    static void <clinit>()
    {
        <androidx.compose.animation.core.VectorizedFloatAnimationSpec: int $stable> = 8;

        return;
    }

androidx.compose.animation.core.VectorizedFloatAnimationSpec$1
<androidx.compose.animation.core.VectorizedFloatAnimationSpec$1: androidx.compose.animation.core.FloatAnimationSpec $anim>
    void <init>(androidx.compose.animation.core.FloatAnimationSpec)
    {
        androidx.compose.animation.core.VectorizedFloatAnimationSpec$1 r0;
        androidx.compose.animation.core.FloatAnimationSpec $r1;

        r0 := @this: androidx.compose.animation.core.VectorizedFloatAnimationSpec$1;

        $r1 := @parameter0: androidx.compose.animation.core.FloatAnimationSpec;

        r0.<androidx.compose.animation.core.VectorizedFloatAnimationSpec$1: androidx.compose.animation.core.FloatAnimationSpec $anim> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.compose.animation.core.FloatAnimationSpec get(int)
    {
        androidx.compose.animation.core.VectorizedFloatAnimationSpec$1 r0;
        int i0;
        androidx.compose.animation.core.FloatAnimationSpec $r1;

        r0 := @this: androidx.compose.animation.core.VectorizedFloatAnimationSpec$1;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.animation.core.VectorizedFloatAnimationSpec$1: androidx.compose.animation.core.FloatAnimationSpec $anim>;

        return $r1;
    }

