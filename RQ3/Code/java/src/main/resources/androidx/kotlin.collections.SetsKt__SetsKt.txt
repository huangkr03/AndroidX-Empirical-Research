kotlin.collections.SetsKt__SetsKt
    public void <init>()
    {
        kotlin.collections.SetsKt__SetsKt $r0;

        $r0 := @this: kotlin.collections.SetsKt__SetsKt;

        specialinvoke $r0.<kotlin.collections.SetsKt__SetsJVMKt: void <init>()>();

        return;
    }

    private static final java.util.Set buildSet(int, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int $i0;
        java.util.Set $r1;

        $i0 := @parameter0: int;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "builderAction");

        $r1 = staticinvoke <kotlin.collections.SetsKt: java.util.Set createSetBuilder(int)>($i0);

        interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r1);

        $r1 = staticinvoke <kotlin.collections.SetsKt: java.util.Set build(java.util.Set)>($r1);

        return $r1;
    }

    private static final java.util.Set buildSet(kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.Set $r1;

        $r0 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "builderAction");

        $r1 = staticinvoke <kotlin.collections.SetsKt: java.util.Set createSetBuilder()>();

        interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r1);

        $r1 = staticinvoke <kotlin.collections.SetsKt: java.util.Set build(java.util.Set)>($r1);

        return $r1;
    }

    public static final java.util.Set emptySet()
    {
        kotlin.collections.EmptySet r0;

        r0 = <kotlin.collections.EmptySet: kotlin.collections.EmptySet INSTANCE>;

        return r0;
    }

    private static final java.util.HashSet hashSetOf()
    {
        java.util.HashSet $r0;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        return $r0;
    }

    public static final transient java.util.HashSet hashSetOf(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        java.util.HashSet $r1, r3;
        int $i0;
        java.util.Collection $r2;

        $r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "elements");

        r3 = new java.util.HashSet;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r3.<java.util.HashSet: void <init>(int)>($i0);

        $r2 = (java.util.Collection) r3;

        $r2 = staticinvoke <kotlin.collections.ArraysKt: java.util.Collection toCollection(java.lang.Object[],java.util.Collection)>($r0, $r2);

        $r1 = (java.util.HashSet) $r2;

        return $r1;
    }

    private static final java.util.LinkedHashSet linkedSetOf()
    {
        java.util.LinkedHashSet $r0;

        $r0 = new java.util.LinkedHashSet;

        specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>();

        return $r0;
    }

    public static final transient java.util.LinkedHashSet linkedSetOf(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        java.util.LinkedHashSet $r1, r3;
        int $i0;
        java.util.Collection $r2;

        $r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "elements");

        r3 = new java.util.LinkedHashSet;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r3.<java.util.LinkedHashSet: void <init>(int)>($i0);

        $r2 = (java.util.Collection) r3;

        $r2 = staticinvoke <kotlin.collections.ArraysKt: java.util.Collection toCollection(java.lang.Object[],java.util.Collection)>($r0, $r2);

        $r1 = (java.util.LinkedHashSet) $r2;

        return $r1;
    }

    private static final java.util.Set mutableSetOf()
    {
        java.util.LinkedHashSet r0;
        java.util.Set r1;

        r0 = new java.util.LinkedHashSet;

        specialinvoke r0.<java.util.LinkedHashSet: void <init>()>();

        r1 = (java.util.Set) r0;

        return r1;
    }

    public static final transient java.util.Set mutableSetOf(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        int $i0;
        java.util.Collection $r1;
        java.util.Set $r2;
        java.util.LinkedHashSet r3;

        $r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "elements");

        r3 = new java.util.LinkedHashSet;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r3.<java.util.LinkedHashSet: void <init>(int)>($i0);

        $r1 = (java.util.Collection) r3;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Collection toCollection(java.lang.Object[],java.util.Collection)>($r0, $r1);

        $r2 = (java.util.Set) $r1;

        return $r2;
    }

    public static final java.util.Set optimizeReadOnlySet(java.util.Set)
    {
        java.util.Set $r0;
        int $i0;
        java.util.Iterator $r1;
        java.lang.Object $r2;

        $r0 := @parameter0: java.util.Set;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = interfaceinvoke $r0.<java.util.Set: int size()>();

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        return $r0;

     label2:
        $r1 = interfaceinvoke $r0.<java.util.Set: java.util.Iterator iterator()>();

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r0 = staticinvoke <kotlin.collections.SetsKt: java.util.Set setOf(java.lang.Object)>($r2);

        return $r0;

     label3:
        $r0 = staticinvoke <kotlin.collections.SetsKt: java.util.Set emptySet()>();

        return $r0;
    }

    private static final java.util.Set orEmpty(java.util.Set)
    {
        java.util.Set $r0;

        $r0 := @parameter0: java.util.Set;

        if $r0 != null goto label1;

        $r0 = staticinvoke <kotlin.collections.SetsKt: java.util.Set emptySet()>();

     label1:
        return $r0;
    }

    private static final java.util.Set setOf()
    {
        java.util.Set $r0;

        $r0 = staticinvoke <kotlin.collections.SetsKt: java.util.Set emptySet()>();

        return $r0;
    }

    public static final transient java.util.Set setOf(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        int $i0;
        java.util.Set $r1;

        $r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "elements");

        $i0 = lengthof $r0;

        if $i0 <= 0 goto label1;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Set toSet(java.lang.Object[])>($r0);

        return $r1;

     label1:
        $r1 = staticinvoke <kotlin.collections.SetsKt: java.util.Set emptySet()>();

        return $r1;
    }

    public static final java.util.Set setOfNotNull(java.lang.Object)
    {
        java.lang.Object $r0;
        java.util.Set $r1;

        $r0 := @parameter0: java.lang.Object;

        if $r0 == null goto label1;

        $r1 = staticinvoke <kotlin.collections.SetsKt: java.util.Set setOf(java.lang.Object)>($r0);

        return $r1;

     label1:
        $r1 = staticinvoke <kotlin.collections.SetsKt: java.util.Set emptySet()>();

        return $r1;
    }

    public static final transient java.util.Set setOfNotNull(java.lang.Object[])
    {
        java.util.Collection $r0;
        java.lang.Object[] $r1;
        java.util.Set $r2;
        java.util.LinkedHashSet r3;

        $r1 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "elements");

        r3 = new java.util.LinkedHashSet;

        specialinvoke r3.<java.util.LinkedHashSet: void <init>()>();

        $r0 = (java.util.Collection) r3;

        $r0 = staticinvoke <kotlin.collections.ArraysKt: java.util.Collection filterNotNullTo(java.lang.Object[],java.util.Collection)>($r1, $r0);

        $r2 = (java.util.Set) $r0;

        return $r2;
    }

