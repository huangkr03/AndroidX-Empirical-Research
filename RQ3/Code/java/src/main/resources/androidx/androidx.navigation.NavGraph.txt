androidx.navigation.NavGraph
<androidx.navigation.NavGraph: androidx.navigation.NavGraph$Companion Companion>
<androidx.navigation.NavGraph: androidx.collection.SparseArrayCompat nodes>
<androidx.navigation.NavGraph: int startDestId>
<androidx.navigation.NavGraph: java.lang.String startDestIdName>
<androidx.navigation.NavGraph: java.lang.String startDestinationRoute>
    public void <init>(androidx.navigation.Navigator)
    {
        androidx.navigation.NavGraph r0;
        androidx.navigation.Navigator r1;
        androidx.collection.SparseArrayCompat $r2;

        r0 := @this: androidx.navigation.NavGraph;

        r1 := @parameter0: androidx.navigation.Navigator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "navGraphNavigator");

        specialinvoke r0.<androidx.navigation.NavDestination: void <init>(androidx.navigation.Navigator)>(r1);

        $r2 = new androidx.collection.SparseArrayCompat;

        specialinvoke $r2.<androidx.collection.SparseArrayCompat: void <init>()>();

        r0.<androidx.navigation.NavGraph: androidx.collection.SparseArrayCompat nodes> = $r2;

        return;
    }

    public final androidx.collection.SparseArrayCompat getNodes()
    {
        androidx.navigation.NavGraph r0;
        androidx.collection.SparseArrayCompat $r1;

        r0 := @this: androidx.navigation.NavGraph;

        $r1 = r0.<androidx.navigation.NavGraph: androidx.collection.SparseArrayCompat nodes>;

        return $r1;
    }

    public void onInflate(android.content.Context, android.util.AttributeSet)
    {
        androidx.navigation.NavGraph r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.content.res.TypedArray r4, $r9;
        kotlin.Unit r5, r6;
        android.content.res.Resources $r7;
        int[] $r8;
        int $i0, $i1, $i2;
        androidx.navigation.NavDestination$Companion $r10;
        java.lang.String $r11;

        r0 := @this: androidx.navigation.NavGraph;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "attrs");

        specialinvoke r0.<androidx.navigation.NavDestination: void onInflate(android.content.Context,android.util.AttributeSet)>(r1, r2);

        $r7 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r8 = <androidx.navigation.common.R$styleable: int[] NavGraphNavigator>;

        $r9 = virtualinvoke $r7.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r2, $r8);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r9, "context.resources.obtain\u2026vGraphNavigator\n        )");

        r4 = $r9;

        $i0 = <androidx.navigation.common.R$styleable: int NavGraphNavigator_startDestination>;

        $i1 = virtualinvoke r4.<android.content.res.TypedArray: int getResourceId(int,int)>($i0, 0);

        specialinvoke r0.<androidx.navigation.NavGraph: void setStartDestinationId(int)>($i1);

        $r10 = <androidx.navigation.NavDestination: androidx.navigation.NavDestination$Companion Companion>;

        $i2 = r0.<androidx.navigation.NavGraph: int startDestId>;

        $r11 = virtualinvoke $r10.<androidx.navigation.NavDestination$Companion: java.lang.String getDisplayName(android.content.Context,int)>(r1, $i2);

        r0.<androidx.navigation.NavGraph: java.lang.String startDestIdName> = $r11;

        r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        r6 = r5;

        virtualinvoke $r9.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    public androidx.navigation.NavDestination$DeepLinkMatch matchDeepLink(androidx.navigation.NavDeepLinkRequest)
    {
        androidx.navigation.NavGraph r0;
        androidx.navigation.NavDeepLinkRequest r1;
        androidx.navigation.NavDestination$DeepLinkMatch r2, r3, r10, $r18, $r19;
        java.util.Collection r4;
        java.lang.Iterable $r5, $r13, $r16;
        java.util.Iterator r6;
        java.lang.Object r7, r8;
        androidx.navigation.NavDestination r9;
        java.util.ArrayList $r11;
        java.util.List $r12, $r15;
        java.lang.Comparable $r14, $r17;
        boolean $z7;
        androidx.navigation.NavDestination$DeepLinkMatch[] $r20;

        r0 := @this: androidx.navigation.NavGraph;

        r1 := @parameter0: androidx.navigation.NavDeepLinkRequest;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "navDeepLinkRequest");

        r2 = specialinvoke r0.<androidx.navigation.NavDestination: androidx.navigation.NavDestination$DeepLinkMatch matchDeepLink(androidx.navigation.NavDeepLinkRequest)>(r1);

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r4 = (java.util.Collection) $r11;

        $r5 = (java.lang.Iterable) r0;

        r6 = interfaceinvoke $r5.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z7 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label3;

        r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = r7;

        r9 = (androidx.navigation.NavDestination) r8;

        $r19 = virtualinvoke r9.<androidx.navigation.NavDestination: androidx.navigation.NavDestination$DeepLinkMatch matchDeepLink(androidx.navigation.NavDeepLinkRequest)>(r1);

        if $r19 == null goto label2;

        r10 = $r19;

        interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(r10);

        goto label1;

     label2:
        goto label1;

     label3:
        $r12 = (java.util.List) r4;

        $r13 = (java.lang.Iterable) $r12;

        $r14 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Comparable maxOrNull(java.lang.Iterable)>($r13);

        r3 = (androidx.navigation.NavDestination$DeepLinkMatch) $r14;

        $r20 = newarray (androidx.navigation.NavDestination$DeepLinkMatch)[2];

        $r20[0] = r2;

        $r20[1] = r3;

        $r15 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOfNotNull(java.lang.Object[])>($r20);

        $r16 = (java.lang.Iterable) $r15;

        $r17 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Comparable maxOrNull(java.lang.Iterable)>($r16);

        $r18 = (androidx.navigation.NavDestination$DeepLinkMatch) $r17;

        return $r18;
    }

    public final void addDestination(androidx.navigation.NavDestination)
    {
        androidx.navigation.NavGraph r0, $r7;
        androidx.navigation.NavDestination r1, r3;
        int i0, $i1, $i2;
        java.lang.String r2, $r4, $r10, $r17, $r18, $r25, $r27, $r28, $r29, $r30, $r31;
        androidx.collection.SparseArrayCompat $r5, $r8;
        java.lang.Object $r6;
        java.lang.IllegalStateException $r9;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r15, $r19, $r20, $r21, $r22, $r23;
        java.lang.IllegalArgumentException $r16, $r24, $r26;
        boolean $z0, $z1, $z3, $z5, $z7;

        r0 := @this: androidx.navigation.NavGraph;

        r1 := @parameter0: androidx.navigation.NavDestination;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "node");

        i0 = virtualinvoke r1.<androidx.navigation.NavDestination: int getId()>();

        r2 = virtualinvoke r1.<androidx.navigation.NavDestination: java.lang.String getRoute()>();

        if i0 != 0 goto label01;

        if r2 == null goto label02;

     label01:
        $z1 = 1;

        goto label03;

     label02:
        $z1 = 0;

     label03:
        if $z1 != 0 goto label04;

        $r28 = "Destinations must have an id or route. Call setId(), setRoute(), or include an android:id or app:route in your navigation XML.";

        $r26 = new java.lang.IllegalArgumentException;

        $r27 = virtualinvoke $r28.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r27);

        throw $r26;

     label04:
        $r4 = virtualinvoke r0.<androidx.navigation.NavGraph: java.lang.String getRoute()>();

        if $r4 == null goto label07;

        $r18 = virtualinvoke r0.<androidx.navigation.NavGraph: java.lang.String getRoute()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r18);

        if $z0 != 0 goto label05;

        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        if $z3 != 0 goto label07;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Destination ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot have the same route as graph ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r29 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $r24 = new java.lang.IllegalArgumentException;

        $r25 = virtualinvoke $r29.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r25);

        throw $r24;

     label07:
        $i1 = virtualinvoke r0.<androidx.navigation.NavGraph: int getId()>();

        if i0 == $i1 goto label08;

        $z5 = 1;

        goto label09;

     label08:
        $z5 = 0;

     label09:
        if $z5 != 0 goto label10;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Destination ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot have the same id as graph ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r30 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = new java.lang.IllegalArgumentException;

        $r17 = virtualinvoke $r30.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r16;

     label10:
        $r5 = r0.<androidx.navigation.NavGraph: androidx.collection.SparseArrayCompat nodes>;

        $r6 = virtualinvoke $r5.<androidx.collection.SparseArrayCompat: java.lang.Object get(int)>(i0);

        r3 = (androidx.navigation.NavDestination) $r6;

        if r3 != r1 goto label11;

        return;

     label11:
        $r7 = virtualinvoke r1.<androidx.navigation.NavDestination: androidx.navigation.NavGraph getParent()>();

        if $r7 != null goto label12;

        $z7 = 1;

        goto label13;

     label12:
        $z7 = 0;

     label13:
        if $z7 != 0 goto label14;

        $r31 = "Destination already has a parent set. Call NavGraph.remove() to remove the previous parent.";

        $r9 = new java.lang.IllegalStateException;

        $r10 = virtualinvoke $r31.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label14:
        if r3 == null goto label15;

        virtualinvoke r3.<androidx.navigation.NavDestination: void setParent(androidx.navigation.NavGraph)>(null);

     label15:
        virtualinvoke r1.<androidx.navigation.NavDestination: void setParent(androidx.navigation.NavGraph)>(r0);

        $r8 = r0.<androidx.navigation.NavGraph: androidx.collection.SparseArrayCompat nodes>;

        $i2 = virtualinvoke r1.<androidx.navigation.NavDestination: int getId()>();

        virtualinvoke $r8.<androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)>($i2, r1);

        return;
    }

    public final void addDestinations(java.util.Collection)
    {
        androidx.navigation.NavGraph r0;
        java.util.Collection r1;
        java.util.Iterator r2;
        androidx.navigation.NavDestination r3;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: androidx.navigation.NavGraph;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "nodes");

        r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.navigation.NavDestination) $r4;

        if r3 != null goto label2;

        goto label1;

     label2:
        virtualinvoke r0.<androidx.navigation.NavGraph: void addDestination(androidx.navigation.NavDestination)>(r3);

        goto label1;

     label3:
        return;
    }

    public final transient void addDestinations(androidx.navigation.NavDestination[])
    {
        androidx.navigation.NavGraph r0;
        androidx.navigation.NavDestination[] r1;
        int i0, i1;
        androidx.navigation.NavDestination r2;

        r0 := @this: androidx.navigation.NavGraph;

        r1 := @parameter0: androidx.navigation.NavDestination[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "nodes");

        i1 = 0;

        i0 = lengthof r1;

     label1:
        if i1 >= i0 goto label2;

        r2 = r1[i1];

        virtualinvoke r0.<androidx.navigation.NavGraph: void addDestination(androidx.navigation.NavDestination)>(r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public final androidx.navigation.NavDestination findNode(int)
    {
        androidx.navigation.NavGraph r0;
        int i0;
        androidx.navigation.NavDestination $r1;

        r0 := @this: androidx.navigation.NavGraph;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.navigation.NavGraph: androidx.navigation.NavDestination findNode(int,boolean)>(i0, 1);

        return $r1;
    }

    public final androidx.navigation.NavDestination findNode(java.lang.String)
    {
        androidx.navigation.NavGraph r0;
        java.lang.String r1;
        java.lang.CharSequence r2;
        boolean $z0, $z1;
        androidx.navigation.NavDestination $r3;

        r0 := @this: androidx.navigation.NavGraph;

        r1 := @parameter0: java.lang.String;

        r2 = (java.lang.CharSequence) r1;

        if r2 == null goto label1;

        $z0 = staticinvoke <kotlin.text.StringsKt: boolean isBlank(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        if $z1 != 0 goto label4;

        $r3 = virtualinvoke r0.<androidx.navigation.NavGraph: androidx.navigation.NavDestination findNode(java.lang.String,boolean)>(r1, 1);

        goto label5;

     label4:
        $r3 = null;

     label5:
        return $r3;
    }

    public final androidx.navigation.NavDestination findNode(int, boolean)
    {
        androidx.navigation.NavGraph r0, $r4, $r5;
        int i0;
        boolean z0;
        androidx.navigation.NavDestination r1, $r6;
        androidx.collection.SparseArrayCompat $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.navigation.NavGraph;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r2 = r0.<androidx.navigation.NavGraph: androidx.collection.SparseArrayCompat nodes>;

        $r3 = virtualinvoke $r2.<androidx.collection.SparseArrayCompat: java.lang.Object get(int)>(i0);

        r1 = (androidx.navigation.NavDestination) $r3;

        $r6 = r1;

        if r1 != null goto label2;

        if z0 == 0 goto label1;

        $r4 = virtualinvoke r0.<androidx.navigation.NavGraph: androidx.navigation.NavGraph getParent()>();

        if $r4 == null goto label1;

        $r5 = virtualinvoke r0.<androidx.navigation.NavGraph: androidx.navigation.NavGraph getParent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r5);

        $r6 = virtualinvoke $r5.<androidx.navigation.NavGraph: androidx.navigation.NavDestination findNode(int)>(i0);

        goto label2;

     label1:
        $r6 = null;

     label2:
        return $r6;
    }

    public final androidx.navigation.NavDestination findNode(java.lang.String, boolean)
    {
        androidx.navigation.NavGraph r0, $r7, $r8;
        java.lang.String r1, $r4;
        boolean z0;
        int i0;
        androidx.navigation.NavDestination r2, $r9;
        androidx.navigation.NavDestination$Companion $r3;
        androidx.collection.SparseArrayCompat $r5;
        java.lang.Object $r6;

        r0 := @this: androidx.navigation.NavGraph;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "route");

        $r3 = <androidx.navigation.NavDestination: androidx.navigation.NavDestination$Companion Companion>;

        $r4 = virtualinvoke $r3.<androidx.navigation.NavDestination$Companion: java.lang.String createRoute(java.lang.String)>(r1);

        i0 = virtualinvoke $r4.<java.lang.String: int hashCode()>();

        $r5 = r0.<androidx.navigation.NavGraph: androidx.collection.SparseArrayCompat nodes>;

        $r6 = virtualinvoke $r5.<androidx.collection.SparseArrayCompat: java.lang.Object get(int)>(i0);

        r2 = (androidx.navigation.NavDestination) $r6;

        $r9 = r2;

        if r2 != null goto label2;

        if z0 == 0 goto label1;

        $r7 = virtualinvoke r0.<androidx.navigation.NavGraph: androidx.navigation.NavGraph getParent()>();

        if $r7 == null goto label1;

        $r8 = virtualinvoke r0.<androidx.navigation.NavGraph: androidx.navigation.NavGraph getParent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r8);

        $r9 = virtualinvoke $r8.<androidx.navigation.NavGraph: androidx.navigation.NavDestination findNode(java.lang.String)>(r1);

        goto label2;

     label1:
        $r9 = null;

     label2:
        return $r9;
    }

    public final java.util.Iterator iterator()
    {
        androidx.navigation.NavGraph r0;
        androidx.navigation.NavGraph$iterator$1 $r1;
        java.util.Iterator $r2;

        r0 := @this: androidx.navigation.NavGraph;

        $r1 = new androidx.navigation.NavGraph$iterator$1;

        specialinvoke $r1.<androidx.navigation.NavGraph$iterator$1: void <init>(androidx.navigation.NavGraph)>(r0);

        $r2 = (java.util.Iterator) $r1;

        return $r2;
    }

    public final void addAll(androidx.navigation.NavGraph)
    {
        androidx.navigation.NavGraph r0, r1;
        java.util.Iterator r2;
        androidx.navigation.NavDestination r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: androidx.navigation.NavGraph;

        r1 := @parameter0: androidx.navigation.NavGraph;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "other");

        r2 = virtualinvoke r1.<androidx.navigation.NavGraph: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.navigation.NavDestination) $r4;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

        virtualinvoke r0.<androidx.navigation.NavGraph: void addDestination(androidx.navigation.NavDestination)>(r3);

        goto label1;

     label2:
        return;
    }

    public final void remove(androidx.navigation.NavDestination)
    {
        androidx.navigation.NavGraph r0;
        androidx.navigation.NavDestination r1, $r5;
        int i0, $i1;
        androidx.collection.SparseArrayCompat $r2, $r3, $r6;
        java.lang.Object $r4;

        r0 := @this: androidx.navigation.NavGraph;

        r1 := @parameter0: androidx.navigation.NavDestination;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "node");

        $r2 = r0.<androidx.navigation.NavGraph: androidx.collection.SparseArrayCompat nodes>;

        $i1 = virtualinvoke r1.<androidx.navigation.NavDestination: int getId()>();

        i0 = virtualinvoke $r2.<androidx.collection.SparseArrayCompat: int indexOfKey(int)>($i1);

        if i0 < 0 goto label1;

        $r3 = r0.<androidx.navigation.NavGraph: androidx.collection.SparseArrayCompat nodes>;

        $r4 = virtualinvoke $r3.<androidx.collection.SparseArrayCompat: java.lang.Object valueAt(int)>(i0);

        $r5 = (androidx.navigation.NavDestination) $r4;

        virtualinvoke $r5.<androidx.navigation.NavDestination: void setParent(androidx.navigation.NavGraph)>(null);

        $r6 = r0.<androidx.navigation.NavGraph: androidx.collection.SparseArrayCompat nodes>;

        virtualinvoke $r6.<androidx.collection.SparseArrayCompat: void removeAt(int)>(i0);

     label1:
        return;
    }

    public final void clear()
    {
        androidx.navigation.NavGraph r0;
        java.util.Iterator r1;
        boolean $z0;

        r0 := @this: androidx.navigation.NavGraph;

        r1 = virtualinvoke r0.<androidx.navigation.NavGraph: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke r1.<java.util.Iterator: void remove()>();

        goto label1;

     label2:
        return;
    }

    public java.lang.String getDisplayName()
    {
        androidx.navigation.NavGraph r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: androidx.navigation.NavGraph;

        $i0 = virtualinvoke r0.<androidx.navigation.NavGraph: int getId()>();

        if $i0 == 0 goto label1;

        $r1 = specialinvoke r0.<androidx.navigation.NavDestination: java.lang.String getDisplayName()>();

        goto label2;

     label1:
        $r1 = "the root navigation";

     label2:
        return $r1;
    }

    public final int getStartDestination()
    {
        androidx.navigation.NavGraph r0;
        int $i0;

        r0 := @this: androidx.navigation.NavGraph;

        $i0 = virtualinvoke r0.<androidx.navigation.NavGraph: int getStartDestinationId()>();

        return $i0;
    }

    public final int getStartDestinationId()
    {
        androidx.navigation.NavGraph r0;
        int $i0;

        r0 := @this: androidx.navigation.NavGraph;

        $i0 = r0.<androidx.navigation.NavGraph: int startDestId>;

        return $i0;
    }

    private final void setStartDestinationId(int)
    {
        androidx.navigation.NavGraph r0;
        int i0, $i1;
        java.lang.String $r1, $r8, $r9;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;
        java.lang.IllegalArgumentException $r7;
        boolean $z0;

        r0 := @this: androidx.navigation.NavGraph;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<androidx.navigation.NavGraph: int getId()>();

        if i0 == $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Start destination ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot use the same id as the graph ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r9.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label3:
        $r1 = r0.<androidx.navigation.NavGraph: java.lang.String startDestinationRoute>;

        if $r1 == null goto label4;

        specialinvoke r0.<androidx.navigation.NavGraph: void setStartDestinationRoute(java.lang.String)>(null);

     label4:
        r0.<androidx.navigation.NavGraph: int startDestId> = i0;

        r0.<androidx.navigation.NavGraph: java.lang.String startDestIdName> = null;

        return;
    }

    public final void setStartDestination(int)
    {
        androidx.navigation.NavGraph r0;
        int i0;

        r0 := @this: androidx.navigation.NavGraph;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.navigation.NavGraph: void setStartDestinationId(int)>(i0);

        return;
    }

    public final void setStartDestination(java.lang.String)
    {
        androidx.navigation.NavGraph r0;
        java.lang.String r1;

        r0 := @this: androidx.navigation.NavGraph;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "startDestRoute");

        specialinvoke r0.<androidx.navigation.NavGraph: void setStartDestinationRoute(java.lang.String)>(r1);

        return;
    }

    public final java.lang.String getStartDestinationRoute()
    {
        androidx.navigation.NavGraph r0;
        java.lang.String $r1;

        r0 := @this: androidx.navigation.NavGraph;

        $r1 = r0.<androidx.navigation.NavGraph: java.lang.String startDestinationRoute>;

        return $r1;
    }

    private final void setStartDestinationRoute(java.lang.String)
    {
        androidx.navigation.NavGraph r0, r16, r18;
        java.lang.String r1, r2, $r3, $r7, $r14, $r17, $r19;
        boolean $z0, $z1, $z2, $z4;
        java.lang.CharSequence $r4;
        androidx.navigation.NavDestination$Companion $r5;
        java.lang.IllegalArgumentException $r6, $r13;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12;
        int $i0;

        r0 := @this: androidx.navigation.NavGraph;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $i0 = 0;

        goto label8;

     label1:
        $r3 = virtualinvoke r0.<androidx.navigation.NavGraph: java.lang.String getRoute()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, $r3);

        if $z0 != 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        if $z2 != 0 goto label4;

        r16 = r0;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Start destination ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot use the same route as the graph ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r17 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = new java.lang.IllegalArgumentException;

        $r14 = virtualinvoke $r17.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r13;

     label4:
        $r4 = (java.lang.CharSequence) r1;

        $z1 = staticinvoke <kotlin.text.StringsKt: boolean isBlank(java.lang.CharSequence)>($r4);

        if $z1 != 0 goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        if $z4 != 0 goto label7;

        r18 = r0;

        $r19 = "Cannot have an empty start destination route";

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r19.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label7:
        $r5 = <androidx.navigation.NavDestination: androidx.navigation.NavDestination$Companion Companion>;

        r2 = virtualinvoke $r5.<androidx.navigation.NavDestination$Companion: java.lang.String createRoute(java.lang.String)>(r1);

        $i0 = virtualinvoke r2.<java.lang.String: int hashCode()>();

     label8:
        r0.<androidx.navigation.NavGraph: int startDestId> = $i0;

        r0.<androidx.navigation.NavGraph: java.lang.String startDestinationRoute> = r1;

        return;
    }

    public final java.lang.String getStartDestDisplayName()
    {
        androidx.navigation.NavGraph r0;
        java.lang.String $r1, $r3, $r4;
        int $i0;

        r0 := @this: androidx.navigation.NavGraph;

        $r1 = r0.<androidx.navigation.NavGraph: java.lang.String startDestIdName>;

        if $r1 != null goto label2;

        $r3 = r0.<androidx.navigation.NavGraph: java.lang.String startDestinationRoute>;

        if $r3 != null goto label1;

        $i0 = r0.<androidx.navigation.NavGraph: int startDestId>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

     label1:
        r0.<androidx.navigation.NavGraph: java.lang.String startDestIdName> = $r3;

     label2:
        $r4 = r0.<androidx.navigation.NavGraph: java.lang.String startDestIdName>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r4);

        return $r4;
    }

    public java.lang.String toString()
    {
        androidx.navigation.NavGraph r0;
        java.lang.StringBuilder r1, $r3, $r14, $r15, $r17;
        androidx.navigation.NavDestination r2, $r24;
        java.lang.String $r4, $r6, $r9, $r12, $r13, $r16, $r18, $r20, $r22, $r25;
        int $i0, $i1;

        r0 := @this: androidx.navigation.NavGraph;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r1 = $r3;

        $r4 = specialinvoke r0.<androidx.navigation.NavDestination: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = r0.<androidx.navigation.NavGraph: java.lang.String startDestinationRoute>;

        $r24 = virtualinvoke r0.<androidx.navigation.NavGraph: androidx.navigation.NavDestination findNode(java.lang.String)>($r6);

        if $r24 != null goto label1;

        $i1 = virtualinvoke r0.<androidx.navigation.NavGraph: int getStartDestinationId()>();

        $r24 = virtualinvoke r0.<androidx.navigation.NavGraph: androidx.navigation.NavDestination findNode(int)>($i1);

     label1:
        r2 = $r24;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" startDestination=");

        if r2 != null goto label4;

        $r12 = r0.<androidx.navigation.NavGraph: java.lang.String startDestinationRoute>;

        if $r12 == null goto label2;

        $r22 = r0.<androidx.navigation.NavGraph: java.lang.String startDestinationRoute>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        goto label5;

     label2:
        $r13 = r0.<androidx.navigation.NavGraph: java.lang.String startDestIdName>;

        if $r13 == null goto label3;

        $r20 = r0.<androidx.navigation.NavGraph: java.lang.String startDestIdName>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        goto label5;

     label3:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $i0 = r0.<androidx.navigation.NavGraph: int startDestId>;

        $r16 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        goto label5;

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        $r9 = virtualinvoke r2.<androidx.navigation.NavDestination: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

     label5:
        $r25 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r25, "sb.toString()");

        return $r25;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.navigation.NavGraph r0, $r9, $r11, $r12;
        java.lang.Object r1, r4;
        java.util.List r2;
        java.util.Iterator r3, $r7;
        androidx.navigation.NavDestination r5;
        boolean $z1, $z2, $z3, $z4, $z9;
        androidx.collection.SparseArrayCompat $r6, $r10, $r13, $r14;
        kotlin.sequences.Sequence $r8;
        int $i0, $i1, $i2, $i3;

        r0 := @this: androidx.navigation.NavGraph;

        r1 := @parameter0: java.lang.Object;

        if r1 == null goto label1;

        $z1 = r1 instanceof androidx.navigation.NavGraph;

        if $z1 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r6 = r0.<androidx.navigation.NavGraph: androidx.collection.SparseArrayCompat nodes>;

        $r7 = staticinvoke <androidx.collection.SparseArrayKt: java.util.Iterator valueIterator(androidx.collection.SparseArrayCompat)>($r6);

        $r8 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence asSequence(java.util.Iterator)>($r7);

        r2 = staticinvoke <kotlin.sequences.SequencesKt: java.util.List toMutableList(kotlin.sequences.Sequence)>($r8);

        $r9 = (androidx.navigation.NavGraph) r1;

        $r10 = $r9.<androidx.navigation.NavGraph: androidx.collection.SparseArrayCompat nodes>;

        r3 = staticinvoke <androidx.collection.SparseArrayKt: java.util.Iterator valueIterator(androidx.collection.SparseArrayCompat)>($r10);

     label3:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.navigation.NavDestination) r4;

        interfaceinvoke r2.<java.util.List: boolean remove(java.lang.Object)>(r5);

        goto label3;

     label4:
        $z3 = specialinvoke r0.<androidx.navigation.NavDestination: boolean equals(java.lang.Object)>(r1);

        if $z3 == 0 goto label5;

        $r13 = r0.<androidx.navigation.NavGraph: androidx.collection.SparseArrayCompat nodes>;

        $i0 = virtualinvoke $r13.<androidx.collection.SparseArrayCompat: int size()>();

        $r11 = (androidx.navigation.NavGraph) r1;

        $r14 = $r11.<androidx.navigation.NavGraph: androidx.collection.SparseArrayCompat nodes>;

        $i1 = virtualinvoke $r14.<androidx.collection.SparseArrayCompat: int size()>();

        if $i0 != $i1 goto label5;

        $i2 = virtualinvoke r0.<androidx.navigation.NavGraph: int getStartDestinationId()>();

        $r12 = (androidx.navigation.NavGraph) r1;

        $i3 = virtualinvoke $r12.<androidx.navigation.NavGraph: int getStartDestinationId()>();

        if $i2 != $i3 goto label5;

        $z4 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z4 == 0 goto label5;

        $z9 = 1;

        goto label6;

     label5:
        $z9 = 0;

     label6:
        return $z9;
    }

    public int hashCode()
    {
        androidx.navigation.NavGraph r0;
        androidx.collection.SparseArrayCompat $r1;
        int i0, i1, $i2, $i3, $i4, $i5, i6, i7, i8;
        androidx.navigation.NavDestination r2;
        java.lang.Object $r3;
        boolean z2;

        r0 := @this: androidx.navigation.NavGraph;

        z2 = 0;

        i6 = virtualinvoke r0.<androidx.navigation.NavGraph: int getStartDestinationId()>();

        $r1 = r0.<androidx.navigation.NavGraph: androidx.collection.SparseArrayCompat nodes>;

        i7 = 0;

        i0 = virtualinvoke $r1.<androidx.collection.SparseArrayCompat: int size()>();

     label1:
        if i7 >= i0 goto label2;

        $i2 = virtualinvoke $r1.<androidx.collection.SparseArrayCompat: int keyAt(int)>(i7);

        $r3 = virtualinvoke $r1.<androidx.collection.SparseArrayCompat: java.lang.Object valueAt(int)>(i7);

        r2 = (androidx.navigation.NavDestination) $r3;

        i1 = $i2;

        $i3 = 31 * i6;

        i8 = $i3 + i1;

        $i4 = 31 * i8;

        $i5 = virtualinvoke r2.<androidx.navigation.NavDestination: int hashCode()>();

        i6 = $i4 + $i5;

        i7 = i7 + 1;

        goto label1;

     label2:
        return i6;
    }

    public static final androidx.navigation.NavDestination findStartDestination(androidx.navigation.NavGraph)
    {
        androidx.navigation.NavGraph $r0;
        androidx.navigation.NavGraph$Companion $r1;
        androidx.navigation.NavDestination $r2;

        $r0 := @parameter0: androidx.navigation.NavGraph;

        $r1 = <androidx.navigation.NavGraph: androidx.navigation.NavGraph$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.navigation.NavGraph$Companion: androidx.navigation.NavDestination findStartDestination(androidx.navigation.NavGraph)>($r0);

        return $r2;
    }

    static void <clinit>()
    {
        androidx.navigation.NavGraph$Companion $r0;

        $r0 = new androidx.navigation.NavGraph$Companion;

        specialinvoke $r0.<androidx.navigation.NavGraph$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.navigation.NavGraph: androidx.navigation.NavGraph$Companion Companion> = $r0;

        return;
    }

androidx.navigation.NavGraph$Companion$findStartDestination$1
<androidx.navigation.NavGraph$Companion$findStartDestination$1: androidx.navigation.NavGraph$Companion$findStartDestination$1 INSTANCE>
    void <init>()
    {
        androidx.navigation.NavGraph$Companion$findStartDestination$1 r0;

        r0 := @this: androidx.navigation.NavGraph$Companion$findStartDestination$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final androidx.navigation.NavDestination invoke(androidx.navigation.NavDestination)
    {
        androidx.navigation.NavGraph$Companion$findStartDestination$1 r0;
        androidx.navigation.NavDestination r1, $r4;
        boolean $z0;
        androidx.navigation.NavGraph $r2, $r3;
        int $i0;

        r0 := @this: androidx.navigation.NavGraph$Companion$findStartDestination$1;

        r1 := @parameter0: androidx.navigation.NavDestination;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $z0 = r1 instanceof androidx.navigation.NavGraph;

        if $z0 == 0 goto label1;

        $r3 = (androidx.navigation.NavGraph) r1;

        $r2 = (androidx.navigation.NavGraph) r1;

        $i0 = virtualinvoke $r2.<androidx.navigation.NavGraph: int getStartDestinationId()>();

        $r4 = virtualinvoke $r3.<androidx.navigation.NavGraph: androidx.navigation.NavDestination findNode(int)>($i0);

        goto label2;

     label1:
        $r4 = (androidx.navigation.NavDestination) null;

     label2:
        return $r4;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.navigation.NavGraph$Companion$findStartDestination$1 r0;
        java.lang.Object r1;
        androidx.navigation.NavDestination $r2, $r3;

        r0 := @this: androidx.navigation.NavGraph$Companion$findStartDestination$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.navigation.NavDestination) r1;

        $r3 = virtualinvoke r0.<androidx.navigation.NavGraph$Companion$findStartDestination$1: androidx.navigation.NavDestination invoke(androidx.navigation.NavDestination)>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        androidx.navigation.NavGraph$Companion$findStartDestination$1 $r0;

        $r0 = new androidx.navigation.NavGraph$Companion$findStartDestination$1;

        specialinvoke $r0.<androidx.navigation.NavGraph$Companion$findStartDestination$1: void <init>()>();

        <androidx.navigation.NavGraph$Companion$findStartDestination$1: androidx.navigation.NavGraph$Companion$findStartDestination$1 INSTANCE> = $r0;

        return;
    }

androidx.navigation.NavGraph$Companion
    private void <init>()
    {
        androidx.navigation.NavGraph$Companion r0;

        r0 := @this: androidx.navigation.NavGraph$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.navigation.NavDestination findStartDestination(androidx.navigation.NavGraph)
    {
        androidx.navigation.NavGraph$Companion r0;
        androidx.navigation.NavGraph $r1;
        int $i0;
        androidx.navigation.NavDestination $r2, $r7;
        androidx.navigation.NavGraph$Companion$findStartDestination$1 $r3;
        kotlin.jvm.functions.Function1 $r4;
        kotlin.sequences.Sequence $r5;
        java.lang.Object $r6;

        r0 := @this: androidx.navigation.NavGraph$Companion;

        $r1 := @parameter0: androidx.navigation.NavGraph;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = virtualinvoke $r1.<androidx.navigation.NavGraph: int getStartDestinationId()>();

        $r2 = virtualinvoke $r1.<androidx.navigation.NavGraph: androidx.navigation.NavDestination findNode(int)>($i0);

        $r3 = <androidx.navigation.NavGraph$Companion$findStartDestination$1: androidx.navigation.NavGraph$Companion$findStartDestination$1 INSTANCE>;

        $r4 = (kotlin.jvm.functions.Function1) $r3;

        $r5 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence generateSequence(java.lang.Object,kotlin.jvm.functions.Function1)>($r2, $r4);

        $r6 = staticinvoke <kotlin.sequences.SequencesKt: java.lang.Object last(kotlin.sequences.Sequence)>($r5);

        $r7 = (androidx.navigation.NavDestination) $r6;

        return $r7;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.navigation.NavGraph$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.navigation.NavGraph$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.navigation.NavGraph$Companion: void <init>()>();

        return;
    }

androidx.navigation.NavGraph$iterator$1
<androidx.navigation.NavGraph$iterator$1: int index>
<androidx.navigation.NavGraph$iterator$1: boolean wentToNext>
<androidx.navigation.NavGraph$iterator$1: androidx.navigation.NavGraph this$0>
    void <init>(androidx.navigation.NavGraph)
    {
        androidx.navigation.NavGraph$iterator$1 r0;
        androidx.navigation.NavGraph $r1;

        r0 := @this: androidx.navigation.NavGraph$iterator$1;

        $r1 := @parameter0: androidx.navigation.NavGraph;

        r0.<androidx.navigation.NavGraph$iterator$1: androidx.navigation.NavGraph this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.navigation.NavGraph$iterator$1: int index> = -1;

        return;
    }

    public boolean hasNext()
    {
        androidx.navigation.NavGraph$iterator$1 r0;
        int $i0, $i1, $i2;
        androidx.navigation.NavGraph $r1;
        androidx.collection.SparseArrayCompat $r2;
        boolean $z0;

        r0 := @this: androidx.navigation.NavGraph$iterator$1;

        $i0 = r0.<androidx.navigation.NavGraph$iterator$1: int index>;

        $i1 = $i0 + 1;

        $r1 = r0.<androidx.navigation.NavGraph$iterator$1: androidx.navigation.NavGraph this$0>;

        $r2 = virtualinvoke $r1.<androidx.navigation.NavGraph: androidx.collection.SparseArrayCompat getNodes()>();

        $i2 = virtualinvoke $r2.<androidx.collection.SparseArrayCompat: int size()>();

        if $i1 >= $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public androidx.navigation.NavDestination next()
    {
        androidx.navigation.NavGraph$iterator$1 r0;
        boolean $z0;
        androidx.navigation.NavGraph $r1;
        androidx.collection.SparseArrayCompat $r2;
        int $i0, $i1, $i2;
        java.lang.Object $r3;
        androidx.navigation.NavDestination $r4;
        java.util.NoSuchElementException $r5;

        r0 := @this: androidx.navigation.NavGraph$iterator$1;

        $z0 = virtualinvoke r0.<androidx.navigation.NavGraph$iterator$1: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>()>();

        throw $r5;

     label1:
        r0.<androidx.navigation.NavGraph$iterator$1: boolean wentToNext> = 1;

        $r1 = r0.<androidx.navigation.NavGraph$iterator$1: androidx.navigation.NavGraph this$0>;

        $r2 = virtualinvoke $r1.<androidx.navigation.NavGraph: androidx.collection.SparseArrayCompat getNodes()>();

        $i0 = r0.<androidx.navigation.NavGraph$iterator$1: int index>;

        $i1 = $i0 + 1;

        r0.<androidx.navigation.NavGraph$iterator$1: int index> = $i1;

        $i2 = r0.<androidx.navigation.NavGraph$iterator$1: int index>;

        $r3 = virtualinvoke $r2.<androidx.collection.SparseArrayCompat: java.lang.Object valueAt(int)>($i2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "nodes.valueAt(++index)");

        $r4 = (androidx.navigation.NavDestination) $r3;

        return $r4;
    }

    public void remove()
    {
        androidx.navigation.NavGraph$iterator$1 r0;
        int i0, $i1, $i2, $i3;
        boolean $z1;
        androidx.navigation.NavGraph $r1;
        java.lang.Object $r2;
        androidx.navigation.NavDestination $r3;
        java.lang.IllegalStateException $r4;
        java.lang.String $r5, $r6;
        androidx.collection.SparseArrayCompat $r7;

        r0 := @this: androidx.navigation.NavGraph$iterator$1;

        $z1 = r0.<androidx.navigation.NavGraph$iterator$1: boolean wentToNext>;

        if $z1 != 0 goto label1;

        $r6 = "You must call next() before you can remove an element";

        $r4 = new java.lang.IllegalStateException;

        $r5 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label1:
        $r1 = r0.<androidx.navigation.NavGraph$iterator$1: androidx.navigation.NavGraph this$0>;

        $r7 = virtualinvoke $r1.<androidx.navigation.NavGraph: androidx.collection.SparseArrayCompat getNodes()>();

        $i1 = r0.<androidx.navigation.NavGraph$iterator$1: int index>;

        $r2 = virtualinvoke $r7.<androidx.collection.SparseArrayCompat: java.lang.Object valueAt(int)>($i1);

        $r3 = (androidx.navigation.NavDestination) $r2;

        virtualinvoke $r3.<androidx.navigation.NavDestination: void setParent(androidx.navigation.NavGraph)>(null);

        $i2 = r0.<androidx.navigation.NavGraph$iterator$1: int index>;

        virtualinvoke $r7.<androidx.collection.SparseArrayCompat: void removeAt(int)>($i2);

        i0 = r0.<androidx.navigation.NavGraph$iterator$1: int index>;

        $i3 = i0 + -1;

        r0.<androidx.navigation.NavGraph$iterator$1: int index> = $i3;

        r0.<androidx.navigation.NavGraph$iterator$1: boolean wentToNext> = 0;

        return;
    }

    public volatile java.lang.Object next()
    {
        androidx.navigation.NavGraph$iterator$1 r0;
        androidx.navigation.NavDestination $r1;

        r0 := @this: androidx.navigation.NavGraph$iterator$1;

        $r1 = virtualinvoke r0.<androidx.navigation.NavGraph$iterator$1: androidx.navigation.NavDestination next()>();

        return $r1;
    }

