androidx.compose.ui.res.VectorResources_androidKt
    public static final androidx.compose.ui.graphics.vector.ImageVector vectorResource(androidx.compose.ui.graphics.vector.ImageVector$Companion, int, androidx.compose.runtime.Composer, int)
    {
        androidx.compose.ui.graphics.vector.ImageVector$Companion $r0;
        int i0, $i1, i4, $i5;
        androidx.compose.runtime.Composer $r1;
        android.content.Context r2;
        java.lang.Object r3, $r9, r11, r16, $r18, r19;
        androidx.compose.ui.graphics.vector.ImageVector r4, $r20;
        boolean $z3, $z4, $z5, z7, z8;
        androidx.compose.runtime.ProvidableCompositionLocal $r5;
        java.lang.Integer $r6;
        android.content.res.Configuration $r7;
        androidx.compose.runtime.Composer$Companion $r8;
        androidx.compose.runtime.CompositionLocal r10;
        android.content.res.Resources r12;
        android.content.res.Resources$Theme $r13;
        java.lang.Object[] r14, r15;

        $r0 := @parameter0: androidx.compose.ui.graphics.vector.ImageVector$Companion;

        i0 := @parameter1: int;

        $r1 := @parameter2: androidx.compose.runtime.Composer;

        $i1 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(44534090);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r1, "C(vectorResource)48@1967L7,49@1989L11,52@2043L90:VectorResources.android.kt#ccshc7");

        $z3 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z3 == 0 goto label1;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(44534090, $i1, -1, "androidx.compose.ui.res.vectorResource (VectorResources.android.kt:47)");

     label1:
        $r5 = staticinvoke <androidx.compose.ui.platform.AndroidCompositionLocals_androidKt: androidx.compose.runtime.ProvidableCompositionLocal getLocalContext()>();

        r10 = (androidx.compose.runtime.CompositionLocal) $r5;

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformationMarkerStart(androidx.compose.runtime.Composer,int,java.lang.String)>($r1, 2023513938, "C:CompositionLocal.kt#9igjgp");

        r11 = interfaceinvoke $r1.<androidx.compose.runtime.Composer: java.lang.Object consume(androidx.compose.runtime.CompositionLocal)>(r10);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformationMarkerEnd(androidx.compose.runtime.Composer)>($r1);

        r2 = (android.content.Context) r11;

        r12 = staticinvoke <androidx.compose.ui.res.Resources_androidKt: android.content.res.Resources resources(androidx.compose.runtime.Composer,int)>($r1, 0);

        $r13 = virtualinvoke r2.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        r14 = newarray (java.lang.Object)[4];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r14[0] = $r6;

        r14[1] = r12;

        r14[2] = $r13;

        $r7 = virtualinvoke r12.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        r14[3] = $r7;

        r15 = r14;

        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-568225417);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r1, "C(remember)P(1):Composables.kt#9igjgp");

        z7 = 0;

        i4 = 0;

        $i5 = lengthof r15;

     label2:
        if i4 >= $i5 goto label3;

        r16 = r15[i4];

        $z5 = interfaceinvoke $r1.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>(r16);

        z7 = z7 | $z5;

        i4 = i4 + 1;

        goto label2;

     label3:
        z8 = 0;

        r3 = interfaceinvoke $r1.<androidx.compose.runtime.Composer: java.lang.Object rememberedValue()>();

        if z7 != 0 goto label4;

        $r8 = <androidx.compose.runtime.Composer: androidx.compose.runtime.Composer$Companion Companion>;

        $r9 = virtualinvoke $r8.<androidx.compose.runtime.Composer$Companion: java.lang.Object getEmpty()>();

        if r3 != $r9 goto label5;

     label4:
        r4 = staticinvoke <androidx.compose.ui.res.VectorResources_androidKt: androidx.compose.ui.graphics.vector.ImageVector vectorResource(androidx.compose.ui.graphics.vector.ImageVector$Companion,android.content.res.Resources$Theme,android.content.res.Resources,int)>($r0, $r13, r12, i0);

        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void updateRememberedValue(java.lang.Object)>(r4);

        $r18 = r4;

        goto label6;

     label5:
        $r18 = r3;

     label6:
        r19 = $r18;

        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        $r20 = (androidx.compose.ui.graphics.vector.ImageVector) r19;

        $z4 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z4 == 0 goto label7;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

     label7:
        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        return $r20;
    }

    public static final androidx.compose.ui.graphics.vector.ImageVector vectorResource(androidx.compose.ui.graphics.vector.ImageVector$Companion, android.content.res.Resources$Theme, android.content.res.Resources, int) throws org.xmlpull.v1.XmlPullParserException
    {
        androidx.compose.ui.graphics.vector.ImageVector$Companion $r0;
        android.content.res.Resources$Theme r1, r6;
        android.content.res.Resources r2, r7;
        int i0, $i1;
        android.util.TypedValue r3, $r9;
        android.content.res.XmlResourceParser r4;
        kotlin.Unit r8;
        org.xmlpull.v1.XmlPullParser $r10;
        androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry $r12;
        androidx.compose.ui.graphics.vector.ImageVector $r13;

        $r0 := @parameter0: androidx.compose.ui.graphics.vector.ImageVector$Companion;

        r1 := @parameter1: android.content.res.Resources$Theme;

        r2 := @parameter2: android.content.res.Resources;

        i0 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "res");

        $r9 = new android.util.TypedValue;

        specialinvoke $r9.<android.util.TypedValue: void <init>()>();

        r3 = $r9;

        virtualinvoke r2.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>(i0, r3, 1);

        r4 = virtualinvoke r2.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(i0);

        r7 = r2;

        r6 = r1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r4, "");

        $r10 = (org.xmlpull.v1.XmlPullParser) r4;

        staticinvoke <androidx.compose.ui.graphics.vector.compat.XmlVectorParser_androidKt: org.xmlpull.v1.XmlPullParser seekToStartTag(org.xmlpull.v1.XmlPullParser)>($r10);

        r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r4, "res.getXml(resId).apply { seekToStartTag() }");

        $i1 = r3.<android.util.TypedValue: int changingConfigurations>;

        $r12 = staticinvoke <androidx.compose.ui.res.VectorResources_androidKt: androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry loadVectorResourceInner(android.content.res.Resources$Theme,android.content.res.Resources,android.content.res.XmlResourceParser,int)>(r6, r7, r4, $i1);

        $r13 = virtualinvoke $r12.<androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry: androidx.compose.ui.graphics.vector.ImageVector getImageVector()>();

        return $r13;
    }

    public static androidx.compose.ui.graphics.vector.ImageVector vectorResource$default(androidx.compose.ui.graphics.vector.ImageVector$Companion, android.content.res.Resources$Theme, android.content.res.Resources, int, int, java.lang.Object) throws org.xmlpull.v1.XmlPullParserException
    {
        androidx.compose.ui.graphics.vector.ImageVector$Companion r0;
        android.content.res.Resources r1;
        int i0, i1, $i2;
        java.lang.Object r2;
        androidx.compose.ui.graphics.vector.ImageVector $r3;
        android.content.res.Resources$Theme r4;

        r0 := @parameter0: androidx.compose.ui.graphics.vector.ImageVector$Companion;

        r4 := @parameter1: android.content.res.Resources$Theme;

        r1 := @parameter2: android.content.res.Resources;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r2 := @parameter5: java.lang.Object;

        $i2 = i1 & 1;

        if $i2 == 0 goto label1;

        r4 = null;

     label1:
        $r3 = staticinvoke <androidx.compose.ui.res.VectorResources_androidKt: androidx.compose.ui.graphics.vector.ImageVector vectorResource(androidx.compose.ui.graphics.vector.ImageVector$Companion,android.content.res.Resources$Theme,android.content.res.Resources,int)>(r0, r4, r1, i0);

        return $r3;
    }

    public static final androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry loadVectorResourceInner(android.content.res.Resources$Theme, android.content.res.Resources, android.content.res.XmlResourceParser, int) throws org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.Resources$Theme r0;
        android.content.res.Resources r1;
        android.content.res.XmlResourceParser r2;
        int i0, i2;
        android.util.AttributeSet r3;
        androidx.compose.ui.graphics.vector.compat.AndroidVectorParser r4, $r7;
        androidx.compose.ui.graphics.vector.ImageVector$Builder r5;
        org.xmlpull.v1.XmlPullParser $r6, $r8, $r9;
        boolean $z0;
        androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry $r10;
        androidx.compose.ui.graphics.vector.ImageVector $r11;

        r0 := @parameter0: android.content.res.Resources$Theme;

        r1 := @parameter1: android.content.res.Resources;

        r2 := @parameter2: android.content.res.XmlResourceParser;

        i0 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "res");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "parser");

        $r6 = (org.xmlpull.v1.XmlPullParser) r2;

        r3 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r6);

        $r7 = new androidx.compose.ui.graphics.vector.compat.AndroidVectorParser;

        $r8 = (org.xmlpull.v1.XmlPullParser) r2;

        specialinvoke $r7.<androidx.compose.ui.graphics.vector.compat.AndroidVectorParser: void <init>(org.xmlpull.v1.XmlPullParser,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r8, 0, 2, null);

        r4 = $r7;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "attrs");

        r5 = staticinvoke <androidx.compose.ui.graphics.vector.compat.XmlVectorParser_androidKt: androidx.compose.ui.graphics.vector.ImageVector$Builder createVectorImageBuilder(androidx.compose.ui.graphics.vector.compat.AndroidVectorParser,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet)>(r4, r1, r0, r3);

        i2 = 0;

     label1:
        $r9 = (org.xmlpull.v1.XmlPullParser) r2;

        $z0 = staticinvoke <androidx.compose.ui.graphics.vector.compat.XmlVectorParser_androidKt: boolean isAtEnd(org.xmlpull.v1.XmlPullParser)>($r9);

        if $z0 != 0 goto label2;

        i2 = staticinvoke <androidx.compose.ui.graphics.vector.compat.XmlVectorParser_androidKt: int parseCurrentVectorNode(androidx.compose.ui.graphics.vector.compat.AndroidVectorParser,android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,androidx.compose.ui.graphics.vector.ImageVector$Builder,int)>(r4, r1, r3, r0, r5, i2);

        interfaceinvoke r2.<android.content.res.XmlResourceParser: int next()>();

        goto label1;

     label2:
        $r10 = new androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry;

        $r11 = virtualinvoke r5.<androidx.compose.ui.graphics.vector.ImageVector$Builder: androidx.compose.ui.graphics.vector.ImageVector build()>();

        specialinvoke $r10.<androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry: void <init>(androidx.compose.ui.graphics.vector.ImageVector,int)>($r11, i0);

        return $r10;
    }

    public static androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry loadVectorResourceInner$default(android.content.res.Resources$Theme, android.content.res.Resources, android.content.res.XmlResourceParser, int, int, java.lang.Object) throws org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.Resources r0;
        android.content.res.XmlResourceParser r1;
        int i0, i1, $i2;
        java.lang.Object r2;
        androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry $r3;
        android.content.res.Resources$Theme r4;

        r4 := @parameter0: android.content.res.Resources$Theme;

        r0 := @parameter1: android.content.res.Resources;

        r1 := @parameter2: android.content.res.XmlResourceParser;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r2 := @parameter5: java.lang.Object;

        $i2 = i1 & 1;

        if $i2 == 0 goto label1;

        r4 = null;

     label1:
        $r3 = staticinvoke <androidx.compose.ui.res.VectorResources_androidKt: androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry loadVectorResourceInner(android.content.res.Resources$Theme,android.content.res.Resources,android.content.res.XmlResourceParser,int)>(r4, r0, r1, i0);

        return $r3;
    }

